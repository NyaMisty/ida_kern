struct $0B605D7B00AC5C12C153272CF5BD15AF {uint16 low;uint16 high;};
struct $37EC8ECBAB39934116D1B12D6D12C693 {uval_t frame;asize_t frsize;ushort frregs;asize_t argsize;asize_t fpd;bgcolor_t color;uint32 pntqty;stkpnt_t *points;int regvarqty;regvar_t *regvars;int llabelqty;llabel_t *llabels;int regargqty;regarg_t *regargs;int tailqty;range_t *tails;};
enum $7014156F94AE1B7FC5F5E3560392A8C4 : __int32 {DTN_FULL_NAME = 0x0,DTN_DISPLAY_NAME = 0x1,};
enum $94D4D585A38CDA12BD4A7F760DAFD340 : __int32 {JT_NONE = 0x0,JT_SWITCH = 0x1,JT_CALL = 0x2,};
enum $A32948CF266C727D9CC1D79F2B35CC28 : __int32 {QMOVE_CROSS_FS = 0x1,QMOVE_OVERWRITE = 0x2,QMOVE_OVR_RO = 0x4,};
struct $C21FB2E1BAA97F44BFD298211C4C916B {bool (*ptr)(void);size_t adj;};
enum $C7C212E52085C0E483DB7F2B4EDAB218 : __int32 {REG_ASSERT = 0x1,REG_BADBR = 0x2,REG_BADPAT = 0x3,REG_BADRPT = 0x4,REG_EBRACE = 0x5,REG_EBRACK = 0x6,REG_ECOLLATE = 0x7,REG_ECTYPE = 0x8,REG_EESCAPE = 0x9,REG_EMPTY = 0xA,REG_EPAREN = 0xB,REG_ERANGE = 0xC,REG_ESIZE = 0xD,REG_ESPACE = 0xE,REG_ESUBREG = 0xF,REG_INVARG = 0x10,REG_NOMATCH = 0x11,};
struct $EBE02DBEC342F8268AFE19180D75885B {ea_t owner;int refqty;ea_t *referers;};
typedef _iobuf FILE;
enum ISA_AVAILABILITY : __int32 {__ISA_AVAILABLE_X86 = 0x0,__ISA_AVAILABLE_SSE2 = 0x1,__ISA_AVAILABLE_SSE42 = 0x2,__ISA_AVAILABLE_AVX = 0x3,__ISA_AVAILABLE_ENFSTRG = 0x4,__ISA_AVAILABLE_AVX2 = 0x5,__ISA_AVAILABLE_AVX512 = 0x6,__ISA_AVAILABLE_ARMNT = 0x0,__ISA_AVAILABLE_NEON = 0x1,__ISA_AVAILABLE_NEON_ARM64 = 0x2,};
struct MD5Context {uint32 buf[4];uint32 bits[2];unsigned __int8 in[64];};
struct __cppobj TPointDouble {double x;double y;};
struct TPopupMenu;
struct TWidget;
typedef int (__cdecl *_CRT_ALLOC_HOOK)(int, void *, size_t, int, __int32, const unsigned __int8 *, int);
struct _CRT_DOUBLE {double x;};
typedef void (__cdecl *_CRT_DUMP_CLIENT)(void *, size_t);
struct _CRT_FLOAT {float f;};
typedef int (__cdecl *_CRT_REPORT_HOOK)(int, char *, int *);
typedef int (__cdecl *_CRT_REPORT_HOOKW)(int, __int16 *, int *);
struct _Combined_type<float, double> {};
struct _Combined_type<float, long double> {};
typedef int (__cdecl *_CoreCrtNonSecureSearchSortCompareFunction)(const void *, const void *);
typedef int (__cdecl *_CoreCrtSecureSearchSortCompareFunction)(void *, const void *, const void *);
struct _CrtMemBlockHeader;
struct _CrtMemState {_CrtMemBlockHeader *pBlockHeader;size_t lCounts[5];size_t lSizes[5];size_t lHighWaterCount;size_t lTotalCount;};
struct _EXCEPTION_POINTERS;
typedef _heapinfo _HEAPINFO;
typedef void *_HFILE;
struct _LDBL12 {unsigned __int8 ld12[12];};
struct _LDOUBLE {unsigned __int8 ld[10];};
struct _LONGDOUBLE {long double x;};
typedef mbstate_t _Mbstatet;
struct _Real_type<float> {};
struct _Real_type<long double> {};
struct _Real_widened<double, double> {};
struct _Real_widened<double, float> {};
struct _Real_widened<float, double> {};
struct _Real_widened<float, float> {};
typedef __int16 _Wint_t;
typedef bool __crt_bool;
struct __crt_locale_data;
struct __crt_locale_data_public {const unsigned __int16 *_locale_pctype;int _locale_mb_cur_max;unsigned int _locale_lc_codepage;};
struct __crt_locale_pointers {__crt_locale_data *locinfo;__crt_multibyte_data *mbcinfo;};
struct __crt_multibyte_data;
struct __finddata64_t {unsigned int attrib;__time64_t time_create;__time64_t time_access;__time64_t time_write;__int64 size;char name[260];};
struct __qmutex_t {};
struct __qsemaphore_t {};
struct __qthread_t {};
struct __qtimer_t {};
struct __std_exception_data {const char *_What;bool _DoFree;};
typedef __int32 __time32_t;
typedef __int64 __time64_t;
typedef bool __vcrt_bool;
struct _complex {double x;double y;};
typedef unsigned int _dev_t;
struct _diskfree_t {unsigned int total_clusters;unsigned int avail_clusters;unsigned int sectors_per_cluster;unsigned int bytes_per_sector;};
struct _div_t {int quot;int rem;};
union _double_val {unsigned __int16 _Sh[4];double _Val;};
struct _exception {int type;char *name;double arg1;double arg2;double retval;};
struct _finddata32_t {unsigned int attrib;__time32_t time_create;__time32_t time_access;__time32_t time_write;_fsize_t size;char name[260];};
struct _finddata32i64_t {unsigned int attrib;__time32_t time_create;__time32_t time_access;__time32_t time_write;__int64 size;char name[260];};
struct _finddata64i32_t {unsigned int attrib;__time64_t time_create;__time64_t time_access;__time64_t time_write;_fsize_t size;char name[260];};
union _float_const {unsigned __int16 _Word[4];float _Float;double _Double;long double _Long_double;};
union _float_val {unsigned __int16 _Sh[2];float _Val;};
typedef unsigned __int32 _fsize_t;
struct _heapinfo {int *_pentry;size_t _size;int _useflag;};
typedef unsigned __int16 _ino_t;
typedef void (__cdecl *_invalid_parameter_handler)(const __int16 *, const __int16 *, const __int16 *, unsigned int, uintptr_t);
struct _iobuf {void *_Placeholder;};
struct _ldiv_t {__int32 quot;__int32 rem;};
union _ldouble_val {unsigned __int16 _Sh[4];long double _Val;};
struct _lldiv_t {__int64 quot;__int64 rem;};
typedef __crt_locale_pointers *_locale_t;
typedef __int32 _off_t;
typedef int (*_onexit_t)(void);
typedef void (*_purecall_handler)(void);
struct __cppobj _qstring<char> {qvector<char> body;};
typedef char *_qstring<char>::const_iterator;
typedef char *_qstring<char>::iterator;
struct __cppobj _qstring<unsigned char> {qvector<unsigned char> body;};
typedef unsigned __int8 *_qstring<unsigned char>::const_iterator;
typedef unsigned __int8 *_qstring<unsigned char>::iterator;
struct __cppobj _qstring<wchar_t> {qvector<wchar_t> body;};
typedef __int16 *_qstring<wchar_t>::const_iterator;
typedef __int16 *_qstring<wchar_t>::iterator;
typedef void (__cdecl *_se_translator_function)(unsigned int, _EXCEPTION_POINTERS *);
typedef qiterator<qrefcnt_t<source_file_t>> _source_file_iterator;
typedef qiterator<qrefcnt_t<source_item_t>> _source_item_iterator;
struct _stat32 {_dev_t st_dev;_ino_t st_ino;unsigned __int16 st_mode;__int16 st_nlink;__int16 st_uid;__int16 st_gid;_dev_t st_rdev;_off_t st_size;__time32_t st_atime;__time32_t st_mtime;__time32_t st_ctime;};
struct _stat32i64 {_dev_t st_dev;_ino_t st_ino;unsigned __int16 st_mode;__int16 st_nlink;__int16 st_uid;__int16 st_gid;_dev_t st_rdev;__int64 st_size;__time32_t st_atime;__time32_t st_mtime;__time32_t st_ctime;};
struct _stat64 {_dev_t st_dev;_ino_t st_ino;unsigned __int16 st_mode;__int16 st_nlink;__int16 st_uid;__int16 st_gid;_dev_t st_rdev;__int64 st_size;__time64_t st_atime;__time64_t st_mtime;__time64_t st_ctime;};
struct _stat64i32 {_dev_t st_dev;_ino_t st_ino;unsigned __int16 st_mode;__int16 st_nlink;__int16 st_uid;__int16 st_gid;_dev_t st_rdev;_off_t st_size;__time64_t st_atime;__time64_t st_mtime;__time64_t st_ctime;};
struct _timespec32 {__time32_t tv_sec;__int32 tv_nsec;};
struct _timespec64 {__time64_t tv_sec;__int32 tv_nsec;};
struct _wfinddata32_t {unsigned int attrib;__time32_t time_create;__time32_t time_access;__time32_t time_write;_fsize_t size;__int16 name[260];};
struct _wfinddata32i64_t {unsigned int attrib;__time32_t time_create;__time32_t time_access;__time32_t time_write;__int64 size;__int16 name[260];};
struct _wfinddata64_t {unsigned int attrib;__time64_t time_create;__time64_t time_access;__time64_t time_write;__int64 size;__int16 name[260];};
struct _wfinddata64i32_t {unsigned int attrib;__time64_t time_create;__time64_t time_access;__time64_t time_write;_fsize_t size;__int16 name[260];};
enum abs_t : __int32 {abs_unk = 0x0,abs_no = 0x1,abs_yes = 0x2,};
struct __cppobj abstract_graph_t : gdl_graph_t {qstring title;bool rect_edges_made;layout_type_t current_layout;point_t circle_center;int circle_radius;hook_cb_t *callback;void *callback_ud;};
struct /*VFT*/ abstract_graph_t_vtbl {void (__cdecl *~abstract_graph_t)(abstract_graph_t *__hidden this);char *(__cdecl *get_node_label)(const gdl_graph_t *__hidden this, char *iobuf, int iobufsize, int n);void (__cdecl *print_graph_attributes)(const gdl_graph_t *__hidden this, FILE *fp);bool (__cdecl *print_node)(const gdl_graph_t *__hidden this, FILE *fp, int n);bool (__cdecl *print_edge)(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);void (__cdecl *print_node_attributes)(const gdl_graph_t *__hidden this, FILE *fp, int n);int (__cdecl *size)(const gdl_graph_t *__hidden this);int (__cdecl *node_qty)(const gdl_graph_t *__hidden this);bool (__cdecl *exists)(const gdl_graph_t *__hidden this, int node);int (__cdecl *entry)(const gdl_graph_t *__hidden this);int (__cdecl *exit)(const gdl_graph_t *__hidden this);int (__cdecl *nsucc)(const gdl_graph_t *__hidden this, int node);int (__cdecl *npred)(const gdl_graph_t *__hidden this, int node);int (__cdecl *succ)(const gdl_graph_t *__hidden this, int node, int i);int (__cdecl *pred)(const gdl_graph_t *__hidden this, int node, int i);bool (__cdecl *empty)(const gdl_graph_t *__hidden this);bgcolor_t (__cdecl *get_node_color)(const gdl_graph_t *__hidden this, int n);bgcolor_t (__cdecl *get_edge_color)(const gdl_graph_t *__hidden this, int i, int j);rect_t *(__cdecl *nrect)(abstract_graph_t *__hidden this, int n);edge_info_t *(__cdecl *get_edge)(abstract_graph_t *__hidden this, edge_t e);abstract_graph_t *(__cdecl *clone)(const abstract_graph_t *__hidden this);};
enum access_type_t : unsigned __int8 {NO_ACCESS = 0x0,WRITE_ACCESS = 0x1,READ_ACCESS = 0x2,RW_ACCESS = 0x3,};
typedef action_ctx_base_t action_activation_ctx_t;
enum action_attr_t : __int32 {AA_NONE = 0x0,AA_LABEL = 0x1,AA_SHORTCUT = 0x2,AA_TOOLTIP = 0x3,AA_ICON = 0x4,AA_STATE = 0x5,AA_CHECKABLE = 0x6,AA_CHECKED = 0x7,AA_VISIBILITY = 0x8,};
struct __cppobj action_ctx_base_cur_sel_t {twinpos_t from;twinpos_t to;};
union action_ctx_base_source_t {chooser_base_t *chooser;};
struct __cppobj action_ctx_base_t {TWidget *widget;twidget_type_t widget_type;qstring widget_title;sizevec_t chooser_selection;const char *action;uint32 cur_flags;ea_t cur_ea;uval_t cur_value;func_t *cur_func;func_t *cur_fchunk;struc_t *cur_struc;member_t *cur_strmem;enum_t cur_enum;segment_t *cur_seg;action_ctx_base_cur_sel_t cur_sel;const char *regname;TWidget *focus;screen_graph_selection_t *graph_selection;const_t cur_enum_member;dirtree_selection_t *dirtree_selection;action_ctx_base_source_t source;};
struct action_desc_t {int cb;const char *name;const char *label;action_handler_t *handler;const void *owner;const char *shortcut;const char *tooltip;int icon;int flags;};
struct __cppobj action_handler_t {action_handler_t_vtbl *__vftable /*VFT*/;int flags;};
struct /*VFT*/ action_handler_t_vtbl {int (__cdecl *activate)(action_handler_t *__hidden this, action_activation_ctx_t *ctx);action_state_t (__cdecl *update)(action_handler_t *__hidden this, action_update_ctx_t *ctx);void (__cdecl *~action_handler_t)(action_handler_t *__hidden this);};
enum action_state_t : __int32 {AST_ENABLE_ALWAYS = 0x0,AST_ENABLE_FOR_IDB = 0x1,AST_ENABLE_FOR_WIDGET = 0x2,AST_ENABLE = 0x3,AST_DISABLE_ALWAYS = 0x4,AST_DISABLE_FOR_IDB = 0x5,AST_DISABLE_FOR_WIDGET = 0x6,AST_DISABLE = 0x7,};
typedef action_ctx_base_t action_update_ctx_t;
struct __cppobj addon_info_t {size_t cb;const char *id;const char *name;const char *producer;const char *version;const char *url;const char *freeform;const void *custom_data;size_t custom_size;};
typedef int64 adiff_t;
typedef flags_t aflags_t;
struct __cppobj aloc_visitor_t {aloc_visitor_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ aloc_visitor_t_vtbl {int (__cdecl *visit_location)(aloc_visitor_t *__hidden this, argloc_t *v, int off, int size);void (__cdecl *~aloc_visitor_t)(aloc_visitor_t *__hidden this);};
struct __cppobj altadjust_visitor_t {altadjust_visitor_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ altadjust_visitor_t_vtbl {bool (__cdecl *should_skip)(altadjust_visitor_t *__hidden this, nodeidx_t ea);};
struct __cppobj argloc_t {argloc_type_t type;union {sval_t sval;uint32 reginfo;rrel_t *rrel;scattered_aloc_t *dist;void *custom;argloc_t::biggest_t biggest;};};
union argloc_t::$F4A6A313BC9EA9730D72EF3AFDF761E4 {sval_t sval;uint32 reginfo;rrel_t *rrel;scattered_aloc_t *dist;void *custom;argloc_t::biggest_t biggest;};
typedef size_t argloc_t::biggest_t;
typedef int argloc_type_t;
typedef qvector<argloc_t> arglocs_t;
struct __cppobj argpart_t : argloc_t {ushort off;ushort size;};
typedef qvector<argpart_t> argpartvec_t;
enum argreg_policy_t : __int32 {ARGREGS_POLICY_UNDEFINED = 0x0,ARGREGS_GP_ONLY = 0x1,ARGREGS_INDEPENDENT = 0x2,ARGREGS_BY_SLOTS = 0x3,ARGREGS_FP_CONSUME_GP = 0x4,ARGREGS_MIPS_O32 = 0x5,};
struct __cppobj argtinfo_helper_t {argtinfo_helper_t_vtbl *__vftable /*VFT*/;size_t reserved;};
struct /*VFT*/ argtinfo_helper_t_vtbl {void (__cdecl *~argtinfo_helper_t)(argtinfo_helper_t *__hidden this);bool (__cdecl *set_op_tinfo)(argtinfo_helper_t *__hidden this, const insn_t *insn, const op_t *x, const tinfo_t *tif, const char *name);bool (__cdecl *is_stkarg_load)(argtinfo_helper_t *__hidden this, const insn_t *insn, int *src, int *dst);bool (__cdecl *has_delay_slot)(argtinfo_helper_t *__hidden this, ea_t);};
typedef qvector<intmap_t> array_of_intmap_t;
typedef qvector<qvector<int>> array_of_intvec_t;
typedef qvector<node_set_t> array_of_node_set_t;
typedef qvector<rangeset_t> array_of_rangesets;
struct array_parameters_t {int32 flags;int32 lineitems;int32 alignment;};
struct __cppobj array_type_data_t {tinfo_t elem_type;uint32 base;uint32 nelems;};
typedef uint64 asize_t;
struct asm_t {uint32 flag;uint16 uflag;const char *name;help_t help;const char *const *header;const char *origin;const char *end;const char *cmnt;char ascsep;char accsep;const char *esccodes;const char *a_ascii;const char *a_byte;const char *a_word;const char *a_dword;const char *a_qword;const char *a_oword;const char *a_float;const char *a_double;const char *a_tbyte;const char *a_packreal;const char *a_dups;const char *a_bss;const char *a_equ;const char *a_seg;const char *a_curip;void (__cdecl *out_func_header)(outctx_t *, func_t *);void (__cdecl *out_func_footer)(outctx_t *, func_t *);const char *a_public;const char *a_weak;const char *a_extrn;const char *a_comdef;ssize_t (__cdecl *get_type_name)(qstring *, flags_t, ea_t);const char *a_align;char lbrace;char rbrace;const char *a_mod;const char *a_band;const char *a_bor;const char *a_xor;const char *a_bnot;const char *a_shl;const char *a_shr;const char *a_sizeof_fmt;uint32 flag2;const char *cmnt2;const char *low8;const char *high8;const char *low16;const char *high16;const char *a_include_fmt;const char *a_vstruc_fmt;const char *a_rva;const char *a_yword;const char *a_zword;};
typedef int atype_t;
struct auto_display_t {atype_t type;ea_t ea;idastate_t state;};
typedef std::map<unsigned long long, unsigned long long> backward_flow_iterator_t<State, Ctrl>::visited_t;
struct __cppobj backward_flow_iterator_t<no_regs_t, simple_bfi_t> {ea_t cur_ea;no_regs_t *regs;simple_bfi_t *ctrl;bool only_near;uint max_insn_cnt;func_t *pfn;const segment_t *seg;ea_t start_ea;ea_t cur_end;uint insn_cnt;backward_flow_iterator_t<State, Ctrl>::visited_t visited;backward_flow_iterator_t<no_regs_t, simple_bfi_t>::waiting_t waiting;};
struct __cppobj backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t {no_regs_t regs;uint insn_cnt;};
typedef std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> backward_flow_iterator_t<no_regs_t, simple_bfi_t>::waiting_t;
enum beep_t : __int32 {beep_default = 0x0,};
typedef uint32 bgcolor_t;
struct __cppobj bitfield_type_data_t {uchar nbytes;uchar width;bool is_unsigned;};
struct __cppobj bitrange_t {uint16 offset;uint16 nbits;};
typedef ea_t blob_idx_t;
typedef uval_t bmask_t;
struct __cppobj bookmarks_t {};
typedef qvector<bool> boolvec_t;
typedef qvector<const bpt_t *> bpt_constptr_vec_t;
struct __cppobj bpt_location_t {ea_t info;int index;bpt_loctype_t loctype;};
enum bpt_loctype_t : __int32 {BPLT_ABS = 0x0,BPLT_REL = 0x1,BPLT_SYM = 0x2,BPLT_SRC = 0x3,};
struct __cppobj bpt_t {size_t cb;qstring cndbody;bpt_location_t loc;pid_t pid;thid_t tid;ea_t ea;bpttype_t type;int pass_count;uint32 flags;uint32 props;int size;int cndidx;inode_t bptid;};
typedef qvector<bpt_t> bpt_vec_t;
struct __cppobj bpt_visitor_t {bpt_visitor_t_vtbl *__vftable /*VFT*/;range_t range;const char *name;};
struct /*VFT*/ bpt_visitor_t_vtbl {int (__cdecl *visit_bpt)(bpt_visitor_t *__hidden this, const bpt_t *bpt);};
struct __cppobj bptaddr_t {ea_t hea;ea_t kea;};
struct __cppobj bptaddrs_t : eavec_t {bpt_t *bpt;};
typedef qvector<bptaddrs_t> bpteas_t;
typedef qvector<bpt_t *> bptptr_vec_t;
typedef int bpttype_t;
typedef uchar bte_t;
typedef int __cdecl buttoncb_t(int, form_actions_t *);
struct bytes_t {uchar len;const uchar *bytes;};
struct __cppobj bytevec_t : qvector<unsigned char> {};
struct __cppobj call_stack_info_t {ea_t callea;ea_t funcea;ea_t fp;bool funcok;};
struct __cppobj call_stack_t : qvector<call_stack_info_t> {};
struct __cppobj callregs_t {argreg_policy_t policy;int nregs;intvec_t gpregs;intvec_t fpregs;};
union callui_t {bool cnd;char i8;int i;__int16 i16;int32 i32;uchar u8;ushort u16;uint32 u32;char *cptr;void *vptr;ssize_t ssize;func_t *fptr;segment_t *segptr;struc_t *strptr;plugin_t *pluginptr;sreg_range_t *sraptr;};
struct __cppobj cancellable_graph_t : gdl_graph_t {bool cancelled;char padding[3];};
struct /*VFT*/ cancellable_graph_t_vtbl {void (__cdecl *~cancellable_graph_t)(cancellable_graph_t *__hidden this);char *(__cdecl *get_node_label)(const gdl_graph_t *__hidden this, char *iobuf, int iobufsize, int n);void (__cdecl *print_graph_attributes)(const gdl_graph_t *__hidden this, FILE *fp);bool (__cdecl *print_node)(const gdl_graph_t *__hidden this, FILE *fp, int n);bool (__cdecl *print_edge)(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);void (__cdecl *print_node_attributes)(const gdl_graph_t *__hidden this, FILE *fp, int n);int (__cdecl *size)(const gdl_graph_t *__hidden this);int (__cdecl *node_qty)(const gdl_graph_t *__hidden this);bool (__cdecl *exists)(const gdl_graph_t *__hidden this, int node);int (__cdecl *entry)(const gdl_graph_t *__hidden this);int (__cdecl *exit)(const gdl_graph_t *__hidden this);int (__cdecl *nsucc)(const gdl_graph_t *__hidden this, int node);int (__cdecl *npred)(const gdl_graph_t *__hidden this, int node);int (__cdecl *succ)(const gdl_graph_t *__hidden this, int node, int i);int (__cdecl *pred)(const gdl_graph_t *__hidden this, int node, int i);bool (__cdecl *empty)(const gdl_graph_t *__hidden this);bgcolor_t (__cdecl *get_node_color)(const gdl_graph_t *__hidden this, int n);bgcolor_t (__cdecl *get_edge_color)(const gdl_graph_t *__hidden this, int i, int j);};
typedef qvector<qvector<long long>> casevec_t;
struct __cppobj cast_t {bool is_unsigned;int size;};
struct __cppobj catch_t : try_handler_t {sval_t obj;sval_t type_id;};
typedef qvector<catch_t> catchvec_t;
enum cb_id : __int32 {CB_INIT = 0xFFFFFFFF,CB_YES = 0xFFFFFFFE,CB_CLOSE = 0xFFFFFFFD,CB_INVISIBLE = 0xFFFFFFFC,CB_DESTROYING = 0xFFFFFFFB,};
typedef const char *__cdecl cfgopt_handler2_t(lexer_t *, const token_t *, const token_t *, int64, int64);
typedef const char *__cdecl cfgopt_handler3_t(lexer_t *, const token_t *, const token_t *, int64, int64, void *);
typedef const char *__cdecl cfgopt_handler_t(lexer_t *, const token_t *, const token_t *);
struct cfgopt_set_t {const cfgopt_t *opts;size_t nopts;config_changed_cb_t *cb;void *obj;};
struct __cppobj cfgopt_set_vec_t : qvector<cfgopt_set_t> {};
struct __cppobj cfgopt_t {const char *name;union {void *ptr;size_t mbroff;cfgopt_handler_t *hnd;cfgopt_handler2_t *hnd2;cfgopt_handler3_t *hnd3;};int flags;union {size_t buf_size;cfgopt_t::num_range_t num_range;uint32 bit_flags;cfgopt_t::params_t params;void *mbroff_obj;};};
union cfgopt_t::$275FC9DDBA9D1187AC5032610B4D4F63 {size_t buf_size;cfgopt_t::num_range_t num_range;uint32 bit_flags;cfgopt_t::params_t params;void *mbroff_obj;};
union cfgopt_t::$99DF67CCA67C584E9D46033DDA6FC151 {void *ptr;size_t mbroff;cfgopt_handler_t *hnd;cfgopt_handler2_t *hnd2;cfgopt_handler3_t *hnd3;};
struct __cppobj cfgopt_t::num_range_t {int64 minval;int64 maxval;};
struct __cppobj cfgopt_t::params_t {int64 p1;int64 p2;};
struct __cppobj channel_redir_t {int fd;qstring file;int flags;int start;int length;};
typedef qvector<channel_redir_t> channel_redirs_t;
struct __cppobj choose_ioport_parser_t {choose_ioport_parser_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ choose_ioport_parser_t_vtbl {bool (__cdecl *parse)(choose_ioport_parser_t *__hidden this, qstring *param, const char *line);};
enum choose_type_t : __int32 {chtype_generic = 0x0,chtype_idasgn = 0x1,chtype_entry = 0x2,chtype_name = 0x3,chtype_stkvar_xref = 0x4,chtype_xref = 0x5,chtype_enum = 0x6,chtype_enum_by_value = 0x7,chtype_func = 0x8,chtype_segm = 0x9,chtype_struc = 0xA,chtype_strpath = 0xB,chtype_idatil = 0xC,chtype_enum_by_value_and_size = 0xD,chtype_srcp = 0xE,};
struct __cppobj chooser_base_t {chooser_base_t_vtbl *__vftable /*VFT*/;uint32 version;uint32 flags;int x0;int y0;int x1;int y1;int width;int height;const char *title;int columns;const int *widths;const char *const *header;int icon;qstring popup_names[4];int deflt_col;};
enum chooser_base_t::cbres_t : __int32 {NOTHING_CHANGED = 0x0,ALL_CHANGED = 0x1,SELECTION_CHANGED = 0x2,};
struct /*VFT*/ chooser_base_t_vtbl {void (__cdecl *~chooser_base_t)(chooser_base_t *__hidden this);void *(__cdecl *get_chooser_obj)(chooser_base_t *__hidden this);const void *(__cdecl *get_obj_id)(const chooser_base_t *__hidden this, size_t *len);bool (__cdecl *init)(chooser_base_t *__hidden this);size_t (__cdecl *get_count)(const chooser_base_t *__hidden this);void (__cdecl *get_row)(const chooser_base_t *__hidden this, qstrvec_t *out, int *out_icon, chooser_item_attrs_t *out_attrs, size_t n);ea_t (__cdecl *get_ea)(const chooser_base_t *__hidden this, size_t);void (__cdecl *closed)(chooser_base_t *__hidden this);};
struct __cppobj chooser_item_attrs_t {int cb;int flags;bgcolor_t color;};
struct __cppobj chooser_multi_t : chooser_base_t {};
struct /*VFT*/ chooser_multi_t_vtbl {void (__cdecl *~chooser_multi_t)(chooser_multi_t *__hidden this);void *(__cdecl *get_chooser_obj)(chooser_base_t *__hidden this);const void *(__cdecl *get_obj_id)(const chooser_base_t *__hidden this, size_t *len);bool (__cdecl *init)(chooser_base_t *__hidden this);size_t (__cdecl *get_count)(const chooser_base_t *__hidden this);void (__cdecl *get_row)(const chooser_base_t *__hidden this, qstrvec_t *out, int *out_icon, chooser_item_attrs_t *out_attrs, size_t n);ea_t (__cdecl *get_ea)(const chooser_base_t *__hidden this, size_t);void (__cdecl *closed)(chooser_base_t *__hidden this);void (__cdecl *get_item_index)(const chooser_multi_t *__hidden this, sizevec_t *sel, const void *item_data);chooser_base_t::cbres_t (__cdecl *ins)(chooser_multi_t *__hidden this, sizevec_t *);chooser_base_t::cbres_t (__cdecl *del)(chooser_multi_t *__hidden this, sizevec_t *);chooser_base_t::cbres_t (__cdecl *edit)(chooser_multi_t *__hidden this, sizevec_t *);chooser_base_t::cbres_t (__cdecl *enter)(chooser_multi_t *__hidden this, sizevec_t *sel);chooser_base_t::cbres_t (__cdecl *refresh)(chooser_multi_t *__hidden this, sizevec_t *);void (__cdecl *select)(const chooser_multi_t *__hidden this, const sizevec_t *);dirtree_t *(__cdecl *get_dirtree)(chooser_multi_t *__hidden this);inode_t (__cdecl *index_to_inode)(const chooser_multi_t *__hidden this, size_t);diffpos_t (__cdecl *index_to_diffpos)(const chooser_multi_t *__hidden this, size_t);};
struct __cppobj chooser_t : chooser_base_t {};
struct __cppobj chooser_t::cbret_t {ssize_t idx;chooser_base_t::cbres_t changed;};
struct /*VFT*/ chooser_t_vtbl {void (__cdecl *~chooser_t)(chooser_t *__hidden this);void *(__cdecl *get_chooser_obj)(chooser_base_t *__hidden this);const void *(__cdecl *get_obj_id)(const chooser_base_t *__hidden this, size_t *len);bool (__cdecl *init)(chooser_base_t *__hidden this);size_t (__cdecl *get_count)(const chooser_base_t *__hidden this);void (__cdecl *get_row)(const chooser_base_t *__hidden this, qstrvec_t *out, int *out_icon, chooser_item_attrs_t *out_attrs, size_t n);ea_t (__cdecl *get_ea)(const chooser_base_t *__hidden this, size_t);void (__cdecl *closed)(chooser_base_t *__hidden this);ssize_t (__cdecl *get_item_index)(const chooser_t *__hidden this, const void *item_data);chooser_t::cbret_t (__cdecl *ins)(chooser_t *__hidden this, ssize_t);chooser_t::cbret_t (__cdecl *del)(chooser_t *__hidden this, size_t);chooser_t::cbret_t (__cdecl *edit)(chooser_t *__hidden this, size_t);chooser_t::cbret_t (__cdecl *enter)(chooser_t *__hidden this, size_t n);chooser_t::cbret_t (__cdecl *refresh)(chooser_t *__hidden this, ssize_t n);void (__cdecl *select)(const chooser_t *__hidden this, ssize_t);dirtree_t *(__cdecl *get_dirtree)(chooser_t *__hidden this);inode_t (__cdecl *index_to_inode)(const chooser_t *__hidden this, size_t);diffpos_t (__cdecl *index_to_diffpos)(const chooser_t *__hidden this, size_t);};
struct cli_t {size_t size;int32 flags;const char *sname;const char *lname;const char *hint;bool (__cdecl *execute_line)(const char *);void *unused;bool (__cdecl *keydown)(qstring *, int *, int *, int *, int);bool (__cdecl *find_completions)(qstrvec_t *, int *, int *, const char *, int);};
typedef void __cdecl cliopt_handler_t(const char *, void *);
typedef void __cdecl cliopt_poly_handler_t(int, const char **, void *);
struct cliopt_t {char shortname;const char *longname;const char *help;cliopt_handler_t *handler;int nargs;};
struct __cppobj cliopts_t : qvector<cliopt_t> {qstring prog_name;qstring epilog;cliopts_t::usage_printer_t *printer;};
typedef int cliopts_t::usage_printer_t(const char *, ...);
typedef __int32 clock_t;
typedef uchar cm_t;
typedef void __cdecl code_viewer_lines_click_t(TWidget *, const place_t *, int, int, void *);
typedef int __cdecl code_viewer_lines_icon_t(TWidget *, const place_t *, int *, void *);
typedef bool __cdecl code_viewer_lines_linenum_t(TWidget *, const place_t *, uval_t *, void *);
typedef uchar color_t;
typedef uchar comp_t;
struct __cppobj compiled_binpat_t {bytevec_t bytes;bytevec_t mask;rangevec_t strlits;int encidx;};
typedef qvector<compiled_binpat_t> compiled_binpat_vec_t;
struct compiler_info_t {comp_t id;cm_t cm;uchar size_i;uchar size_b;uchar size_e;uchar defalign;uchar size_s;uchar size_l;uchar size_ll;uchar size_ldbl;};
typedef qvector<unsigned char> compvec_t;
typedef void __cdecl config_changed_cb_t(const cfgopt_t *, int, const void *);
struct __cppobj const_aloc_visitor_t {const_aloc_visitor_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ const_aloc_visitor_t_vtbl {int (__cdecl *visit_location)(const_aloc_visitor_t *__hidden this, const argloc_t *v, int off, int size);void (__cdecl *~const_aloc_visitor_t)(const_aloc_visitor_t *__hidden this);};
typedef uval_t const_t;
enum cref_t : __int32 {fl_U = 0x0,fl_CF = 0x10,fl_CN = 0x11,fl_JF = 0x12,fl_JN = 0x13,fl_USobsolete = 0x14,fl_F = 0x15,};
struct custloc_desc_t {size_t cbsize;const char *name;void (__cdecl *copy)(argloc_t *, const argloc_t *);void (__cdecl *cleanup)(argloc_t *);bool (__cdecl *verify)(const argloc_t *, int, const rangeset_t *, bool);int (__cdecl *compare)(const argloc_t *, const argloc_t *);size_t (__cdecl *print)(char *, size_t, const argloc_t *, asize_t, int);bool (__cdecl *deref_field)(argloc_t *, tinfo_t *, const argloc_t *, const tinfo_t *, asize_t, const qstring *);bool (__cdecl *deref_array)(argloc_t *, tinfo_t *, const argloc_t *, const tinfo_t *, asize_t, asize_t);bool (__cdecl *deref_ptr)(argloc_t *, tinfo_t *, const argloc_t *);bool (__cdecl *read_value)(value_u *, const argloc_t *, int, const tinfo_t *);bool (__cdecl *write_value)(const argloc_t *, const idc_value_t *, const value_u *, int, qstring *);asize_t (__cdecl *calc_string_length)(const argloc_t *, const tinfo_t *);bool (__cdecl *get_string)(qstring *, tinfo_t *, const argloc_t *, const tinfo_t *, size_t);asize_t (__cdecl *guess_array_size)(const argloc_t *, const tinfo_t *);bool (__cdecl *get_tinfo)(tinfo_t *, const argloc_t *);int (__cdecl *calc_number_of_children)(const argloc_t *, const tinfo_t *);size_t (__cdecl *print_ptr_value)(char *, size_t, bool *, const argloc_t *, const tinfo_t *);};
struct __cppobj custom_data_type_ids_t {int16 dtid;int16 fids[8];};
struct __cppobj custom_refinfo_handler_t {int32 cbsize;const char *name;const char *desc;int props;int (__cdecl *gen_expr)(qstring *, qstring *, ea_t, int, const refinfo_t *, ea_t, adiff_t *, ea_t *, ea_t *, int);bool (__cdecl *calc_reference_data)(ea_t *, ea_t *, ea_t, const refinfo_t *, adiff_t);void (__cdecl *get_format)(qstring *);};
typedef void __cdecl custom_viewer_adjust_place_t(TWidget *, lochist_entry_t *, void *);
typedef int __cdecl custom_viewer_can_navigate_t(TWidget *, const lochist_entry_t *, const locchange_md_t *, void *);
typedef bool __cdecl custom_viewer_click_t(TWidget *, int, void *);
typedef void __cdecl custom_viewer_close_t(TWidget *, void *);
typedef void __cdecl custom_viewer_curpos_t(TWidget *, void *);
typedef bool __cdecl custom_viewer_dblclick_t(TWidget *, int, void *);
typedef int __cdecl custom_viewer_get_place_xcoord_t(TWidget *, const place_t *, const place_t *, void *);
enum custom_viewer_handler_id_t : __int32 {CVH_USERDATA = 0x0,CVH_KEYDOWN = 0x1,CVH_POPUP = 0x2,CVH_DBLCLICK = 0x3,CVH_CURPOS = 0x4,CVH_CLOSE = 0x5,CVH_CLICK = 0x6,CVH_QT_AWARE = 0x7,CVH_HELP = 0x8,CVH_MOUSEMOVE = 0x9,CDVH_USERDATA = 0x3E8,CDVH_SRCVIEW = 0x3E9,CDVH_LINES_CLICK = 0x3EA,CDVH_LINES_DBLCLICK = 0x3EB,CDVH_LINES_POPUP = 0x3EC,CDVH_LINES_DRAWICON = 0x3ED,CDVH_LINES_LINENUM = 0x3EE,CDVH_LINES_ICONMARGIN = 0x3EF,CDVH_LINES_RADIX = 0x3F0,CDVH_LINES_ALIGNMENT = 0x3F1,};
struct __cppobj custom_viewer_handlers_t {int cb;custom_viewer_keydown_t *keyboard;custom_viewer_popup_t *popup;custom_viewer_mouse_moved_t *mouse_moved;custom_viewer_click_t *click;custom_viewer_dblclick_t *dblclick;custom_viewer_curpos_t *curpos;custom_viewer_close_t *close;custom_viewer_help_t *help;custom_viewer_adjust_place_t *adjust_place;custom_viewer_get_place_xcoord_t *get_place_xcoord;custom_viewer_location_changed_t *location_changed;custom_viewer_can_navigate_t *can_navigate;};
typedef int __cdecl custom_viewer_help_t(TWidget *, void *);
typedef bool __cdecl custom_viewer_keydown_t(TWidget *, int, int, void *);
typedef void __cdecl custom_viewer_location_changed_t(TWidget *, const lochist_entry_t *, const lochist_entry_t *, const locchange_md_t *, void *);
typedef void __cdecl custom_viewer_mouse_moved_t(TWidget *, int, view_mouse_event_t *, void *);
typedef void __cdecl custom_viewer_popup_t(TWidget *, void *);
struct __cppobj data_format_t {int32 cbsize;void *ud;int props;const char *name;const char *menu_name;const char *hotkey;asize_t value_size;int32 text_width;bool (__cdecl *print)(void *, qstring *, const void *, asize_t, ea_t, int, int);bool (__cdecl *scan)(void *, bytevec_t *, const char *, ea_t, int, qstring *);void (__cdecl *analyze)(void *, ea_t, int);};
struct __cppobj data_type_t {int cbsize;void *ud;int props;const char *name;const char *menu_name;const char *hotkey;const char *asm_keyword;asize_t value_size;bool (__cdecl *may_create_at)(void *, ea_t, size_t);asize_t (__cdecl *calc_item_size)(void *, ea_t, asize_t);};
struct dbctx_t;
enum dbg_event_code_t : __int32 {DEC_NOTASK = 0xFFFFFFFE,DEC_ERROR = 0xFFFFFFFF,DEC_TIMEOUT = 0x0,};
struct __cppobj dbg_info_t {plugin_info_t *pi;debugger_t *dbg;};
enum dbg_notification_t : __int32 {dbg_null = 0x0,dbg_process_start = 0x1,dbg_process_exit = 0x2,dbg_process_attach = 0x3,dbg_process_detach = 0x4,dbg_thread_start = 0x5,dbg_thread_exit = 0x6,dbg_library_load = 0x7,dbg_library_unload = 0x8,dbg_information = 0x9,dbg_exception = 0xA,dbg_suspend_process = 0xB,dbg_bpt = 0xC,dbg_trace = 0xD,dbg_request_error = 0xE,dbg_step_into = 0xF,dbg_step_over = 0x10,dbg_run_to = 0x11,dbg_step_until_ret = 0x12,dbg_bpt_changed = 0x13,dbg_started_loading_bpts = 0x14,dbg_finished_loading_bpts = 0x15,dbg_last = 0x16,};
typedef qvector<debug_event_t> dbgevt_vec_t;
struct __cppobj debapp_attrs_t {int32 cbsize;int addrsize;qstring platform;int is_be;};
struct __cppobj debug_event_t {pid_t pid;thid_t tid;ea_t ea;bool handled;event_id_t _eid;char bytes[48];};
enum debug_name_how_t : __int32 {DEBNAME_EXACT = 0x0,DEBNAME_LOWER = 0x1,DEBNAME_UPPER = 0x2,DEBNAME_NICE = 0x3,};
struct __cppobj debugger_t {int version;const char *name;int id;const char *processor;uint32 flags;uint32 flags2;const char **regclasses;int default_regclasses;register_info_t *registers;int nregs;int memory_page_size;const uchar *bpt_bytes;uchar bpt_size;uchar filetype;ushort resume_modes;const char *(__cdecl *set_dbg_options)(const char *, int, int, const void *);hook_cb_t *callback;};
enum debugger_t::event_t : __int32 {ev_init_debugger = 0x0,ev_term_debugger = 0x1,ev_get_processes = 0x2,ev_start_process = 0x3,ev_attach_process = 0x4,ev_detach_process = 0x5,ev_get_debapp_attrs = 0x6,ev_rebase_if_required_to = 0x7,ev_request_pause = 0x8,ev_exit_process = 0x9,ev_get_debug_event = 0xA,ev_resume = 0xB,ev_set_exception_info = 0xC,ev_suspended = 0xD,ev_thread_suspend = 0xE,ev_thread_continue = 0xF,ev_set_resume_mode = 0x10,ev_read_registers = 0x11,ev_write_register = 0x12,ev_thread_get_sreg_base = 0x13,ev_get_memory_info = 0x14,ev_read_memory = 0x15,ev_write_memory = 0x16,ev_check_bpt = 0x17,ev_update_bpts = 0x18,ev_update_lowcnds = 0x19,ev_open_file = 0x1A,ev_close_file = 0x1B,ev_read_file = 0x1C,ev_write_file = 0x1D,ev_map_address = 0x1E,ev_get_debmod_extensions = 0x1F,ev_update_call_stack = 0x20,ev_appcall = 0x21,ev_cleanup_appcall = 0x22,ev_eval_lowcnd = 0x23,ev_send_ioctl = 0x24,ev_dbg_enable_trace = 0x25,ev_is_tracing_enabled = 0x26,ev_rexec = 0x27,ev_get_srcinfo_path = 0x28,ev_bin_search = 0x29,};
typedef int32 __cdecl demangler_t(char *, uint, const char *, uint32);
enum demreq_type_t : __int32 {DQT_NPURGED_8 = 0xFFFFFFF8,DQT_NPURGED_4 = 0xFFFFFFFC,DQT_NPURGED_2 = 0xFFFFFFFE,DQT_COMPILER = 0x0,DQT_NAME_TYPE = 0x1,DQT_FULL = 0x2,};
struct depth_first_info_t;
struct destset_t;
typedef _dev_t dev_t;
typedef size_t diffpos_t;
struct __cppobj direntry_t {uval_t idx;bool isdir;};
typedef qvector<direntry_t> direntry_vec_t;
typedef uval_t diridx_t;
struct __cppobj dirspec_t {dirspec_t_vtbl *__vftable /*VFT*/;uint32 flags;qstring id;};
struct /*VFT*/ dirspec_t_vtbl {void (__cdecl *~dirspec_t)(dirspec_t *__hidden this);bool (__cdecl *get_name)(dirspec_t *__hidden this, qstring *out, inode_t inode, uint32 name_flags);inode_t (__cdecl *get_inode)(dirspec_t *__hidden this, const char *dirpath, const char *name);qstring (__cdecl *get_attrs)(const dirspec_t *__hidden this, inode_t inode);bool (__cdecl *rename_inode)(dirspec_t *__hidden this, inode_t inode, const char *newname);void (__cdecl *unlink_inode)(dirspec_t *__hidden this, inode_t inode);};
struct __cppobj dirtree_cursor_t {diridx_t parent;size_t rank;};
typedef qvector<dirtree_cursor_t> dirtree_cursor_vec_t;
enum dirtree_id_t : __int32 {DIRTREE_LOCAL_TYPES = 0x0,DIRTREE_STRUCTS = 0x1,DIRTREE_ENUMS = 0x2,DIRTREE_FUNCS = 0x3,DIRTREE_NAMES = 0x4,DIRTREE_IMPORTS = 0x5,DIRTREE_IDAPLACE_BOOKMARKS = 0x6,DIRTREE_STRUCTS_BOOKMARKS = 0x7,DIRTREE_ENUMS_BOOKMARKS = 0x8,DIRTREE_BPTS = 0x9,DIRTREE_END = 0xA,};
struct dirtree_impl_t;
struct dirtree_iterator_t {qstring pattern;dirtree_cursor_t cursor;};
struct __cppobj dirtree_selection_t : dirtree_cursor_vec_t {};
struct __cppobj dirtree_t {dirtree_impl_t *d;};
struct __cppobj dirtree_visitor_t {dirtree_visitor_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ dirtree_visitor_t_vtbl {ssize_t (__cdecl *visit)(dirtree_visitor_t *__hidden this, const dirtree_cursor_t *c, const direntry_t *de);};
typedef qvector<unsigned long long> dirvec_t;
typedef _div_t div_t;
typedef double double_t;
enum drc_t : __int32 {DRC_EVENTS = 0x3,DRC_CRC = 0x2,DRC_OK = 0x1,DRC_NONE = 0x0,DRC_FAILED = 0xFFFFFFFF,DRC_NETERR = 0xFFFFFFFE,DRC_NOFILE = 0xFFFFFFFD,DRC_IDBSEG = 0xFFFFFFFC,DRC_NOPROC = 0xFFFFFFFB,DRC_NOCHG = 0xFFFFFFFA,DRC_ERROR = 0xFFFFFFF9,};
enum dref_t : __int32 {dr_U = 0x0,dr_O = 0x1,dr_W = 0x2,dr_R = 0x3,dr_T = 0x4,dr_I = 0x5,dr_S = 0x6,};
enum dterr_t : __int32 {DTE_OK = 0x0,DTE_ALREADY_EXISTS = 0x1,DTE_NOT_FOUND = 0x2,DTE_NOT_DIRECTORY = 0x3,DTE_NOT_EMPTY = 0x4,DTE_BAD_PATH = 0x5,DTE_CANT_RENAME = 0x6,DTE_OWN_CHILD = 0x7,DTE_MAX_DIR = 0x8,DTE_LAST = 0x9,};
struct __cppobj dynamic_register_set_t {register_info_vec_t ri_vec;qstrvec_t strvec;dynamic_register_set_t::const_char_vec_t classname_ptrs;qvector<qvector<const char *>> bit_strings_ptrs_vec;};
typedef qvector<const char *> dynamic_register_set_t::const_char_vec_t;
typedef uint16 eNI[9];
typedef uint64 ea64_t;
struct __cppobj ea_name_t {ea_t ea;qstring name;};
typedef qvector<ea_name_t> ea_name_vec_t;
typedef uint64 ea_t;
typedef qvector<unsigned long long> eavec_t;
struct __cppobj edge_info_t {bgcolor_t color;int width;int srcoff;int dstoff;pointseq_t layout;};
struct edge_infos_t;
struct __cppobj edge_infos_wrapper_t {edge_infos_t *ptr;};
struct __cppobj edge_layout_point_t {int pidx;edge_t e;};
struct __cppobj edge_segment_t {edge_t e;int nseg;int x0;int x1;};
struct edge_segs_vec_t;
struct __cppobj edge_t {int src;int dst;};
enum edge_type_t : __int32 {edge_error = 0x0,edge_tree = 0x1,edge_forward = 0x2,edge_back = 0x3,edge_cross = 0x4,edge_subgraph = 0x5,};
struct edge_typer_t;
struct edgeset_t;
typedef qvector<edge_t> edgevec_t;
struct elf_loader_t;
struct __cppobj encoder_t {encoder_t_vtbl *__vftable /*VFT*/;};
enum encoder_t::notify_recerr_t : __int32 {nr_none = 0x0,nr_once = 0x1,};
struct /*VFT*/ encoder_t_vtbl {void (__cdecl *~encoder_t)(encoder_t *__hidden this);bool (__cdecl *get_bom)(const encoder_t *__hidden this, bytevec_t *out);bool (__cdecl *encode)(const encoder_t *__hidden this, qstring *s);bool (*print)(const encoder_t *__hidden this, FILE *out, const char *format, ...);bool (__cdecl *requires_binary_mode)(const encoder_t *__hidden this);};
struct __cppobj enum_const_t {tid_t tid;uchar serial;};
struct __cppobj enum_member_t {qstring name;qstring cmt;uint64 value;};
typedef qvector<enum_member_t> enum_member_vec_t;
struct __cppobj enum_member_visitor_t {enum_member_visitor_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ enum_member_visitor_t_vtbl {int (__cdecl *visit_enum_member)(enum_member_visitor_t *__hidden this, const_t cid, uval_t value);};
typedef tid_t enum_t;
struct __cppobj enum_type_data_t : enum_member_vec_t {intvec_t group_sizes;uint32 taenum_bits;bte_t bte;};
struct __cppobj enumplace_t : place_t {size_t idx;bmask_t bmask;uval_t value;uchar serial;};
struct /*VFT*/ enumplace_t_vtbl {void (__cdecl *print)(const enumplace_t *__hidden this, qstring *buf, void *ud);uval_t (__cdecl *touval)(const enumplace_t *__hidden this, void *ud);place_t *(__cdecl *clone)(const enumplace_t *__hidden this);void (__cdecl *copyfrom)(enumplace_t *__hidden this, const place_t *from);place_t *(__cdecl *makeplace)(const enumplace_t *__hidden this, void *ud, uval_t x, int _lnnum);int (__cdecl *compare)(const enumplace_t *__hidden this, const place_t *t2);void (__cdecl *adjust)(enumplace_t *__hidden this, void *ud);bool (__cdecl *prev)(enumplace_t *__hidden this, void *ud);bool (__cdecl *next)(enumplace_t *__hidden this, void *ud);bool (__cdecl *beginning)(const enumplace_t *__hidden this, void *ud);bool (__cdecl *ending)(const enumplace_t *__hidden this, void *ud);int (__cdecl *generate)(const enumplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);void (__cdecl *serialize)(const enumplace_t *__hidden this, bytevec_t *out);bool (__cdecl *deserialize)(enumplace_t *__hidden this, const uchar **pptr, const uchar *end);int (__cdecl *id)(const enumplace_t *__hidden this);const char *(__cdecl *name)(const enumplace_t *__hidden this);ea_t (__cdecl *toea)(const enumplace_t *__hidden this);bool (__cdecl *rebase)(enumplace_t *__hidden this, const segm_move_infos_t *infos);place_t *(__cdecl *enter)(const enumplace_t *__hidden this, uint32 *out_flags);void (__cdecl *leave)(const enumplace_t *__hidden this, uint32 flags);int (__cdecl *compare2)(const enumplace_t *__hidden this, const place_t *t2, void *ud);};
typedef int errno_t;
typedef int error_t;
struct __cppobj eval_ctx_t {int size_cb;ea_t ea;};
enum event_id_t : __int32 {NO_EVENT = 0x0,PROCESS_STARTED = 0x1,PROCESS_EXITED = 0x2,THREAD_STARTED = 0x4,THREAD_EXITED = 0x8,BREAKPOINT = 0x10,STEP = 0x20,EXCEPTION = 0x40,LIB_LOADED = 0x80,LIB_UNLOADED = 0x100,INFORMATION = 0x200,PROCESS_ATTACHED = 0x400,PROCESS_DETACHED = 0x800,PROCESS_SUSPENDED = 0x1000,TRACE_FULL = 0x2000,};
struct __cppobj event_listener_t {event_listener_t_vtbl *__vftable /*VFT*/;size_t listener_flags;};
struct /*VFT*/ event_listener_t_vtbl {ssize_t (__cdecl *on_event)(event_listener_t *__hidden this, ssize_t code, va_list va);void (__cdecl *~event_listener_t)(event_listener_t *__hidden this);};
struct __cppobj exception_info_t {uint code;uint32 flags;qstring name;qstring desc;};
struct excinfo_t {uint32 code;bool can_cont;ea_t ea;qstring info;};
typedef qvector<exception_info_t> excvec_t;
struct __cppobj exec_request_t {exec_request_t_vtbl *__vftable /*VFT*/;int code;qsemaphore_t sem;};
struct /*VFT*/ exec_request_t_vtbl {int (__cdecl *execute)(exec_request_t *__hidden this);void (__cdecl *~exec_request_t)(exec_request_t *__hidden this);};
struct __cppobj exehdr {uint16 exe_ident;uint16 PartPag;uint16 PageCnt;uint16 ReloCnt;uint16 HdrSize;uint16 MinMem;uint16 MaxMem;uint16 ReloSS;uint16 ExeSP;uint16 ChkSum;uint16 ExeIP;uint16 ReloCS;uint16 TablOff;uint16 Overlay;};
struct __cppobj exehdr_full : exehdr {uint16 res[4];uint16 oemid;uint16 oeminfo;uint16 res2[10];uint32 lfanew;};
struct expanded_area_t;
struct ext_idcfunc_t {const char *name;idc_func_t *fptr;const char *args;const idc_value_t *defvals;int ndefvals;int flags;};
typedef ssize_t __cdecl external_colorizer_t(syntax_highlight_style *, const char *);
typedef qvector<long long (*)(syntax_highlight_style *, const char *)> external_colorizers_t;
typedef bool __cdecl external_ident_colorizer_t(syntax_highlight_style *, const qstring *);
typedef qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> external_ident_colorizers_t;
typedef qrefcnt_t<extlang_t> extlang_object_t;
struct __cppobj extlang_t {size_t size;uint32 flags;int32 refcnt;const char *name;const char *fileext;syntax_highlighter_t *highlighter;bool (__cdecl *compile_expr)(const char *, ea_t, const char *, qstring *);bool (__cdecl *compile_file)(const char *, qstring *);bool (__cdecl *call_func)(idc_value_t *, const char *, const idc_value_t[], size_t, qstring *);bool (__cdecl *eval_expr)(idc_value_t *, ea_t, const char *, qstring *);bool (__cdecl *eval_snippet)(const char *, qstring *);bool (__cdecl *create_object)(idc_value_t *, const char *, const idc_value_t[], size_t, qstring *);bool (__cdecl *get_attr)(idc_value_t *, const idc_value_t *, const char *);bool (__cdecl *set_attr)(idc_value_t *, const char *, const idc_value_t *);bool (__cdecl *call_method)(idc_value_t *, const idc_value_t *, const char *, const idc_value_t[], size_t, qstring *);bool (__cdecl *load_procmod)(idc_value_t *, const char *, qstring *);bool (__cdecl *unload_procmod)(const char *, qstring *);};
struct __cppobj extlang_visitor_t {extlang_visitor_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ extlang_visitor_t_vtbl {ssize_t (__cdecl *visit_extlang)(extlang_visitor_t *__hidden this, extlang_t *extlang);};
typedef qvector<extlang_t *> extlangs_t;
enum fc_block_type_t : __int32 {fcb_normal = 0x0,fcb_indjump = 0x1,fcb_ret = 0x2,fcb_cndret = 0x3,fcb_noret = 0x4,fcb_enoret = 0x5,fcb_extern = 0x6,fcb_error = 0x7,};
struct __cppobj file_enumerator_t {file_enumerator_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ file_enumerator_t_vtbl {int (__cdecl *visit_file)(file_enumerator_t *__hidden this, const char *file);void (__cdecl *~file_enumerator_t)(file_enumerator_t *__hidden this);};
typedef janitor_t<_iobuf *> file_janitor_t;
enum filetype_t : __int32 {f_EXE_old = 0x0,f_COM_old = 0x1,f_BIN = 0x2,f_DRV = 0x3,f_WIN = 0x4,f_HEX = 0x5,f_MEX = 0x6,f_LX = 0x7,f_LE = 0x8,f_NLM = 0x9,f_COFF = 0xA,f_PE = 0xB,f_OMF = 0xC,f_SREC = 0xD,f_ZIP = 0xE,f_OMFLIB = 0xF,f_AR = 0x10,f_LOADER = 0x11,f_ELF = 0x12,f_W32RUN = 0x13,f_AOUT = 0x14,f_PRC = 0x15,f_EXE = 0x16,f_COM = 0x17,f_AIXAR = 0x18,f_MACHO = 0x19,f_PSXOBJ = 0x1A,};
enum find_extlang_kind_t : __int32 {FIND_EXTLANG_BY_EXT = 0x0,FIND_EXTLANG_BY_NAME = 0x1,FIND_EXTLANG_BY_IDX = 0x2,};
struct __cppobj fixup_data_t {fixup_type_t type;uint32 flags;uval_t base;sel_t sel;ea_t off;adiff_t displacement;};
struct __cppobj fixup_handler_t {int32 cbsize;const char *name;uint32 props;uint8 size;uint8 width;uint8 shift;uint8 rsrv4;uint32 reftype;bool (__cdecl *apply)(const fixup_handler_t *, ea_t, ea_t, int, bool, const fixup_data_t *);uval_t (__cdecl *get_value)(const fixup_handler_t *, ea_t);bool (__cdecl *patch_value)(const fixup_handler_t *, ea_t, const fixup_data_t *);};
struct fixup_info_t {ea_t ea;fixup_data_t fd;};
typedef uint16 fixup_type_t;
typedef qvector<fixup_info_t> fixups_t;
typedef uint32 flags_t;
typedef float float_t;
struct __cppobj form_actions_t {form_actions_t_vtbl *__vftable /*VFT*/;};
enum form_actions_t::dlgbtn_t : __int32 {dbt_yes = 0x0,dbt_cancel = 0x1,dbt_no = 0x2,};
struct /*VFT*/ form_actions_t_vtbl {bool (__cdecl *_get_field_value)(form_actions_t *__hidden this, int field_id, void *buf);bool (__cdecl *_set_field_value)(form_actions_t *__hidden this, int field_id, const void *buf);bool (__cdecl *enable_field)(form_actions_t *__hidden this, int field_id, bool enable);bool (__cdecl *show_field)(form_actions_t *__hidden this, int field_id, bool display);bool (__cdecl *move_field)(form_actions_t *__hidden this, int field_id, int x, int y, int w, int h);int (__cdecl *get_focused_field)(form_actions_t *__hidden this);bool (__cdecl *set_focused_field)(form_actions_t *__hidden this, int field_id);void (__cdecl *refresh_field)(form_actions_t *__hidden this, int field_id);void (__cdecl *close)(form_actions_t *__hidden this, int close_normally);void *(__cdecl *get_ud)(form_actions_t *__hidden this);bool (__cdecl *_get_str_field_value)(form_actions_t *__hidden this, int field_id, char *buf, const size_t bufsize);bool (__cdecl *enable_dialog_button)(form_actions_t *__hidden this, form_actions_t::dlgbtn_t btn, bool enabled);bool (__cdecl *is_dialog_button_enabled)(form_actions_t *__hidden this, form_actions_t::dlgbtn_t btn);};
struct __cppobj format_data_info_t {int ptvf;int radix;int max_length;int arrbase;int arrnelems;int margin;int indent;};
enum format_functype_t : __int32 {FMTFUNC_PRINTF = 0x0,FMTFUNC_SCANF = 0x1,FMTFUNC_STRFTIME = 0x2,FMTFUNC_STRFMON = 0x3,};
typedef int __cdecl formchgcb_t(int, form_actions_t *);
typedef __int64 fpos_t;
enum fpvalue_error_t : __int32 {REAL_ERROR_OK = 0x0,REAL_ERROR_FORMAT = 0xFFFFFFFF,REAL_ERROR_RANGE = 0xFFFFFFFE,REAL_ERROR_BADDATA = 0xFFFFFFFD,REAL_ERROR_FPOVER = 0x1,REAL_ERROR_BADSTR = 0x2,REAL_ERROR_ZERODIV = 0x3,REAL_ERROR_INTOVER = 0x4,};
enum fpvalue_kind_t : __int32 {FPV_BADARG = 0x0,FPV_NORM = 0x1,FPV_NAN = 0x2,FPV_PINF = 0x3,FPV_NINF = 0x4,};
struct __cppobj fpvalue_t {uint16 w[6];};
enum frame_part_t : __int32 {FPC_ARGS = 0x0,FPC_RETADDR = 0x1,FPC_SAVREGS = 0x2,FPC_LVARS = 0x3,};
struct __cppobj func_item_iterator_t {func_tail_iterator_t fti;ea_t ea;};
struct __cppobj func_parent_iterator_t {func_t *fnt;int idx;};
struct __cppobj func_t : range_t {uint64 flags;union {struct {uval_t frame;asize_t frsize;ushort frregs;asize_t argsize;asize_t fpd;bgcolor_t color;uint32 pntqty;stkpnt_t *points;int regvarqty;regvar_t *regvars;int llabelqty;llabel_t *llabels;int regargqty;regarg_t *regargs;int tailqty;range_t *tails;};struct {ea_t owner;int refqty;ea_t *referers;};};};
union func_t::$C940058B2272AD9112E2141245617273 {struct {uval_t frame;asize_t frsize;ushort frregs;asize_t argsize;asize_t fpd;bgcolor_t color;uint32 pntqty;stkpnt_t *points;int regvarqty;regvar_t *regvars;int llabelqty;llabel_t *llabels;int regargqty;regarg_t *regargs;int tailqty;range_t *tails;};struct {ea_t owner;int refqty;ea_t *referers;};};
struct __cppobj func_tail_iterator_t {func_t *pfn;int idx;range_t seglim;};
struct __cppobj func_type_data_t : funcargvec_t {int flags;tinfo_t rettype;argloc_t retloc;uval_t stkargs;reginfovec_t spoiled;cm_t cc;};
struct __cppobj funcarg_t {argloc_t argloc;qstring name;qstring cmt;tinfo_t type;uint32 flags;};
typedef qvector<funcarg_t> funcargvec_t;
enum gdecode_t : __int32 {GDE_ERROR = 0xFFFFFFFF,GDE_NO_EVENT = 0x0,GDE_ONE_EVENT = 0x1,GDE_MANY_EVENTS = 0x2,};
struct __cppobj gdl_graph_t {gdl_graph_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ gdl_graph_t_vtbl {void (__cdecl *~gdl_graph_t)(gdl_graph_t *__hidden this);char *(__cdecl *get_node_label)(const gdl_graph_t *__hidden this, char *iobuf, int iobufsize, int n);void (__cdecl *print_graph_attributes)(const gdl_graph_t *__hidden this, FILE *fp);bool (__cdecl *print_node)(const gdl_graph_t *__hidden this, FILE *fp, int n);bool (__cdecl *print_edge)(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);void (__cdecl *print_node_attributes)(const gdl_graph_t *__hidden this, FILE *fp, int n);int (__cdecl *size)(const gdl_graph_t *__hidden this);int (__cdecl *node_qty)(const gdl_graph_t *__hidden this);bool (__cdecl *exists)(const gdl_graph_t *__hidden this, int node);int (__cdecl *entry)(const gdl_graph_t *__hidden this);int (__cdecl *exit)(const gdl_graph_t *__hidden this);int (__cdecl *nsucc)(const gdl_graph_t *__hidden this, int node);int (__cdecl *npred)(const gdl_graph_t *__hidden this, int node);int (__cdecl *succ)(const gdl_graph_t *__hidden this, int node, int i);int (__cdecl *pred)(const gdl_graph_t *__hidden this, int node, int i);bool (__cdecl *empty)(const gdl_graph_t *__hidden this);bgcolor_t (__cdecl *get_node_color)(const gdl_graph_t *__hidden this, int n);bgcolor_t (__cdecl *get_edge_color)(const gdl_graph_t *__hidden this, int i, int j);};
struct __cppobj generic_linput_t {generic_linput_t_vtbl *__vftable /*VFT*/;uint64 filesize;uint32 blocksize;};
struct /*VFT*/ generic_linput_t_vtbl {ssize_t (__cdecl *read)(generic_linput_t *__hidden this, int64 off, void *buffer, size_t nbytes);void (__cdecl *~generic_linput_t)(generic_linput_t *__hidden this);};
struct __cppobj getname_info_t {size_t cb;int32 inhibitor;int32 demform;int32 demcode;};
typedef ea_t graph_id_t;
struct __cppobj graph_item_t {graph_item_type_t type;edge_t e;int n;int b;point_t p;edge_layout_point_t elp;};
enum graph_item_type_t : __int32 {git_none = 0x0,git_edge = 0x1,git_node = 0x2,git_tool = 0x3,git_text = 0x4,git_elp = 0x5,};
struct __cppobj graph_location_info_t {double zoom;double orgx;double orgy;};
struct __cppobj graph_node_visitor_t {graph_node_visitor_t_vtbl *__vftable /*VFT*/;node_set_t visited;};
struct /*VFT*/ graph_node_visitor_t_vtbl {int (__cdecl *visit_node)(graph_node_visitor_t *__hidden this, int);bool (__cdecl *is_forbidden_edge)(const graph_node_visitor_t *__hidden this, int, int);void (__cdecl *~graph_node_visitor_t)(graph_node_visitor_t *__hidden this);};
enum graph_notification_t : __int32 {grcode_calculating_layout = 0x0,grcode_layout_calculated = 0x1,grcode_changed_graph = 0x2,grcode_reserved = 0x3,grcode_clicked = 0x4,grcode_dblclicked = 0x5,grcode_creating_group = 0x6,grcode_deleting_group = 0x7,grcode_group_visibility = 0x8,grcode_gotfocus = 0x9,grcode_lostfocus = 0xA,grcode_user_refresh = 0xB,grcode_reserved2 = 0xC,grcode_user_text = 0xD,grcode_user_size = 0xE,grcode_user_title = 0xF,grcode_user_draw = 0x10,grcode_user_hint = 0x11,grcode_destroyed = 0x12,grcode_create_graph_viewer = 0x100,grcode_get_graph_viewer = 0x101,grcode_get_viewer_graph = 0x102,grcode_create_mutable_graph = 0x103,grcode_set_viewer_graph = 0x104,grcode_refresh_viewer = 0x105,grcode_fit_window = 0x106,grcode_get_curnode = 0x107,grcode_center_on = 0x108,grcode_get_selection = 0x109,grcode_del_custom_layout = 0x10A,grcode_set_custom_layout = 0x10B,grcode_set_graph_groups = 0x10C,grcode_clear = 0x10D,grcode_create_digraph_layout = 0x10E,grcode_create_tree_layout = 0x10F,grcode_create_circle_layout = 0x110,grcode_get_node_representative = 0x111,grcode_find_subgraph_node = 0x112,grcode_create_group = 0x113,grcode_get_custom_layout = 0x114,grcode_get_graph_groups = 0x115,grcode_empty = 0x116,grcode_is_visible_node = 0x117,grcode_delete_group = 0x118,grcode_change_group_visibility = 0x119,grcode_set_edge = 0x11A,grcode_node_qty = 0x11B,grcode_nrect = 0x11C,grcode_set_titlebar_height = 0x11D,grcode_create_user_graph_place = 0x11E,grcode_create_disasm_graph1 = 0x11F,grcode_create_disasm_graph2 = 0x120,grcode_set_node_info = 0x121,grcode_get_node_info = 0x122,grcode_del_node_info = 0x123,grcode_viewer_create_groups = 0x124,grcode_viewer_delete_groups = 0x125,grcode_viewer_groups_visibility = 0x126,grcode_viewer_create_groups_vec = 0x127,grcode_viewer_delete_groups_vec = 0x128,grcode_viewer_groups_visibility_vec = 0x129,grcode_delete_mutable_graph = 0x12A,grcode_edge_infos_wrapper_copy = 0x12B,grcode_edge_infos_wrapper_clear = 0x12C,grcode_attach_menu_item = 0x12D,grcode_set_gli = 0x12E,grcode_get_gli = 0x12F,};
struct __cppobj graph_path_visitor_t {graph_path_visitor_t_vtbl *__vftable /*VFT*/;intvec_t path;bool prune;};
struct /*VFT*/ graph_path_visitor_t_vtbl {int (__cdecl *walk_forward)(graph_path_visitor_t *__hidden this, int);int (__cdecl *walk_backward)(graph_path_visitor_t *__hidden this, int);void (__cdecl *~graph_path_visitor_t)(graph_path_visitor_t *__hidden this);};
typedef qvector<row_info_t> graph_row_info_t;
typedef struct TWidget graph_viewer_t;
struct __cppobj graph_visitor_t {graph_visitor_t_vtbl *__vftable /*VFT*/;abstract_graph_t *g;};
struct /*VFT*/ graph_visitor_t_vtbl {int (__cdecl *visit_node)(graph_visitor_t *__hidden this, int n, rect_t *r);int (__cdecl *visit_edge)(graph_visitor_t *__hidden this, edge_t e, edge_info_t *ei);};
struct group_crinfo_t {intvec_t nodes;qstring text;};
typedef qvector<group_crinfo_t> groups_crinfos_t;
enum gtd_func_t : __int32 {GTD_CALC_ARGLOCS = 0x0,GTD_NO_ARGLOCS = 0x80,};
enum gtd_udt_t : __int32 {GTD_CALC_LAYOUT = 0x0,GTD_NO_LAYOUT = 0x80,GTD_DEL_BITFLDS = 0x40,};
enum gts_code_t : __int32 {GTS_NESTED = 0x1,GTS_BASECLASS = 0x2,};
typedef int __cdecl h2ti_type_cb(const char *, const tinfo_t *, const char *, const uint64 *, void *);
typedef bool __cdecl has_delay_slot_t(ea_t);
typedef int help_t;
typedef void *hexdsp_t(int, ...);
struct __cppobj hexplace_gen_t {hexplace_gen_t_vtbl *__vftable /*VFT*/;};
enum hexplace_gen_t::byte_kind_t : __int32 {BK_VALID = 0x0,BK_INVALIDADDR = 0x1,BK_NOVALUE = 0x2,};
enum hexplace_gen_t::data_kind_t : __int32 {dk_float = 0x0,dk_int = 0x1,dk_addr_names = 0x2,dk_addr_text = 0x3,};
enum hexplace_gen_t::int_format_t : __int32 {if_hex = 0x0,if_signed = 0x1,if_unsigned = 0x2,};
struct /*VFT*/ hexplace_gen_t_vtbl {bool (__cdecl *is_editing)(const hexplace_gen_t *__hidden this);bool (__cdecl *is_editing_text)(const hexplace_gen_t *__hidden this);bool (__cdecl *is_curitem_changed)(const hexplace_gen_t *__hidden this);bool (__cdecl *is_edited_byte)(const hexplace_gen_t *__hidden this, ea_t ea, uint64 *out_value);hexplace_gen_t::byte_kind_t (__cdecl *get_byte_value)(const hexplace_gen_t *__hidden this, ea_t ea, uint64 *out_value, bool *out_edited);void (__cdecl *get_encoding)(const hexplace_gen_t *__hidden this, qstring *out);ea_t (__cdecl *get_cur_item_ea)(const hexplace_gen_t *__hidden this);void (__cdecl *get_cur_item_text)(const hexplace_gen_t *__hidden this, qstring *out);int (__cdecl *get_alignment)(const hexplace_gen_t *__hidden this);int (__cdecl *get_line_len)(const hexplace_gen_t *__hidden this, ea_t ea);int (__cdecl *get_items_per_line)(const hexplace_gen_t *__hidden this);int (__cdecl *get_bytes_per_item)(const hexplace_gen_t *__hidden this);int (__cdecl *get_item_width)(const hexplace_gen_t *__hidden this, ea_t ea);hexplace_gen_t::data_kind_t (__cdecl *get_data_kind)(const hexplace_gen_t *__hidden this);hexplace_gen_t::int_format_t (__cdecl *get_int_format)(const hexplace_gen_t *__hidden this);bool (__cdecl *has_central_separator)(const hexplace_gen_t *__hidden this);bool (__cdecl *show_text)(const hexplace_gen_t *__hidden this);bool (__cdecl *show_segaddr)(const hexplace_gen_t *__hidden this);int (__cdecl *get_bitness)(const hexplace_gen_t *__hidden this);};
struct __cppobj hexplace_t : idaplace_t {ea_t sol;};
struct /*VFT*/ hexplace_t_vtbl {void (__cdecl *print)(const hexplace_t *__hidden this, qstring *buf, void *ud);uval_t (__cdecl *touval)(const hexplace_t *__hidden this, void *ud);place_t *(__cdecl *clone)(const hexplace_t *__hidden this);void (__cdecl *copyfrom)(hexplace_t *__hidden this, const place_t *from);place_t *(__cdecl *makeplace)(const hexplace_t *__hidden this, void *ud, uval_t x, int _lnnum);int (__cdecl *compare)(const hexplace_t *__hidden this, const place_t *t2);void (__cdecl *adjust)(hexplace_t *__hidden this, void *ud);bool (__cdecl *prev)(hexplace_t *__hidden this, void *ud);bool (__cdecl *next)(hexplace_t *__hidden this, void *ud);bool (__cdecl *beginning)(const hexplace_t *__hidden this, void *ud);bool (__cdecl *ending)(const hexplace_t *__hidden this, void *ud);int (__cdecl *generate)(const hexplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);void (__cdecl *serialize)(const hexplace_t *__hidden this, bytevec_t *out);bool (__cdecl *deserialize)(hexplace_t *__hidden this, const uchar **pptr, const uchar *end);int (__cdecl *id)(const hexplace_t *__hidden this);const char *(__cdecl *name)(const hexplace_t *__hidden this);ea_t (__cdecl *toea)(const hexplace_t *__hidden this);bool (__cdecl *rebase)(hexplace_t *__hidden this, const segm_move_infos_t *infos);place_t *(__cdecl *enter)(const hexplace_t *__hidden this, uint32 *out_flags);void (__cdecl *leave)(const hexplace_t *__hidden this, uint32 flags);int (__cdecl *compare2)(const hexplace_t *__hidden this, const place_t *t2, void *ud);};
struct hexview_t;
struct __cppobj hidden_range_t : range_t {char *description;char *header;char *footer;bool visible;bgcolor_t color;};
struct __cppobj highlighter_cbs_t {highlighter_cbs_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ highlighter_cbs_t_vtbl {void (__cdecl *~highlighter_cbs_t)(highlighter_cbs_t *__hidden this);void (__cdecl *set_style)(highlighter_cbs_t *__hidden this, int32, int32, syntax_highlight_style);int32 (__cdecl *prev_block_state)(highlighter_cbs_t *__hidden this);int32 (__cdecl *cur_block_state)(highlighter_cbs_t *__hidden this);void (__cdecl *set_block_state)(highlighter_cbs_t *__hidden this, int32);};
typedef ssize_t __cdecl hook_cb_t(void *, int, va_list);
enum hook_type_t : __int32 {HT_IDP = 0x0,HT_UI = 0x1,HT_DBG = 0x2,HT_IDB = 0x3,HT_DEV = 0x4,HT_VIEW = 0x5,HT_OUTPUT = 0x6,HT_GRAPH = 0x7,HT_IDD = 0x8,HT_LAST = 0x9,};
typedef int __cdecl html_footer_cb_t(FILE *);
typedef int __cdecl html_header_cb_t(FILE *);
typedef int __cdecl html_line_cb_t(FILE *, const qstring *, bgcolor_t, bgcolor_t);
struct __cppobj ida_lowertype_helper_t : lowertype_helper_t {const tinfo_t *tif;ea_t ea;int purged_bytes;};
struct /*VFT*/ ida_lowertype_helper_t_vtbl {bool (__cdecl *func_has_stkframe_hole)(ida_lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *candidate_data);int (__cdecl *get_func_purged_bytes)(ida_lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *);};
struct ida_movable_type<argloc_t> {};
struct ida_movable_type<argpart_t> {};
struct ida_movable_type<array_type_data_t> {};
struct ida_movable_type<bitfield_type_data_t> {};
struct ida_movable_type<bpt_location_t> {};
struct ida_movable_type<bpt_t> {};
struct ida_movable_type<call_stack_info_t> {};
struct ida_movable_type<catch_t> {};
struct ida_movable_type<cliopt_t> {};
struct ida_movable_type<compiled_binpat_t> {};
struct ida_movable_type<dbg_info_t> {};
struct ida_movable_type<debug_event_t> {};
struct ida_movable_type<direntry_t> {};
struct ida_movable_type<dirtree_cursor_t> {};
struct ida_movable_type<ea_name_t> {};
struct ida_movable_type<edge_t> {};
struct ida_movable_type<enum_member_t> {};
struct ida_movable_type<enum_type_data_t> {};
struct ida_movable_type<exception_info_t> {};
struct ida_movable_type<fixup_info_t> {};
struct ida_movable_type<func_t> {};
struct ida_movable_type<funcarg_t> {};
struct ida_movable_type<idc_global_t> {};
struct ida_movable_type<idc_value_t> {};
struct ida_movable_type<idp_desc_t> {};
struct ida_movable_type<idp_name_t> {};
struct ida_movable_type<ioport_bit_t> {};
struct ida_movable_type<ioport_t> {};
struct ida_movable_type<jarr_t> {};
struct ida_movable_type<jobj_t> {};
struct ida_movable_type<jvalue_t> {};
struct ida_movable_type<kvp_t> {};
struct ida_movable_type<line_rendering_output_entry_t> {};
struct ida_movable_type<load_info_t> {};
struct ida_movable_type<locchange_md_t> {};
struct ida_movable_type<lochist_entry_t> {};
struct ida_movable_type<lochist_t> {};
struct ida_movable_type<memory_info_t> {};
struct ida_movable_type<memreg_info_t> {};
struct ida_movable_type<modinfo_t> {};
struct ida_movable_type<movbpt_info_t> {};
struct ida_movable_type<point_t> {};
struct ida_movable_type<process_info_t> {};
struct ida_movable_type<ptr_type_data_t> {};
struct ida_movable_type<range_t> {};
struct ida_movable_type<rangeset_t> {};
struct ida_movable_type<rect_t> {};
struct ida_movable_type<refinfo_desc_t> {};
struct ida_movable_type<reg_access_t> {};
struct ida_movable_type<reg_info_t> {};
struct ida_movable_type<regarg_t> {};
struct ida_movable_type<register_info_t> {};
struct ida_movable_type<regobj_t> {};
struct ida_movable_type<regval_t> {};
struct ida_movable_type<regvar_t> {};
struct ida_movable_type<scattered_aloc_t> {};
struct ida_movable_type<scattered_segm_t> {};
struct ida_movable_type<segm_move_info_t> {};
struct ida_movable_type<seh_t> {};
struct ida_movable_type<simd_info_t> {};
struct ida_movable_type<snapshot_t> {};
struct ida_movable_type<sreg_range_t> {};
struct ida_movable_type<stkpnt_t> {};
struct ida_movable_type<string_info_t> {};
struct ida_movable_type<sync_source_t> {};
struct ida_movable_type<tev_info_reg_t> {};
struct ida_movable_type<tev_reg_value_t> {};
struct ida_movable_type<til_symbol_t> {};
struct ida_movable_type<tinfo_t> {};
struct ida_movable_type<token_t> {};
struct ida_movable_type<try_handler_t> {};
struct ida_movable_type<tryblk_t> {};
struct ida_movable_type<twinline_t> {};
struct ida_movable_type<type_attr_t> {};
struct ida_movable_type<typedef_type_data_t> {};
struct ida_movable_type<udt_member_t> {};
struct ida_movable_type<udt_type_data_t> {};
struct ida_movable_type<update_bpt_info_t> {};
struct ida_movable_type<valinfo_t> {};
struct ida_movable_type<valstr_t> {};
struct ida_movable_type<xreflist_entry_t> {};
struct __cppobj ida_syntax_highlighter_t : syntax_highlighter_t {qstrvec_t keyword_memory;ida_syntax_highlighter_t::keywords_t keywords;qstring open_cmt;ida_syntax_highlighter_t::multicmtvec_t multicmts;char literal_closer;syntax_highlight_style text_color;syntax_highlight_style comment_color;syntax_highlight_style string_color;syntax_highlight_style preprocessor_color;external_colorizers_t external_colorizers;external_ident_colorizers_t external_ident_colorizers;const char *input;const char *pending;syntax_highlight_style style;char open_strconst;char close_strconst;char open_chrconst;char close_chrconst;char escape_char;char preprocessor_char;};
struct ida_syntax_highlighter_t::keywords_style_t {qvector<ida_syntax_highlighter_t::plain_char_ptr_t> keywords;syntax_highlight_style style;};
typedef qvector<ida_syntax_highlighter_t::keywords_style_t> ida_syntax_highlighter_t::keywords_t;
struct __cppobj ida_syntax_highlighter_t::multicmt_t {qstring open_multicmt;qstring close_multicmt;};
typedef qvector<ida_syntax_highlighter_t::multicmt_t> ida_syntax_highlighter_t::multicmtvec_t;
struct __cppobj ida_syntax_highlighter_t::plain_char_ptr_t {const char *ptr;};
struct /*VFT*/ ida_syntax_highlighter_t_vtbl {void (__cdecl *~ida_syntax_highlighter_t)(ida_syntax_highlighter_t *__hidden this);};
struct __cppobj idadll_t {void *dllinfo[10];void *entry;};
struct idainfo {char tag[3];char zero;ushort version;char procname[16];ushort s_genflags;uint32 lflags;uint32 database_change_count;ushort filetype;ushort ostype;ushort apptype;uchar asmtype;uchar specsegs;uint32 af;uint32 af2;uval_t baseaddr;sel_t start_ss;sel_t start_cs;ea_t start_ip;ea_t start_ea;ea_t start_sp;ea_t main;ea_t min_ea;ea_t max_ea;ea_t omin_ea;ea_t omax_ea;ea_t lowoff;ea_t highoff;uval_t maxref;range_t privrange;sval_t netdelta;uchar xrefnum;uchar type_xrefnum;uchar refcmtnum;uchar s_xrefflag;ushort max_autoname_len;char nametype;uint32 short_demnames;uint32 long_demnames;uchar demnames;uchar listnames;uchar indent;uchar cmt_indent;ushort margin;ushort lenxref;uint32 outflags;uchar s_cmtflg;uchar s_limiter;__int16 bin_prefix_size;uchar s_prefflag;uchar strlit_flags;uchar strlit_break;char strlit_zeroes;int32 strtype;char strlit_pref[16];uval_t strlit_sernum;uval_t datatypes;compiler_info_t cc;uint32 abibits;uint32 appcall_options;uint32 padding;};
struct __cppobj idaplace_t : place_t {ea_t ea;};
struct /*VFT*/ idaplace_t_vtbl {void (__cdecl *print)(const idaplace_t *__hidden this, qstring *buf, void *ud);uval_t (__cdecl *touval)(const idaplace_t *__hidden this, void *ud);place_t *(__cdecl *clone)(const idaplace_t *__hidden this);void (__cdecl *copyfrom)(idaplace_t *__hidden this, const place_t *from);place_t *(__cdecl *makeplace)(const idaplace_t *__hidden this, void *ud, uval_t x, int _lnnum);int (__cdecl *compare)(const idaplace_t *__hidden this, const place_t *t2);void (__cdecl *adjust)(idaplace_t *__hidden this, void *ud);bool (__cdecl *prev)(idaplace_t *__hidden this, void *ud);bool (__cdecl *next)(idaplace_t *__hidden this, void *ud);bool (__cdecl *beginning)(const idaplace_t *__hidden this, void *ud);bool (__cdecl *ending)(const idaplace_t *__hidden this, void *ud);int (__cdecl *generate)(const idaplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);void (__cdecl *serialize)(const idaplace_t *__hidden this, bytevec_t *out);bool (__cdecl *deserialize)(idaplace_t *__hidden this, const uchar **pptr, const uchar *end);int (__cdecl *id)(const idaplace_t *__hidden this);const char *(__cdecl *name)(const idaplace_t *__hidden this);ea_t (__cdecl *toea)(const idaplace_t *__hidden this);bool (__cdecl *rebase)(idaplace_t *__hidden this, const segm_move_infos_t *infos);place_t *(__cdecl *enter)(const idaplace_t *__hidden this, uint32 *out_flags);void (__cdecl *leave)(const idaplace_t *__hidden this, uint32 flags);int (__cdecl *compare2)(const idaplace_t *__hidden this, const place_t *t2, void *ud);};
struct idasgn_t;
typedef int idastate_t;
enum idb_event::event_code_t : __int32 {closebase = 0x0,savebase = 0x1,upgraded = 0x2,auto_empty = 0x3,auto_empty_finally = 0x4,determined_main = 0x5,local_types_changed = 0x6,extlang_changed = 0x7,idasgn_loaded = 0x8,kernel_config_loaded = 0x9,loader_finished = 0xA,flow_chart_created = 0xB,compiler_changed = 0xC,changing_ti = 0xD,ti_changed = 0xE,changing_op_ti = 0xF,op_ti_changed = 0x10,changing_op_type = 0x11,op_type_changed = 0x12,enum_created = 0x13,deleting_enum = 0x14,enum_deleted = 0x15,renaming_enum = 0x16,enum_renamed = 0x17,changing_enum_bf = 0x18,enum_bf_changed = 0x19,changing_enum_cmt = 0x1A,enum_cmt_changed = 0x1B,enum_member_created = 0x1C,deleting_enum_member = 0x1D,enum_member_deleted = 0x1E,struc_created = 0x1F,deleting_struc = 0x20,struc_deleted = 0x21,changing_struc_align = 0x22,struc_align_changed = 0x23,renaming_struc = 0x24,struc_renamed = 0x25,expanding_struc = 0x26,struc_expanded = 0x27,struc_member_created = 0x28,deleting_struc_member = 0x29,struc_member_deleted = 0x2A,renaming_struc_member = 0x2B,struc_member_renamed = 0x2C,changing_struc_member = 0x2D,struc_member_changed = 0x2E,changing_struc_cmt = 0x2F,struc_cmt_changed = 0x30,segm_added = 0x31,deleting_segm = 0x32,segm_deleted = 0x33,changing_segm_start = 0x34,segm_start_changed = 0x35,changing_segm_end = 0x36,segm_end_changed = 0x37,changing_segm_name = 0x38,segm_name_changed = 0x39,changing_segm_class = 0x3A,segm_class_changed = 0x3B,segm_attrs_updated = 0x3C,segm_moved = 0x3D,allsegs_moved = 0x3E,func_added = 0x3F,func_updated = 0x40,set_func_start = 0x41,set_func_end = 0x42,deleting_func = 0x43,frame_deleted = 0x44,thunk_func_created = 0x45,func_tail_appended = 0x46,deleting_func_tail = 0x47,func_tail_deleted = 0x48,tail_owner_changed = 0x49,func_noret_changed = 0x4A,stkpnts_changed = 0x4B,updating_tryblks = 0x4C,tryblks_updated = 0x4D,deleting_tryblks = 0x4E,sgr_changed = 0x4F,make_code = 0x50,make_data = 0x51,destroyed_items = 0x52,renamed = 0x53,byte_patched = 0x54,changing_cmt = 0x55,cmt_changed = 0x56,changing_range_cmt = 0x57,range_cmt_changed = 0x58,extra_cmt_changed = 0x59,item_color_changed = 0x5A,callee_addr_changed = 0x5B,bookmark_changed = 0x5C,sgr_deleted = 0x5D,adding_segm = 0x5E,func_deleted = 0x5F,dirtree_mkdir = 0x60,dirtree_rmdir = 0x61,dirtree_link = 0x62,dirtree_move = 0x63,dirtree_rank = 0x64,dirtree_rminode = 0x65,dirtree_segm_moved = 0x66,enum_width_changed = 0x67,enum_flag_changed = 0x68,enum_ordinal_changed = 0x69,};
struct idc_class_t;
typedef error_t __cdecl idc_func_t(idc_value_t *, idc_value_t *);
struct __cppobj idc_global_t {qstring name;idc_value_t value;};
struct idc_object_t;
struct __cppobj idc_resolver_t {idc_resolver_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ idc_resolver_t_vtbl {uval_t (__cdecl *resolve_name)(idc_resolver_t *__hidden this, const char *name);};
struct __cppobj idc_value_t {char vtype;union {sval_t num;fpvalue_t e;idc_object_t *obj;int funcidx;void *pvoid;int64 i64;uchar reserve[24];};};
union idc_value_t::$D589224ACA3955A7C89073061DACDDE8 {sval_t num;fpvalue_t e;idc_object_t *obj;int funcidx;void *pvoid;int64 i64;uchar reserve[24];};
typedef qvector<idc_global_t> idc_vars_t;
struct idcfuncs_t {size_t qnty;ext_idcfunc_t *funcs;error_t (*startup)(void);error_t (*shutdown)(void);void (*init_idc)(void);void (*term_idc)(void);bool (*is_database_open)(void);size_t (__cdecl *ea2str)(char *, size_t, ea_t);bool (__cdecl *undeclared_variable_ok)(const char *);int get_unkvar;int set_unkvar;int exec_resolved_func;int calc_sizeof;int get_field_ea;};
struct __cppobj idd_opinfo_t {bool modified;ea_t ea;regval_t value;int debregidx;int value_size;};
struct __cppobj idp_desc_t {qstring path;time_t mtime;qstring family;idp_names_t names;bool is_script;bool checked;};
typedef qvector<idp_desc_t> idp_descs_t;
struct __cppobj idp_name_t {qstring lname;qstring sname;bool hidden;};
typedef qvector<idp_name_t> idp_names_t;
struct __cppobj ignore_micro_t {netnode ignore_micro;};
typedef int ignore_name_def_t;
struct impinfo_t {const char *dllname;void (__cdecl *func)(uval_t, const char *, uval_t);uval_t node;};
typedef int __cdecl import_enum_cb_t(ea_t, const char *, uval_t, void *);
typedef int __cdecl importer_t(linput_t *, impinfo_t *);
enum inftag_t : __int32 {INF_VERSION = 0x0,INF_PROCNAME = 0x1,INF_GENFLAGS = 0x2,INF_LFLAGS = 0x3,INF_DATABASE_CHANGE_COUNT = 0x4,INF_FILETYPE = 0x5,INF_OSTYPE = 0x6,INF_APPTYPE = 0x7,INF_ASMTYPE = 0x8,INF_SPECSEGS = 0x9,INF_AF = 0xA,INF_AF2 = 0xB,INF_BASEADDR = 0xC,INF_START_SS = 0xD,INF_START_CS = 0xE,INF_START_IP = 0xF,INF_START_EA = 0x10,INF_START_SP = 0x11,INF_MAIN = 0x12,INF_MIN_EA = 0x13,INF_MAX_EA = 0x14,INF_OMIN_EA = 0x15,INF_OMAX_EA = 0x16,INF_LOWOFF = 0x17,INF_HIGHOFF = 0x18,INF_MAXREF = 0x19,INF_PRIVRANGE = 0x1A,INF_PRIVRANGE_START_EA = 0x1B,INF_PRIVRANGE_END_EA = 0x1C,INF_NETDELTA = 0x1D,INF_XREFNUM = 0x1E,INF_TYPE_XREFNUM = 0x1F,INF_REFCMTNUM = 0x20,INF_XREFFLAG = 0x21,INF_MAX_AUTONAME_LEN = 0x22,INF_NAMETYPE = 0x23,INF_SHORT_DEMNAMES = 0x24,INF_LONG_DEMNAMES = 0x25,INF_DEMNAMES = 0x26,INF_LISTNAMES = 0x27,INF_INDENT = 0x28,INF_CMT_INDENT = 0x29,INF_MARGIN = 0x2A,INF_LENXREF = 0x2B,INF_OUTFLAGS = 0x2C,INF_CMTFLG = 0x2D,INF_LIMITER = 0x2E,INF_BIN_PREFIX_SIZE = 0x2F,INF_PREFFLAG = 0x30,INF_STRLIT_FLAGS = 0x31,INF_STRLIT_BREAK = 0x32,INF_STRLIT_ZEROES = 0x33,INF_STRTYPE = 0x34,INF_STRLIT_PREF = 0x35,INF_STRLIT_SERNUM = 0x36,INF_DATATYPES = 0x37,INF_CC = 0x38,INF_CC_ID = 0x39,INF_CC_CM = 0x3A,INF_CC_SIZE_I = 0x3B,INF_CC_SIZE_B = 0x3C,INF_CC_SIZE_E = 0x3D,INF_CC_DEFALIGN = 0x3E,INF_CC_SIZE_S = 0x3F,INF_CC_SIZE_L = 0x40,INF_CC_SIZE_LL = 0x41,INF_CC_SIZE_LDBL = 0x42,INF_ABIBITS = 0x43,INF_APPCALL_OPTIONS = 0x44,INF_FILE_FORMAT_NAME = 0x45,INF_GROUPS = 0x46,INF_H_PATH = 0x47,INF_C_MACROS = 0x48,INF_INCLUDE = 0x49,INF_DUALOP_GRAPH = 0x4A,INF_DUALOP_TEXT = 0x4B,INF_MD5 = 0x4C,INF_IDA_VERSION = 0x4D,INF_STR_ENCODINGS = 0x4E,INF_DBG_BINPATHS = 0x4F,INF_SHA256 = 0x50,INF_ABINAME = 0x51,INF_ARCHIVE_PATH = 0x52,INF_PROBLEMS = 0x53,INF_SELECTORS = 0x54,INF_NOTEPAD = 0x55,INF_SRCDBG_PATHS = 0x56,INF_SRCDBG_UNDESIRED = 0x57,INF_INITIAL_VERSION = 0x58,INF_CTIME = 0x59,INF_ELAPSED = 0x5A,INF_NOPENS = 0x5B,INF_CRC32 = 0x5C,INF_IMAGEBASE = 0x5D,INF_IDSNODE = 0x5E,INF_FSIZE = 0x5F,INF_OUTFILEENC = 0x60,INF_INPUT_FILE_PATH = 0x61,INF_LAST = 0x62,};
typedef _ino_t ino_t;
typedef uval_t inode_t;
typedef qvector<unsigned long long> inodevec_t;
enum input_event_kind_t : __int32 {iek_unknown = 0x0,iek_shortcut = 0x1,iek_key_press = 0x2,iek_key_release = 0x3,iek_mouse_button_press = 0x4,iek_mouse_button_release = 0x5,iek_mouse_wheel = 0x6,};
typedef int input_event_modifiers_t;
struct __cppobj input_event_t {int cb;input_event_kind_t kind;input_event_modifiers_t modifiers;TWidget *target;void *source;union {input_event_t::input_event_shortcut_data_t shortcut;input_event_t::input_event_keyboard_data_t keyboard;input_event_t::input_event_mouse_data_t mouse;};};
union input_event_t::$4953DA15226C435F033B39D89D558652 {input_event_t::input_event_shortcut_data_t shortcut;input_event_t::input_event_keyboard_data_t keyboard;input_event_t::input_event_mouse_data_t mouse;};
struct input_event_t::input_event_keyboard_data_t {int key;char text[8];};
struct input_event_t::input_event_mouse_data_t {int x;int y;vme_button_t button;};
struct input_event_t::input_event_shortcut_data_t {const char *action_name;};
struct __cppobj insn_t {ea_t cs;ea_t ip;ea_t ea;uint16 itype;uint16 size;union {uint32 auxpref;uint16 auxpref_u16[2];uint8 auxpref_u8[4];};char segpref;char insnpref;int16 flags;op_t ops[8];};
union insn_t::$F4FA00FEEF275F329AD5381050035CF8 {uint32 auxpref;uint16 auxpref_u16[2];uint8 auxpref_u8[4];};
struct instant_dbgopts_t {qstring debmod;qstring env;qstring host;qstring pass;int port;int pid;int event_id;bool attach;};
struct instruc_t {const char *name;uint32 feature;};
struct __cppobj int128 {ulonglong l;longlong h;};
typedef __int16 int16;
typedef __int16 int16_t;
typedef int int32;
typedef int int32_t;
typedef longlong int64;
typedef __int64 int64_t;
typedef char int8;
typedef char int8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef __int64 int_fast64_t;
typedef char int_fast8_t;
typedef __int16 int_least16_t;
typedef int int_least32_t;
typedef __int64 int_least64_t;
typedef char int_least8_t;
struct __cppobj interr_exc_t : std::exception {int code;};
struct /*VFT*/ interr_exc_t_vtbl {void (__cdecl *~interr_exc_t)(interr_exc_t *__hidden this);const char *(__cdecl *what)(const std::exception *__hidden this);};
struct __cppobj interval_t {int x0;int x1;};
struct __cppobj intmap_t : std::map<int, int> {};
typedef __int64 intmax_t;
typedef __int64 intptr_t;
struct __cppobj intset_t : std::set<int> {};
typedef qvector<int> intvec_t;
struct ioport_bit_t {qstring name;qstring cmt;};
typedef qvector<ioport_bit_t> ioport_bits_t;
struct __cppobj ioport_t {ea_t address;qstring name;qstring cmt;ioport_bits_t bits;void *userdata;};
struct __cppobj ioports_fallback_t {ioports_fallback_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ ioports_fallback_t_vtbl {bool (__cdecl *handle)(ioports_fallback_t *__hidden this, qstring *errbuf, const ioports_t *ports, const char *line);};
typedef qvector<ioport_t> ioports_t;
typedef int __cdecl is_pattern_t(switch_info_t *, const insn_t *, procmod_t *);
typedef bool __cdecl is_stkarg_load_t(const insn_t *, int *, int *);
struct __cppobj janitor_t<_iobuf *> {_iobuf **resource;};
struct __cppobj janitor_t<linput_t *> {linput_t **resource;};
struct __cppobj jarr_t {jvalues_t values;};
struct __cppobj jobj_t : qvector<kvp_t> {};
enum jtype_t : __int32 {JT_UNKNOWN = 0x0,JT_NUM = 0x1,JT_STR = 0x2,JT_OBJ = 0x3,JT_ARR = 0x4,JT_BOOL = 0x5,};
struct __cppobj jump_pattern_t {jump_pattern_t_vtbl *__vftable /*VFT*/;bool modifying_r32_spoils_r64;insn_t insn;switch_info_t *si;ea_t eas[16];bool skip[16];int non_spoiled_reg;jump_pattern_t::check_insn_t check[16];bool stop_matching;bool in_linear_flow;ea_t block_end;const char (*depends)[4];eavec_t remote_code;eavec_t extra_insn_eas;tracked_regs_t regs;};
typedef $C21FB2E1BAA97F44BFD298211C4C916B jump_pattern_t::check_insn_t;
struct /*VFT*/ jump_pattern_t_vtbl {void (__cdecl *process_delay_slot)(const jump_pattern_t *__hidden this, ea_t *, bool);bool (__cdecl *equal_ops)(const jump_pattern_t *__hidden this, const op_t *x, const op_t *y);bool (__cdecl *handle_mov)(jump_pattern_t *__hidden this, tracked_regs_t *);void (__cdecl *check_spoiled)(const jump_pattern_t *__hidden this, tracked_regs_t *_regs);op_dtype_t (__cdecl *extend_dtype)(const jump_pattern_t *__hidden this, const op_t *op);bool (__cdecl *jpi0)(jump_pattern_t *__hidden this);bool (__cdecl *jpi1)(jump_pattern_t *__hidden this);bool (__cdecl *jpi2)(jump_pattern_t *__hidden this);bool (__cdecl *jpi3)(jump_pattern_t *__hidden this);bool (__cdecl *jpi4)(jump_pattern_t *__hidden this);bool (__cdecl *jpi5)(jump_pattern_t *__hidden this);bool (__cdecl *jpi6)(jump_pattern_t *__hidden this);bool (__cdecl *jpi7)(jump_pattern_t *__hidden this);bool (__cdecl *jpi8)(jump_pattern_t *__hidden this);bool (__cdecl *jpi9)(jump_pattern_t *__hidden this);bool (__cdecl *jpia)(jump_pattern_t *__hidden this);bool (__cdecl *jpib)(jump_pattern_t *__hidden this);bool (__cdecl *jpic)(jump_pattern_t *__hidden this);bool (__cdecl *jpid)(jump_pattern_t *__hidden this);bool (__cdecl *jpie)(jump_pattern_t *__hidden this);bool (__cdecl *jpif)(jump_pattern_t *__hidden this);bool (__cdecl *pre_jpi)(jump_pattern_t *__hidden this, int);void (__cdecl *~jump_pattern_t)(jump_pattern_t *__hidden this);};
struct __cppobj jvalue_t {jtype_t _type;union {int64 _num;qstring *_str;jobj_t *_obj;jarr_t *_arr;bool _bool;};};
union jvalue_t::$86FD308AB52B8F8AFE7E7C65068A43C3 {int64 _num;qstring *_str;jobj_t *_obj;jarr_t *_arr;bool _bool;};
typedef qvector<jvalue_t> jvalues_t;
struct kvp_t {qstring key;jvalue_t value;};
struct __cppobj launch_process_params_t {size_t cb;int flags;const char *path;const char *args;ssize_t in_handle;ssize_t out_handle;ssize_t err_handle;char *env;const char *startdir;void *info;};
typedef int layout_type_t;
typedef _ldiv_t ldiv_t;
enum lecvt_code_t : __int32 {LECVT_CANCELED = 0xFFFFFFFF,LECVT_ERROR = 0x0,LECVT_OK = 0x1,};
struct __cppobj lex_value_t {bool is_unsigned;union {int64 val;uint64 uval;};};
union lex_value_t::$6E94C03EE084EC1E8773E8F11C206FDC {int64 val;uint64 uval;};
struct lexer_t;
struct libfunc_t;
typedef qvector<line_rendering_output_entry_t *> line_rendering_output_entries_refs_t;
struct __cppobj line_rendering_output_entry_t {const twinline_t *line;uint32 flags;bgcolor_t bg_color;int cpx;int nchars;};
struct __cppobj linearray_t {qstrvec_t lines;place_t *at;void *ud;color_t prefix_color;bgcolor_t bg_color;qstring extra;int dlnnum;};
struct __cppobj lines_rendering_input_t {int cb;sections_lines_refs_t sections_lines;const synced_group_t *sync_group;};
struct __cppobj lines_rendering_output_t {line_rendering_output_entries_refs_t entries;uint32 flags;};
struct __cppobj linput_buffer_t {linput_t *li;int64 lsize;};
enum linput_close_code_t : __int32 {LOC_CLOSE = 0x0,LOC_UNMAKE = 0x1,LOC_KEEP = 0x2,};
typedef janitor_t<linput_t *> linput_janitor_t;
struct linput_t;
enum linput_type_t : __int32 {LINPUT_NONE = 0x0,LINPUT_LOCAL = 0x1,LINPUT_RFILE = 0x2,LINPUT_PROCMEM = 0x3,LINPUT_GENERIC = 0x4,};
struct llabel_t;
typedef _lldiv_t lldiv_t;
struct __cppobj load_info_t {load_info_t *next;qstring dllname;qstring ftypename;qstring processor;filetype_t ftype;uint32 loader_flags;uint32 lflags;int pri;};
struct loader_t {uint32 version;uint32 flags;int (__cdecl *accept_file)(qstring *, qstring *, linput_t *, const char *);void (__cdecl *load_file)(linput_t *, ushort, const char *);int (__cdecl *save_file)(FILE *, const char *);int (__cdecl *move_segm)(ea_t, ea_t, asize_t, const char *);int (__cdecl *process_archive)(qstring *, linput_t *, qstring *, ushort *, const char *, const char *, qstring *);};
typedef int __cdecl local_tinfo_predicate_t(uint32, const tinfo_t *, void *);
struct location_t;
struct __cppobj locchange_md_t {uchar cb;uchar r;uchar f;uchar reserved;};
enum locchange_reason_t : __int32 {lcr_unknown = 0x0,lcr_goto = 0x1,lcr_user_switch = 0x2,lcr_auto_switch = 0x3,lcr_jump = 0x4,lcr_navigate = 0x5,lcr_scroll = 0x6,lcr_internal = 0x7,};
typedef lecvt_code_t __cdecl lochist_entry_cvt2_t(lochist_entry_t *, const lochist_entry_t *, TWidget *, uint32);
struct __cppobj lochist_entry_t {renderer_info_t rinfo;place_t *plce;};
typedef qvector<lochist_entry_t> lochist_entry_vec_t;
struct __cppobj lochist_t {void *ud;lochist_entry_t cur;netnode node;uint32 flags;};
struct __cppobj lock_func {const func_t *pfn;};
struct __cppobj lock_segment {const segment_t *segm;};
typedef __int64 longlong;
struct lowcnd_t {ea_t ea;qstring cndbody;bpttype_t type;bytevec_t orgbytes;insn_t cmd;bool compiled;int size;};
typedef qvector<lowcnd_t> lowcnd_vec_t;
struct __cppobj lowertype_helper_t {lowertype_helper_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ lowertype_helper_t_vtbl {bool (__cdecl *func_has_stkframe_hole)(lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *candidate_data);int (__cdecl *get_func_purged_bytes)(lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *candidate_data);};
typedef int __cdecl lx_macro_cb(void *, const char *, const char *, int, bool, bool);
typedef error_t __cdecl lx_parse_cast_t(lexer_t *, cast_t *, token_t *);
typedef int __cdecl lx_pragma_cb(void *, const char *);
typedef int __cdecl lx_preprocessor_cb(void *, const char *, int, const char *);
typedef error_t __cdecl lx_resolver_t(lexer_t *, void *, token_t *, sval_t *);
typedef int __cdecl lx_undef_cb(void *, const char *);
typedef int __cdecl lx_warning_cb(void *, const char *);
typedef ushort lxtype;
struct __cppobj macro_constructor_t {macro_constructor_t_vtbl *__vftable /*VFT*/;size_t reserved;};
struct /*VFT*/ macro_constructor_t_vtbl {void (__cdecl *~macro_constructor_t)(macro_constructor_t *__hidden this);bool (__cdecl *build_macro)(macro_constructor_t *__hidden this, insn_t *insn, bool may_go_forward);};
typedef int mangled_name_type_t;
typedef bool __cdecl may_destroy_cb_t(ea_t);
enum mbox_kind_t : __int32 {mbox_internal = 0x0,mbox_info = 0x1,mbox_warning = 0x2,mbox_error = 0x3,mbox_nomem = 0x4,mbox_feedback = 0x5,mbox_readerror = 0x6,mbox_writeerror = 0x7,mbox_filestruct = 0x8,mbox_wait = 0x9,mbox_hide = 0xA,mbox_replace = 0xB,};
typedef _Mbstatet mbstate_t;
struct __cppobj member_t {tid_t id;ea_t soff;ea_t eoff;flags_t flag;uint32 props;};
typedef qvector<memory_info_t> meminfo_vec_t;
struct __cppobj memory_deserializer_t {const uchar *ptr;const uchar *end;};
struct __cppobj memory_info_t : range_t {qstring name;qstring sclass;ea_t sbase;uchar bitness;uchar perm;};
struct memreg_info_t {ea_t ea;bytevec_t bytes;};
typedef qvector<memreg_info_t> memreg_infos_t;
struct merge_data_t;
struct minsn_t;
struct modinfo_t {qstring name;ea_t base;asize_t size;ea_t rebase_to;};
typedef qvector<modinfo_t> modinfovec_t;
enum movbpt_code_t : __int32 {MOVBPT_OK = 0x0,MOVBPT_NOT_FOUND = 0x1,MOVBPT_DEST_BUSY = 0x2,MOVBPT_BAD_TYPE = 0x3,};
typedef qvector<movbpt_code_t> movbpt_codes_t;
struct movbpt_info_t {bpt_location_t from;bpt_location_t to;};
typedef qvector<movbpt_info_t> movbpt_infos_t;
enum msg_notification_t : __int32 {msg_activated = 0x0,msg_deactivated = 0x1,msg_click = 0x2,msg_dblclick = 0x3,msg_closed = 0x4,msg_keydown = 0x5,};
struct __cppobj mutable_graph_t : abstract_graph_t {uval_t gid;intvec_t belongs;bytevec_t node_flags;array_of_intvec_t org_succs;array_of_intvec_t org_preds;array_of_intvec_t succs;array_of_intvec_t preds;mutable_graph_t::node_layout_t nodes;edge_infos_wrapper_t edges;};
typedef qvector<rect_t> mutable_graph_t::node_layout_t;
struct /*VFT*/ mutable_graph_t_vtbl {void (__cdecl *~mutable_graph_t)(mutable_graph_t *__hidden this);char *(__cdecl *get_node_label)(const gdl_graph_t *__hidden this, char *iobuf, int iobufsize, int n);void (__cdecl *print_graph_attributes)(const gdl_graph_t *__hidden this, FILE *fp);bool (__cdecl *print_node)(const gdl_graph_t *__hidden this, FILE *fp, int n);bool (__cdecl *print_edge)(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);void (__cdecl *print_node_attributes)(const gdl_graph_t *__hidden this, FILE *fp, int n);int (__cdecl *size)(const mutable_graph_t *__hidden this);int (__cdecl *node_qty)(const mutable_graph_t *__hidden this);bool (__cdecl *exists)(const mutable_graph_t *__hidden this, int node);int (__cdecl *entry)(const gdl_graph_t *__hidden this);int (__cdecl *exit)(const gdl_graph_t *__hidden this);int (__cdecl *nsucc)(const mutable_graph_t *__hidden this, int b);int (__cdecl *npred)(const mutable_graph_t *__hidden this, int b);int (__cdecl *succ)(const mutable_graph_t *__hidden this, int b, int i);int (__cdecl *pred)(const mutable_graph_t *__hidden this, int b, int i);bool (__cdecl *empty)(const mutable_graph_t *__hidden this);bgcolor_t (__cdecl *get_node_color)(const gdl_graph_t *__hidden this, int n);bgcolor_t (__cdecl *get_edge_color)(const gdl_graph_t *__hidden this, int i, int j);rect_t *(__cdecl *nrect)(mutable_graph_t *__hidden this, int n);edge_info_t *(__cdecl *get_edge)(mutable_graph_t *__hidden this, edge_t e);mutable_graph_t *(__cdecl *clone)(const mutable_graph_t *__hidden this);bool (__cdecl *redo_layout)(mutable_graph_t *__hidden this);void (__cdecl *resize)(mutable_graph_t *__hidden this, int n);int (__cdecl *add_node)(mutable_graph_t *__hidden this, const rect_t *r);ssize_t (__cdecl *del_node)(mutable_graph_t *__hidden this, int n);bool (__cdecl *add_edge)(mutable_graph_t *__hidden this, int i, int j, const edge_info_t *ei);bool (__cdecl *del_edge)(mutable_graph_t *__hidden this, int i, int j);bool (__cdecl *replace_edge)(mutable_graph_t *__hidden this, int i, int j, int x, int y);bool (__cdecl *refresh)(mutable_graph_t *__hidden this);bool (__cdecl *set_nrect)(mutable_graph_t *__hidden this, int n, const rect_t *r);bool (__cdecl *set_edge)(mutable_graph_t *__hidden this, edge_t e, const edge_info_t *ei);ea_t (__cdecl *calc_group_ea)(mutable_graph_t *__hidden this, const intvec_t *);bool (__cdecl *is_user_graph)(mutable_graph_t *__hidden this);};
enum nametype_t : __int32 {VNT_IDENT = 0x6,VNT_TYPE = 0x8,VNT_UDTMEM = 0x2,VNT_STRLIT = 0x1,VNT_VISIBLE = 0x2,};
typedef uint32 __cdecl nav_colorizer_t(ea_t, asize_t, void *);
enum navaddr_type_t : __int32 {nat_lib = 0x0,nat_fun = 0x1,nat_cod = 0x2,nat_dat = 0x3,nat_und = 0x4,nat_ext = 0x5,nat_err = 0x6,nat_gap = 0x7,nat_cur = 0x8,nat_auto = 0x9,nat_lum = 0xA,nat_hlo = 0xB,nat_last = 0xC,};
struct __cppobj netnode {nodeidx_t netnodenumber;};
struct no_regs_t {};
struct __cppobj node_info_t {size_t cb;bgcolor_t bg_color;bgcolor_t frame_color;uint32 flags;ea_t ea;qstring text;};
struct __cppobj node_iterator {const gdl_graph_t *g;int i;};
struct __cppobj node_ordering_t {intvec_t node_by_order;intvec_t order_by_node;};
struct __cppobj node_set_t : intset_t {};
typedef uint64 nodeidx_t;
typedef _off_t off_t;
enum ofile_type_t : __int32 {OFILE_MAP = 0x0,OFILE_EXE = 0x1,OFILE_IDC = 0x2,OFILE_LST = 0x3,OFILE_ASM = 0x4,OFILE_DIF = 0x5,};
typedef uint8 op_dtype_t;
struct __cppobj op_t {uchar n;optype_t type;char offb;char offo;uchar flags;op_dtype_t dtype;union {uint16 reg;uint16 phrase;};union {uval_t value;$0B605D7B00AC5C12C153272CF5BD15AF value_shorts;};union {ea_t addr;$0B605D7B00AC5C12C153272CF5BD15AF addr_shorts;};union {ea_t specval;$0B605D7B00AC5C12C153272CF5BD15AF specval_shorts;};char specflag1;char specflag2;char specflag3;char specflag4;};
union op_t::$03EE851906E7470B48652C42A8F5F22F {ea_t specval;$0B605D7B00AC5C12C153272CF5BD15AF specval_shorts;};
union op_t::$1DAE607E75260845BFCA6DE571F2D359 {uval_t value;$0B605D7B00AC5C12C153272CF5BD15AF value_shorts;};
union op_t::$63479489C28A4014434636A3BFC4DC99 {ea_t addr;$0B605D7B00AC5C12C153272CF5BD15AF addr_shorts;};
union op_t::$9FE5DDDE6246481B3EE86C7EEB25DDF5 {uint16 reg;uint16 phrase;};
union opinfo_t {refinfo_t ri;tid_t tid;strpath_t path;int32 strtype;enum_const_t ec;custom_data_type_ids_t cd;};
typedef uchar optype_t;
typedef qvector<unsigned int> ordvec_t;
struct __cppobj outctx_base_t {outctx_base_t_vtbl *__vftable /*VFT*/;ea_t insn_ea;qstring outbuf;ssize_t regname_idx;int suspop;flags_t F;uval_t *outvalues;int outvalue_getn_flags;void *user_data;void *kern_data;qstrvec_t *lnar;int lnar_maxsize;int default_lnnum;qstring line_prefix;ssize_t prefix_len;int ctxflags;int ind0;ea_t cmt_ea;qstring cmtbuf;const char *cmtptr;color_t cmtcolor;};
struct /*VFT*/ outctx_base_t_vtbl {void (__cdecl *~outctx_base_t)(outctx_base_t *__hidden this);void (__cdecl *out_vprintf)(outctx_base_t *__hidden this, const char *format, va_list va);flags_t (__cdecl *out_value)(outctx_base_t *__hidden this, const op_t *x, int outf);void (__cdecl *out_symbol)(outctx_base_t *__hidden this, char c);void (__cdecl *out_chars)(outctx_base_t *__hidden this, char c, int n);void (__cdecl *add_spaces)(outctx_base_t *__hidden this, qstring *buf, ssize_t len);void (__cdecl *out_line)(outctx_base_t *__hidden this, const char *str, color_t color);void (__cdecl *out_tagon)(outctx_base_t *__hidden this, color_t tag);void (__cdecl *out_tagoff)(outctx_base_t *__hidden this, color_t tag);void (__cdecl *out_addr_tag)(outctx_base_t *__hidden this, ea_t ea);void (__cdecl *out_colored_register_line)(outctx_base_t *__hidden this, const char *str);void (__cdecl *out_char)(outctx_base_t *__hidden this, char c);void (__cdecl *out_btoa)(outctx_base_t *__hidden this, uval_t Word, char radix);void (__cdecl *out_long)(outctx_base_t *__hidden this, sval_t v, char radix);bool (__cdecl *out_name_expr)(outctx_base_t *__hidden this, const op_t *x, ea_t ea, adiff_t off);bool (__cdecl *flush_outbuf)(outctx_base_t *__hidden this, int indent);bool (__cdecl *flush_buf)(outctx_base_t *__hidden this, const char *buf, int indent);int (__cdecl *term_outctx)(outctx_base_t *__hidden this, const char *prefix);bool (__cdecl *gen_vprintf)(outctx_base_t *__hidden this, int indent, const char *format, va_list va);bool (__cdecl *gen_empty_line)(outctx_base_t *__hidden this);bool (__cdecl *gen_border_line)(outctx_base_t *__hidden this, bool solid);bool (__cdecl *gen_colored_cmt_line_v)(outctx_base_t *__hidden this, color_t color, const char *format, va_list va);bool (__cdecl *gen_block_cmt)(outctx_base_t *__hidden this, const char *cmt, color_t color);void (__cdecl *setup_outctx)(outctx_base_t *__hidden this, const char *prefix, int makeline_flags);ssize_t (__cdecl *retrieve_cmt)(outctx_base_t *__hidden this);ssize_t (__cdecl *retrieve_name)(outctx_base_t *__hidden this, qstring *, color_t *);bool (__cdecl *gen_xref_lines)(outctx_base_t *__hidden this);void (__cdecl *init_lines_array)(outctx_base_t *__hidden this, qstrvec_t *answers, int maxsize);member_t *(__cdecl *get_stkvar)(outctx_base_t *__hidden this, const op_t *, uval_t, sval_t *, int *);bool (__cdecl *flush_and_reinit)(outctx_base_t *__hidden this);void (__cdecl *append_user_prefix)(outctx_base_t *__hidden this, const char *, int);void (__cdecl *add_aux_prefix)(outctx_base_t *__hidden this, const char *, int);void (__cdecl *out_label_addr_tag)(outctx_base_t *__hidden this);void (__cdecl *out_aux_cmts)(outctx_base_t *__hidden this);};
struct __cppobj outctx_t : outctx_base_t {ea_t bin_ea;char bin_state;int gl_bpsize;int bin_width;insn_t insn;qstring curlabel;const printop_t *wif;procmod_t *procmod;processor_t *ph;asm_t *ash;uval_t saved_immvals[8];};
struct /*VFT*/ outctx_t_vtbl {void (__cdecl *~outctx_t)(outctx_t *__hidden this);void (__cdecl *out_vprintf)(outctx_base_t *__hidden this, const char *format, va_list va);flags_t (__cdecl *out_value)(outctx_base_t *__hidden this, const op_t *x, int outf);void (__cdecl *out_symbol)(outctx_base_t *__hidden this, char c);void (__cdecl *out_chars)(outctx_base_t *__hidden this, char c, int n);void (__cdecl *add_spaces)(outctx_base_t *__hidden this, qstring *buf, ssize_t len);void (__cdecl *out_line)(outctx_base_t *__hidden this, const char *str, color_t color);void (__cdecl *out_tagon)(outctx_base_t *__hidden this, color_t tag);void (__cdecl *out_tagoff)(outctx_base_t *__hidden this, color_t tag);void (__cdecl *out_addr_tag)(outctx_base_t *__hidden this, ea_t ea);void (__cdecl *out_colored_register_line)(outctx_base_t *__hidden this, const char *str);void (__cdecl *out_char)(outctx_base_t *__hidden this, char c);void (__cdecl *out_btoa)(outctx_base_t *__hidden this, uval_t Word, char radix);void (__cdecl *out_long)(outctx_base_t *__hidden this, sval_t v, char radix);bool (__cdecl *out_name_expr)(outctx_base_t *__hidden this, const op_t *x, ea_t ea, adiff_t off);bool (__cdecl *flush_outbuf)(outctx_base_t *__hidden this, int indent);bool (__cdecl *flush_buf)(outctx_base_t *__hidden this, const char *buf, int indent);int (__cdecl *term_outctx)(outctx_base_t *__hidden this, const char *prefix);bool (__cdecl *gen_vprintf)(outctx_base_t *__hidden this, int indent, const char *format, va_list va);bool (__cdecl *gen_empty_line)(outctx_base_t *__hidden this);bool (__cdecl *gen_border_line)(outctx_base_t *__hidden this, bool solid);bool (__cdecl *gen_colored_cmt_line_v)(outctx_base_t *__hidden this, color_t color, const char *format, va_list va);bool (__cdecl *gen_block_cmt)(outctx_base_t *__hidden this, const char *cmt, color_t color);void (__cdecl *setup_outctx)(outctx_t *__hidden this, const char *prefix, int flags);ssize_t (__cdecl *retrieve_cmt)(outctx_t *__hidden this);ssize_t (__cdecl *retrieve_name)(outctx_t *__hidden this, qstring *, color_t *);bool (__cdecl *gen_xref_lines)(outctx_t *__hidden this);void (__cdecl *init_lines_array)(outctx_base_t *__hidden this, qstrvec_t *answers, int maxsize);member_t *(__cdecl *get_stkvar)(outctx_base_t *__hidden this, const op_t *, uval_t, sval_t *, int *);bool (__cdecl *flush_and_reinit)(outctx_base_t *__hidden this);void (__cdecl *append_user_prefix)(outctx_base_t *__hidden this, const char *, int);void (__cdecl *add_aux_prefix)(outctx_base_t *__hidden this, const char *, int);void (__cdecl *out_label_addr_tag)(outctx_base_t *__hidden this);void (__cdecl *out_aux_cmts)(outctx_base_t *__hidden this);void (__cdecl *out_mnem)(outctx_t *__hidden this, int width, const char *postfix);void (__cdecl *out_custom_mnem)(outctx_t *__hidden this, const char *mnem, int width, const char *postfix);void (__cdecl *out_mnemonic)(outctx_t *__hidden this);bool (__cdecl *out_one_operand)(outctx_t *__hidden this, int n);size_t (__cdecl *get_immvals)(outctx_t *__hidden this, uval_t *out, int i);void (__cdecl *out_immchar_cmts)(outctx_t *__hidden this);void (__cdecl *gen_func_header)(outctx_t *__hidden this, func_t *pfn);void (__cdecl *gen_func_footer)(outctx_t *__hidden this, const func_t *pfn);void (__cdecl *out_data)(outctx_t *__hidden this, bool analyze_only);bool (__cdecl *out_specea)(outctx_t *__hidden this, uchar segtype);void (__cdecl *gen_header_extra)(outctx_t *__hidden this);void (__cdecl *gen_header)(outctx_t *__hidden this, int flags, const char *proc_name, const char *proc_flavour);};
typedef uchar p_list;
typedef uchar p_string;
enum path_type_t : __int32 {PATH_TYPE_CMD = 0x0,PATH_TYPE_IDB = 0x1,PATH_TYPE_ID0 = 0x2,};
typedef int pid_t;
struct __cppobj place_t {place_t_vtbl *__vftable /*VFT*/;int lnnum;};
struct /*VFT*/ place_t_vtbl {void (__cdecl *print)(const place_t *__hidden this, qstring *vout, void *ud);uval_t (__cdecl *touval)(const place_t *__hidden this, void *ud);place_t *(__cdecl *clone)(const place_t *__hidden this);void (__cdecl *copyfrom)(place_t *__hidden this, const place_t *from);place_t *(__cdecl *makeplace)(const place_t *__hidden this, void *ud, uval_t x, int lnnum);int (__cdecl *compare)(const place_t *__hidden this, const place_t *t2);void (__cdecl *adjust)(place_t *__hidden this, void *ud);bool (__cdecl *prev)(place_t *__hidden this, void *ud);bool (__cdecl *next)(place_t *__hidden this, void *ud);bool (__cdecl *beginning)(const place_t *__hidden this, void *ud);bool (__cdecl *ending)(const place_t *__hidden this, void *ud);int (__cdecl *generate)(const place_t *__hidden this, qstrvec_t *out, int *out_deflnnum, color_t *out_pfx_color, bgcolor_t *out_bgcolor, void *ud, int maxsize);void (__cdecl *serialize)(const place_t *__hidden this, bytevec_t *out);bool (__cdecl *deserialize)(place_t *__hidden this, const uchar **pptr, const uchar *end);int (__cdecl *id)(const place_t *__hidden this);const char *(__cdecl *name)(const place_t *__hidden this);ea_t (__cdecl *toea)(const place_t *__hidden this);bool (__cdecl *rebase)(place_t *__hidden this, const segm_move_infos_t *);place_t *(__cdecl *enter)(const place_t *__hidden this, uint32 *);void (__cdecl *leave)(const place_t *__hidden this, uint32);int (__cdecl *compare2)(const place_t *__hidden this, const place_t *t2, void *);};
struct plugin_info_t {plugin_info_t *next;char *path;char *org_name;char *name;ushort org_hotkey;ushort hotkey;size_t arg;plugin_t *entry;idadll_t dllmem;int flags;char *comment;};
struct __cppobj plugin_t {int version;int flags;plugmod_t *(*init)(void);void (*term)(void);bool (__cdecl *run)(size_t);const char *comment;const char *help;const char *wanted_name;const char *wanted_hotkey;};
struct __cppobj plugmod_t {plugmod_t_vtbl *__vftable /*VFT*/;size_t owner;size_t reserved;};
struct /*VFT*/ plugmod_t_vtbl {bool (__cdecl *run)(plugmod_t *__hidden this, size_t arg);void (__cdecl *~plugmod_t)(plugmod_t *__hidden this);};
struct __cppobj point_t {int x;int y;};
struct __cppobj pointseq_t : pointvec_t {};
typedef qvector<point_t> pointvec_t;
struct __cppobj post_event_visitor_t {post_event_visitor_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ post_event_visitor_t_vtbl {ssize_t (__cdecl *handle_post_event)(post_event_visitor_t *__hidden this, ssize_t code, int notification_code, va_list va);void (__cdecl *~post_event_visitor_t)(post_event_visitor_t *__hidden this);};
struct __cppobj predicate_t {predicate_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ predicate_t_vtbl {bool (__cdecl *should_display)(predicate_t *__hidden this, const til_t *til, const char *name, const type_t *type, const p_list *fields);void (__cdecl *~predicate_t)(predicate_t *__hidden this);};
typedef int printer_t(const char *, ...);
struct __cppobj printop_t {flags_t flags;opinfo_t ti;uchar features;int suspop;aflags_t aflags;};
typedef uchar problist_id_t;
struct proc_def_t;
struct process_info_t {pid_t pid;qstring name;};
struct __cppobj processor_t {int32 version;int32 id;uint32 flag;uint32 flag2;int32 cnbits;int32 dnbits;const char *const *psnames;const char *const *plnames;const asm_t *const *assemblers;hook_cb_t *_notify;const char *const *reg_names;int32 regs_num;int32 reg_first_sreg;int32 reg_last_sreg;int32 segreg_size;int32 reg_code_sreg;int32 reg_data_sreg;const bytes_t *codestart;const bytes_t *retcodes;int32 instruc_start;int32 instruc_end;const instruc_t *instruc;size_t tbyte_size;char real_width[4];int32 icode_return;void *unused_slot;};
enum processor_t::event_t : __int32 {ev_init = 0x0,ev_term = 0x1,ev_newprc = 0x2,ev_newasm = 0x3,ev_newfile = 0x4,ev_oldfile = 0x5,ev_newbinary = 0x6,ev_endbinary = 0x7,ev_set_idp_options = 0x8,ev_set_proc_options = 0x9,ev_ana_insn = 0xA,ev_emu_insn = 0xB,ev_out_header = 0xC,ev_out_footer = 0xD,ev_out_segstart = 0xE,ev_out_segend = 0xF,ev_out_assumes = 0x10,ev_out_insn = 0x11,ev_out_mnem = 0x12,ev_out_operand = 0x13,ev_out_data = 0x14,ev_out_label = 0x15,ev_out_special_item = 0x16,ev_gen_stkvar_def = 0x17,ev_gen_regvar_def = 0x18,ev_gen_src_file_lnnum = 0x19,ev_creating_segm = 0x1A,ev_moving_segm = 0x1B,ev_coagulate = 0x1C,ev_undefine = 0x1D,ev_treat_hindering_item = 0x1E,ev_rename = 0x1F,ev_is_far_jump = 0x20,ev_is_sane_insn = 0x21,ev_is_cond_insn = 0x22,ev_is_call_insn = 0x23,ev_is_ret_insn = 0x24,ev_may_be_func = 0x25,ev_is_basic_block_end = 0x26,ev_is_indirect_jump = 0x27,ev_is_insn_table_jump = 0x28,ev_is_switch = 0x29,ev_calc_switch_cases = 0x2A,ev_create_switch_xrefs = 0x2B,ev_is_align_insn = 0x2C,ev_is_alloca_probe = 0x2D,ev_delay_slot_insn = 0x2E,ev_is_sp_based = 0x2F,ev_can_have_type = 0x30,ev_cmp_operands = 0x31,ev_adjust_refinfo = 0x32,ev_get_operand_string = 0x33,ev_get_reg_name = 0x34,ev_str2reg = 0x35,ev_get_autocmt = 0x36,ev_get_bg_color = 0x37,ev_is_jump_func = 0x38,ev_func_bounds = 0x39,ev_verify_sp = 0x3A,ev_verify_noreturn = 0x3B,ev_create_func_frame = 0x3C,ev_get_frame_retsize = 0x3D,ev_get_stkvar_scale_factor = 0x3E,ev_demangle_name = 0x3F,ev_add_cref = 0x40,ev_add_dref = 0x41,ev_del_cref = 0x42,ev_del_dref = 0x43,ev_coagulate_dref = 0x44,ev_may_show_sreg = 0x45,ev_loader_elf_machine = 0x46,ev_auto_queue_empty = 0x47,ev_validate_flirt_func = 0x48,ev_adjust_libfunc_ea = 0x49,ev_assemble = 0x4A,ev_extract_address = 0x4B,ev_realcvt = 0x4C,ev_gen_asm_or_lst = 0x4D,ev_gen_map_file = 0x4E,ev_create_flat_group = 0x4F,ev_getreg = 0x50,ev_analyze_prolog = 0x51,ev_calc_spdelta = 0x52,ev_calcrel = 0x53,ev_find_reg_value = 0x54,ev_find_op_value = 0x55,ev_replaying_undo = 0x56,ev_ending_undo = 0x57,ev_set_code16_mode = 0x58,ev_get_code16_mode = 0x59,ev_get_procmod = 0x5A,ev_asm_installed = 0x5B,ev_get_reg_accesses = 0x5C,ev_is_control_flow_guard = 0x5D,ev_broadcast = 0x5E,ev_create_merge_handlers = 0x5F,ev_privrange_changed = 0x60,ev_last_cb_before_debugger = 0x61,ev_next_exec_insn = 0x3E8,ev_calc_step_over = 0x3E9,ev_calc_next_eas = 0x3EA,ev_get_macro_insn_head = 0x3EB,ev_get_dbr_opnum = 0x3EC,ev_insn_reads_tbit = 0x3ED,ev_clean_tbit = 0x3EE,ev_get_idd_opinfo = 0x3EF,ev_get_reg_info = 0x3F0,ev_last_cb_before_type_callbacks = 0x3F2,ev_setup_til = 0x7D0,ev_get_abi_info = 0x7D1,ev_max_ptr_size = 0x7D2,ev_get_default_enum_size = 0x7D3,ev_get_cc_regs = 0x7D4,ev_obsolete1 = 0x7D5,ev_obsolete2 = 0x7D6,ev_get_simd_types = 0x7D7,ev_calc_cdecl_purged_bytes = 0x7D8,ev_calc_purged_bytes = 0x7D9,ev_calc_retloc = 0x7DA,ev_calc_arglocs = 0x7DB,ev_calc_varglocs = 0x7DC,ev_adjust_argloc = 0x7DD,ev_lower_func_type = 0x7DE,ev_equal_reglocs = 0x7DF,ev_use_stkarg_type = 0x7E0,ev_use_regarg_type = 0x7E1,ev_use_arg_types = 0x7E2,ev_arg_addrs_ready = 0x7E3,ev_decorate_name = 0x7E4,ev_arch_changed = 0x7E5,ev_get_stkarg_area_info = 0x7E6,ev_last_cb_before_loader = 0x7E7,ev_loader = 0xBB8,};
typedef const regval_t *__cdecl processor_t::regval_getter_t(const char *, const regval_t *);
typedef qvector<process_info_t> procinfo_vec_t;
struct __cppobj procmod_t : event_listener_t, ignore_micro_t {processor_t *ph;asm_t *ash;size_t procmod_flags;size_t reserved;};
struct /*VFT*/ procmod_t_vtbl {ssize_t (__cdecl *on_event)(event_listener_t *__hidden this, ssize_t code, va_list va);void (__cdecl *~procmod_t)(procmod_t *__hidden this);};
struct __cppobj ptr_type_data_t {tinfo_t obj_type;tinfo_t closure;uchar based_ptr_size;uchar taptr_bits;tinfo_t parent;int32 delta;};
typedef __int64 ptrdiff_t;
struct __cppobj qbasic_block_t : range_t {intvec_t succ;intvec_t pred;};
struct __cppobj qffblk64_t {int attrib;char name[260];uint64 size;uint16 ff_fdate;uint16 ff_ftime;qffblk_t base;};
struct __cppobj qffblk_t {unsigned int attrib;__time64_t time_create;__time64_t time_access;__time64_t time_write;__int64 size;char name[260];intptr_t handle;int attr;unsigned __int16 ff_ftime;unsigned __int16 ff_fdate;};
struct __cppobj qflow_chart_t : cancellable_graph_t {qstring title;range_t bounds;func_t *pfn;int flags;qflow_chart_t::blocks_t blocks;int nproper;};
typedef qvector<qbasic_block_t> qflow_chart_t::blocks_t;
struct /*VFT*/ qflow_chart_t_vtbl {void (__cdecl *~qflow_chart_t)(qflow_chart_t *__hidden this);char *(__cdecl *get_node_label)(const qflow_chart_t *__hidden this, char *iobuf, int iobufsize, int n);void (__cdecl *print_graph_attributes)(const gdl_graph_t *__hidden this, FILE *fp);bool (__cdecl *print_node)(const gdl_graph_t *__hidden this, FILE *fp, int n);bool (__cdecl *print_edge)(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);void (__cdecl *print_node_attributes)(const qflow_chart_t *__hidden this, FILE *fp, int n);int (__cdecl *size)(const qflow_chart_t *__hidden this);int (__cdecl *node_qty)(const gdl_graph_t *__hidden this);bool (__cdecl *exists)(const gdl_graph_t *__hidden this, int node);int (__cdecl *entry)(const gdl_graph_t *__hidden this);int (__cdecl *exit)(const gdl_graph_t *__hidden this);int (__cdecl *nsucc)(const qflow_chart_t *__hidden this, int node);int (__cdecl *npred)(const qflow_chart_t *__hidden this, int node);int (__cdecl *succ)(const qflow_chart_t *__hidden this, int node, int i);int (__cdecl *pred)(const qflow_chart_t *__hidden this, int node, int i);bool (__cdecl *empty)(const gdl_graph_t *__hidden this);bgcolor_t (__cdecl *get_node_color)(const gdl_graph_t *__hidden this, int n);bgcolor_t (__cdecl *get_edge_color)(const gdl_graph_t *__hidden this, int i, int j);};
typedef void *qhandle_t;
struct __cppobj qiterator<qrefcnt_t<source_file_t>> : qrefcnt_obj_t {};
struct /*VFT*/ qiterator<qrefcnt_t<source_file_t>>_vtbl {void (__cdecl *release)(qrefcnt_obj_t *__hidden this);bool (__cdecl *first)(qiterator<qrefcnt_t<source_file_t>> *__hidden this);bool (__cdecl *next)(qiterator<qrefcnt_t<source_file_t>> *__hidden this);qrefcnt_t<source_file_t> (__cdecl *operator*)(qiterator<qrefcnt_t<source_file_t>> *__hidden this);qrefcnt_t<source_file_t> (__cdecl *get)(qiterator<qrefcnt_t<source_file_t>> *__hidden this);};
struct __cppobj qiterator<qrefcnt_t<source_item_t>> : qrefcnt_obj_t {};
struct /*VFT*/ qiterator<qrefcnt_t<source_item_t>>_vtbl {void (__cdecl *release)(qrefcnt_obj_t *__hidden this);bool (__cdecl *first)(qiterator<qrefcnt_t<source_item_t>> *__hidden this);bool (__cdecl *next)(qiterator<qrefcnt_t<source_item_t>> *__hidden this);qrefcnt_t<source_item_t> (__cdecl *operator*)(qiterator<qrefcnt_t<source_item_t>> *__hidden this);qrefcnt_t<source_item_t> (__cdecl *get)(qiterator<qrefcnt_t<source_item_t>> *__hidden this);};
struct __cppobj qlist<ui_request_t *> {qlist<ui_request_t *>::listnode_t node;size_t length;};
struct qlist<ui_request_t *>::const_iterator;
struct qlist<ui_request_t *>::const_reverse_iterator;
struct qlist<ui_request_t *>::iterator;
struct __cppobj qlist<ui_request_t *>::listnode_t {qlist<ui_request_t *>::listnode_t *next;qlist<ui_request_t *>::listnode_t *prev;};
struct qlist<ui_request_t *>::reverse_iterator;
struct __cppobj qmutex_locker_t {qmutex_t lock;};
typedef __qmutex_t *qmutex_t;
struct __cppobj qrefcnt_obj_t {qrefcnt_obj_t_vtbl *__vftable /*VFT*/;int refcnt;};
struct /*VFT*/ qrefcnt_obj_t_vtbl {void (__cdecl *release)(qrefcnt_obj_t *__hidden this);};
struct __cppobj qrefcnt_t<extlang_t> {extlang_t *ptr;};
struct __cppobj qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> {qiterator<qrefcnt_t<source_file_t>> *ptr;};
struct __cppobj qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> {qiterator<qrefcnt_t<source_item_t>> *ptr;};
struct __cppobj qrefcnt_t<refcnted_regex_t> {refcnted_regex_t *ptr;};
struct __cppobj qrefcnt_t<source_file_t> {source_file_t *ptr;};
struct __cppobj qrefcnt_t<source_item_t> {source_item_t *ptr;};
typedef __qsemaphore_t *qsemaphore_t;
struct __cppobj qstack<token_t> : qvector<token_t> {};
struct qstatbuf {uint64 qst_dev;uint32 qst_ino;uint32 qst_mode;uint32 qst_nlink;uint32 qst_uid;uint32 qst_gid;uint64 qst_rdev;int64 qst_size;int32 qst_blksize;int32 qst_blocks;qtime64_t qst_atime;qtime64_t qst_mtime;qtime64_t qst_ctime;};
typedef _qstring<char> qstring;
typedef qvector<_qstring<char>> qstrvec_t;
typedef int __cdecl qthread_cb_t(void *);
typedef __qthread_t *qthread_t;
typedef int32 qtime32_t;
typedef uint64 qtime64_t;
typedef __qtimer_t *qtimer_t;
typedef _qstring<unsigned char> qtype;
struct __cppobj qvector<_qstring<char>> {_qstring<char> *array;size_t n;size_t alloc;};
typedef _qstring<char> *qvector<_qstring<char>>::const_iterator;
typedef _qstring<char> *qvector<_qstring<char>>::iterator;
struct __cppobj qvector<_qstring<unsigned char>> {_qstring<unsigned char> *array;size_t n;size_t alloc;};
typedef _qstring<unsigned char> *qvector<_qstring<unsigned char>>::const_iterator;
typedef _qstring<unsigned char> *qvector<_qstring<unsigned char>>::iterator;
struct __cppobj qvector<_qstring<wchar_t>> {_qstring<wchar_t> *array;size_t n;size_t alloc;};
typedef _qstring<wchar_t> *qvector<_qstring<wchar_t>>::const_iterator;
typedef _qstring<wchar_t> *qvector<_qstring<wchar_t>>::iterator;
struct __cppobj qvector<argloc_t> {argloc_t *array;size_t n;size_t alloc;};
typedef argloc_t *qvector<argloc_t>::const_iterator;
typedef argloc_t *qvector<argloc_t>::iterator;
struct __cppobj qvector<argpart_t> {argpart_t *array;size_t n;size_t alloc;};
typedef argpart_t *qvector<argpart_t>::const_iterator;
typedef argpart_t *qvector<argpart_t>::iterator;
struct __cppobj qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> {bool (__cdecl **array)(syntax_highlight_style *, const _qstring<char> *);size_t n;size_t alloc;};
typedef bool (__cdecl **qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::const_iterator)(syntax_highlight_style *, const _qstring<char> *);
typedef bool (__cdecl **qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator)(syntax_highlight_style *, const _qstring<char> *);
struct __cppobj qvector<bool> {bool *array;size_t n;size_t alloc;};
typedef bool *qvector<bool>::const_iterator;
typedef bool *qvector<bool>::iterator;
struct __cppobj qvector<bpt_t *> {bpt_t **array;size_t n;size_t alloc;};
typedef bpt_t **qvector<bpt_t *>::const_iterator;
typedef bpt_t **qvector<bpt_t *>::iterator;
struct __cppobj qvector<bpt_t> {bpt_t *array;size_t n;size_t alloc;};
typedef bpt_t *qvector<bpt_t>::const_iterator;
typedef bpt_t *qvector<bpt_t>::iterator;
struct __cppobj qvector<bptaddrs_t> {bptaddrs_t *array;size_t n;size_t alloc;};
typedef bptaddrs_t *qvector<bptaddrs_t>::const_iterator;
typedef bptaddrs_t *qvector<bptaddrs_t>::iterator;
struct __cppobj qvector<call_stack_info_t> {call_stack_info_t *array;size_t n;size_t alloc;};
typedef call_stack_info_t *qvector<call_stack_info_t>::const_iterator;
typedef call_stack_info_t *qvector<call_stack_info_t>::iterator;
struct __cppobj qvector<catch_t> {catch_t *array;size_t n;size_t alloc;};
typedef catch_t *qvector<catch_t>::const_iterator;
typedef catch_t *qvector<catch_t>::iterator;
struct __cppobj qvector<cfgopt_set_t> {cfgopt_set_t *array;size_t n;size_t alloc;};
typedef cfgopt_set_t *qvector<cfgopt_set_t>::const_iterator;
typedef cfgopt_set_t *qvector<cfgopt_set_t>::iterator;
struct __cppobj qvector<channel_redir_t> {channel_redir_t *array;size_t n;size_t alloc;};
typedef channel_redir_t *qvector<channel_redir_t>::const_iterator;
typedef channel_redir_t *qvector<channel_redir_t>::iterator;
struct __cppobj qvector<char> {char *array;size_t n;size_t alloc;};
typedef char *qvector<char>::const_iterator;
typedef char *qvector<char>::iterator;
struct __cppobj qvector<cliopt_t> {cliopt_t *array;size_t n;size_t alloc;};
typedef cliopt_t *qvector<cliopt_t>::const_iterator;
typedef cliopt_t *qvector<cliopt_t>::iterator;
struct __cppobj qvector<compiled_binpat_t> {compiled_binpat_t *array;size_t n;size_t alloc;};
typedef compiled_binpat_t *qvector<compiled_binpat_t>::const_iterator;
typedef compiled_binpat_t *qvector<compiled_binpat_t>::iterator;
struct __cppobj qvector<const bpt_t *> {const bpt_t **array;size_t n;size_t alloc;};
typedef const bpt_t **qvector<const bpt_t *>::const_iterator;
typedef const bpt_t **qvector<const bpt_t *>::iterator;
struct __cppobj qvector<const char *> {const char **array;size_t n;size_t alloc;};
typedef const char **qvector<const char *>::const_iterator;
typedef const char **qvector<const char *>::iterator;
struct __cppobj qvector<const rangeset_t *> {const rangeset_t **array;size_t n;size_t alloc;};
typedef const rangeset_t **qvector<const rangeset_t *>::const_iterator;
typedef const rangeset_t **qvector<const rangeset_t *>::iterator;
struct __cppobj qvector<const twinline_t *> {const twinline_t **array;size_t n;size_t alloc;};
typedef const twinline_t **qvector<const twinline_t *>::const_iterator;
typedef const twinline_t **qvector<const twinline_t *>::iterator;
struct __cppobj qvector<debug_event_t> {debug_event_t *array;size_t n;size_t alloc;};
typedef debug_event_t *qvector<debug_event_t>::const_iterator;
typedef debug_event_t *qvector<debug_event_t>::iterator;
struct __cppobj qvector<direntry_t> {direntry_t *array;size_t n;size_t alloc;};
typedef direntry_t *qvector<direntry_t>::const_iterator;
typedef direntry_t *qvector<direntry_t>::iterator;
struct __cppobj qvector<dirtree_cursor_t> {dirtree_cursor_t *array;size_t n;size_t alloc;};
typedef dirtree_cursor_t *qvector<dirtree_cursor_t>::const_iterator;
typedef dirtree_cursor_t *qvector<dirtree_cursor_t>::iterator;
struct __cppobj qvector<ea_name_t> {ea_name_t *array;size_t n;size_t alloc;};
typedef ea_name_t *qvector<ea_name_t>::const_iterator;
typedef ea_name_t *qvector<ea_name_t>::iterator;
struct __cppobj qvector<edge_t> {edge_t *array;size_t n;size_t alloc;};
typedef edge_t *qvector<edge_t>::const_iterator;
typedef edge_t *qvector<edge_t>::iterator;
struct __cppobj qvector<enum_member_t> {enum_member_t *array;size_t n;size_t alloc;};
typedef enum_member_t *qvector<enum_member_t>::const_iterator;
typedef enum_member_t *qvector<enum_member_t>::iterator;
struct __cppobj qvector<exception_info_t> {exception_info_t *array;size_t n;size_t alloc;};
typedef exception_info_t *qvector<exception_info_t>::const_iterator;
typedef exception_info_t *qvector<exception_info_t>::iterator;
struct __cppobj qvector<extlang_t *> {extlang_t **array;size_t n;size_t alloc;};
typedef extlang_t **qvector<extlang_t *>::const_iterator;
typedef extlang_t **qvector<extlang_t *>::iterator;
struct __cppobj qvector<fixup_info_t> {fixup_info_t *array;size_t n;size_t alloc;};
typedef fixup_info_t *qvector<fixup_info_t>::const_iterator;
typedef fixup_info_t *qvector<fixup_info_t>::iterator;
struct __cppobj qvector<funcarg_t> {funcarg_t *array;size_t n;size_t alloc;};
typedef funcarg_t *qvector<funcarg_t>::const_iterator;
typedef funcarg_t *qvector<funcarg_t>::iterator;
struct __cppobj qvector<group_crinfo_t> {group_crinfo_t *array;size_t n;size_t alloc;};
typedef group_crinfo_t *qvector<group_crinfo_t>::const_iterator;
typedef group_crinfo_t *qvector<group_crinfo_t>::iterator;
struct __cppobj qvector<ida_syntax_highlighter_t::keywords_style_t> {ida_syntax_highlighter_t::keywords_style_t *array;size_t n;size_t alloc;};
typedef ida_syntax_highlighter_t::keywords_style_t *qvector<ida_syntax_highlighter_t::keywords_style_t>::const_iterator;
typedef ida_syntax_highlighter_t::keywords_style_t *qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator;
struct __cppobj qvector<ida_syntax_highlighter_t::multicmt_t> {ida_syntax_highlighter_t::multicmt_t *array;size_t n;size_t alloc;};
typedef ida_syntax_highlighter_t::multicmt_t *qvector<ida_syntax_highlighter_t::multicmt_t>::const_iterator;
typedef ida_syntax_highlighter_t::multicmt_t *qvector<ida_syntax_highlighter_t::multicmt_t>::iterator;
struct __cppobj qvector<ida_syntax_highlighter_t::plain_char_ptr_t> {ida_syntax_highlighter_t::plain_char_ptr_t *array;size_t n;size_t alloc;};
typedef ida_syntax_highlighter_t::plain_char_ptr_t *qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::const_iterator;
typedef ida_syntax_highlighter_t::plain_char_ptr_t *qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator;
struct __cppobj qvector<idc_global_t> {idc_global_t *array;size_t n;size_t alloc;};
typedef idc_global_t *qvector<idc_global_t>::const_iterator;
typedef idc_global_t *qvector<idc_global_t>::iterator;
struct __cppobj qvector<idp_desc_t> {idp_desc_t *array;size_t n;size_t alloc;};
typedef idp_desc_t *qvector<idp_desc_t>::const_iterator;
typedef idp_desc_t *qvector<idp_desc_t>::iterator;
struct __cppobj qvector<idp_name_t> {idp_name_t *array;size_t n;size_t alloc;};
typedef idp_name_t *qvector<idp_name_t>::const_iterator;
typedef idp_name_t *qvector<idp_name_t>::iterator;
struct __cppobj qvector<int> {int *array;size_t n;size_t alloc;};
typedef int *qvector<int>::const_iterator;
typedef int *qvector<int>::iterator;
struct __cppobj qvector<intmap_t> {intmap_t *array;size_t n;size_t alloc;};
typedef intmap_t *qvector<intmap_t>::const_iterator;
typedef intmap_t *qvector<intmap_t>::iterator;
struct __cppobj qvector<ioport_bit_t> {ioport_bit_t *array;size_t n;size_t alloc;};
typedef ioport_bit_t *qvector<ioport_bit_t>::const_iterator;
typedef ioport_bit_t *qvector<ioport_bit_t>::iterator;
struct __cppobj qvector<ioport_t> {ioport_t *array;size_t n;size_t alloc;};
typedef ioport_t *qvector<ioport_t>::const_iterator;
typedef ioport_t *qvector<ioport_t>::iterator;
struct __cppobj qvector<jvalue_t> {jvalue_t *array;size_t n;size_t alloc;};
typedef jvalue_t *qvector<jvalue_t>::const_iterator;
typedef jvalue_t *qvector<jvalue_t>::iterator;
struct __cppobj qvector<kvp_t> {kvp_t *array;size_t n;size_t alloc;};
typedef kvp_t *qvector<kvp_t>::const_iterator;
typedef kvp_t *qvector<kvp_t>::iterator;
struct __cppobj qvector<line_rendering_output_entry_t *> {line_rendering_output_entry_t **array;size_t n;size_t alloc;};
typedef line_rendering_output_entry_t **qvector<line_rendering_output_entry_t *>::const_iterator;
typedef line_rendering_output_entry_t **qvector<line_rendering_output_entry_t *>::iterator;
struct __cppobj qvector<lochist_entry_t> {lochist_entry_t *array;size_t n;size_t alloc;};
typedef lochist_entry_t *qvector<lochist_entry_t>::const_iterator;
typedef lochist_entry_t *qvector<lochist_entry_t>::iterator;
struct __cppobj qvector<long long (*)(syntax_highlight_style *, const char *)> {__int64 (__cdecl **array)(syntax_highlight_style *, const char *);size_t n;size_t alloc;};
typedef __int64 (__cdecl **qvector<long long (*)(syntax_highlight_style *, const char *)>::const_iterator)(syntax_highlight_style *, const char *);
typedef __int64 (__cdecl **qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator)(syntax_highlight_style *, const char *);
struct __cppobj qvector<long long> {__int64 *array;size_t n;size_t alloc;};
typedef __int64 *qvector<long long>::const_iterator;
typedef __int64 *qvector<long long>::iterator;
struct __cppobj qvector<lowcnd_t> {lowcnd_t *array;size_t n;size_t alloc;};
typedef lowcnd_t *qvector<lowcnd_t>::const_iterator;
typedef lowcnd_t *qvector<lowcnd_t>::iterator;
struct __cppobj qvector<memory_info_t> {memory_info_t *array;size_t n;size_t alloc;};
typedef memory_info_t *qvector<memory_info_t>::const_iterator;
typedef memory_info_t *qvector<memory_info_t>::iterator;
struct __cppobj qvector<memreg_info_t> {memreg_info_t *array;size_t n;size_t alloc;};
typedef memreg_info_t *qvector<memreg_info_t>::const_iterator;
typedef memreg_info_t *qvector<memreg_info_t>::iterator;
struct __cppobj qvector<modinfo_t> {modinfo_t *array;size_t n;size_t alloc;};
typedef modinfo_t *qvector<modinfo_t>::const_iterator;
typedef modinfo_t *qvector<modinfo_t>::iterator;
struct __cppobj qvector<movbpt_code_t> {movbpt_code_t *array;size_t n;size_t alloc;};
typedef movbpt_code_t *qvector<movbpt_code_t>::const_iterator;
typedef movbpt_code_t *qvector<movbpt_code_t>::iterator;
struct __cppobj qvector<movbpt_info_t> {movbpt_info_t *array;size_t n;size_t alloc;};
typedef movbpt_info_t *qvector<movbpt_info_t>::const_iterator;
typedef movbpt_info_t *qvector<movbpt_info_t>::iterator;
struct __cppobj qvector<node_set_t> {node_set_t *array;size_t n;size_t alloc;};
typedef node_set_t *qvector<node_set_t>::const_iterator;
typedef node_set_t *qvector<node_set_t>::iterator;
struct __cppobj qvector<op_t> {op_t *array;size_t n;size_t alloc;};
typedef op_t *qvector<op_t>::const_iterator;
typedef op_t *qvector<op_t>::iterator;
struct __cppobj qvector<point_t> {point_t *array;size_t n;size_t alloc;};
typedef point_t *qvector<point_t>::const_iterator;
typedef point_t *qvector<point_t>::iterator;
struct __cppobj qvector<process_info_t> {process_info_t *array;size_t n;size_t alloc;};
typedef process_info_t *qvector<process_info_t>::const_iterator;
typedef process_info_t *qvector<process_info_t>::iterator;
struct __cppobj qvector<qbasic_block_t> {qbasic_block_t *array;size_t n;size_t alloc;};
typedef qbasic_block_t *qvector<qbasic_block_t>::const_iterator;
typedef qbasic_block_t *qvector<qbasic_block_t>::iterator;
struct __cppobj qvector<qrefcnt_t<source_item_t>> {qrefcnt_t<source_item_t> *array;size_t n;size_t alloc;};
typedef qrefcnt_t<source_item_t> *qvector<qrefcnt_t<source_item_t>>::const_iterator;
typedef qrefcnt_t<source_item_t> *qvector<qrefcnt_t<source_item_t>>::iterator;
struct __cppobj qvector<qvector<const char *>> {qvector<const char *> *array;size_t n;size_t alloc;};
typedef qvector<const char *> *qvector<qvector<const char *>>::const_iterator;
typedef qvector<const char *> *qvector<qvector<const char *>>::iterator;
struct __cppobj qvector<qvector<const twinline_t *>> {qvector<const twinline_t *> *array;size_t n;size_t alloc;};
typedef qvector<const twinline_t *> *qvector<qvector<const twinline_t *>>::const_iterator;
typedef qvector<const twinline_t *> *qvector<qvector<const twinline_t *>>::iterator;
struct __cppobj qvector<qvector<int>> {qvector<int> *array;size_t n;size_t alloc;};
typedef qvector<int> *qvector<qvector<int>>::const_iterator;
typedef qvector<int> *qvector<qvector<int>>::iterator;
struct __cppobj qvector<qvector<long long>> {qvector<long long> *array;size_t n;size_t alloc;};
typedef qvector<long long> *qvector<qvector<long long>>::const_iterator;
typedef qvector<long long> *qvector<qvector<long long>>::iterator;
struct __cppobj qvector<range_t> {range_t *array;size_t n;size_t alloc;};
typedef range_t *qvector<range_t>::const_iterator;
typedef range_t *qvector<range_t>::iterator;
struct __cppobj qvector<rangeset_t> {rangeset_t *array;size_t n;size_t alloc;};
typedef rangeset_t *qvector<rangeset_t>::const_iterator;
typedef rangeset_t *qvector<rangeset_t>::iterator;
struct __cppobj qvector<rect_t> {rect_t *array;size_t n;size_t alloc;};
typedef rect_t *qvector<rect_t>::const_iterator;
typedef rect_t *qvector<rect_t>::iterator;
struct __cppobj qvector<refinfo_desc_t> {refinfo_desc_t *array;size_t n;size_t alloc;};
typedef refinfo_desc_t *qvector<refinfo_desc_t>::const_iterator;
typedef refinfo_desc_t *qvector<refinfo_desc_t>::iterator;
struct __cppobj qvector<reg_access_t> {reg_access_t *array;size_t n;size_t alloc;};
typedef reg_access_t *qvector<reg_access_t>::const_iterator;
typedef reg_access_t *qvector<reg_access_t>::iterator;
struct __cppobj qvector<reg_info_t> {reg_info_t *array;size_t n;size_t alloc;};
typedef reg_info_t *qvector<reg_info_t>::const_iterator;
typedef reg_info_t *qvector<reg_info_t>::iterator;
struct __cppobj qvector<register_info_t> {register_info_t *array;size_t n;size_t alloc;};
typedef register_info_t *qvector<register_info_t>::const_iterator;
typedef register_info_t *qvector<register_info_t>::iterator;
struct __cppobj qvector<regobj_t> {regobj_t *array;size_t n;size_t alloc;};
typedef regobj_t *qvector<regobj_t>::const_iterator;
typedef regobj_t *qvector<regobj_t>::iterator;
struct __cppobj qvector<regval_t> {regval_t *array;size_t n;size_t alloc;};
typedef regval_t *qvector<regval_t>::const_iterator;
typedef regval_t *qvector<regval_t>::iterator;
struct __cppobj qvector<row_info_t> {row_info_t *array;size_t n;size_t alloc;};
typedef row_info_t *qvector<row_info_t>::const_iterator;
typedef row_info_t *qvector<row_info_t>::iterator;
struct __cppobj qvector<scattered_segm_t> {scattered_segm_t *array;size_t n;size_t alloc;};
typedef scattered_segm_t *qvector<scattered_segm_t>::const_iterator;
typedef scattered_segm_t *qvector<scattered_segm_t>::iterator;
struct __cppobj qvector<segm_move_info_t> {segm_move_info_t *array;size_t n;size_t alloc;};
typedef segm_move_info_t *qvector<segm_move_info_t>::const_iterator;
typedef segm_move_info_t *qvector<segm_move_info_t>::iterator;
struct __cppobj qvector<selection_item_t> {selection_item_t *array;size_t n;size_t alloc;};
typedef selection_item_t *qvector<selection_item_t>::const_iterator;
typedef selection_item_t *qvector<selection_item_t>::iterator;
struct __cppobj qvector<simd_info_t> {simd_info_t *array;size_t n;size_t alloc;};
typedef simd_info_t *qvector<simd_info_t>::const_iterator;
typedef simd_info_t *qvector<simd_info_t>::iterator;
struct __cppobj qvector<simpleline_t> {simpleline_t *array;size_t n;size_t alloc;};
typedef simpleline_t *qvector<simpleline_t>::const_iterator;
typedef simpleline_t *qvector<simpleline_t>::iterator;
struct __cppobj qvector<snapshot_t *> {snapshot_t **array;size_t n;size_t alloc;};
typedef snapshot_t **qvector<snapshot_t *>::const_iterator;
typedef snapshot_t **qvector<snapshot_t *>::iterator;
struct __cppobj qvector<stkpnt_t> {stkpnt_t *array;size_t n;size_t alloc;};
typedef stkpnt_t *qvector<stkpnt_t>::const_iterator;
typedef stkpnt_t *qvector<stkpnt_t>::iterator;
struct __cppobj qvector<sync_source_t> {sync_source_t *array;size_t n;size_t alloc;};
typedef sync_source_t *qvector<sync_source_t>::const_iterator;
typedef sync_source_t *qvector<sync_source_t>::iterator;
struct __cppobj qvector<tev_info_reg_t> {tev_info_reg_t *array;size_t n;size_t alloc;};
typedef tev_info_reg_t *qvector<tev_info_reg_t>::const_iterator;
typedef tev_info_reg_t *qvector<tev_info_reg_t>::iterator;
struct __cppobj qvector<tev_info_t> {tev_info_t *array;size_t n;size_t alloc;};
typedef tev_info_t *qvector<tev_info_t>::const_iterator;
typedef tev_info_t *qvector<tev_info_t>::iterator;
struct __cppobj qvector<tev_reg_value_t> {tev_reg_value_t *array;size_t n;size_t alloc;};
typedef tev_reg_value_t *qvector<tev_reg_value_t>::const_iterator;
typedef tev_reg_value_t *qvector<tev_reg_value_t>::iterator;
struct __cppobj qvector<thread_name_t> {thread_name_t *array;size_t n;size_t alloc;};
typedef thread_name_t *qvector<thread_name_t>::const_iterator;
typedef thread_name_t *qvector<thread_name_t>::iterator;
struct __cppobj qvector<tinfo_t> {tinfo_t *array;size_t n;size_t alloc;};
typedef tinfo_t *qvector<tinfo_t>::const_iterator;
typedef tinfo_t *qvector<tinfo_t>::iterator;
struct __cppobj qvector<token_t> {token_t *array;size_t n;size_t alloc;};
typedef token_t *qvector<token_t>::const_iterator;
typedef token_t *qvector<token_t>::iterator;
struct __cppobj qvector<tryblk_t> {tryblk_t *array;size_t n;size_t alloc;};
typedef tryblk_t *qvector<tryblk_t>::const_iterator;
typedef tryblk_t *qvector<tryblk_t>::iterator;
struct __cppobj qvector<twinline_t> {twinline_t *array;size_t n;size_t alloc;};
typedef twinline_t *qvector<twinline_t>::const_iterator;
typedef twinline_t *qvector<twinline_t>::iterator;
struct __cppobj qvector<type_attr_t> {type_attr_t *array;size_t n;size_t alloc;};
typedef type_attr_t *qvector<type_attr_t>::const_iterator;
typedef type_attr_t *qvector<type_attr_t>::iterator;
struct __cppobj qvector<udt_member_t> {udt_member_t *array;size_t n;size_t alloc;};
typedef udt_member_t *qvector<udt_member_t>::const_iterator;
typedef udt_member_t *qvector<udt_member_t>::iterator;
struct __cppobj qvector<unsigned char> {unsigned __int8 *array;size_t n;size_t alloc;};
typedef unsigned __int8 *qvector<unsigned char>::const_iterator;
typedef unsigned __int8 *qvector<unsigned char>::iterator;
struct __cppobj qvector<unsigned int> {unsigned int *array;size_t n;size_t alloc;};
typedef unsigned int *qvector<unsigned int>::const_iterator;
typedef unsigned int *qvector<unsigned int>::iterator;
struct __cppobj qvector<unsigned long long> {unsigned __int64 *array;size_t n;size_t alloc;};
typedef unsigned __int64 *qvector<unsigned long long>::const_iterator;
typedef unsigned __int64 *qvector<unsigned long long>::iterator;
struct __cppobj qvector<update_bpt_info_t> {update_bpt_info_t *array;size_t n;size_t alloc;};
typedef update_bpt_info_t *qvector<update_bpt_info_t>::const_iterator;
typedef update_bpt_info_t *qvector<update_bpt_info_t>::iterator;
struct __cppobj qvector<valstr_t> {valstr_t *array;size_t n;size_t alloc;};
typedef valstr_t *qvector<valstr_t>::const_iterator;
typedef valstr_t *qvector<valstr_t>::iterator;
struct __cppobj qvector<wchar_t> {__int16 *array;size_t n;size_t alloc;};
typedef __int16 *qvector<wchar_t>::const_iterator;
typedef __int16 *qvector<wchar_t>::iterator;
struct __cppobj qvector<xreflist_entry_t> {xreflist_entry_t *array;size_t n;size_t alloc;};
typedef xreflist_entry_t *qvector<xreflist_entry_t>::const_iterator;
typedef xreflist_entry_t *qvector<xreflist_entry_t>::iterator;
typedef _qstring<wchar_t> qwstring;
typedef qvector<_qstring<wchar_t>> qwstrvec_t;
enum range_kind_t : __int32 {RANGE_KIND_UNKNOWN = 0x0,RANGE_KIND_FUNC = 0x1,RANGE_KIND_SEGMENT = 0x2,RANGE_KIND_HIDDEN_RANGE = 0x3,};
struct __cppobj range_marker_suspender_t {void (__cdecl *backup)(ea_t, asize_t);};
struct __cppobj range_t {ea_t start_ea;ea_t end_ea;};
typedef qvector<const rangeset_t *> rangeset_crefvec_t;
struct __cppobj rangeset_t {rangevec_t bag;const range_t *cache;int undo_code;};
typedef qvector<range_t>::const_iterator rangeset_t::const_iterator;
typedef qvector<range_t>::iterator rangeset_t::iterator;
typedef qvector<range_t> rangevec_base_t;
struct __cppobj rangevec_t : rangevec_base_t {};
struct reader_t;
struct __cppobj rect_t {int left;int top;int right;int bottom;};
struct __cppobj refcnted_regex_t : qrefcnt_obj_t {regex_t regex;};
struct /*VFT*/ refcnted_regex_t_vtbl {void (__cdecl *release)(refcnted_regex_t *__hidden this);void (__cdecl *~refcnted_regex_t)(refcnted_regex_t *__hidden this);};
struct refinfo_desc_t {uint32 type;const char *name;const char *desc;};
typedef qvector<refinfo_desc_t> refinfo_desc_vec_t;
struct __cppobj refinfo_t {ea_t target;ea_t base;adiff_t tdelta;uint32 flags;};
typedef uchar reftype_t;
struct __cppobj reg_access_t {int regnum;bitrange_t range;access_type_t access_type;uchar opnum;};
typedef qvector<reg_access_t> reg_access_vec_t;
struct __cppobj reg_accesses_t : reg_access_vec_t {};
struct __cppobj reg_info_t {int reg;int size;};
struct __cppobj regarg_t {int reg;type_t *type;char *name;};
struct __cppobj regex_cache_t {regex_cache_t::regex_cache_map_t cache;};
typedef std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> regex_cache_t::regex_cache_map_t;
typedef qrefcnt_t<refcnted_regex_t> regex_ptr_t;
struct regex_t {int re_magic;size_t re_nsub;const char *re_endp;void *re_g;};
typedef qvector<reg_info_t> reginfovec_t;
typedef unsigned __int8 register_class_t;
struct register_info_t {const char *name;uint32 flags;register_class_t register_class;op_dtype_t dtype;const char *const *bit_strings;uval_t default_bit_strings_mask;};
typedef qvector<register_info_t> register_info_vec_t;
struct regmatch_t {regoff_t rm_so;regoff_t rm_eo;};
struct __cppobj regobj_t {int regidx;int relocate;bytevec_t value;};
struct __cppobj regobjs_t : regobjvec_t {};
typedef qvector<regobj_t> regobjvec_t;
typedef off_t regoff_t;
struct __cppobj regval_t {int32 rvtype;union {uint64 ival;fpvalue_t fval;uchar reserve[24];};};
union regval_t::$E2461B07C1F03128F15079BB1FB5F381 {uint64 ival;fpvalue_t fval;uchar reserve[24];};
enum regval_type_t : __int32 {reg_unknown = 0x0,reg_sz = 0x1,reg_binary = 0x3,reg_dword = 0x4,};
typedef qvector<regval_t> regvals_t;
struct __cppobj regvar_t : range_t {char *canon;char *user;char *cmt;};
struct __cppobj relobj_t : bytevec_t {ea_t base;reloc_info_t ri;};
struct __cppobj reloc_info_t : bytevec_t {};
struct __cppobj renderer_info_pos_t {int node;__int16 cx;__int16 cy;};
struct __cppobj renderer_info_t {graph_location_info_t gli;renderer_info_t::pos_t pos;tcc_renderer_type_t rtype;};
typedef renderer_info_pos_t renderer_info_t::pos_t;
struct __cppobj renderer_pos_info_t {int node;__int16 cx;__int16 cy;__int16 sx;};
enum resume_mode_t : __int32 {RESMOD_NONE = 0x0,RESMOD_INTO = 0x1,RESMOD_OVER = 0x2,RESMOD_OUT = 0x3,RESMOD_SRCINTO = 0x4,RESMOD_SRCOVER = 0x5,RESMOD_SRCOUT = 0x6,RESMOD_USER = 0x7,RESMOD_HANDLE = 0x8,RESMOD_MAX = 0x9,};
struct __cppobj row_info_t {intvec_t nodes;int top;int bottom;};
struct rrel_t {sval_t off;int reg;};
typedef size_t rsize_t;
enum save_reg_values_t : __int32 {SAVE_ALL_VALUES = 0x0,SAVE_DIFF = 0x1,SAVE_NONE = 0x2,};
struct __cppobj scattered_aloc_t : argpartvec_t {};
typedef qvector<scattered_segm_t> scattered_image_t;
struct __cppobj scattered_segm_t : range_t {qstring name;};
enum sclass_t : __int32 {sc_unk = 0x0,sc_type = 0x1,sc_ext = 0x2,sc_stat = 0x3,sc_reg = 0x4,sc_auto = 0x5,sc_friend = 0x6,sc_virt = 0x7,};
typedef qvector<selection_item_t> screen_graph_selection_base_t;
struct __cppobj screen_graph_selection_t : screen_graph_selection_base_t {};
typedef qvector<const twinline_t *> section_lines_refs_t;
typedef qvector<qvector<const twinline_t *>> sections_lines_refs_t;
struct __cppobj segm_move_info_t {ea_t from;ea_t to;size_t size;};
typedef qvector<segm_move_info_t> segm_move_info_vec_t;
struct __cppobj segm_move_infos_t : segm_move_info_vec_t {};
struct __cppobj segment_t : range_t {uval_t name;uval_t sclass;uval_t orgbase;uchar align;uchar comb;uchar perm;uchar bitness;ushort flags;sel_t sel;sel_t defsr[16];uchar type;bgcolor_t color;};
struct __cppobj seh_t : try_handler_t {rangevec_t filter;ea_t seh_code;};
typedef uint64 sel_t;
struct __cppobj selection_item_t {bool is_node;int node;edge_layout_point_t elp;};
typedef bool __cdecl set_op_tinfo_t(const insn_t *, const op_t *, const tinfo_t *, const char *);
typedef const char *__cdecl set_options_t(const char *, int, const void *, bool);
enum setproc_level_t : __int32 {SETPROC_IDB = 0x0,SETPROC_LOADER = 0x1,SETPROC_LOADER_NON_FATAL = 0x2,SETPROC_USER = 0x3,};
struct __cppobj simd_info_t {const char *name;tinfo_t tif;uint16 size;type_t memtype;};
typedef qvector<simd_info_t> simd_info_vec_t;
struct __cppobj simple_bfi_t : backward_flow_iterator_t<no_regs_t, simple_bfi_t> {no_regs_t regs_;};
struct __cppobj simpleline_place_t : place_t {uint32 n;};
struct /*VFT*/ simpleline_place_t_vtbl {void (__cdecl *print)(const simpleline_place_t *__hidden this, qstring *buf, void *ud);uval_t (__cdecl *touval)(const simpleline_place_t *__hidden this, void *ud);place_t *(__cdecl *clone)(const simpleline_place_t *__hidden this);void (__cdecl *copyfrom)(simpleline_place_t *__hidden this, const place_t *from);place_t *(__cdecl *makeplace)(const simpleline_place_t *__hidden this, void *ud, uval_t x, int _lnnum);int (__cdecl *compare)(const simpleline_place_t *__hidden this, const place_t *t2);void (__cdecl *adjust)(simpleline_place_t *__hidden this, void *ud);bool (__cdecl *prev)(simpleline_place_t *__hidden this, void *ud);bool (__cdecl *next)(simpleline_place_t *__hidden this, void *ud);bool (__cdecl *beginning)(const simpleline_place_t *__hidden this, void *ud);bool (__cdecl *ending)(const simpleline_place_t *__hidden this, void *ud);int (__cdecl *generate)(const simpleline_place_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);void (__cdecl *serialize)(const simpleline_place_t *__hidden this, bytevec_t *out);bool (__cdecl *deserialize)(simpleline_place_t *__hidden this, const uchar **pptr, const uchar *end);int (__cdecl *id)(const simpleline_place_t *__hidden this);const char *(__cdecl *name)(const simpleline_place_t *__hidden this);ea_t (__cdecl *toea)(const simpleline_place_t *__hidden this);bool (__cdecl *rebase)(simpleline_place_t *__hidden this, const segm_move_infos_t *infos);place_t *(__cdecl *enter)(const simpleline_place_t *__hidden this, uint32 *out_flags);void (__cdecl *leave)(const simpleline_place_t *__hidden this, uint32 flags);int (__cdecl *compare2)(const simpleline_place_t *__hidden this, const place_t *t2, void *ud);};
struct __cppobj simpleline_t {qstring line;color_t color;bgcolor_t bgcolor;};
typedef char sint8;
typedef unsigned __int64 size_t;
typedef qvector<unsigned long long> sizevec_t;
enum smt_code_t : __int32 {SMT_BADARG = 0xFFFFFFFA,SMT_NOCOMPAT = 0xFFFFFFFB,SMT_WORSE = 0xFFFFFFFC,SMT_SIZE = 0xFFFFFFFD,SMT_ARRAY = 0xFFFFFFFE,SMT_OVERLAP = 0xFFFFFFFF,SMT_FAILED = 0x0,SMT_OK = 0x1,SMT_KEEP = 0x2,};
struct __cppobj snapshot_t {qtime64_t id;uint16 flags;char desc[128];char filename[260];snapshots_t children;};
typedef qvector<snapshot_t *> snapshots_t;
typedef qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> source_file_iterator;
typedef qrefcnt_t<source_file_t> source_file_ptr;
struct __cppobj source_file_t : qrefcnt_obj_t {};
struct /*VFT*/ source_file_t_vtbl {void (__cdecl *release)(source_file_t *__hidden this);srcinfo_provider_t *(__cdecl *get_provider)(const source_file_t *__hidden this);const char *(__cdecl *get_path)(source_file_t *__hidden this, qstring *errbuf);TWidget *(__cdecl *open_srcview)(source_file_t *__hidden this, strvec_t **strvec, TWidget **pview, int lnnum, int colnum);bool (__cdecl *read_file)(source_file_t *__hidden this, strvec_t *buf, qstring *errbuf);};
typedef qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> source_item_iterator;
typedef qrefcnt_t<source_item_t> source_item_ptr;
struct __cppobj source_item_t : qrefcnt_obj_t {};
struct /*VFT*/ source_item_t_vtbl {void (__cdecl *release)(source_item_t *__hidden this);source_file_iterator (__cdecl *get_source_files)(source_item_t *__hidden this);bool (__cdecl *get_name)(const source_item_t *__hidden this, qstring *buf);int (__cdecl *get_lnnum)(const source_item_t *__hidden this);int (__cdecl *get_end_lnnum)(const source_item_t *__hidden this);int (__cdecl *get_colnum)(const source_item_t *__hidden this);int (__cdecl *get_end_colnum)(const source_item_t *__hidden this);ea_t (__cdecl *get_ea)(const source_item_t *__hidden this);asize_t (__cdecl *get_size)(const source_item_t *__hidden this);bool (__cdecl *get_item_bounds)(const source_item_t *__hidden this, rangeset_t *set);source_item_ptr (__cdecl *get_parent)(const source_item_t *__hidden this, src_item_kind_t max_kind);source_item_iterator (__cdecl *create_children_iterator)(source_item_t *__hidden this);bool (__cdecl *get_hint)(const source_item_t *__hidden this, qstring *hint, const eval_ctx_t *ctx, int *nlines);bool (__cdecl *evaluate)(const source_item_t *__hidden this, const eval_ctx_t *ctx, idc_value_t *res, qstring *errbuf);bool (__cdecl *equals)(const source_item_t *__hidden this, const source_item_t *other);src_item_kind_t (__cdecl *get_item_kind)(const source_item_t *__hidden this, const eval_ctx_t *);srcinfo_provider_t *(__cdecl *get_provider)(const source_item_t *__hidden this);bool (__cdecl *get_location)(const source_item_t *__hidden this, argloc_t *, const eval_ctx_t *);bool (__cdecl *get_expr_tinfo)(const source_item_t *__hidden this, tinfo_t *tif);};
typedef qvector<qrefcnt_t<source_item_t>> source_items_t;
struct source_view_t;
enum src_item_kind_t : __int32 {SRCIT_NONE = 0x0,SRCIT_MODULE = 0x1,SRCIT_FUNC = 0x2,SRCIT_STMT = 0x3,SRCIT_EXPR = 0x4,SRCIT_STTVAR = 0x5,SRCIT_LOCVAR = 0x6,};
struct __cppobj srcinfo_provider_t {srcinfo_provider_t_vtbl *__vftable /*VFT*/;size_t cb;int flags;const char *name;const char *display_name;};
struct /*VFT*/ srcinfo_provider_t_vtbl {bool (__cdecl *enable_provider)(srcinfo_provider_t *__hidden this, bool enable);const char *(__cdecl *set_options)(srcinfo_provider_t *__hidden this, const char *keyword, int value_type, const void *value);void (__cdecl *add_module)(srcinfo_provider_t *__hidden this, const char *path, ea_t base, asize_t size);void (__cdecl *del_module)(srcinfo_provider_t *__hidden this, ea_t base);void (__cdecl *get_ready)(srcinfo_provider_t *__hidden this);int (__cdecl *get_change_flags)(srcinfo_provider_t *__hidden this);source_item_iterator (__cdecl *find_source_items)(srcinfo_provider_t *__hidden this, source_file_t *sf, int lnnum, int colnum);source_item_iterator (__cdecl *find_source_items_0)(srcinfo_provider_t *__hidden this, ea_t ea, asize_t size, src_item_kind_t level, bool may_decompile);source_file_iterator (__cdecl *create_file_iterator)(srcinfo_provider_t *__hidden this, const char *filename);source_item_iterator (__cdecl *create_item_iterator)(srcinfo_provider_t *__hidden this, const source_file_t *sf);bool (__cdecl *apply_module_info)(srcinfo_provider_t *__hidden this, const char *);source_item_ptr (__cdecl *find_static_item)(srcinfo_provider_t *__hidden this, const char *name, ea_t ea);};
struct __cppobj sreg_range_t : range_t {sel_t val;uchar tag;};
typedef void __cdecl ss_restore_cb_t(const char *, void *);
typedef ptrdiff_t ssize_t;
struct stat {_dev_t st_dev;_ino_t st_ino;unsigned __int16 st_mode;__int16 st_nlink;__int16 st_uid;__int16 st_gid;_dev_t st_rdev;_off_t st_size;time_t st_atime;time_t st_mtime;time_t st_ctime;};
struct __cppobj std::_Alloc_exact_args_t {};
struct __cppobj std::_Alloc_unpack_tuple_t {};
typedef std::_Unused_parameter std::_Any_tag;
typedef unsigned __int32 std::_Atomic_counter_t;
struct __cppobj std::_Basic_container_proxy_ptr12 {std::_Container_proxy *_Ptr;};
struct __cppobj std::_Char_traits<char, int> {};
typedef int std::_Char_traits<char, int>::int_type;
struct __cppobj std::_Char_traits<char16_t, unsigned short> {};
typedef unsigned __int16 std::_Char_traits<char16_t, unsigned short>::int_type;
struct __cppobj std::_Char_traits<char32_t, unsigned int> {};
typedef unsigned int std::_Char_traits<char32_t, unsigned int>::int_type;
struct __cppobj std::_Char_traits<unsigned short, unsigned short> {};
typedef unsigned __int16 std::_Char_traits<unsigned short, unsigned short>::int_type;
struct __cppobj std::_Char_traits<wchar_t, unsigned short> {};
typedef unsigned __int16 std::_Char_traits<wchar_t, unsigned short>::int_type;
struct __cppobj std::_Compressed_pair<std::allocator<char16_t>, std::_String_val<std::_Simple_types<char16_t>>, true> : std::allocator<char16_t> {std::_String_val<std::_Simple_types<char16_t>> _Myval2;};
struct __cppobj std::_Compressed_pair<std::allocator<char32_t>, std::_String_val<std::_Simple_types<char32_t>>, true> : std::allocator<char32_t> {std::_String_val<std::_Simple_types<char32_t>> _Myval2;};
struct __cppobj std::_Compressed_pair<std::allocator<char>, std::_String_val<std::_Simple_types<char>>, true> : std::allocator<char> {std::_String_val<std::_Simple_types<char>> _Myval2;};
struct __cppobj std::_Compressed_pair<std::allocator<std::_Tree_node<int, void *>>, std::_Tree_val<std::_Tree_simple_types<int>>, true> : std::allocator<std::_Tree_node<int, void *>> {std::_Tree_val<std::_Tree_simple_types<int>> _Myval2;};
struct __cppobj std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>, true> : std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> {std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> _Myval2;};
struct __cppobj std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>, true> : std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> {std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> _Myval2;};
struct __cppobj std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>, true> : std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> {std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> _Myval2;};
struct __cppobj std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>, true> : std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> {std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> _Myval2;};
struct __cppobj std::_Compressed_pair<std::allocator<wchar_t>, std::_String_val<std::_Simple_types<wchar_t>>, true> : std::allocator<wchar_t> {std::_String_val<std::_Simple_types<wchar_t>> _Myval2;};
struct __cppobj std::_Compressed_pair<std::less<_qstring<char>>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>, true>, true> : std::less<_qstring<char>> {std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>, true> _Myval2;};
struct __cppobj std::_Compressed_pair<std::less<int>, std::_Compressed_pair<std::allocator<std::_Tree_node<int, void *>>, std::_Tree_val<std::_Tree_simple_types<int>>, true>, true> : std::less<int> {std::_Compressed_pair<std::allocator<std::_Tree_node<int, void *>>, std::_Tree_val<std::_Tree_simple_types<int>>, true> _Myval2;};
struct __cppobj std::_Compressed_pair<std::less<int>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>, true>, true> : std::less<int> {std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>, true> _Myval2;};
struct __cppobj std::_Compressed_pair<std::less<unsigned long long>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>, true>, true> : std::less<unsigned long long> {std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>, true> _Myval2;};
struct __cppobj std::_Compressed_pair<std::less<unsigned long long>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>, true>, true> : std::less<unsigned long long> {std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>, true> _Myval2;};
typedef std::_Container_base0 std::_Container_base;
struct __cppobj std::_Container_base0 {};
struct __cppobj std::_Container_base12 {std::_Container_proxy *_Myproxy;};
struct __cppobj std::_Container_proxy {const std::_Container_base12 *_Mycont;std::_Iterator_base12 *_Myfirstiter;};
struct __cppobj std::_Default_allocate_traits {};
typedef size_t std::_Default_allocator_traits<std::allocator<char16_t>>::size_type;
typedef size_t std::_Default_allocator_traits<std::allocator<char32_t>>::size_type;
typedef size_t std::_Default_allocator_traits<std::allocator<char>>::size_type;
typedef size_t std::_Default_allocator_traits<std::allocator<int>>::size_type;
typedef std::_Default_allocator_traits<std::allocator<std::_Tree_node<int, void *>>>::value_type *std::_Default_allocator_traits<std::allocator<std::_Tree_node<int, void *>>>::pointer;
typedef std::allocator<std::_Tree_node<int, void *>>::value_type std::_Default_allocator_traits<std::allocator<std::_Tree_node<int, void *>>>::value_type;
typedef std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>>::value_type *std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>>::pointer;
typedef std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>::value_type std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>>::value_type;
typedef std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>>::value_type *std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>>::pointer;
typedef std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>::value_type std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>>::value_type;
typedef std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>>::value_type *std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>>::pointer;
typedef std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>::value_type std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>>::value_type;
typedef std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>>::value_type *std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>>::pointer;
typedef std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>::value_type std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>>::value_type;
typedef size_t std::_Default_allocator_traits<std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::size_type;
typedef size_t std::_Default_allocator_traits<std::allocator<std::pair<const int, int>>>::size_type;
typedef size_t std::_Default_allocator_traits<std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::size_type;
typedef size_t std::_Default_allocator_traits<std::allocator<std::pair<const unsigned long long, unsigned long long>>>::size_type;
typedef size_t std::_Default_allocator_traits<std::allocator<wchar_t>>::size_type;
struct std::_Default_sentinel {};
struct __cppobj std::_Distance_unknown {};
struct std::_Equal_allocators {};
struct __cppobj std::_Exact_args_t {};
struct std::_Fake_allocator {};
struct __cppobj std::_Fake_proxy_ptr_impl {};
struct std::_False_copy_cat {};
struct std::_Floating_type_traits<double> {};
struct std::_Floating_type_traits<float> {};
struct __cppobj std::_Floating_type_traits<long double> : std::_Floating_type_traits<double> {};
struct std::_Ignore {};
struct __cppobj std::_Init_locks {};
struct std::_Invoker_functor {};
struct std::_Invoker_pmd_object {};
struct std::_Invoker_pmd_pointer {};
struct std::_Invoker_pmd_refwrap {};
struct std::_Invoker_pmf_object {};
struct std::_Invoker_pmf_pointer {};
struct std::_Invoker_pmf_refwrap {};
enum std::_Invoker_strategy : __int32 {_Functor = 0x0,_Pmf_object = 0x1,_Pmf_refwrap = 0x2,_Pmf_pointer = 0x3,_Pmd_object = 0x4,_Pmd_refwrap = 0x5,_Pmd_pointer = 0x6,};
struct __cppobj std::_Is_character<char> : std::true_type {};
struct __cppobj std::_Is_character<signed char> : std::true_type {};
struct __cppobj std::_Is_character<unsigned char> : std::true_type {};
struct __cppobj std::_Is_character_or_bool<bool> : std::true_type {};
typedef __int64 std::_Iter_diff_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>;
typedef __int64 std::_Iter_diff_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>;
typedef __int64 std::_Iter_diff_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>;
typedef __int64 std::_Iter_diff_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>;
typedef __int64 std::_Iter_diff_t<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>;
typedef __int64 std::_Iter_diff_t<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>;
typedef __int64 std::_Iter_diff_t<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>;
typedef __int64 std::_Iter_diff_t<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>;
typedef __int64 std::_Iter_diff_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>;
typedef __int64 std::_Iter_diff_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>;
typedef __int64 std::_Iter_diff_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>;
typedef __int64 std::_Iter_diff_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>;
typedef __int64 std::_Iter_diff_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>;
typedef __int64 std::_Iter_diff_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>;
typedef __int64 std::_Iter_diff_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>;
typedef __int64 std::_Iter_diff_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>;
typedef __int64 std::_Iter_diff_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>;
typedef const __int16 *std::_Iter_ref_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>;
typedef const __int32 *std::_Iter_ref_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>;
typedef const char *std::_Iter_ref_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>;
typedef const __int16 *std::_Iter_ref_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>;
typedef __int16 *std::_Iter_ref_t<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>;
typedef __int32 *std::_Iter_ref_t<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>;
typedef char *std::_Iter_ref_t<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>;
typedef __int16 *std::_Iter_ref_t<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>;
typedef const int *std::_Iter_ref_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>;
typedef const std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *std::_Iter_ref_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>;
typedef const std::pair<const int, int> *std::_Iter_ref_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>;
typedef const std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *std::_Iter_ref_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>;
typedef const std::pair<const unsigned long long, unsigned long long> *std::_Iter_ref_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>;
typedef std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *std::_Iter_ref_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>;
typedef std::pair<const int, int> *std::_Iter_ref_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>;
typedef std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *std::_Iter_ref_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>;
typedef std::pair<const unsigned long long, unsigned long long> *std::_Iter_ref_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>;
typedef std::_Iterator_base0 std::_Iterator_base;
struct __cppobj std::_Iterator_base0 {};
struct __cppobj std::_Iterator_base12 {std::_Container_proxy *_Myproxy;std::_Iterator_base12 *_Mynextiter;};
typedef std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::pointer std::_Iterator_traits_base<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::pointer;
typedef std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::pointer std::_Iterator_traits_base<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::pointer;
typedef std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::pointer std::_Iterator_traits_base<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::pointer;
typedef std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::pointer std::_Iterator_traits_base<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::pointer;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::pointer std::_Iterator_traits_base<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::pointer;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::pointer std::_Iterator_traits_base<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::pointer;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::pointer std::_Iterator_traits_base<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::pointer;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::pointer std::_Iterator_traits_base<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::pointer;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::pointer std::_Iterator_traits_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::pointer;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::pointer std::_Iterator_traits_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::pointer;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::pointer std::_Iterator_traits_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::pointer;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::pointer std::_Iterator_traits_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::pointer;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::pointer std::_Iterator_traits_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::pointer;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::pointer std::_Iterator_traits_base<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::pointer;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::pointer std::_Iterator_traits_base<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::pointer;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::pointer std::_Iterator_traits_base<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::pointer;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::pointer std::_Iterator_traits_base<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::pointer;
struct __cppobj std::_Leave_proxy_unbound {};
struct __cppobj std::_Lockit {int _Locktype;};
struct std::_Make_signed2<1> {};
struct std::_Make_signed2<2> {};
struct std::_Make_signed2<4> {};
struct std::_Make_signed2<8> {};
struct std::_Make_unsigned2<1> {};
struct std::_Make_unsigned2<2> {};
struct std::_Make_unsigned2<4> {};
struct std::_Make_unsigned2<8> {};
struct __cppobj std::_Maximum<> : std::integral_constant<unsigned long long, 0> {};
struct __cppobj std::_Move_allocator_tag {};
struct __cppobj std::_Narrow_char_traits<char, int> : std::_Char_traits<char, int> {};
typedef int std::_Narrow_char_traits<char, int>::int_type;
typedef std::false_type std::_No_propagate_allocators;
struct __cppobj std::_Nontrivial_dummy_type {};
struct std::_Num_base {};
struct __cppobj std::_Num_float_base : std::_Num_base {};
struct __cppobj std::_Num_int_base : std::_Num_base {};
struct __cppobj std::_One_then_variadic_args_t {};
typedef std::true_type std::_Propagate_allocators;
struct __cppobj std::_Rand_urng_from_func {};
typedef unsigned int std::_Rand_urng_from_func::result_type;
typedef std::_Tree_node<int, void *> *std::_Rebind_pointer_t<void *, std::_Tree_node<int, void *>>;
typedef std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *std::_Rebind_pointer_t<void *, std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>;
typedef std::_Tree_node<std::pair<const int, int>, void *> *std::_Rebind_pointer_t<void *, std::_Tree_node<std::pair<const int, int>, void *>>;
typedef std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *std::_Rebind_pointer_t<void *, std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>;
typedef std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *std::_Rebind_pointer_t<void *, std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>;
struct std::_Select<false> {};
typedef const std::_Simple_types<char16_t>::value_type *std::_Simple_types<char16_t>::const_pointer;
typedef ptrdiff_t std::_Simple_types<char16_t>::difference_type;
typedef std::_Simple_types<char16_t>::value_type *std::_Simple_types<char16_t>::pointer;
typedef size_t std::_Simple_types<char16_t>::size_type;
typedef __int16 std::_Simple_types<char16_t>::value_type;
typedef const std::_Simple_types<char32_t>::value_type *std::_Simple_types<char32_t>::const_pointer;
typedef ptrdiff_t std::_Simple_types<char32_t>::difference_type;
typedef std::_Simple_types<char32_t>::value_type *std::_Simple_types<char32_t>::pointer;
typedef size_t std::_Simple_types<char32_t>::size_type;
typedef __int32 std::_Simple_types<char32_t>::value_type;
typedef const std::_Simple_types<char>::value_type *std::_Simple_types<char>::const_pointer;
typedef ptrdiff_t std::_Simple_types<char>::difference_type;
typedef std::_Simple_types<char>::value_type *std::_Simple_types<char>::pointer;
typedef size_t std::_Simple_types<char>::size_type;
typedef char std::_Simple_types<char>::value_type;
typedef const std::_Simple_types<int>::value_type *std::_Simple_types<int>::const_pointer;
typedef size_t std::_Simple_types<int>::size_type;
typedef int std::_Simple_types<int>::value_type;
typedef const std::_Simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::value_type *std::_Simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::const_pointer;
typedef std::_Simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::value_type *std::_Simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::pointer;
typedef size_t std::_Simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::size_type;
typedef std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> std::_Simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::value_type;
typedef const std::_Simple_types<std::pair<const int, int>>::value_type *std::_Simple_types<std::pair<const int, int>>::const_pointer;
typedef std::_Simple_types<std::pair<const int, int>>::value_type *std::_Simple_types<std::pair<const int, int>>::pointer;
typedef size_t std::_Simple_types<std::pair<const int, int>>::size_type;
typedef std::pair<const int, int> std::_Simple_types<std::pair<const int, int>>::value_type;
typedef const std::_Simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::value_type *std::_Simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::const_pointer;
typedef std::_Simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::value_type *std::_Simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::pointer;
typedef size_t std::_Simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::size_type;
typedef std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> std::_Simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::value_type;
typedef const std::_Simple_types<std::pair<const unsigned long long, unsigned long long>>::value_type *std::_Simple_types<std::pair<const unsigned long long, unsigned long long>>::const_pointer;
typedef std::_Simple_types<std::pair<const unsigned long long, unsigned long long>>::value_type *std::_Simple_types<std::pair<const unsigned long long, unsigned long long>>::pointer;
typedef size_t std::_Simple_types<std::pair<const unsigned long long, unsigned long long>>::size_type;
typedef std::pair<const unsigned long long, unsigned long long> std::_Simple_types<std::pair<const unsigned long long, unsigned long long>>::value_type;
typedef const std::_Simple_types<wchar_t>::value_type *std::_Simple_types<wchar_t>::const_pointer;
typedef ptrdiff_t std::_Simple_types<wchar_t>::difference_type;
typedef std::_Simple_types<wchar_t>::value_type *std::_Simple_types<wchar_t>::pointer;
typedef size_t std::_Simple_types<wchar_t>::size_type;
typedef __int16 std::_Simple_types<wchar_t>::value_type;
struct __cppobj std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> : std::_Iterator_base {std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::pointer _Ptr;};
typedef std::_String_val<std::_Simple_types<char16_t>>::difference_type std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type;
typedef std::_String_val<std::_Simple_types<char16_t>>::const_pointer std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::pointer;
typedef const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::value_type *std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::reference;
typedef std::_String_val<std::_Simple_types<char16_t>>::value_type std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::value_type;
struct __cppobj std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> : std::_Iterator_base {std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::pointer _Ptr;};
typedef std::_String_val<std::_Simple_types<char32_t>>::difference_type std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type;
typedef std::_String_val<std::_Simple_types<char32_t>>::const_pointer std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::pointer;
typedef const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::value_type *std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::reference;
typedef std::_String_val<std::_Simple_types<char32_t>>::value_type std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::value_type;
struct __cppobj std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> : std::_Iterator_base {std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::pointer _Ptr;};
typedef std::_String_val<std::_Simple_types<char>>::difference_type std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type;
typedef std::_String_val<std::_Simple_types<char>>::const_pointer std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::pointer;
typedef const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::value_type *std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::reference;
typedef std::_String_val<std::_Simple_types<char>>::value_type std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::value_type;
struct __cppobj std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> : std::_Iterator_base {std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::pointer _Ptr;};
typedef std::_String_val<std::_Simple_types<wchar_t>>::difference_type std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type;
typedef std::_String_val<std::_Simple_types<wchar_t>>::const_pointer std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::pointer;
typedef const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::value_type *std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::reference;
typedef std::_String_val<std::_Simple_types<wchar_t>>::value_type std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::value_type;
struct __cppobj std::_String_constructor_concat_tag {};
struct __cppobj std::_String_constructor_rvalue_allocator_tag {};
struct __cppobj std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> : std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> {};
typedef std::_String_val<std::_Simple_types<char16_t>>::difference_type std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type;
typedef std::_String_val<std::_Simple_types<char16_t>>::pointer std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::pointer;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::value_type *std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::reference;
typedef std::_String_val<std::_Simple_types<char16_t>>::value_type std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::value_type;
struct __cppobj std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> : std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> {};
typedef std::_String_val<std::_Simple_types<char32_t>>::difference_type std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type;
typedef std::_String_val<std::_Simple_types<char32_t>>::pointer std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::pointer;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::value_type *std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::reference;
typedef std::_String_val<std::_Simple_types<char32_t>>::value_type std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::value_type;
struct __cppobj std::_String_iterator<std::_String_val<std::_Simple_types<char>>> : std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> {};
typedef std::_String_val<std::_Simple_types<char>>::difference_type std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type;
typedef std::_String_val<std::_Simple_types<char>>::pointer std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::pointer;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::value_type *std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::reference;
typedef std::_String_val<std::_Simple_types<char>>::value_type std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::value_type;
struct __cppobj std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> : std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> {};
typedef std::_String_val<std::_Simple_types<wchar_t>>::difference_type std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type;
typedef std::_String_val<std::_Simple_types<wchar_t>>::pointer std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::pointer;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::value_type *std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::reference;
typedef std::_String_val<std::_Simple_types<wchar_t>>::value_type std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::value_type;
struct __cppobj std::_String_val<std::_Simple_types<char16_t>> : std::_Container_base {std::_String_val<std::_Simple_types<char16_t>>::_Bxty _Bx;std::_String_val<std::_Simple_types<char16_t>>::size_type _Mysize;std::_String_val<std::_Simple_types<char16_t>>::size_type _Myres;};
union std::_String_val<std::_Simple_types<char16_t>>::_Bxty {std::_String_val<std::_Simple_types<char16_t>>::value_type _Buf[8];std::_String_val<std::_Simple_types<char16_t>>::pointer _Ptr;char _Alias[8];};
typedef std::_Simple_types<char16_t>::const_pointer std::_String_val<std::_Simple_types<char16_t>>::const_pointer;
typedef std::_Simple_types<char16_t>::difference_type std::_String_val<std::_Simple_types<char16_t>>::difference_type;
typedef std::_Simple_types<char16_t>::pointer std::_String_val<std::_Simple_types<char16_t>>::pointer;
typedef std::_Simple_types<char16_t>::size_type std::_String_val<std::_Simple_types<char16_t>>::size_type;
typedef std::_Simple_types<char16_t>::value_type std::_String_val<std::_Simple_types<char16_t>>::value_type;
struct __cppobj std::_String_val<std::_Simple_types<char32_t>> : std::_Container_base {std::_String_val<std::_Simple_types<char32_t>>::_Bxty _Bx;std::_String_val<std::_Simple_types<char32_t>>::size_type _Mysize;std::_String_val<std::_Simple_types<char32_t>>::size_type _Myres;};
union std::_String_val<std::_Simple_types<char32_t>>::_Bxty {std::_String_val<std::_Simple_types<char32_t>>::value_type _Buf[4];std::_String_val<std::_Simple_types<char32_t>>::pointer _Ptr;char _Alias[4];};
typedef std::_Simple_types<char32_t>::const_pointer std::_String_val<std::_Simple_types<char32_t>>::const_pointer;
typedef std::_Simple_types<char32_t>::difference_type std::_String_val<std::_Simple_types<char32_t>>::difference_type;
typedef std::_Simple_types<char32_t>::pointer std::_String_val<std::_Simple_types<char32_t>>::pointer;
typedef std::_Simple_types<char32_t>::size_type std::_String_val<std::_Simple_types<char32_t>>::size_type;
typedef std::_Simple_types<char32_t>::value_type std::_String_val<std::_Simple_types<char32_t>>::value_type;
struct __cppobj std::_String_val<std::_Simple_types<char>> : std::_Container_base {std::_String_val<std::_Simple_types<char>>::_Bxty _Bx;std::_String_val<std::_Simple_types<char>>::size_type _Mysize;std::_String_val<std::_Simple_types<char>>::size_type _Myres;};
union std::_String_val<std::_Simple_types<char>>::_Bxty {std::_String_val<std::_Simple_types<char>>::value_type _Buf[16];std::_String_val<std::_Simple_types<char>>::pointer _Ptr;char _Alias[16];};
typedef std::_Simple_types<char>::const_pointer std::_String_val<std::_Simple_types<char>>::const_pointer;
typedef std::_Simple_types<char>::difference_type std::_String_val<std::_Simple_types<char>>::difference_type;
typedef std::_Simple_types<char>::pointer std::_String_val<std::_Simple_types<char>>::pointer;
typedef std::_Simple_types<char>::size_type std::_String_val<std::_Simple_types<char>>::size_type;
typedef std::_Simple_types<char>::value_type std::_String_val<std::_Simple_types<char>>::value_type;
struct __cppobj std::_String_val<std::_Simple_types<wchar_t>> : std::_Container_base {std::_String_val<std::_Simple_types<wchar_t>>::_Bxty _Bx;std::_String_val<std::_Simple_types<wchar_t>>::size_type _Mysize;std::_String_val<std::_Simple_types<wchar_t>>::size_type _Myres;};
union std::_String_val<std::_Simple_types<wchar_t>>::_Bxty {std::_String_val<std::_Simple_types<wchar_t>>::value_type _Buf[8];std::_String_val<std::_Simple_types<wchar_t>>::pointer _Ptr;char _Alias[8];};
typedef std::_Simple_types<wchar_t>::const_pointer std::_String_val<std::_Simple_types<wchar_t>>::const_pointer;
typedef std::_Simple_types<wchar_t>::difference_type std::_String_val<std::_Simple_types<wchar_t>>::difference_type;
typedef std::_Simple_types<wchar_t>::pointer std::_String_val<std::_Simple_types<wchar_t>>::pointer;
typedef std::_Simple_types<wchar_t>::size_type std::_String_val<std::_Simple_types<wchar_t>>::size_type;
typedef std::_Simple_types<wchar_t>::value_type std::_String_val<std::_Simple_types<wchar_t>>::value_type;
typedef std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>::allocator_type;
typedef std::less<_qstring<char>> std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>::key_compare;
typedef _qstring<char> std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>::key_type;
struct std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>::value_compare;
typedef std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>::value_type;
typedef std::allocator<std::pair<const int, int>> std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>::allocator_type;
typedef std::less<int> std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>::key_compare;
typedef int std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>::key_type;
struct std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>::value_compare;
typedef std::pair<const int, int> std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>::value_type;
typedef std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>::allocator_type;
typedef std::less<unsigned long long> std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>::key_compare;
typedef unsigned __int64 std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>::key_type;
struct std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>::value_compare;
typedef std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>::value_type;
typedef std::allocator<std::pair<const unsigned long long, unsigned long long>> std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>::allocator_type;
typedef std::less<unsigned long long> std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>::key_compare;
typedef unsigned __int64 std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>::key_type;
struct std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>::value_compare;
typedef std::pair<const unsigned long long, unsigned long long> std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>::value_type;
struct __cppobj std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> {std::_Compressed_pair<std::less<_qstring<char>>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>, true>, true> _Mypair;};
typedef std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Alnode;
typedef std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>>::pointer std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Nodeptr;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Scary_val;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Unchecked_const_iterator;
typedef std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Unchecked_iterator;
typedef std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>::allocator_type std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::allocator_type;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator;
typedef std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_reverse_iterator;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::iterator;
typedef std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>::key_compare std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_compare;
typedef std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>::key_type std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type;
typedef std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::reverse_iterator;
typedef std::_Default_allocator_traits<std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::size_type std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::size_type;
typedef struct std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>::value_compare std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::value_compare;
typedef std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>::value_type std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::value_type;
struct __cppobj std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> {std::_Compressed_pair<std::less<int>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>, true>, true> _Mypair;};
typedef std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Alnode;
typedef std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>>::pointer std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Nodeptr;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Scary_val;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Unchecked_const_iterator;
typedef std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Unchecked_iterator;
typedef std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>::allocator_type std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::allocator_type;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator;
typedef std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_reverse_iterator;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::iterator;
typedef std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>::key_compare std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_compare;
typedef std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>::key_type std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type;
typedef std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::reverse_iterator;
typedef std::_Default_allocator_traits<std::allocator<std::pair<const int, int>>>::size_type std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::size_type;
typedef struct std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>::value_compare std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::value_compare;
typedef std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>::value_type std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::value_type;
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> {std::_Compressed_pair<std::less<unsigned long long>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>, true>, true> _Mypair;};
typedef std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Alnode;
typedef std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>>::pointer std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Nodeptr;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Scary_val;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Unchecked_const_iterator;
typedef std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Unchecked_iterator;
typedef std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>::allocator_type std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::allocator_type;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator;
typedef std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_reverse_iterator;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::iterator;
typedef std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>::key_compare std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_compare;
typedef std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>::key_type std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type;
typedef std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::reverse_iterator;
typedef std::_Default_allocator_traits<std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::size_type std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::size_type;
typedef struct std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>::value_compare std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::value_compare;
typedef std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>::value_type std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::value_type;
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> {std::_Compressed_pair<std::less<unsigned long long>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>, true>, true> _Mypair;};
typedef std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Alnode;
typedef std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>>::pointer std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Nodeptr;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Scary_val;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Unchecked_const_iterator;
typedef std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Unchecked_iterator;
typedef std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>::allocator_type std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::allocator_type;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator;
typedef std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_reverse_iterator;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::iterator;
typedef std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>::key_compare std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_compare;
typedef std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>::key_type std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type;
typedef std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::reverse_iterator;
typedef std::_Default_allocator_traits<std::allocator<std::pair<const unsigned long long, unsigned long long>>>::size_type std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::size_type;
typedef struct std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>::value_compare std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::value_compare;
typedef std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>::value_type std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::value_type;
struct __cppobj std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> {std::_Compressed_pair<std::less<int>, std::_Compressed_pair<std::allocator<std::_Tree_node<int, void *>>, std::_Tree_val<std::_Tree_simple_types<int>>, true>, true> _Mypair;};
typedef std::allocator<std::_Tree_node<int, void *>> std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Alnode;
typedef std::_Default_allocator_traits<std::allocator<std::_Tree_node<int, void *>>>::pointer std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Nodeptr;
typedef std::_Tree_val<std::_Tree_simple_types<int>> std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Scary_val;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Unchecked_const_iterator;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Unchecked_iterator;
typedef std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::allocator_type std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::allocator_type;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator;
typedef std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_reverse_iterator;
typedef std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::iterator;
typedef std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::key_compare std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_compare;
typedef std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::key_type std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type;
typedef std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::reverse_iterator;
typedef std::_Default_allocator_traits<std::allocator<int>>::size_type std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::size_type;
typedef std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::value_compare std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::value_compare;
typedef std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::value_type std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::value_type;
enum std::_Tree_child : __int32 {_Right = 0x0,_Left = 0x1,_Unused = 0x2,};
struct __cppobj std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> : std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<int>>::const_pointer std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::pointer;
typedef const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::value_type *std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<int>>::value_type std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::value_type;
struct __cppobj std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> : std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::const_pointer std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::pointer;
typedef const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::value_type *std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::value_type std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::value_type;
struct __cppobj std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> : std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::const_pointer std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::pointer;
typedef const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::value_type *std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::value_type std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::value_type;
struct __cppobj std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> : std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::const_pointer std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::pointer;
typedef const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::value_type *std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::value_type std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::value_type;
struct __cppobj std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> : std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::const_pointer std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::pointer;
typedef const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::value_type *std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::value_type std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::value_type;
struct std::_Tree_id<std::_Tree_node<int, void *> *> {std::_Tree_node<int, void *> *_Parent;std::_Tree_child _Child;};
struct std::_Tree_id<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *> {std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *_Parent;std::_Tree_child _Child;};
struct std::_Tree_id<std::_Tree_node<std::pair<const int, int>, void *> *> {std::_Tree_node<std::pair<const int, int>, void *> *_Parent;std::_Tree_child _Child;};
struct std::_Tree_id<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *> {std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *_Parent;std::_Tree_child _Child;};
struct std::_Tree_id<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *> {std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *_Parent;std::_Tree_child _Child;};
struct __cppobj std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> : std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::pointer std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::pointer;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::value_type *std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::value_type std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::value_type;
struct __cppobj std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> : std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::pointer std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::pointer;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::value_type *std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::value_type std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::value_type;
struct __cppobj std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> : std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::pointer std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::pointer;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::value_type *std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::value_type std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::value_type;
struct __cppobj std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> : std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::pointer std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::pointer;
typedef std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::value_type *std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::value_type std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::value_type;
struct __cppobj std::_Tree_node<int, void *> {std::_Tree_node<int, void *>::_Nodeptr _Left;std::_Tree_node<int, void *>::_Nodeptr _Parent;std::_Tree_node<int, void *>::_Nodeptr _Right;char _Color;char _Isnil;std::_Tree_node<int, void *>::value_type _Myval;};
typedef std::_Rebind_pointer_t<void *, std::_Tree_node<int, void *>> std::_Tree_node<int, void *>::_Nodeptr;
typedef int std::_Tree_node<int, void *>::value_type;
struct __cppobj std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> {std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>::_Nodeptr _Left;std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>::_Nodeptr _Parent;std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>::_Nodeptr _Right;char _Color;char _Isnil;std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>::value_type _Myval;};
typedef std::_Rebind_pointer_t<void *, std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>::_Nodeptr;
typedef std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>::value_type;
struct __cppobj std::_Tree_node<std::pair<const int, int>, void *> {std::_Tree_node<std::pair<const int, int>, void *>::_Nodeptr _Left;std::_Tree_node<std::pair<const int, int>, void *>::_Nodeptr _Parent;std::_Tree_node<std::pair<const int, int>, void *>::_Nodeptr _Right;char _Color;char _Isnil;std::_Tree_node<std::pair<const int, int>, void *>::value_type _Myval;};
typedef std::_Rebind_pointer_t<void *, std::_Tree_node<std::pair<const int, int>, void *>> std::_Tree_node<std::pair<const int, int>, void *>::_Nodeptr;
typedef std::pair<const int, int> std::_Tree_node<std::pair<const int, int>, void *>::value_type;
struct __cppobj std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> {std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>::_Nodeptr _Left;std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>::_Nodeptr _Parent;std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>::_Nodeptr _Right;char _Color;char _Isnil;std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>::value_type _Myval;};
typedef std::_Rebind_pointer_t<void *, std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>::_Nodeptr;
typedef std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>::value_type;
struct __cppobj std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> {std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>::_Nodeptr _Left;std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>::_Nodeptr _Parent;std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>::_Nodeptr _Right;char _Color;char _Isnil;std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>::value_type _Myval;};
typedef std::_Rebind_pointer_t<void *, std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>::_Nodeptr;
typedef std::pair<const unsigned long long, unsigned long long> std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>::value_type;
typedef std::_Tree_node<int, void *> std::_Tree_simple_types<int>::_Node;
typedef std::_Tree_simple_types<int>::_Node *std::_Tree_simple_types<int>::_Nodeptr;
typedef std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::_Node;
typedef std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::_Node *std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::_Nodeptr;
typedef std::_Tree_node<std::pair<const int, int>, void *> std::_Tree_simple_types<std::pair<const int, int>>::_Node;
typedef std::_Tree_simple_types<std::pair<const int, int>>::_Node *std::_Tree_simple_types<std::pair<const int, int>>::_Nodeptr;
typedef std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::_Node;
typedef std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::_Node *std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::_Nodeptr;
typedef std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>::_Node;
typedef std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>::_Node *std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>::_Nodeptr;
struct __cppobj std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> : std::_Iterator_base0 {std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::_Nodeptr _Ptr;};
typedef std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::_Nodeptr;
typedef std::_Tree_val<std::_Tree_simple_types<int>>::const_pointer std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::pointer;
typedef const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::value_type *std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<int>>::value_type std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::value_type;
struct __cppobj std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> : std::_Iterator_base0 {std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::_Nodeptr _Ptr;};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::_Nodeptr;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::const_pointer std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::pointer;
typedef const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::value_type *std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::value_type std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::value_type;
struct __cppobj std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> : std::_Iterator_base0 {std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::_Nodeptr _Ptr;};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::_Nodeptr;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::const_pointer std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::pointer;
typedef const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::value_type *std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::value_type std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::value_type;
struct __cppobj std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> : std::_Iterator_base0 {std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::_Nodeptr _Ptr;};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::_Nodeptr;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::const_pointer std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::pointer;
typedef const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::value_type *std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::value_type std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::value_type;
struct __cppobj std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> : std::_Iterator_base0 {std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::_Nodeptr _Ptr;};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::_Nodeptr;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::const_pointer std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::pointer;
typedef const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::value_type *std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::value_type std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::value_type;
struct __cppobj std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> : std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::pointer std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::pointer;
typedef std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::value_type *std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::value_type std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::value_type;
struct __cppobj std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> : std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::pointer std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::pointer;
typedef std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::value_type *std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::value_type std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::value_type;
struct __cppobj std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> : std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::pointer std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::pointer;
typedef std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::value_type *std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::value_type std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::value_type;
struct __cppobj std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> : std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> {};
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::pointer std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::pointer;
typedef std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::value_type *std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::reference;
typedef std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::value_type std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::value_type;
struct __cppobj std::_Tree_val<std::_Tree_simple_types<int>> : std::_Container_base {std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr _Myhead;std::_Tree_val<std::_Tree_simple_types<int>>::size_type _Mysize;};
typedef std::_Tree_simple_types<int>::_Nodeptr std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> std::_Tree_val<std::_Tree_simple_types<int>>::_Unchecked_const_iterator;
typedef std::_Simple_types<int>::const_pointer std::_Tree_val<std::_Tree_simple_types<int>>::const_pointer;
typedef std::_Simple_types<int>::size_type std::_Tree_val<std::_Tree_simple_types<int>>::size_type;
typedef std::_Simple_types<int>::value_type std::_Tree_val<std::_Tree_simple_types<int>>::value_type;
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> : std::_Container_base {std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr _Myhead;std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::size_type _Mysize;};
typedef std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::_Nodeptr std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Unchecked_const_iterator;
typedef std::_Simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::const_pointer std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::const_pointer;
typedef std::_Simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::pointer std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::pointer;
typedef std::_Simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::size_type std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::size_type;
typedef std::_Simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>::value_type std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::value_type;
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> : std::_Container_base {std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr _Myhead;std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::size_type _Mysize;};
typedef std::_Tree_simple_types<std::pair<const int, int>>::_Nodeptr std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Unchecked_const_iterator;
typedef std::_Simple_types<std::pair<const int, int>>::const_pointer std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::const_pointer;
typedef std::_Simple_types<std::pair<const int, int>>::pointer std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::pointer;
typedef std::_Simple_types<std::pair<const int, int>>::size_type std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::size_type;
typedef std::_Simple_types<std::pair<const int, int>>::value_type std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::value_type;
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> : std::_Container_base {std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr _Myhead;std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::size_type _Mysize;};
typedef std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::_Nodeptr std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Unchecked_const_iterator;
typedef std::_Simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::const_pointer std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::const_pointer;
typedef std::_Simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::pointer std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::pointer;
typedef std::_Simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::size_type std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::size_type;
typedef std::_Simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>::value_type std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::value_type;
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> : std::_Container_base {std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr _Myhead;std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::size_type _Mysize;};
typedef std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>::_Nodeptr std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr;
typedef std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Unchecked_const_iterator;
typedef std::_Simple_types<std::pair<const unsigned long long, unsigned long long>>::const_pointer std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::const_pointer;
typedef std::_Simple_types<std::pair<const unsigned long long, unsigned long long>>::pointer std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::pointer;
typedef std::_Simple_types<std::pair<const unsigned long long, unsigned long long>>::size_type std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::size_type;
typedef std::_Simple_types<std::pair<const unsigned long long, unsigned long long>>::value_type std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::value_type;
typedef std::allocator<int> std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::allocator_type;
typedef std::less<int> std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::key_compare;
typedef int std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::key_type;
typedef std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::key_compare std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::value_compare;
typedef int std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>::value_type;
enum std::_Uninitialized : __int32 {_Noinit = 0x0,};
struct __cppobj std::_Unpack_tuple_t {};
struct __cppobj std::_Unused_parameter {};
typedef unsigned __int16 std::_WChar_traits<_Elem>::int_type;
struct __cppobj std::_WChar_traits<char16_t> : std::_Char_traits<char16_t, unsigned short> {};
typedef unsigned __int16 std::_WChar_traits<char16_t>::int_type;
struct __cppobj std::_WChar_traits<unsigned short> : std::_Char_traits<unsigned short, unsigned short> {};
typedef unsigned __int16 std::_WChar_traits<unsigned short>::int_type;
struct __cppobj std::_WChar_traits<wchar_t> : std::_Char_traits<wchar_t, unsigned short> {};
typedef unsigned __int16 std::_WChar_traits<wchar_t>::int_type;
struct __cppobj std::_Zero_then_variadic_args_t {};
struct __cppobj std::allocator<char16_t> {};
struct __cppobj std::allocator<char32_t> {};
struct __cppobj std::allocator<char> {};
struct __cppobj std::allocator<int> {};
struct __cppobj std::allocator<std::_Tree_node<int, void *>> {};
typedef std::_Tree_node<int, void *> std::allocator<std::_Tree_node<int, void *>>::value_type;
struct __cppobj std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> {};
typedef std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>::value_type;
struct __cppobj std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> {};
typedef std::_Tree_node<std::pair<const int, int>, void *> std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>::value_type;
struct __cppobj std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> {};
typedef std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>::value_type;
struct __cppobj std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> {};
typedef std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>::value_type;
struct __cppobj std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> {};
struct __cppobj std::allocator<std::pair<const int, int>> {};
struct __cppobj std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> {};
struct __cppobj std::allocator<std::pair<const unsigned long long, unsigned long long>> {};
struct __cppobj std::allocator<void> {};
struct __cppobj std::allocator<wchar_t> {};
struct __cppobj std::allocator_arg_t {};
struct __cppobj std::bad_alloc : std::exception {};
struct /*VFT*/ std::bad_alloc_vtbl {void (__cdecl *~bad_alloc)(std::bad_alloc *__hidden this);const char *(__cdecl *what)(const std::exception *__hidden this);};
struct __cppobj std::bad_array_new_length : std::bad_alloc {};
struct /*VFT*/ std::bad_array_new_length_vtbl {void (__cdecl *~bad_array_new_length)(std::bad_array_new_length *__hidden this);const char *(__cdecl *what)(const std::exception *__hidden this);};
struct __cppobj std::bad_exception : std::exception {};
struct /*VFT*/ std::bad_exception_vtbl {void (__cdecl *~bad_exception)(std::bad_exception *__hidden this);const char *(__cdecl *what)(const std::exception *__hidden this);};
struct std::basic_filebuf<char>;
struct std::basic_filebuf<wchar_t>;
struct std::basic_fstream<char>;
struct std::basic_fstream<wchar_t>;
struct std::basic_ifstream<char>;
struct std::basic_ifstream<wchar_t>;
struct std::basic_ios<char>;
struct std::basic_ios<wchar_t>;
struct std::basic_iostream<char>;
struct std::basic_iostream<wchar_t>;
struct std::basic_istream<char>;
struct std::basic_istream<wchar_t>;
struct std::basic_istringstream<char>;
struct std::basic_istringstream<wchar_t>;
struct std::basic_ofstream<char>;
struct std::basic_ofstream<wchar_t>;
struct std::basic_ostream<char>;
struct std::basic_ostream<wchar_t>;
struct std::basic_ostringstream<char>;
struct std::basic_ostringstream<wchar_t>;
struct std::basic_streambuf<char>;
struct std::basic_streambuf<wchar_t>;
struct __cppobj std::basic_string<char16_t> {std::_Compressed_pair<std::allocator<char16_t>, std::_String_val<std::_Simple_types<char16_t>>, true> _Mypair;};
typedef std::allocator<char16_t> std::basic_string<char16_t>::_Alty;
typedef std::_String_val<std::_Simple_types<char16_t>> std::basic_string<char16_t>::_Scary_val;
typedef std::allocator<char16_t> std::basic_string<char16_t>::allocator_type;
typedef std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> std::basic_string<char16_t>::const_iterator;
typedef const std::basic_string<char16_t>::value_type *std::basic_string<char16_t>::const_reference;
typedef std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> std::basic_string<char16_t>::const_reverse_iterator;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> std::basic_string<char16_t>::iterator;
typedef std::basic_string<char16_t>::value_type *std::basic_string<char16_t>::reference;
typedef std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> std::basic_string<char16_t>::reverse_iterator;
typedef std::_Default_allocator_traits<std::allocator<char16_t>>::size_type std::basic_string<char16_t>::size_type;
typedef __int16 std::basic_string<char16_t>::value_type;
struct __cppobj std::basic_string<char32_t> {std::_Compressed_pair<std::allocator<char32_t>, std::_String_val<std::_Simple_types<char32_t>>, true> _Mypair;};
typedef std::allocator<char32_t> std::basic_string<char32_t>::_Alty;
typedef std::_String_val<std::_Simple_types<char32_t>> std::basic_string<char32_t>::_Scary_val;
typedef std::allocator<char32_t> std::basic_string<char32_t>::allocator_type;
typedef std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> std::basic_string<char32_t>::const_iterator;
typedef const std::basic_string<char32_t>::value_type *std::basic_string<char32_t>::const_reference;
typedef std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> std::basic_string<char32_t>::const_reverse_iterator;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> std::basic_string<char32_t>::iterator;
typedef std::basic_string<char32_t>::value_type *std::basic_string<char32_t>::reference;
typedef std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> std::basic_string<char32_t>::reverse_iterator;
typedef std::_Default_allocator_traits<std::allocator<char32_t>>::size_type std::basic_string<char32_t>::size_type;
typedef __int32 std::basic_string<char32_t>::value_type;
struct __cppobj std::basic_string<char> {std::_Compressed_pair<std::allocator<char>, std::_String_val<std::_Simple_types<char>>, true> _Mypair;};
typedef std::allocator<char> std::basic_string<char>::_Alty;
typedef std::_String_val<std::_Simple_types<char>> std::basic_string<char>::_Scary_val;
typedef std::allocator<char> std::basic_string<char>::allocator_type;
typedef std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> std::basic_string<char>::const_iterator;
typedef const std::basic_string<char>::value_type *std::basic_string<char>::const_reference;
typedef std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> std::basic_string<char>::const_reverse_iterator;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<char>>> std::basic_string<char>::iterator;
typedef std::basic_string<char>::value_type *std::basic_string<char>::reference;
typedef std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> std::basic_string<char>::reverse_iterator;
typedef std::_Default_allocator_traits<std::allocator<char>>::size_type std::basic_string<char>::size_type;
typedef char std::basic_string<char>::value_type;
struct __cppobj std::basic_string<wchar_t> {std::_Compressed_pair<std::allocator<wchar_t>, std::_String_val<std::_Simple_types<wchar_t>>, true> _Mypair;};
typedef std::allocator<wchar_t> std::basic_string<wchar_t>::_Alty;
typedef std::_String_val<std::_Simple_types<wchar_t>> std::basic_string<wchar_t>::_Scary_val;
typedef std::allocator<wchar_t> std::basic_string<wchar_t>::allocator_type;
typedef std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> std::basic_string<wchar_t>::const_iterator;
typedef const std::basic_string<wchar_t>::value_type *std::basic_string<wchar_t>::const_reference;
typedef std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> std::basic_string<wchar_t>::const_reverse_iterator;
typedef std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> std::basic_string<wchar_t>::iterator;
typedef std::basic_string<wchar_t>::value_type *std::basic_string<wchar_t>::reference;
typedef std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> std::basic_string<wchar_t>::reverse_iterator;
typedef std::_Default_allocator_traits<std::allocator<wchar_t>>::size_type std::basic_string<wchar_t>::size_type;
typedef __int16 std::basic_string<wchar_t>::value_type;
struct std::basic_stringbuf<char>;
struct std::basic_stringbuf<wchar_t>;
struct std::basic_stringstream<char>;
struct std::basic_stringstream<wchar_t>;
struct __cppobj std::bidirectional_iterator_tag : std::forward_iterator_tag {};
struct __cppobj std::char_traits<char16_t> : std::_WChar_traits<char16_t> {};
struct __cppobj std::char_traits<char32_t> : std::_Char_traits<char32_t, unsigned int> {};
struct __cppobj std::char_traits<char> : std::_Narrow_char_traits<char, int> {};
struct __cppobj std::char_traits<unsigned short> : std::_WChar_traits<unsigned short> {};
struct __cppobj std::char_traits<wchar_t> : std::_WChar_traits<wchar_t> {};
struct std::common_type<> {};
struct std::equal_to<void> {};
struct __cppobj std::exception {std::exception_vtbl *__vftable /*VFT*/;__std_exception_data _Data;};
struct __cppobj std::exception_ptr {void *_Data1;void *_Data2;};
struct /*VFT*/ std::exception_vtbl {void (__cdecl *~exception)(std::exception *__hidden this);const char *(__cdecl *what)(const std::exception *__hidden this);};
typedef std::integral_constant<bool, false> std::false_type;
typedef struct std::basic_filebuf<char> std::filebuf;
enum std::float_denorm_style : __int32 {denorm_indeterminate = 0xFFFFFFFF,denorm_absent = 0x0,denorm_present = 0x1,};
enum std::float_round_style : __int32 {round_indeterminate = 0xFFFFFFFF,round_toward_zero = 0x0,round_to_nearest = 0x1,round_toward_infinity = 0x2,round_toward_neg_infinity = 0x3,};
struct __cppobj std::forward_iterator_tag : std::input_iterator_tag {};
struct __cppobj std::fpos<_Mbstatet> {std::streamoff _Myoff;fpos_t _Fpos;_Mbstatet _Mystate;};
typedef struct std::basic_fstream<char> std::fstream;
struct std::greater<void> {};
struct std::greater_equal<void> {};
struct __cppobj std::hash<double> {};
struct __cppobj std::hash<float> {};
struct __cppobj std::hash<long double> {};
struct __cppobj std::hash<std::nullptr_t> {};
typedef struct std::basic_ifstream<char> std::ifstream;
struct __cppobj std::initializer_list<char16_t> {__int16 *_First;__int16 *_Last;};
struct __cppobj std::initializer_list<char32_t> {__int32 *_First;__int32 *_Last;};
struct __cppobj std::initializer_list<char> {char *_First;char *_Last;};
struct __cppobj std::initializer_list<int> {int *_First;int *_Last;};
struct __cppobj std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> {std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *_First;std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Last;};
struct __cppobj std::initializer_list<std::pair<const int, int>> {std::pair<const int, int> *_First;std::pair<const int, int> *_Last;};
struct __cppobj std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> {std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_First;std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Last;};
struct __cppobj std::initializer_list<std::pair<const unsigned long long, unsigned long long>> {std::pair<const unsigned long long, unsigned long long> *_First;std::pair<const unsigned long long, unsigned long long> *_Last;};
struct __cppobj std::initializer_list<wchar_t> {__int16 *_First;__int16 *_Last;};
struct std::input_iterator_tag {};
struct __cppobj std::integral_constant<bool, false> {};
typedef bool std::integral_constant<bool, false>::value_type;
struct __cppobj std::integral_constant<bool, true> {};
typedef bool std::integral_constant<bool, true>::value_type;
struct __cppobj std::integral_constant<unsigned long long, 0> {};
typedef unsigned __int64 std::integral_constant<unsigned long long, 0>::value_type;
typedef struct std::basic_ios<char> std::ios;
struct std::ios_base;
typedef struct std::basic_iostream<char> std::iostream;
typedef struct std::basic_istream<char> std::istream;
typedef struct std::basic_istringstream<char> std::istringstream;
struct __cppobj std::less<_qstring<char>> {};
struct __cppobj std::less<int> {};
struct __cppobj std::less<unsigned long long> {};
struct std::less<void> {};
struct std::less_equal<void> {};
struct std::locale;
struct __cppobj std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> : std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> {};
typedef std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::allocator_type std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::allocator_type;
typedef std::less<_qstring<char>> std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::key_compare;
typedef _qstring<char> std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::key_type;
typedef qrefcnt_t<refcnted_regex_t> std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::mapped_type;
struct __cppobj std::map<int, int> : std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> {};
typedef std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::allocator_type std::map<int, int>::allocator_type;
typedef std::less<int> std::map<int, int>::key_compare;
typedef int std::map<int, int>::key_type;
typedef int std::map<int, int>::mapped_type;
struct __cppobj std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> : std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> {};
typedef std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::allocator_type std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::allocator_type;
typedef std::less<unsigned long long> std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::key_compare;
typedef unsigned __int64 std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::key_type;
typedef backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::mapped_type;
struct __cppobj std::map<unsigned long long, unsigned long long> : std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> {};
typedef std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::allocator_type std::map<unsigned long long, unsigned long long>::allocator_type;
typedef std::less<unsigned long long> std::map<unsigned long long, unsigned long long>::key_compare;
typedef unsigned __int64 std::map<unsigned long long, unsigned long long>::key_type;
typedef unsigned __int64 std::map<unsigned long long, unsigned long long>::mapped_type;
typedef double std::max_align_t;
enum std::memory_order : __int32 {memory_order_relaxed = 0x0,memory_order_consume = 0x1,memory_order_acquire = 0x2,memory_order_release = 0x3,memory_order_acq_rel = 0x4,memory_order_seq_cst = 0x5,};
struct std::minus<void> {};
struct std::multiplies<void> {};
struct __cppobj std::nested_exception {std::nested_exception_vtbl *__vftable /*VFT*/;std::exception_ptr _Exc;};
struct /*VFT*/ std::nested_exception_vtbl {void (__cdecl *~nested_exception)(std::nested_exception *__hidden this);};
typedef void (*std::new_handler)(void);
struct std::not_equal_to<void> {};
struct __cppobj std::nothrow_t {};
typedef __int64 std::nullptr_t;
struct __cppobj std::numeric_limits<bool> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<char16_t> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<char32_t> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<char> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<double> : std::_Num_float_base {};
struct __cppobj std::numeric_limits<float> : std::_Num_float_base {};
struct __cppobj std::numeric_limits<int> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<long double> : std::_Num_float_base {};
struct __cppobj std::numeric_limits<long long> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<long> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<short> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<signed char> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<unsigned char> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<unsigned int> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<unsigned long long> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<unsigned long> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<unsigned short> : std::_Num_int_base {};
struct __cppobj std::numeric_limits<wchar_t> : std::_Num_int_base {};
typedef struct std::basic_ofstream<char> std::ofstream;
typedef struct std::basic_ostream<char> std::ostream;
typedef struct std::basic_ostringstream<char> std::ostringstream;
struct std::output_iterator_tag {};
struct __cppobj std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> {const _qstring<char> first;qrefcnt_t<refcnted_regex_t> second;};
struct __cppobj std::pair<const int, int> {const int first;int second;};
struct __cppobj std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> {const unsigned __int64 first;backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t second;};
struct __cppobj std::pair<const unsigned long long, unsigned long long> {const unsigned __int64 first;unsigned __int64 second;};
struct __cppobj std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> {std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> first;std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> second;};
struct __cppobj std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> {std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> first;std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> second;};
struct __cppobj std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> {std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> first;std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> second;};
struct __cppobj std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> {std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> first;std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> second;};
struct __cppobj std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> {std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> first;std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> second;};
struct __cppobj std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> {std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> first;std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> second;};
struct __cppobj std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> {std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> first;std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> second;};
struct __cppobj std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> {std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> first;std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> second;};
struct __cppobj std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> {std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> first;std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> second;};
struct __cppobj std::piecewise_construct_t {};
struct std::plus<void> {};
struct __cppobj std::random_access_iterator_tag : std::bidirectional_iterator_tag {};
struct __cppobj std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> {std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> current;};
typedef std::_Iter_diff_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::pointer std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::pointer;
typedef std::_Iter_ref_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::reference;
struct __cppobj std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> {std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> current;};
typedef std::_Iter_diff_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::pointer std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::pointer;
typedef std::_Iter_ref_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::reference;
struct __cppobj std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> {std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> current;};
typedef std::_Iter_diff_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::pointer std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::pointer;
typedef std::_Iter_ref_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::reference;
struct __cppobj std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> {std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> current;};
typedef std::_Iter_diff_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::pointer std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::pointer;
typedef std::_Iter_ref_t<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::reference;
struct __cppobj std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> {std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> current;};
typedef std::_Iter_diff_t<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::pointer std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::pointer;
typedef std::_Iter_ref_t<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::reference;
struct __cppobj std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> {std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> current;};
typedef std::_Iter_diff_t<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::pointer std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::pointer;
typedef std::_Iter_ref_t<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::reference;
struct __cppobj std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> {std::_String_iterator<std::_String_val<std::_Simple_types<char>>> current;};
typedef std::_Iter_diff_t<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::pointer std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::pointer;
typedef std::_Iter_ref_t<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::reference;
struct __cppobj std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> {std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> current;};
typedef std::_Iter_diff_t<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::pointer std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::pointer;
typedef std::_Iter_ref_t<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::reference;
struct __cppobj std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> {std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> current;};
typedef std::_Iter_diff_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::pointer std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::pointer;
typedef std::_Iter_ref_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::reference;
struct __cppobj std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> {std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> current;};
typedef std::_Iter_diff_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::pointer std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::pointer;
typedef std::_Iter_ref_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::reference;
struct __cppobj std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> {std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> current;};
typedef std::_Iter_diff_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::pointer std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::pointer;
typedef std::_Iter_ref_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::reference;
struct __cppobj std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> {std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> current;};
typedef std::_Iter_diff_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::pointer std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::pointer;
typedef std::_Iter_ref_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::reference;
struct __cppobj std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> {std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> current;};
typedef std::_Iter_diff_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::pointer std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::pointer;
typedef std::_Iter_ref_t<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::reference;
struct __cppobj std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> {std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> current;};
typedef std::_Iter_diff_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::pointer std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::pointer;
typedef std::_Iter_ref_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::reference;
struct __cppobj std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> {std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> current;};
typedef std::_Iter_diff_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::pointer std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::pointer;
typedef std::_Iter_ref_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::reference;
struct __cppobj std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> {std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> current;};
typedef std::_Iter_diff_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::pointer std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::pointer;
typedef std::_Iter_ref_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::reference;
struct __cppobj std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> {std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> current;};
typedef std::_Iter_diff_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type;
typedef std::_Iterator_traits_base<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::pointer std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::pointer;
typedef std::_Iter_ref_t<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::reference;
struct __cppobj std::set<int> : std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> {};
typedef std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::allocator_type std::set<int>::allocator_type;
typedef std::less<int> std::set<int>::key_compare;
typedef struct std::basic_streambuf<char> std::streambuf;
typedef __int64 std::streamoff;
typedef std::fpos<_Mbstatet> std::streampos;
typedef __int64 std::streamsize;
typedef std::basic_string<char> std::string;
typedef struct std::basic_stringbuf<char> std::stringbuf;
typedef struct std::basic_stringstream<char> std::stringstream;
typedef std::integral_constant<bool, true> std::true_type;
struct __cppobj std::tuple<> {};
typedef std::streampos std::u16streampos;
typedef std::basic_string<char16_t> std::u16string;
typedef std::streampos std::u32streampos;
typedef std::basic_string<char32_t> std::u32string;
typedef struct std::basic_filebuf<wchar_t> std::wfilebuf;
typedef struct std::basic_fstream<wchar_t> std::wfstream;
typedef struct std::basic_ifstream<wchar_t> std::wifstream;
typedef struct std::basic_ios<wchar_t> std::wios;
typedef struct std::basic_iostream<wchar_t> std::wiostream;
typedef struct std::basic_istream<wchar_t> std::wistream;
typedef struct std::basic_istringstream<wchar_t> std::wistringstream;
typedef struct std::basic_ofstream<wchar_t> std::wofstream;
typedef struct std::basic_ostream<wchar_t> std::wostream;
typedef struct std::basic_ostringstream<wchar_t> std::wostringstream;
typedef struct std::basic_streambuf<wchar_t> std::wstreambuf;
typedef std::streampos std::wstreampos;
typedef std::basic_string<wchar_t> std::wstring;
typedef struct std::basic_stringbuf<wchar_t> std::wstringbuf;
typedef struct std::basic_stringstream<wchar_t> std::wstringstream;
struct stkarg_area_info_t {size_t cb;sval_t stkarg_offset;sval_t shadow_size;sval_t linkage_area;};
struct __cppobj stkpnt_t {ea_t ea;sval_t spd;};
struct __cppobj stkpnts_t : qvector<stkpnt_t> {};
enum stock_type_id_t : __int32 {STI_PCHAR = 0x0,STI_PUCHAR = 0x1,STI_PCCHAR = 0x2,STI_PCUCHAR = 0x3,STI_PBYTE = 0x4,STI_PINT = 0x5,STI_PUINT = 0x6,STI_PVOID = 0x7,STI_PPVOID = 0x8,STI_PCVOID = 0x9,STI_ACHAR = 0xA,STI_AUCHAR = 0xB,STI_ACCHAR = 0xC,STI_ACUCHAR = 0xD,STI_FPURGING = 0xE,STI_FDELOP = 0xF,STI_MSGSEND = 0x10,STI_AEABI_LCMP = 0x11,STI_AEABI_ULCMP = 0x12,STI_DONT_USE = 0x13,STI_SIZE_T = 0x14,STI_SSIZE_T = 0x15,STI_AEABI_MEMCPY = 0x16,STI_AEABI_MEMSET = 0x17,STI_AEABI_MEMCLR = 0x18,STI_RTC_CHECK_2 = 0x19,STI_RTC_CHECK_4 = 0x1A,STI_RTC_CHECK_8 = 0x1B,STI_COMPLEX64 = 0x1C,STI_COMPLEX128 = 0x1D,STI_LAST = 0x1E,};
enum storage_type_t : __int32 {STT_CUR = 0xFFFFFFFF,STT_VA = 0x0,STT_MM = 0x1,STT_DBG = 0x2,};
struct strarray_t {int code;const char *text;};
struct __cppobj string_info_t {ea_t ea;int length;int type;};
struct __cppobj strpath_t {int len;tid_t ids[32];adiff_t delta;};
enum struc_error_t : __int32 {STRUC_ERROR_MEMBER_OK = 0x0,STRUC_ERROR_MEMBER_NAME = 0xFFFFFFFF,STRUC_ERROR_MEMBER_OFFSET = 0xFFFFFFFE,STRUC_ERROR_MEMBER_SIZE = 0xFFFFFFFD,STRUC_ERROR_MEMBER_TINFO = 0xFFFFFFFC,STRUC_ERROR_MEMBER_STRUCT = 0xFFFFFFFB,STRUC_ERROR_MEMBER_UNIVAR = 0xFFFFFFFA,STRUC_ERROR_MEMBER_VARLAST = 0xFFFFFFF9,STRUC_ERROR_MEMBER_NESTED = 0xFFFFFFF8,};
struct __cppobj struc_t {tid_t id;uint32 memqty;member_t *members;ushort age;uint32 props;int32 ordinal;};
struct __cppobj struct_field_visitor_t {struct_field_visitor_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ struct_field_visitor_t_vtbl {int (__cdecl *visit_field)(struct_field_visitor_t *__hidden this, struc_t *sptr, member_t *mptr);};
struct __cppobj structplace_t : place_t {uval_t idx;uval_t offset;};
struct /*VFT*/ structplace_t_vtbl {void (__cdecl *print)(const structplace_t *__hidden this, qstring *buf, void *ud);uval_t (__cdecl *touval)(const structplace_t *__hidden this, void *ud);place_t *(__cdecl *clone)(const structplace_t *__hidden this);void (__cdecl *copyfrom)(structplace_t *__hidden this, const place_t *from);place_t *(__cdecl *makeplace)(const structplace_t *__hidden this, void *ud, uval_t x, int _lnnum);int (__cdecl *compare)(const structplace_t *__hidden this, const place_t *t2);void (__cdecl *adjust)(structplace_t *__hidden this, void *ud);bool (__cdecl *prev)(structplace_t *__hidden this, void *ud);bool (__cdecl *next)(structplace_t *__hidden this, void *ud);bool (__cdecl *beginning)(const structplace_t *__hidden this, void *ud);bool (__cdecl *ending)(const structplace_t *__hidden this, void *ud);int (__cdecl *generate)(const structplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);void (__cdecl *serialize)(const structplace_t *__hidden this, bytevec_t *out);bool (__cdecl *deserialize)(structplace_t *__hidden this, const uchar **pptr, const uchar *end);int (__cdecl *id)(const structplace_t *__hidden this);const char *(__cdecl *name)(const structplace_t *__hidden this);ea_t (__cdecl *toea)(const structplace_t *__hidden this);bool (__cdecl *rebase)(structplace_t *__hidden this, const segm_move_infos_t *infos);place_t *(__cdecl *enter)(const structplace_t *__hidden this, uint32 *out_flags);void (__cdecl *leave)(const structplace_t *__hidden this, uint32 flags);int (__cdecl *compare2)(const structplace_t *__hidden this, const place_t *t2, void *ud);};
typedef qvector<simpleline_t> strvec_t;
struct strwinsetup_t {bytevec_t strtypes;sval_t minlen;uchar display_only_existing_strings;uchar only_7bit;uchar ignore_heads;};
typedef adiff_t sval_t;
typedef qvector<long long> svalvec_t;
struct __cppobj switch_info_t {uint32 flags;ushort ncases;ea_t jumps;union {ea_t values;uval_t lowcase;};ea_t defjump;ea_t startea;int jcases;sval_t ind_lowcase;ea_t elbase;int regnum;op_dtype_t regdtype;uval_t custom;int version;ea_t expr_ea;eavec_t marks;};
union switch_info_t::$76B1A80AA47B7214ED24D33A3285D956 {ea_t values;uval_t lowcase;};
struct __cppobj sync_source_t {uchar storage[16];};
typedef qvector<sync_source_t> sync_source_vec_t;
struct __cppobj synced_group_t : sync_source_vec_t {};
enum syntax_highlight_style : __int32 {HF_DEFAULT = 0x0,HF_KEYWORD1 = 0x1,HF_KEYWORD2 = 0x2,HF_KEYWORD3 = 0x3,HF_STRING = 0x4,HF_COMMENT = 0x5,HF_PREPROC = 0x6,HF_NUMBER = 0x7,HF_MAX = 0x8,};
struct __cppobj syntax_highlighter_t {syntax_highlighter_t_vtbl *__vftable /*VFT*/;syntax_highlighter_t::block_highlighter_t *highlight_block;};
typedef void __cdecl syntax_highlighter_t::block_highlighter_t(void *, highlighter_cbs_t *, const qstring *);
struct /*VFT*/ syntax_highlighter_t_vtbl {void (__cdecl *~syntax_highlighter_t)(syntax_highlighter_t *__hidden this);};
typedef int __cdecl table_checker_t(switch_info_t *, ea_t, int, procmod_t *);
enum tcc_place_type_t : __int32 {TCCPT_INVALID = 0x0,TCCPT_PLACE = 0x1,TCCPT_SIMPLELINE_PLACE = 0x2,TCCPT_IDAPLACE = 0x3,TCCPT_ENUMPLACE = 0x4,TCCPT_STRUCTPLACE = 0x5,};
enum tcc_renderer_type_t : __int32 {TCCRT_INVALID = 0x0,TCCRT_FLAT = 0x1,TCCRT_GRAPH = 0x2,TCCRT_PROXIMITY = 0x3,};
typedef void (*terminate_function)(void);
typedef void (*terminate_handler)(void);
typedef bool __cdecl testf_t(flags_t, void *);
struct tev_info_reg_t {tev_info_t info;tev_reg_values_t registers;};
struct tev_info_t {tev_type_t type;thid_t tid;ea_t ea;};
struct __cppobj tev_reg_value_t {regval_t value;int reg_idx;};
typedef qvector<tev_reg_value_t> tev_reg_values_t;
enum tev_type_t : __int32 {tev_none = 0x0,tev_insn = 0x1,tev_call = 0x2,tev_ret = 0x3,tev_bpt = 0x4,tev_mem = 0x5,tev_event = 0x6,tev_max = 0x7,};
typedef qvector<tev_info_t> tevinfo_vec_t;
typedef qvector<tev_info_reg_t> tevinforeg_vec_t;
struct __cppobj text_sink_t {text_sink_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ text_sink_t_vtbl {int (__cdecl *print)(text_sink_t *__hidden this, const char *str);};
typedef qvector<twinline_t> text_t;
struct __cppobj textctrl_info_t {size_t cb;qstring text;uint16 flags;uint16 tabsize;};
typedef int thid_t;
struct thread_name_t {thid_t tid;qstring name;};
typedef qvector<thread_name_t> thread_name_vec_t;
typedef ea_t tid_t;
struct til_bucket_t;
struct til_stream_t;
struct __cppobj til_symbol_t {const char *name;const til_t *til;};
struct __cppobj til_t {char *name;char *desc;int nbases;til_t **base;uint32 flags;compiler_info_t cc;til_bucket_t *syms;til_bucket_t *types;til_bucket_t *macros;int nrefs;int nstreams;til_stream_t **streams;};
typedef __time64_t time_t;
struct timespec {time_t tv_sec;__int32 tv_nsec;};
enum tinfo_code_t : __int32 {TERR_OK = 0x0,TERR_SAVE = 0xFFFFFFFF,TERR_SERIALIZE = 0xFFFFFFFE,TERR_WRONGNAME = 0xFFFFFFFD,TERR_BADSYNC = 0xFFFFFFFC,};
struct __cppobj tinfo_t {uint32 typid;};
struct __cppobj tinfo_visitor_t {tinfo_visitor_t_vtbl *__vftable /*VFT*/;int state;int level;};
struct /*VFT*/ tinfo_visitor_t_vtbl {void (__cdecl *~tinfo_visitor_t)(tinfo_visitor_t *__hidden this);int (__cdecl *visit_type)(tinfo_visitor_t *__hidden this, type_mods_t *out, const tinfo_t *tif, const char *name, const char *cmt);};
typedef qvector<tinfo_t> tinfovec_t;
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;};
struct __cppobj token_t {qstring str;lxtype type;sval_t num;union {bool unicode;bool is_unsigned;};union {fpvalue_t fnum;int64 i64;};};
union token_t::$8299423771E115C2E8FEC5C7170C0424 {bool unicode;bool is_unsigned;};
union token_t::$EFD300335D00E904D0DC340AFA3DF967 {fpvalue_t fnum;int64 i64;};
typedef qstack<token_t> tokenstack_t;
typedef qvector<op_t> tracked_regs_t;
struct __cppobj try_handler_t : rangevec_t {sval_t disp;int fpreg;};
struct __cppobj tryblk_t : rangevec_t {char reserve[72];uchar cb;uchar kind;uchar level;};
typedef qvector<tryblk_t> tryblks_t;
enum tty_control_t : __int32 {TCT_UNKNOWN = 0x0,TCT_OWNER = 0x1,TCT_NOT_OWNER = 0x2,};
typedef int twidget_type_t;
struct __cppobj twinline_t {place_t *at;qstring line;color_t prefix_color;bgcolor_t bg_color;bool is_default;};
struct __cppobj twinpos_t {place_t *at;int x;};
struct __cppobj type_attr_t {qstring key;bytevec_t value;};
typedef qvector<type_attr_t> type_attrs_t;
struct type_info;
struct __cppobj type_mods_t {tinfo_t type;qstring name;qstring cmt;int flags;};
typedef int type_sign_t;
typedef uchar type_t;
struct __cppobj typedef_type_data_t {const til_t *til;union {const char *name;uint32 ordinal;};bool is_ordref;bool resolve;};
union typedef_type_data_t::$F773DD8B4C420A056648FD7EB1349F55 {const char *name;uint32 ordinal;};
enum ucdr_kind_t : __int32 {UCDR_STRLIT = 0x1,UCDR_NAME = 0x2,UCDR_MANGLED = 0x4,UCDR_TYPE = 0x8,};
typedef unsigned __int8 uchar;
struct __cppobj udt_member_t {uint64 offset;uint64 size;qstring name;qstring cmt;tinfo_t type;int effalign;uint32 tafld_bits;uchar fda;};
struct __cppobj udt_type_data_t : udtmembervec_t {size_t total_size;size_t unpadded_size;uint32 effalign;uint32 taudt_bits;uchar sda;uchar pack;bool is_union;};
struct __cppobj udtmembervec_t : qvector<udt_member_t> {};
enum ui_notification_t : __int32 {ui_null = 0x0,ui_range = 0x1,ui_refresh_choosers = 0x2,ui_idcstart = 0x3,ui_idcstop = 0x4,ui_suspend = 0x5,ui_resume = 0x6,ui_broadcast = 0x7,ui_read_selection = 0x8,ui_read_range_selection = 0x9,ui_unmarksel = 0xA,ui_screenea = 0xB,ui_saving = 0xC,ui_saved = 0xD,ui_refreshmarked = 0xE,ui_refresh = 0xF,ui_choose = 0x10,ui_close_chooser = 0x11,ui_banner = 0x12,ui_setidle = 0x13,ui_database_closed = 0x14,ui_beep = 0x15,ui_is_msg_inited = 0x16,ui_msg = 0x17,ui_mbox = 0x18,ui_clr_cancelled = 0x19,ui_set_cancelled = 0x1A,ui_test_cancelled = 0x1B,ui_ask_buttons = 0x1C,ui_ask_file = 0x1D,ui_ask_form = 0x1E,ui_ask_text = 0x1F,ui_ask_str = 0x20,ui_ask_addr = 0x21,ui_ask_seg = 0x22,ui_ask_long = 0x23,ui_add_idckey = 0x24,ui_obsolete_del_idckey = 0x25,ui_analyzer_options = 0x26,ui_load_file = 0x27,ui_run_dbg = 0x28,ui_get_cursor = 0x29,ui_get_curline = 0x2A,ui_copywarn = 0x2B,ui_noabort = 0x2C,ui_lock_range_refresh = 0x2D,ui_unlock_range_refresh = 0x2E,ui_genfile_callback = 0x2F,ui_open_url = 0x30,ui_hexdumpea = 0x31,ui_get_key_code = 0x32,ui_setup_plugins_menu = 0x33,ui_get_kernel_version = 0x34,ui_is_idaq = 0x35,ui_refresh_navband = 0x36,ui_debugger_menu_change = 0x37,ui_get_curplace = 0x38,ui_obsolete_display_widget = 0x39,ui_close_widget = 0x3A,ui_activate_widget = 0x3B,ui_find_widget = 0x3C,ui_get_current_widget = 0x3D,ui_widget_visible = 0x3E,ui_widget_closing = 0x3F,ui_widget_invisible = 0x40,ui_get_ea_hint = 0x41,ui_get_item_hint = 0x42,ui_refresh_custom_viewer = 0x43,ui_destroy_custom_viewer = 0x44,ui_jump_in_custom_viewer = 0x45,ui_get_custom_viewer_curline = 0x46,ui_get_current_viewer = 0x47,ui_is_idaview = 0x48,ui_get_custom_viewer_hint = 0x49,ui_set_custom_viewer_range = 0x4A,ui_database_inited = 0x4B,ui_ready_to_run = 0x4C,ui_set_custom_viewer_handler = 0x4D,ui_refresh_chooser = 0x4E,ui_open_builtin = 0x4F,ui_preprocess_action = 0x50,ui_postprocess_action = 0x51,ui_set_custom_viewer_mode = 0x52,ui_gen_disasm_text = 0x53,ui_gen_idanode_text = 0x54,ui_install_cli = 0x55,ui_execute_sync = 0x56,ui_get_chooser_obj = 0x57,ui_enable_chooser_item_attrs = 0x58,ui_get_chooser_item_attrs = 0x59,ui_set_dock_pos = 0x5A,ui_get_opnum = 0x5B,ui_install_custom_datatype_menu = 0x5C,ui_install_custom_optype_menu = 0x5D,ui_get_range_marker = 0x5E,ui_lookup_key_code = 0x5F,ui_load_custom_icon_file = 0x60,ui_load_custom_icon = 0x61,ui_free_custom_icon = 0x62,ui_process_action = 0x63,ui_create_code_viewer = 0x64,ui_addons = 0x65,ui_execute_ui_requests = 0x66,ui_execute_ui_requests_list = 0x67,ui_register_timer = 0x68,ui_unregister_timer = 0x69,ui_take_database_snapshot = 0x6A,ui_restore_database_snapshot = 0x6B,ui_set_code_viewer_line_handlers = 0x6C,ui_obsolete_refresh_custom_code_viewer = 0x6D,ui_create_source_viewer = 0x6E,ui_get_tab_size = 0x6F,ui_repaint_qwidget = 0x70,ui_custom_viewer_set_userdata = 0x71,ui_jumpto = 0x72,ui_cancel_exec_request = 0x73,ui_open_form = 0x74,ui_unrecognized_config_directive = 0x75,ui_get_output_cursor = 0x76,ui_get_output_curline = 0x77,ui_get_output_selected_text = 0x78,ui_get_renderer_type = 0x79,ui_set_renderer_type = 0x7A,ui_get_viewer_user_data = 0x7B,ui_get_viewer_place_type = 0x7C,ui_ea_viewer_history_push_and_jump = 0x7D,ui_ea_viewer_history_info = 0x7E,ui_register_action = 0x7F,ui_unregister_action = 0x80,ui_attach_action_to_menu = 0x81,ui_detach_action_from_menu = 0x82,ui_attach_action_to_popup = 0x83,ui_detach_action_from_popup = 0x84,ui_attach_dynamic_action_to_popup = 0x85,ui_attach_action_to_toolbar = 0x86,ui_detach_action_from_toolbar = 0x87,ui_updating_actions = 0x88,ui_updated_actions = 0x89,ui_populating_widget_popup = 0x8A,ui_finish_populating_widget_popup = 0x8B,ui_update_action_attr = 0x8C,ui_get_action_attr = 0x8D,ui_plugin_loaded = 0x8E,ui_plugin_unloading = 0x8F,ui_get_widget_type = 0x90,ui_current_widget_changed = 0x91,ui_get_widget_title = 0x92,ui_obsolete_get_user_strlist_options = 0x93,ui_create_custom_viewer = 0x94,ui_custom_viewer_jump = 0x95,ui_set_custom_viewer_handlers = 0x96,ui_get_registered_actions = 0x97,ui_create_toolbar = 0x98,ui_delete_toolbar = 0x99,ui_create_menu = 0x9A,ui_delete_menu = 0x9B,ui_obsolete_set_nav_colorizer = 0x9C,ui_get_chooser_data = 0x9D,ui_obsolete_get_highlight = 0x9E,ui_set_highlight = 0x9F,ui_set_mappings = 0xA0,ui_create_empty_widget = 0xA1,ui_msg_clear = 0xA2,ui_msg_save = 0xA3,ui_msg_get_lines = 0xA4,ui_chooser_default_enter = 0xA5,ui_screen_ea_changed = 0xA6,ui_get_active_modal_widget = 0xA7,ui_navband_pixel = 0xA8,ui_navband_ea = 0xA9,ui_get_window_id = 0xAA,ui_create_desktop_widget = 0xAB,ui_strchoose = 0xAC,ui_set_nav_colorizer = 0xAD,ui_display_widget = 0xAE,ui_get_lines_rendering_info = 0xAF,ui_sync_sources = 0xB0,ui_get_widget_config = 0xB1,ui_set_widget_config = 0xB2,ui_get_custom_viewer_location = 0xB3,ui_initing_database = 0xB4,ui_destroying_procmod = 0xB5,ui_destroying_plugmod = 0xB6,ui_update_file_history = 0xB7,ui_cancel_thread_exec_requests = 0xB8,ui_get_synced_group = 0xB9,ui_show_rename_dialog = 0xBA,ui_desktop_applied = 0xBB,ui_choose_bookmark = 0xBC,ui_get_custom_viewer_place_xcoord = 0xBD,ui_get_user_input_event = 0xBE,ui_get_highlight_2 = 0xBF,ui_last = 0xC0,ui_dbg_begin = 0x3E8,ui_dbg_run_requests = 0x3E8,ui_dbg_get_running_request = 0x3E9,ui_dbg_get_running_notification = 0x3EA,ui_dbg_clear_requests_queue = 0x3EB,ui_dbg_get_process_state = 0x3EC,ui_dbg_start_process = 0x3ED,ui_dbg_request_start_process = 0x3EE,ui_dbg_suspend_process = 0x3EF,ui_dbg_request_suspend_process = 0x3F0,ui_dbg_continue_process = 0x3F1,ui_dbg_request_continue_process = 0x3F2,ui_dbg_exit_process = 0x3F3,ui_dbg_request_exit_process = 0x3F4,ui_dbg_get_thread_qty = 0x3F5,ui_dbg_getn_thread = 0x3F6,ui_dbg_select_thread = 0x3F7,ui_dbg_request_select_thread = 0x3F8,ui_dbg_step_into = 0x3F9,ui_dbg_request_step_into = 0x3FA,ui_dbg_step_over = 0x3FB,ui_dbg_request_step_over = 0x3FC,ui_dbg_run_to = 0x3FD,ui_dbg_request_run_to = 0x3FE,ui_dbg_step_until_ret = 0x3FF,ui_dbg_request_step_until_ret = 0x400,ui_dbg_get_bpt_qty = 0x401,ui_dbg_add_oldbpt = 0x402,ui_dbg_request_add_oldbpt = 0x403,ui_dbg_del_oldbpt = 0x404,ui_dbg_request_del_oldbpt = 0x405,ui_dbg_enable_oldbpt = 0x406,ui_dbg_request_enable_oldbpt = 0x407,ui_dbg_set_trace_size = 0x408,ui_dbg_clear_trace = 0x409,ui_dbg_request_clear_trace = 0x40A,ui_dbg_is_step_trace_enabled = 0x40B,ui_dbg_enable_step_trace = 0x40C,ui_dbg_request_enable_step_trace = 0x40D,ui_dbg_get_step_trace_options = 0x40E,ui_dbg_set_step_trace_options = 0x40F,ui_dbg_request_set_step_trace_options = 0x410,ui_dbg_is_insn_trace_enabled = 0x411,ui_dbg_enable_insn_trace = 0x412,ui_dbg_request_enable_insn_trace = 0x413,ui_dbg_get_insn_trace_options = 0x414,ui_dbg_set_insn_trace_options = 0x415,ui_dbg_request_set_insn_trace_options = 0x416,ui_dbg_is_func_trace_enabled = 0x417,ui_dbg_enable_func_trace = 0x418,ui_dbg_request_enable_func_trace = 0x419,ui_dbg_get_func_trace_options = 0x41A,ui_dbg_set_func_trace_options = 0x41B,ui_dbg_request_set_func_trace_options = 0x41C,ui_dbg_get_tev_qty = 0x41D,ui_dbg_get_tev_info = 0x41E,ui_dbg_get_call_tev_callee = 0x41F,ui_dbg_get_ret_tev_return = 0x420,ui_dbg_get_bpt_tev_ea = 0x421,ui_dbg_get_reg_value_type = 0x422,ui_dbg_get_processes = 0x423,ui_dbg_attach_process = 0x424,ui_dbg_request_attach_process = 0x425,ui_dbg_detach_process = 0x426,ui_dbg_request_detach_process = 0x427,ui_dbg_get_first_module = 0x428,ui_dbg_get_next_module = 0x429,ui_dbg_bring_to_front = 0x42A,ui_dbg_get_current_thread = 0x42B,ui_dbg_wait_for_next_event = 0x42C,ui_dbg_get_debug_event = 0x42D,ui_dbg_set_debugger_options = 0x42E,ui_dbg_set_remote_debugger = 0x42F,ui_dbg_load_debugger = 0x430,ui_dbg_retrieve_exceptions = 0x431,ui_dbg_store_exceptions = 0x432,ui_dbg_define_exception = 0x433,ui_dbg_suspend_thread = 0x434,ui_dbg_request_suspend_thread = 0x435,ui_dbg_resume_thread = 0x436,ui_dbg_request_resume_thread = 0x437,ui_dbg_get_process_options = 0x438,ui_dbg_check_bpt = 0x439,ui_dbg_set_process_state = 0x43A,ui_dbg_get_manual_regions = 0x43B,ui_dbg_set_manual_regions = 0x43C,ui_dbg_enable_manual_regions = 0x43D,ui_dbg_set_process_options = 0x43E,ui_dbg_is_busy = 0x43F,ui_dbg_hide_all_bpts = 0x440,ui_dbg_edit_manual_regions = 0x441,ui_dbg_get_sp_val = 0x442,ui_dbg_get_ip_val = 0x443,ui_dbg_get_reg_val = 0x444,ui_dbg_set_reg_val = 0x445,ui_dbg_request_set_reg_val = 0x446,ui_dbg_get_insn_tev_reg_val = 0x447,ui_dbg_get_insn_tev_reg_result = 0x448,ui_dbg_register_provider = 0x449,ui_dbg_unregister_provider = 0x44A,ui_dbg_handle_debug_event = 0x44B,ui_dbg_add_vmod = 0x44C,ui_dbg_del_vmod = 0x44D,ui_dbg_compare_bpt_locs = 0x44E,ui_obsolete_dbg_save_bpts = 0x44F,ui_dbg_set_bptloc_string = 0x450,ui_dbg_get_bptloc_string = 0x451,ui_dbg_internal_appcall = 0x452,ui_dbg_internal_cleanup_appcall = 0x453,ui_dbg_internal_get_sreg_base = 0x454,ui_dbg_internal_ioctl = 0x455,ui_dbg_read_memory = 0x456,ui_dbg_write_memory = 0x457,ui_dbg_read_registers = 0x458,ui_dbg_write_register = 0x459,ui_dbg_get_memory_info = 0x45A,ui_dbg_get_event_cond = 0x45B,ui_dbg_set_event_cond = 0x45C,ui_dbg_enable_bpt = 0x45D,ui_dbg_request_enable_bpt = 0x45E,ui_dbg_del_bpt = 0x45F,ui_dbg_request_del_bpt = 0x460,ui_dbg_map_source_path = 0x461,ui_dbg_map_source_file_path = 0x462,ui_dbg_modify_source_paths = 0x463,ui_dbg_is_bblk_trace_enabled = 0x464,ui_dbg_enable_bblk_trace = 0x465,ui_dbg_request_enable_bblk_trace = 0x466,ui_dbg_get_bblk_trace_options = 0x467,ui_dbg_set_bblk_trace_options = 0x468,ui_dbg_request_set_bblk_trace_options = 0x469,ui_dbg_load_trace_file = 0x46A,ui_dbg_save_trace_file = 0x46B,ui_dbg_is_valid_trace_file = 0x46C,ui_dbg_set_trace_file_desc = 0x46D,ui_dbg_get_trace_file_desc = 0x46E,ui_dbg_choose_trace_file = 0x46F,ui_dbg_diff_trace_file = 0x470,ui_dbg_graph_trace = 0x471,ui_dbg_get_tev_memory_info = 0x472,ui_dbg_get_tev_event = 0x473,ui_dbg_get_insn_tev_reg_mem = 0x474,ui_dbg_getn_bpt = 0x475,ui_dbg_get_bpt = 0x476,ui_dbg_find_bpt = 0x477,ui_dbg_add_bpt = 0x478,ui_dbg_request_add_bpt = 0x479,ui_dbg_update_bpt = 0x47A,ui_dbg_for_all_bpts = 0x47B,ui_dbg_get_tev_ea = 0x47C,ui_dbg_get_tev_type = 0x47D,ui_dbg_get_tev_tid = 0x47E,ui_dbg_get_trace_base_address = 0x47F,ui_dbg_set_trace_base_address = 0x480,ui_dbg_add_tev = 0x481,ui_dbg_add_insn_tev = 0x482,ui_dbg_add_call_tev = 0x483,ui_dbg_add_ret_tev = 0x484,ui_dbg_add_bpt_tev = 0x485,ui_dbg_add_debug_event = 0x486,ui_dbg_add_thread = 0x487,ui_dbg_del_thread = 0x488,ui_dbg_add_many_tevs = 0x489,ui_dbg_set_bpt_group = 0x48A,ui_dbg_set_highlight_trace_options = 0x48B,ui_dbg_set_trace_platform = 0x48C,ui_dbg_get_trace_platform = 0x48D,ui_dbg_internal_get_elang = 0x48E,ui_dbg_internal_set_elang = 0x48F,ui_dbg_load_dbg_dbginfo = 0x490,ui_dbg_set_resume_mode = 0x491,ui_dbg_request_set_resume_mode = 0x492,ui_dbg_set_bptloc_group = 0x493,ui_dbg_list_bptgrps = 0x494,ui_dbg_rename_bptgrp = 0x495,ui_dbg_del_bptgrp = 0x496,ui_dbg_get_grp_bpts = 0x497,ui_dbg_get_bpt_group = 0x498,ui_dbg_change_bptlocs = 0x499,ui_dbg_collect_stack_trace = 0x49A,ui_dbg_get_module_info = 0x49B,ui_dbg_get_srcinfo_provider = 0x49C,ui_dbg_get_global_var = 0x49D,ui_dbg_get_local_var = 0x49E,ui_dbg_get_local_vars = 0x49F,ui_dbg_add_path_mapping = 0x4A0,ui_dbg_get_current_source_file = 0x4A1,ui_dbg_get_current_source_line = 0x4A2,ui_dbg_srcdbg_step_into = 0x4A3,ui_dbg_srcdbg_request_step_into = 0x4A4,ui_dbg_srcdbg_step_over = 0x4A5,ui_dbg_srcdbg_request_step_over = 0x4A6,ui_dbg_srcdbg_step_until_ret = 0x4A7,ui_dbg_srcdbg_request_step_until_ret = 0x4A8,ui_dbg_getn_thread_name = 0x4A9,ui_dbg_bin_search = 0x4AA,ui_dbg_get_insn_tev_reg_val_i = 0x4AB,ui_dbg_get_insn_tev_reg_result_i = 0x4AC,ui_dbg_get_reg_val_i = 0x4AD,ui_dbg_set_reg_val_i = 0x4AE,ui_dbg_get_reg_info = 0x4AF,ui_dbg_set_trace_dynamic_register_set = 0x4B0,ui_dbg_get_trace_dynamic_register_set = 0x4B1,ui_dbg_enable_bptgrp = 0x4B2,ui_dbg_end = 0x4B3,};
struct __cppobj ui_request_t {ui_request_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ ui_request_t_vtbl {bool (__cdecl *run)(ui_request_t *__hidden this);void (__cdecl *~ui_request_t)(ui_request_t *__hidden this);};
struct __cppobj ui_requests_t : qlist<ui_request_t *> {};
typedef unsigned int uint;
struct __cppobj uint128 {ulonglong l;ulonglong h;};
typedef unsigned __int16 uint16;
typedef unsigned __int16 uint16_t;
typedef unsigned int uint32;
typedef unsigned int uint32_t;
typedef ulonglong uint64;
typedef unsigned __int64 uint64_t;
typedef unsigned __int8 uint8;
typedef unsigned __int8 uint8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned __int64 uint_fast64_t;
typedef unsigned __int8 uint_fast8_t;
typedef unsigned __int16 uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned __int64 uint_least64_t;
typedef unsigned __int8 uint_least8_t;
typedef unsigned __int64 uintmax_t;
typedef unsigned __int64 uintptr_t;
typedef unsigned __int64 ulonglong;
typedef void (*unexpected_function)(void);
typedef void (*unexpected_handler)(void);
struct __cppobj update_bpt_info_t {ea_t ea;bytevec_t orgbytes;bpttype_t type;int size;uchar code;pid_t pid;thid_t tid;};
typedef qvector<update_bpt_info_t> update_bpt_vec_t;
enum update_type_t : __int32 {UTP_ENUM = 0x0,UTP_STRUCT = 0x1,};
struct __cppobj user_defined_prefix_t {user_defined_prefix_t_vtbl *__vftable /*VFT*/;};
struct /*VFT*/ user_defined_prefix_t_vtbl {void (__cdecl *~user_defined_prefix_t)(user_defined_prefix_t *__hidden this);void (__cdecl *get_user_defined_prefix)(user_defined_prefix_t *__hidden this, qstring *vout, ea_t ea, const insn_t *insn, int lnnum, int indent, const char *line);};
struct __cppobj user_graph_place_t : place_t {int node;};
struct /*VFT*/ user_graph_place_t_vtbl {void (__cdecl *print)(const place_t *__hidden this, qstring *vout, void *ud);uval_t (__cdecl *touval)(const place_t *__hidden this, void *ud);place_t *(__cdecl *clone)(const place_t *__hidden this);void (__cdecl *copyfrom)(place_t *__hidden this, const place_t *from);place_t *(__cdecl *makeplace)(const place_t *__hidden this, void *ud, uval_t x, int lnnum);int (__cdecl *compare)(const place_t *__hidden this, const place_t *t2);void (__cdecl *adjust)(place_t *__hidden this, void *ud);bool (__cdecl *prev)(place_t *__hidden this, void *ud);bool (__cdecl *next)(place_t *__hidden this, void *ud);bool (__cdecl *beginning)(const place_t *__hidden this, void *ud);bool (__cdecl *ending)(const place_t *__hidden this, void *ud);int (__cdecl *generate)(const place_t *__hidden this, qstrvec_t *out, int *out_deflnnum, color_t *out_pfx_color, bgcolor_t *out_bgcolor, void *ud, int maxsize);void (__cdecl *serialize)(const place_t *__hidden this, bytevec_t *out);bool (__cdecl *deserialize)(place_t *__hidden this, const uchar **pptr, const uchar *end);int (__cdecl *id)(const place_t *__hidden this);const char *(__cdecl *name)(const place_t *__hidden this);ea_t (__cdecl *toea)(const place_t *__hidden this);bool (__cdecl *rebase)(place_t *__hidden this, const segm_move_infos_t *);place_t *(__cdecl *enter)(const place_t *__hidden this, uint32 *);void (__cdecl *leave)(const place_t *__hidden this, uint32);int (__cdecl *compare2)(const place_t *__hidden this, const place_t *t2, void *);};
typedef unsigned __int16 ushort;
typedef asize_t uval_t;
typedef qvector<unsigned long long> uvalvec_t;
typedef char *va_list;
struct __cppobj valinfo_t {argloc_t loc;qstring label;tinfo_t type;};
struct __cppobj valstr_t {qstring oneline;size_t length;valstrs_t *members;valinfo_t *info;int props;};
struct valstr_t::flatten_args_t {const valstr_t *may_not_collapse;int ptvf;int max_length;int margin;int indent;};
struct __cppobj valstrs_t : valstrvec_t {};
typedef qvector<valstr_t> valstrvec_t;
union value_u {uint8 v_char;uint16 v_short;uint32 v_long;uint64 v_int64;uval_t v_uval;value_u::dq_t _dq;value_u::dt_t dt;value_u::d128_t d128;uint8 byte16[16];uint32 dword3[3];};
struct value_u::d128_t {uint64 low;uint64 high;};
struct value_u::dq_t {uint32 low;uint32 high;};
struct value_u::dt_t {uint32 low;uint32 high;uint16 upper;};
typedef input_event_modifiers_t view_event_state_t;
union view_mouse_event_location_t {ea_t ea;const selection_item_t *item;};
struct view_mouse_event_t {tcc_renderer_type_t rtype;uint32 x;uint32 y;view_mouse_event_t::location_t location;view_event_state_t state;vme_button_t button;renderer_pos_info_t renderer_pos;};
typedef view_mouse_event_location_t view_mouse_event_t::location_t;
enum view_notification_t : __int32 {view_activated = 0x0,view_deactivated = 0x1,view_keydown = 0x2,view_click = 0x3,view_dblclick = 0x4,view_curpos = 0x5,view_created = 0x6,view_close = 0x7,view_switched = 0x8,view_mouse_over = 0x9,view_loc_changed = 0xA,view_mouse_moved = 0xB,};
enum vme_button_t : __int32 {VME_UNKNOWN = 0x0,VME_LEFT_BUTTON = 0x1,VME_RIGHT_BUTTON = 0x2,VME_MID_BUTTON = 0x3,};
typedef __int16 wchar16_t;
typedef uint32 wchar32_t;
typedef unsigned __int16 wctype_t;
typedef unsigned __int16 wint_t;
struct __cppobj xrefblk_t {ea_t from;ea_t to;uchar iscode;uchar type;uchar user;};
struct __cppobj xreflist_entry_t {ea_t ea;uchar opnum;uchar type;};
typedef qvector<xreflist_entry_t> xreflist_t;
struct __cppobj xrefpos_t {ea_t ea;uchar type;};

std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??0?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAA_PEBDPEBU_Container_base0_1__Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::pointer _Parg, const std::_Container_base *_Pstring);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??0?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAA_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??0?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAA_PEB_SPEBU_Container_base0_1__Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::pointer _Parg, const std::_Container_base *_Pstring);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??0?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAA_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??0?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAA_PEB_UPEBU_Container_base0_1__Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::pointer _Parg, const std::_Container_base *_Pstring);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??0?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAA_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??0?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAA_PEB_WPEBU_Container_base0_1__Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::pointer _Parg, const std::_Container_base *_Pstring);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??0?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAA_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_String_val<std::_Simple_types<char>> *__cdecl ??0?$_String_val_U?$_Simple_types_D_std___std__QEAA_XZ(std::_String_val<std::_Simple_types<char>> *__hidden this);
std::_String_val<std::_Simple_types<char16_t>> *__cdecl ??0?$_String_val_U?$_Simple_types__S_std___std__QEAA_XZ(std::_String_val<std::_Simple_types<char16_t>> *__hidden this);
std::_String_val<std::_Simple_types<char32_t>> *__cdecl ??0?$_String_val_U?$_Simple_types__U_std___std__QEAA_XZ(std::_String_val<std::_Simple_types<char32_t>> *__hidden this);
std::_String_val<std::_Simple_types<wchar_t>> *__cdecl ??0?$_String_val_U?$_Simple_types__W_std___std__QEAA_XZ(std::_String_val<std::_Simple_types<wchar_t>> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA_$$QEAV01__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA_$$QEAV01_AEBV?$allocator_U?$pair_$$CBHH_std___1__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::allocator_type *_Al);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA_AEBU?$less_H_1__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_compare *_Parg);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA_AEBU?$less_H_1_AEBV?$allocator_U?$pair_$$CBHH_std___1__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_compare *_Parg, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::allocator_type *_Al);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA_$$QEAV01__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA_$$QEAV01_AEBV?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::allocator_type *_Al);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA_AEBU?$less_V?$_qstring_D___1__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_compare *_Parg);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA_AEBU?$less_V?$_qstring_D___1_AEBV?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_compare *_Parg, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::allocator_type *_Al);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA_$$QEAV01__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA_$$QEAV01_AEBV?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::allocator_type *_Al);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA_AEBU?$less__K_1__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_compare *_Parg);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA_AEBU?$less__K_1_AEBV?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_compare *_Parg, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::allocator_type *_Al);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA_$$QEAV01__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA_$$QEAV01_AEBV?$allocator_U?$pair_$$CB_K_K_std___1__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::allocator_type *_Al);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA_AEBU?$less__K_1__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_compare *_Parg);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__cdecl ??0?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA_AEBU?$less__K_1_AEBV?$allocator_U?$pair_$$CB_K_K_std___1__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_compare *_Parg, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::allocator_type *_Al);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__cdecl ??0?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA_$$QEAV01__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__cdecl ??0?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA_$$QEAV01_AEBV?$allocator_H_1__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::allocator_type *_Al);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__cdecl ??0?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA_AEBU?$less_H_1__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_compare *_Parg);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__cdecl ??0?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA_AEBU?$less_H_1_AEBV?$allocator_H_1__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_compare *_Parg, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::allocator_type *_Al);
std::_Tree_node<int, void *> *__cdecl ??0?$_Tree_node_HPEAX_std__QEAA_AEBU01__Z(std::_Tree_node<int, void *> *__hidden this, const std::_Tree_node<int, void *> *);
std::_Tree_node<std::pair<const int, int>, void *> *__cdecl ??0?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std__QEAA_AEBU01__Z(std::_Tree_node<std::pair<const int, int>, void *> *__hidden this, const std::_Tree_node<std::pair<const int, int>, void *> *);
std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *__cdecl ??0?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std__QEAA_AEBU01__Z(std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *__hidden this, const std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *);
std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *__cdecl ??0?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std__QEAA_AEBU01__Z(std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *__hidden this, const std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *);
std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *__cdecl ??0?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std__QEAA_AEBU01__Z(std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *__hidden this, const std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__cdecl ??0?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEAA_PEAU?$_Tree_node_HPEAX_1_PEBV?$_Tree_val_U?$_Tree_simple_types_H_std___1__Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::_Nodeptr _Pnode, std::_Tree_val<std::_Tree_simple_types<int>> *_Plist);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__cdecl ??0?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEAA_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ??0?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEAA_PEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_1_PEBV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___1__Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::_Nodeptr _Pnode, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> *_Plist);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ??0?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEAA_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ??0?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEAA_PEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_1_PEBV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___1__Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::_Nodeptr _Pnode, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> *_Plist);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ??0?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEAA_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ??0?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEAA_PEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_1_PEBV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___1__Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::_Nodeptr _Pnode, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> *_Plist);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ??0?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEAA_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ??0?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEAA_PEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_1_PEBV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___1__Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::_Nodeptr _Pnode, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> *_Plist);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ??0?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEAA_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_val<std::_Tree_simple_types<int>> *__cdecl ??0?$_Tree_val_U?$_Tree_simple_types_H_std___std__QEAA_XZ(std::_Tree_val<std::_Tree_simple_types<int>> *__hidden this);
std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> *__cdecl ??0?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__QEAA_XZ(std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> *__hidden this);
std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> *__cdecl ??0?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__QEAA_XZ(std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> *__hidden this);
std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> *__cdecl ??0?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__QEAA_XZ(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> *__hidden this);
std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> *__cdecl ??0?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__QEAA_XZ(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> *__hidden this);
_qstring<char> *__cdecl ??0?$_qstring_D__QEAA_PEBD_Z(_qstring<char> *__hidden this, char *ptr);
_qstring<char> *__cdecl ??0?$_qstring_D__QEAA_PEBD_K_Z(_qstring<char> *__hidden this, char *ptr, size_t len);
_qstring<char> *__cdecl ??0?$_qstring_D__QEAA_XZ(_qstring<char> *__hidden this);
_qstring<unsigned char> *__cdecl ??0?$_qstring_E__QEAA_PEBE_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 *ptr);
_qstring<unsigned char> *__cdecl ??0?$_qstring_E__QEAA_PEBE_K_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 *ptr, size_t len);
_qstring<unsigned char> *__cdecl ??0?$_qstring_E__QEAA_XZ(_qstring<unsigned char> *__hidden this);
_qstring<wchar_t> *__cdecl ??0?$_qstring__W__QEAA_PEB_W_Z(_qstring<wchar_t> *__hidden this, __int16 *ptr);
_qstring<wchar_t> *__cdecl ??0?$_qstring__W__QEAA_PEB_W_K_Z(_qstring<wchar_t> *__hidden this, __int16 *ptr, size_t len);
_qstring<wchar_t> *__cdecl ??0?$_qstring__W__QEAA_XZ(_qstring<wchar_t> *__hidden this);
std::allocator<char> *__cdecl ??0?$allocator_D_std__QEAA_AEBV01__Z(std::allocator<char> *__hidden this, const std::allocator<char> *);
std::allocator<char> *__cdecl ??0?$allocator_D_std__QEAA_XZ(std::allocator<char> *__hidden this);
std::allocator<int> *__cdecl ??0?$allocator_H_std__QEAA_AEBV01__Z(std::allocator<int> *__hidden this, const std::allocator<int> *);
std::allocator<int> *__cdecl ??0?$allocator_H_std__QEAA_XZ(std::allocator<int> *__hidden this);
std::allocator<std::_Tree_node<int, void *>> *__cdecl ??0?$allocator_U?$_Tree_node_HPEAX_std___std__QEAA_AEBV01__Z(std::allocator<std::_Tree_node<int, void *>> *__hidden this, const std::allocator<std::_Tree_node<int, void *>> *);
std::allocator<std::_Tree_node<int, void *>> *__cdecl ??0?$allocator_U?$_Tree_node_HPEAX_std___std__QEAA_XZ(std::allocator<std::_Tree_node<int, void *>> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__cdecl ??0?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__QEAA_AEBV01__Z(std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__hidden this, const std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *);
std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__cdecl ??0?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__QEAA_XZ(std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__cdecl ??0?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__QEAA_AEBV01__Z(std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__hidden this, const std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *);
std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__cdecl ??0?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__QEAA_XZ(std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__cdecl ??0?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__QEAA_AEBV01__Z(std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__hidden this, const std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *);
std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__cdecl ??0?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__QEAA_XZ(std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__cdecl ??0?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__QEAA_AEBV01__Z(std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__hidden this, const std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *);
std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__cdecl ??0?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__QEAA_XZ(std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__hidden this);
std::allocator<std::pair<const int, int>> *__cdecl ??0?$allocator_U?$pair_$$CBHH_std___std__QEAA_AEBV01__Z(std::allocator<std::pair<const int, int>> *__hidden this, const std::allocator<std::pair<const int, int>> *);
std::allocator<std::pair<const int, int>> *__cdecl ??0?$allocator_U?$pair_$$CBHH_std___std__QEAA_XZ(std::allocator<std::pair<const int, int>> *__hidden this);
std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__cdecl ??0?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEAA_AEBV01__Z(std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this, const std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *);
std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__cdecl ??0?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEAA_XZ(std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this);
std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__cdecl ??0?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEAA_AEBV01__Z(std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this, const std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *);
std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__cdecl ??0?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEAA_XZ(std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this);
std::allocator<std::pair<const unsigned long long, unsigned long long>> *__cdecl ??0?$allocator_U?$pair_$$CB_K_K_std___std__QEAA_AEBV01__Z(std::allocator<std::pair<const unsigned long long, unsigned long long>> *__hidden this, const std::allocator<std::pair<const unsigned long long, unsigned long long>> *);
std::allocator<std::pair<const unsigned long long, unsigned long long>> *__cdecl ??0?$allocator_U?$pair_$$CB_K_K_std___std__QEAA_XZ(std::allocator<std::pair<const unsigned long long, unsigned long long>> *__hidden this);
std::allocator<char16_t> *__cdecl ??0?$allocator__S_std__QEAA_AEBV01__Z(std::allocator<char16_t> *__hidden this, const std::allocator<char16_t> *);
std::allocator<char16_t> *__cdecl ??0?$allocator__S_std__QEAA_XZ(std::allocator<char16_t> *__hidden this);
std::allocator<char32_t> *__cdecl ??0?$allocator__U_std__QEAA_AEBV01__Z(std::allocator<char32_t> *__hidden this, const std::allocator<char32_t> *);
std::allocator<char32_t> *__cdecl ??0?$allocator__U_std__QEAA_XZ(std::allocator<char32_t> *__hidden this);
std::allocator<wchar_t> *__cdecl ??0?$allocator__W_std__QEAA_AEBV01__Z(std::allocator<wchar_t> *__hidden this, const std::allocator<wchar_t> *);
std::allocator<wchar_t> *__cdecl ??0?$allocator__W_std__QEAA_XZ(std::allocator<wchar_t> *__hidden this);
backward_flow_iterator_t<no_regs_t, simple_bfi_t> *__cdecl ??0?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____QEAA__KAEAUno_regs_t__AEAUsimple_bfi_t___NI_Z(backward_flow_iterator_t<no_regs_t, simple_bfi_t> *__hidden this, ea_t start_ea_, no_regs_t *start_regs, simple_bfi_t *ctrl_, bool only_near_, uint max_insn_cnt_);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_$$QEAV01__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_$$QEAV01_AEBV?$allocator_D_1__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right, std::allocator<char> *_Al);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_AEBV01__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_AEBV01_AEBV?$allocator_D_1__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, std::allocator<char> *_Al);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_AEBV01__K1AEBV?$allocator_D_1__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Roff, const std::basic_string<char>::size_type _Count, std::allocator<char> *_Al);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_AEBV01__KAEBV?$allocator_D_1__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Roff, std::allocator<char> *_Al);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_AEBV?$allocator_D_1__Z(std::basic_string<char> *__hidden this, std::allocator<char> *_Al);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_QEBD_Z(std::basic_string<char> *__hidden this, char *const _Ptr);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_QEBDAEBV?$allocator_D_1__Z(std::basic_string<char> *__hidden this, char *const _Ptr, std::allocator<char> *_Al);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_QEBD_K_Z(std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Count);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_QEBD_KAEBV?$allocator_D_1__Z(std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Count, std::allocator<char> *_Al);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_U_String_constructor_concat_tag_1_AEAV01_1_Z(std::basic_string<char> *__hidden this, std::_String_constructor_concat_tag, std::basic_string<char> *_Left, std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_U_String_constructor_concat_tag_1_AEBV01_QEBD_K23_Z(std::basic_string<char> *__hidden this, std::_String_constructor_concat_tag, const std::basic_string<char> *_Source_of_al, char *const _Left_ptr, const std::basic_string<char>::size_type _Left_size, char *const _Right_ptr, const std::basic_string<char>::size_type _Right_size);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_V?$initializer_list_D_1_AEBV?$allocator_D_1__Z(std::basic_string<char> *__hidden this, std::initializer_list<char> _Ilist, std::allocator<char> *_Al);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_XZ(std::basic_string<char> *__hidden this);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA__KD_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Count, char _Ch);
std::basic_string<char> *__cdecl ??0?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA__KDAEBV?$allocator_D_1__Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Count, char _Ch, std::allocator<char> *_Al);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_$$QEAV01__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_$$QEAV01_AEBV?$allocator__S_1__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right, std::allocator<char16_t> *_Al);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_AEBV01__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_AEBV01_AEBV?$allocator__S_1__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, std::allocator<char16_t> *_Al);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_AEBV01__K1AEBV?$allocator__S_1__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Roff, const std::basic_string<char16_t>::size_type _Count, std::allocator<char16_t> *_Al);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_AEBV01__KAEBV?$allocator__S_1__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Roff, std::allocator<char16_t> *_Al);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_AEBV?$allocator__S_1__Z(std::basic_string<char16_t> *__hidden this, std::allocator<char16_t> *_Al);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_QEB_S_Z(std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_QEB_SAEBV?$allocator__S_1__Z(std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, std::allocator<char16_t> *_Al);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_QEB_S_K_Z(std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_QEB_S_KAEBV?$allocator__S_1__Z(std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Count, std::allocator<char16_t> *_Al);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_U_String_constructor_concat_tag_1_AEAV01_1_Z(std::basic_string<char16_t> *__hidden this, std::_String_constructor_concat_tag, std::basic_string<char16_t> *_Left, std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_U_String_constructor_concat_tag_1_AEBV01_QEB_S_K23_Z(std::basic_string<char16_t> *__hidden this, std::_String_constructor_concat_tag, const std::basic_string<char16_t> *_Source_of_al, __int16 *const _Left_ptr, const std::basic_string<char16_t>::size_type _Left_size, __int16 *const _Right_ptr, const std::basic_string<char16_t>::size_type _Right_size);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_V?$initializer_list__S_1_AEBV?$allocator__S_1__Z(std::basic_string<char16_t> *__hidden this, std::initializer_list<char16_t> _Ilist, std::allocator<char16_t> *_Al);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_XZ(std::basic_string<char16_t> *__hidden this);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA__K_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Count, __int16 _Ch);
std::basic_string<char16_t> *__cdecl ??0?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA__K_SAEBV?$allocator__S_1__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Count, __int16 _Ch, std::allocator<char16_t> *_Al);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_$$QEAV01__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_$$QEAV01_AEBV?$allocator__U_1__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right, std::allocator<char32_t> *_Al);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_AEBV01__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_AEBV01_AEBV?$allocator__U_1__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, std::allocator<char32_t> *_Al);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_AEBV01__K1AEBV?$allocator__U_1__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Roff, const std::basic_string<char32_t>::size_type _Count, std::allocator<char32_t> *_Al);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_AEBV01__KAEBV?$allocator__U_1__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Roff, std::allocator<char32_t> *_Al);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_AEBV?$allocator__U_1__Z(std::basic_string<char32_t> *__hidden this, std::allocator<char32_t> *_Al);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_QEB_U_Z(std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_QEB_UAEBV?$allocator__U_1__Z(std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, std::allocator<char32_t> *_Al);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_QEB_U_K_Z(std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_QEB_U_KAEBV?$allocator__U_1__Z(std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Count, std::allocator<char32_t> *_Al);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_U_String_constructor_concat_tag_1_AEAV01_1_Z(std::basic_string<char32_t> *__hidden this, std::_String_constructor_concat_tag, std::basic_string<char32_t> *_Left, std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_U_String_constructor_concat_tag_1_AEBV01_QEB_U_K23_Z(std::basic_string<char32_t> *__hidden this, std::_String_constructor_concat_tag, const std::basic_string<char32_t> *_Source_of_al, __int32 *const _Left_ptr, const std::basic_string<char32_t>::size_type _Left_size, __int32 *const _Right_ptr, const std::basic_string<char32_t>::size_type _Right_size);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_V?$initializer_list__U_1_AEBV?$allocator__U_1__Z(std::basic_string<char32_t> *__hidden this, std::initializer_list<char32_t> _Ilist, std::allocator<char32_t> *_Al);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_XZ(std::basic_string<char32_t> *__hidden this);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA__K_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Count, __int32 _Ch);
std::basic_string<char32_t> *__cdecl ??0?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA__K_UAEBV?$allocator__U_1__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Count, __int32 _Ch, std::allocator<char32_t> *_Al);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_$$QEAV01__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_$$QEAV01_AEBV?$allocator__W_1__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right, std::allocator<wchar_t> *_Al);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_AEBV01__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_AEBV01_AEBV?$allocator__W_1__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, std::allocator<wchar_t> *_Al);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_AEBV01__K1AEBV?$allocator__W_1__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Roff, const std::basic_string<wchar_t>::size_type _Count, std::allocator<wchar_t> *_Al);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_AEBV01__KAEBV?$allocator__W_1__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Roff, std::allocator<wchar_t> *_Al);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_AEBV?$allocator__W_1__Z(std::basic_string<wchar_t> *__hidden this, std::allocator<wchar_t> *_Al);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_QEB_W_Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_QEB_WAEBV?$allocator__W_1__Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, std::allocator<wchar_t> *_Al);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_QEB_W_K_Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_QEB_W_KAEBV?$allocator__W_1__Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Count, std::allocator<wchar_t> *_Al);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_U_String_constructor_concat_tag_1_AEAV01_1_Z(std::basic_string<wchar_t> *__hidden this, std::_String_constructor_concat_tag, std::basic_string<wchar_t> *_Left, std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_U_String_constructor_concat_tag_1_AEBV01_QEB_W_K23_Z(std::basic_string<wchar_t> *__hidden this, std::_String_constructor_concat_tag, const std::basic_string<wchar_t> *_Source_of_al, __int16 *const _Left_ptr, const std::basic_string<wchar_t>::size_type _Left_size, __int16 *const _Right_ptr, const std::basic_string<wchar_t>::size_type _Right_size);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_V?$initializer_list__W_1_AEBV?$allocator__W_1__Z(std::basic_string<wchar_t> *__hidden this, std::initializer_list<wchar_t> _Ilist, std::allocator<wchar_t> *_Al);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_XZ(std::basic_string<wchar_t> *__hidden this);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA__K_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Count, __int16 _Ch);
std::basic_string<wchar_t> *__cdecl ??0?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA__K_WAEBV?$allocator__W_1__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Count, __int16 _Ch, std::allocator<wchar_t> *_Al);
std::fpos<_Mbstatet> *__cdecl ??0?$fpos_U_Mbstatet___std__QEAA_U_Mbstatet___J_Z(std::fpos<_Mbstatet> *__hidden this, _Mbstatet _State, fpos_t _Fileposition);
std::fpos<_Mbstatet> *__cdecl ??0?$fpos_U_Mbstatet___std__QEAA__J_Z(std::fpos<_Mbstatet> *__hidden this, std::streamoff _Off);
std::initializer_list<char> *__cdecl ??0?$initializer_list_D_std__QEAA_PEBD0_Z(std::initializer_list<char> *__hidden this, char *_First_arg, char *_Last_arg);
std::initializer_list<char> *__cdecl ??0?$initializer_list_D_std__QEAA_XZ(std::initializer_list<char> *__hidden this);
std::initializer_list<int> *__cdecl ??0?$initializer_list_H_std__QEAA_PEBH0_Z(std::initializer_list<int> *__hidden this, int *_First_arg, int *_Last_arg);
std::initializer_list<int> *__cdecl ??0?$initializer_list_H_std__QEAA_XZ(std::initializer_list<int> *__hidden this);
std::initializer_list<std::pair<const int, int>> *__cdecl ??0?$initializer_list_U?$pair_$$CBHH_std___std__QEAA_PEBU?$pair_$$CBHH_1_0_Z(std::initializer_list<std::pair<const int, int>> *__hidden this, std::pair<const int, int> *_First_arg, std::pair<const int, int> *_Last_arg);
std::initializer_list<std::pair<const int, int>> *__cdecl ??0?$initializer_list_U?$pair_$$CBHH_std___std__QEAA_XZ(std::initializer_list<std::pair<const int, int>> *__hidden this);
std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__cdecl ??0?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEAA_PEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_0_Z(std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this, std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *_First_arg, std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Last_arg);
std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__cdecl ??0?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEAA_XZ(std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this);
std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__cdecl ??0?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEAA_PEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_0_Z(std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this, std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_First_arg, std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Last_arg);
std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__cdecl ??0?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEAA_XZ(std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this);
std::initializer_list<std::pair<const unsigned long long, unsigned long long>> *__cdecl ??0?$initializer_list_U?$pair_$$CB_K_K_std___std__QEAA_PEBU?$pair_$$CB_K_K_1_0_Z(std::initializer_list<std::pair<const unsigned long long, unsigned long long>> *__hidden this, std::pair<const unsigned long long, unsigned long long> *_First_arg, std::pair<const unsigned long long, unsigned long long> *_Last_arg);
std::initializer_list<std::pair<const unsigned long long, unsigned long long>> *__cdecl ??0?$initializer_list_U?$pair_$$CB_K_K_std___std__QEAA_XZ(std::initializer_list<std::pair<const unsigned long long, unsigned long long>> *__hidden this);
std::initializer_list<char16_t> *__cdecl ??0?$initializer_list__S_std__QEAA_PEB_S0_Z(std::initializer_list<char16_t> *__hidden this, __int16 *_First_arg, __int16 *_Last_arg);
std::initializer_list<char16_t> *__cdecl ??0?$initializer_list__S_std__QEAA_XZ(std::initializer_list<char16_t> *__hidden this);
std::initializer_list<char32_t> *__cdecl ??0?$initializer_list__U_std__QEAA_PEB_U0_Z(std::initializer_list<char32_t> *__hidden this, __int32 *_First_arg, __int32 *_Last_arg);
std::initializer_list<char32_t> *__cdecl ??0?$initializer_list__U_std__QEAA_XZ(std::initializer_list<char32_t> *__hidden this);
std::initializer_list<wchar_t> *__cdecl ??0?$initializer_list__W_std__QEAA_PEB_W0_Z(std::initializer_list<wchar_t> *__hidden this, __int16 *_First_arg, __int16 *_Last_arg);
std::initializer_list<wchar_t> *__cdecl ??0?$initializer_list__W_std__QEAA_XZ(std::initializer_list<wchar_t> *__hidden this);
janitor_t<_iobuf *> *__cdecl ??0?$janitor_t_PEAU_iobuf____QEAA_AEAPEAU_iobuf___Z(janitor_t<_iobuf *> *__hidden this, _iobuf **r);
janitor_t<linput_t *> *__cdecl ??0?$janitor_t_PEAVlinput_t____QEAA_AEAPEAVlinput_t___Z(janitor_t<linput_t *> *__hidden this, linput_t **r);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_$$QEAV01__Z(std::map<int, int> *__hidden this, std::map<int, int> *_Right);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_$$QEAV01_AEBV?$allocator_U?$pair_$$CBHH_std___1__Z(std::map<int, int> *__hidden this, std::map<int, int> *_Right, const std::map<int, int>::allocator_type *_Al);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_AEBU?$less_H_1__Z(std::map<int, int> *__hidden this, const std::map<int, int>::key_compare *_Pred);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_AEBU?$less_H_1_AEBV?$allocator_U?$pair_$$CBHH_std___1__Z(std::map<int, int> *__hidden this, const std::map<int, int>::key_compare *_Pred, const std::map<int, int>::allocator_type *_Al);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_AEBV01__Z(std::map<int, int> *__hidden this, const std::map<int, int> *_Right);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_AEBV01_AEBV?$allocator_U?$pair_$$CBHH_std___1__Z(std::map<int, int> *__hidden this, const std::map<int, int> *_Right, const std::map<int, int>::allocator_type *_Al);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_AEBV?$allocator_U?$pair_$$CBHH_std___1__Z(std::map<int, int> *__hidden this, const std::map<int, int>::allocator_type *_Al);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_V?$initializer_list_U?$pair_$$CBHH_std___1__Z(std::map<int, int> *__hidden this, std::initializer_list<std::pair<const int, int>> _Ilist);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_V?$initializer_list_U?$pair_$$CBHH_std___1_AEBU?$less_H_1__Z(std::map<int, int> *__hidden this, std::initializer_list<std::pair<const int, int>> _Ilist, const std::map<int, int>::key_compare *_Pred);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_V?$initializer_list_U?$pair_$$CBHH_std___1_AEBU?$less_H_1_AEBV?$allocator_U?$pair_$$CBHH_std___1__Z(std::map<int, int> *__hidden this, std::initializer_list<std::pair<const int, int>> _Ilist, const std::map<int, int>::key_compare *_Pred, const std::map<int, int>::allocator_type *_Al);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_V?$initializer_list_U?$pair_$$CBHH_std___1_AEBV?$allocator_U?$pair_$$CBHH_std___1__Z(std::map<int, int> *__hidden this, std::initializer_list<std::pair<const int, int>> _Ilist, const std::map<int, int>::allocator_type *_Al);
std::map<int, int> *__cdecl ??0?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAA_XZ(std::map<int, int> *__hidden this);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_$$QEAV01__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Right);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_$$QEAV01_AEBV?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Right, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::allocator_type *_Al);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_AEBU?$less_V?$_qstring_D___1__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::key_compare *_Pred);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_AEBU?$less_V?$_qstring_D___1_AEBV?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::key_compare *_Pred, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::allocator_type *_Al);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_AEBV01__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Right);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_AEBV01_AEBV?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Right, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::allocator_type *_Al);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_AEBV?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::allocator_type *_Al);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_V?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> _Ilist);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_V?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1_AEBU?$less_V?$_qstring_D___1__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> _Ilist, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::key_compare *_Pred);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_V?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1_AEBU?$less_V?$_qstring_D___1_AEBV?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> _Ilist, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::key_compare *_Pred, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::allocator_type *_Al);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_V?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1_AEBV?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> _Ilist, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::allocator_type *_Al);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAA_XZ(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_$$QEAV01__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Right);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_$$QEAV01_AEBV?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Right, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::allocator_type *_Al);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_AEBU?$less__K_1__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::key_compare *_Pred);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_AEBU?$less__K_1_AEBV?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::key_compare *_Pred, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::allocator_type *_Al);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_AEBV01__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Right);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_AEBV01_AEBV?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Right, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::allocator_type *_Al);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_AEBV?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::allocator_type *_Al);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_V?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> _Ilist);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_V?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1_AEBU?$less__K_1__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> _Ilist, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::key_compare *_Pred);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_V?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1_AEBU?$less__K_1_AEBV?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> _Ilist, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::key_compare *_Pred, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::allocator_type *_Al);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_V?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1_AEBV?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> _Ilist, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::allocator_type *_Al);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAA_XZ(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_$$QEAV01__Z(std::map<unsigned long long, unsigned long long> *__hidden this, std::map<unsigned long long, unsigned long long> *_Right);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_$$QEAV01_AEBV?$allocator_U?$pair_$$CB_K_K_std___1__Z(std::map<unsigned long long, unsigned long long> *__hidden this, std::map<unsigned long long, unsigned long long> *_Right, const std::map<unsigned long long, unsigned long long>::allocator_type *_Al);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_AEBU?$less__K_1__Z(std::map<unsigned long long, unsigned long long> *__hidden this, const std::map<unsigned long long, unsigned long long>::key_compare *_Pred);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_AEBU?$less__K_1_AEBV?$allocator_U?$pair_$$CB_K_K_std___1__Z(std::map<unsigned long long, unsigned long long> *__hidden this, const std::map<unsigned long long, unsigned long long>::key_compare *_Pred, const std::map<unsigned long long, unsigned long long>::allocator_type *_Al);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_AEBV01__Z(std::map<unsigned long long, unsigned long long> *__hidden this, const std::map<unsigned long long, unsigned long long> *_Right);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_AEBV01_AEBV?$allocator_U?$pair_$$CB_K_K_std___1__Z(std::map<unsigned long long, unsigned long long> *__hidden this, const std::map<unsigned long long, unsigned long long> *_Right, const std::map<unsigned long long, unsigned long long>::allocator_type *_Al);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_AEBV?$allocator_U?$pair_$$CB_K_K_std___1__Z(std::map<unsigned long long, unsigned long long> *__hidden this, const std::map<unsigned long long, unsigned long long>::allocator_type *_Al);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_V?$initializer_list_U?$pair_$$CB_K_K_std___1__Z(std::map<unsigned long long, unsigned long long> *__hidden this, std::initializer_list<std::pair<const unsigned long long, unsigned long long>> _Ilist);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_V?$initializer_list_U?$pair_$$CB_K_K_std___1_AEBU?$less__K_1__Z(std::map<unsigned long long, unsigned long long> *__hidden this, std::initializer_list<std::pair<const unsigned long long, unsigned long long>> _Ilist, const std::map<unsigned long long, unsigned long long>::key_compare *_Pred);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_V?$initializer_list_U?$pair_$$CB_K_K_std___1_AEBU?$less__K_1_AEBV?$allocator_U?$pair_$$CB_K_K_std___1__Z(std::map<unsigned long long, unsigned long long> *__hidden this, std::initializer_list<std::pair<const unsigned long long, unsigned long long>> _Ilist, const std::map<unsigned long long, unsigned long long>::key_compare *_Pred, const std::map<unsigned long long, unsigned long long>::allocator_type *_Al);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_V?$initializer_list_U?$pair_$$CB_K_K_std___1_AEBV?$allocator_U?$pair_$$CB_K_K_std___1__Z(std::map<unsigned long long, unsigned long long> *__hidden this, std::initializer_list<std::pair<const unsigned long long, unsigned long long>> _Ilist, const std::map<unsigned long long, unsigned long long>::allocator_type *_Al);
std::map<unsigned long long, unsigned long long> *__cdecl ??0?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAA_XZ(std::map<unsigned long long, unsigned long long> *__hidden this);
std::pair<const int, int> *__cdecl ??0?$pair_$$CBHH_std__QEAA_$$QEAU01__Z(std::pair<const int, int> *__hidden this, std::pair<const int, int> *);
std::pair<const int, int> *__cdecl ??0?$pair_$$CBHH_std__QEAA_AEBU01__Z(std::pair<const int, int> *__hidden this, const std::pair<const int, int> *);
std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__QEAA_$$QEAU01__Z(std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *);
std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??0?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__QEAA_AEBU01__Z(std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *);
std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__QEAA_$$QEAU01__Z(std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *);
std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??0?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__QEAA_AEBU01__Z(std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *);
std::pair<const unsigned long long, unsigned long long> *__cdecl ??0?$pair_$$CB_K_K_std__QEAA_$$QEAU01__Z(std::pair<const unsigned long long, unsigned long long> *__hidden this, std::pair<const unsigned long long, unsigned long long> *);
std::pair<const unsigned long long, unsigned long long> *__cdecl ??0?$pair_$$CB_K_K_std__QEAA_AEBU01__Z(std::pair<const unsigned long long, unsigned long long> *__hidden this, const std::pair<const unsigned long long, unsigned long long> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__cdecl ??0?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__V12__std__QEAA_$$QEAU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__cdecl ??0?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__V12__std__QEAA_AEBU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, const std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??0?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__V12__std__QEAA_$$QEAU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??0?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__V12__std__QEAA_AEBU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??0?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__V12__std__QEAA_$$QEAU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??0?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__V12__std__QEAA_AEBU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??0?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__V12__std__QEAA_$$QEAU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??0?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__V12__std__QEAA_AEBU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??0?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__V12__std__QEAA_$$QEAU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??0?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__V12__std__QEAA_AEBU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??0?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__V12__std__QEAA_$$QEAU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??0?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__V12__std__QEAA_AEBU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??0?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__V12__std__QEAA_$$QEAU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??0?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__V12__std__QEAA_AEBU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??0?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__V12__std__QEAA_$$QEAU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??0?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__V12__std__QEAA_AEBU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??0?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__V12__std__QEAA_$$QEAU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??0?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__V12__std__QEAA_AEBU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *);
qlist<ui_request_t *> *__cdecl ??0?$qlist_PEAVui_request_t____QEAA_AEBV0__Z(qlist<ui_request_t *> *__hidden this, const qlist<ui_request_t *> *x);
qlist<ui_request_t *> *__cdecl ??0?$qlist_PEAVui_request_t____QEAA_XZ(qlist<ui_request_t *> *__hidden this);
qrefcnt_t<extlang_t> *__cdecl ??0?$qrefcnt_t_Uextlang_t____QEAA_AEBV0__Z(qrefcnt_t<extlang_t> *__hidden this, const qrefcnt_t<extlang_t> *r);
qrefcnt_t<extlang_t> *__cdecl ??0?$qrefcnt_t_Uextlang_t____QEAA_PEAUextlang_t___Z(qrefcnt_t<extlang_t> *__hidden this, extlang_t *p);
qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__cdecl ??0?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________QEAA_AEBV0__Z(qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__hidden this, const qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *r);
qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__cdecl ??0?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________QEAA_PEAV?$qiterator_V?$qrefcnt_t_Vsource_file_t_______Z(qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__hidden this, qiterator<qrefcnt_t<source_file_t>> *p);
qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__cdecl ??0?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________QEAA_AEBV0__Z(qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__hidden this, const qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *r);
qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__cdecl ??0?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________QEAA_PEAV?$qiterator_V?$qrefcnt_t_Vsource_item_t_______Z(qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__hidden this, qiterator<qrefcnt_t<source_item_t>> *p);
qrefcnt_t<refcnted_regex_t> *__cdecl ??0?$qrefcnt_t_Vrefcnted_regex_t____QEAA_AEBV0__Z(qrefcnt_t<refcnted_regex_t> *__hidden this, const qrefcnt_t<refcnted_regex_t> *r);
qrefcnt_t<refcnted_regex_t> *__cdecl ??0?$qrefcnt_t_Vrefcnted_regex_t____QEAA_PEAVrefcnted_regex_t___Z(qrefcnt_t<refcnted_regex_t> *__hidden this, refcnted_regex_t *p);
qrefcnt_t<source_file_t> *__cdecl ??0?$qrefcnt_t_Vsource_file_t____QEAA_AEBV0__Z(qrefcnt_t<source_file_t> *__hidden this, const qrefcnt_t<source_file_t> *r);
qrefcnt_t<source_file_t> *__cdecl ??0?$qrefcnt_t_Vsource_file_t____QEAA_PEAVsource_file_t___Z(qrefcnt_t<source_file_t> *__hidden this, source_file_t *p);
qrefcnt_t<source_item_t> *__cdecl ??0?$qrefcnt_t_Vsource_item_t____QEAA_AEBV0__Z(qrefcnt_t<source_item_t> *__hidden this, const qrefcnt_t<source_item_t> *r);
qrefcnt_t<source_item_t> *__cdecl ??0?$qrefcnt_t_Vsource_item_t____QEAA_PEAVsource_item_t___Z(qrefcnt_t<source_item_t> *__hidden this, source_item_t *p);
qvector<char> *__cdecl ??0?$qvector_D__QEAA_$$QEAV0__Z(qvector<char> *__hidden this, qvector<char> *x);
qvector<char> *__cdecl ??0?$qvector_D__QEAA_AEBV0__Z(qvector<char> *__hidden this, const qvector<char> *x);
qvector<char> *__cdecl ??0?$qvector_D__QEAA_XZ(qvector<char> *__hidden this);
qvector<unsigned char> *__cdecl ??0?$qvector_E__QEAA_$$QEAV0__Z(qvector<unsigned char> *__hidden this, qvector<unsigned char> *x);
qvector<unsigned char> *__cdecl ??0?$qvector_E__QEAA_AEBV0__Z(qvector<unsigned char> *__hidden this, const qvector<unsigned char> *x);
qvector<unsigned char> *__cdecl ??0?$qvector_E__QEAA_XZ(qvector<unsigned char> *__hidden this);
qvector<int> *__cdecl ??0?$qvector_H__QEAA_$$QEAV0__Z(qvector<int> *__hidden this, qvector<int> *x);
qvector<int> *__cdecl ??0?$qvector_H__QEAA_AEBV0__Z(qvector<int> *__hidden this, const qvector<int> *x);
qvector<int> *__cdecl ??0?$qvector_H__QEAA_XZ(qvector<int> *__hidden this);
qvector<unsigned int> *__cdecl ??0?$qvector_I__QEAA_$$QEAV0__Z(qvector<unsigned int> *__hidden this, qvector<unsigned int> *x);
qvector<unsigned int> *__cdecl ??0?$qvector_I__QEAA_AEBV0__Z(qvector<unsigned int> *__hidden this, const qvector<unsigned int> *x);
qvector<unsigned int> *__cdecl ??0?$qvector_I__QEAA_XZ(qvector<unsigned int> *__hidden this);
qvector<long long (*)(syntax_highlight_style *, const char *)> *__cdecl ??0?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAA_$$QEAV0__Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, qvector<long long (*)(syntax_highlight_style *, const char *)> *x);
qvector<long long (*)(syntax_highlight_style *, const char *)> *__cdecl ??0?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAA_AEBV0__Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, const qvector<long long (*)(syntax_highlight_style *, const char *)> *x);
qvector<long long (*)(syntax_highlight_style *, const char *)> *__cdecl ??0?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAA_XZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__cdecl ??0?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAA_$$QEAV0__Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *x);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__cdecl ??0?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAA_AEBV0__Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *x);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__cdecl ??0?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAA_XZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
qvector<bpt_t *> *__cdecl ??0?$qvector_PEAUbpt_t____QEAA_$$QEAV0__Z(qvector<bpt_t *> *__hidden this, qvector<bpt_t *> *x);
qvector<bpt_t *> *__cdecl ??0?$qvector_PEAUbpt_t____QEAA_AEBV0__Z(qvector<bpt_t *> *__hidden this, const qvector<bpt_t *> *x);
qvector<bpt_t *> *__cdecl ??0?$qvector_PEAUbpt_t____QEAA_XZ(qvector<bpt_t *> *__hidden this);
qvector<extlang_t *> *__cdecl ??0?$qvector_PEAUextlang_t____QEAA_$$QEAV0__Z(qvector<extlang_t *> *__hidden this, qvector<extlang_t *> *x);
qvector<extlang_t *> *__cdecl ??0?$qvector_PEAUextlang_t____QEAA_AEBV0__Z(qvector<extlang_t *> *__hidden this, const qvector<extlang_t *> *x);
qvector<extlang_t *> *__cdecl ??0?$qvector_PEAUextlang_t____QEAA_XZ(qvector<extlang_t *> *__hidden this);
qvector<line_rendering_output_entry_t *> *__cdecl ??0?$qvector_PEAUline_rendering_output_entry_t____QEAA_$$QEAV0__Z(qvector<line_rendering_output_entry_t *> *__hidden this, qvector<line_rendering_output_entry_t *> *x);
qvector<line_rendering_output_entry_t *> *__cdecl ??0?$qvector_PEAUline_rendering_output_entry_t____QEAA_AEBV0__Z(qvector<line_rendering_output_entry_t *> *__hidden this, const qvector<line_rendering_output_entry_t *> *x);
qvector<line_rendering_output_entry_t *> *__cdecl ??0?$qvector_PEAUline_rendering_output_entry_t____QEAA_XZ(qvector<line_rendering_output_entry_t *> *__hidden this);
qvector<snapshot_t *> *__cdecl ??0?$qvector_PEAVsnapshot_t____QEAA_$$QEAV0__Z(qvector<snapshot_t *> *__hidden this, qvector<snapshot_t *> *x);
qvector<snapshot_t *> *__cdecl ??0?$qvector_PEAVsnapshot_t____QEAA_AEBV0__Z(qvector<snapshot_t *> *__hidden this, const qvector<snapshot_t *> *x);
qvector<snapshot_t *> *__cdecl ??0?$qvector_PEAVsnapshot_t____QEAA_XZ(qvector<snapshot_t *> *__hidden this);
qvector<const char *> *__cdecl ??0?$qvector_PEBD__QEAA_$$QEAV0__Z(qvector<const char *> *__hidden this, qvector<const char *> *x);
qvector<const char *> *__cdecl ??0?$qvector_PEBD__QEAA_AEBV0__Z(qvector<const char *> *__hidden this, const qvector<const char *> *x);
qvector<const char *> *__cdecl ??0?$qvector_PEBD__QEAA_XZ(qvector<const char *> *__hidden this);
qvector<const bpt_t *> *__cdecl ??0?$qvector_PEBUbpt_t____QEAA_$$QEAV0__Z(qvector<const bpt_t *> *__hidden this, qvector<const bpt_t *> *x);
qvector<const bpt_t *> *__cdecl ??0?$qvector_PEBUbpt_t____QEAA_AEBV0__Z(qvector<const bpt_t *> *__hidden this, const qvector<const bpt_t *> *x);
qvector<const bpt_t *> *__cdecl ??0?$qvector_PEBUbpt_t____QEAA_XZ(qvector<const bpt_t *> *__hidden this);
qvector<const rangeset_t *> *__cdecl ??0?$qvector_PEBVrangeset_t____QEAA_$$QEAV0__Z(qvector<const rangeset_t *> *__hidden this, qvector<const rangeset_t *> *x);
qvector<const rangeset_t *> *__cdecl ??0?$qvector_PEBVrangeset_t____QEAA_AEBV0__Z(qvector<const rangeset_t *> *__hidden this, const qvector<const rangeset_t *> *x);
qvector<const rangeset_t *> *__cdecl ??0?$qvector_PEBVrangeset_t____QEAA_XZ(qvector<const rangeset_t *> *__hidden this);
qvector<const twinline_t *> *__cdecl ??0?$qvector_PEBVtwinline_t____QEAA_$$QEAV0__Z(qvector<const twinline_t *> *__hidden this, qvector<const twinline_t *> *x);
qvector<const twinline_t *> *__cdecl ??0?$qvector_PEBVtwinline_t____QEAA_AEBV0__Z(qvector<const twinline_t *> *__hidden this, const qvector<const twinline_t *> *x);
qvector<const twinline_t *> *__cdecl ??0?$qvector_PEBVtwinline_t____QEAA_XZ(qvector<const twinline_t *> *__hidden this);
qvector<argpart_t> *__cdecl ??0?$qvector_Uargpart_t____QEAA_$$QEAV0__Z(qvector<argpart_t> *__hidden this, qvector<argpart_t> *x);
qvector<argpart_t> *__cdecl ??0?$qvector_Uargpart_t____QEAA_AEBV0__Z(qvector<argpart_t> *__hidden this, const qvector<argpart_t> *x);
qvector<argpart_t> *__cdecl ??0?$qvector_Uargpart_t____QEAA_XZ(qvector<argpart_t> *__hidden this);
qvector<bpt_t> *__cdecl ??0?$qvector_Ubpt_t____QEAA_$$QEAV0__Z(qvector<bpt_t> *__hidden this, qvector<bpt_t> *x);
qvector<bpt_t> *__cdecl ??0?$qvector_Ubpt_t____QEAA_AEBV0__Z(qvector<bpt_t> *__hidden this, const qvector<bpt_t> *x);
qvector<bpt_t> *__cdecl ??0?$qvector_Ubpt_t____QEAA_XZ(qvector<bpt_t> *__hidden this);
qvector<bptaddrs_t> *__cdecl ??0?$qvector_Ubptaddrs_t____QEAA_$$QEAV0__Z(qvector<bptaddrs_t> *__hidden this, qvector<bptaddrs_t> *x);
qvector<bptaddrs_t> *__cdecl ??0?$qvector_Ubptaddrs_t____QEAA_AEBV0__Z(qvector<bptaddrs_t> *__hidden this, const qvector<bptaddrs_t> *x);
qvector<bptaddrs_t> *__cdecl ??0?$qvector_Ubptaddrs_t____QEAA_XZ(qvector<bptaddrs_t> *__hidden this);
qvector<call_stack_info_t> *__cdecl ??0?$qvector_Ucall_stack_info_t____QEAA_$$QEAV0__Z(qvector<call_stack_info_t> *__hidden this, qvector<call_stack_info_t> *x);
qvector<call_stack_info_t> *__cdecl ??0?$qvector_Ucall_stack_info_t____QEAA_AEBV0__Z(qvector<call_stack_info_t> *__hidden this, const qvector<call_stack_info_t> *x);
qvector<call_stack_info_t> *__cdecl ??0?$qvector_Ucall_stack_info_t____QEAA_XZ(qvector<call_stack_info_t> *__hidden this);
qvector<catch_t> *__cdecl ??0?$qvector_Ucatch_t____QEAA_$$QEAV0__Z(qvector<catch_t> *__hidden this, qvector<catch_t> *x);
qvector<catch_t> *__cdecl ??0?$qvector_Ucatch_t____QEAA_AEBV0__Z(qvector<catch_t> *__hidden this, const qvector<catch_t> *x);
qvector<catch_t> *__cdecl ??0?$qvector_Ucatch_t____QEAA_XZ(qvector<catch_t> *__hidden this);
qvector<cfgopt_set_t> *__cdecl ??0?$qvector_Ucfgopt_set_t____QEAA_$$QEAV0__Z(qvector<cfgopt_set_t> *__hidden this, qvector<cfgopt_set_t> *x);
qvector<cfgopt_set_t> *__cdecl ??0?$qvector_Ucfgopt_set_t____QEAA_AEBV0__Z(qvector<cfgopt_set_t> *__hidden this, const qvector<cfgopt_set_t> *x);
qvector<cfgopt_set_t> *__cdecl ??0?$qvector_Ucfgopt_set_t____QEAA_XZ(qvector<cfgopt_set_t> *__hidden this);
qvector<channel_redir_t> *__cdecl ??0?$qvector_Uchannel_redir_t____QEAA_$$QEAV0__Z(qvector<channel_redir_t> *__hidden this, qvector<channel_redir_t> *x);
qvector<channel_redir_t> *__cdecl ??0?$qvector_Uchannel_redir_t____QEAA_AEBV0__Z(qvector<channel_redir_t> *__hidden this, const qvector<channel_redir_t> *x);
qvector<channel_redir_t> *__cdecl ??0?$qvector_Uchannel_redir_t____QEAA_XZ(qvector<channel_redir_t> *__hidden this);
qvector<cliopt_t> *__cdecl ??0?$qvector_Ucliopt_t____QEAA_$$QEAV0__Z(qvector<cliopt_t> *__hidden this, qvector<cliopt_t> *x);
qvector<cliopt_t> *__cdecl ??0?$qvector_Ucliopt_t____QEAA_AEBV0__Z(qvector<cliopt_t> *__hidden this, const qvector<cliopt_t> *x);
qvector<cliopt_t> *__cdecl ??0?$qvector_Ucliopt_t____QEAA_XZ(qvector<cliopt_t> *__hidden this);
qvector<compiled_binpat_t> *__cdecl ??0?$qvector_Ucompiled_binpat_t____QEAA_$$QEAV0__Z(qvector<compiled_binpat_t> *__hidden this, qvector<compiled_binpat_t> *x);
qvector<compiled_binpat_t> *__cdecl ??0?$qvector_Ucompiled_binpat_t____QEAA_AEBV0__Z(qvector<compiled_binpat_t> *__hidden this, const qvector<compiled_binpat_t> *x);
qvector<compiled_binpat_t> *__cdecl ??0?$qvector_Ucompiled_binpat_t____QEAA_XZ(qvector<compiled_binpat_t> *__hidden this);
qvector<debug_event_t> *__cdecl ??0?$qvector_Udebug_event_t____QEAA_$$QEAV0__Z(qvector<debug_event_t> *__hidden this, qvector<debug_event_t> *x);
qvector<debug_event_t> *__cdecl ??0?$qvector_Udebug_event_t____QEAA_AEBV0__Z(qvector<debug_event_t> *__hidden this, const qvector<debug_event_t> *x);
qvector<debug_event_t> *__cdecl ??0?$qvector_Udebug_event_t____QEAA_XZ(qvector<debug_event_t> *__hidden this);
qvector<direntry_t> *__cdecl ??0?$qvector_Udirentry_t____QEAA_$$QEAV0__Z(qvector<direntry_t> *__hidden this, qvector<direntry_t> *x);
qvector<direntry_t> *__cdecl ??0?$qvector_Udirentry_t____QEAA_AEBV0__Z(qvector<direntry_t> *__hidden this, const qvector<direntry_t> *x);
qvector<direntry_t> *__cdecl ??0?$qvector_Udirentry_t____QEAA_XZ(qvector<direntry_t> *__hidden this);
qvector<dirtree_cursor_t> *__cdecl ??0?$qvector_Udirtree_cursor_t____QEAA_$$QEAV0__Z(qvector<dirtree_cursor_t> *__hidden this, qvector<dirtree_cursor_t> *x);
qvector<dirtree_cursor_t> *__cdecl ??0?$qvector_Udirtree_cursor_t____QEAA_AEBV0__Z(qvector<dirtree_cursor_t> *__hidden this, const qvector<dirtree_cursor_t> *x);
qvector<dirtree_cursor_t> *__cdecl ??0?$qvector_Udirtree_cursor_t____QEAA_XZ(qvector<dirtree_cursor_t> *__hidden this);
qvector<ea_name_t> *__cdecl ??0?$qvector_Uea_name_t____QEAA_$$QEAV0__Z(qvector<ea_name_t> *__hidden this, qvector<ea_name_t> *x);
qvector<ea_name_t> *__cdecl ??0?$qvector_Uea_name_t____QEAA_AEBV0__Z(qvector<ea_name_t> *__hidden this, const qvector<ea_name_t> *x);
qvector<ea_name_t> *__cdecl ??0?$qvector_Uea_name_t____QEAA_XZ(qvector<ea_name_t> *__hidden this);
qvector<edge_t> *__cdecl ??0?$qvector_Uedge_t____QEAA_$$QEAV0__Z(qvector<edge_t> *__hidden this, qvector<edge_t> *x);
qvector<edge_t> *__cdecl ??0?$qvector_Uedge_t____QEAA_AEBV0__Z(qvector<edge_t> *__hidden this, const qvector<edge_t> *x);
qvector<edge_t> *__cdecl ??0?$qvector_Uedge_t____QEAA_XZ(qvector<edge_t> *__hidden this);
qvector<enum_member_t> *__cdecl ??0?$qvector_Uenum_member_t____QEAA_$$QEAV0__Z(qvector<enum_member_t> *__hidden this, qvector<enum_member_t> *x);
qvector<enum_member_t> *__cdecl ??0?$qvector_Uenum_member_t____QEAA_AEBV0__Z(qvector<enum_member_t> *__hidden this, const qvector<enum_member_t> *x);
qvector<enum_member_t> *__cdecl ??0?$qvector_Uenum_member_t____QEAA_XZ(qvector<enum_member_t> *__hidden this);
qvector<exception_info_t> *__cdecl ??0?$qvector_Uexception_info_t____QEAA_$$QEAV0__Z(qvector<exception_info_t> *__hidden this, qvector<exception_info_t> *x);
qvector<exception_info_t> *__cdecl ??0?$qvector_Uexception_info_t____QEAA_AEBV0__Z(qvector<exception_info_t> *__hidden this, const qvector<exception_info_t> *x);
qvector<exception_info_t> *__cdecl ??0?$qvector_Uexception_info_t____QEAA_XZ(qvector<exception_info_t> *__hidden this);
qvector<fixup_info_t> *__cdecl ??0?$qvector_Ufixup_info_t____QEAA_$$QEAV0__Z(qvector<fixup_info_t> *__hidden this, qvector<fixup_info_t> *x);
qvector<fixup_info_t> *__cdecl ??0?$qvector_Ufixup_info_t____QEAA_AEBV0__Z(qvector<fixup_info_t> *__hidden this, const qvector<fixup_info_t> *x);
qvector<fixup_info_t> *__cdecl ??0?$qvector_Ufixup_info_t____QEAA_XZ(qvector<fixup_info_t> *__hidden this);
qvector<funcarg_t> *__cdecl ??0?$qvector_Ufuncarg_t____QEAA_$$QEAV0__Z(qvector<funcarg_t> *__hidden this, qvector<funcarg_t> *x);
qvector<funcarg_t> *__cdecl ??0?$qvector_Ufuncarg_t____QEAA_AEBV0__Z(qvector<funcarg_t> *__hidden this, const qvector<funcarg_t> *x);
qvector<funcarg_t> *__cdecl ??0?$qvector_Ufuncarg_t____QEAA_XZ(qvector<funcarg_t> *__hidden this);
qvector<group_crinfo_t> *__cdecl ??0?$qvector_Ugroup_crinfo_t____QEAA_$$QEAV0__Z(qvector<group_crinfo_t> *__hidden this, qvector<group_crinfo_t> *x);
qvector<group_crinfo_t> *__cdecl ??0?$qvector_Ugroup_crinfo_t____QEAA_AEBV0__Z(qvector<group_crinfo_t> *__hidden this, const qvector<group_crinfo_t> *x);
qvector<group_crinfo_t> *__cdecl ??0?$qvector_Ugroup_crinfo_t____QEAA_XZ(qvector<group_crinfo_t> *__hidden this);
qvector<idc_global_t> *__cdecl ??0?$qvector_Uidc_global_t____QEAA_$$QEAV0__Z(qvector<idc_global_t> *__hidden this, qvector<idc_global_t> *x);
qvector<idc_global_t> *__cdecl ??0?$qvector_Uidc_global_t____QEAA_AEBV0__Z(qvector<idc_global_t> *__hidden this, const qvector<idc_global_t> *x);
qvector<idc_global_t> *__cdecl ??0?$qvector_Uidc_global_t____QEAA_XZ(qvector<idc_global_t> *__hidden this);
qvector<idp_desc_t> *__cdecl ??0?$qvector_Uidp_desc_t____QEAA_$$QEAV0__Z(qvector<idp_desc_t> *__hidden this, qvector<idp_desc_t> *x);
qvector<idp_desc_t> *__cdecl ??0?$qvector_Uidp_desc_t____QEAA_AEBV0__Z(qvector<idp_desc_t> *__hidden this, const qvector<idp_desc_t> *x);
qvector<idp_desc_t> *__cdecl ??0?$qvector_Uidp_desc_t____QEAA_XZ(qvector<idp_desc_t> *__hidden this);
qvector<idp_name_t> *__cdecl ??0?$qvector_Uidp_name_t____QEAA_$$QEAV0__Z(qvector<idp_name_t> *__hidden this, qvector<idp_name_t> *x);
qvector<idp_name_t> *__cdecl ??0?$qvector_Uidp_name_t____QEAA_AEBV0__Z(qvector<idp_name_t> *__hidden this, const qvector<idp_name_t> *x);
qvector<idp_name_t> *__cdecl ??0?$qvector_Uidp_name_t____QEAA_XZ(qvector<idp_name_t> *__hidden this);
qvector<ioport_bit_t> *__cdecl ??0?$qvector_Uioport_bit_t____QEAA_$$QEAV0__Z(qvector<ioport_bit_t> *__hidden this, qvector<ioport_bit_t> *x);
qvector<ioport_bit_t> *__cdecl ??0?$qvector_Uioport_bit_t____QEAA_AEBV0__Z(qvector<ioport_bit_t> *__hidden this, const qvector<ioport_bit_t> *x);
qvector<ioport_bit_t> *__cdecl ??0?$qvector_Uioport_bit_t____QEAA_XZ(qvector<ioport_bit_t> *__hidden this);
qvector<ioport_t> *__cdecl ??0?$qvector_Uioport_t____QEAA_$$QEAV0__Z(qvector<ioport_t> *__hidden this, qvector<ioport_t> *x);
qvector<ioport_t> *__cdecl ??0?$qvector_Uioport_t____QEAA_AEBV0__Z(qvector<ioport_t> *__hidden this, const qvector<ioport_t> *x);
qvector<ioport_t> *__cdecl ??0?$qvector_Uioport_t____QEAA_XZ(qvector<ioport_t> *__hidden this);
qvector<jvalue_t> *__cdecl ??0?$qvector_Ujvalue_t____QEAA_$$QEAV0__Z(qvector<jvalue_t> *__hidden this, qvector<jvalue_t> *x);
qvector<jvalue_t> *__cdecl ??0?$qvector_Ujvalue_t____QEAA_AEBV0__Z(qvector<jvalue_t> *__hidden this, const qvector<jvalue_t> *x);
qvector<jvalue_t> *__cdecl ??0?$qvector_Ujvalue_t____QEAA_XZ(qvector<jvalue_t> *__hidden this);
qvector<ida_syntax_highlighter_t::keywords_style_t> *__cdecl ??0?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAA_$$QEAV0__Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, qvector<ida_syntax_highlighter_t::keywords_style_t> *x);
qvector<ida_syntax_highlighter_t::keywords_style_t> *__cdecl ??0?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAA_AEBV0__Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, const qvector<ida_syntax_highlighter_t::keywords_style_t> *x);
qvector<ida_syntax_highlighter_t::keywords_style_t> *__cdecl ??0?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAA_XZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
qvector<kvp_t> *__cdecl ??0?$qvector_Ukvp_t____QEAA_$$QEAV0__Z(qvector<kvp_t> *__hidden this, qvector<kvp_t> *x);
qvector<kvp_t> *__cdecl ??0?$qvector_Ukvp_t____QEAA_AEBV0__Z(qvector<kvp_t> *__hidden this, const qvector<kvp_t> *x);
qvector<kvp_t> *__cdecl ??0?$qvector_Ukvp_t____QEAA_XZ(qvector<kvp_t> *__hidden this);
qvector<lochist_entry_t> *__cdecl ??0?$qvector_Ulochist_entry_t____QEAA_$$QEAV0__Z(qvector<lochist_entry_t> *__hidden this, qvector<lochist_entry_t> *x);
qvector<lochist_entry_t> *__cdecl ??0?$qvector_Ulochist_entry_t____QEAA_AEBV0__Z(qvector<lochist_entry_t> *__hidden this, const qvector<lochist_entry_t> *x);
qvector<lochist_entry_t> *__cdecl ??0?$qvector_Ulochist_entry_t____QEAA_XZ(qvector<lochist_entry_t> *__hidden this);
qvector<lowcnd_t> *__cdecl ??0?$qvector_Ulowcnd_t____QEAA_$$QEAV0__Z(qvector<lowcnd_t> *__hidden this, qvector<lowcnd_t> *x);
qvector<lowcnd_t> *__cdecl ??0?$qvector_Ulowcnd_t____QEAA_AEBV0__Z(qvector<lowcnd_t> *__hidden this, const qvector<lowcnd_t> *x);
qvector<lowcnd_t> *__cdecl ??0?$qvector_Ulowcnd_t____QEAA_XZ(qvector<lowcnd_t> *__hidden this);
qvector<memory_info_t> *__cdecl ??0?$qvector_Umemory_info_t____QEAA_$$QEAV0__Z(qvector<memory_info_t> *__hidden this, qvector<memory_info_t> *x);
qvector<memory_info_t> *__cdecl ??0?$qvector_Umemory_info_t____QEAA_AEBV0__Z(qvector<memory_info_t> *__hidden this, const qvector<memory_info_t> *x);
qvector<memory_info_t> *__cdecl ??0?$qvector_Umemory_info_t____QEAA_XZ(qvector<memory_info_t> *__hidden this);
qvector<memreg_info_t> *__cdecl ??0?$qvector_Umemreg_info_t____QEAA_$$QEAV0__Z(qvector<memreg_info_t> *__hidden this, qvector<memreg_info_t> *x);
qvector<memreg_info_t> *__cdecl ??0?$qvector_Umemreg_info_t____QEAA_AEBV0__Z(qvector<memreg_info_t> *__hidden this, const qvector<memreg_info_t> *x);
qvector<memreg_info_t> *__cdecl ??0?$qvector_Umemreg_info_t____QEAA_XZ(qvector<memreg_info_t> *__hidden this);
qvector<modinfo_t> *__cdecl ??0?$qvector_Umodinfo_t____QEAA_$$QEAV0__Z(qvector<modinfo_t> *__hidden this, qvector<modinfo_t> *x);
qvector<modinfo_t> *__cdecl ??0?$qvector_Umodinfo_t____QEAA_AEBV0__Z(qvector<modinfo_t> *__hidden this, const qvector<modinfo_t> *x);
qvector<modinfo_t> *__cdecl ??0?$qvector_Umodinfo_t____QEAA_XZ(qvector<modinfo_t> *__hidden this);
qvector<movbpt_info_t> *__cdecl ??0?$qvector_Umovbpt_info_t____QEAA_$$QEAV0__Z(qvector<movbpt_info_t> *__hidden this, qvector<movbpt_info_t> *x);
qvector<movbpt_info_t> *__cdecl ??0?$qvector_Umovbpt_info_t____QEAA_AEBV0__Z(qvector<movbpt_info_t> *__hidden this, const qvector<movbpt_info_t> *x);
qvector<movbpt_info_t> *__cdecl ??0?$qvector_Umovbpt_info_t____QEAA_XZ(qvector<movbpt_info_t> *__hidden this);
qvector<ida_syntax_highlighter_t::multicmt_t> *__cdecl ??0?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAA_$$QEAV0__Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, qvector<ida_syntax_highlighter_t::multicmt_t> *x);
qvector<ida_syntax_highlighter_t::multicmt_t> *__cdecl ??0?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAA_AEBV0__Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, const qvector<ida_syntax_highlighter_t::multicmt_t> *x);
qvector<ida_syntax_highlighter_t::multicmt_t> *__cdecl ??0?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAA_XZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__cdecl ??0?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAA_$$QEAV0__Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *x);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__cdecl ??0?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAA_AEBV0__Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *x);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__cdecl ??0?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAA_XZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
qvector<point_t> *__cdecl ??0?$qvector_Upoint_t____QEAA_$$QEAV0__Z(qvector<point_t> *__hidden this, qvector<point_t> *x);
qvector<point_t> *__cdecl ??0?$qvector_Upoint_t____QEAA_AEBV0__Z(qvector<point_t> *__hidden this, const qvector<point_t> *x);
qvector<point_t> *__cdecl ??0?$qvector_Upoint_t____QEAA_XZ(qvector<point_t> *__hidden this);
qvector<process_info_t> *__cdecl ??0?$qvector_Uprocess_info_t____QEAA_$$QEAV0__Z(qvector<process_info_t> *__hidden this, qvector<process_info_t> *x);
qvector<process_info_t> *__cdecl ??0?$qvector_Uprocess_info_t____QEAA_AEBV0__Z(qvector<process_info_t> *__hidden this, const qvector<process_info_t> *x);
qvector<process_info_t> *__cdecl ??0?$qvector_Uprocess_info_t____QEAA_XZ(qvector<process_info_t> *__hidden this);
qvector<qbasic_block_t> *__cdecl ??0?$qvector_Uqbasic_block_t____QEAA_$$QEAV0__Z(qvector<qbasic_block_t> *__hidden this, qvector<qbasic_block_t> *x);
qvector<qbasic_block_t> *__cdecl ??0?$qvector_Uqbasic_block_t____QEAA_AEBV0__Z(qvector<qbasic_block_t> *__hidden this, const qvector<qbasic_block_t> *x);
qvector<qbasic_block_t> *__cdecl ??0?$qvector_Uqbasic_block_t____QEAA_XZ(qvector<qbasic_block_t> *__hidden this);
qvector<range_t> *__cdecl ??0?$qvector_Urange_t____QEAA_$$QEAV0__Z(qvector<range_t> *__hidden this, qvector<range_t> *x);
qvector<range_t> *__cdecl ??0?$qvector_Urange_t____QEAA_AEBV0__Z(qvector<range_t> *__hidden this, const qvector<range_t> *x);
qvector<range_t> *__cdecl ??0?$qvector_Urange_t____QEAA_XZ(qvector<range_t> *__hidden this);
qvector<rect_t> *__cdecl ??0?$qvector_Urect_t____QEAA_$$QEAV0__Z(qvector<rect_t> *__hidden this, qvector<rect_t> *x);
qvector<rect_t> *__cdecl ??0?$qvector_Urect_t____QEAA_AEBV0__Z(qvector<rect_t> *__hidden this, const qvector<rect_t> *x);
qvector<rect_t> *__cdecl ??0?$qvector_Urect_t____QEAA_XZ(qvector<rect_t> *__hidden this);
qvector<refinfo_desc_t> *__cdecl ??0?$qvector_Urefinfo_desc_t____QEAA_$$QEAV0__Z(qvector<refinfo_desc_t> *__hidden this, qvector<refinfo_desc_t> *x);
qvector<refinfo_desc_t> *__cdecl ??0?$qvector_Urefinfo_desc_t____QEAA_AEBV0__Z(qvector<refinfo_desc_t> *__hidden this, const qvector<refinfo_desc_t> *x);
qvector<refinfo_desc_t> *__cdecl ??0?$qvector_Urefinfo_desc_t____QEAA_XZ(qvector<refinfo_desc_t> *__hidden this);
qvector<reg_access_t> *__cdecl ??0?$qvector_Ureg_access_t____QEAA_$$QEAV0__Z(qvector<reg_access_t> *__hidden this, qvector<reg_access_t> *x);
qvector<reg_access_t> *__cdecl ??0?$qvector_Ureg_access_t____QEAA_AEBV0__Z(qvector<reg_access_t> *__hidden this, const qvector<reg_access_t> *x);
qvector<reg_access_t> *__cdecl ??0?$qvector_Ureg_access_t____QEAA_XZ(qvector<reg_access_t> *__hidden this);
qvector<reg_info_t> *__cdecl ??0?$qvector_Ureg_info_t____QEAA_$$QEAV0__Z(qvector<reg_info_t> *__hidden this, qvector<reg_info_t> *x);
qvector<reg_info_t> *__cdecl ??0?$qvector_Ureg_info_t____QEAA_AEBV0__Z(qvector<reg_info_t> *__hidden this, const qvector<reg_info_t> *x);
qvector<reg_info_t> *__cdecl ??0?$qvector_Ureg_info_t____QEAA_XZ(qvector<reg_info_t> *__hidden this);
qvector<register_info_t> *__cdecl ??0?$qvector_Uregister_info_t____QEAA_$$QEAV0__Z(qvector<register_info_t> *__hidden this, qvector<register_info_t> *x);
qvector<register_info_t> *__cdecl ??0?$qvector_Uregister_info_t____QEAA_AEBV0__Z(qvector<register_info_t> *__hidden this, const qvector<register_info_t> *x);
qvector<register_info_t> *__cdecl ??0?$qvector_Uregister_info_t____QEAA_XZ(qvector<register_info_t> *__hidden this);
qvector<regobj_t> *__cdecl ??0?$qvector_Uregobj_t____QEAA_$$QEAV0__Z(qvector<regobj_t> *__hidden this, qvector<regobj_t> *x);
qvector<regobj_t> *__cdecl ??0?$qvector_Uregobj_t____QEAA_AEBV0__Z(qvector<regobj_t> *__hidden this, const qvector<regobj_t> *x);
qvector<regobj_t> *__cdecl ??0?$qvector_Uregobj_t____QEAA_XZ(qvector<regobj_t> *__hidden this);
qvector<regval_t> *__cdecl ??0?$qvector_Uregval_t____QEAA_$$QEAV0__Z(qvector<regval_t> *__hidden this, qvector<regval_t> *x);
qvector<regval_t> *__cdecl ??0?$qvector_Uregval_t____QEAA_AEBV0__Z(qvector<regval_t> *__hidden this, const qvector<regval_t> *x);
qvector<regval_t> *__cdecl ??0?$qvector_Uregval_t____QEAA_XZ(qvector<regval_t> *__hidden this);
qvector<row_info_t> *__cdecl ??0?$qvector_Urow_info_t____QEAA_$$QEAV0__Z(qvector<row_info_t> *__hidden this, qvector<row_info_t> *x);
qvector<row_info_t> *__cdecl ??0?$qvector_Urow_info_t____QEAA_AEBV0__Z(qvector<row_info_t> *__hidden this, const qvector<row_info_t> *x);
qvector<row_info_t> *__cdecl ??0?$qvector_Urow_info_t____QEAA_XZ(qvector<row_info_t> *__hidden this);
qvector<scattered_segm_t> *__cdecl ??0?$qvector_Uscattered_segm_t____QEAA_$$QEAV0__Z(qvector<scattered_segm_t> *__hidden this, qvector<scattered_segm_t> *x);
qvector<scattered_segm_t> *__cdecl ??0?$qvector_Uscattered_segm_t____QEAA_AEBV0__Z(qvector<scattered_segm_t> *__hidden this, const qvector<scattered_segm_t> *x);
qvector<scattered_segm_t> *__cdecl ??0?$qvector_Uscattered_segm_t____QEAA_XZ(qvector<scattered_segm_t> *__hidden this);
qvector<segm_move_info_t> *__cdecl ??0?$qvector_Usegm_move_info_t____QEAA_$$QEAV0__Z(qvector<segm_move_info_t> *__hidden this, qvector<segm_move_info_t> *x);
qvector<segm_move_info_t> *__cdecl ??0?$qvector_Usegm_move_info_t____QEAA_AEBV0__Z(qvector<segm_move_info_t> *__hidden this, const qvector<segm_move_info_t> *x);
qvector<segm_move_info_t> *__cdecl ??0?$qvector_Usegm_move_info_t____QEAA_XZ(qvector<segm_move_info_t> *__hidden this);
qvector<selection_item_t> *__cdecl ??0?$qvector_Uselection_item_t____QEAA_$$QEAV0__Z(qvector<selection_item_t> *__hidden this, qvector<selection_item_t> *x);
qvector<selection_item_t> *__cdecl ??0?$qvector_Uselection_item_t____QEAA_AEBV0__Z(qvector<selection_item_t> *__hidden this, const qvector<selection_item_t> *x);
qvector<selection_item_t> *__cdecl ??0?$qvector_Uselection_item_t____QEAA_XZ(qvector<selection_item_t> *__hidden this);
qvector<simd_info_t> *__cdecl ??0?$qvector_Usimd_info_t____QEAA_$$QEAV0__Z(qvector<simd_info_t> *__hidden this, qvector<simd_info_t> *x);
qvector<simd_info_t> *__cdecl ??0?$qvector_Usimd_info_t____QEAA_AEBV0__Z(qvector<simd_info_t> *__hidden this, const qvector<simd_info_t> *x);
qvector<simd_info_t> *__cdecl ??0?$qvector_Usimd_info_t____QEAA_XZ(qvector<simd_info_t> *__hidden this);
qvector<simpleline_t> *__cdecl ??0?$qvector_Usimpleline_t____QEAA_$$QEAV0__Z(qvector<simpleline_t> *__hidden this, qvector<simpleline_t> *x);
qvector<simpleline_t> *__cdecl ??0?$qvector_Usimpleline_t____QEAA_AEBV0__Z(qvector<simpleline_t> *__hidden this, const qvector<simpleline_t> *x);
qvector<simpleline_t> *__cdecl ??0?$qvector_Usimpleline_t____QEAA_XZ(qvector<simpleline_t> *__hidden this);
qvector<stkpnt_t> *__cdecl ??0?$qvector_Ustkpnt_t____QEAA_$$QEAV0__Z(qvector<stkpnt_t> *__hidden this, qvector<stkpnt_t> *x);
qvector<stkpnt_t> *__cdecl ??0?$qvector_Ustkpnt_t____QEAA_AEBV0__Z(qvector<stkpnt_t> *__hidden this, const qvector<stkpnt_t> *x);
qvector<stkpnt_t> *__cdecl ??0?$qvector_Ustkpnt_t____QEAA_XZ(qvector<stkpnt_t> *__hidden this);
qvector<tev_info_reg_t> *__cdecl ??0?$qvector_Utev_info_reg_t____QEAA_$$QEAV0__Z(qvector<tev_info_reg_t> *__hidden this, qvector<tev_info_reg_t> *x);
qvector<tev_info_reg_t> *__cdecl ??0?$qvector_Utev_info_reg_t____QEAA_AEBV0__Z(qvector<tev_info_reg_t> *__hidden this, const qvector<tev_info_reg_t> *x);
qvector<tev_info_reg_t> *__cdecl ??0?$qvector_Utev_info_reg_t____QEAA_XZ(qvector<tev_info_reg_t> *__hidden this);
qvector<tev_info_t> *__cdecl ??0?$qvector_Utev_info_t____QEAA_$$QEAV0__Z(qvector<tev_info_t> *__hidden this, qvector<tev_info_t> *x);
qvector<tev_info_t> *__cdecl ??0?$qvector_Utev_info_t____QEAA_AEBV0__Z(qvector<tev_info_t> *__hidden this, const qvector<tev_info_t> *x);
qvector<tev_info_t> *__cdecl ??0?$qvector_Utev_info_t____QEAA_XZ(qvector<tev_info_t> *__hidden this);
qvector<tev_reg_value_t> *__cdecl ??0?$qvector_Utev_reg_value_t____QEAA_$$QEAV0__Z(qvector<tev_reg_value_t> *__hidden this, qvector<tev_reg_value_t> *x);
qvector<tev_reg_value_t> *__cdecl ??0?$qvector_Utev_reg_value_t____QEAA_AEBV0__Z(qvector<tev_reg_value_t> *__hidden this, const qvector<tev_reg_value_t> *x);
qvector<tev_reg_value_t> *__cdecl ??0?$qvector_Utev_reg_value_t____QEAA_XZ(qvector<tev_reg_value_t> *__hidden this);
qvector<thread_name_t> *__cdecl ??0?$qvector_Uthread_name_t____QEAA_$$QEAV0__Z(qvector<thread_name_t> *__hidden this, qvector<thread_name_t> *x);
qvector<thread_name_t> *__cdecl ??0?$qvector_Uthread_name_t____QEAA_AEBV0__Z(qvector<thread_name_t> *__hidden this, const qvector<thread_name_t> *x);
qvector<thread_name_t> *__cdecl ??0?$qvector_Uthread_name_t____QEAA_XZ(qvector<thread_name_t> *__hidden this);
qvector<token_t> *__cdecl ??0?$qvector_Utoken_t____QEAA_$$QEAV0__Z(qvector<token_t> *__hidden this, qvector<token_t> *x);
qvector<token_t> *__cdecl ??0?$qvector_Utoken_t____QEAA_AEBV0__Z(qvector<token_t> *__hidden this, const qvector<token_t> *x);
qvector<token_t> *__cdecl ??0?$qvector_Utoken_t____QEAA_XZ(qvector<token_t> *__hidden this);
qvector<type_attr_t> *__cdecl ??0?$qvector_Utype_attr_t____QEAA_$$QEAV0__Z(qvector<type_attr_t> *__hidden this, qvector<type_attr_t> *x);
qvector<type_attr_t> *__cdecl ??0?$qvector_Utype_attr_t____QEAA_AEBV0__Z(qvector<type_attr_t> *__hidden this, const qvector<type_attr_t> *x);
qvector<type_attr_t> *__cdecl ??0?$qvector_Utype_attr_t____QEAA_XZ(qvector<type_attr_t> *__hidden this);
qvector<udt_member_t> *__cdecl ??0?$qvector_Uudt_member_t____QEAA_$$QEAV0__Z(qvector<udt_member_t> *__hidden this, qvector<udt_member_t> *x);
qvector<udt_member_t> *__cdecl ??0?$qvector_Uudt_member_t____QEAA_AEBV0__Z(qvector<udt_member_t> *__hidden this, const qvector<udt_member_t> *x);
qvector<udt_member_t> *__cdecl ??0?$qvector_Uudt_member_t____QEAA_XZ(qvector<udt_member_t> *__hidden this);
qvector<update_bpt_info_t> *__cdecl ??0?$qvector_Uupdate_bpt_info_t____QEAA_$$QEAV0__Z(qvector<update_bpt_info_t> *__hidden this, qvector<update_bpt_info_t> *x);
qvector<update_bpt_info_t> *__cdecl ??0?$qvector_Uupdate_bpt_info_t____QEAA_AEBV0__Z(qvector<update_bpt_info_t> *__hidden this, const qvector<update_bpt_info_t> *x);
qvector<update_bpt_info_t> *__cdecl ??0?$qvector_Uupdate_bpt_info_t____QEAA_XZ(qvector<update_bpt_info_t> *__hidden this);
qvector<xreflist_entry_t> *__cdecl ??0?$qvector_Uxreflist_entry_t____QEAA_$$QEAV0__Z(qvector<xreflist_entry_t> *__hidden this, qvector<xreflist_entry_t> *x);
qvector<xreflist_entry_t> *__cdecl ??0?$qvector_Uxreflist_entry_t____QEAA_AEBV0__Z(qvector<xreflist_entry_t> *__hidden this, const qvector<xreflist_entry_t> *x);
qvector<xreflist_entry_t> *__cdecl ??0?$qvector_Uxreflist_entry_t____QEAA_XZ(qvector<xreflist_entry_t> *__hidden this);
qvector<_qstring<char>> *__cdecl ??0?$qvector_V?$_qstring_D____QEAA_$$QEAV0__Z(qvector<_qstring<char>> *__hidden this, qvector<_qstring<char>> *x);
qvector<_qstring<char>> *__cdecl ??0?$qvector_V?$_qstring_D____QEAA_AEBV0__Z(qvector<_qstring<char>> *__hidden this, const qvector<_qstring<char>> *x);
qvector<_qstring<char>> *__cdecl ??0?$qvector_V?$_qstring_D____QEAA_XZ(qvector<_qstring<char>> *__hidden this);
qvector<_qstring<unsigned char>> *__cdecl ??0?$qvector_V?$_qstring_E____QEAA_$$QEAV0__Z(qvector<_qstring<unsigned char>> *__hidden this, qvector<_qstring<unsigned char>> *x);
qvector<_qstring<unsigned char>> *__cdecl ??0?$qvector_V?$_qstring_E____QEAA_AEBV0__Z(qvector<_qstring<unsigned char>> *__hidden this, const qvector<_qstring<unsigned char>> *x);
qvector<_qstring<unsigned char>> *__cdecl ??0?$qvector_V?$_qstring_E____QEAA_XZ(qvector<_qstring<unsigned char>> *__hidden this);
qvector<_qstring<wchar_t>> *__cdecl ??0?$qvector_V?$_qstring__W____QEAA_$$QEAV0__Z(qvector<_qstring<wchar_t>> *__hidden this, qvector<_qstring<wchar_t>> *x);
qvector<_qstring<wchar_t>> *__cdecl ??0?$qvector_V?$_qstring__W____QEAA_AEBV0__Z(qvector<_qstring<wchar_t>> *__hidden this, const qvector<_qstring<wchar_t>> *x);
qvector<_qstring<wchar_t>> *__cdecl ??0?$qvector_V?$_qstring__W____QEAA_XZ(qvector<_qstring<wchar_t>> *__hidden this);
qvector<qrefcnt_t<source_item_t>> *__cdecl ??0?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAA_$$QEAV0__Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qvector<qrefcnt_t<source_item_t>> *x);
qvector<qrefcnt_t<source_item_t>> *__cdecl ??0?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAA_AEBV0__Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, const qvector<qrefcnt_t<source_item_t>> *x);
qvector<qrefcnt_t<source_item_t>> *__cdecl ??0?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAA_XZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
qvector<qvector<int>> *__cdecl ??0?$qvector_V?$qvector_H____QEAA_$$QEAV0__Z(qvector<qvector<int>> *__hidden this, qvector<qvector<int>> *x);
qvector<qvector<int>> *__cdecl ??0?$qvector_V?$qvector_H____QEAA_AEBV0__Z(qvector<qvector<int>> *__hidden this, const qvector<qvector<int>> *x);
qvector<qvector<int>> *__cdecl ??0?$qvector_V?$qvector_H____QEAA_XZ(qvector<qvector<int>> *__hidden this);
qvector<qvector<const char *>> *__cdecl ??0?$qvector_V?$qvector_PEBD____QEAA_$$QEAV0__Z(qvector<qvector<const char *>> *__hidden this, qvector<qvector<const char *>> *x);
qvector<qvector<const char *>> *__cdecl ??0?$qvector_V?$qvector_PEBD____QEAA_AEBV0__Z(qvector<qvector<const char *>> *__hidden this, const qvector<qvector<const char *>> *x);
qvector<qvector<const char *>> *__cdecl ??0?$qvector_V?$qvector_PEBD____QEAA_XZ(qvector<qvector<const char *>> *__hidden this);
qvector<qvector<const twinline_t *>> *__cdecl ??0?$qvector_V?$qvector_PEBVtwinline_t______QEAA_$$QEAV0__Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<qvector<const twinline_t *>> *x);
qvector<qvector<const twinline_t *>> *__cdecl ??0?$qvector_V?$qvector_PEBVtwinline_t______QEAA_AEBV0__Z(qvector<qvector<const twinline_t *>> *__hidden this, const qvector<qvector<const twinline_t *>> *x);
qvector<qvector<const twinline_t *>> *__cdecl ??0?$qvector_V?$qvector_PEBVtwinline_t______QEAA_XZ(qvector<qvector<const twinline_t *>> *__hidden this);
qvector<qvector<long long>> *__cdecl ??0?$qvector_V?$qvector__J____QEAA_$$QEAV0__Z(qvector<qvector<long long>> *__hidden this, qvector<qvector<long long>> *x);
qvector<qvector<long long>> *__cdecl ??0?$qvector_V?$qvector__J____QEAA_AEBV0__Z(qvector<qvector<long long>> *__hidden this, const qvector<qvector<long long>> *x);
qvector<qvector<long long>> *__cdecl ??0?$qvector_V?$qvector__J____QEAA_XZ(qvector<qvector<long long>> *__hidden this);
qvector<argloc_t> *__cdecl ??0?$qvector_Vargloc_t____QEAA_$$QEAV0__Z(qvector<argloc_t> *__hidden this, qvector<argloc_t> *x);
qvector<argloc_t> *__cdecl ??0?$qvector_Vargloc_t____QEAA_AEBV0__Z(qvector<argloc_t> *__hidden this, const qvector<argloc_t> *x);
qvector<argloc_t> *__cdecl ??0?$qvector_Vargloc_t____QEAA_XZ(qvector<argloc_t> *__hidden this);
qvector<intmap_t> *__cdecl ??0?$qvector_Vintmap_t____QEAA_$$QEAV0__Z(qvector<intmap_t> *__hidden this, qvector<intmap_t> *x);
qvector<intmap_t> *__cdecl ??0?$qvector_Vintmap_t____QEAA_AEBV0__Z(qvector<intmap_t> *__hidden this, const qvector<intmap_t> *x);
qvector<intmap_t> *__cdecl ??0?$qvector_Vintmap_t____QEAA_XZ(qvector<intmap_t> *__hidden this);
qvector<node_set_t> *__cdecl ??0?$qvector_Vnode_set_t____QEAA_$$QEAV0__Z(qvector<node_set_t> *__hidden this, qvector<node_set_t> *x);
qvector<node_set_t> *__cdecl ??0?$qvector_Vnode_set_t____QEAA_AEBV0__Z(qvector<node_set_t> *__hidden this, const qvector<node_set_t> *x);
qvector<node_set_t> *__cdecl ??0?$qvector_Vnode_set_t____QEAA_XZ(qvector<node_set_t> *__hidden this);
qvector<op_t> *__cdecl ??0?$qvector_Vop_t____QEAA_$$QEAV0__Z(qvector<op_t> *__hidden this, qvector<op_t> *x);
qvector<op_t> *__cdecl ??0?$qvector_Vop_t____QEAA_AEBV0__Z(qvector<op_t> *__hidden this, const qvector<op_t> *x);
qvector<op_t> *__cdecl ??0?$qvector_Vop_t____QEAA_XZ(qvector<op_t> *__hidden this);
qvector<rangeset_t> *__cdecl ??0?$qvector_Vrangeset_t____QEAA_$$QEAV0__Z(qvector<rangeset_t> *__hidden this, qvector<rangeset_t> *x);
qvector<rangeset_t> *__cdecl ??0?$qvector_Vrangeset_t____QEAA_AEBV0__Z(qvector<rangeset_t> *__hidden this, const qvector<rangeset_t> *x);
qvector<rangeset_t> *__cdecl ??0?$qvector_Vrangeset_t____QEAA_XZ(qvector<rangeset_t> *__hidden this);
qvector<sync_source_t> *__cdecl ??0?$qvector_Vsync_source_t____QEAA_$$QEAV0__Z(qvector<sync_source_t> *__hidden this, qvector<sync_source_t> *x);
qvector<sync_source_t> *__cdecl ??0?$qvector_Vsync_source_t____QEAA_AEBV0__Z(qvector<sync_source_t> *__hidden this, const qvector<sync_source_t> *x);
qvector<sync_source_t> *__cdecl ??0?$qvector_Vsync_source_t____QEAA_XZ(qvector<sync_source_t> *__hidden this);
qvector<tinfo_t> *__cdecl ??0?$qvector_Vtinfo_t____QEAA_$$QEAV0__Z(qvector<tinfo_t> *__hidden this, qvector<tinfo_t> *x);
qvector<tinfo_t> *__cdecl ??0?$qvector_Vtinfo_t____QEAA_AEBV0__Z(qvector<tinfo_t> *__hidden this, const qvector<tinfo_t> *x);
qvector<tinfo_t> *__cdecl ??0?$qvector_Vtinfo_t____QEAA_XZ(qvector<tinfo_t> *__hidden this);
qvector<tryblk_t> *__cdecl ??0?$qvector_Vtryblk_t____QEAA_$$QEAV0__Z(qvector<tryblk_t> *__hidden this, qvector<tryblk_t> *x);
qvector<tryblk_t> *__cdecl ??0?$qvector_Vtryblk_t____QEAA_AEBV0__Z(qvector<tryblk_t> *__hidden this, const qvector<tryblk_t> *x);
qvector<tryblk_t> *__cdecl ??0?$qvector_Vtryblk_t____QEAA_XZ(qvector<tryblk_t> *__hidden this);
qvector<twinline_t> *__cdecl ??0?$qvector_Vtwinline_t____QEAA_$$QEAV0__Z(qvector<twinline_t> *__hidden this, qvector<twinline_t> *x);
qvector<twinline_t> *__cdecl ??0?$qvector_Vtwinline_t____QEAA_AEBV0__Z(qvector<twinline_t> *__hidden this, const qvector<twinline_t> *x);
qvector<twinline_t> *__cdecl ??0?$qvector_Vtwinline_t____QEAA_XZ(qvector<twinline_t> *__hidden this);
qvector<valstr_t> *__cdecl ??0?$qvector_Vvalstr_t____QEAA_$$QEAV0__Z(qvector<valstr_t> *__hidden this, qvector<valstr_t> *x);
qvector<valstr_t> *__cdecl ??0?$qvector_Vvalstr_t____QEAA_AEBV0__Z(qvector<valstr_t> *__hidden this, const qvector<valstr_t> *x);
qvector<valstr_t> *__cdecl ??0?$qvector_Vvalstr_t____QEAA_XZ(qvector<valstr_t> *__hidden this);
qvector<movbpt_code_t> *__cdecl ??0?$qvector_W4movbpt_code_t____QEAA_$$QEAV0__Z(qvector<movbpt_code_t> *__hidden this, qvector<movbpt_code_t> *x);
qvector<movbpt_code_t> *__cdecl ??0?$qvector_W4movbpt_code_t____QEAA_AEBV0__Z(qvector<movbpt_code_t> *__hidden this, const qvector<movbpt_code_t> *x);
qvector<movbpt_code_t> *__cdecl ??0?$qvector_W4movbpt_code_t____QEAA_XZ(qvector<movbpt_code_t> *__hidden this);
qvector<long long> *__cdecl ??0?$qvector__J__QEAA_$$QEAV0__Z(qvector<long long> *__hidden this, qvector<long long> *x);
qvector<long long> *__cdecl ??0?$qvector__J__QEAA_AEBV0__Z(qvector<long long> *__hidden this, const qvector<long long> *x);
qvector<long long> *__cdecl ??0?$qvector__J__QEAA_XZ(qvector<long long> *__hidden this);
qvector<unsigned long long> *__cdecl ??0?$qvector__K__QEAA_$$QEAV0__Z(qvector<unsigned long long> *__hidden this, qvector<unsigned long long> *x);
qvector<unsigned long long> *__cdecl ??0?$qvector__K__QEAA_AEBV0__Z(qvector<unsigned long long> *__hidden this, const qvector<unsigned long long> *x);
qvector<unsigned long long> *__cdecl ??0?$qvector__K__QEAA_XZ(qvector<unsigned long long> *__hidden this);
qvector<bool> *__cdecl ??0?$qvector__N__QEAA_$$QEAV0__Z(qvector<bool> *__hidden this, qvector<bool> *x);
qvector<bool> *__cdecl ??0?$qvector__N__QEAA_AEBV0__Z(qvector<bool> *__hidden this, const qvector<bool> *x);
qvector<bool> *__cdecl ??0?$qvector__N__QEAA_XZ(qvector<bool> *__hidden this);
qvector<wchar_t> *__cdecl ??0?$qvector__W__QEAA_$$QEAV0__Z(qvector<wchar_t> *__hidden this, qvector<wchar_t> *x);
qvector<wchar_t> *__cdecl ??0?$qvector__W__QEAA_AEBV0__Z(qvector<wchar_t> *__hidden this, const qvector<wchar_t> *x);
qvector<wchar_t> *__cdecl ??0?$qvector__W__QEAA_XZ(qvector<wchar_t> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??0?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAA_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___1__Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> _Right);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??0?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAA_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___1__Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> _Right);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAA_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___1__Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> _Right);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAA_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___1__Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> _Right);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??0?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAA_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___1__Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, std::_String_iterator<std::_String_val<std::_Simple_types<char>>> _Right);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??0?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAA_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___1__Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> _Right);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAA_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___1__Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> _Right);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAA_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___1__Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> _Right);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??0?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEAA_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___1__Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> _Right);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAA_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___1__Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> _Right);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAA_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___1__Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> _Right);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAA_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___1__Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> _Right);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAA_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___1__Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> _Right);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAA_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___1__Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> _Right);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAA_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___1__Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> _Right);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAA_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___1__Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> _Right);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAA_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___1__Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> _Right);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??0?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAA_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_$$QEAV01__Z(std::set<int> *__hidden this, std::set<int> *_Right);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_$$QEAV01_AEBV?$allocator_H_1__Z(std::set<int> *__hidden this, std::set<int> *_Right, const std::set<int>::allocator_type *_Al);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_AEBU?$less_H_1__Z(std::set<int> *__hidden this, const std::set<int>::key_compare *_Pred);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_AEBU?$less_H_1_AEBV?$allocator_H_1__Z(std::set<int> *__hidden this, const std::set<int>::key_compare *_Pred, const std::set<int>::allocator_type *_Al);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_AEBV01__Z(std::set<int> *__hidden this, const std::set<int> *_Right);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_AEBV01_AEBV?$allocator_H_1__Z(std::set<int> *__hidden this, const std::set<int> *_Right, const std::set<int>::allocator_type *_Al);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_AEBV?$allocator_H_1__Z(std::set<int> *__hidden this, const std::set<int>::allocator_type *_Al);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_V?$initializer_list_H_1__Z(std::set<int> *__hidden this, std::initializer_list<int> _Ilist);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_V?$initializer_list_H_1_AEBU?$less_H_1__Z(std::set<int> *__hidden this, std::initializer_list<int> _Ilist, const std::set<int>::key_compare *_Pred);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_V?$initializer_list_H_1_AEBU?$less_H_1_AEBV?$allocator_H_1__Z(std::set<int> *__hidden this, std::initializer_list<int> _Ilist, const std::set<int>::key_compare *_Pred, const std::set<int>::allocator_type *_Al);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_V?$initializer_list_H_1_AEBV?$allocator_H_1__Z(std::set<int> *__hidden this, std::initializer_list<int> _Ilist, const std::set<int>::allocator_type *_Al);
std::set<int> *__cdecl ??0?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAA_XZ(std::set<int> *__hidden this);
std::tuple<> *__cdecl ??0?$tuple_$$V_std__QEAA_AEBV01__Z(std::tuple<> *__hidden this, const std::tuple<> *);
std::tuple<> *__cdecl ??0?$tuple_$$V_std__QEAA_XZ(std::tuple<> *__hidden this);
TPointDouble *__cdecl ??0TPointDouble__QEAA_AEBUpoint_t___Z(TPointDouble *__hidden this, const point_t *r);
TPointDouble *__cdecl ??0TPointDouble__QEAA_NN_Z(TPointDouble *__hidden this, double a, double b);
TPointDouble *__cdecl ??0TPointDouble__QEAA_XZ(TPointDouble *__hidden this);
std::_Alloc_exact_args_t *__cdecl ??0_Alloc_exact_args_t_std__QEAA_XZ(std::_Alloc_exact_args_t *__hidden this);
std::_Alloc_unpack_tuple_t *__cdecl ??0_Alloc_unpack_tuple_t_std__QEAA_XZ(std::_Alloc_unpack_tuple_t *__hidden this);
std::_Basic_container_proxy_ptr12 *__cdecl ??0_Basic_container_proxy_ptr12_std__IEAA_$$QEAU01__Z(std::_Basic_container_proxy_ptr12 *__hidden this, std::_Basic_container_proxy_ptr12 *);
std::_Basic_container_proxy_ptr12 *__cdecl ??0_Basic_container_proxy_ptr12_std__IEAA_AEBU01__Z(std::_Basic_container_proxy_ptr12 *__hidden this, const std::_Basic_container_proxy_ptr12 *);
std::_Basic_container_proxy_ptr12 *__cdecl ??0_Basic_container_proxy_ptr12_std__IEAA_XZ(std::_Basic_container_proxy_ptr12 *__hidden this);
std::_Container_base12 *__cdecl ??0_Container_base12_std__QEAA_AEBU01__Z(std::_Container_base12 *__hidden this, const std::_Container_base12 *);
std::_Container_base12 *__cdecl ??0_Container_base12_std__QEAA_XZ(std::_Container_base12 *__hidden this);
std::_Container_proxy *__cdecl ??0_Container_proxy_std__QEAA_PEAU_Container_base12_1__Z(std::_Container_proxy *__hidden this, std::_Container_base12 *_Mycont_);
std::_Container_proxy *__cdecl ??0_Container_proxy_std__QEAA_XZ(std::_Container_proxy *__hidden this);
std::_Exact_args_t *__cdecl ??0_Exact_args_t_std__QEAA_XZ(std::_Exact_args_t *__hidden this);
std::_Fake_proxy_ptr_impl *__cdecl ??0_Fake_proxy_ptr_impl_std__QEAA_AEBU01__Z(std::_Fake_proxy_ptr_impl *__hidden this, const std::_Fake_proxy_ptr_impl *);
std::_Fake_proxy_ptr_impl *__cdecl ??0_Fake_proxy_ptr_impl_std__QEAA_AEBU_Fake_allocator_1_AEBU_Container_base0_1__Z(std::_Fake_proxy_ptr_impl *__hidden this, const std::_Fake_allocator *, const std::_Container_base0 *);
std::_Fake_proxy_ptr_impl *__cdecl ??0_Fake_proxy_ptr_impl_std__QEAA_AEBU_Fake_allocator_1_U_Leave_proxy_unbound_1__Z(std::_Fake_proxy_ptr_impl *__hidden this, const std::_Fake_allocator *, std::_Leave_proxy_unbound);
std::_Init_locks *__cdecl ??0_Init_locks_std__QEAA_XZ(std::_Init_locks *__hidden this);
std::_Iterator_base12 *__cdecl ??0_Iterator_base12_std__QEAA_AEBU01__Z(std::_Iterator_base12 *__hidden this, const std::_Iterator_base12 *_Right);
std::_Iterator_base12 *__cdecl ??0_Iterator_base12_std__QEAA_XZ(std::_Iterator_base12 *__hidden this);
std::_Leave_proxy_unbound *__cdecl ??0_Leave_proxy_unbound_std__QEAA_XZ(std::_Leave_proxy_unbound *__hidden this);
std::_Lockit *__cdecl ??0_Lockit_std__QEAA_AEBV01__Z(std::_Lockit *__hidden this, const std::_Lockit *);
std::_Lockit *__cdecl ??0_Lockit_std__QEAA_H_Z(std::_Lockit *__hidden this, int);
std::_Lockit *__cdecl ??0_Lockit_std__QEAA_XZ(std::_Lockit *__hidden this);
std::_Move_allocator_tag *__cdecl ??0_Move_allocator_tag_std__QEAA_XZ(std::_Move_allocator_tag *__hidden this);
std::_Nontrivial_dummy_type *__cdecl ??0_Nontrivial_dummy_type_std__QEAA_XZ(std::_Nontrivial_dummy_type *__hidden this);
std::_One_then_variadic_args_t *__cdecl ??0_One_then_variadic_args_t_std__QEAA_XZ(std::_One_then_variadic_args_t *__hidden this);
std::_String_constructor_concat_tag *__cdecl ??0_String_constructor_concat_tag_std__QEAA_XZ(std::_String_constructor_concat_tag *__hidden this);
std::_String_constructor_rvalue_allocator_tag *__cdecl ??0_String_constructor_rvalue_allocator_tag_std__QEAA_XZ(std::_String_constructor_rvalue_allocator_tag *__hidden this);
std::_Unpack_tuple_t *__cdecl ??0_Unpack_tuple_t_std__QEAA_XZ(std::_Unpack_tuple_t *__hidden this);
std::_Unused_parameter *__cdecl ??0_Unused_parameter_std__QEAA_XZ(std::_Unused_parameter *__hidden this);
std::_Zero_then_variadic_args_t *__cdecl ??0_Zero_then_variadic_args_t_std__QEAA_XZ(std::_Zero_then_variadic_args_t *__hidden this);
abstract_graph_t *__cdecl ??0abstract_graph_t__QEAA_XZ(abstract_graph_t *__hidden this);
action_ctx_base_cur_sel_t *__cdecl ??0action_ctx_base_cur_sel_t__QEAA_XZ(action_ctx_base_cur_sel_t *__hidden this);
action_ctx_base_t *__cdecl ??0action_ctx_base_t__QEAA_XZ(action_ctx_base_t *__hidden this);
action_handler_t *__cdecl ??0action_handler_t__QEAA_H_Z(action_handler_t *__hidden this, int _f);
addon_info_t *__cdecl ??0addon_info_t__QEAA_XZ(addon_info_t *__hidden this);
std::allocator_arg_t *__cdecl ??0allocator_arg_t_std__QEAA_XZ(std::allocator_arg_t *__hidden this);
argloc_t *__cdecl ??0argloc_t__QEAA_AEBV0__Z(argloc_t *__hidden this, const argloc_t *r);
argloc_t *__cdecl ??0argloc_t__QEAA_XZ(argloc_t *__hidden this);
argpart_t *__cdecl ??0argpart_t__QEAA_AEBVargloc_t___Z(argpart_t *__hidden this, const argloc_t *a);
argpart_t *__cdecl ??0argpart_t__QEAA_XZ(argpart_t *__hidden this);
array_type_data_t *__cdecl ??0array_type_data_t__QEAA__K0_Z(array_type_data_t *__hidden this, size_t b, size_t n);
std::bad_alloc *__cdecl ??0bad_alloc_std__AEAA_QEBD_Z(std::bad_alloc *__hidden this, const char *const _Message);
std::bad_alloc *__cdecl ??0bad_alloc_std__QEAA_XZ(std::bad_alloc *__hidden this);
std::bad_array_new_length *__cdecl ??0bad_array_new_length_std__QEAA_XZ(std::bad_array_new_length *__hidden this);
std::bad_exception *__cdecl ??0bad_exception_std__QEAA_XZ(std::bad_exception *__hidden this);
bitfield_type_data_t *__cdecl ??0bitfield_type_data_t__QEAA_EE_N_Z(bitfield_type_data_t *__hidden this, uchar _nbytes, uchar _width, bool _is_unsigned);
bitrange_t *__cdecl ??0bitrange_t__QEAA_GG_Z(bitrange_t *__hidden this, uint16 bit_ofs, uint16 size_in_bits);
bookmarks_t *__cdecl ??0bookmarks_t__AEAA_XZ(bookmarks_t *__hidden this);
bpt_location_t *__cdecl ??0bpt_location_t__QEAA_XZ(bpt_location_t *__hidden this);
bpt_t *__cdecl ??0bpt_t__QEAA_XZ(bpt_t *__hidden this);
bpt_visitor_t *__cdecl ??0bpt_visitor_t__QEAA_XZ(bpt_visitor_t *__hidden this);
bptaddr_t *__cdecl ??0bptaddr_t__QEAA_XZ(bptaddr_t *__hidden this);
bytevec_t *__cdecl ??0bytevec_t__QEAA_PEBX_K_Z(bytevec_t *__hidden this, const void *buf, size_t sz);
bytevec_t *__cdecl ??0bytevec_t__QEAA_XZ(bytevec_t *__hidden this);
callregs_t *__cdecl ??0callregs_t__QEAA_E_Z(callregs_t *__hidden this, cm_t cc);
callregs_t *__cdecl ??0callregs_t__QEAA_XZ(callregs_t *__hidden this);
cancellable_graph_t *__cdecl ??0cancellable_graph_t__QEAA_XZ(cancellable_graph_t *__hidden this);
cast_t *__cdecl ??0cast_t__QEAA_XZ(cast_t *__hidden this);
catch_t *__cdecl ??0catch_t__QEAA_XZ(catch_t *__hidden this);
chooser_t::cbret_t *__cdecl ??0cbret_t_chooser_t__QEAA_XZ(chooser_t::cbret_t *__hidden this);
chooser_t::cbret_t *__cdecl ??0cbret_t_chooser_t__QEAA__JW4cbres_t_chooser_base_t___Z(chooser_t::cbret_t *__hidden this, ssize_t idx_, chooser_base_t::cbres_t changed_);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDP6APEBDPEAVlexer_t__AEBUtoken_t__2_Z_Z(cfgopt_t *__hidden this, const char *_n, cfgopt_handler_t *_p);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDP6APEBDPEAVlexer_t__AEBUtoken_t__2_J3_Z33_Z(cfgopt_t *__hidden this, const char *_n, cfgopt_handler2_t *_p, int64 _p1, int64 _p2);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDP6APEBDPEAVlexer_t__AEBUtoken_t__2_J3PEAX_Z33_Z(cfgopt_t *__hidden this, const char *_n, cfgopt_handler3_t *_p, int64 _p1, int64 _p2);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAD_Z(cfgopt_t *__hidden this, const char *_n, char *_p);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEADDD_Z(cfgopt_t *__hidden this, const char *_n, char *_p, char _min, char _max);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAD_K_N_Z(cfgopt_t *__hidden this, const char *_n, char *_p, size_t _sz, bool _long);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAE_Z(cfgopt_t *__hidden this, const char *_n, uchar *_p);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAEE_Z(cfgopt_t *__hidden this, const char *_n, uchar *_p, uchar _flags);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAEEE_Z(cfgopt_t *__hidden this, const char *_n, uchar *_p, uchar _min, uchar _max);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAF_Z(cfgopt_t *__hidden this, const char *_n, __int16 *_p);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAFFF_Z(cfgopt_t *__hidden this, const char *_n, __int16 *_p, __int16 _min, __int16 _max);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAG_Z(cfgopt_t *__hidden this, const char *_n, ushort *_p);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAGG_Z(cfgopt_t *__hidden this, const char *_n, ushort *_p, ushort _flags);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAGGG_Z(cfgopt_t *__hidden this, const char *_n, ushort *_p, ushort _min, ushort _max);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAH_Z(cfgopt_t *__hidden this, const char *_n, int *_p);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAHHH_Z(cfgopt_t *__hidden this, const char *_n, int *_p, int _min, int _max);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAI_Z(cfgopt_t *__hidden this, const char *_n, uint *_p);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAII_Z(cfgopt_t *__hidden this, const char *_n, uint32 *_p, uint32 _flags);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAIII_Z(cfgopt_t *__hidden this, const char *_n, uint *_p, uint _min, uint _max);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEAV?$_qstring_D___N_Z(cfgopt_t *__hidden this, const char *_n, qstring *_p, bool _long);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEA_J_Z(cfgopt_t *__hidden this, const char *_n, int64 *_p);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEA_J_J2_Z(cfgopt_t *__hidden this, const char *_n, int64 *_p, int64 _min, int64 _max);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEA_K_Z(cfgopt_t *__hidden this, const char *_n, uint64 *_p);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEA_K_K2_Z(cfgopt_t *__hidden this, const char *_n, uint64 *_p, uint64 _min, uint64 _max);
cfgopt_t *__cdecl ??0cfgopt_t__QEAA_PEBDPEA_N_N_Z(cfgopt_t *__hidden this, const char *_n, bool *_p, bool _flags);
chooser_base_t *__cdecl ??0chooser_base_t__QEAA_IHPEBHPEBQEBDPEBD_Z(chooser_base_t *__hidden this, uint32 flags_, int columns_, const int *widths_, const char *const *header_, const char *title_);
chooser_item_attrs_t *__cdecl ??0chooser_item_attrs_t__QEAA_XZ(chooser_item_attrs_t *__hidden this);
chooser_multi_t *__cdecl ??0chooser_multi_t__QEAA_IHPEBHPEBQEBDPEBD_Z(chooser_multi_t *__hidden this, uint32 flags_, int columns_, const int *widths_, const char *const *header_, const char *title_);
chooser_t *__cdecl ??0chooser_t__QEAA_IHPEBHPEBQEBDPEBD_Z(chooser_t *__hidden this, uint32 flags_, int columns_, const int *widths_, const char *const *header_, const char *title_);
cliopts_t *__cdecl ??0cliopts_t__QEAA_P6AHPEBDZZ_Z(cliopts_t *__hidden this, cliopts_t::usage_printer_t *_printer);
compiled_binpat_t *__cdecl ??0compiled_binpat_t__QEAA_XZ(compiled_binpat_t *__hidden this);
custom_viewer_handlers_t *__cdecl ??0custom_viewer_handlers_t__QEAA_P6A_NPEAVTWidget__HHPEAX_ZP6AX01_ZP6AX0HPEAUview_mouse_event_t__1_ZP6A_N0H1_Z633P6AH01_ZP6AX0PEAUlochist_entry_t__1_ZP6AH0PEBVplace_t__PEBV4_1_ZP6AX0PEBU3_PEBU3_AEBVlocchange_md_t__1_ZP6AH0PEBU3_AEBV5_1_Z_Z(custom_viewer_handlers_t *__hidden this, custom_viewer_keydown_t *_keyboard, custom_viewer_popup_t *_popup, custom_viewer_mouse_moved_t *_mouse_moved, custom_viewer_click_t *_click, custom_viewer_dblclick_t *_dblclick, custom_viewer_curpos_t *_curpos, custom_viewer_close_t *_close, custom_viewer_help_t *_help, custom_viewer_adjust_place_t *_adjust_place, custom_viewer_get_place_xcoord_t *_get_place_xcoord, custom_viewer_location_changed_t *_location_changed, custom_viewer_can_navigate_t *_can_navigate);
dbg_info_t *__cdecl ??0dbg_info_t__QEAA_PEAUplugin_info_t__PEAUdebugger_t___Z(dbg_info_t *__hidden this, plugin_info_t *_pi, debugger_t *_dbg);
debapp_attrs_t *__cdecl ??0debapp_attrs_t__QEAA_XZ(debapp_attrs_t *__hidden this);
debug_event_t *__cdecl ??0debug_event_t__QEAA_AEBU0__Z(debug_event_t *__hidden this, const debug_event_t *r);
debug_event_t *__cdecl ??0debug_event_t__QEAA_XZ(debug_event_t *__hidden this);
direntry_t *__cdecl ??0direntry_t__QEAA__K_N_Z(direntry_t *__hidden this, uval_t i, bool d);
dirspec_t *__cdecl ??0dirspec_t__QEAA_PEBDI_Z(dirspec_t *__hidden this, const char *nm, uint32 f);
dirtree_cursor_t *__cdecl ??0dirtree_cursor_t__QEAA__K0_Z(dirtree_cursor_t *__hidden this, diridx_t _parent, size_t _rank);
dirtree_t *__cdecl ??0dirtree_t__QEAA_PEAUdirspec_t___Z(dirtree_t *__hidden this, dirspec_t *ds);
ea_name_t *__cdecl ??0ea_name_t__QEAA_XZ(ea_name_t *__hidden this);
ea_name_t *__cdecl ??0ea_name_t__QEAA__KAEBV?$_qstring_D___Z(ea_name_t *__hidden this, ea_t _ea, const qstring *_name);
edge_info_t *__cdecl ??0edge_info_t__QEAA_XZ(edge_info_t *__hidden this);
edge_infos_wrapper_t *__cdecl ??0edge_infos_wrapper_t__QEAA_AEBU0__Z(edge_infos_wrapper_t *__hidden this, const edge_infos_wrapper_t *other);
edge_infos_wrapper_t *__cdecl ??0edge_infos_wrapper_t__QEAA_XZ(edge_infos_wrapper_t *__hidden this);
edge_layout_point_t *__cdecl ??0edge_layout_point_t__QEAA_AEBU0__Z(edge_layout_point_t *__hidden this, const edge_layout_point_t *r);
edge_layout_point_t *__cdecl ??0edge_layout_point_t__QEAA_AEBUedge_t__H_Z(edge_layout_point_t *__hidden this, const edge_t *_e, int _pidx);
edge_layout_point_t *__cdecl ??0edge_layout_point_t__QEAA_XZ(edge_layout_point_t *__hidden this);
edge_t *__cdecl ??0edge_t__QEAA_HH_Z(edge_t *__hidden this, int x, int y);
edge_t *__cdecl ??0edge_t__QEAA_XZ(edge_t *__hidden this);
enum_type_data_t *__cdecl ??0enum_type_data_t__QEAA_E_Z(enum_type_data_t *__hidden this, bte_t _bte);
enumplace_t *__cdecl ??0enumplace_t__QEAA_XZ(enumplace_t *__hidden this);
enumplace_t *__cdecl ??0enumplace_t__QEAA__K00EH_Z(enumplace_t *__hidden this, size_t i, bmask_t m, uval_t v, uchar s, int ln);
eval_ctx_t *__cdecl ??0eval_ctx_t__QEAA__K_Z(eval_ctx_t *__hidden this, ea_t _ea);
std::exception *__cdecl ??0exception_std__QEAA_AEBV01__Z(std::exception *__hidden this, const std::exception *_Other);
std::exception *__cdecl ??0exception_std__QEAA_QEBD_Z(std::exception *__hidden this, const char *const _Message);
std::exception *__cdecl ??0exception_std__QEAA_QEBDH_Z(std::exception *__hidden this, const char *const _Message, int);
std::exception *__cdecl ??0exception_std__QEAA_XZ(std::exception *__hidden this);
exception_info_t *__cdecl ??0exception_info_t__QEAA_IIPEBD0_Z(exception_info_t *__hidden this, uint _code, uint32 _flags, const char *_name, const char *_desc);
exception_info_t *__cdecl ??0exception_info_t__QEAA_XZ(exception_info_t *__hidden this);
std::exception_ptr *__cdecl ??0exception_ptr_std__QEAA_$$T_Z(std::exception_ptr *__hidden this, std::nullptr_t);
std::exception_ptr *__cdecl ??0exception_ptr_std__QEAA_AEBV01__Z(std::exception_ptr *__hidden this, const std::exception_ptr *_Rhs);
std::exception_ptr *__cdecl ??0exception_ptr_std__QEAA_XZ(std::exception_ptr *__hidden this);
exec_request_t *__cdecl ??0exec_request_t__QEAA_XZ(exec_request_t *__hidden this);
fixup_data_t *__cdecl ??0fixup_data_t__QEAA_GI_Z(fixup_data_t *__hidden this, fixup_type_t type_, uint32 flags_);
fixup_data_t *__cdecl ??0fixup_data_t__QEAA_XZ(fixup_data_t *__hidden this);
format_data_info_t *__cdecl ??0format_data_info_t__QEAA_XZ(format_data_info_t *__hidden this);
func_item_iterator_t *__cdecl ??0func_item_iterator_t__QEAA_PEAVfunc_t___K_Z(func_item_iterator_t *__hidden this, func_t *pfn, ea_t _ea);
func_item_iterator_t *__cdecl ??0func_item_iterator_t__QEAA_XZ(func_item_iterator_t *__hidden this);
func_parent_iterator_t *__cdecl ??0func_parent_iterator_t__QEAA_PEAVfunc_t___Z(func_parent_iterator_t *__hidden this, func_t *_fnt);
func_parent_iterator_t *__cdecl ??0func_parent_iterator_t__QEAA_XZ(func_parent_iterator_t *__hidden this);
func_t *__cdecl ??0func_t__QEAA__K0I_Z(func_t *__hidden this, ea_t start, ea_t end, flags_t f);
func_tail_iterator_t *__cdecl ??0func_tail_iterator_t__QEAA_PEAVfunc_t___K_Z(func_tail_iterator_t *__hidden this, func_t *_pfn, ea_t ea);
func_tail_iterator_t *__cdecl ??0func_tail_iterator_t__QEAA_XZ(func_tail_iterator_t *__hidden this);
getname_info_t *__cdecl ??0getname_info_t__QEAA_XZ(getname_info_t *__hidden this);
graph_location_info_t *__cdecl ??0graph_location_info_t__QEAA_XZ(graph_location_info_t *__hidden this);
hexplace_t *__cdecl ??0hexplace_t__QEAA__KF_Z(hexplace_t *__hidden this, ea_t _ea, __int16 ln);
ida_lowertype_helper_t *__cdecl ??0ida_lowertype_helper_t__QEAA_AEBVtinfo_t___KH_Z(ida_lowertype_helper_t *__hidden this, const tinfo_t *_tif, ea_t _ea, int _pb);
ida_syntax_highlighter_t *__cdecl ??0ida_syntax_highlighter_t__QEAA_XZ(ida_syntax_highlighter_t *__hidden this);
idadll_t *__cdecl ??0idadll_t__QEAA_XZ(idadll_t *__hidden this);
idaplace_t *__cdecl ??0idaplace_t__QEAA_XZ(idaplace_t *__hidden this);
idaplace_t *__cdecl ??0idaplace_t__QEAA__KH_Z(idaplace_t *__hidden this, ea_t x, int ln);
idc_global_t *__cdecl ??0idc_global_t__QEAA_PEBD_Z(idc_global_t *__hidden this, const char *n);
idc_global_t *__cdecl ??0idc_global_t__QEAA_XZ(idc_global_t *__hidden this);
idc_value_t *__cdecl ??0idc_value_t__QEAA_AEBV0__Z(idc_value_t *__hidden this, const idc_value_t *r);
idc_value_t *__cdecl ??0idc_value_t__QEAA_AEBV?$_qstring_D___Z(idc_value_t *__hidden this, const qstring *_str);
idc_value_t *__cdecl ??0idc_value_t__QEAA_PEBD_Z(idc_value_t *__hidden this, const char *_str);
idc_value_t *__cdecl ??0idc_value_t__QEAA__J_Z(idc_value_t *__hidden this, sval_t n);
idd_opinfo_t *__cdecl ??0idd_opinfo_t__QEAA_XZ(idd_opinfo_t *__hidden this);
idp_desc_t *__cdecl ??0idp_desc_t__QEAA_XZ(idp_desc_t *__hidden this);
idp_name_t *__cdecl ??0idp_name_t__QEAA_XZ(idp_name_t *__hidden this);
input_event_t *__cdecl ??0input_event_t__QEAA_XZ(input_event_t *__hidden this);
insn_t *__cdecl ??0insn_t__QEAA_XZ(insn_t *__hidden this);
int128 *__cdecl ??0int128__QEAA_AEBVuint128___Z(int128 *__hidden this, const uint128 *x);
int128 *__cdecl ??0int128__QEAA_H_Z(int128 *__hidden this, int x);
int128 *__cdecl ??0int128__QEAA_I_Z(int128 *__hidden this, uint x);
int128 *__cdecl ??0int128__QEAA_XZ(int128 *__hidden this);
int128 *__cdecl ??0int128__QEAA__J_Z(int128 *__hidden this, longlong x);
int128 *__cdecl ??0int128__QEAA__K0_Z(int128 *__hidden this, ulonglong ll, ulonglong hh);
int128 *__cdecl ??0int128__QEAA__K_Z(int128 *__hidden this, ulonglong x);
interr_exc_t *__cdecl ??0interr_exc_t__QEAA_H_Z(interr_exc_t *__hidden this, int _code);
interval_t *__cdecl ??0interval_t__QEAA_AEBUedge_segment_t___Z(interval_t *__hidden this, const edge_segment_t *s);
interval_t *__cdecl ??0interval_t__QEAA_HH_Z(interval_t *__hidden this, int y0, int y1);
interval_t *__cdecl ??0interval_t__QEAA_XZ(interval_t *__hidden this);
ioport_t *__cdecl ??0ioport_t__QEAA_XZ(ioport_t *__hidden this);
jump_pattern_t *__cdecl ??0jump_pattern_t__QEAA_PEAUswitch_info_t__PEAY03$$CBDH_Z(jump_pattern_t *__hidden this, switch_info_t *si, const char (*depends)[4], int last_reg);
jvalue_t *__cdecl ??0jvalue_t__QEAA_AEBU0__Z(jvalue_t *__hidden this, const jvalue_t *o);
jvalue_t *__cdecl ??0jvalue_t__QEAA_XZ(jvalue_t *__hidden this);
launch_process_params_t *__cdecl ??0launch_process_params_t__QEAA_XZ(launch_process_params_t *__hidden this);
lex_value_t *__cdecl ??0lex_value_t__QEAA_XZ(lex_value_t *__hidden this);
line_rendering_output_entry_t *__cdecl ??0line_rendering_output_entry_t__QEAA_PEBVtwinline_t__HHII_Z(line_rendering_output_entry_t *__hidden this, const twinline_t *_line, int _cpx, int _nchars, uint32 _flags, bgcolor_t _bg_color);
line_rendering_output_entry_t *__cdecl ??0line_rendering_output_entry_t__QEAA_PEBVtwinline_t__II_Z(line_rendering_output_entry_t *__hidden this, const twinline_t *_line, uint32 _flags, bgcolor_t _bg_color);
linearray_t *__cdecl ??0linearray_t__QEAA_PEAX_Z(linearray_t *__hidden this, void *_ud);
lines_rendering_input_t *__cdecl ??0lines_rendering_input_t__QEAA_XZ(lines_rendering_input_t *__hidden this);
lines_rendering_output_t *__cdecl ??0lines_rendering_output_t__QEAA_XZ(lines_rendering_output_t *__hidden this);
linput_buffer_t *__cdecl ??0linput_buffer_t__QEAA_PEAVlinput_t___J_Z(linput_buffer_t *__hidden this, linput_t *linput, int64 size);
locchange_md_t *__cdecl ??0locchange_md_t__QEAA_W4locchange_reason_t___N_Z(locchange_md_t *__hidden this, locchange_reason_t _reason, bool _sync);
lochist_entry_t *__cdecl ??0lochist_entry_t__QEAA_AEBU0__Z(lochist_entry_t *__hidden this, const lochist_entry_t *other);
lochist_entry_t *__cdecl ??0lochist_entry_t__QEAA_AEBVlochist_t___Z(lochist_entry_t *__hidden this, const lochist_t *s);
lochist_entry_t *__cdecl ??0lochist_entry_t__QEAA_PEBVplace_t__AEBUrenderer_info_t___Z(lochist_entry_t *__hidden this, const place_t *p, const renderer_info_t *r);
lochist_entry_t *__cdecl ??0lochist_entry_t__QEAA_XZ(lochist_entry_t *__hidden this);
lochist_t *__cdecl ??0lochist_t__QEAA_XZ(lochist_t *__hidden this);
lock_func *__cdecl ??0lock_func__QEAA_PEBVfunc_t___Z(lock_func *__hidden this, const func_t *_pfn);
lock_segment *__cdecl ??0lock_segment__QEAA_PEBVsegment_t___Z(lock_segment *__hidden this, const segment_t *_segm);
memory_deserializer_t *__cdecl ??0memory_deserializer_t__QEAA_AEBV?$_qstring_D___Z(memory_deserializer_t *__hidden this, const qstring *s);
memory_deserializer_t *__cdecl ??0memory_deserializer_t__QEAA_AEBVbytevec_t___Z(memory_deserializer_t *__hidden this, const bytevec_t *b);
memory_deserializer_t *__cdecl ??0memory_deserializer_t__QEAA_PEBE0_Z(memory_deserializer_t *__hidden this, const uchar *p, const uchar *e);
memory_deserializer_t *__cdecl ??0memory_deserializer_t__QEAA_PEBX_K_Z(memory_deserializer_t *__hidden this, const void *p, size_t s);
memory_info_t *__cdecl ??0memory_info_t__QEAA_XZ(memory_info_t *__hidden this);
ida_syntax_highlighter_t::multicmt_t *__cdecl ??0multicmt_t_ida_syntax_highlighter_t__QEAA_PEBD0_Z(ida_syntax_highlighter_t::multicmt_t *__hidden this, const char *_open_multicmt, const char *_close_multicmt);
ida_syntax_highlighter_t::multicmt_t *__cdecl ??0multicmt_t_ida_syntax_highlighter_t__QEAA_XZ(ida_syntax_highlighter_t::multicmt_t *__hidden this);
mutable_graph_t *__cdecl ??0mutable_graph_t__QEAA_AEBVabstract_graph_t___K_Z(mutable_graph_t *__hidden this, const abstract_graph_t *g, uval_t id);
mutable_graph_t *__cdecl ??0mutable_graph_t__QEAA__K_Z(mutable_graph_t *__hidden this, uval_t id);
std::nested_exception *__cdecl ??0nested_exception_std__QEAA_AEBV01__Z(std::nested_exception *__hidden this, const std::nested_exception *);
std::nested_exception *__cdecl ??0nested_exception_std__QEAA_XZ(std::nested_exception *__hidden this);
netnode *__cdecl ??0netnode__QEAA_PEBD_K_N_Z(netnode *__hidden this, const char *_name, size_t namlen, bool do_create);
netnode *__cdecl ??0netnode__QEAA__K_Z(netnode *__hidden this, nodeidx_t num);
node_info_t *__cdecl ??0node_info_t__QEAA_XZ(node_info_t *__hidden this);
node_iterator *__cdecl ??0node_iterator__QEAA_PEBVgdl_graph_t__H_Z(node_iterator *__hidden this, const gdl_graph_t *_g, int n);
node_set_t *__cdecl ??0node_set_t__QEAA_H_Z(node_set_t *__hidden this, int node);
node_set_t *__cdecl ??0node_set_t__QEAA_PEBVgdl_graph_t___Z(node_set_t *__hidden this, const gdl_graph_t *g);
node_set_t *__cdecl ??0node_set_t__QEAA_XZ(node_set_t *__hidden this);
std::nothrow_t *__cdecl ??0nothrow_t_std__QEAA_XZ(std::nothrow_t *__hidden this);
cfgopt_t::num_range_t *__cdecl ??0num_range_t_cfgopt_t__QEAA__J0_Z(cfgopt_t::num_range_t *__hidden this, int64 _min, int64 _max);
outctx_base_t *__cdecl ??0outctx_base_t__QEAA__KIH_Z(outctx_base_t *__hidden this, ea_t ea, flags_t flags, int _suspop);
outctx_t *__cdecl ??0outctx_t__QEAA_PEAUprocmod_t__AEAUprocessor_t__AEAUasm_t___KIHPEBUprintop_t___Z(outctx_t *__hidden this, procmod_t *p, processor_t *ph, asm_t *ash, ea_t ea, flags_t flags, int _suspop, const printop_t *_wif);
cfgopt_t::params_t *__cdecl ??0params_t_cfgopt_t__QEAA__J0_Z(cfgopt_t::params_t *__hidden this, int64 _p1, int64 _p2);
std::piecewise_construct_t *__cdecl ??0piecewise_construct_t_std__QEAA_XZ(std::piecewise_construct_t *__hidden this);
place_t *__cdecl ??0place_t__QEAA_H_Z(place_t *__hidden this, int ln);
place_t *__cdecl ??0place_t__QEAA_XZ(place_t *__hidden this);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ??0plain_char_ptr_t_ida_syntax_highlighter_t__QEAA_PEBD_Z(ida_syntax_highlighter_t::plain_char_ptr_t *__hidden this, const char *p);
point_t *__cdecl ??0point_t__QEAA_HH_Z(point_t *__hidden this, int _x, int _y);
point_t *__cdecl ??0point_t__QEAA_XZ(point_t *__hidden this);
printop_t *__cdecl ??0printop_t__QEAA_XZ(printop_t *__hidden this);
procmod_t *__cdecl ??0procmod_t__QEAA_XZ(procmod_t *__hidden this);
ptr_type_data_t *__cdecl ??0ptr_type_data_t__QEAA_Vtinfo_t__E0H_Z(ptr_type_data_t *__hidden this, tinfo_t c, uchar bps, tinfo_t p, int32 d);
qffblk64_t *__cdecl ??0qffblk64_t__QEAA_XZ(qffblk64_t *__hidden this);
qffblk_t *__cdecl ??0qffblk_t__QEAA_XZ(qffblk_t *__hidden this);
qflow_chart_t *__cdecl ??0qflow_chart_t__QEAA_PEBDPEAVfunc_t___K2H_Z(qflow_chart_t *__hidden this, const char *_title, func_t *_pfn, ea_t _ea1, ea_t _ea2, int _flags);
qflow_chart_t *__cdecl ??0qflow_chart_t__QEAA_XZ(qflow_chart_t *__hidden this);
qmutex_locker_t *__cdecl ??0qmutex_locker_t__QEAA_PEAU__qmutex_t___Z(qmutex_locker_t *__hidden this, qmutex_t _lock);
qrefcnt_obj_t *__cdecl ??0qrefcnt_obj_t__QEAA_XZ(qrefcnt_obj_t *__hidden this);
range_marker_suspender_t *__cdecl ??0range_marker_suspender_t__QEAA_XZ(range_marker_suspender_t *__hidden this);
range_t *__cdecl ??0range_t__QEAA_XZ(range_t *__hidden this);
range_t *__cdecl ??0range_t__QEAA__K0_Z(range_t *__hidden this, ea_t ea1, ea_t ea2);
rangeset_t *__cdecl ??0rangeset_t__QEAA_AEBUrange_t___Z(rangeset_t *__hidden this, const range_t *range);
rangeset_t *__cdecl ??0rangeset_t__QEAA_AEBV0__Z(rangeset_t *__hidden this, const rangeset_t *ivs);
rangeset_t *__cdecl ??0rangeset_t__QEAA_XZ(rangeset_t *__hidden this);
rect_t *__cdecl ??0rect_t__QEAA_AEBUpoint_t__0_Z(rect_t *__hidden this, const point_t *p0, const point_t *p1);
rect_t *__cdecl ??0rect_t__QEAA_HHHH_Z(rect_t *__hidden this, int l, int t, int r, int b);
rect_t *__cdecl ??0rect_t__QEAA_XZ(rect_t *__hidden this);
refcnted_regex_t *__cdecl ??0refcnted_regex_t__AEAA_XZ(refcnted_regex_t *__hidden this);
refcnted_regex_t *__cdecl ??0refcnted_regex_t__QEAA_AEBV0__Z(refcnted_regex_t *__hidden this, const refcnted_regex_t *);
regarg_t *__cdecl ??0regarg_t__QEAA_AEBU0__Z(regarg_t *__hidden this, const regarg_t *r);
regarg_t *__cdecl ??0regarg_t__QEAA_XZ(regarg_t *__hidden this);
regval_t *__cdecl ??0regval_t__QEAA_AEBU0__Z(regval_t *__hidden this, const regval_t *r);
regval_t *__cdecl ??0regval_t__QEAA_XZ(regval_t *__hidden this);
regvar_t *__cdecl ??0regvar_t__QEAA_AEBU0__Z(regvar_t *__hidden this, const regvar_t *r);
regvar_t *__cdecl ??0regvar_t__QEAA_XZ(regvar_t *__hidden this);
relobj_t *__cdecl ??0relobj_t__QEAA_XZ(relobj_t *__hidden this);
renderer_info_pos_t *__cdecl ??0renderer_info_pos_t__QEAA_XZ(renderer_info_pos_t *__hidden this);
renderer_info_t *__cdecl ??0renderer_info_t__QEAA_W4tcc_renderer_type_t__FF_Z(renderer_info_t *__hidden this, tcc_renderer_type_t _rtype, __int16 cx, __int16 cy);
renderer_info_t *__cdecl ??0renderer_info_t__QEAA_XZ(renderer_info_t *__hidden this);
renderer_pos_info_t *__cdecl ??0renderer_pos_info_t__QEAA_XZ(renderer_pos_info_t *__hidden this);
row_info_t *__cdecl ??0row_info_t__QEAA_XZ(row_info_t *__hidden this);
segm_move_info_t *__cdecl ??0segm_move_info_t__QEAA__K00_Z(segm_move_info_t *__hidden this, ea_t _from, ea_t _to, size_t _sz);
segment_t *__cdecl ??0segment_t__QEAA_XZ(segment_t *__hidden this);
selection_item_t *__cdecl ??0selection_item_t__QEAA_AEAUedge_layout_point_t___Z(selection_item_t *__hidden this, edge_layout_point_t *_elp);
selection_item_t *__cdecl ??0selection_item_t__QEAA_AEAVgraph_item_t___Z(selection_item_t *__hidden this, graph_item_t *);
selection_item_t *__cdecl ??0selection_item_t__QEAA_H_Z(selection_item_t *__hidden this, int n);
selection_item_t *__cdecl ??0selection_item_t__QEAA_Uedge_t__H_Z(selection_item_t *__hidden this, edge_t e, int idx);
selection_item_t *__cdecl ??0selection_item_t__QEAA_XZ(selection_item_t *__hidden this);
simd_info_t *__cdecl ??0simd_info_t__QEAA_PEBDGE_Z(simd_info_t *__hidden this, const char *nm, uint16 sz, type_t memt);
simple_bfi_t *__cdecl ??0simple_bfi_t__QEAA__K_Z(simple_bfi_t *__hidden this, ea_t ea);
simpleline_place_t *__cdecl ??0simpleline_place_t__QEAA_H_Z(simpleline_place_t *__hidden this, int _n);
simpleline_place_t *__cdecl ??0simpleline_place_t__QEAA_XZ(simpleline_place_t *__hidden this);
simpleline_t *__cdecl ??0simpleline_t__QEAA_AEBV?$_qstring_D___Z(simpleline_t *__hidden this, const qstring *str);
simpleline_t *__cdecl ??0simpleline_t__QEAA_EPEBD_Z(simpleline_t *__hidden this, color_t c, const char *str);
simpleline_t *__cdecl ??0simpleline_t__QEAA_PEBD_Z(simpleline_t *__hidden this, const char *str);
simpleline_t *__cdecl ??0simpleline_t__QEAA_XZ(simpleline_t *__hidden this);
snapshot_t *__cdecl ??0snapshot_t__AEAA_AEBV0__Z(snapshot_t *__hidden this, const snapshot_t *);
snapshot_t *__cdecl ??0snapshot_t__QEAA_XZ(snapshot_t *__hidden this);
srcinfo_provider_t *__cdecl ??0srcinfo_provider_t__QEAA_PEBD0H_Z(srcinfo_provider_t *__hidden this, const char *_name, const char *_display_name, int _flags);
backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t *__cdecl ??0state_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____QEAA_XZ(backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t *__hidden this);
string_info_t *__cdecl ??0string_info_t__QEAA__K_Z(string_info_t *__hidden this, ea_t _ea);
struc_t *__cdecl ??0struc_t__IEAA_XZ(struc_t *__hidden this);
structplace_t *__cdecl ??0structplace_t__QEAA_XZ(structplace_t *__hidden this);
structplace_t *__cdecl ??0structplace_t__QEAA__K0H_Z(structplace_t *__hidden this, uval_t i, uval_t o, int ln);
switch_info_t *__cdecl ??0switch_info_t__QEAA_XZ(switch_info_t *__hidden this);
sync_source_t *__cdecl ??0sync_source_t__QEAA_PEBD_Z(sync_source_t *__hidden this, const char *_regname);
sync_source_t *__cdecl ??0sync_source_t__QEAA_PEBVTWidget___Z(sync_source_t *__hidden this, const TWidget *_view);
sync_source_t *__cdecl ??0sync_source_t__QEAA_XZ(sync_source_t *__hidden this);
syntax_highlighter_t *__cdecl ??0syntax_highlighter_t__QEAA_P6AXPEAXPEAUhighlighter_cbs_t__AEBV?$_qstring_D___Z_Z(syntax_highlighter_t *__hidden this, syntax_highlighter_t::block_highlighter_t *bh);
tev_reg_value_t *__cdecl ??0tev_reg_value_t__QEAA_H_K_Z(tev_reg_value_t *__hidden this, int _reg_idx, uint64 _value);
textctrl_info_t *__cdecl ??0textctrl_info_t__QEAA_XZ(textctrl_info_t *__hidden this);
til_symbol_t *__cdecl ??0til_symbol_t__QEAA_PEBDPEBUtil_t___Z(til_symbol_t *__hidden this, const char *n, const til_t *t);
tinfo_t *__cdecl ??0tinfo_t__QEAA_AEBV0__Z(tinfo_t *__hidden this, const tinfo_t *r);
tinfo_t *__cdecl ??0tinfo_t__QEAA_E_Z(tinfo_t *__hidden this, type_t decl_type);
tinfo_t *__cdecl ??0tinfo_t__QEAA_XZ(tinfo_t *__hidden this);
tinfo_visitor_t *__cdecl ??0tinfo_visitor_t__QEAA_H_Z(tinfo_visitor_t *__hidden this, int s);
token_t *__cdecl ??0token_t__QEAA_XZ(token_t *__hidden this);
try_handler_t *__cdecl ??0try_handler_t__QEAA_XZ(try_handler_t *__hidden this);
tryblk_t *__cdecl ??0tryblk_t__QEAA_AEBV0__Z(tryblk_t *__hidden this, const tryblk_t *r);
tryblk_t *__cdecl ??0tryblk_t__QEAA_XZ(tryblk_t *__hidden this);
twinline_t *__cdecl ??0twinline_t__QEAA_PEAVplace_t__EI_Z(twinline_t *__hidden this, place_t *t, color_t pc, bgcolor_t bc);
twinline_t *__cdecl ??0twinline_t__QEAA_XZ(twinline_t *__hidden this);
twinpos_t *__cdecl ??0twinpos_t__QEAA_PEAVplace_t___Z(twinpos_t *__hidden this, place_t *t);
twinpos_t *__cdecl ??0twinpos_t__QEAA_PEAVplace_t__H_Z(twinpos_t *__hidden this, place_t *t, int x0);
twinpos_t *__cdecl ??0twinpos_t__QEAA_XZ(twinpos_t *__hidden this);
type_mods_t *__cdecl ??0type_mods_t__QEAA_XZ(type_mods_t *__hidden this);
typedef_type_data_t *__cdecl ??0typedef_type_data_t__QEAA_PEBUtil_t__I_N_Z(typedef_type_data_t *__hidden this, const til_t *_til, uint32 ord, bool _resolve);
typedef_type_data_t *__cdecl ??0typedef_type_data_t__QEAA_PEBUtil_t__PEBD_N_Z(typedef_type_data_t *__hidden this, const til_t *_til, const char *_name, bool _resolve);
udt_member_t *__cdecl ??0udt_member_t__QEAA_XZ(udt_member_t *__hidden this);
udt_type_data_t *__cdecl ??0udt_type_data_t__QEAA_XZ(udt_type_data_t *__hidden this);
ui_requests_t *__cdecl ??0ui_requests_t__AEAA_AEBV0__Z(ui_requests_t *__hidden this, const ui_requests_t *);
ui_requests_t *__cdecl ??0ui_requests_t__QEAA_XZ(ui_requests_t *__hidden this);
uint128 *__cdecl ??0uint128__QEAA_H_Z(uint128 *__hidden this, int x);
uint128 *__cdecl ??0uint128__QEAA_I_Z(uint128 *__hidden this, uint x);
uint128 *__cdecl ??0uint128__QEAA_XZ(uint128 *__hidden this);
uint128 *__cdecl ??0uint128__QEAA__J_Z(uint128 *__hidden this, longlong x);
uint128 *__cdecl ??0uint128__QEAA__K0_Z(uint128 *__hidden this, ulonglong ll, ulonglong hh);
uint128 *__cdecl ??0uint128__QEAA__K_Z(uint128 *__hidden this, ulonglong x);
update_bpt_info_t *__cdecl ??0update_bpt_info_t__QEAA_XZ(update_bpt_info_t *__hidden this);
user_defined_prefix_t *__cdecl ??0user_defined_prefix_t__QEAA__KPEBX_Z(user_defined_prefix_t *__hidden this, size_t prefix_len, const void *owner);
valinfo_t *__cdecl ??0valinfo_t__QEAA_Vargloc_t__PEBDAEBVtinfo_t___Z(valinfo_t *__hidden this, argloc_t l, const char *name, const tinfo_t *tif);
valstr_t *__cdecl ??0valstr_t__QEAA_XZ(valstr_t *__hidden this);
xrefpos_t *__cdecl ??0xrefpos_t__QEAA__KE_Z(xrefpos_t *__hidden this, ea_t ea_, uchar type_);
void __cdecl ??1?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA_XZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
void __cdecl ??1?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA_XZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
void __cdecl ??1?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
void __cdecl ??1?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
void __cdecl ??1?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA_XZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
void __cdecl ??1?$allocator_D_std__QEAA_XZ(std::allocator<char> *__hidden this);
void __cdecl ??1?$allocator_H_std__QEAA_XZ(std::allocator<int> *__hidden this);
void __cdecl ??1?$allocator_U?$_Tree_node_HPEAX_std___std__QEAA_XZ(std::allocator<std::_Tree_node<int, void *>> *__hidden this);
void __cdecl ??1?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__QEAA_XZ(std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__hidden this);
void __cdecl ??1?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__QEAA_XZ(std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__hidden this);
void __cdecl ??1?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__QEAA_XZ(std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__hidden this);
void __cdecl ??1?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__QEAA_XZ(std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__hidden this);
void __cdecl ??1?$allocator_U?$pair_$$CBHH_std___std__QEAA_XZ(std::allocator<std::pair<const int, int>> *__hidden this);
void __cdecl ??1?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEAA_XZ(std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this);
void __cdecl ??1?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEAA_XZ(std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this);
void __cdecl ??1?$allocator_U?$pair_$$CB_K_K_std___std__QEAA_XZ(std::allocator<std::pair<const unsigned long long, unsigned long long>> *__hidden this);
void __cdecl ??1?$allocator__S_std__QEAA_XZ(std::allocator<char16_t> *__hidden this);
void __cdecl ??1?$allocator__U_std__QEAA_XZ(std::allocator<char32_t> *__hidden this);
void __cdecl ??1?$allocator__W_std__QEAA_XZ(std::allocator<wchar_t> *__hidden this);
void __cdecl ??1?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA_XZ(std::basic_string<char> *__hidden this);
void __cdecl ??1?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA_XZ(std::basic_string<char16_t> *__hidden this);
void __cdecl ??1?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA_XZ(std::basic_string<char32_t> *__hidden this);
void __cdecl ??1?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA_XZ(std::basic_string<wchar_t> *__hidden this);
void __cdecl ??1?$janitor_t_PEAU_iobuf____QEAA_XZ(janitor_t<_iobuf *> *__hidden this);
void __cdecl ??1?$janitor_t_PEAVlinput_t____QEAA_XZ(janitor_t<linput_t *> *__hidden this);
void __cdecl ??1?$qlist_PEAVui_request_t____QEAA_XZ(qlist<ui_request_t *> *__hidden this);
void __cdecl ??1?$qrefcnt_t_Uextlang_t____QEAA_XZ(qrefcnt_t<extlang_t> *__hidden this);
void __cdecl ??1?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________QEAA_XZ(qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__hidden this);
void __cdecl ??1?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________QEAA_XZ(qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__hidden this);
void __cdecl ??1?$qrefcnt_t_Vrefcnted_regex_t____QEAA_XZ(qrefcnt_t<refcnted_regex_t> *__hidden this);
void __cdecl ??1?$qrefcnt_t_Vsource_file_t____QEAA_XZ(qrefcnt_t<source_file_t> *__hidden this);
void __cdecl ??1?$qrefcnt_t_Vsource_item_t____QEAA_XZ(qrefcnt_t<source_item_t> *__hidden this);
void __cdecl ??1?$qvector_D__QEAA_XZ(qvector<char> *__hidden this);
void __cdecl ??1?$qvector_E__QEAA_XZ(qvector<unsigned char> *__hidden this);
void __cdecl ??1?$qvector_H__QEAA_XZ(qvector<int> *__hidden this);
void __cdecl ??1?$qvector_I__QEAA_XZ(qvector<unsigned int> *__hidden this);
void __cdecl ??1?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAA_XZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
void __cdecl ??1?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAA_XZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
void __cdecl ??1?$qvector_PEAUbpt_t____QEAA_XZ(qvector<bpt_t *> *__hidden this);
void __cdecl ??1?$qvector_PEAUextlang_t____QEAA_XZ(qvector<extlang_t *> *__hidden this);
void __cdecl ??1?$qvector_PEAUline_rendering_output_entry_t____QEAA_XZ(qvector<line_rendering_output_entry_t *> *__hidden this);
void __cdecl ??1?$qvector_PEAVsnapshot_t____QEAA_XZ(qvector<snapshot_t *> *__hidden this);
void __cdecl ??1?$qvector_PEBD__QEAA_XZ(qvector<const char *> *__hidden this);
void __cdecl ??1?$qvector_PEBUbpt_t____QEAA_XZ(qvector<const bpt_t *> *__hidden this);
void __cdecl ??1?$qvector_PEBVrangeset_t____QEAA_XZ(qvector<const rangeset_t *> *__hidden this);
void __cdecl ??1?$qvector_PEBVtwinline_t____QEAA_XZ(qvector<const twinline_t *> *__hidden this);
void __cdecl ??1?$qvector_Uargpart_t____QEAA_XZ(qvector<argpart_t> *__hidden this);
void __cdecl ??1?$qvector_Ubpt_t____QEAA_XZ(qvector<bpt_t> *__hidden this);
void __cdecl ??1?$qvector_Ubptaddrs_t____QEAA_XZ(qvector<bptaddrs_t> *__hidden this);
void __cdecl ??1?$qvector_Ucall_stack_info_t____QEAA_XZ(qvector<call_stack_info_t> *__hidden this);
void __cdecl ??1?$qvector_Ucatch_t____QEAA_XZ(qvector<catch_t> *__hidden this);
void __cdecl ??1?$qvector_Ucfgopt_set_t____QEAA_XZ(qvector<cfgopt_set_t> *__hidden this);
void __cdecl ??1?$qvector_Uchannel_redir_t____QEAA_XZ(qvector<channel_redir_t> *__hidden this);
void __cdecl ??1?$qvector_Ucliopt_t____QEAA_XZ(qvector<cliopt_t> *__hidden this);
void __cdecl ??1?$qvector_Ucompiled_binpat_t____QEAA_XZ(qvector<compiled_binpat_t> *__hidden this);
void __cdecl ??1?$qvector_Udebug_event_t____QEAA_XZ(qvector<debug_event_t> *__hidden this);
void __cdecl ??1?$qvector_Udirentry_t____QEAA_XZ(qvector<direntry_t> *__hidden this);
void __cdecl ??1?$qvector_Udirtree_cursor_t____QEAA_XZ(qvector<dirtree_cursor_t> *__hidden this);
void __cdecl ??1?$qvector_Uea_name_t____QEAA_XZ(qvector<ea_name_t> *__hidden this);
void __cdecl ??1?$qvector_Uedge_t____QEAA_XZ(qvector<edge_t> *__hidden this);
void __cdecl ??1?$qvector_Uenum_member_t____QEAA_XZ(qvector<enum_member_t> *__hidden this);
void __cdecl ??1?$qvector_Uexception_info_t____QEAA_XZ(qvector<exception_info_t> *__hidden this);
void __cdecl ??1?$qvector_Ufixup_info_t____QEAA_XZ(qvector<fixup_info_t> *__hidden this);
void __cdecl ??1?$qvector_Ufuncarg_t____QEAA_XZ(qvector<funcarg_t> *__hidden this);
void __cdecl ??1?$qvector_Ugroup_crinfo_t____QEAA_XZ(qvector<group_crinfo_t> *__hidden this);
void __cdecl ??1?$qvector_Uidc_global_t____QEAA_XZ(qvector<idc_global_t> *__hidden this);
void __cdecl ??1?$qvector_Uidp_desc_t____QEAA_XZ(qvector<idp_desc_t> *__hidden this);
void __cdecl ??1?$qvector_Uidp_name_t____QEAA_XZ(qvector<idp_name_t> *__hidden this);
void __cdecl ??1?$qvector_Uioport_bit_t____QEAA_XZ(qvector<ioport_bit_t> *__hidden this);
void __cdecl ??1?$qvector_Uioport_t____QEAA_XZ(qvector<ioport_t> *__hidden this);
void __cdecl ??1?$qvector_Ujvalue_t____QEAA_XZ(qvector<jvalue_t> *__hidden this);
void __cdecl ??1?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAA_XZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
void __cdecl ??1?$qvector_Ukvp_t____QEAA_XZ(qvector<kvp_t> *__hidden this);
void __cdecl ??1?$qvector_Ulochist_entry_t____QEAA_XZ(qvector<lochist_entry_t> *__hidden this);
void __cdecl ??1?$qvector_Ulowcnd_t____QEAA_XZ(qvector<lowcnd_t> *__hidden this);
void __cdecl ??1?$qvector_Umemory_info_t____QEAA_XZ(qvector<memory_info_t> *__hidden this);
void __cdecl ??1?$qvector_Umemreg_info_t____QEAA_XZ(qvector<memreg_info_t> *__hidden this);
void __cdecl ??1?$qvector_Umodinfo_t____QEAA_XZ(qvector<modinfo_t> *__hidden this);
void __cdecl ??1?$qvector_Umovbpt_info_t____QEAA_XZ(qvector<movbpt_info_t> *__hidden this);
void __cdecl ??1?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAA_XZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
void __cdecl ??1?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAA_XZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
void __cdecl ??1?$qvector_Upoint_t____QEAA_XZ(qvector<point_t> *__hidden this);
void __cdecl ??1?$qvector_Uprocess_info_t____QEAA_XZ(qvector<process_info_t> *__hidden this);
void __cdecl ??1?$qvector_Uqbasic_block_t____QEAA_XZ(qvector<qbasic_block_t> *__hidden this);
void __cdecl ??1?$qvector_Urange_t____QEAA_XZ(qvector<range_t> *__hidden this);
void __cdecl ??1?$qvector_Urect_t____QEAA_XZ(qvector<rect_t> *__hidden this);
void __cdecl ??1?$qvector_Urefinfo_desc_t____QEAA_XZ(qvector<refinfo_desc_t> *__hidden this);
void __cdecl ??1?$qvector_Ureg_access_t____QEAA_XZ(qvector<reg_access_t> *__hidden this);
void __cdecl ??1?$qvector_Ureg_info_t____QEAA_XZ(qvector<reg_info_t> *__hidden this);
void __cdecl ??1?$qvector_Uregister_info_t____QEAA_XZ(qvector<register_info_t> *__hidden this);
void __cdecl ??1?$qvector_Uregobj_t____QEAA_XZ(qvector<regobj_t> *__hidden this);
void __cdecl ??1?$qvector_Uregval_t____QEAA_XZ(qvector<regval_t> *__hidden this);
void __cdecl ??1?$qvector_Urow_info_t____QEAA_XZ(qvector<row_info_t> *__hidden this);
void __cdecl ??1?$qvector_Uscattered_segm_t____QEAA_XZ(qvector<scattered_segm_t> *__hidden this);
void __cdecl ??1?$qvector_Usegm_move_info_t____QEAA_XZ(qvector<segm_move_info_t> *__hidden this);
void __cdecl ??1?$qvector_Uselection_item_t____QEAA_XZ(qvector<selection_item_t> *__hidden this);
void __cdecl ??1?$qvector_Usimd_info_t____QEAA_XZ(qvector<simd_info_t> *__hidden this);
void __cdecl ??1?$qvector_Usimpleline_t____QEAA_XZ(qvector<simpleline_t> *__hidden this);
void __cdecl ??1?$qvector_Ustkpnt_t____QEAA_XZ(qvector<stkpnt_t> *__hidden this);
void __cdecl ??1?$qvector_Utev_info_reg_t____QEAA_XZ(qvector<tev_info_reg_t> *__hidden this);
void __cdecl ??1?$qvector_Utev_info_t____QEAA_XZ(qvector<tev_info_t> *__hidden this);
void __cdecl ??1?$qvector_Utev_reg_value_t____QEAA_XZ(qvector<tev_reg_value_t> *__hidden this);
void __cdecl ??1?$qvector_Uthread_name_t____QEAA_XZ(qvector<thread_name_t> *__hidden this);
void __cdecl ??1?$qvector_Utoken_t____QEAA_XZ(qvector<token_t> *__hidden this);
void __cdecl ??1?$qvector_Utype_attr_t____QEAA_XZ(qvector<type_attr_t> *__hidden this);
void __cdecl ??1?$qvector_Uudt_member_t____QEAA_XZ(qvector<udt_member_t> *__hidden this);
void __cdecl ??1?$qvector_Uupdate_bpt_info_t____QEAA_XZ(qvector<update_bpt_info_t> *__hidden this);
void __cdecl ??1?$qvector_Uxreflist_entry_t____QEAA_XZ(qvector<xreflist_entry_t> *__hidden this);
void __cdecl ??1?$qvector_V?$_qstring_D____QEAA_XZ(qvector<_qstring<char>> *__hidden this);
void __cdecl ??1?$qvector_V?$_qstring_E____QEAA_XZ(qvector<_qstring<unsigned char>> *__hidden this);
void __cdecl ??1?$qvector_V?$_qstring__W____QEAA_XZ(qvector<_qstring<wchar_t>> *__hidden this);
void __cdecl ??1?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAA_XZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
void __cdecl ??1?$qvector_V?$qvector_H____QEAA_XZ(qvector<qvector<int>> *__hidden this);
void __cdecl ??1?$qvector_V?$qvector_PEBD____QEAA_XZ(qvector<qvector<const char *>> *__hidden this);
void __cdecl ??1?$qvector_V?$qvector_PEBVtwinline_t______QEAA_XZ(qvector<qvector<const twinline_t *>> *__hidden this);
void __cdecl ??1?$qvector_V?$qvector__J____QEAA_XZ(qvector<qvector<long long>> *__hidden this);
void __cdecl ??1?$qvector_Vargloc_t____QEAA_XZ(qvector<argloc_t> *__hidden this);
void __cdecl ??1?$qvector_Vintmap_t____QEAA_XZ(qvector<intmap_t> *__hidden this);
void __cdecl ??1?$qvector_Vnode_set_t____QEAA_XZ(qvector<node_set_t> *__hidden this);
void __cdecl ??1?$qvector_Vop_t____QEAA_XZ(qvector<op_t> *__hidden this);
void __cdecl ??1?$qvector_Vrangeset_t____QEAA_XZ(qvector<rangeset_t> *__hidden this);
void __cdecl ??1?$qvector_Vsync_source_t____QEAA_XZ(qvector<sync_source_t> *__hidden this);
void __cdecl ??1?$qvector_Vtinfo_t____QEAA_XZ(qvector<tinfo_t> *__hidden this);
void __cdecl ??1?$qvector_Vtryblk_t____QEAA_XZ(qvector<tryblk_t> *__hidden this);
void __cdecl ??1?$qvector_Vtwinline_t____QEAA_XZ(qvector<twinline_t> *__hidden this);
void __cdecl ??1?$qvector_Vvalstr_t____QEAA_XZ(qvector<valstr_t> *__hidden this);
void __cdecl ??1?$qvector_W4movbpt_code_t____QEAA_XZ(qvector<movbpt_code_t> *__hidden this);
void __cdecl ??1?$qvector__J__QEAA_XZ(qvector<long long> *__hidden this);
void __cdecl ??1?$qvector__K__QEAA_XZ(qvector<unsigned long long> *__hidden this);
void __cdecl ??1?$qvector__N__QEAA_XZ(qvector<bool> *__hidden this);
void __cdecl ??1?$qvector__W__QEAA_XZ(qvector<wchar_t> *__hidden this);
void __cdecl ??1_Init_locks_std__QEAA_XZ(std::_Init_locks *__hidden this);
void __cdecl ??1_Lockit_std__QEAA_XZ(std::_Lockit *__hidden this);
void __cdecl ??1abstract_graph_t__UEAA_XZ(abstract_graph_t *__hidden this);
void __cdecl ??1action_handler_t__UEAA_XZ(action_handler_t *__hidden this);
void __cdecl ??1aloc_visitor_t__UEAA_XZ(aloc_visitor_t *__hidden this);
void __cdecl ??1argloc_t__QEAA_XZ(argloc_t *__hidden this);
void __cdecl ??1argtinfo_helper_t__UEAA_XZ(argtinfo_helper_t *__hidden this);
void __cdecl ??1bookmarks_t__AEAA_XZ(bookmarks_t *__hidden this);
void __cdecl ??1cancellable_graph_t__UEAA_XZ(cancellable_graph_t *__hidden this);
void __cdecl ??1chooser_base_t__UEAA_XZ(chooser_base_t *__hidden this);
void __cdecl ??1const_aloc_visitor_t__UEAA_XZ(const_aloc_visitor_t *__hidden this);
void __cdecl ??1debug_event_t__QEAA_XZ(debug_event_t *__hidden this);
void __cdecl ??1dirspec_t__UEAA_XZ(dirspec_t *__hidden this);
void __cdecl ??1dirtree_t__QEAA_XZ(dirtree_t *__hidden this);
void __cdecl ??1edge_infos_wrapper_t__QEAA_XZ(edge_infos_wrapper_t *__hidden this);
void __cdecl ??1encoder_t__UEAA_XZ(encoder_t *__hidden this);
void __cdecl ??1event_listener_t__UEAA_XZ(event_listener_t *__hidden this);
void __cdecl ??1exception_std__UEAA_XZ(std::exception *__hidden this);
void __cdecl ??1exception_ptr_std__QEAA_XZ(std::exception_ptr *__hidden this);
void __cdecl ??1exec_request_t__UEAA_XZ(exec_request_t *__hidden this);
void __cdecl ??1file_enumerator_t__UEAA_XZ(file_enumerator_t *__hidden this);
void __cdecl ??1func_parent_iterator_t__QEAA_XZ(func_parent_iterator_t *__hidden this);
void __cdecl ??1func_tail_iterator_t__QEAA_XZ(func_tail_iterator_t *__hidden this);
void __cdecl ??1gdl_graph_t__UEAA_XZ(gdl_graph_t *__hidden this);
void __cdecl ??1generic_linput_t__UEAA_XZ(generic_linput_t *__hidden this);
void __cdecl ??1graph_node_visitor_t__UEAA_XZ(graph_node_visitor_t *__hidden this);
void __cdecl ??1graph_path_visitor_t__UEAA_XZ(graph_path_visitor_t *__hidden this);
void __cdecl ??1highlighter_cbs_t__UEAA_XZ(highlighter_cbs_t *__hidden this);
void __cdecl ??1idc_value_t__QEAA_XZ(idc_value_t *__hidden this);
void __cdecl ??1jump_pattern_t__UEAA_XZ(jump_pattern_t *__hidden this);
void __cdecl ??1jvalue_t__QEAA_XZ(jvalue_t *__hidden this);
void __cdecl ??1linearray_t__QEAA_XZ(linearray_t *__hidden this);
void __cdecl ??1lines_rendering_output_t__QEAA_XZ(lines_rendering_output_t *__hidden this);
void __cdecl ??1lochist_entry_t__QEAA_XZ(lochist_entry_t *__hidden this);
void __cdecl ??1lochist_t__QEAA_XZ(lochist_t *__hidden this);
void __cdecl ??1lock_func__QEAA_XZ(lock_func *__hidden this);
void __cdecl ??1lock_segment__QEAA_XZ(lock_segment *__hidden this);
void __cdecl ??1macro_constructor_t__UEAA_XZ(macro_constructor_t *__hidden this);
void __cdecl ??1mutable_graph_t__UEAA_XZ(mutable_graph_t *__hidden this);
void __cdecl ??1nested_exception_std__UEAA_XZ(std::nested_exception *__hidden this);
void __cdecl ??1outctx_base_t__UEAA_XZ(outctx_base_t *__hidden this);
void __cdecl ??1outctx_t__UEAA_XZ(outctx_t *__hidden this);
void __cdecl ??1plugmod_t__UEAA_XZ(plugmod_t *__hidden this);
void __cdecl ??1post_event_visitor_t__UEAA_XZ(post_event_visitor_t *__hidden this);
void __cdecl ??1predicate_t__UEAA_XZ(predicate_t *__hidden this);
void __cdecl ??1qffblk64_t__QEAA_XZ(qffblk64_t *__hidden this);
void __cdecl ??1qflow_chart_t__UEAA_XZ(qflow_chart_t *__hidden this);
void __cdecl ??1qmutex_locker_t__QEAA_XZ(qmutex_locker_t *__hidden this);
void __cdecl ??1range_marker_suspender_t__QEAA_XZ(range_marker_suspender_t *__hidden this);
void __cdecl ??1refcnted_regex_t__EEAA_XZ(refcnted_regex_t *__hidden this);
void __cdecl ??1regarg_t__QEAA_XZ(regarg_t *__hidden this);
void __cdecl ??1regval_t__QEAA_XZ(regval_t *__hidden this);
void __cdecl ??1regvar_t__QEAA_XZ(regvar_t *__hidden this);
void __cdecl ??1snapshot_t__QEAA_XZ(snapshot_t *__hidden this);
void __cdecl ??1syntax_highlighter_t__UEAA_XZ(syntax_highlighter_t *__hidden this);
void __cdecl ??1tinfo_t__QEAA_XZ(tinfo_t *__hidden this);
void __cdecl ??1tinfo_visitor_t__UEAA_XZ(tinfo_visitor_t *__hidden this);
void __cdecl ??1tryblk_t__QEAA_XZ(tryblk_t *__hidden this);
void __cdecl ??1ui_request_t__UEAA_XZ(ui_request_t *__hidden this);
void __cdecl ??1ui_requests_t__QEAA_XZ(ui_requests_t *__hidden this);
void __cdecl ??1user_defined_prefix_t__UEAA_XZ(user_defined_prefix_t *__hidden this);
void __cdecl ??1valstr_t__QEAA_XZ(valstr_t *__hidden this);
void *__cdecl ??2?$qlist_PEAVui_request_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qlist_PEAVui_request_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_D__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_D__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_E__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_E__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_H__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_H__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_I__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_I__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_PEAUbpt_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_PEAUbpt_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_PEAUextlang_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_PEAUextlang_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_PEAUline_rendering_output_entry_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_PEAUline_rendering_output_entry_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_PEAVsnapshot_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_PEAVsnapshot_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_PEBD__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_PEBD__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_PEBUbpt_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_PEBUbpt_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_PEBVrangeset_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_PEBVrangeset_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_PEBVtwinline_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_PEBVtwinline_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uargpart_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uargpart_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ubpt_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ubpt_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ubptaddrs_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ubptaddrs_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ucall_stack_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ucall_stack_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ucatch_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ucatch_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ucfgopt_set_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ucfgopt_set_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uchannel_redir_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uchannel_redir_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ucliopt_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ucliopt_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ucompiled_binpat_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ucompiled_binpat_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Udebug_event_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Udebug_event_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Udirentry_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Udirentry_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Udirtree_cursor_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Udirtree_cursor_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uea_name_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uea_name_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uedge_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uedge_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uenum_member_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uenum_member_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uexception_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uexception_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ufixup_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ufixup_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ufuncarg_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ufuncarg_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ugroup_crinfo_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ugroup_crinfo_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uidc_global_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uidc_global_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uidp_desc_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uidp_desc_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uidp_name_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uidp_name_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uioport_bit_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uioport_bit_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uioport_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uioport_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ujvalue_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ujvalue_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ukvp_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ukvp_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ulochist_entry_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ulochist_entry_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ulowcnd_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ulowcnd_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Umemory_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Umemory_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Umemreg_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Umemreg_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Umodinfo_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Umodinfo_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Umovbpt_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Umovbpt_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Umulticmt_t_ida_syntax_highlighter_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Umulticmt_t_ida_syntax_highlighter_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Upoint_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Upoint_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uprocess_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uprocess_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uqbasic_block_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uqbasic_block_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Urange_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Urange_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Urect_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Urect_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Urefinfo_desc_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Urefinfo_desc_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ureg_access_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ureg_access_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ureg_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ureg_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uregister_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uregister_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uregobj_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uregobj_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uregval_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uregval_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Urow_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Urow_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uscattered_segm_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uscattered_segm_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Usegm_move_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Usegm_move_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uselection_item_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uselection_item_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Usimd_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Usimd_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Usimpleline_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Usimpleline_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Ustkpnt_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Ustkpnt_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Utev_info_reg_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Utev_info_reg_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Utev_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Utev_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Utev_reg_value_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Utev_reg_value_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uthread_name_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uthread_name_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Utoken_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Utoken_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Utype_attr_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Utype_attr_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uudt_member_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uudt_member_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uupdate_bpt_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uupdate_bpt_info_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Uxreflist_entry_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Uxreflist_entry_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_V?$_qstring_D____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_V?$_qstring_D____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_V?$_qstring_E____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_V?$_qstring_E____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_V?$_qstring__W____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_V?$_qstring__W____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_V?$qrefcnt_t_Vsource_item_t______SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_V?$qrefcnt_t_Vsource_item_t______SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_V?$qvector_H____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_V?$qvector_H____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_V?$qvector_PEBD____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_V?$qvector_PEBD____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_V?$qvector_PEBVtwinline_t______SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_V?$qvector_PEBVtwinline_t______SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_V?$qvector__J____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_V?$qvector__J____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Vargloc_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Vargloc_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Vintmap_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Vintmap_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Vnode_set_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Vnode_set_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Vop_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Vop_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Vrangeset_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Vrangeset_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Vsync_source_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Vsync_source_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Vtinfo_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Vtinfo_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Vtryblk_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Vtryblk_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Vtwinline_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Vtwinline_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_Vvalstr_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_Vvalstr_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector_W4movbpt_code_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector_W4movbpt_code_t____SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector__J__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector__J__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector__K__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector__K__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector__N__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector__N__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2?$qvector__W__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2?$qvector__W__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2action_handler_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2action_handler_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2argloc_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2argloc_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2argpart_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2argpart_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2array_type_data_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2array_type_data_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2chooser_base_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2chooser_base_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2enum_member_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2enum_member_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2enum_type_data_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2enum_type_data_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2gdl_graph_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2gdl_graph_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2intmap_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2intmap_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2intset_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2intset_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2linearray_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2linearray_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2node_ordering_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2node_ordering_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2place_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2place_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2plugmod_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2plugmod_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2ptr_type_data_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2ptr_type_data_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2rangeset_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2rangeset_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2scattered_aloc_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2scattered_aloc_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2simpleline_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2simpleline_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2snapshot_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2snapshot_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2tinfo_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2tinfo_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2twinline_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2twinline_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2twinpos_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2twinpos_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2typedef_type_data_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2typedef_type_data_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2udt_member_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2udt_member_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2udt_type_data_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2udt_type_data_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2valinfo_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2valinfo_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void *__cdecl ??2valstr_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??2valstr_t__SAPEAX_KPEAX_Z(size_t, void *_v);
void __cdecl ??3?$qlist_PEAVui_request_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qlist_PEAVui_request_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_D__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_D__SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_E__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_E__SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_H__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_H__SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_I__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_I__SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_PEAUbpt_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_PEAUbpt_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_PEAUextlang_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_PEAUextlang_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_PEAUline_rendering_output_entry_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_PEAUline_rendering_output_entry_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_PEAVsnapshot_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_PEAVsnapshot_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_PEBD__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_PEBD__SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_PEBUbpt_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_PEBUbpt_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_PEBVrangeset_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_PEBVrangeset_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_PEBVtwinline_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_PEBVtwinline_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uargpart_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uargpart_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ubpt_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ubpt_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ubptaddrs_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ubptaddrs_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ucall_stack_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ucall_stack_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ucatch_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ucatch_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ucfgopt_set_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ucfgopt_set_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uchannel_redir_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uchannel_redir_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ucliopt_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ucliopt_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ucompiled_binpat_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ucompiled_binpat_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Udebug_event_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Udebug_event_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Udirentry_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Udirentry_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Udirtree_cursor_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Udirtree_cursor_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uea_name_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uea_name_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uedge_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uedge_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uenum_member_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uenum_member_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uexception_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uexception_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ufixup_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ufixup_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ufuncarg_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ufuncarg_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ugroup_crinfo_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ugroup_crinfo_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uidc_global_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uidc_global_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uidp_desc_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uidp_desc_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uidp_name_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uidp_name_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uioport_bit_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uioport_bit_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uioport_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uioport_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ujvalue_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ujvalue_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ukvp_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ukvp_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ulochist_entry_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ulochist_entry_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ulowcnd_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ulowcnd_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Umemory_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Umemory_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Umemreg_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Umemreg_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Umodinfo_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Umodinfo_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Umovbpt_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Umovbpt_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Umulticmt_t_ida_syntax_highlighter_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Umulticmt_t_ida_syntax_highlighter_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Upoint_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Upoint_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uprocess_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uprocess_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uqbasic_block_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uqbasic_block_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Urange_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Urange_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Urect_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Urect_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Urefinfo_desc_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Urefinfo_desc_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ureg_access_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ureg_access_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ureg_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ureg_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uregister_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uregister_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uregobj_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uregobj_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uregval_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uregval_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Urow_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Urow_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uscattered_segm_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uscattered_segm_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Usegm_move_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Usegm_move_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uselection_item_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uselection_item_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Usimd_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Usimd_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Usimpleline_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Usimpleline_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Ustkpnt_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Ustkpnt_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Utev_info_reg_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Utev_info_reg_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Utev_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Utev_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Utev_reg_value_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Utev_reg_value_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uthread_name_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uthread_name_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Utoken_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Utoken_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Utype_attr_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Utype_attr_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uudt_member_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uudt_member_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uupdate_bpt_info_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uupdate_bpt_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Uxreflist_entry_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Uxreflist_entry_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_V?$_qstring_D____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_V?$_qstring_D____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_V?$_qstring_E____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_V?$_qstring_E____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_V?$_qstring__W____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_V?$_qstring__W____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_V?$qrefcnt_t_Vsource_item_t______SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_V?$qrefcnt_t_Vsource_item_t______SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_V?$qvector_H____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_V?$qvector_H____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_V?$qvector_PEBD____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_V?$qvector_PEBD____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_V?$qvector_PEBVtwinline_t______SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_V?$qvector_PEBVtwinline_t______SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_V?$qvector__J____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_V?$qvector__J____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Vargloc_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Vargloc_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Vintmap_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Vintmap_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Vnode_set_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Vnode_set_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Vop_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Vop_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Vrangeset_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Vrangeset_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Vsync_source_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Vsync_source_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Vtinfo_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Vtinfo_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Vtryblk_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Vtryblk_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Vtwinline_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Vtwinline_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_Vvalstr_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_Vvalstr_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector_W4movbpt_code_t____SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector_W4movbpt_code_t____SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector__J__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector__J__SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector__K__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector__K__SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector__N__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector__N__SAXPEAX_Z(void *_blk);
void __cdecl ??3?$qvector__W__SAXPEAX0_Z(void *, void *);
void __cdecl ??3?$qvector__W__SAXPEAX_Z(void *_blk);
void __cdecl ??3action_handler_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3action_handler_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3argloc_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3argloc_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3argpart_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3argpart_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3array_type_data_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3array_type_data_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3chooser_base_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3chooser_base_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3enum_member_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3enum_member_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3enum_type_data_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3enum_type_data_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3gdl_graph_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3gdl_graph_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3intmap_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3intmap_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3intset_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3intset_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3linearray_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3linearray_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3node_ordering_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3node_ordering_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3place_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3place_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3plugmod_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3plugmod_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3ptr_type_data_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3ptr_type_data_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3rangeset_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3rangeset_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3scattered_aloc_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3scattered_aloc_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3simpleline_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3simpleline_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3snapshot_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3snapshot_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3tinfo_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3tinfo_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3twinline_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3twinline_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3twinpos_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3twinpos_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3typedef_type_data_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3typedef_type_data_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3udt_member_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3udt_member_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3udt_type_data_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3udt_type_data_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3valinfo_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3valinfo_t__SAXPEAX_Z(void *_blk);
void __cdecl ??3valstr_t__SAXPEAX0_Z(void *, void *);
void __cdecl ??3valstr_t__SAXPEAX_Z(void *_blk);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??4?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAAEAV01_AEBV01__Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??4?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAAEAV01_AEBV01__Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??4?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAAEAV01_AEBV01__Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??4?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAAEAV01_AEBV01__Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??4?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAAEAV01_AEBV01__Z(std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??4?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAAEAV01_AEBV01__Z(std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??4?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAAEAV01_AEBV01__Z(std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??4?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAAEAV01_AEBV01__Z(std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__cdecl ??4?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAAAEAV01_$$QEAV01__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__cdecl ??4?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAAAEAV01_AEBV01__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__cdecl ??4?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAAAEAV01_$$QEAV01__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__cdecl ??4?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAAAEAV01_AEBV01__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__cdecl ??4?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAAAEAV01_$$QEAV01__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__cdecl ??4?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAAAEAV01_AEBV01__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__cdecl ??4?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAAAEAV01_$$QEAV01__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__cdecl ??4?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAAAEAV01_AEBV01__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__cdecl ??4?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAAAEAV01_$$QEAV01__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__cdecl ??4?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAAAEAV01_AEBV01__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right);
std::_Tree_node<int, void *> *__cdecl ??4?$_Tree_node_HPEAX_std__QEAAAEAU01_AEBU01__Z(std::_Tree_node<int, void *> *__hidden this, const std::_Tree_node<int, void *> *);
std::_Tree_node<std::pair<const int, int>, void *> *__cdecl ??4?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std__QEAAAEAU01_AEBU01__Z(std::_Tree_node<std::pair<const int, int>, void *> *__hidden this, const std::_Tree_node<std::pair<const int, int>, void *> *);
std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *__cdecl ??4?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std__QEAAAEAU01_AEBU01__Z(std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *__hidden this, const std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *);
std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *__cdecl ??4?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std__QEAAAEAU01_AEBU01__Z(std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *__hidden this, const std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *);
std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *__cdecl ??4?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std__QEAAAEAU01_AEBU01__Z(std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *__hidden this, const std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *);
_qstring<char> *__cdecl ??4?$_qstring_D__QEAAAEAV0_AEBV0__Z(_qstring<char> *__hidden this, const _qstring<char> *qstr);
_qstring<char> *__cdecl ??4?$_qstring_D__QEAAAEAV0_PEBD_Z(_qstring<char> *__hidden this, char *str);
_qstring<unsigned char> *__cdecl ??4?$_qstring_E__QEAAAEAV0_AEBV0__Z(_qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *qstr);
_qstring<unsigned char> *__cdecl ??4?$_qstring_E__QEAAAEAV0_PEBE_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 *str);
_qstring<wchar_t> *__cdecl ??4?$_qstring__W__QEAAAEAV0_AEBV0__Z(_qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *qstr);
_qstring<wchar_t> *__cdecl ??4?$_qstring__W__QEAAAEAV0_PEB_W_Z(_qstring<wchar_t> *__hidden this, __int16 *str);
std::allocator<char> *__cdecl ??4?$allocator_D_std__QEAAAEAV01_AEBV01__Z(std::allocator<char> *__hidden this, const std::allocator<char> *);
std::allocator<int> *__cdecl ??4?$allocator_H_std__QEAAAEAV01_AEBV01__Z(std::allocator<int> *__hidden this, const std::allocator<int> *);
std::allocator<std::_Tree_node<int, void *>> *__cdecl ??4?$allocator_U?$_Tree_node_HPEAX_std___std__QEAAAEAV01_AEBV01__Z(std::allocator<std::_Tree_node<int, void *>> *__hidden this, const std::allocator<std::_Tree_node<int, void *>> *);
std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__cdecl ??4?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__QEAAAEAV01_AEBV01__Z(std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__hidden this, const std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *);
std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__cdecl ??4?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__QEAAAEAV01_AEBV01__Z(std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__hidden this, const std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *);
std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__cdecl ??4?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__QEAAAEAV01_AEBV01__Z(std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__hidden this, const std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *);
std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__cdecl ??4?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__QEAAAEAV01_AEBV01__Z(std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__hidden this, const std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *);
std::allocator<std::pair<const int, int>> *__cdecl ??4?$allocator_U?$pair_$$CBHH_std___std__QEAAAEAV01_AEBV01__Z(std::allocator<std::pair<const int, int>> *__hidden this, const std::allocator<std::pair<const int, int>> *);
std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__cdecl ??4?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEAAAEAV01_AEBV01__Z(std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this, const std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *);
std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__cdecl ??4?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEAAAEAV01_AEBV01__Z(std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this, const std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *);
std::allocator<std::pair<const unsigned long long, unsigned long long>> *__cdecl ??4?$allocator_U?$pair_$$CB_K_K_std___std__QEAAAEAV01_AEBV01__Z(std::allocator<std::pair<const unsigned long long, unsigned long long>> *__hidden this, const std::allocator<std::pair<const unsigned long long, unsigned long long>> *);
std::allocator<char16_t> *__cdecl ??4?$allocator__S_std__QEAAAEAV01_AEBV01__Z(std::allocator<char16_t> *__hidden this, const std::allocator<char16_t> *);
std::allocator<char32_t> *__cdecl ??4?$allocator__U_std__QEAAAEAV01_AEBV01__Z(std::allocator<char32_t> *__hidden this, const std::allocator<char32_t> *);
std::allocator<wchar_t> *__cdecl ??4?$allocator__W_std__QEAAAEAV01_AEBV01__Z(std::allocator<wchar_t> *__hidden this, const std::allocator<wchar_t> *);
std::basic_string<char> *__cdecl ??4?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV01_$$QEAV01__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ??4?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV01_AEBV01__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ??4?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV01_D_Z(std::basic_string<char> *__hidden this, char _Ch);
std::basic_string<char> *__cdecl ??4?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV01_QEBD_Z(std::basic_string<char> *__hidden this, char *const _Ptr);
std::basic_string<char> *__cdecl ??4?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV01_V?$initializer_list_D_1__Z(std::basic_string<char> *__hidden this, std::initializer_list<char> _Ilist);
std::basic_string<char16_t> *__cdecl ??4?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV01_$$QEAV01__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ??4?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV01_AEBV01__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ??4?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV01_QEB_S_Z(std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr);
std::basic_string<char16_t> *__cdecl ??4?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV01_V?$initializer_list__S_1__Z(std::basic_string<char16_t> *__hidden this, std::initializer_list<char16_t> _Ilist);
std::basic_string<char16_t> *__cdecl ??4?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV01__S_Z(std::basic_string<char16_t> *__hidden this, __int16 _Ch);
std::basic_string<char32_t> *__cdecl ??4?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV01_$$QEAV01__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ??4?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV01_AEBV01__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ??4?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV01_QEB_U_Z(std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr);
std::basic_string<char32_t> *__cdecl ??4?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV01_V?$initializer_list__U_1__Z(std::basic_string<char32_t> *__hidden this, std::initializer_list<char32_t> _Ilist);
std::basic_string<char32_t> *__cdecl ??4?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV01__U_Z(std::basic_string<char32_t> *__hidden this, __int32 _Ch);
std::basic_string<wchar_t> *__cdecl ??4?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV01_$$QEAV01__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ??4?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV01_AEBV01__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ??4?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV01_QEB_W_Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr);
std::basic_string<wchar_t> *__cdecl ??4?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV01_V?$initializer_list__W_1__Z(std::basic_string<wchar_t> *__hidden this, std::initializer_list<wchar_t> _Ilist);
std::basic_string<wchar_t> *__cdecl ??4?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV01__W_Z(std::basic_string<wchar_t> *__hidden this, __int16 _Ch);
std::map<int, int> *__cdecl ??4?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAAAEAV01_$$QEAV01__Z(std::map<int, int> *__hidden this, std::map<int, int> *_Right);
std::map<int, int> *__cdecl ??4?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAAAEAV01_AEBV01__Z(std::map<int, int> *__hidden this, const std::map<int, int> *_Right);
std::map<int, int> *__cdecl ??4?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAAAEAV01_V?$initializer_list_U?$pair_$$CBHH_std___1__Z(std::map<int, int> *__hidden this, std::initializer_list<std::pair<const int, int>> _Ilist);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??4?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAAAEAV01_$$QEAV01__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Right);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??4?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAAAEAV01_AEBV01__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Right);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??4?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAAAEAV01_V?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___1__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> _Ilist);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??4?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAAAEAV01_$$QEAV01__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Right);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??4?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAAAEAV01_AEBV01__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Right);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??4?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAAAEAV01_V?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___1__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> _Ilist);
std::map<unsigned long long, unsigned long long> *__cdecl ??4?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAAAEAV01_$$QEAV01__Z(std::map<unsigned long long, unsigned long long> *__hidden this, std::map<unsigned long long, unsigned long long> *_Right);
std::map<unsigned long long, unsigned long long> *__cdecl ??4?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAAAEAV01_AEBV01__Z(std::map<unsigned long long, unsigned long long> *__hidden this, const std::map<unsigned long long, unsigned long long> *_Right);
std::map<unsigned long long, unsigned long long> *__cdecl ??4?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAAAEAV01_V?$initializer_list_U?$pair_$$CB_K_K_std___1__Z(std::map<unsigned long long, unsigned long long> *__hidden this, std::initializer_list<std::pair<const unsigned long long, unsigned long long>> _Ilist);
std::pair<const int, int> *__cdecl ??4?$pair_$$CBHH_std__QEAAAEAU01_AEDU01__Z(std::pair<const int, int> *__hidden this, const std::pair<const int, int> *);
std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ??4?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__QEAAAEAU01_AEDU01__Z(std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *);
std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ??4?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__QEAAAEAU01_AEDU01__Z(std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *);
std::pair<const unsigned long long, unsigned long long> *__cdecl ??4?$pair_$$CB_K_K_std__QEAAAEAU01_AEDU01__Z(std::pair<const unsigned long long, unsigned long long> *__hidden this, const std::pair<const unsigned long long, unsigned long long> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__cdecl ??4?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__V12__std__QEAAAEAU01_AEDU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, const std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??4?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__V12__std__QEAAAEAU01_AEDU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??4?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__V12__std__QEAAAEAU01_AEDU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??4?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__V12__std__QEAAAEAU01_AEDU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??4?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__V12__std__QEAAAEAU01_AEDU01__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??4?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__V12__std__QEAAAEAU01_AEDU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??4?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__V12__std__QEAAAEAU01_AEDU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??4?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__V12__std__QEAAAEAU01_AEDU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??4?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__V12__std__QEAAAEAU01_AEDU01__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *);
qlist<ui_request_t *> *__cdecl ??4?$qlist_PEAVui_request_t____QEAAAEAV0_AEBV0__Z(qlist<ui_request_t *> *__hidden this, const qlist<ui_request_t *> *x);
qrefcnt_t<extlang_t> *__cdecl ??4?$qrefcnt_t_Uextlang_t____QEAAAEAV0_AEBV0__Z(qrefcnt_t<extlang_t> *__hidden this, const qrefcnt_t<extlang_t> *r);
qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__cdecl ??4?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________QEAAAEAV0_AEBV0__Z(qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__hidden this, const qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *r);
qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__cdecl ??4?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________QEAAAEAV0_AEBV0__Z(qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__hidden this, const qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *r);
qrefcnt_t<refcnted_regex_t> *__cdecl ??4?$qrefcnt_t_Vrefcnted_regex_t____QEAAAEAV0_AEBV0__Z(qrefcnt_t<refcnted_regex_t> *__hidden this, const qrefcnt_t<refcnted_regex_t> *r);
qrefcnt_t<source_file_t> *__cdecl ??4?$qrefcnt_t_Vsource_file_t____QEAAAEAV0_AEBV0__Z(qrefcnt_t<source_file_t> *__hidden this, const qrefcnt_t<source_file_t> *r);
qrefcnt_t<source_item_t> *__cdecl ??4?$qrefcnt_t_Vsource_item_t____QEAAAEAV0_AEBV0__Z(qrefcnt_t<source_item_t> *__hidden this, const qrefcnt_t<source_item_t> *r);
qvector<char> *__cdecl ??4?$qvector_D__QEAAAEAV0_$$QEAV0__Z(qvector<char> *__hidden this, qvector<char> *x);
qvector<char> *__cdecl ??4?$qvector_D__QEAAAEAV0_AEBV0__Z(qvector<char> *__hidden this, const qvector<char> *x);
qvector<unsigned char> *__cdecl ??4?$qvector_E__QEAAAEAV0_$$QEAV0__Z(qvector<unsigned char> *__hidden this, qvector<unsigned char> *x);
qvector<unsigned char> *__cdecl ??4?$qvector_E__QEAAAEAV0_AEBV0__Z(qvector<unsigned char> *__hidden this, const qvector<unsigned char> *x);
qvector<int> *__cdecl ??4?$qvector_H__QEAAAEAV0_$$QEAV0__Z(qvector<int> *__hidden this, qvector<int> *x);
qvector<int> *__cdecl ??4?$qvector_H__QEAAAEAV0_AEBV0__Z(qvector<int> *__hidden this, const qvector<int> *x);
qvector<unsigned int> *__cdecl ??4?$qvector_I__QEAAAEAV0_$$QEAV0__Z(qvector<unsigned int> *__hidden this, qvector<unsigned int> *x);
qvector<unsigned int> *__cdecl ??4?$qvector_I__QEAAAEAV0_AEBV0__Z(qvector<unsigned int> *__hidden this, const qvector<unsigned int> *x);
qvector<long long (*)(syntax_highlight_style *, const char *)> *__cdecl ??4?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAAEAV0_$$QEAV0__Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, qvector<long long (*)(syntax_highlight_style *, const char *)> *x);
qvector<long long (*)(syntax_highlight_style *, const char *)> *__cdecl ??4?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAAEAV0_AEBV0__Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, const qvector<long long (*)(syntax_highlight_style *, const char *)> *x);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__cdecl ??4?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAAEAV0_$$QEAV0__Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *x);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__cdecl ??4?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAAEAV0_AEBV0__Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *x);
qvector<bpt_t *> *__cdecl ??4?$qvector_PEAUbpt_t____QEAAAEAV0_$$QEAV0__Z(qvector<bpt_t *> *__hidden this, qvector<bpt_t *> *x);
qvector<bpt_t *> *__cdecl ??4?$qvector_PEAUbpt_t____QEAAAEAV0_AEBV0__Z(qvector<bpt_t *> *__hidden this, const qvector<bpt_t *> *x);
qvector<extlang_t *> *__cdecl ??4?$qvector_PEAUextlang_t____QEAAAEAV0_$$QEAV0__Z(qvector<extlang_t *> *__hidden this, qvector<extlang_t *> *x);
qvector<extlang_t *> *__cdecl ??4?$qvector_PEAUextlang_t____QEAAAEAV0_AEBV0__Z(qvector<extlang_t *> *__hidden this, const qvector<extlang_t *> *x);
qvector<line_rendering_output_entry_t *> *__cdecl ??4?$qvector_PEAUline_rendering_output_entry_t____QEAAAEAV0_$$QEAV0__Z(qvector<line_rendering_output_entry_t *> *__hidden this, qvector<line_rendering_output_entry_t *> *x);
qvector<line_rendering_output_entry_t *> *__cdecl ??4?$qvector_PEAUline_rendering_output_entry_t____QEAAAEAV0_AEBV0__Z(qvector<line_rendering_output_entry_t *> *__hidden this, const qvector<line_rendering_output_entry_t *> *x);
qvector<snapshot_t *> *__cdecl ??4?$qvector_PEAVsnapshot_t____QEAAAEAV0_$$QEAV0__Z(qvector<snapshot_t *> *__hidden this, qvector<snapshot_t *> *x);
qvector<snapshot_t *> *__cdecl ??4?$qvector_PEAVsnapshot_t____QEAAAEAV0_AEBV0__Z(qvector<snapshot_t *> *__hidden this, const qvector<snapshot_t *> *x);
qvector<const char *> *__cdecl ??4?$qvector_PEBD__QEAAAEAV0_$$QEAV0__Z(qvector<const char *> *__hidden this, qvector<const char *> *x);
qvector<const char *> *__cdecl ??4?$qvector_PEBD__QEAAAEAV0_AEBV0__Z(qvector<const char *> *__hidden this, const qvector<const char *> *x);
qvector<const bpt_t *> *__cdecl ??4?$qvector_PEBUbpt_t____QEAAAEAV0_$$QEAV0__Z(qvector<const bpt_t *> *__hidden this, qvector<const bpt_t *> *x);
qvector<const bpt_t *> *__cdecl ??4?$qvector_PEBUbpt_t____QEAAAEAV0_AEBV0__Z(qvector<const bpt_t *> *__hidden this, const qvector<const bpt_t *> *x);
qvector<const rangeset_t *> *__cdecl ??4?$qvector_PEBVrangeset_t____QEAAAEAV0_$$QEAV0__Z(qvector<const rangeset_t *> *__hidden this, qvector<const rangeset_t *> *x);
qvector<const rangeset_t *> *__cdecl ??4?$qvector_PEBVrangeset_t____QEAAAEAV0_AEBV0__Z(qvector<const rangeset_t *> *__hidden this, const qvector<const rangeset_t *> *x);
qvector<const twinline_t *> *__cdecl ??4?$qvector_PEBVtwinline_t____QEAAAEAV0_$$QEAV0__Z(qvector<const twinline_t *> *__hidden this, qvector<const twinline_t *> *x);
qvector<const twinline_t *> *__cdecl ??4?$qvector_PEBVtwinline_t____QEAAAEAV0_AEBV0__Z(qvector<const twinline_t *> *__hidden this, const qvector<const twinline_t *> *x);
qvector<argpart_t> *__cdecl ??4?$qvector_Uargpart_t____QEAAAEAV0_$$QEAV0__Z(qvector<argpart_t> *__hidden this, qvector<argpart_t> *x);
qvector<argpart_t> *__cdecl ??4?$qvector_Uargpart_t____QEAAAEAV0_AEBV0__Z(qvector<argpart_t> *__hidden this, const qvector<argpart_t> *x);
qvector<bpt_t> *__cdecl ??4?$qvector_Ubpt_t____QEAAAEAV0_$$QEAV0__Z(qvector<bpt_t> *__hidden this, qvector<bpt_t> *x);
qvector<bpt_t> *__cdecl ??4?$qvector_Ubpt_t____QEAAAEAV0_AEBV0__Z(qvector<bpt_t> *__hidden this, const qvector<bpt_t> *x);
qvector<bptaddrs_t> *__cdecl ??4?$qvector_Ubptaddrs_t____QEAAAEAV0_$$QEAV0__Z(qvector<bptaddrs_t> *__hidden this, qvector<bptaddrs_t> *x);
qvector<bptaddrs_t> *__cdecl ??4?$qvector_Ubptaddrs_t____QEAAAEAV0_AEBV0__Z(qvector<bptaddrs_t> *__hidden this, const qvector<bptaddrs_t> *x);
qvector<call_stack_info_t> *__cdecl ??4?$qvector_Ucall_stack_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<call_stack_info_t> *__hidden this, qvector<call_stack_info_t> *x);
qvector<call_stack_info_t> *__cdecl ??4?$qvector_Ucall_stack_info_t____QEAAAEAV0_AEBV0__Z(qvector<call_stack_info_t> *__hidden this, const qvector<call_stack_info_t> *x);
qvector<catch_t> *__cdecl ??4?$qvector_Ucatch_t____QEAAAEAV0_$$QEAV0__Z(qvector<catch_t> *__hidden this, qvector<catch_t> *x);
qvector<catch_t> *__cdecl ??4?$qvector_Ucatch_t____QEAAAEAV0_AEBV0__Z(qvector<catch_t> *__hidden this, const qvector<catch_t> *x);
qvector<cfgopt_set_t> *__cdecl ??4?$qvector_Ucfgopt_set_t____QEAAAEAV0_$$QEAV0__Z(qvector<cfgopt_set_t> *__hidden this, qvector<cfgopt_set_t> *x);
qvector<cfgopt_set_t> *__cdecl ??4?$qvector_Ucfgopt_set_t____QEAAAEAV0_AEBV0__Z(qvector<cfgopt_set_t> *__hidden this, const qvector<cfgopt_set_t> *x);
qvector<channel_redir_t> *__cdecl ??4?$qvector_Uchannel_redir_t____QEAAAEAV0_$$QEAV0__Z(qvector<channel_redir_t> *__hidden this, qvector<channel_redir_t> *x);
qvector<channel_redir_t> *__cdecl ??4?$qvector_Uchannel_redir_t____QEAAAEAV0_AEBV0__Z(qvector<channel_redir_t> *__hidden this, const qvector<channel_redir_t> *x);
qvector<cliopt_t> *__cdecl ??4?$qvector_Ucliopt_t____QEAAAEAV0_$$QEAV0__Z(qvector<cliopt_t> *__hidden this, qvector<cliopt_t> *x);
qvector<cliopt_t> *__cdecl ??4?$qvector_Ucliopt_t____QEAAAEAV0_AEBV0__Z(qvector<cliopt_t> *__hidden this, const qvector<cliopt_t> *x);
qvector<compiled_binpat_t> *__cdecl ??4?$qvector_Ucompiled_binpat_t____QEAAAEAV0_$$QEAV0__Z(qvector<compiled_binpat_t> *__hidden this, qvector<compiled_binpat_t> *x);
qvector<compiled_binpat_t> *__cdecl ??4?$qvector_Ucompiled_binpat_t____QEAAAEAV0_AEBV0__Z(qvector<compiled_binpat_t> *__hidden this, const qvector<compiled_binpat_t> *x);
qvector<debug_event_t> *__cdecl ??4?$qvector_Udebug_event_t____QEAAAEAV0_$$QEAV0__Z(qvector<debug_event_t> *__hidden this, qvector<debug_event_t> *x);
qvector<debug_event_t> *__cdecl ??4?$qvector_Udebug_event_t____QEAAAEAV0_AEBV0__Z(qvector<debug_event_t> *__hidden this, const qvector<debug_event_t> *x);
qvector<direntry_t> *__cdecl ??4?$qvector_Udirentry_t____QEAAAEAV0_$$QEAV0__Z(qvector<direntry_t> *__hidden this, qvector<direntry_t> *x);
qvector<direntry_t> *__cdecl ??4?$qvector_Udirentry_t____QEAAAEAV0_AEBV0__Z(qvector<direntry_t> *__hidden this, const qvector<direntry_t> *x);
qvector<dirtree_cursor_t> *__cdecl ??4?$qvector_Udirtree_cursor_t____QEAAAEAV0_$$QEAV0__Z(qvector<dirtree_cursor_t> *__hidden this, qvector<dirtree_cursor_t> *x);
qvector<dirtree_cursor_t> *__cdecl ??4?$qvector_Udirtree_cursor_t____QEAAAEAV0_AEBV0__Z(qvector<dirtree_cursor_t> *__hidden this, const qvector<dirtree_cursor_t> *x);
qvector<ea_name_t> *__cdecl ??4?$qvector_Uea_name_t____QEAAAEAV0_$$QEAV0__Z(qvector<ea_name_t> *__hidden this, qvector<ea_name_t> *x);
qvector<ea_name_t> *__cdecl ??4?$qvector_Uea_name_t____QEAAAEAV0_AEBV0__Z(qvector<ea_name_t> *__hidden this, const qvector<ea_name_t> *x);
qvector<edge_t> *__cdecl ??4?$qvector_Uedge_t____QEAAAEAV0_$$QEAV0__Z(qvector<edge_t> *__hidden this, qvector<edge_t> *x);
qvector<edge_t> *__cdecl ??4?$qvector_Uedge_t____QEAAAEAV0_AEBV0__Z(qvector<edge_t> *__hidden this, const qvector<edge_t> *x);
qvector<enum_member_t> *__cdecl ??4?$qvector_Uenum_member_t____QEAAAEAV0_$$QEAV0__Z(qvector<enum_member_t> *__hidden this, qvector<enum_member_t> *x);
qvector<enum_member_t> *__cdecl ??4?$qvector_Uenum_member_t____QEAAAEAV0_AEBV0__Z(qvector<enum_member_t> *__hidden this, const qvector<enum_member_t> *x);
qvector<exception_info_t> *__cdecl ??4?$qvector_Uexception_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<exception_info_t> *__hidden this, qvector<exception_info_t> *x);
qvector<exception_info_t> *__cdecl ??4?$qvector_Uexception_info_t____QEAAAEAV0_AEBV0__Z(qvector<exception_info_t> *__hidden this, const qvector<exception_info_t> *x);
qvector<fixup_info_t> *__cdecl ??4?$qvector_Ufixup_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<fixup_info_t> *__hidden this, qvector<fixup_info_t> *x);
qvector<fixup_info_t> *__cdecl ??4?$qvector_Ufixup_info_t____QEAAAEAV0_AEBV0__Z(qvector<fixup_info_t> *__hidden this, const qvector<fixup_info_t> *x);
qvector<funcarg_t> *__cdecl ??4?$qvector_Ufuncarg_t____QEAAAEAV0_$$QEAV0__Z(qvector<funcarg_t> *__hidden this, qvector<funcarg_t> *x);
qvector<funcarg_t> *__cdecl ??4?$qvector_Ufuncarg_t____QEAAAEAV0_AEBV0__Z(qvector<funcarg_t> *__hidden this, const qvector<funcarg_t> *x);
qvector<group_crinfo_t> *__cdecl ??4?$qvector_Ugroup_crinfo_t____QEAAAEAV0_$$QEAV0__Z(qvector<group_crinfo_t> *__hidden this, qvector<group_crinfo_t> *x);
qvector<group_crinfo_t> *__cdecl ??4?$qvector_Ugroup_crinfo_t____QEAAAEAV0_AEBV0__Z(qvector<group_crinfo_t> *__hidden this, const qvector<group_crinfo_t> *x);
qvector<idc_global_t> *__cdecl ??4?$qvector_Uidc_global_t____QEAAAEAV0_$$QEAV0__Z(qvector<idc_global_t> *__hidden this, qvector<idc_global_t> *x);
qvector<idc_global_t> *__cdecl ??4?$qvector_Uidc_global_t____QEAAAEAV0_AEBV0__Z(qvector<idc_global_t> *__hidden this, const qvector<idc_global_t> *x);
qvector<idp_desc_t> *__cdecl ??4?$qvector_Uidp_desc_t____QEAAAEAV0_$$QEAV0__Z(qvector<idp_desc_t> *__hidden this, qvector<idp_desc_t> *x);
qvector<idp_desc_t> *__cdecl ??4?$qvector_Uidp_desc_t____QEAAAEAV0_AEBV0__Z(qvector<idp_desc_t> *__hidden this, const qvector<idp_desc_t> *x);
qvector<idp_name_t> *__cdecl ??4?$qvector_Uidp_name_t____QEAAAEAV0_$$QEAV0__Z(qvector<idp_name_t> *__hidden this, qvector<idp_name_t> *x);
qvector<idp_name_t> *__cdecl ??4?$qvector_Uidp_name_t____QEAAAEAV0_AEBV0__Z(qvector<idp_name_t> *__hidden this, const qvector<idp_name_t> *x);
qvector<ioport_bit_t> *__cdecl ??4?$qvector_Uioport_bit_t____QEAAAEAV0_$$QEAV0__Z(qvector<ioport_bit_t> *__hidden this, qvector<ioport_bit_t> *x);
qvector<ioport_bit_t> *__cdecl ??4?$qvector_Uioport_bit_t____QEAAAEAV0_AEBV0__Z(qvector<ioport_bit_t> *__hidden this, const qvector<ioport_bit_t> *x);
qvector<ioport_t> *__cdecl ??4?$qvector_Uioport_t____QEAAAEAV0_$$QEAV0__Z(qvector<ioport_t> *__hidden this, qvector<ioport_t> *x);
qvector<ioport_t> *__cdecl ??4?$qvector_Uioport_t____QEAAAEAV0_AEBV0__Z(qvector<ioport_t> *__hidden this, const qvector<ioport_t> *x);
qvector<jvalue_t> *__cdecl ??4?$qvector_Ujvalue_t____QEAAAEAV0_$$QEAV0__Z(qvector<jvalue_t> *__hidden this, qvector<jvalue_t> *x);
qvector<jvalue_t> *__cdecl ??4?$qvector_Ujvalue_t____QEAAAEAV0_AEBV0__Z(qvector<jvalue_t> *__hidden this, const qvector<jvalue_t> *x);
qvector<ida_syntax_highlighter_t::keywords_style_t> *__cdecl ??4?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAAEAV0_$$QEAV0__Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, qvector<ida_syntax_highlighter_t::keywords_style_t> *x);
qvector<ida_syntax_highlighter_t::keywords_style_t> *__cdecl ??4?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAAEAV0_AEBV0__Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, const qvector<ida_syntax_highlighter_t::keywords_style_t> *x);
qvector<kvp_t> *__cdecl ??4?$qvector_Ukvp_t____QEAAAEAV0_$$QEAV0__Z(qvector<kvp_t> *__hidden this, qvector<kvp_t> *x);
qvector<kvp_t> *__cdecl ??4?$qvector_Ukvp_t____QEAAAEAV0_AEBV0__Z(qvector<kvp_t> *__hidden this, const qvector<kvp_t> *x);
qvector<lochist_entry_t> *__cdecl ??4?$qvector_Ulochist_entry_t____QEAAAEAV0_$$QEAV0__Z(qvector<lochist_entry_t> *__hidden this, qvector<lochist_entry_t> *x);
qvector<lochist_entry_t> *__cdecl ??4?$qvector_Ulochist_entry_t____QEAAAEAV0_AEBV0__Z(qvector<lochist_entry_t> *__hidden this, const qvector<lochist_entry_t> *x);
qvector<lowcnd_t> *__cdecl ??4?$qvector_Ulowcnd_t____QEAAAEAV0_$$QEAV0__Z(qvector<lowcnd_t> *__hidden this, qvector<lowcnd_t> *x);
qvector<lowcnd_t> *__cdecl ??4?$qvector_Ulowcnd_t____QEAAAEAV0_AEBV0__Z(qvector<lowcnd_t> *__hidden this, const qvector<lowcnd_t> *x);
qvector<memory_info_t> *__cdecl ??4?$qvector_Umemory_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<memory_info_t> *__hidden this, qvector<memory_info_t> *x);
qvector<memory_info_t> *__cdecl ??4?$qvector_Umemory_info_t____QEAAAEAV0_AEBV0__Z(qvector<memory_info_t> *__hidden this, const qvector<memory_info_t> *x);
qvector<memreg_info_t> *__cdecl ??4?$qvector_Umemreg_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<memreg_info_t> *__hidden this, qvector<memreg_info_t> *x);
qvector<memreg_info_t> *__cdecl ??4?$qvector_Umemreg_info_t____QEAAAEAV0_AEBV0__Z(qvector<memreg_info_t> *__hidden this, const qvector<memreg_info_t> *x);
qvector<modinfo_t> *__cdecl ??4?$qvector_Umodinfo_t____QEAAAEAV0_$$QEAV0__Z(qvector<modinfo_t> *__hidden this, qvector<modinfo_t> *x);
qvector<modinfo_t> *__cdecl ??4?$qvector_Umodinfo_t____QEAAAEAV0_AEBV0__Z(qvector<modinfo_t> *__hidden this, const qvector<modinfo_t> *x);
qvector<movbpt_info_t> *__cdecl ??4?$qvector_Umovbpt_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<movbpt_info_t> *__hidden this, qvector<movbpt_info_t> *x);
qvector<movbpt_info_t> *__cdecl ??4?$qvector_Umovbpt_info_t____QEAAAEAV0_AEBV0__Z(qvector<movbpt_info_t> *__hidden this, const qvector<movbpt_info_t> *x);
qvector<ida_syntax_highlighter_t::multicmt_t> *__cdecl ??4?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAAEAV0_$$QEAV0__Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, qvector<ida_syntax_highlighter_t::multicmt_t> *x);
qvector<ida_syntax_highlighter_t::multicmt_t> *__cdecl ??4?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAAEAV0_AEBV0__Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, const qvector<ida_syntax_highlighter_t::multicmt_t> *x);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__cdecl ??4?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAAEAV0_$$QEAV0__Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *x);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__cdecl ??4?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAAEAV0_AEBV0__Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *x);
qvector<point_t> *__cdecl ??4?$qvector_Upoint_t____QEAAAEAV0_$$QEAV0__Z(qvector<point_t> *__hidden this, qvector<point_t> *x);
qvector<point_t> *__cdecl ??4?$qvector_Upoint_t____QEAAAEAV0_AEBV0__Z(qvector<point_t> *__hidden this, const qvector<point_t> *x);
qvector<process_info_t> *__cdecl ??4?$qvector_Uprocess_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<process_info_t> *__hidden this, qvector<process_info_t> *x);
qvector<process_info_t> *__cdecl ??4?$qvector_Uprocess_info_t____QEAAAEAV0_AEBV0__Z(qvector<process_info_t> *__hidden this, const qvector<process_info_t> *x);
qvector<qbasic_block_t> *__cdecl ??4?$qvector_Uqbasic_block_t____QEAAAEAV0_$$QEAV0__Z(qvector<qbasic_block_t> *__hidden this, qvector<qbasic_block_t> *x);
qvector<qbasic_block_t> *__cdecl ??4?$qvector_Uqbasic_block_t____QEAAAEAV0_AEBV0__Z(qvector<qbasic_block_t> *__hidden this, const qvector<qbasic_block_t> *x);
qvector<range_t> *__cdecl ??4?$qvector_Urange_t____QEAAAEAV0_$$QEAV0__Z(qvector<range_t> *__hidden this, qvector<range_t> *x);
qvector<range_t> *__cdecl ??4?$qvector_Urange_t____QEAAAEAV0_AEBV0__Z(qvector<range_t> *__hidden this, const qvector<range_t> *x);
qvector<rect_t> *__cdecl ??4?$qvector_Urect_t____QEAAAEAV0_$$QEAV0__Z(qvector<rect_t> *__hidden this, qvector<rect_t> *x);
qvector<rect_t> *__cdecl ??4?$qvector_Urect_t____QEAAAEAV0_AEBV0__Z(qvector<rect_t> *__hidden this, const qvector<rect_t> *x);
qvector<refinfo_desc_t> *__cdecl ??4?$qvector_Urefinfo_desc_t____QEAAAEAV0_$$QEAV0__Z(qvector<refinfo_desc_t> *__hidden this, qvector<refinfo_desc_t> *x);
qvector<refinfo_desc_t> *__cdecl ??4?$qvector_Urefinfo_desc_t____QEAAAEAV0_AEBV0__Z(qvector<refinfo_desc_t> *__hidden this, const qvector<refinfo_desc_t> *x);
qvector<reg_access_t> *__cdecl ??4?$qvector_Ureg_access_t____QEAAAEAV0_$$QEAV0__Z(qvector<reg_access_t> *__hidden this, qvector<reg_access_t> *x);
qvector<reg_access_t> *__cdecl ??4?$qvector_Ureg_access_t____QEAAAEAV0_AEBV0__Z(qvector<reg_access_t> *__hidden this, const qvector<reg_access_t> *x);
qvector<reg_info_t> *__cdecl ??4?$qvector_Ureg_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<reg_info_t> *__hidden this, qvector<reg_info_t> *x);
qvector<reg_info_t> *__cdecl ??4?$qvector_Ureg_info_t____QEAAAEAV0_AEBV0__Z(qvector<reg_info_t> *__hidden this, const qvector<reg_info_t> *x);
qvector<register_info_t> *__cdecl ??4?$qvector_Uregister_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<register_info_t> *__hidden this, qvector<register_info_t> *x);
qvector<register_info_t> *__cdecl ??4?$qvector_Uregister_info_t____QEAAAEAV0_AEBV0__Z(qvector<register_info_t> *__hidden this, const qvector<register_info_t> *x);
qvector<regobj_t> *__cdecl ??4?$qvector_Uregobj_t____QEAAAEAV0_$$QEAV0__Z(qvector<regobj_t> *__hidden this, qvector<regobj_t> *x);
qvector<regobj_t> *__cdecl ??4?$qvector_Uregobj_t____QEAAAEAV0_AEBV0__Z(qvector<regobj_t> *__hidden this, const qvector<regobj_t> *x);
qvector<regval_t> *__cdecl ??4?$qvector_Uregval_t____QEAAAEAV0_$$QEAV0__Z(qvector<regval_t> *__hidden this, qvector<regval_t> *x);
qvector<regval_t> *__cdecl ??4?$qvector_Uregval_t____QEAAAEAV0_AEBV0__Z(qvector<regval_t> *__hidden this, const qvector<regval_t> *x);
qvector<row_info_t> *__cdecl ??4?$qvector_Urow_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<row_info_t> *__hidden this, qvector<row_info_t> *x);
qvector<row_info_t> *__cdecl ??4?$qvector_Urow_info_t____QEAAAEAV0_AEBV0__Z(qvector<row_info_t> *__hidden this, const qvector<row_info_t> *x);
qvector<scattered_segm_t> *__cdecl ??4?$qvector_Uscattered_segm_t____QEAAAEAV0_$$QEAV0__Z(qvector<scattered_segm_t> *__hidden this, qvector<scattered_segm_t> *x);
qvector<scattered_segm_t> *__cdecl ??4?$qvector_Uscattered_segm_t____QEAAAEAV0_AEBV0__Z(qvector<scattered_segm_t> *__hidden this, const qvector<scattered_segm_t> *x);
qvector<segm_move_info_t> *__cdecl ??4?$qvector_Usegm_move_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<segm_move_info_t> *__hidden this, qvector<segm_move_info_t> *x);
qvector<segm_move_info_t> *__cdecl ??4?$qvector_Usegm_move_info_t____QEAAAEAV0_AEBV0__Z(qvector<segm_move_info_t> *__hidden this, const qvector<segm_move_info_t> *x);
qvector<selection_item_t> *__cdecl ??4?$qvector_Uselection_item_t____QEAAAEAV0_$$QEAV0__Z(qvector<selection_item_t> *__hidden this, qvector<selection_item_t> *x);
qvector<selection_item_t> *__cdecl ??4?$qvector_Uselection_item_t____QEAAAEAV0_AEBV0__Z(qvector<selection_item_t> *__hidden this, const qvector<selection_item_t> *x);
qvector<simd_info_t> *__cdecl ??4?$qvector_Usimd_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<simd_info_t> *__hidden this, qvector<simd_info_t> *x);
qvector<simd_info_t> *__cdecl ??4?$qvector_Usimd_info_t____QEAAAEAV0_AEBV0__Z(qvector<simd_info_t> *__hidden this, const qvector<simd_info_t> *x);
qvector<simpleline_t> *__cdecl ??4?$qvector_Usimpleline_t____QEAAAEAV0_$$QEAV0__Z(qvector<simpleline_t> *__hidden this, qvector<simpleline_t> *x);
qvector<simpleline_t> *__cdecl ??4?$qvector_Usimpleline_t____QEAAAEAV0_AEBV0__Z(qvector<simpleline_t> *__hidden this, const qvector<simpleline_t> *x);
qvector<stkpnt_t> *__cdecl ??4?$qvector_Ustkpnt_t____QEAAAEAV0_$$QEAV0__Z(qvector<stkpnt_t> *__hidden this, qvector<stkpnt_t> *x);
qvector<stkpnt_t> *__cdecl ??4?$qvector_Ustkpnt_t____QEAAAEAV0_AEBV0__Z(qvector<stkpnt_t> *__hidden this, const qvector<stkpnt_t> *x);
qvector<tev_info_reg_t> *__cdecl ??4?$qvector_Utev_info_reg_t____QEAAAEAV0_$$QEAV0__Z(qvector<tev_info_reg_t> *__hidden this, qvector<tev_info_reg_t> *x);
qvector<tev_info_reg_t> *__cdecl ??4?$qvector_Utev_info_reg_t____QEAAAEAV0_AEBV0__Z(qvector<tev_info_reg_t> *__hidden this, const qvector<tev_info_reg_t> *x);
qvector<tev_info_t> *__cdecl ??4?$qvector_Utev_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<tev_info_t> *__hidden this, qvector<tev_info_t> *x);
qvector<tev_info_t> *__cdecl ??4?$qvector_Utev_info_t____QEAAAEAV0_AEBV0__Z(qvector<tev_info_t> *__hidden this, const qvector<tev_info_t> *x);
qvector<tev_reg_value_t> *__cdecl ??4?$qvector_Utev_reg_value_t____QEAAAEAV0_$$QEAV0__Z(qvector<tev_reg_value_t> *__hidden this, qvector<tev_reg_value_t> *x);
qvector<tev_reg_value_t> *__cdecl ??4?$qvector_Utev_reg_value_t____QEAAAEAV0_AEBV0__Z(qvector<tev_reg_value_t> *__hidden this, const qvector<tev_reg_value_t> *x);
qvector<thread_name_t> *__cdecl ??4?$qvector_Uthread_name_t____QEAAAEAV0_$$QEAV0__Z(qvector<thread_name_t> *__hidden this, qvector<thread_name_t> *x);
qvector<thread_name_t> *__cdecl ??4?$qvector_Uthread_name_t____QEAAAEAV0_AEBV0__Z(qvector<thread_name_t> *__hidden this, const qvector<thread_name_t> *x);
qvector<token_t> *__cdecl ??4?$qvector_Utoken_t____QEAAAEAV0_$$QEAV0__Z(qvector<token_t> *__hidden this, qvector<token_t> *x);
qvector<token_t> *__cdecl ??4?$qvector_Utoken_t____QEAAAEAV0_AEBV0__Z(qvector<token_t> *__hidden this, const qvector<token_t> *x);
qvector<type_attr_t> *__cdecl ??4?$qvector_Utype_attr_t____QEAAAEAV0_$$QEAV0__Z(qvector<type_attr_t> *__hidden this, qvector<type_attr_t> *x);
qvector<type_attr_t> *__cdecl ??4?$qvector_Utype_attr_t____QEAAAEAV0_AEBV0__Z(qvector<type_attr_t> *__hidden this, const qvector<type_attr_t> *x);
qvector<udt_member_t> *__cdecl ??4?$qvector_Uudt_member_t____QEAAAEAV0_$$QEAV0__Z(qvector<udt_member_t> *__hidden this, qvector<udt_member_t> *x);
qvector<udt_member_t> *__cdecl ??4?$qvector_Uudt_member_t____QEAAAEAV0_AEBV0__Z(qvector<udt_member_t> *__hidden this, const qvector<udt_member_t> *x);
qvector<update_bpt_info_t> *__cdecl ??4?$qvector_Uupdate_bpt_info_t____QEAAAEAV0_$$QEAV0__Z(qvector<update_bpt_info_t> *__hidden this, qvector<update_bpt_info_t> *x);
qvector<update_bpt_info_t> *__cdecl ??4?$qvector_Uupdate_bpt_info_t____QEAAAEAV0_AEBV0__Z(qvector<update_bpt_info_t> *__hidden this, const qvector<update_bpt_info_t> *x);
qvector<xreflist_entry_t> *__cdecl ??4?$qvector_Uxreflist_entry_t____QEAAAEAV0_$$QEAV0__Z(qvector<xreflist_entry_t> *__hidden this, qvector<xreflist_entry_t> *x);
qvector<xreflist_entry_t> *__cdecl ??4?$qvector_Uxreflist_entry_t____QEAAAEAV0_AEBV0__Z(qvector<xreflist_entry_t> *__hidden this, const qvector<xreflist_entry_t> *x);
qvector<_qstring<char>> *__cdecl ??4?$qvector_V?$_qstring_D____QEAAAEAV0_$$QEAV0__Z(qvector<_qstring<char>> *__hidden this, qvector<_qstring<char>> *x);
qvector<_qstring<char>> *__cdecl ??4?$qvector_V?$_qstring_D____QEAAAEAV0_AEBV0__Z(qvector<_qstring<char>> *__hidden this, const qvector<_qstring<char>> *x);
qvector<_qstring<unsigned char>> *__cdecl ??4?$qvector_V?$_qstring_E____QEAAAEAV0_$$QEAV0__Z(qvector<_qstring<unsigned char>> *__hidden this, qvector<_qstring<unsigned char>> *x);
qvector<_qstring<unsigned char>> *__cdecl ??4?$qvector_V?$_qstring_E____QEAAAEAV0_AEBV0__Z(qvector<_qstring<unsigned char>> *__hidden this, const qvector<_qstring<unsigned char>> *x);
qvector<_qstring<wchar_t>> *__cdecl ??4?$qvector_V?$_qstring__W____QEAAAEAV0_$$QEAV0__Z(qvector<_qstring<wchar_t>> *__hidden this, qvector<_qstring<wchar_t>> *x);
qvector<_qstring<wchar_t>> *__cdecl ??4?$qvector_V?$_qstring__W____QEAAAEAV0_AEBV0__Z(qvector<_qstring<wchar_t>> *__hidden this, const qvector<_qstring<wchar_t>> *x);
qvector<qrefcnt_t<source_item_t>> *__cdecl ??4?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAAEAV0_$$QEAV0__Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qvector<qrefcnt_t<source_item_t>> *x);
qvector<qrefcnt_t<source_item_t>> *__cdecl ??4?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAAEAV0_AEBV0__Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, const qvector<qrefcnt_t<source_item_t>> *x);
qvector<qvector<int>> *__cdecl ??4?$qvector_V?$qvector_H____QEAAAEAV0_$$QEAV0__Z(qvector<qvector<int>> *__hidden this, qvector<qvector<int>> *x);
qvector<qvector<int>> *__cdecl ??4?$qvector_V?$qvector_H____QEAAAEAV0_AEBV0__Z(qvector<qvector<int>> *__hidden this, const qvector<qvector<int>> *x);
qvector<qvector<const char *>> *__cdecl ??4?$qvector_V?$qvector_PEBD____QEAAAEAV0_$$QEAV0__Z(qvector<qvector<const char *>> *__hidden this, qvector<qvector<const char *>> *x);
qvector<qvector<const char *>> *__cdecl ??4?$qvector_V?$qvector_PEBD____QEAAAEAV0_AEBV0__Z(qvector<qvector<const char *>> *__hidden this, const qvector<qvector<const char *>> *x);
qvector<qvector<const twinline_t *>> *__cdecl ??4?$qvector_V?$qvector_PEBVtwinline_t______QEAAAEAV0_$$QEAV0__Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<qvector<const twinline_t *>> *x);
qvector<qvector<const twinline_t *>> *__cdecl ??4?$qvector_V?$qvector_PEBVtwinline_t______QEAAAEAV0_AEBV0__Z(qvector<qvector<const twinline_t *>> *__hidden this, const qvector<qvector<const twinline_t *>> *x);
qvector<qvector<long long>> *__cdecl ??4?$qvector_V?$qvector__J____QEAAAEAV0_$$QEAV0__Z(qvector<qvector<long long>> *__hidden this, qvector<qvector<long long>> *x);
qvector<qvector<long long>> *__cdecl ??4?$qvector_V?$qvector__J____QEAAAEAV0_AEBV0__Z(qvector<qvector<long long>> *__hidden this, const qvector<qvector<long long>> *x);
qvector<argloc_t> *__cdecl ??4?$qvector_Vargloc_t____QEAAAEAV0_$$QEAV0__Z(qvector<argloc_t> *__hidden this, qvector<argloc_t> *x);
qvector<argloc_t> *__cdecl ??4?$qvector_Vargloc_t____QEAAAEAV0_AEBV0__Z(qvector<argloc_t> *__hidden this, const qvector<argloc_t> *x);
qvector<intmap_t> *__cdecl ??4?$qvector_Vintmap_t____QEAAAEAV0_$$QEAV0__Z(qvector<intmap_t> *__hidden this, qvector<intmap_t> *x);
qvector<intmap_t> *__cdecl ??4?$qvector_Vintmap_t____QEAAAEAV0_AEBV0__Z(qvector<intmap_t> *__hidden this, const qvector<intmap_t> *x);
qvector<node_set_t> *__cdecl ??4?$qvector_Vnode_set_t____QEAAAEAV0_$$QEAV0__Z(qvector<node_set_t> *__hidden this, qvector<node_set_t> *x);
qvector<node_set_t> *__cdecl ??4?$qvector_Vnode_set_t____QEAAAEAV0_AEBV0__Z(qvector<node_set_t> *__hidden this, const qvector<node_set_t> *x);
qvector<op_t> *__cdecl ??4?$qvector_Vop_t____QEAAAEAV0_$$QEAV0__Z(qvector<op_t> *__hidden this, qvector<op_t> *x);
qvector<op_t> *__cdecl ??4?$qvector_Vop_t____QEAAAEAV0_AEBV0__Z(qvector<op_t> *__hidden this, const qvector<op_t> *x);
qvector<rangeset_t> *__cdecl ??4?$qvector_Vrangeset_t____QEAAAEAV0_$$QEAV0__Z(qvector<rangeset_t> *__hidden this, qvector<rangeset_t> *x);
qvector<rangeset_t> *__cdecl ??4?$qvector_Vrangeset_t____QEAAAEAV0_AEBV0__Z(qvector<rangeset_t> *__hidden this, const qvector<rangeset_t> *x);
qvector<sync_source_t> *__cdecl ??4?$qvector_Vsync_source_t____QEAAAEAV0_$$QEAV0__Z(qvector<sync_source_t> *__hidden this, qvector<sync_source_t> *x);
qvector<sync_source_t> *__cdecl ??4?$qvector_Vsync_source_t____QEAAAEAV0_AEBV0__Z(qvector<sync_source_t> *__hidden this, const qvector<sync_source_t> *x);
qvector<tinfo_t> *__cdecl ??4?$qvector_Vtinfo_t____QEAAAEAV0_$$QEAV0__Z(qvector<tinfo_t> *__hidden this, qvector<tinfo_t> *x);
qvector<tinfo_t> *__cdecl ??4?$qvector_Vtinfo_t____QEAAAEAV0_AEBV0__Z(qvector<tinfo_t> *__hidden this, const qvector<tinfo_t> *x);
qvector<tryblk_t> *__cdecl ??4?$qvector_Vtryblk_t____QEAAAEAV0_$$QEAV0__Z(qvector<tryblk_t> *__hidden this, qvector<tryblk_t> *x);
qvector<tryblk_t> *__cdecl ??4?$qvector_Vtryblk_t____QEAAAEAV0_AEBV0__Z(qvector<tryblk_t> *__hidden this, const qvector<tryblk_t> *x);
qvector<twinline_t> *__cdecl ??4?$qvector_Vtwinline_t____QEAAAEAV0_$$QEAV0__Z(qvector<twinline_t> *__hidden this, qvector<twinline_t> *x);
qvector<twinline_t> *__cdecl ??4?$qvector_Vtwinline_t____QEAAAEAV0_AEBV0__Z(qvector<twinline_t> *__hidden this, const qvector<twinline_t> *x);
qvector<valstr_t> *__cdecl ??4?$qvector_Vvalstr_t____QEAAAEAV0_$$QEAV0__Z(qvector<valstr_t> *__hidden this, qvector<valstr_t> *x);
qvector<valstr_t> *__cdecl ??4?$qvector_Vvalstr_t____QEAAAEAV0_AEBV0__Z(qvector<valstr_t> *__hidden this, const qvector<valstr_t> *x);
qvector<movbpt_code_t> *__cdecl ??4?$qvector_W4movbpt_code_t____QEAAAEAV0_$$QEAV0__Z(qvector<movbpt_code_t> *__hidden this, qvector<movbpt_code_t> *x);
qvector<movbpt_code_t> *__cdecl ??4?$qvector_W4movbpt_code_t____QEAAAEAV0_AEBV0__Z(qvector<movbpt_code_t> *__hidden this, const qvector<movbpt_code_t> *x);
qvector<long long> *__cdecl ??4?$qvector__J__QEAAAEAV0_$$QEAV0__Z(qvector<long long> *__hidden this, qvector<long long> *x);
qvector<long long> *__cdecl ??4?$qvector__J__QEAAAEAV0_AEBV0__Z(qvector<long long> *__hidden this, const qvector<long long> *x);
qvector<unsigned long long> *__cdecl ??4?$qvector__K__QEAAAEAV0_$$QEAV0__Z(qvector<unsigned long long> *__hidden this, qvector<unsigned long long> *x);
qvector<unsigned long long> *__cdecl ??4?$qvector__K__QEAAAEAV0_AEBV0__Z(qvector<unsigned long long> *__hidden this, const qvector<unsigned long long> *x);
qvector<bool> *__cdecl ??4?$qvector__N__QEAAAEAV0_$$QEAV0__Z(qvector<bool> *__hidden this, qvector<bool> *x);
qvector<bool> *__cdecl ??4?$qvector__N__QEAAAEAV0_AEBV0__Z(qvector<bool> *__hidden this, const qvector<bool> *x);
qvector<wchar_t> *__cdecl ??4?$qvector__W__QEAAAEAV0_$$QEAV0__Z(qvector<wchar_t> *__hidden this, qvector<wchar_t> *x);
qvector<wchar_t> *__cdecl ??4?$qvector__W__QEAAAEAV0_AEBV0__Z(qvector<wchar_t> *__hidden this, const qvector<wchar_t> *x);
std::set<int> *__cdecl ??4?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAAAEAV01_$$QEAV01__Z(std::set<int> *__hidden this, std::set<int> *_Right);
std::set<int> *__cdecl ??4?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAAAEAV01_AEBV01__Z(std::set<int> *__hidden this, const std::set<int> *_Right);
std::set<int> *__cdecl ??4?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAAAEAV01_V?$initializer_list_H_1__Z(std::set<int> *__hidden this, std::initializer_list<int> _Ilist);
std::tuple<> *__cdecl ??4?$tuple_$$V_std__QEAAAEAV01_AEBV01__Z(std::tuple<> *__hidden this, const std::tuple<> *);
std::_Container_base12 *__cdecl ??4_Container_base12_std__QEAAAEAU01_AEBU01__Z(std::_Container_base12 *__hidden this, const std::_Container_base12 *);
std::_Fake_proxy_ptr_impl *__cdecl ??4_Fake_proxy_ptr_impl_std__QEAAAEAU01_AEBU01__Z(std::_Fake_proxy_ptr_impl *__hidden this, const std::_Fake_proxy_ptr_impl *);
std::_Iterator_base12 *__cdecl ??4_Iterator_base12_std__QEAAAEAU01_AEBU01__Z(std::_Iterator_base12 *__hidden this, const std::_Iterator_base12 *_Right);
std::_Lockit *__cdecl ??4_Lockit_std__QEAAAEAV01_AEBV01__Z(std::_Lockit *__hidden this, const std::_Lockit *);
argloc_t *__cdecl ??4argloc_t__QEAAAEAV0_AEBV0__Z(argloc_t *__hidden this, const argloc_t *r);
debug_event_t *__cdecl ??4debug_event_t__QEAAAEAU0_AEBU0__Z(debug_event_t *__hidden this, const debug_event_t *r);
edge_infos_wrapper_t *__cdecl ??4edge_infos_wrapper_t__QEAAAEAU0_AEBU0__Z(edge_infos_wrapper_t *__hidden this, const edge_infos_wrapper_t *other);
std::exception *__cdecl ??4exception_std__QEAAAEAV01_AEBV01__Z(std::exception *__hidden this, const std::exception *_Other);
std::exception_ptr *__cdecl ??4exception_ptr_std__QEAAAEAV01_$$T_Z(std::exception_ptr *__hidden this, std::nullptr_t);
std::exception_ptr *__cdecl ??4exception_ptr_std__QEAAAEAV01_AEBV01__Z(std::exception_ptr *__hidden this, const std::exception_ptr *_Rhs);
idc_value_t *__cdecl ??4idc_value_t__QEAAAEAV0_AEBV0__Z(idc_value_t *__hidden this, const idc_value_t *r);
jvalue_t *__cdecl ??4jvalue_t__QEAAAEAU0_AEBU0__Z(jvalue_t *__hidden this, const jvalue_t *o);
lochist_entry_t *__cdecl ??4lochist_entry_t__QEAAAEAU0_AEBU0__Z(lochist_entry_t *__hidden this, const lochist_entry_t *r);
std::nested_exception *__cdecl ??4nested_exception_std__QEAAAEAV01_AEBV01__Z(std::nested_exception *__hidden this, const std::nested_exception *);
rangeset_t *__cdecl ??4rangeset_t__QEAAAEAV0_AEBV0__Z(rangeset_t *__hidden this, const rangeset_t *ivs);
refcnted_regex_t *__cdecl ??4refcnted_regex_t__QEAAAEAV0_AEBV0__Z(refcnted_regex_t *__hidden this, const refcnted_regex_t *);
regarg_t *__cdecl ??4regarg_t__QEAAAEAU0_AEBU0__Z(regarg_t *__hidden this, const regarg_t *r);
regval_t *__cdecl ??4regval_t__QEAAAEAU0_AEBU0__Z(regval_t *__hidden this, const regval_t *r);
regvar_t *__cdecl ??4regvar_t__QEAAAEAU0_AEBU0__Z(regvar_t *__hidden this, const regvar_t *r);
snapshot_t *__cdecl ??4snapshot_t__AEAAAEAV0_AEBV0__Z(snapshot_t *__hidden this, const snapshot_t *);
stkpnt_t *__cdecl ??4stkpnt_t__QEAAAEAU0_AEBU0__Z(stkpnt_t *__hidden this, const stkpnt_t *);
tinfo_t *__cdecl ??4tinfo_t__QEAAAEAV0_AEBV0__Z(tinfo_t *__hidden this, const tinfo_t *r);
tryblk_t *__cdecl ??4tryblk_t__QEAAAEAV0_AEBV0__Z(tryblk_t *__hidden this, const tryblk_t *r);
ui_requests_t *__cdecl ??4ui_requests_t__AEAAAEAV0_AEBV0__Z(ui_requests_t *__hidden this, const ui_requests_t *);
bool __cdecl ??8?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *_Right);
bool __cdecl ??8?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *_Right);
bool __cdecl ??8?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *_Right);
bool __cdecl ??8?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *_Right);
bool __cdecl ??8?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__QEBA_NAEBV01__Z(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *_Right);
bool __cdecl ??8?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEBA_NAEBV01__Z(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *_Right);
bool __cdecl ??8?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEBA_NAEBV01__Z(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *_Right);
bool __cdecl ??8?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEBA_NAEBV01__Z(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *_Right);
bool __cdecl ??8?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEBA_NAEBV01__Z(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *_Right);
bool __cdecl ??8?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEBA_NAEBV01__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *_Right);
bool __cdecl ??8?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEBA_NU_Default_sentinel_1__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, std::_Default_sentinel);
bool __cdecl ??8?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEBA_NAEBV01__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *_Right);
bool __cdecl ??8?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEBA_NU_Default_sentinel_1__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, std::_Default_sentinel);
bool __cdecl ??8?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEBA_NAEBV01__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *_Right);
bool __cdecl ??8?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEBA_NU_Default_sentinel_1__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, std::_Default_sentinel);
bool __cdecl ??8?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEBA_NAEBV01__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *_Right);
bool __cdecl ??8?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEBA_NU_Default_sentinel_1__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, std::_Default_sentinel);
bool __cdecl ??8?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEBA_NAEBV01__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *_Right);
bool __cdecl ??8?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEBA_NU_Default_sentinel_1__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, std::_Default_sentinel);
bool __cdecl ??8?$_qstring_D__QEBA_NAEBV0__Z(const _qstring<char> *__hidden this, const _qstring<char> *r);
bool __cdecl ??8?$_qstring_D__QEBA_NPEBD_Z(const _qstring<char> *__hidden this, char *r);
bool __cdecl ??8?$_qstring_E__QEBA_NAEBV0__Z(const _qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *r);
bool __cdecl ??8?$_qstring_E__QEBA_NPEBE_Z(const _qstring<unsigned char> *__hidden this, unsigned __int8 *r);
bool __cdecl ??8?$_qstring__W__QEBA_NAEBV0__Z(const _qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *r);
bool __cdecl ??8?$_qstring__W__QEBA_NPEB_W_Z(const _qstring<wchar_t> *__hidden this, __int16 *r);
bool __cdecl ??8?$fpos_U_Mbstatet___std__QEBA_NAEBV01__Z(const std::fpos<_Mbstatet> *__hidden this, const std::fpos<_Mbstatet> *_Right);
bool __cdecl ??8?$qlist_PEAVui_request_t____QEBA_NAEBV0__Z(const qlist<ui_request_t *> *__hidden this, const qlist<ui_request_t *> *x);
bool __cdecl ??8?$qvector_D__QEBA_NAEBV0__Z(const qvector<char> *__hidden this, const qvector<char> *r);
bool __cdecl ??8?$qvector_E__QEBA_NAEBV0__Z(const qvector<unsigned char> *__hidden this, const qvector<unsigned char> *r);
bool __cdecl ??8?$qvector_H__QEBA_NAEBV0__Z(const qvector<int> *__hidden this, const qvector<int> *r);
bool __cdecl ??8?$qvector_I__QEBA_NAEBV0__Z(const qvector<unsigned int> *__hidden this, const qvector<unsigned int> *r);
bool __cdecl ??8?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBA_NAEBV0__Z(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, const qvector<long long (*)(syntax_highlight_style *, const char *)> *r);
bool __cdecl ??8?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBA_NAEBV0__Z(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *r);
bool __cdecl ??8?$qvector_PEAUbpt_t____QEBA_NAEBV0__Z(const qvector<bpt_t *> *__hidden this, const qvector<bpt_t *> *r);
bool __cdecl ??8?$qvector_PEAUextlang_t____QEBA_NAEBV0__Z(const qvector<extlang_t *> *__hidden this, const qvector<extlang_t *> *r);
bool __cdecl ??8?$qvector_PEAUline_rendering_output_entry_t____QEBA_NAEBV0__Z(const qvector<line_rendering_output_entry_t *> *__hidden this, const qvector<line_rendering_output_entry_t *> *r);
bool __cdecl ??8?$qvector_PEAVsnapshot_t____QEBA_NAEBV0__Z(const qvector<snapshot_t *> *__hidden this, const qvector<snapshot_t *> *r);
bool __cdecl ??8?$qvector_PEBD__QEBA_NAEBV0__Z(const qvector<const char *> *__hidden this, const qvector<const char *> *r);
bool __cdecl ??8?$qvector_PEBUbpt_t____QEBA_NAEBV0__Z(const qvector<const bpt_t *> *__hidden this, const qvector<const bpt_t *> *r);
bool __cdecl ??8?$qvector_PEBVrangeset_t____QEBA_NAEBV0__Z(const qvector<const rangeset_t *> *__hidden this, const qvector<const rangeset_t *> *r);
bool __cdecl ??8?$qvector_PEBVtwinline_t____QEBA_NAEBV0__Z(const qvector<const twinline_t *> *__hidden this, const qvector<const twinline_t *> *r);
bool __cdecl ??8?$qvector_Uargpart_t____QEBA_NAEBV0__Z(const qvector<argpart_t> *__hidden this, const qvector<argpart_t> *r);
bool __cdecl ??8?$qvector_Ubpt_t____QEBA_NAEBV0__Z(const qvector<bpt_t> *__hidden this, const qvector<bpt_t> *r);
bool __cdecl ??8?$qvector_Ubptaddrs_t____QEBA_NAEBV0__Z(const qvector<bptaddrs_t> *__hidden this, const qvector<bptaddrs_t> *r);
bool __cdecl ??8?$qvector_Ucall_stack_info_t____QEBA_NAEBV0__Z(const qvector<call_stack_info_t> *__hidden this, const qvector<call_stack_info_t> *r);
bool __cdecl ??8?$qvector_Ucatch_t____QEBA_NAEBV0__Z(const qvector<catch_t> *__hidden this, const qvector<catch_t> *r);
bool __cdecl ??8?$qvector_Ucfgopt_set_t____QEBA_NAEBV0__Z(const qvector<cfgopt_set_t> *__hidden this, const qvector<cfgopt_set_t> *r);
bool __cdecl ??8?$qvector_Uchannel_redir_t____QEBA_NAEBV0__Z(const qvector<channel_redir_t> *__hidden this, const qvector<channel_redir_t> *r);
bool __cdecl ??8?$qvector_Ucliopt_t____QEBA_NAEBV0__Z(const qvector<cliopt_t> *__hidden this, const qvector<cliopt_t> *r);
bool __cdecl ??8?$qvector_Ucompiled_binpat_t____QEBA_NAEBV0__Z(const qvector<compiled_binpat_t> *__hidden this, const qvector<compiled_binpat_t> *r);
bool __cdecl ??8?$qvector_Udebug_event_t____QEBA_NAEBV0__Z(const qvector<debug_event_t> *__hidden this, const qvector<debug_event_t> *r);
bool __cdecl ??8?$qvector_Udirentry_t____QEBA_NAEBV0__Z(const qvector<direntry_t> *__hidden this, const qvector<direntry_t> *r);
bool __cdecl ??8?$qvector_Udirtree_cursor_t____QEBA_NAEBV0__Z(const qvector<dirtree_cursor_t> *__hidden this, const qvector<dirtree_cursor_t> *r);
bool __cdecl ??8?$qvector_Uea_name_t____QEBA_NAEBV0__Z(const qvector<ea_name_t> *__hidden this, const qvector<ea_name_t> *r);
bool __cdecl ??8?$qvector_Uedge_t____QEBA_NAEBV0__Z(const qvector<edge_t> *__hidden this, const qvector<edge_t> *r);
bool __cdecl ??8?$qvector_Uenum_member_t____QEBA_NAEBV0__Z(const qvector<enum_member_t> *__hidden this, const qvector<enum_member_t> *r);
bool __cdecl ??8?$qvector_Uexception_info_t____QEBA_NAEBV0__Z(const qvector<exception_info_t> *__hidden this, const qvector<exception_info_t> *r);
bool __cdecl ??8?$qvector_Ufixup_info_t____QEBA_NAEBV0__Z(const qvector<fixup_info_t> *__hidden this, const qvector<fixup_info_t> *r);
bool __cdecl ??8?$qvector_Ufuncarg_t____QEBA_NAEBV0__Z(const qvector<funcarg_t> *__hidden this, const qvector<funcarg_t> *r);
bool __cdecl ??8?$qvector_Ugroup_crinfo_t____QEBA_NAEBV0__Z(const qvector<group_crinfo_t> *__hidden this, const qvector<group_crinfo_t> *r);
bool __cdecl ??8?$qvector_Uidc_global_t____QEBA_NAEBV0__Z(const qvector<idc_global_t> *__hidden this, const qvector<idc_global_t> *r);
bool __cdecl ??8?$qvector_Uidp_desc_t____QEBA_NAEBV0__Z(const qvector<idp_desc_t> *__hidden this, const qvector<idp_desc_t> *r);
bool __cdecl ??8?$qvector_Uidp_name_t____QEBA_NAEBV0__Z(const qvector<idp_name_t> *__hidden this, const qvector<idp_name_t> *r);
bool __cdecl ??8?$qvector_Uioport_bit_t____QEBA_NAEBV0__Z(const qvector<ioport_bit_t> *__hidden this, const qvector<ioport_bit_t> *r);
bool __cdecl ??8?$qvector_Uioport_t____QEBA_NAEBV0__Z(const qvector<ioport_t> *__hidden this, const qvector<ioport_t> *r);
bool __cdecl ??8?$qvector_Ujvalue_t____QEBA_NAEBV0__Z(const qvector<jvalue_t> *__hidden this, const qvector<jvalue_t> *r);
bool __cdecl ??8?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBA_NAEBV0__Z(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, const qvector<ida_syntax_highlighter_t::keywords_style_t> *r);
bool __cdecl ??8?$qvector_Ukvp_t____QEBA_NAEBV0__Z(const qvector<kvp_t> *__hidden this, const qvector<kvp_t> *r);
bool __cdecl ??8?$qvector_Ulochist_entry_t____QEBA_NAEBV0__Z(const qvector<lochist_entry_t> *__hidden this, const qvector<lochist_entry_t> *r);
bool __cdecl ??8?$qvector_Ulowcnd_t____QEBA_NAEBV0__Z(const qvector<lowcnd_t> *__hidden this, const qvector<lowcnd_t> *r);
bool __cdecl ??8?$qvector_Umemory_info_t____QEBA_NAEBV0__Z(const qvector<memory_info_t> *__hidden this, const qvector<memory_info_t> *r);
bool __cdecl ??8?$qvector_Umemreg_info_t____QEBA_NAEBV0__Z(const qvector<memreg_info_t> *__hidden this, const qvector<memreg_info_t> *r);
bool __cdecl ??8?$qvector_Umodinfo_t____QEBA_NAEBV0__Z(const qvector<modinfo_t> *__hidden this, const qvector<modinfo_t> *r);
bool __cdecl ??8?$qvector_Umovbpt_info_t____QEBA_NAEBV0__Z(const qvector<movbpt_info_t> *__hidden this, const qvector<movbpt_info_t> *r);
bool __cdecl ??8?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBA_NAEBV0__Z(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, const qvector<ida_syntax_highlighter_t::multicmt_t> *r);
bool __cdecl ??8?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBA_NAEBV0__Z(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *r);
bool __cdecl ??8?$qvector_Upoint_t____QEBA_NAEBV0__Z(const qvector<point_t> *__hidden this, const qvector<point_t> *r);
bool __cdecl ??8?$qvector_Uprocess_info_t____QEBA_NAEBV0__Z(const qvector<process_info_t> *__hidden this, const qvector<process_info_t> *r);
bool __cdecl ??8?$qvector_Uqbasic_block_t____QEBA_NAEBV0__Z(const qvector<qbasic_block_t> *__hidden this, const qvector<qbasic_block_t> *r);
bool __cdecl ??8?$qvector_Urange_t____QEBA_NAEBV0__Z(const qvector<range_t> *__hidden this, const qvector<range_t> *r);
bool __cdecl ??8?$qvector_Urect_t____QEBA_NAEBV0__Z(const qvector<rect_t> *__hidden this, const qvector<rect_t> *r);
bool __cdecl ??8?$qvector_Urefinfo_desc_t____QEBA_NAEBV0__Z(const qvector<refinfo_desc_t> *__hidden this, const qvector<refinfo_desc_t> *r);
bool __cdecl ??8?$qvector_Ureg_access_t____QEBA_NAEBV0__Z(const qvector<reg_access_t> *__hidden this, const qvector<reg_access_t> *r);
bool __cdecl ??8?$qvector_Ureg_info_t____QEBA_NAEBV0__Z(const qvector<reg_info_t> *__hidden this, const qvector<reg_info_t> *r);
bool __cdecl ??8?$qvector_Uregister_info_t____QEBA_NAEBV0__Z(const qvector<register_info_t> *__hidden this, const qvector<register_info_t> *r);
bool __cdecl ??8?$qvector_Uregobj_t____QEBA_NAEBV0__Z(const qvector<regobj_t> *__hidden this, const qvector<regobj_t> *r);
bool __cdecl ??8?$qvector_Uregval_t____QEBA_NAEBV0__Z(const qvector<regval_t> *__hidden this, const qvector<regval_t> *r);
bool __cdecl ??8?$qvector_Urow_info_t____QEBA_NAEBV0__Z(const qvector<row_info_t> *__hidden this, const qvector<row_info_t> *r);
bool __cdecl ??8?$qvector_Uscattered_segm_t____QEBA_NAEBV0__Z(const qvector<scattered_segm_t> *__hidden this, const qvector<scattered_segm_t> *r);
bool __cdecl ??8?$qvector_Usegm_move_info_t____QEBA_NAEBV0__Z(const qvector<segm_move_info_t> *__hidden this, const qvector<segm_move_info_t> *r);
bool __cdecl ??8?$qvector_Uselection_item_t____QEBA_NAEBV0__Z(const qvector<selection_item_t> *__hidden this, const qvector<selection_item_t> *r);
bool __cdecl ??8?$qvector_Usimd_info_t____QEBA_NAEBV0__Z(const qvector<simd_info_t> *__hidden this, const qvector<simd_info_t> *r);
bool __cdecl ??8?$qvector_Usimpleline_t____QEBA_NAEBV0__Z(const qvector<simpleline_t> *__hidden this, const qvector<simpleline_t> *r);
bool __cdecl ??8?$qvector_Ustkpnt_t____QEBA_NAEBV0__Z(const qvector<stkpnt_t> *__hidden this, const qvector<stkpnt_t> *r);
bool __cdecl ??8?$qvector_Utev_info_reg_t____QEBA_NAEBV0__Z(const qvector<tev_info_reg_t> *__hidden this, const qvector<tev_info_reg_t> *r);
bool __cdecl ??8?$qvector_Utev_info_t____QEBA_NAEBV0__Z(const qvector<tev_info_t> *__hidden this, const qvector<tev_info_t> *r);
bool __cdecl ??8?$qvector_Utev_reg_value_t____QEBA_NAEBV0__Z(const qvector<tev_reg_value_t> *__hidden this, const qvector<tev_reg_value_t> *r);
bool __cdecl ??8?$qvector_Uthread_name_t____QEBA_NAEBV0__Z(const qvector<thread_name_t> *__hidden this, const qvector<thread_name_t> *r);
bool __cdecl ??8?$qvector_Utoken_t____QEBA_NAEBV0__Z(const qvector<token_t> *__hidden this, const qvector<token_t> *r);
bool __cdecl ??8?$qvector_Utype_attr_t____QEBA_NAEBV0__Z(const qvector<type_attr_t> *__hidden this, const qvector<type_attr_t> *r);
bool __cdecl ??8?$qvector_Uudt_member_t____QEBA_NAEBV0__Z(const qvector<udt_member_t> *__hidden this, const qvector<udt_member_t> *r);
bool __cdecl ??8?$qvector_Uupdate_bpt_info_t____QEBA_NAEBV0__Z(const qvector<update_bpt_info_t> *__hidden this, const qvector<update_bpt_info_t> *r);
bool __cdecl ??8?$qvector_Uxreflist_entry_t____QEBA_NAEBV0__Z(const qvector<xreflist_entry_t> *__hidden this, const qvector<xreflist_entry_t> *r);
bool __cdecl ??8?$qvector_V?$_qstring_D____QEBA_NAEBV0__Z(const qvector<_qstring<char>> *__hidden this, const qvector<_qstring<char>> *r);
bool __cdecl ??8?$qvector_V?$_qstring_E____QEBA_NAEBV0__Z(const qvector<_qstring<unsigned char>> *__hidden this, const qvector<_qstring<unsigned char>> *r);
bool __cdecl ??8?$qvector_V?$_qstring__W____QEBA_NAEBV0__Z(const qvector<_qstring<wchar_t>> *__hidden this, const qvector<_qstring<wchar_t>> *r);
bool __cdecl ??8?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBA_NAEBV0__Z(const qvector<qrefcnt_t<source_item_t>> *__hidden this, const qvector<qrefcnt_t<source_item_t>> *r);
bool __cdecl ??8?$qvector_V?$qvector_H____QEBA_NAEBV0__Z(const qvector<qvector<int>> *__hidden this, const qvector<qvector<int>> *r);
bool __cdecl ??8?$qvector_V?$qvector_PEBD____QEBA_NAEBV0__Z(const qvector<qvector<const char *>> *__hidden this, const qvector<qvector<const char *>> *r);
bool __cdecl ??8?$qvector_V?$qvector_PEBVtwinline_t______QEBA_NAEBV0__Z(const qvector<qvector<const twinline_t *>> *__hidden this, const qvector<qvector<const twinline_t *>> *r);
bool __cdecl ??8?$qvector_V?$qvector__J____QEBA_NAEBV0__Z(const qvector<qvector<long long>> *__hidden this, const qvector<qvector<long long>> *r);
bool __cdecl ??8?$qvector_Vargloc_t____QEBA_NAEBV0__Z(const qvector<argloc_t> *__hidden this, const qvector<argloc_t> *r);
bool __cdecl ??8?$qvector_Vintmap_t____QEBA_NAEBV0__Z(const qvector<intmap_t> *__hidden this, const qvector<intmap_t> *r);
bool __cdecl ??8?$qvector_Vnode_set_t____QEBA_NAEBV0__Z(const qvector<node_set_t> *__hidden this, const qvector<node_set_t> *r);
bool __cdecl ??8?$qvector_Vop_t____QEBA_NAEBV0__Z(const qvector<op_t> *__hidden this, const qvector<op_t> *r);
bool __cdecl ??8?$qvector_Vrangeset_t____QEBA_NAEBV0__Z(const qvector<rangeset_t> *__hidden this, const qvector<rangeset_t> *r);
bool __cdecl ??8?$qvector_Vsync_source_t____QEBA_NAEBV0__Z(const qvector<sync_source_t> *__hidden this, const qvector<sync_source_t> *r);
bool __cdecl ??8?$qvector_Vtinfo_t____QEBA_NAEBV0__Z(const qvector<tinfo_t> *__hidden this, const qvector<tinfo_t> *r);
bool __cdecl ??8?$qvector_Vtryblk_t____QEBA_NAEBV0__Z(const qvector<tryblk_t> *__hidden this, const qvector<tryblk_t> *r);
bool __cdecl ??8?$qvector_Vtwinline_t____QEBA_NAEBV0__Z(const qvector<twinline_t> *__hidden this, const qvector<twinline_t> *r);
bool __cdecl ??8?$qvector_Vvalstr_t____QEBA_NAEBV0__Z(const qvector<valstr_t> *__hidden this, const qvector<valstr_t> *r);
bool __cdecl ??8?$qvector_W4movbpt_code_t____QEBA_NAEBV0__Z(const qvector<movbpt_code_t> *__hidden this, const qvector<movbpt_code_t> *r);
bool __cdecl ??8?$qvector__J__QEBA_NAEBV0__Z(const qvector<long long> *__hidden this, const qvector<long long> *r);
bool __cdecl ??8?$qvector__K__QEBA_NAEBV0__Z(const qvector<unsigned long long> *__hidden this, const qvector<unsigned long long> *r);
bool __cdecl ??8?$qvector__N__QEBA_NAEBV0__Z(const qvector<bool> *__hidden this, const qvector<bool> *r);
bool __cdecl ??8?$qvector__W__QEBA_NAEBV0__Z(const qvector<wchar_t> *__hidden this, const qvector<wchar_t> *r);
bool __cdecl ??8TPointDouble__QEBA_NAEBU0__Z(const TPointDouble *__hidden this, const TPointDouble *r);
bool __cdecl ??8argloc_t__QEBA_NAEBV0__Z(const argloc_t *__hidden this, const argloc_t *r);
bool __cdecl ??8bitfield_type_data_t__QEBA_NAEBU0__Z(const bitfield_type_data_t *__hidden this, const bitfield_type_data_t *r);
bool __cdecl ??8bitrange_t__QEBA_NAEBV0__Z(const bitrange_t *__hidden this, const bitrange_t *r);
bool __cdecl ??8bpt_location_t__QEBA_NAEBU0__Z(const bpt_location_t *__hidden this, const bpt_location_t *r);
bool __cdecl ??8call_stack_info_t__QEBA_NAEBU0__Z(const call_stack_info_t *__hidden this, const call_stack_info_t *r);
bool __cdecl ??8compiled_binpat_t__QEBA_NAEBU0__Z(const compiled_binpat_t *__hidden this, const compiled_binpat_t *r);
bool __cdecl ??8custom_data_type_ids_t__QEBA_NAEBU0__Z(const custom_data_type_ids_t *__hidden this, const custom_data_type_ids_t *r);
bool __cdecl ??8custom_refinfo_handler_t__QEBA_NAEBU0__Z(const custom_refinfo_handler_t *__hidden this, const custom_refinfo_handler_t *r);
bool __cdecl ??8data_format_t__QEBA_NAEBU0__Z(const data_format_t *__hidden this, const data_format_t *r);
bool __cdecl ??8data_type_t__QEBA_NAEBU0__Z(const data_type_t *__hidden this, const data_type_t *r);
bool __cdecl ??8direntry_t__QEBA_NAEBU0__Z(const direntry_t *__hidden this, const direntry_t *r);
bool __cdecl ??8dirtree_cursor_t__QEBA_NAEBU0__Z(const dirtree_cursor_t *__hidden this, const dirtree_cursor_t *r);
bool __cdecl ??8edge_layout_point_t__QEBA_NAEBU0__Z(const edge_layout_point_t *__hidden this, const edge_layout_point_t *r);
bool __cdecl ??8edge_t__QEBA_NAEBU0__Z(const edge_t *__hidden this, const edge_t *y);
bool __cdecl ??8enum_const_t__QEBA_NAEBU0__Z(const enum_const_t *__hidden this, const enum_const_t *r);
bool __cdecl ??8enum_member_t__QEBA_NAEBU0__Z(const enum_member_t *__hidden this, const enum_member_t *r);
bool __cdecl ??8fixup_handler_t__QEBA_NAEBU0__Z(const fixup_handler_t *__hidden this, const fixup_handler_t *r);
bool __cdecl ??8fpvalue_t__QEBA_NAEBU0__Z(const fpvalue_t *__hidden this, const fpvalue_t *r);
bool __cdecl ??8func_t__QEBA_NAEBV0__Z(const func_t *__hidden this, const func_t *r);
bool __cdecl ??8funcarg_t__QEBA_NAEBU0__Z(const funcarg_t *__hidden this, const funcarg_t *r);
bool __cdecl ??8graph_item_t__QEBA_NAEBV0__Z(const graph_item_t *__hidden this, const graph_item_t *r);
bool __cdecl ??8graph_location_info_t__QEBA_NAEBU0__Z(const graph_location_info_t *__hidden this, const graph_location_info_t *r);
bool __cdecl ??8interval_t__QEBA_NAEBU0__Z(const interval_t *__hidden this, const interval_t *r);
bool __cdecl ??8line_rendering_output_entry_t__QEBA_NAEBU0__Z(const line_rendering_output_entry_t *__hidden this, const line_rendering_output_entry_t *r);
bool __cdecl ??8lines_rendering_output_t__QEBA_NAEBU0__Z(const lines_rendering_output_t *__hidden this, const lines_rendering_output_t *r);
bool __cdecl ??8memory_info_t__QEBA_NAEBU0__Z(const memory_info_t *__hidden this, const memory_info_t *r);
bool __cdecl ??8netnode__QEBA_NAEAV0__Z(const netnode *__hidden this, netnode *n);
bool __cdecl ??8netnode__QEBA_N_K_Z(const netnode *__hidden this, nodeidx_t x);
bool __cdecl ??8node_iterator__QEBA_NAEBV0__Z(const node_iterator *__hidden this, const node_iterator *n);
bool __cdecl ??8plain_char_ptr_t_ida_syntax_highlighter_t__QEBA_NAEBU01__Z(const ida_syntax_highlighter_t::plain_char_ptr_t *__hidden this, const ida_syntax_highlighter_t::plain_char_ptr_t *r);
bool __cdecl ??8point_t__QEBA_NAEBU0__Z(const point_t *__hidden this, const point_t *r);
bool __cdecl ??8ptr_type_data_t__QEBA_NAEBU0__Z(const ptr_type_data_t *__hidden this, const ptr_type_data_t *r);
bool __cdecl ??8range_t__QEBA_NAEBU0__Z(const range_t *__hidden this, const range_t *r);
bool __cdecl ??8rangeset_t__QEBA_NAEBV0__Z(const rangeset_t *__hidden this, const rangeset_t *aset);
bool __cdecl ??8rect_t__QEBA_NAEBU0__Z(const rect_t *__hidden this, const rect_t *r);
bool __cdecl ??8refinfo_t__QEBA_NAEBU0__Z(const refinfo_t *__hidden this, const refinfo_t *r);
bool __cdecl ??8reg_access_t__QEBA_NAEBU0__Z(const reg_access_t *__hidden this, const reg_access_t *r);
bool __cdecl ??8reg_info_t__QEBA_NAEBU0__Z(const reg_info_t *__hidden this, const reg_info_t *r);
bool __cdecl ??8regarg_t__QEBA_NAEBU0__Z(const regarg_t *__hidden this, const regarg_t *r);
bool __cdecl ??8regval_t__QEBA_NAEBU0__Z(const regval_t *__hidden this, const regval_t *r);
bool __cdecl ??8regvar_t__QEBA_NAEBU0__Z(const regvar_t *__hidden this, const regvar_t *r);
bool __cdecl ??8renderer_info_pos_t__QEBA_NAEBU0__Z(const renderer_info_pos_t *__hidden this, const renderer_info_pos_t *r);
bool __cdecl ??8renderer_info_t__QEBA_NAEBU0__Z(const renderer_info_t *__hidden this, const renderer_info_t *r);
bool __cdecl ??8renderer_pos_info_t__QEBA_NAEBU0__Z(const renderer_pos_info_t *__hidden this, const renderer_pos_info_t *r);
bool __cdecl ??8segm_move_info_t__QEBA_NAEBU0__Z(const segm_move_info_t *__hidden this, const segm_move_info_t *r);
bool __cdecl ??8segment_t__QEBA_NAEBV0__Z(const segment_t *__hidden this, const segment_t *r);
bool __cdecl ??8selection_item_t__QEBA_NAEBU0__Z(const selection_item_t *__hidden this, const selection_item_t *r);
bool __cdecl ??8snapshot_t__QEBA_NAEBV0__Z(const snapshot_t *__hidden this, const snapshot_t *r);
bool __cdecl ??8stkpnt_t__QEBA_NAEBU0__Z(const stkpnt_t *__hidden this, const stkpnt_t *r);
bool __cdecl ??8stkpnts_t__QEBA_NAEBU0__Z(const stkpnts_t *__hidden this, const stkpnts_t *r);
bool __cdecl ??8strpath_t__QEBA_NAEBU0__Z(const strpath_t *__hidden this, const strpath_t *r);
bool __cdecl ??8sync_source_t__QEBA_NAEBV0__Z(const sync_source_t *__hidden this, const sync_source_t *_o);
bool __cdecl ??8tinfo_t__QEBA_NAEBV0__Z(const tinfo_t *__hidden this, const tinfo_t *r);
bool __cdecl ??8udt_member_t__QEBA_NAEBU0__Z(const udt_member_t *__hidden this, const udt_member_t *r);
bool __cdecl ??8update_bpt_info_t__QEBA_NAEBU0__Z(const update_bpt_info_t *__hidden this, const update_bpt_info_t *b);
bool __cdecl ??8xreflist_entry_t__QEBA_NAEBU0__Z(const xreflist_entry_t *__hidden this, const xreflist_entry_t *r);
bool __cdecl ??9?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *_Right);
bool __cdecl ??9?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *_Right);
bool __cdecl ??9?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *_Right);
bool __cdecl ??9?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *_Right);
bool __cdecl ??9?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__QEBA_NAEBV01__Z(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *_Right);
bool __cdecl ??9?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEBA_NAEBV01__Z(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *_Right);
bool __cdecl ??9?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEBA_NAEBV01__Z(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *_Right);
bool __cdecl ??9?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEBA_NAEBV01__Z(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *_Right);
bool __cdecl ??9?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEBA_NAEBV01__Z(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *_Right);
bool __cdecl ??9?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEBA_NAEBV01__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *_Right);
bool __cdecl ??9?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEBA_NU_Default_sentinel_1__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, std::_Default_sentinel);
bool __cdecl ??9?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEBA_NAEBV01__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *_Right);
bool __cdecl ??9?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEBA_NU_Default_sentinel_1__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, std::_Default_sentinel);
bool __cdecl ??9?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEBA_NAEBV01__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *_Right);
bool __cdecl ??9?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEBA_NU_Default_sentinel_1__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, std::_Default_sentinel);
bool __cdecl ??9?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEBA_NAEBV01__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *_Right);
bool __cdecl ??9?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEBA_NU_Default_sentinel_1__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, std::_Default_sentinel);
bool __cdecl ??9?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEBA_NAEBV01__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *_Right);
bool __cdecl ??9?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEBA_NU_Default_sentinel_1__Z(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, std::_Default_sentinel);
bool __cdecl ??9?$_qstring_D__QEBA_NAEBV0__Z(const _qstring<char> *__hidden this, const _qstring<char> *r);
bool __cdecl ??9?$_qstring_D__QEBA_NPEBD_Z(const _qstring<char> *__hidden this, char *r);
bool __cdecl ??9?$_qstring_E__QEBA_NAEBV0__Z(const _qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *r);
bool __cdecl ??9?$_qstring_E__QEBA_NPEBE_Z(const _qstring<unsigned char> *__hidden this, unsigned __int8 *r);
bool __cdecl ??9?$_qstring__W__QEBA_NAEBV0__Z(const _qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *r);
bool __cdecl ??9?$_qstring__W__QEBA_NPEB_W_Z(const _qstring<wchar_t> *__hidden this, __int16 *r);
bool __cdecl ??9?$fpos_U_Mbstatet___std__QEBA_NAEBV01__Z(const std::fpos<_Mbstatet> *__hidden this, const std::fpos<_Mbstatet> *_Right);
bool __cdecl ??9?$qlist_PEAVui_request_t____QEBA_NAEBV0__Z(const qlist<ui_request_t *> *__hidden this, const qlist<ui_request_t *> *x);
bool __cdecl ??9?$qvector_D__QEBA_NAEBV0__Z(const qvector<char> *__hidden this, const qvector<char> *r);
bool __cdecl ??9?$qvector_E__QEBA_NAEBV0__Z(const qvector<unsigned char> *__hidden this, const qvector<unsigned char> *r);
bool __cdecl ??9?$qvector_H__QEBA_NAEBV0__Z(const qvector<int> *__hidden this, const qvector<int> *r);
bool __cdecl ??9?$qvector_I__QEBA_NAEBV0__Z(const qvector<unsigned int> *__hidden this, const qvector<unsigned int> *r);
bool __cdecl ??9?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBA_NAEBV0__Z(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, const qvector<long long (*)(syntax_highlight_style *, const char *)> *r);
bool __cdecl ??9?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBA_NAEBV0__Z(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *r);
bool __cdecl ??9?$qvector_PEAUbpt_t____QEBA_NAEBV0__Z(const qvector<bpt_t *> *__hidden this, const qvector<bpt_t *> *r);
bool __cdecl ??9?$qvector_PEAUextlang_t____QEBA_NAEBV0__Z(const qvector<extlang_t *> *__hidden this, const qvector<extlang_t *> *r);
bool __cdecl ??9?$qvector_PEAUline_rendering_output_entry_t____QEBA_NAEBV0__Z(const qvector<line_rendering_output_entry_t *> *__hidden this, const qvector<line_rendering_output_entry_t *> *r);
bool __cdecl ??9?$qvector_PEAVsnapshot_t____QEBA_NAEBV0__Z(const qvector<snapshot_t *> *__hidden this, const qvector<snapshot_t *> *r);
bool __cdecl ??9?$qvector_PEBD__QEBA_NAEBV0__Z(const qvector<const char *> *__hidden this, const qvector<const char *> *r);
bool __cdecl ??9?$qvector_PEBUbpt_t____QEBA_NAEBV0__Z(const qvector<const bpt_t *> *__hidden this, const qvector<const bpt_t *> *r);
bool __cdecl ??9?$qvector_PEBVrangeset_t____QEBA_NAEBV0__Z(const qvector<const rangeset_t *> *__hidden this, const qvector<const rangeset_t *> *r);
bool __cdecl ??9?$qvector_PEBVtwinline_t____QEBA_NAEBV0__Z(const qvector<const twinline_t *> *__hidden this, const qvector<const twinline_t *> *r);
bool __cdecl ??9?$qvector_Uargpart_t____QEBA_NAEBV0__Z(const qvector<argpart_t> *__hidden this, const qvector<argpart_t> *r);
bool __cdecl ??9?$qvector_Ubpt_t____QEBA_NAEBV0__Z(const qvector<bpt_t> *__hidden this, const qvector<bpt_t> *r);
bool __cdecl ??9?$qvector_Ubptaddrs_t____QEBA_NAEBV0__Z(const qvector<bptaddrs_t> *__hidden this, const qvector<bptaddrs_t> *r);
bool __cdecl ??9?$qvector_Ucall_stack_info_t____QEBA_NAEBV0__Z(const qvector<call_stack_info_t> *__hidden this, const qvector<call_stack_info_t> *r);
bool __cdecl ??9?$qvector_Ucatch_t____QEBA_NAEBV0__Z(const qvector<catch_t> *__hidden this, const qvector<catch_t> *r);
bool __cdecl ??9?$qvector_Ucfgopt_set_t____QEBA_NAEBV0__Z(const qvector<cfgopt_set_t> *__hidden this, const qvector<cfgopt_set_t> *r);
bool __cdecl ??9?$qvector_Uchannel_redir_t____QEBA_NAEBV0__Z(const qvector<channel_redir_t> *__hidden this, const qvector<channel_redir_t> *r);
bool __cdecl ??9?$qvector_Ucliopt_t____QEBA_NAEBV0__Z(const qvector<cliopt_t> *__hidden this, const qvector<cliopt_t> *r);
bool __cdecl ??9?$qvector_Ucompiled_binpat_t____QEBA_NAEBV0__Z(const qvector<compiled_binpat_t> *__hidden this, const qvector<compiled_binpat_t> *r);
bool __cdecl ??9?$qvector_Udebug_event_t____QEBA_NAEBV0__Z(const qvector<debug_event_t> *__hidden this, const qvector<debug_event_t> *r);
bool __cdecl ??9?$qvector_Udirentry_t____QEBA_NAEBV0__Z(const qvector<direntry_t> *__hidden this, const qvector<direntry_t> *r);
bool __cdecl ??9?$qvector_Udirtree_cursor_t____QEBA_NAEBV0__Z(const qvector<dirtree_cursor_t> *__hidden this, const qvector<dirtree_cursor_t> *r);
bool __cdecl ??9?$qvector_Uea_name_t____QEBA_NAEBV0__Z(const qvector<ea_name_t> *__hidden this, const qvector<ea_name_t> *r);
bool __cdecl ??9?$qvector_Uedge_t____QEBA_NAEBV0__Z(const qvector<edge_t> *__hidden this, const qvector<edge_t> *r);
bool __cdecl ??9?$qvector_Uenum_member_t____QEBA_NAEBV0__Z(const qvector<enum_member_t> *__hidden this, const qvector<enum_member_t> *r);
bool __cdecl ??9?$qvector_Uexception_info_t____QEBA_NAEBV0__Z(const qvector<exception_info_t> *__hidden this, const qvector<exception_info_t> *r);
bool __cdecl ??9?$qvector_Ufixup_info_t____QEBA_NAEBV0__Z(const qvector<fixup_info_t> *__hidden this, const qvector<fixup_info_t> *r);
bool __cdecl ??9?$qvector_Ufuncarg_t____QEBA_NAEBV0__Z(const qvector<funcarg_t> *__hidden this, const qvector<funcarg_t> *r);
bool __cdecl ??9?$qvector_Ugroup_crinfo_t____QEBA_NAEBV0__Z(const qvector<group_crinfo_t> *__hidden this, const qvector<group_crinfo_t> *r);
bool __cdecl ??9?$qvector_Uidc_global_t____QEBA_NAEBV0__Z(const qvector<idc_global_t> *__hidden this, const qvector<idc_global_t> *r);
bool __cdecl ??9?$qvector_Uidp_desc_t____QEBA_NAEBV0__Z(const qvector<idp_desc_t> *__hidden this, const qvector<idp_desc_t> *r);
bool __cdecl ??9?$qvector_Uidp_name_t____QEBA_NAEBV0__Z(const qvector<idp_name_t> *__hidden this, const qvector<idp_name_t> *r);
bool __cdecl ??9?$qvector_Uioport_bit_t____QEBA_NAEBV0__Z(const qvector<ioport_bit_t> *__hidden this, const qvector<ioport_bit_t> *r);
bool __cdecl ??9?$qvector_Uioport_t____QEBA_NAEBV0__Z(const qvector<ioport_t> *__hidden this, const qvector<ioport_t> *r);
bool __cdecl ??9?$qvector_Ujvalue_t____QEBA_NAEBV0__Z(const qvector<jvalue_t> *__hidden this, const qvector<jvalue_t> *r);
bool __cdecl ??9?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBA_NAEBV0__Z(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, const qvector<ida_syntax_highlighter_t::keywords_style_t> *r);
bool __cdecl ??9?$qvector_Ukvp_t____QEBA_NAEBV0__Z(const qvector<kvp_t> *__hidden this, const qvector<kvp_t> *r);
bool __cdecl ??9?$qvector_Ulochist_entry_t____QEBA_NAEBV0__Z(const qvector<lochist_entry_t> *__hidden this, const qvector<lochist_entry_t> *r);
bool __cdecl ??9?$qvector_Ulowcnd_t____QEBA_NAEBV0__Z(const qvector<lowcnd_t> *__hidden this, const qvector<lowcnd_t> *r);
bool __cdecl ??9?$qvector_Umemory_info_t____QEBA_NAEBV0__Z(const qvector<memory_info_t> *__hidden this, const qvector<memory_info_t> *r);
bool __cdecl ??9?$qvector_Umemreg_info_t____QEBA_NAEBV0__Z(const qvector<memreg_info_t> *__hidden this, const qvector<memreg_info_t> *r);
bool __cdecl ??9?$qvector_Umodinfo_t____QEBA_NAEBV0__Z(const qvector<modinfo_t> *__hidden this, const qvector<modinfo_t> *r);
bool __cdecl ??9?$qvector_Umovbpt_info_t____QEBA_NAEBV0__Z(const qvector<movbpt_info_t> *__hidden this, const qvector<movbpt_info_t> *r);
bool __cdecl ??9?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBA_NAEBV0__Z(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, const qvector<ida_syntax_highlighter_t::multicmt_t> *r);
bool __cdecl ??9?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBA_NAEBV0__Z(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *r);
bool __cdecl ??9?$qvector_Upoint_t____QEBA_NAEBV0__Z(const qvector<point_t> *__hidden this, const qvector<point_t> *r);
bool __cdecl ??9?$qvector_Uprocess_info_t____QEBA_NAEBV0__Z(const qvector<process_info_t> *__hidden this, const qvector<process_info_t> *r);
bool __cdecl ??9?$qvector_Uqbasic_block_t____QEBA_NAEBV0__Z(const qvector<qbasic_block_t> *__hidden this, const qvector<qbasic_block_t> *r);
bool __cdecl ??9?$qvector_Urange_t____QEBA_NAEBV0__Z(const qvector<range_t> *__hidden this, const qvector<range_t> *r);
bool __cdecl ??9?$qvector_Urect_t____QEBA_NAEBV0__Z(const qvector<rect_t> *__hidden this, const qvector<rect_t> *r);
bool __cdecl ??9?$qvector_Urefinfo_desc_t____QEBA_NAEBV0__Z(const qvector<refinfo_desc_t> *__hidden this, const qvector<refinfo_desc_t> *r);
bool __cdecl ??9?$qvector_Ureg_access_t____QEBA_NAEBV0__Z(const qvector<reg_access_t> *__hidden this, const qvector<reg_access_t> *r);
bool __cdecl ??9?$qvector_Ureg_info_t____QEBA_NAEBV0__Z(const qvector<reg_info_t> *__hidden this, const qvector<reg_info_t> *r);
bool __cdecl ??9?$qvector_Uregister_info_t____QEBA_NAEBV0__Z(const qvector<register_info_t> *__hidden this, const qvector<register_info_t> *r);
bool __cdecl ??9?$qvector_Uregobj_t____QEBA_NAEBV0__Z(const qvector<regobj_t> *__hidden this, const qvector<regobj_t> *r);
bool __cdecl ??9?$qvector_Uregval_t____QEBA_NAEBV0__Z(const qvector<regval_t> *__hidden this, const qvector<regval_t> *r);
bool __cdecl ??9?$qvector_Urow_info_t____QEBA_NAEBV0__Z(const qvector<row_info_t> *__hidden this, const qvector<row_info_t> *r);
bool __cdecl ??9?$qvector_Uscattered_segm_t____QEBA_NAEBV0__Z(const qvector<scattered_segm_t> *__hidden this, const qvector<scattered_segm_t> *r);
bool __cdecl ??9?$qvector_Usegm_move_info_t____QEBA_NAEBV0__Z(const qvector<segm_move_info_t> *__hidden this, const qvector<segm_move_info_t> *r);
bool __cdecl ??9?$qvector_Uselection_item_t____QEBA_NAEBV0__Z(const qvector<selection_item_t> *__hidden this, const qvector<selection_item_t> *r);
bool __cdecl ??9?$qvector_Usimd_info_t____QEBA_NAEBV0__Z(const qvector<simd_info_t> *__hidden this, const qvector<simd_info_t> *r);
bool __cdecl ??9?$qvector_Usimpleline_t____QEBA_NAEBV0__Z(const qvector<simpleline_t> *__hidden this, const qvector<simpleline_t> *r);
bool __cdecl ??9?$qvector_Ustkpnt_t____QEBA_NAEBV0__Z(const qvector<stkpnt_t> *__hidden this, const qvector<stkpnt_t> *r);
bool __cdecl ??9?$qvector_Utev_info_reg_t____QEBA_NAEBV0__Z(const qvector<tev_info_reg_t> *__hidden this, const qvector<tev_info_reg_t> *r);
bool __cdecl ??9?$qvector_Utev_info_t____QEBA_NAEBV0__Z(const qvector<tev_info_t> *__hidden this, const qvector<tev_info_t> *r);
bool __cdecl ??9?$qvector_Utev_reg_value_t____QEBA_NAEBV0__Z(const qvector<tev_reg_value_t> *__hidden this, const qvector<tev_reg_value_t> *r);
bool __cdecl ??9?$qvector_Uthread_name_t____QEBA_NAEBV0__Z(const qvector<thread_name_t> *__hidden this, const qvector<thread_name_t> *r);
bool __cdecl ??9?$qvector_Utoken_t____QEBA_NAEBV0__Z(const qvector<token_t> *__hidden this, const qvector<token_t> *r);
bool __cdecl ??9?$qvector_Utype_attr_t____QEBA_NAEBV0__Z(const qvector<type_attr_t> *__hidden this, const qvector<type_attr_t> *r);
bool __cdecl ??9?$qvector_Uudt_member_t____QEBA_NAEBV0__Z(const qvector<udt_member_t> *__hidden this, const qvector<udt_member_t> *r);
bool __cdecl ??9?$qvector_Uupdate_bpt_info_t____QEBA_NAEBV0__Z(const qvector<update_bpt_info_t> *__hidden this, const qvector<update_bpt_info_t> *r);
bool __cdecl ??9?$qvector_Uxreflist_entry_t____QEBA_NAEBV0__Z(const qvector<xreflist_entry_t> *__hidden this, const qvector<xreflist_entry_t> *r);
bool __cdecl ??9?$qvector_V?$_qstring_D____QEBA_NAEBV0__Z(const qvector<_qstring<char>> *__hidden this, const qvector<_qstring<char>> *r);
bool __cdecl ??9?$qvector_V?$_qstring_E____QEBA_NAEBV0__Z(const qvector<_qstring<unsigned char>> *__hidden this, const qvector<_qstring<unsigned char>> *r);
bool __cdecl ??9?$qvector_V?$_qstring__W____QEBA_NAEBV0__Z(const qvector<_qstring<wchar_t>> *__hidden this, const qvector<_qstring<wchar_t>> *r);
bool __cdecl ??9?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBA_NAEBV0__Z(const qvector<qrefcnt_t<source_item_t>> *__hidden this, const qvector<qrefcnt_t<source_item_t>> *r);
bool __cdecl ??9?$qvector_V?$qvector_H____QEBA_NAEBV0__Z(const qvector<qvector<int>> *__hidden this, const qvector<qvector<int>> *r);
bool __cdecl ??9?$qvector_V?$qvector_PEBD____QEBA_NAEBV0__Z(const qvector<qvector<const char *>> *__hidden this, const qvector<qvector<const char *>> *r);
bool __cdecl ??9?$qvector_V?$qvector_PEBVtwinline_t______QEBA_NAEBV0__Z(const qvector<qvector<const twinline_t *>> *__hidden this, const qvector<qvector<const twinline_t *>> *r);
bool __cdecl ??9?$qvector_V?$qvector__J____QEBA_NAEBV0__Z(const qvector<qvector<long long>> *__hidden this, const qvector<qvector<long long>> *r);
bool __cdecl ??9?$qvector_Vargloc_t____QEBA_NAEBV0__Z(const qvector<argloc_t> *__hidden this, const qvector<argloc_t> *r);
bool __cdecl ??9?$qvector_Vintmap_t____QEBA_NAEBV0__Z(const qvector<intmap_t> *__hidden this, const qvector<intmap_t> *r);
bool __cdecl ??9?$qvector_Vnode_set_t____QEBA_NAEBV0__Z(const qvector<node_set_t> *__hidden this, const qvector<node_set_t> *r);
bool __cdecl ??9?$qvector_Vop_t____QEBA_NAEBV0__Z(const qvector<op_t> *__hidden this, const qvector<op_t> *r);
bool __cdecl ??9?$qvector_Vrangeset_t____QEBA_NAEBV0__Z(const qvector<rangeset_t> *__hidden this, const qvector<rangeset_t> *r);
bool __cdecl ??9?$qvector_Vsync_source_t____QEBA_NAEBV0__Z(const qvector<sync_source_t> *__hidden this, const qvector<sync_source_t> *r);
bool __cdecl ??9?$qvector_Vtinfo_t____QEBA_NAEBV0__Z(const qvector<tinfo_t> *__hidden this, const qvector<tinfo_t> *r);
bool __cdecl ??9?$qvector_Vtryblk_t____QEBA_NAEBV0__Z(const qvector<tryblk_t> *__hidden this, const qvector<tryblk_t> *r);
bool __cdecl ??9?$qvector_Vtwinline_t____QEBA_NAEBV0__Z(const qvector<twinline_t> *__hidden this, const qvector<twinline_t> *r);
bool __cdecl ??9?$qvector_Vvalstr_t____QEBA_NAEBV0__Z(const qvector<valstr_t> *__hidden this, const qvector<valstr_t> *r);
bool __cdecl ??9?$qvector_W4movbpt_code_t____QEBA_NAEBV0__Z(const qvector<movbpt_code_t> *__hidden this, const qvector<movbpt_code_t> *r);
bool __cdecl ??9?$qvector__J__QEBA_NAEBV0__Z(const qvector<long long> *__hidden this, const qvector<long long> *r);
bool __cdecl ??9?$qvector__K__QEBA_NAEBV0__Z(const qvector<unsigned long long> *__hidden this, const qvector<unsigned long long> *r);
bool __cdecl ??9?$qvector__N__QEBA_NAEBV0__Z(const qvector<bool> *__hidden this, const qvector<bool> *r);
bool __cdecl ??9?$qvector__W__QEBA_NAEBV0__Z(const qvector<wchar_t> *__hidden this, const qvector<wchar_t> *r);
bool __cdecl ??9TPointDouble__QEBA_NAEBU0__Z(const TPointDouble *__hidden this, const TPointDouble *r);
bool __cdecl ??9argloc_t__QEBA_NAEBV0__Z(const argloc_t *__hidden this, const argloc_t *r);
bool __cdecl ??9bitfield_type_data_t__QEBA_NAEBU0__Z(const bitfield_type_data_t *__hidden this, const bitfield_type_data_t *r);
bool __cdecl ??9bitrange_t__QEBA_NAEBV0__Z(const bitrange_t *__hidden this, const bitrange_t *r);
bool __cdecl ??9bpt_location_t__QEBA_NAEBU0__Z(const bpt_location_t *__hidden this, const bpt_location_t *r);
bool __cdecl ??9call_stack_info_t__QEBA_NAEBU0__Z(const call_stack_info_t *__hidden this, const call_stack_info_t *r);
bool __cdecl ??9compiled_binpat_t__QEBA_NAEBU0__Z(const compiled_binpat_t *__hidden this, const compiled_binpat_t *r);
bool __cdecl ??9custom_data_type_ids_t__QEBA_NAEBU0__Z(const custom_data_type_ids_t *__hidden this, const custom_data_type_ids_t *r);
bool __cdecl ??9custom_refinfo_handler_t__QEBA_NAEBU0__Z(const custom_refinfo_handler_t *__hidden this, const custom_refinfo_handler_t *r);
bool __cdecl ??9data_format_t__QEBA_NAEBU0__Z(const data_format_t *__hidden this, const data_format_t *r);
bool __cdecl ??9data_type_t__QEBA_NAEBU0__Z(const data_type_t *__hidden this, const data_type_t *r);
bool __cdecl ??9direntry_t__QEBA_NAEBU0__Z(const direntry_t *__hidden this, const direntry_t *r);
bool __cdecl ??9dirtree_cursor_t__QEBA_NAEBU0__Z(const dirtree_cursor_t *__hidden this, const dirtree_cursor_t *r);
bool __cdecl ??9edge_layout_point_t__QEBA_NAEBU0__Z(const edge_layout_point_t *__hidden this, const edge_layout_point_t *r);
bool __cdecl ??9edge_t__QEBA_NAEBU0__Z(const edge_t *__hidden this, const edge_t *y);
bool __cdecl ??9enum_const_t__QEBA_NAEBU0__Z(const enum_const_t *__hidden this, const enum_const_t *r);
bool __cdecl ??9enum_member_t__QEBA_NAEBU0__Z(const enum_member_t *__hidden this, const enum_member_t *r);
bool __cdecl ??9fixup_handler_t__QEBA_NAEBU0__Z(const fixup_handler_t *__hidden this, const fixup_handler_t *r);
bool __cdecl ??9fpvalue_t__QEBA_NAEBU0__Z(const fpvalue_t *__hidden this, const fpvalue_t *r);
bool __cdecl ??9func_t__QEBA_NAEBV0__Z(const func_t *__hidden this, const func_t *r);
bool __cdecl ??9funcarg_t__QEBA_NAEBU0__Z(const funcarg_t *__hidden this, const funcarg_t *r);
bool __cdecl ??9graph_location_info_t__QEBA_NAEBU0__Z(const graph_location_info_t *__hidden this, const graph_location_info_t *r);
bool __cdecl ??9interval_t__QEBA_NAEBU0__Z(const interval_t *__hidden this, const interval_t *r);
bool __cdecl ??9line_rendering_output_entry_t__QEBA_NAEBU0__Z(const line_rendering_output_entry_t *__hidden this, const line_rendering_output_entry_t *r);
bool __cdecl ??9lines_rendering_output_t__QEBA_NAEBU0__Z(const lines_rendering_output_t *__hidden this, const lines_rendering_output_t *r);
bool __cdecl ??9memory_info_t__QEBA_NAEBU0__Z(const memory_info_t *__hidden this, const memory_info_t *r);
bool __cdecl ??9netnode__QEBA_NAEAV0__Z(const netnode *__hidden this, netnode *n);
bool __cdecl ??9netnode__QEBA_N_K_Z(const netnode *__hidden this, nodeidx_t x);
bool __cdecl ??9node_iterator__QEBA_NAEBV0__Z(const node_iterator *__hidden this, const node_iterator *n);
bool __cdecl ??9point_t__QEBA_NAEBU0__Z(const point_t *__hidden this, const point_t *r);
bool __cdecl ??9ptr_type_data_t__QEBA_NAEBU0__Z(const ptr_type_data_t *__hidden this, const ptr_type_data_t *r);
bool __cdecl ??9range_t__QEBA_NAEBU0__Z(const range_t *__hidden this, const range_t *r);
bool __cdecl ??9rangeset_t__QEBA_NAEBV0__Z(const rangeset_t *__hidden this, const rangeset_t *aset);
bool __cdecl ??9rect_t__QEBA_NAEBU0__Z(const rect_t *__hidden this, const rect_t *r);
bool __cdecl ??9refinfo_t__QEBA_NAEBU0__Z(const refinfo_t *__hidden this, const refinfo_t *r);
bool __cdecl ??9reg_access_t__QEBA_NAEBU0__Z(const reg_access_t *__hidden this, const reg_access_t *r);
bool __cdecl ??9reg_info_t__QEBA_NAEBU0__Z(const reg_info_t *__hidden this, const reg_info_t *r);
bool __cdecl ??9regarg_t__QEBA_NAEBU0__Z(const regarg_t *__hidden this, const regarg_t *r);
bool __cdecl ??9regval_t__QEBA_NAEBU0__Z(const regval_t *__hidden this, const regval_t *r);
bool __cdecl ??9regvar_t__QEBA_NAEBU0__Z(const regvar_t *__hidden this, const regvar_t *r);
bool __cdecl ??9renderer_info_pos_t__QEBA_NAEBU0__Z(const renderer_info_pos_t *__hidden this, const renderer_info_pos_t *r);
bool __cdecl ??9renderer_info_t__QEBA_NAEBU0__Z(const renderer_info_t *__hidden this, const renderer_info_t *r);
bool __cdecl ??9renderer_pos_info_t__QEBA_NAEBU0__Z(const renderer_pos_info_t *__hidden this, const renderer_pos_info_t *r);
bool __cdecl ??9segm_move_info_t__QEBA_NAEBU0__Z(const segm_move_info_t *__hidden this, const segm_move_info_t *r);
bool __cdecl ??9segment_t__QEBA_NAEBV0__Z(const segment_t *__hidden this, const segment_t *r);
bool __cdecl ??9selection_item_t__QEBA_NAEBU0__Z(const selection_item_t *__hidden this, const selection_item_t *r);
bool __cdecl ??9snapshot_t__QEBA_NAEBV0__Z(const snapshot_t *__hidden this, const snapshot_t *r);
bool __cdecl ??9stkpnt_t__QEBA_NAEBU0__Z(const stkpnt_t *__hidden this, const stkpnt_t *r);
bool __cdecl ??9stkpnts_t__QEBA_NAEBU0__Z(const stkpnts_t *__hidden this, const stkpnts_t *r);
bool __cdecl ??9strpath_t__QEBA_NAEBU0__Z(const strpath_t *__hidden this, const strpath_t *r);
bool __cdecl ??9sync_source_t__QEBA_NAEBV0__Z(const sync_source_t *__hidden this, const sync_source_t *_o);
bool __cdecl ??9tinfo_t__QEBA_NAEBV0__Z(const tinfo_t *__hidden this, const tinfo_t *r);
bool __cdecl ??9udt_member_t__QEBA_NAEBU0__Z(const udt_member_t *__hidden this, const udt_member_t *r);
bool __cdecl ??9xreflist_entry_t__QEBA_NAEBU0__Z(const xreflist_entry_t *__hidden this, const xreflist_entry_t *r);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::reference __cdecl ??A?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBAAEBD_J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::reference __cdecl ??A?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBAAEB_S_J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::reference __cdecl ??A?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBAAEB_U_J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::reference __cdecl ??A?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBAAEB_W_J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::reference __cdecl ??A?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBAAEAD_J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::reference __cdecl ??A?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBAAEA_S_J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::reference __cdecl ??A?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBAAEA_U_J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::reference __cdecl ??A?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBAAEA_W_J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
char *__cdecl ??A?$_qstring_D__QEAAAEAD_K_Z(_qstring<char> *__hidden this, size_t idx);
char *__cdecl ??A?$_qstring_D__QEBAAEBD_K_Z(const _qstring<char> *__hidden this, size_t idx);
unsigned __int8 *__cdecl ??A?$_qstring_E__QEAAAEAE_K_Z(_qstring<unsigned char> *__hidden this, size_t idx);
unsigned __int8 *__cdecl ??A?$_qstring_E__QEBAAEBE_K_Z(const _qstring<unsigned char> *__hidden this, size_t idx);
__int16 *__cdecl ??A?$_qstring__W__QEAAAEA_W_K_Z(_qstring<wchar_t> *__hidden this, size_t idx);
__int16 *__cdecl ??A?$_qstring__W__QEBAAEB_W_K_Z(const _qstring<wchar_t> *__hidden this, size_t idx);
std::basic_string<char>::reference __cdecl ??A?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAD_K_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::const_reference __cdecl ??A?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAAEBD_K_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::reference __cdecl ??A?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEA_S_K_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::const_reference __cdecl ??A?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAAEB_S_K_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::reference __cdecl ??A?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEA_U_K_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::const_reference __cdecl ??A?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAAEB_U_K_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::reference __cdecl ??A?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEA_W_K_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::const_reference __cdecl ??A?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAAEB_W_K_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off);
std::map<int, int>::mapped_type *__cdecl ??A?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAAAEAH$$QEAH_Z(std::map<int, int> *__hidden this, std::map<int, int>::key_type *_Keyval);
std::map<int, int>::mapped_type *__cdecl ??A?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAAAEAHAEBH_Z(std::map<int, int> *__hidden this, const std::map<int, int>::key_type *_Keyval);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::mapped_type *__cdecl ??A?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAAAEAV?$qrefcnt_t_Vrefcnted_regex_t____$$QEAV?$_qstring_D___Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::key_type *_Keyval);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::mapped_type *__cdecl ??A?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAAAEAV?$qrefcnt_t_Vrefcnted_regex_t____AEBV?$_qstring_D___Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::key_type *_Keyval);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::mapped_type *__cdecl ??A?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAAAEAUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____$$QEA_K_Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::key_type *_Keyval);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::mapped_type *__cdecl ??A?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAAAEAUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____AEB_K_Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::key_type *_Keyval);
std::map<unsigned long long, unsigned long long>::mapped_type *__cdecl ??A?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAAAEA_K$$QEA_K_Z(std::map<unsigned long long, unsigned long long> *__hidden this, std::map<unsigned long long, unsigned long long>::key_type *_Keyval);
std::map<unsigned long long, unsigned long long>::mapped_type *__cdecl ??A?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAAAEA_KAEB_K_Z(std::map<unsigned long long, unsigned long long> *__hidden this, const std::map<unsigned long long, unsigned long long>::key_type *_Keyval);
char *__cdecl ??A?$qvector_D__QEAAAEAD_K_Z(qvector<char> *__hidden this, size_t _idx);
char *__cdecl ??A?$qvector_D__QEBAAEBD_K_Z(const qvector<char> *__hidden this, size_t _idx);
unsigned __int8 *__cdecl ??A?$qvector_E__QEAAAEAE_K_Z(qvector<unsigned char> *__hidden this, size_t _idx);
unsigned __int8 *__cdecl ??A?$qvector_E__QEBAAEBE_K_Z(const qvector<unsigned char> *__hidden this, size_t _idx);
int *__cdecl ??A?$qvector_H__QEAAAEAH_K_Z(qvector<int> *__hidden this, size_t _idx);
int *__cdecl ??A?$qvector_H__QEBAAEBH_K_Z(const qvector<int> *__hidden this, size_t _idx);
unsigned int *__cdecl ??A?$qvector_I__QEAAAEAI_K_Z(qvector<unsigned int> *__hidden this, size_t _idx);
unsigned int *__cdecl ??A?$qvector_I__QEBAAEBI_K_Z(const qvector<unsigned int> *__hidden this, size_t _idx);
__int64 (__cdecl **__cdecl ??A?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAAEAP6A_JPEAW4syntax_highlight_style__PEBD_Z_K_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t _idx))(syntax_highlight_style *, const char *);
__int64 (__cdecl **__cdecl ??A?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBAAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_K_Z(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t _idx))(syntax_highlight_style *, const char *);
bool (__cdecl **__cdecl ??A?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAAEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_K_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t _idx))(syntax_highlight_style *, const _qstring<char> *);
bool (__cdecl **__cdecl ??A?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBAAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_K_Z(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t _idx))(syntax_highlight_style *, const _qstring<char> *);
bpt_t **__cdecl ??A?$qvector_PEAUbpt_t____QEAAAEAPEAUbpt_t___K_Z(qvector<bpt_t *> *__hidden this, size_t _idx);
bpt_t **__cdecl ??A?$qvector_PEAUbpt_t____QEBAAEBQEAUbpt_t___K_Z(const qvector<bpt_t *> *__hidden this, size_t _idx);
extlang_t **__cdecl ??A?$qvector_PEAUextlang_t____QEAAAEAPEAUextlang_t___K_Z(qvector<extlang_t *> *__hidden this, size_t _idx);
extlang_t **__cdecl ??A?$qvector_PEAUextlang_t____QEBAAEBQEAUextlang_t___K_Z(const qvector<extlang_t *> *__hidden this, size_t _idx);
line_rendering_output_entry_t **__cdecl ??A?$qvector_PEAUline_rendering_output_entry_t____QEAAAEAPEAUline_rendering_output_entry_t___K_Z(qvector<line_rendering_output_entry_t *> *__hidden this, size_t _idx);
line_rendering_output_entry_t **__cdecl ??A?$qvector_PEAUline_rendering_output_entry_t____QEBAAEBQEAUline_rendering_output_entry_t___K_Z(const qvector<line_rendering_output_entry_t *> *__hidden this, size_t _idx);
snapshot_t **__cdecl ??A?$qvector_PEAVsnapshot_t____QEAAAEAPEAVsnapshot_t___K_Z(qvector<snapshot_t *> *__hidden this, size_t _idx);
snapshot_t **__cdecl ??A?$qvector_PEAVsnapshot_t____QEBAAEBQEAVsnapshot_t___K_Z(const qvector<snapshot_t *> *__hidden this, size_t _idx);
const char **__cdecl ??A?$qvector_PEBD__QEAAAEAPEBD_K_Z(qvector<const char *> *__hidden this, size_t _idx);
const char **__cdecl ??A?$qvector_PEBD__QEBAAEBQEBD_K_Z(const qvector<const char *> *__hidden this, size_t _idx);
const bpt_t **__cdecl ??A?$qvector_PEBUbpt_t____QEAAAEAPEBUbpt_t___K_Z(qvector<const bpt_t *> *__hidden this, size_t _idx);
const bpt_t **__cdecl ??A?$qvector_PEBUbpt_t____QEBAAEBQEBUbpt_t___K_Z(const qvector<const bpt_t *> *__hidden this, size_t _idx);
const rangeset_t **__cdecl ??A?$qvector_PEBVrangeset_t____QEAAAEAPEBVrangeset_t___K_Z(qvector<const rangeset_t *> *__hidden this, size_t _idx);
const rangeset_t **__cdecl ??A?$qvector_PEBVrangeset_t____QEBAAEBQEBVrangeset_t___K_Z(const qvector<const rangeset_t *> *__hidden this, size_t _idx);
const twinline_t **__cdecl ??A?$qvector_PEBVtwinline_t____QEAAAEAPEBVtwinline_t___K_Z(qvector<const twinline_t *> *__hidden this, size_t _idx);
const twinline_t **__cdecl ??A?$qvector_PEBVtwinline_t____QEBAAEBQEBVtwinline_t___K_Z(const qvector<const twinline_t *> *__hidden this, size_t _idx);
argpart_t *__cdecl ??A?$qvector_Uargpart_t____QEAAAEAUargpart_t___K_Z(qvector<argpart_t> *__hidden this, size_t _idx);
argpart_t *__cdecl ??A?$qvector_Uargpart_t____QEBAAEBUargpart_t___K_Z(const qvector<argpart_t> *__hidden this, size_t _idx);
bpt_t *__cdecl ??A?$qvector_Ubpt_t____QEAAAEAUbpt_t___K_Z(qvector<bpt_t> *__hidden this, size_t _idx);
bpt_t *__cdecl ??A?$qvector_Ubpt_t____QEBAAEBUbpt_t___K_Z(const qvector<bpt_t> *__hidden this, size_t _idx);
bptaddrs_t *__cdecl ??A?$qvector_Ubptaddrs_t____QEAAAEAUbptaddrs_t___K_Z(qvector<bptaddrs_t> *__hidden this, size_t _idx);
bptaddrs_t *__cdecl ??A?$qvector_Ubptaddrs_t____QEBAAEBUbptaddrs_t___K_Z(const qvector<bptaddrs_t> *__hidden this, size_t _idx);
call_stack_info_t *__cdecl ??A?$qvector_Ucall_stack_info_t____QEAAAEAUcall_stack_info_t___K_Z(qvector<call_stack_info_t> *__hidden this, size_t _idx);
call_stack_info_t *__cdecl ??A?$qvector_Ucall_stack_info_t____QEBAAEBUcall_stack_info_t___K_Z(const qvector<call_stack_info_t> *__hidden this, size_t _idx);
catch_t *__cdecl ??A?$qvector_Ucatch_t____QEAAAEAUcatch_t___K_Z(qvector<catch_t> *__hidden this, size_t _idx);
catch_t *__cdecl ??A?$qvector_Ucatch_t____QEBAAEBUcatch_t___K_Z(const qvector<catch_t> *__hidden this, size_t _idx);
cfgopt_set_t *__cdecl ??A?$qvector_Ucfgopt_set_t____QEAAAEAUcfgopt_set_t___K_Z(qvector<cfgopt_set_t> *__hidden this, size_t _idx);
cfgopt_set_t *__cdecl ??A?$qvector_Ucfgopt_set_t____QEBAAEBUcfgopt_set_t___K_Z(const qvector<cfgopt_set_t> *__hidden this, size_t _idx);
channel_redir_t *__cdecl ??A?$qvector_Uchannel_redir_t____QEAAAEAUchannel_redir_t___K_Z(qvector<channel_redir_t> *__hidden this, size_t _idx);
channel_redir_t *__cdecl ??A?$qvector_Uchannel_redir_t____QEBAAEBUchannel_redir_t___K_Z(const qvector<channel_redir_t> *__hidden this, size_t _idx);
cliopt_t *__cdecl ??A?$qvector_Ucliopt_t____QEAAAEAUcliopt_t___K_Z(qvector<cliopt_t> *__hidden this, size_t _idx);
cliopt_t *__cdecl ??A?$qvector_Ucliopt_t____QEBAAEBUcliopt_t___K_Z(const qvector<cliopt_t> *__hidden this, size_t _idx);
compiled_binpat_t *__cdecl ??A?$qvector_Ucompiled_binpat_t____QEAAAEAUcompiled_binpat_t___K_Z(qvector<compiled_binpat_t> *__hidden this, size_t _idx);
compiled_binpat_t *__cdecl ??A?$qvector_Ucompiled_binpat_t____QEBAAEBUcompiled_binpat_t___K_Z(const qvector<compiled_binpat_t> *__hidden this, size_t _idx);
debug_event_t *__cdecl ??A?$qvector_Udebug_event_t____QEAAAEAUdebug_event_t___K_Z(qvector<debug_event_t> *__hidden this, size_t _idx);
debug_event_t *__cdecl ??A?$qvector_Udebug_event_t____QEBAAEBUdebug_event_t___K_Z(const qvector<debug_event_t> *__hidden this, size_t _idx);
direntry_t *__cdecl ??A?$qvector_Udirentry_t____QEAAAEAUdirentry_t___K_Z(qvector<direntry_t> *__hidden this, size_t _idx);
direntry_t *__cdecl ??A?$qvector_Udirentry_t____QEBAAEBUdirentry_t___K_Z(const qvector<direntry_t> *__hidden this, size_t _idx);
dirtree_cursor_t *__cdecl ??A?$qvector_Udirtree_cursor_t____QEAAAEAUdirtree_cursor_t___K_Z(qvector<dirtree_cursor_t> *__hidden this, size_t _idx);
dirtree_cursor_t *__cdecl ??A?$qvector_Udirtree_cursor_t____QEBAAEBUdirtree_cursor_t___K_Z(const qvector<dirtree_cursor_t> *__hidden this, size_t _idx);
ea_name_t *__cdecl ??A?$qvector_Uea_name_t____QEAAAEAUea_name_t___K_Z(qvector<ea_name_t> *__hidden this, size_t _idx);
ea_name_t *__cdecl ??A?$qvector_Uea_name_t____QEBAAEBUea_name_t___K_Z(const qvector<ea_name_t> *__hidden this, size_t _idx);
edge_t *__cdecl ??A?$qvector_Uedge_t____QEAAAEAUedge_t___K_Z(qvector<edge_t> *__hidden this, size_t _idx);
edge_t *__cdecl ??A?$qvector_Uedge_t____QEBAAEBUedge_t___K_Z(const qvector<edge_t> *__hidden this, size_t _idx);
enum_member_t *__cdecl ??A?$qvector_Uenum_member_t____QEAAAEAUenum_member_t___K_Z(qvector<enum_member_t> *__hidden this, size_t _idx);
enum_member_t *__cdecl ??A?$qvector_Uenum_member_t____QEBAAEBUenum_member_t___K_Z(const qvector<enum_member_t> *__hidden this, size_t _idx);
exception_info_t *__cdecl ??A?$qvector_Uexception_info_t____QEAAAEAUexception_info_t___K_Z(qvector<exception_info_t> *__hidden this, size_t _idx);
exception_info_t *__cdecl ??A?$qvector_Uexception_info_t____QEBAAEBUexception_info_t___K_Z(const qvector<exception_info_t> *__hidden this, size_t _idx);
fixup_info_t *__cdecl ??A?$qvector_Ufixup_info_t____QEAAAEAUfixup_info_t___K_Z(qvector<fixup_info_t> *__hidden this, size_t _idx);
fixup_info_t *__cdecl ??A?$qvector_Ufixup_info_t____QEBAAEBUfixup_info_t___K_Z(const qvector<fixup_info_t> *__hidden this, size_t _idx);
funcarg_t *__cdecl ??A?$qvector_Ufuncarg_t____QEAAAEAUfuncarg_t___K_Z(qvector<funcarg_t> *__hidden this, size_t _idx);
funcarg_t *__cdecl ??A?$qvector_Ufuncarg_t____QEBAAEBUfuncarg_t___K_Z(const qvector<funcarg_t> *__hidden this, size_t _idx);
group_crinfo_t *__cdecl ??A?$qvector_Ugroup_crinfo_t____QEAAAEAUgroup_crinfo_t___K_Z(qvector<group_crinfo_t> *__hidden this, size_t _idx);
group_crinfo_t *__cdecl ??A?$qvector_Ugroup_crinfo_t____QEBAAEBUgroup_crinfo_t___K_Z(const qvector<group_crinfo_t> *__hidden this, size_t _idx);
idc_global_t *__cdecl ??A?$qvector_Uidc_global_t____QEAAAEAUidc_global_t___K_Z(qvector<idc_global_t> *__hidden this, size_t _idx);
idc_global_t *__cdecl ??A?$qvector_Uidc_global_t____QEBAAEBUidc_global_t___K_Z(const qvector<idc_global_t> *__hidden this, size_t _idx);
idp_desc_t *__cdecl ??A?$qvector_Uidp_desc_t____QEAAAEAUidp_desc_t___K_Z(qvector<idp_desc_t> *__hidden this, size_t _idx);
idp_desc_t *__cdecl ??A?$qvector_Uidp_desc_t____QEBAAEBUidp_desc_t___K_Z(const qvector<idp_desc_t> *__hidden this, size_t _idx);
idp_name_t *__cdecl ??A?$qvector_Uidp_name_t____QEAAAEAUidp_name_t___K_Z(qvector<idp_name_t> *__hidden this, size_t _idx);
idp_name_t *__cdecl ??A?$qvector_Uidp_name_t____QEBAAEBUidp_name_t___K_Z(const qvector<idp_name_t> *__hidden this, size_t _idx);
ioport_bit_t *__cdecl ??A?$qvector_Uioport_bit_t____QEAAAEAUioport_bit_t___K_Z(qvector<ioport_bit_t> *__hidden this, size_t _idx);
ioport_bit_t *__cdecl ??A?$qvector_Uioport_bit_t____QEBAAEBUioport_bit_t___K_Z(const qvector<ioport_bit_t> *__hidden this, size_t _idx);
ioport_t *__cdecl ??A?$qvector_Uioport_t____QEAAAEAUioport_t___K_Z(qvector<ioport_t> *__hidden this, size_t _idx);
ioport_t *__cdecl ??A?$qvector_Uioport_t____QEBAAEBUioport_t___K_Z(const qvector<ioport_t> *__hidden this, size_t _idx);
jvalue_t *__cdecl ??A?$qvector_Ujvalue_t____QEAAAEAUjvalue_t___K_Z(qvector<jvalue_t> *__hidden this, size_t _idx);
jvalue_t *__cdecl ??A?$qvector_Ujvalue_t____QEBAAEBUjvalue_t___K_Z(const qvector<jvalue_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::keywords_style_t *__cdecl ??A?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAAEAUkeywords_style_t_ida_syntax_highlighter_t___K_Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::keywords_style_t *__cdecl ??A?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBAAEBUkeywords_style_t_ida_syntax_highlighter_t___K_Z(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t _idx);
kvp_t *__cdecl ??A?$qvector_Ukvp_t____QEAAAEAUkvp_t___K_Z(qvector<kvp_t> *__hidden this, size_t _idx);
kvp_t *__cdecl ??A?$qvector_Ukvp_t____QEBAAEBUkvp_t___K_Z(const qvector<kvp_t> *__hidden this, size_t _idx);
lochist_entry_t *__cdecl ??A?$qvector_Ulochist_entry_t____QEAAAEAUlochist_entry_t___K_Z(qvector<lochist_entry_t> *__hidden this, size_t _idx);
lochist_entry_t *__cdecl ??A?$qvector_Ulochist_entry_t____QEBAAEBUlochist_entry_t___K_Z(const qvector<lochist_entry_t> *__hidden this, size_t _idx);
lowcnd_t *__cdecl ??A?$qvector_Ulowcnd_t____QEAAAEAUlowcnd_t___K_Z(qvector<lowcnd_t> *__hidden this, size_t _idx);
lowcnd_t *__cdecl ??A?$qvector_Ulowcnd_t____QEBAAEBUlowcnd_t___K_Z(const qvector<lowcnd_t> *__hidden this, size_t _idx);
memory_info_t *__cdecl ??A?$qvector_Umemory_info_t____QEAAAEAUmemory_info_t___K_Z(qvector<memory_info_t> *__hidden this, size_t _idx);
memory_info_t *__cdecl ??A?$qvector_Umemory_info_t____QEBAAEBUmemory_info_t___K_Z(const qvector<memory_info_t> *__hidden this, size_t _idx);
memreg_info_t *__cdecl ??A?$qvector_Umemreg_info_t____QEAAAEAUmemreg_info_t___K_Z(qvector<memreg_info_t> *__hidden this, size_t _idx);
memreg_info_t *__cdecl ??A?$qvector_Umemreg_info_t____QEBAAEBUmemreg_info_t___K_Z(const qvector<memreg_info_t> *__hidden this, size_t _idx);
modinfo_t *__cdecl ??A?$qvector_Umodinfo_t____QEAAAEAUmodinfo_t___K_Z(qvector<modinfo_t> *__hidden this, size_t _idx);
modinfo_t *__cdecl ??A?$qvector_Umodinfo_t____QEBAAEBUmodinfo_t___K_Z(const qvector<modinfo_t> *__hidden this, size_t _idx);
movbpt_info_t *__cdecl ??A?$qvector_Umovbpt_info_t____QEAAAEAUmovbpt_info_t___K_Z(qvector<movbpt_info_t> *__hidden this, size_t _idx);
movbpt_info_t *__cdecl ??A?$qvector_Umovbpt_info_t____QEBAAEBUmovbpt_info_t___K_Z(const qvector<movbpt_info_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::multicmt_t *__cdecl ??A?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAAEAUmulticmt_t_ida_syntax_highlighter_t___K_Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::multicmt_t *__cdecl ??A?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBAAEBUmulticmt_t_ida_syntax_highlighter_t___K_Z(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ??A?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAAEAUplain_char_ptr_t_ida_syntax_highlighter_t___K_Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ??A?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBAAEBUplain_char_ptr_t_ida_syntax_highlighter_t___K_Z(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t _idx);
point_t *__cdecl ??A?$qvector_Upoint_t____QEAAAEAUpoint_t___K_Z(qvector<point_t> *__hidden this, size_t _idx);
point_t *__cdecl ??A?$qvector_Upoint_t____QEBAAEBUpoint_t___K_Z(const qvector<point_t> *__hidden this, size_t _idx);
process_info_t *__cdecl ??A?$qvector_Uprocess_info_t____QEAAAEAUprocess_info_t___K_Z(qvector<process_info_t> *__hidden this, size_t _idx);
process_info_t *__cdecl ??A?$qvector_Uprocess_info_t____QEBAAEBUprocess_info_t___K_Z(const qvector<process_info_t> *__hidden this, size_t _idx);
qbasic_block_t *__cdecl ??A?$qvector_Uqbasic_block_t____QEAAAEAUqbasic_block_t___K_Z(qvector<qbasic_block_t> *__hidden this, size_t _idx);
qbasic_block_t *__cdecl ??A?$qvector_Uqbasic_block_t____QEBAAEBUqbasic_block_t___K_Z(const qvector<qbasic_block_t> *__hidden this, size_t _idx);
range_t *__cdecl ??A?$qvector_Urange_t____QEAAAEAUrange_t___K_Z(qvector<range_t> *__hidden this, size_t _idx);
range_t *__cdecl ??A?$qvector_Urange_t____QEBAAEBUrange_t___K_Z(const qvector<range_t> *__hidden this, size_t _idx);
rect_t *__cdecl ??A?$qvector_Urect_t____QEAAAEAUrect_t___K_Z(qvector<rect_t> *__hidden this, size_t _idx);
rect_t *__cdecl ??A?$qvector_Urect_t____QEBAAEBUrect_t___K_Z(const qvector<rect_t> *__hidden this, size_t _idx);
refinfo_desc_t *__cdecl ??A?$qvector_Urefinfo_desc_t____QEAAAEAUrefinfo_desc_t___K_Z(qvector<refinfo_desc_t> *__hidden this, size_t _idx);
refinfo_desc_t *__cdecl ??A?$qvector_Urefinfo_desc_t____QEBAAEBUrefinfo_desc_t___K_Z(const qvector<refinfo_desc_t> *__hidden this, size_t _idx);
reg_access_t *__cdecl ??A?$qvector_Ureg_access_t____QEAAAEAUreg_access_t___K_Z(qvector<reg_access_t> *__hidden this, size_t _idx);
reg_access_t *__cdecl ??A?$qvector_Ureg_access_t____QEBAAEBUreg_access_t___K_Z(const qvector<reg_access_t> *__hidden this, size_t _idx);
reg_info_t *__cdecl ??A?$qvector_Ureg_info_t____QEAAAEAUreg_info_t___K_Z(qvector<reg_info_t> *__hidden this, size_t _idx);
reg_info_t *__cdecl ??A?$qvector_Ureg_info_t____QEBAAEBUreg_info_t___K_Z(const qvector<reg_info_t> *__hidden this, size_t _idx);
register_info_t *__cdecl ??A?$qvector_Uregister_info_t____QEAAAEAUregister_info_t___K_Z(qvector<register_info_t> *__hidden this, size_t _idx);
register_info_t *__cdecl ??A?$qvector_Uregister_info_t____QEBAAEBUregister_info_t___K_Z(const qvector<register_info_t> *__hidden this, size_t _idx);
regobj_t *__cdecl ??A?$qvector_Uregobj_t____QEAAAEAUregobj_t___K_Z(qvector<regobj_t> *__hidden this, size_t _idx);
regobj_t *__cdecl ??A?$qvector_Uregobj_t____QEBAAEBUregobj_t___K_Z(const qvector<regobj_t> *__hidden this, size_t _idx);
regval_t *__cdecl ??A?$qvector_Uregval_t____QEAAAEAUregval_t___K_Z(qvector<regval_t> *__hidden this, size_t _idx);
regval_t *__cdecl ??A?$qvector_Uregval_t____QEBAAEBUregval_t___K_Z(const qvector<regval_t> *__hidden this, size_t _idx);
row_info_t *__cdecl ??A?$qvector_Urow_info_t____QEAAAEAUrow_info_t___K_Z(qvector<row_info_t> *__hidden this, size_t _idx);
row_info_t *__cdecl ??A?$qvector_Urow_info_t____QEBAAEBUrow_info_t___K_Z(const qvector<row_info_t> *__hidden this, size_t _idx);
scattered_segm_t *__cdecl ??A?$qvector_Uscattered_segm_t____QEAAAEAUscattered_segm_t___K_Z(qvector<scattered_segm_t> *__hidden this, size_t _idx);
scattered_segm_t *__cdecl ??A?$qvector_Uscattered_segm_t____QEBAAEBUscattered_segm_t___K_Z(const qvector<scattered_segm_t> *__hidden this, size_t _idx);
segm_move_info_t *__cdecl ??A?$qvector_Usegm_move_info_t____QEAAAEAUsegm_move_info_t___K_Z(qvector<segm_move_info_t> *__hidden this, size_t _idx);
segm_move_info_t *__cdecl ??A?$qvector_Usegm_move_info_t____QEBAAEBUsegm_move_info_t___K_Z(const qvector<segm_move_info_t> *__hidden this, size_t _idx);
selection_item_t *__cdecl ??A?$qvector_Uselection_item_t____QEAAAEAUselection_item_t___K_Z(qvector<selection_item_t> *__hidden this, size_t _idx);
selection_item_t *__cdecl ??A?$qvector_Uselection_item_t____QEBAAEBUselection_item_t___K_Z(const qvector<selection_item_t> *__hidden this, size_t _idx);
simd_info_t *__cdecl ??A?$qvector_Usimd_info_t____QEAAAEAUsimd_info_t___K_Z(qvector<simd_info_t> *__hidden this, size_t _idx);
simd_info_t *__cdecl ??A?$qvector_Usimd_info_t____QEBAAEBUsimd_info_t___K_Z(const qvector<simd_info_t> *__hidden this, size_t _idx);
simpleline_t *__cdecl ??A?$qvector_Usimpleline_t____QEAAAEAUsimpleline_t___K_Z(qvector<simpleline_t> *__hidden this, size_t _idx);
simpleline_t *__cdecl ??A?$qvector_Usimpleline_t____QEBAAEBUsimpleline_t___K_Z(const qvector<simpleline_t> *__hidden this, size_t _idx);
stkpnt_t *__cdecl ??A?$qvector_Ustkpnt_t____QEAAAEAUstkpnt_t___K_Z(qvector<stkpnt_t> *__hidden this, size_t _idx);
stkpnt_t *__cdecl ??A?$qvector_Ustkpnt_t____QEBAAEBUstkpnt_t___K_Z(const qvector<stkpnt_t> *__hidden this, size_t _idx);
tev_info_reg_t *__cdecl ??A?$qvector_Utev_info_reg_t____QEAAAEAUtev_info_reg_t___K_Z(qvector<tev_info_reg_t> *__hidden this, size_t _idx);
tev_info_reg_t *__cdecl ??A?$qvector_Utev_info_reg_t____QEBAAEBUtev_info_reg_t___K_Z(const qvector<tev_info_reg_t> *__hidden this, size_t _idx);
tev_info_t *__cdecl ??A?$qvector_Utev_info_t____QEAAAEAUtev_info_t___K_Z(qvector<tev_info_t> *__hidden this, size_t _idx);
tev_info_t *__cdecl ??A?$qvector_Utev_info_t____QEBAAEBUtev_info_t___K_Z(const qvector<tev_info_t> *__hidden this, size_t _idx);
tev_reg_value_t *__cdecl ??A?$qvector_Utev_reg_value_t____QEAAAEAUtev_reg_value_t___K_Z(qvector<tev_reg_value_t> *__hidden this, size_t _idx);
tev_reg_value_t *__cdecl ??A?$qvector_Utev_reg_value_t____QEBAAEBUtev_reg_value_t___K_Z(const qvector<tev_reg_value_t> *__hidden this, size_t _idx);
thread_name_t *__cdecl ??A?$qvector_Uthread_name_t____QEAAAEAUthread_name_t___K_Z(qvector<thread_name_t> *__hidden this, size_t _idx);
thread_name_t *__cdecl ??A?$qvector_Uthread_name_t____QEBAAEBUthread_name_t___K_Z(const qvector<thread_name_t> *__hidden this, size_t _idx);
token_t *__cdecl ??A?$qvector_Utoken_t____QEAAAEAUtoken_t___K_Z(qvector<token_t> *__hidden this, size_t _idx);
token_t *__cdecl ??A?$qvector_Utoken_t____QEBAAEBUtoken_t___K_Z(const qvector<token_t> *__hidden this, size_t _idx);
type_attr_t *__cdecl ??A?$qvector_Utype_attr_t____QEAAAEAUtype_attr_t___K_Z(qvector<type_attr_t> *__hidden this, size_t _idx);
type_attr_t *__cdecl ??A?$qvector_Utype_attr_t____QEBAAEBUtype_attr_t___K_Z(const qvector<type_attr_t> *__hidden this, size_t _idx);
udt_member_t *__cdecl ??A?$qvector_Uudt_member_t____QEAAAEAUudt_member_t___K_Z(qvector<udt_member_t> *__hidden this, size_t _idx);
udt_member_t *__cdecl ??A?$qvector_Uudt_member_t____QEBAAEBUudt_member_t___K_Z(const qvector<udt_member_t> *__hidden this, size_t _idx);
update_bpt_info_t *__cdecl ??A?$qvector_Uupdate_bpt_info_t____QEAAAEAUupdate_bpt_info_t___K_Z(qvector<update_bpt_info_t> *__hidden this, size_t _idx);
update_bpt_info_t *__cdecl ??A?$qvector_Uupdate_bpt_info_t____QEBAAEBUupdate_bpt_info_t___K_Z(const qvector<update_bpt_info_t> *__hidden this, size_t _idx);
xreflist_entry_t *__cdecl ??A?$qvector_Uxreflist_entry_t____QEAAAEAUxreflist_entry_t___K_Z(qvector<xreflist_entry_t> *__hidden this, size_t _idx);
xreflist_entry_t *__cdecl ??A?$qvector_Uxreflist_entry_t____QEBAAEBUxreflist_entry_t___K_Z(const qvector<xreflist_entry_t> *__hidden this, size_t _idx);
_qstring<char> *__cdecl ??A?$qvector_V?$_qstring_D____QEAAAEAV?$_qstring_D___K_Z(qvector<_qstring<char>> *__hidden this, size_t _idx);
_qstring<char> *__cdecl ??A?$qvector_V?$_qstring_D____QEBAAEBV?$_qstring_D___K_Z(const qvector<_qstring<char>> *__hidden this, size_t _idx);
_qstring<unsigned char> *__cdecl ??A?$qvector_V?$_qstring_E____QEAAAEAV?$_qstring_E___K_Z(qvector<_qstring<unsigned char>> *__hidden this, size_t _idx);
_qstring<unsigned char> *__cdecl ??A?$qvector_V?$_qstring_E____QEBAAEBV?$_qstring_E___K_Z(const qvector<_qstring<unsigned char>> *__hidden this, size_t _idx);
_qstring<wchar_t> *__cdecl ??A?$qvector_V?$_qstring__W____QEAAAEAV?$_qstring__W___K_Z(qvector<_qstring<wchar_t>> *__hidden this, size_t _idx);
_qstring<wchar_t> *__cdecl ??A?$qvector_V?$_qstring__W____QEBAAEBV?$_qstring__W___K_Z(const qvector<_qstring<wchar_t>> *__hidden this, size_t _idx);
qrefcnt_t<source_item_t> *__cdecl ??A?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAAEAV?$qrefcnt_t_Vsource_item_t_____K_Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t _idx);
qrefcnt_t<source_item_t> *__cdecl ??A?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBAAEBV?$qrefcnt_t_Vsource_item_t_____K_Z(const qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t _idx);
qvector<int> *__cdecl ??A?$qvector_V?$qvector_H____QEAAAEAV?$qvector_H___K_Z(qvector<qvector<int>> *__hidden this, size_t _idx);
qvector<int> *__cdecl ??A?$qvector_V?$qvector_H____QEBAAEBV?$qvector_H___K_Z(const qvector<qvector<int>> *__hidden this, size_t _idx);
qvector<const char *> *__cdecl ??A?$qvector_V?$qvector_PEBD____QEAAAEAV?$qvector_PEBD___K_Z(qvector<qvector<const char *>> *__hidden this, size_t _idx);
qvector<const char *> *__cdecl ??A?$qvector_V?$qvector_PEBD____QEBAAEBV?$qvector_PEBD___K_Z(const qvector<qvector<const char *>> *__hidden this, size_t _idx);
qvector<const twinline_t *> *__cdecl ??A?$qvector_V?$qvector_PEBVtwinline_t______QEAAAEAV?$qvector_PEBVtwinline_t_____K_Z(qvector<qvector<const twinline_t *>> *__hidden this, size_t _idx);
qvector<const twinline_t *> *__cdecl ??A?$qvector_V?$qvector_PEBVtwinline_t______QEBAAEBV?$qvector_PEBVtwinline_t_____K_Z(const qvector<qvector<const twinline_t *>> *__hidden this, size_t _idx);
qvector<long long> *__cdecl ??A?$qvector_V?$qvector__J____QEAAAEAV?$qvector__J___K_Z(qvector<qvector<long long>> *__hidden this, size_t _idx);
qvector<long long> *__cdecl ??A?$qvector_V?$qvector__J____QEBAAEBV?$qvector__J___K_Z(const qvector<qvector<long long>> *__hidden this, size_t _idx);
argloc_t *__cdecl ??A?$qvector_Vargloc_t____QEAAAEAVargloc_t___K_Z(qvector<argloc_t> *__hidden this, size_t _idx);
argloc_t *__cdecl ??A?$qvector_Vargloc_t____QEBAAEBVargloc_t___K_Z(const qvector<argloc_t> *__hidden this, size_t _idx);
intmap_t *__cdecl ??A?$qvector_Vintmap_t____QEAAAEAVintmap_t___K_Z(qvector<intmap_t> *__hidden this, size_t _idx);
intmap_t *__cdecl ??A?$qvector_Vintmap_t____QEBAAEBVintmap_t___K_Z(const qvector<intmap_t> *__hidden this, size_t _idx);
node_set_t *__cdecl ??A?$qvector_Vnode_set_t____QEAAAEAVnode_set_t___K_Z(qvector<node_set_t> *__hidden this, size_t _idx);
node_set_t *__cdecl ??A?$qvector_Vnode_set_t____QEBAAEBVnode_set_t___K_Z(const qvector<node_set_t> *__hidden this, size_t _idx);
op_t *__cdecl ??A?$qvector_Vop_t____QEAAAEAVop_t___K_Z(qvector<op_t> *__hidden this, size_t _idx);
op_t *__cdecl ??A?$qvector_Vop_t____QEBAAEBVop_t___K_Z(const qvector<op_t> *__hidden this, size_t _idx);
rangeset_t *__cdecl ??A?$qvector_Vrangeset_t____QEAAAEAVrangeset_t___K_Z(qvector<rangeset_t> *__hidden this, size_t _idx);
rangeset_t *__cdecl ??A?$qvector_Vrangeset_t____QEBAAEBVrangeset_t___K_Z(const qvector<rangeset_t> *__hidden this, size_t _idx);
sync_source_t *__cdecl ??A?$qvector_Vsync_source_t____QEAAAEAVsync_source_t___K_Z(qvector<sync_source_t> *__hidden this, size_t _idx);
sync_source_t *__cdecl ??A?$qvector_Vsync_source_t____QEBAAEBVsync_source_t___K_Z(const qvector<sync_source_t> *__hidden this, size_t _idx);
tinfo_t *__cdecl ??A?$qvector_Vtinfo_t____QEAAAEAVtinfo_t___K_Z(qvector<tinfo_t> *__hidden this, size_t _idx);
tinfo_t *__cdecl ??A?$qvector_Vtinfo_t____QEBAAEBVtinfo_t___K_Z(const qvector<tinfo_t> *__hidden this, size_t _idx);
tryblk_t *__cdecl ??A?$qvector_Vtryblk_t____QEAAAEAVtryblk_t___K_Z(qvector<tryblk_t> *__hidden this, size_t _idx);
tryblk_t *__cdecl ??A?$qvector_Vtryblk_t____QEBAAEBVtryblk_t___K_Z(const qvector<tryblk_t> *__hidden this, size_t _idx);
twinline_t *__cdecl ??A?$qvector_Vtwinline_t____QEAAAEAVtwinline_t___K_Z(qvector<twinline_t> *__hidden this, size_t _idx);
twinline_t *__cdecl ??A?$qvector_Vtwinline_t____QEBAAEBVtwinline_t___K_Z(const qvector<twinline_t> *__hidden this, size_t _idx);
valstr_t *__cdecl ??A?$qvector_Vvalstr_t____QEAAAEAVvalstr_t___K_Z(qvector<valstr_t> *__hidden this, size_t _idx);
valstr_t *__cdecl ??A?$qvector_Vvalstr_t____QEBAAEBVvalstr_t___K_Z(const qvector<valstr_t> *__hidden this, size_t _idx);
movbpt_code_t *__cdecl ??A?$qvector_W4movbpt_code_t____QEAAAEAW4movbpt_code_t___K_Z(qvector<movbpt_code_t> *__hidden this, size_t _idx);
movbpt_code_t *__cdecl ??A?$qvector_W4movbpt_code_t____QEBAAEBW4movbpt_code_t___K_Z(const qvector<movbpt_code_t> *__hidden this, size_t _idx);
__int64 *__cdecl ??A?$qvector__J__QEAAAEA_J_K_Z(qvector<long long> *__hidden this, size_t _idx);
__int64 *__cdecl ??A?$qvector__J__QEBAAEB_J_K_Z(const qvector<long long> *__hidden this, size_t _idx);
unsigned __int64 *__cdecl ??A?$qvector__K__QEAAAEA_K_K_Z(qvector<unsigned long long> *__hidden this, size_t _idx);
unsigned __int64 *__cdecl ??A?$qvector__K__QEBAAEB_K_K_Z(const qvector<unsigned long long> *__hidden this, size_t _idx);
bool *__cdecl ??A?$qvector__N__QEAAAEA_N_K_Z(qvector<bool> *__hidden this, size_t _idx);
bool *__cdecl ??A?$qvector__N__QEBAAEB_N_K_Z(const qvector<bool> *__hidden this, size_t _idx);
__int16 *__cdecl ??A?$qvector__W__QEAAAEA_W_K_Z(qvector<wchar_t> *__hidden this, size_t _idx);
__int16 *__cdecl ??A?$qvector__W__QEBAAEB_W_K_Z(const qvector<wchar_t> *__hidden this, size_t _idx);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::reference __cdecl ??A?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBAAEBD_J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::reference __cdecl ??A?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBAAEB_S_J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::reference __cdecl ??A?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBAAEB_U_J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::reference __cdecl ??A?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBAAEB_W_J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::reference __cdecl ??A?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBAAEAD_J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::reference __cdecl ??A?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBAAEA_S_J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::reference __cdecl ??A?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBAAEA_U_J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::reference __cdecl ??A?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBAAEA_W_J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::reference __cdecl ??A?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEBAAEBH_J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::reference __cdecl ??A?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBAAEBU?$pair_$$CBHH_1__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::reference __cdecl ??A?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBAAEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::reference __cdecl ??A?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBAAEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::reference __cdecl ??A?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBAAEBU?$pair_$$CB_K_K_1__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::reference __cdecl ??A?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBAAEAU?$pair_$$CBHH_1__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::reference __cdecl ??A?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBAAEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::reference __cdecl ??A?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBAAEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::reference __cdecl ??A?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBAAEAU?$pair_$$CB_K_K_1__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type _Off);
std::streamoff __cdecl ??B?$fpos_U_Mbstatet___std__QEBA_JXZ(const std::fpos<_Mbstatet> *__hidden this);
std::integral_constant<unsigned long long, 0>::value_type __cdecl ??B?$integral_constant__K$0A__std__QEBA_KXZ(const std::integral_constant<unsigned long long, 0> *__hidden this);
std::integral_constant<bool, true>::value_type __cdecl ??B?$integral_constant__N$00_std__QEBA_NXZ(const std::integral_constant<bool, true> *__hidden this);
std::integral_constant<bool, false>::value_type __cdecl ??B?$integral_constant__N$0A__std__QEBA_NXZ(const std::integral_constant<bool, false> *__hidden this);
extlang_t *__cdecl ??B?$qrefcnt_t_Uextlang_t____QEBAPEAUextlang_t__XZ(const qrefcnt_t<extlang_t> *__hidden this);
qiterator<qrefcnt_t<source_file_t>> *__cdecl ??B?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________QEBAPEAV?$qiterator_V?$qrefcnt_t_Vsource_file_t______XZ(const qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__hidden this);
qiterator<qrefcnt_t<source_item_t>> *__cdecl ??B?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________QEBAPEAV?$qiterator_V?$qrefcnt_t_Vsource_item_t______XZ(const qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__hidden this);
refcnted_regex_t *__cdecl ??B?$qrefcnt_t_Vrefcnted_regex_t____QEBAPEAVrefcnted_regex_t__XZ(const qrefcnt_t<refcnted_regex_t> *__hidden this);
source_file_t *__cdecl ??B?$qrefcnt_t_Vsource_file_t____QEBAPEAVsource_file_t__XZ(const qrefcnt_t<source_file_t> *__hidden this);
source_item_t *__cdecl ??B?$qrefcnt_t_Vsource_item_t____QEBAPEAVsource_item_t__XZ(const qrefcnt_t<source_item_t> *__hidden this);
bool __cdecl ??Bexception_ptr_std__QEBA_NXZ(const std::exception_ptr *__hidden this);
nodeidx_t __cdecl ??Bnetnode__QEBA_KXZ(const netnode *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::pointer __cdecl ??C?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBAPEBDXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::pointer __cdecl ??C?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBAPEB_SXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::pointer __cdecl ??C?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBAPEB_UXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::pointer __cdecl ??C?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBAPEB_WXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::pointer __cdecl ??C?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBAPEADXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::pointer __cdecl ??C?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBAPEA_SXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::pointer __cdecl ??C?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBAPEA_UXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::pointer __cdecl ??C?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBAPEA_WXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::pointer __cdecl ??C?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__QEBAPEBHXZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::pointer __cdecl ??C?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEBAPEBU?$pair_$$CBHH_1_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::pointer __cdecl ??C?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEBAPEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::pointer __cdecl ??C?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEBAPEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::pointer __cdecl ??C?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEBAPEBU?$pair_$$CB_K_K_1_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::pointer __cdecl ??C?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEBAPEAU?$pair_$$CBHH_1_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::pointer __cdecl ??C?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEBAPEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::pointer __cdecl ??C?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEBAPEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::pointer __cdecl ??C?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEBAPEAU?$pair_$$CB_K_K_1_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::pointer __cdecl ??C?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEBAPEBHXZ(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::pointer __cdecl ??C?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEBAPEBU?$pair_$$CBHH_1_XZ(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::pointer __cdecl ??C?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEBAPEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::pointer __cdecl ??C?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEBAPEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::pointer __cdecl ??C?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEBAPEBU?$pair_$$CB_K_K_1_XZ(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::pointer __cdecl ??C?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEBAPEAU?$pair_$$CBHH_1_XZ(const std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::pointer __cdecl ??C?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEBAPEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::pointer __cdecl ??C?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEBAPEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::pointer __cdecl ??C?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEBAPEAU?$pair_$$CB_K_K_1_XZ(const std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
extlang_t *__cdecl ??C?$qrefcnt_t_Uextlang_t____QEBAPEAUextlang_t__XZ(const qrefcnt_t<extlang_t> *__hidden this);
qiterator<qrefcnt_t<source_file_t>> *__cdecl ??C?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________QEBAPEAV?$qiterator_V?$qrefcnt_t_Vsource_file_t______XZ(const qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__hidden this);
qiterator<qrefcnt_t<source_item_t>> *__cdecl ??C?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________QEBAPEAV?$qiterator_V?$qrefcnt_t_Vsource_item_t______XZ(const qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__hidden this);
refcnted_regex_t *__cdecl ??C?$qrefcnt_t_Vrefcnted_regex_t____QEBAPEAVrefcnted_regex_t__XZ(const qrefcnt_t<refcnted_regex_t> *__hidden this);
source_file_t *__cdecl ??C?$qrefcnt_t_Vsource_file_t____QEBAPEAVsource_file_t__XZ(const qrefcnt_t<source_file_t> *__hidden this);
source_item_t *__cdecl ??C?$qrefcnt_t_Vsource_item_t____QEBAPEAVsource_item_t__XZ(const qrefcnt_t<source_item_t> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBAPEBDXZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBAPEB_SXZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBAPEB_UXZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBAPEB_WXZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBAPEADXZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBAPEA_SXZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBAPEA_UXZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBAPEA_WXZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEBAPEBHXZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBAPEBU?$pair_$$CBHH_1_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBAPEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBAPEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBAPEBU?$pair_$$CB_K_K_1_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBAPEAU?$pair_$$CBHH_1_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBAPEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBAPEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::pointer __cdecl ??C?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBAPEAU?$pair_$$CB_K_K_1_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::reference __cdecl ??D?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBAAEBDXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::reference __cdecl ??D?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBAAEB_SXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::reference __cdecl ??D?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBAAEB_UXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::reference __cdecl ??D?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBAAEB_WXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::reference __cdecl ??D?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBAAEADXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::reference __cdecl ??D?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBAAEA_SXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::reference __cdecl ??D?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBAAEA_UXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::reference __cdecl ??D?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBAAEA_WXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::reference __cdecl ??D?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__QEBAAEBHXZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::reference __cdecl ??D?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEBAAEBU?$pair_$$CBHH_1_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::reference __cdecl ??D?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEBAAEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::reference __cdecl ??D?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEBAAEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::reference __cdecl ??D?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEBAAEBU?$pair_$$CB_K_K_1_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::reference __cdecl ??D?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEBAAEAU?$pair_$$CBHH_1_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::reference __cdecl ??D?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEBAAEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::reference __cdecl ??D?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEBAAEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::reference __cdecl ??D?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEBAAEAU?$pair_$$CB_K_K_1_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>::reference __cdecl ??D?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEBAAEBHXZ(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::reference __cdecl ??D?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEBAAEBU?$pair_$$CBHH_1_XZ(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::reference __cdecl ??D?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEBAAEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::reference __cdecl ??D?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEBAAEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::reference __cdecl ??D?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEBAAEBU?$pair_$$CB_K_K_1_XZ(const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>::reference __cdecl ??D?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEBAAEAU?$pair_$$CBHH_1_XZ(const std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>::reference __cdecl ??D?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEBAAEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>::reference __cdecl ??D?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEBAAEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>::reference __cdecl ??D?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEBAAEAU?$pair_$$CB_K_K_1_XZ(const std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
qrefcnt_t<source_file_t> __cdecl ??D?$qiterator_V?$qrefcnt_t_Vsource_file_t______UEAA?AV?$qrefcnt_t_Vsource_file_t____XZ(qiterator<qrefcnt_t<source_file_t>> *__hidden this);
qrefcnt_t<source_item_t> __cdecl ??D?$qiterator_V?$qrefcnt_t_Vsource_item_t______UEAA?AV?$qrefcnt_t_Vsource_item_t____XZ(qiterator<qrefcnt_t<source_item_t>> *__hidden this);
extlang_t *__cdecl ??D?$qrefcnt_t_Uextlang_t____QEBAAEAUextlang_t__XZ(const qrefcnt_t<extlang_t> *__hidden this);
qiterator<qrefcnt_t<source_file_t>> *__cdecl ??D?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________QEBAAEAV?$qiterator_V?$qrefcnt_t_Vsource_file_t______XZ(const qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__hidden this);
qiterator<qrefcnt_t<source_item_t>> *__cdecl ??D?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________QEBAAEAV?$qiterator_V?$qrefcnt_t_Vsource_item_t______XZ(const qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__hidden this);
refcnted_regex_t *__cdecl ??D?$qrefcnt_t_Vrefcnted_regex_t____QEBAAEAVrefcnted_regex_t__XZ(const qrefcnt_t<refcnted_regex_t> *__hidden this);
source_file_t *__cdecl ??D?$qrefcnt_t_Vsource_file_t____QEBAAEAVsource_file_t__XZ(const qrefcnt_t<source_file_t> *__hidden this);
source_item_t *__cdecl ??D?$qrefcnt_t_Vsource_item_t____QEBAAEAVsource_item_t__XZ(const qrefcnt_t<source_item_t> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::reference __cdecl ??D?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBAAEBDXZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::reference __cdecl ??D?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBAAEB_SXZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::reference __cdecl ??D?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBAAEB_UXZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::reference __cdecl ??D?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBAAEB_WXZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::reference __cdecl ??D?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBAAEADXZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::reference __cdecl ??D?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBAAEA_SXZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::reference __cdecl ??D?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBAAEA_UXZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::reference __cdecl ??D?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBAAEA_WXZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::reference __cdecl ??D?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEBAAEBHXZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::reference __cdecl ??D?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBAAEBU?$pair_$$CBHH_1_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::reference __cdecl ??D?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBAAEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::reference __cdecl ??D?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBAAEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::reference __cdecl ??D?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBAAEBU?$pair_$$CB_K_K_1_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::reference __cdecl ??D?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBAAEAU?$pair_$$CBHH_1_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::reference __cdecl ??D?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBAAEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____1_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::reference __cdecl ??D?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBAAEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____1_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::reference __cdecl ??D?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBAAEAU?$pair_$$CB_K_K_1_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
int __cdecl ??Dnode_iterator__QEBAHXZ(const node_iterator *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> __cdecl ??E?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAA?AV01_H_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, int);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??E?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAAEAV01_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> __cdecl ??E?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAA?AV01_H_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, int);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??E?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAAEAV01_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> __cdecl ??E?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAA?AV01_H_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, int);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??E?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAAEAV01_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> __cdecl ??E?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAA?AV01_H_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, int);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??E?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAAEAV01_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> __cdecl ??E?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAA?AV01_H_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, int);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??E?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAAEAV01_XZ(std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> __cdecl ??E?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAA?AV01_H_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, int);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??E?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAAEAV01_XZ(std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> __cdecl ??E?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAA?AV01_H_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, int);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??E?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAAEAV01_XZ(std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> __cdecl ??E?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAA?AV01_H_Z(std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, int);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??E?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAAEAV01_XZ(std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> __cdecl ??E?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__QEAA?AV01_H_Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, int);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__cdecl ??E?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__QEAAAEAV01_XZ(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ??E?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, int);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ??E?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ??E?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, int);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ??E?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ??E?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, int);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ??E?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ??E?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, int);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ??E?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ??E?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, int);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ??E?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ??E?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, int);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ??E?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ??E?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, int);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ??E?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ??E?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, int);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ??E?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> __cdecl ??E?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEAA?AV01_H_Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, int);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__cdecl ??E?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEAAAEAV01_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ??E?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEAA?AV01_H_Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, int);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ??E?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEAAAEAV01_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ??E?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEAA?AV01_H_Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, int);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ??E?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEAAAEAV01_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ??E?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEAA?AV01_H_Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, int);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ??E?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEAAAEAV01_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ??E?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEAA?AV01_H_Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, int);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ??E?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEAAAEAV01_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ??E?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, int);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ??E?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ??E?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, int);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ??E?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ??E?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, int);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ??E?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ??E?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, int);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ??E?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> __cdecl ??E?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, int);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??E?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> __cdecl ??E?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??E?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> __cdecl ??E?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??E?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> __cdecl ??E?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??E?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> __cdecl ??E?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, int);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??E?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> __cdecl ??E?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??E?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> __cdecl ??E?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??E?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> __cdecl ??E?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??E?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> __cdecl ??E?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__cdecl ??E?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> __cdecl ??E?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??E?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> __cdecl ??E?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??E?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> __cdecl ??E?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??E?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> __cdecl ??E?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??E?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> __cdecl ??E?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??E?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> __cdecl ??E?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??E?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> __cdecl ??E?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??E?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> __cdecl ??E?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??E?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
int128 *__cdecl ??Eint128__QEAAAEAV0_XZ(int128 *__hidden this);
node_iterator *__cdecl ??Enode_iterator__QEAAAEAV0_XZ(node_iterator *__hidden this);
uint128 *__cdecl ??Euint128__QEAAAEAV0_XZ(uint128 *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> __cdecl ??F?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAA?AV01_H_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, int);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??F?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAAEAV01_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> __cdecl ??F?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAA?AV01_H_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, int);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??F?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAAEAV01_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> __cdecl ??F?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAA?AV01_H_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, int);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??F?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAAEAV01_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> __cdecl ??F?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAA?AV01_H_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, int);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??F?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAAEAV01_XZ(std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> __cdecl ??F?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAA?AV01_H_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, int);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??F?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAAEAV01_XZ(std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> __cdecl ??F?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAA?AV01_H_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, int);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??F?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAAEAV01_XZ(std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> __cdecl ??F?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAA?AV01_H_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, int);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??F?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAAEAV01_XZ(std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> __cdecl ??F?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAA?AV01_H_Z(std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, int);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??F?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAAEAV01_XZ(std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> __cdecl ??F?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__QEAA?AV01_H_Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, int);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__cdecl ??F?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__QEAAAEAV01_XZ(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ??F?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, int);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ??F?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ??F?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, int);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ??F?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ??F?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, int);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ??F?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ??F?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, int);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ??F?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ??F?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, int);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ??F?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ??F?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, int);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ??F?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ??F?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, int);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ??F?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ??F?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, int);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ??F?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> __cdecl ??F?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEAA?AV01_H_Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, int);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__cdecl ??F?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__std__QEAAAEAV01_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ??F?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEAA?AV01_H_Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, int);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ??F?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__std__QEAAAEAV01_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ??F?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEAA?AV01_H_Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, int);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ??F?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__std__QEAAAEAV01_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ??F?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEAA?AV01_H_Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, int);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ??F?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__std__QEAAAEAV01_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ??F?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEAA?AV01_H_Z(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, int);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ??F?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__std__QEAAAEAV01_XZ(std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ??F?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, int);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ??F?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ??F?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, int);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ??F?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ??F?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAA?AV01_H_Z(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, int);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ??F?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAAAEAV01_XZ(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ??F?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAA?AV01_H_Z(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, int);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ??F?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAAAEAV01_XZ(std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> __cdecl ??F?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, int);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??F?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> __cdecl ??F?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??F?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> __cdecl ??F?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??F?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> __cdecl ??F?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??F?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> __cdecl ??F?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, int);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??F?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> __cdecl ??F?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??F?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> __cdecl ??F?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??F?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> __cdecl ??F?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, int);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??F?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> __cdecl ??F?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__cdecl ??F?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> __cdecl ??F?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??F?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> __cdecl ??F?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??F?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> __cdecl ??F?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??F?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> __cdecl ??F?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??F?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> __cdecl ??F?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??F?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> __cdecl ??F?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??F?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> __cdecl ??F?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??F?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> __cdecl ??F?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAA?AV01_H_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, int);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??F?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAAAEAV01_XZ(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
int128 *__cdecl ??Fint128__QEAAAEAV0_XZ(int128 *__hidden this);
uint128 *__cdecl ??Fuint128__QEAAAEAV0_XZ(uint128 *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> __cdecl ??G?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA?AV01__J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type __cdecl ??G?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA_JAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *_Right);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> __cdecl ??G?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA?AV01__J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type __cdecl ??G?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA_JAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *_Right);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> __cdecl ??G?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA?AV01__J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type __cdecl ??G?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA_JAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *_Right);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> __cdecl ??G?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA?AV01__J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type __cdecl ??G?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA_JAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *_Right);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> __cdecl ??G?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA?AV01__J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> __cdecl ??G?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA?AV01__J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> __cdecl ??G?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA?AV01__J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> __cdecl ??G?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA?AV01__J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
std::fpos<_Mbstatet> __cdecl ??G?$fpos_U_Mbstatet___std__QEBA?AV01__J_Z(const std::fpos<_Mbstatet> *__hidden this, std::streamoff _Off);
std::streamoff __cdecl ??G?$fpos_U_Mbstatet___std__QEBA_JAEBV01__Z(const std::fpos<_Mbstatet> *__hidden this, const std::fpos<_Mbstatet> *_Right);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> __cdecl ??G?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> __cdecl ??G?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> __cdecl ??G?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> __cdecl ??G?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> __cdecl ??G?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> __cdecl ??G?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> __cdecl ??G?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> __cdecl ??G?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> __cdecl ??G?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> __cdecl ??G?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> __cdecl ??G?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> __cdecl ??G?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> __cdecl ??G?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> __cdecl ??G?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> __cdecl ??G?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> __cdecl ??G?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> __cdecl ??G?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type _Off);
std::_Distance_unknown __cdecl ??G_Distance_unknown_std__QEBA?AU01_XZ(const std::_Distance_unknown *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> __cdecl ??H?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA?AV01__J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> __cdecl ??H?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA?AV01__J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> __cdecl ??H?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA?AV01__J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> __cdecl ??H?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA?AV01__J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> __cdecl ??H?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA?AV01__J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> __cdecl ??H?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA?AV01__J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> __cdecl ??H?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA?AV01__J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> __cdecl ??H?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA?AV01__J_Z(const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
_qstring<char> __cdecl ??H?$_qstring_D__QEBA?AV0_AEBV0__Z(const _qstring<char> *__hidden this, const _qstring<char> *r);
_qstring<unsigned char> __cdecl ??H?$_qstring_E__QEBA?AV0_AEBV0__Z(const _qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *r);
_qstring<wchar_t> __cdecl ??H?$_qstring__W__QEBA?AV0_AEBV0__Z(const _qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *r);
std::fpos<_Mbstatet> __cdecl ??H?$fpos_U_Mbstatet___std__QEBA?AV01__J_Z(const std::fpos<_Mbstatet> *__hidden this, std::streamoff _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> __cdecl ??H?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> __cdecl ??H?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> __cdecl ??H?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> __cdecl ??H?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> __cdecl ??H?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> __cdecl ??H?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> __cdecl ??H?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> __cdecl ??H?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> __cdecl ??H?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> __cdecl ??H?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> __cdecl ??H?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> __cdecl ??H?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> __cdecl ??H?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> __cdecl ??H?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> __cdecl ??H?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> __cdecl ??H?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> __cdecl ??H?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBA?AV01__J_Z(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type _Off);
bool __cdecl ??M?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *_Right);
bool __cdecl ??M?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *_Right);
bool __cdecl ??M?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *_Right);
bool __cdecl ??M?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *_Right);
bool __cdecl ??M?$_qstring_D__QEBA_NAEBV0__Z(const _qstring<char> *__hidden this, const _qstring<char> *r);
bool __cdecl ??M?$_qstring_D__QEBA_NPEBD_Z(const _qstring<char> *__hidden this, char *r);
bool __cdecl ??M?$_qstring_E__QEBA_NAEBV0__Z(const _qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *r);
bool __cdecl ??M?$_qstring_E__QEBA_NPEBE_Z(const _qstring<unsigned char> *__hidden this, unsigned __int8 *r);
bool __cdecl ??M?$_qstring__W__QEBA_NAEBV0__Z(const _qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *r);
bool __cdecl ??M?$_qstring__W__QEBA_NPEB_W_Z(const _qstring<wchar_t> *__hidden this, __int16 *r);
bool __cdecl ??Margloc_t__QEBA_NAEBV0__Z(const argloc_t *__hidden this, const argloc_t *r);
bool __cdecl ??Margpart_t__QEBA_NAEBU0__Z(const argpart_t *__hidden this, const argpart_t *r);
bool __cdecl ??Mbitfield_type_data_t__QEBA_NAEBU0__Z(const bitfield_type_data_t *__hidden this, const bitfield_type_data_t *r);
bool __cdecl ??Mbitrange_t__QEBA_NAEBV0__Z(const bitrange_t *__hidden this, const bitrange_t *r);
bool __cdecl ??Mbpt_location_t__QEBA_NAEBU0__Z(const bpt_location_t *__hidden this, const bpt_location_t *r);
bool __cdecl ??Mcustom_data_type_ids_t__QEBA_NAEBU0__Z(const custom_data_type_ids_t *__hidden this, const custom_data_type_ids_t *r);
bool __cdecl ??Mcustom_refinfo_handler_t__QEBA_NAEBU0__Z(const custom_refinfo_handler_t *__hidden this, const custom_refinfo_handler_t *r);
bool __cdecl ??Mdata_format_t__QEBA_NAEBU0__Z(const data_format_t *__hidden this, const data_format_t *r);
bool __cdecl ??Mdata_type_t__QEBA_NAEBU0__Z(const data_type_t *__hidden this, const data_type_t *r);
bool __cdecl ??Mdirentry_t__QEBA_NAEBU0__Z(const direntry_t *__hidden this, const direntry_t *r);
bool __cdecl ??Mdirtree_cursor_t__QEBA_NAEBU0__Z(const dirtree_cursor_t *__hidden this, const dirtree_cursor_t *r);
bool __cdecl ??Medge_segment_t__QEBA_NAEBU0__Z(const edge_segment_t *__hidden this, const edge_segment_t *r);
bool __cdecl ??Medge_t__QEBA_NAEBU0__Z(const edge_t *__hidden this, const edge_t *y);
bool __cdecl ??Menum_const_t__QEBA_NAEBU0__Z(const enum_const_t *__hidden this, const enum_const_t *r);
bool __cdecl ??Mfixup_handler_t__QEBA_NAEBU0__Z(const fixup_handler_t *__hidden this, const fixup_handler_t *r);
bool __cdecl ??Mfpvalue_t__QEBA_NAEBU0__Z(const fpvalue_t *__hidden this, const fpvalue_t *r);
bool __cdecl ??Mfunc_t__QEBA_NAEBV0__Z(const func_t *__hidden this, const func_t *r);
bool __cdecl ??Mplain_char_ptr_t_ida_syntax_highlighter_t__QEBA_NAEBU01__Z(const ida_syntax_highlighter_t::plain_char_ptr_t *__hidden this, const ida_syntax_highlighter_t::plain_char_ptr_t *r);
bool __cdecl ??Mrange_t__QEBA_NAEBU0__Z(const range_t *__hidden this, const range_t *r);
bool __cdecl ??Mrect_t__QEBA_NAEBU0__Z(const rect_t *__hidden this, const rect_t *r);
bool __cdecl ??Mrefinfo_t__QEBA_NAEBU0__Z(const refinfo_t *__hidden this, const refinfo_t *r);
bool __cdecl ??Mreg_info_t__QEBA_NAEBU0__Z(const reg_info_t *__hidden this, const reg_info_t *r);
bool __cdecl ??Mregarg_t__QEBA_NAEBU0__Z(const regarg_t *__hidden this, const regarg_t *r);
bool __cdecl ??Mregvar_t__QEBA_NAEBU0__Z(const regvar_t *__hidden this, const regvar_t *r);
bool __cdecl ??Msegment_t__QEBA_NAEBV0__Z(const segment_t *__hidden this, const segment_t *r);
bool __cdecl ??Mselection_item_t__QEBA_NAEBU0__Z(const selection_item_t *__hidden this, const selection_item_t *r);
bool __cdecl ??Msnapshot_t__QEBA_NAEBV0__Z(const snapshot_t *__hidden this, const snapshot_t *r);
bool __cdecl ??Mstkpnt_t__QEBA_NAEBU0__Z(const stkpnt_t *__hidden this, const stkpnt_t *r);
bool __cdecl ??Mstkpnts_t__QEBA_NAEBU0__Z(const stkpnts_t *__hidden this, const stkpnts_t *r);
bool __cdecl ??Mstring_info_t__QEBA_NAEBU0__Z(const string_info_t *__hidden this, const string_info_t *r);
bool __cdecl ??Mstrpath_t__QEBA_NAEBU0__Z(const strpath_t *__hidden this, const strpath_t *r);
bool __cdecl ??Mtinfo_t__QEBA_NAEBV0__Z(const tinfo_t *__hidden this, const tinfo_t *r);
bool __cdecl ??Mtype_attr_t__QEBA_NAEBU0__Z(const type_attr_t *__hidden this, const type_attr_t *r);
bool __cdecl ??Mudt_member_t__QEBA_NAEBU0__Z(const udt_member_t *__hidden this, const udt_member_t *r);
bool __cdecl ??Mxreflist_entry_t__QEBA_NAEBU0__Z(const xreflist_entry_t *__hidden this, const xreflist_entry_t *r);
bool __cdecl ??N?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *_Right);
bool __cdecl ??N?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *_Right);
bool __cdecl ??N?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *_Right);
bool __cdecl ??N?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *_Right);
bool __cdecl ??N?$_qstring_D__QEBA_NAEBV0__Z(const _qstring<char> *__hidden this, const _qstring<char> *r);
bool __cdecl ??N?$_qstring_E__QEBA_NAEBV0__Z(const _qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *r);
bool __cdecl ??N?$_qstring__W__QEBA_NAEBV0__Z(const _qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *r);
bool __cdecl ??Nargloc_t__QEBA_NAEBV0__Z(const argloc_t *__hidden this, const argloc_t *r);
bool __cdecl ??Nbitfield_type_data_t__QEBA_NAEBU0__Z(const bitfield_type_data_t *__hidden this, const bitfield_type_data_t *r);
bool __cdecl ??Nbitrange_t__QEBA_NAEBV0__Z(const bitrange_t *__hidden this, const bitrange_t *r);
bool __cdecl ??Nbpt_location_t__QEBA_NAEBU0__Z(const bpt_location_t *__hidden this, const bpt_location_t *r);
bool __cdecl ??Ncustom_data_type_ids_t__QEBA_NAEBU0__Z(const custom_data_type_ids_t *__hidden this, const custom_data_type_ids_t *r);
bool __cdecl ??Ncustom_refinfo_handler_t__QEBA_NAEBU0__Z(const custom_refinfo_handler_t *__hidden this, const custom_refinfo_handler_t *r);
bool __cdecl ??Ndata_format_t__QEBA_NAEBU0__Z(const data_format_t *__hidden this, const data_format_t *r);
bool __cdecl ??Ndata_type_t__QEBA_NAEBU0__Z(const data_type_t *__hidden this, const data_type_t *r);
bool __cdecl ??Ndirtree_cursor_t__QEBA_NAEBU0__Z(const dirtree_cursor_t *__hidden this, const dirtree_cursor_t *r);
bool __cdecl ??Nenum_const_t__QEBA_NAEBU0__Z(const enum_const_t *__hidden this, const enum_const_t *r);
bool __cdecl ??Nfixup_handler_t__QEBA_NAEBU0__Z(const fixup_handler_t *__hidden this, const fixup_handler_t *r);
bool __cdecl ??Nfpvalue_t__QEBA_NAEBU0__Z(const fpvalue_t *__hidden this, const fpvalue_t *r);
bool __cdecl ??Nfunc_t__QEBA_NAEBV0__Z(const func_t *__hidden this, const func_t *r);
bool __cdecl ??Nrefinfo_t__QEBA_NAEBU0__Z(const refinfo_t *__hidden this, const refinfo_t *r);
bool __cdecl ??Nreg_info_t__QEBA_NAEBU0__Z(const reg_info_t *__hidden this, const reg_info_t *r);
bool __cdecl ??Nregarg_t__QEBA_NAEBU0__Z(const regarg_t *__hidden this, const regarg_t *r);
bool __cdecl ??Nregvar_t__QEBA_NAEBU0__Z(const regvar_t *__hidden this, const regvar_t *r);
bool __cdecl ??Nsegment_t__QEBA_NAEBV0__Z(const segment_t *__hidden this, const segment_t *r);
bool __cdecl ??Nsnapshot_t__QEBA_NAEBV0__Z(const snapshot_t *__hidden this, const snapshot_t *r);
bool __cdecl ??Nstkpnt_t__QEBA_NAEBU0__Z(const stkpnt_t *__hidden this, const stkpnt_t *r);
bool __cdecl ??Nstkpnts_t__QEBA_NAEBU0__Z(const stkpnts_t *__hidden this, const stkpnts_t *r);
bool __cdecl ??Nstrpath_t__QEBA_NAEBU0__Z(const strpath_t *__hidden this, const strpath_t *r);
bool __cdecl ??Ntinfo_t__QEBA_NAEBV0__Z(const tinfo_t *__hidden this, const tinfo_t *r);
bool __cdecl ??Nxreflist_entry_t__QEBA_NAEBU0__Z(const xreflist_entry_t *__hidden this, const xreflist_entry_t *r);
bool __cdecl ??O?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *_Right);
bool __cdecl ??O?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *_Right);
bool __cdecl ??O?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *_Right);
bool __cdecl ??O?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *_Right);
bool __cdecl ??O?$_qstring_D__QEBA_NAEBV0__Z(const _qstring<char> *__hidden this, const _qstring<char> *r);
bool __cdecl ??O?$_qstring_E__QEBA_NAEBV0__Z(const _qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *r);
bool __cdecl ??O?$_qstring__W__QEBA_NAEBV0__Z(const _qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *r);
bool __cdecl ??Oargloc_t__QEBA_NAEBV0__Z(const argloc_t *__hidden this, const argloc_t *r);
bool __cdecl ??Obitfield_type_data_t__QEBA_NAEBU0__Z(const bitfield_type_data_t *__hidden this, const bitfield_type_data_t *r);
bool __cdecl ??Obitrange_t__QEBA_NAEBV0__Z(const bitrange_t *__hidden this, const bitrange_t *r);
bool __cdecl ??Obpt_location_t__QEBA_NAEBU0__Z(const bpt_location_t *__hidden this, const bpt_location_t *r);
bool __cdecl ??Ocustom_data_type_ids_t__QEBA_NAEBU0__Z(const custom_data_type_ids_t *__hidden this, const custom_data_type_ids_t *r);
bool __cdecl ??Ocustom_refinfo_handler_t__QEBA_NAEBU0__Z(const custom_refinfo_handler_t *__hidden this, const custom_refinfo_handler_t *r);
bool __cdecl ??Odata_format_t__QEBA_NAEBU0__Z(const data_format_t *__hidden this, const data_format_t *r);
bool __cdecl ??Odata_type_t__QEBA_NAEBU0__Z(const data_type_t *__hidden this, const data_type_t *r);
bool __cdecl ??Odirtree_cursor_t__QEBA_NAEBU0__Z(const dirtree_cursor_t *__hidden this, const dirtree_cursor_t *r);
bool __cdecl ??Oenum_const_t__QEBA_NAEBU0__Z(const enum_const_t *__hidden this, const enum_const_t *r);
bool __cdecl ??Ofixup_handler_t__QEBA_NAEBU0__Z(const fixup_handler_t *__hidden this, const fixup_handler_t *r);
bool __cdecl ??Ofpvalue_t__QEBA_NAEBU0__Z(const fpvalue_t *__hidden this, const fpvalue_t *r);
bool __cdecl ??Ofunc_t__QEBA_NAEBV0__Z(const func_t *__hidden this, const func_t *r);
bool __cdecl ??Orange_t__QEBA_NAEBU0__Z(const range_t *__hidden this, const range_t *r);
bool __cdecl ??Orefinfo_t__QEBA_NAEBU0__Z(const refinfo_t *__hidden this, const refinfo_t *r);
bool __cdecl ??Oreg_info_t__QEBA_NAEBU0__Z(const reg_info_t *__hidden this, const reg_info_t *r);
bool __cdecl ??Oregarg_t__QEBA_NAEBU0__Z(const regarg_t *__hidden this, const regarg_t *r);
bool __cdecl ??Oregvar_t__QEBA_NAEBU0__Z(const regvar_t *__hidden this, const regvar_t *r);
bool __cdecl ??Osegment_t__QEBA_NAEBV0__Z(const segment_t *__hidden this, const segment_t *r);
bool __cdecl ??Osnapshot_t__QEBA_NAEBV0__Z(const snapshot_t *__hidden this, const snapshot_t *r);
bool __cdecl ??Ostkpnt_t__QEBA_NAEBU0__Z(const stkpnt_t *__hidden this, const stkpnt_t *r);
bool __cdecl ??Ostkpnts_t__QEBA_NAEBU0__Z(const stkpnts_t *__hidden this, const stkpnts_t *r);
bool __cdecl ??Ostrpath_t__QEBA_NAEBU0__Z(const strpath_t *__hidden this, const strpath_t *r);
bool __cdecl ??Otinfo_t__QEBA_NAEBV0__Z(const tinfo_t *__hidden this, const tinfo_t *r);
bool __cdecl ??Oxreflist_entry_t__QEBA_NAEBU0__Z(const xreflist_entry_t *__hidden this, const xreflist_entry_t *r);
bool __cdecl ??P?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *_Right);
bool __cdecl ??P?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *_Right);
bool __cdecl ??P?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *_Right);
bool __cdecl ??P?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBA_NAEBV01__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *_Right);
bool __cdecl ??P?$_qstring_D__QEBA_NAEBV0__Z(const _qstring<char> *__hidden this, const _qstring<char> *r);
bool __cdecl ??P?$_qstring_E__QEBA_NAEBV0__Z(const _qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *r);
bool __cdecl ??P?$_qstring__W__QEBA_NAEBV0__Z(const _qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *r);
bool __cdecl ??Pargloc_t__QEBA_NAEBV0__Z(const argloc_t *__hidden this, const argloc_t *r);
bool __cdecl ??Pbitfield_type_data_t__QEBA_NAEBU0__Z(const bitfield_type_data_t *__hidden this, const bitfield_type_data_t *r);
bool __cdecl ??Pbitrange_t__QEBA_NAEBV0__Z(const bitrange_t *__hidden this, const bitrange_t *r);
bool __cdecl ??Pbpt_location_t__QEBA_NAEBU0__Z(const bpt_location_t *__hidden this, const bpt_location_t *r);
bool __cdecl ??Pcustom_data_type_ids_t__QEBA_NAEBU0__Z(const custom_data_type_ids_t *__hidden this, const custom_data_type_ids_t *r);
bool __cdecl ??Pcustom_refinfo_handler_t__QEBA_NAEBU0__Z(const custom_refinfo_handler_t *__hidden this, const custom_refinfo_handler_t *r);
bool __cdecl ??Pdata_format_t__QEBA_NAEBU0__Z(const data_format_t *__hidden this, const data_format_t *r);
bool __cdecl ??Pdata_type_t__QEBA_NAEBU0__Z(const data_type_t *__hidden this, const data_type_t *r);
bool __cdecl ??Pdirtree_cursor_t__QEBA_NAEBU0__Z(const dirtree_cursor_t *__hidden this, const dirtree_cursor_t *r);
bool __cdecl ??Penum_const_t__QEBA_NAEBU0__Z(const enum_const_t *__hidden this, const enum_const_t *r);
bool __cdecl ??Pfixup_handler_t__QEBA_NAEBU0__Z(const fixup_handler_t *__hidden this, const fixup_handler_t *r);
bool __cdecl ??Pfpvalue_t__QEBA_NAEBU0__Z(const fpvalue_t *__hidden this, const fpvalue_t *r);
bool __cdecl ??Pfunc_t__QEBA_NAEBV0__Z(const func_t *__hidden this, const func_t *r);
bool __cdecl ??Prefinfo_t__QEBA_NAEBU0__Z(const refinfo_t *__hidden this, const refinfo_t *r);
bool __cdecl ??Preg_info_t__QEBA_NAEBU0__Z(const reg_info_t *__hidden this, const reg_info_t *r);
bool __cdecl ??Pregarg_t__QEBA_NAEBU0__Z(const regarg_t *__hidden this, const regarg_t *r);
bool __cdecl ??Pregvar_t__QEBA_NAEBU0__Z(const regvar_t *__hidden this, const regvar_t *r);
bool __cdecl ??Psegment_t__QEBA_NAEBV0__Z(const segment_t *__hidden this, const segment_t *r);
bool __cdecl ??Psnapshot_t__QEBA_NAEBV0__Z(const snapshot_t *__hidden this, const snapshot_t *r);
bool __cdecl ??Pstkpnt_t__QEBA_NAEBU0__Z(const stkpnt_t *__hidden this, const stkpnt_t *r);
bool __cdecl ??Pstkpnts_t__QEBA_NAEBU0__Z(const stkpnts_t *__hidden this, const stkpnts_t *r);
bool __cdecl ??Pstrpath_t__QEBA_NAEBU0__Z(const strpath_t *__hidden this, const strpath_t *r);
bool __cdecl ??Ptinfo_t__QEBA_NAEBV0__Z(const tinfo_t *__hidden this, const tinfo_t *r);
bool __cdecl ??Ptype_attr_t__QEBA_NAEBU0__Z(const type_attr_t *__hidden this, const type_attr_t *r);
bool __cdecl ??Pxreflist_entry_t__QEBA_NAEBU0__Z(const xreflist_entry_t *__hidden this, const xreflist_entry_t *r);
size_t __cdecl ??R?$hash_$$T_std__QEBA_K$$T_Z(const std::hash<std::nullptr_t> *__hidden this, std::nullptr_t);
size_t __cdecl ??R?$hash_M_std__QEBA_KM_Z(const std::hash<float> *__hidden this, const float _Keyval);
size_t __cdecl ??R?$hash_N_std__QEBA_KN_Z(const std::hash<double> *__hidden this, const double _Keyval);
size_t __cdecl ??R?$hash_O_std__QEBA_KO_Z(const std::hash<long double> *__hidden this, const long double _Keyval);
std::integral_constant<unsigned long long, 0>::value_type __cdecl ??R?$integral_constant__K$0A__std__QEBA_KXZ(const std::integral_constant<unsigned long long, 0> *__hidden this);
std::integral_constant<bool, true>::value_type __cdecl ??R?$integral_constant__N$00_std__QEBA_NXZ(const std::integral_constant<bool, true> *__hidden this);
std::integral_constant<bool, false>::value_type __cdecl ??R?$integral_constant__N$0A__std__QEBA_NXZ(const std::integral_constant<bool, false> *__hidden this);
bool __cdecl ??R?$less_H_std__QEBA_NAEBH0_Z(const std::less<int> *__hidden this, int *_Left, int *_Right);
bool __cdecl ??R?$less_V?$_qstring_D___std__QEBA_NAEBV?$_qstring_D__0_Z(const std::less<_qstring<char>> *__hidden this, _qstring<char> *_Left, _qstring<char> *_Right);
bool __cdecl ??R?$less__K_std__QEBA_NAEB_K0_Z(const std::less<unsigned long long> *__hidden this, unsigned __int64 *_Left, unsigned __int64 *_Right);
std::_Rand_urng_from_func::result_type __cdecl ??R_Rand_urng_from_func_std__QEAAIXZ(std::_Rand_urng_from_func *__hidden this);
int128 *__cdecl ??Xint128__QEAAAEAV0_AEBV0__Z(int128 *__hidden this, const int128 *y);
uint128 *__cdecl ??Xuint128__QEAAAEAV0_AEBV0__Z(uint128 *__hidden this, const uint128 *y);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??Y?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAAEAV01__J_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??Y?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAAEAV01__J_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??Y?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAAEAV01__J_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??Y?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAAEAV01__J_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??Y?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAAEAV01__J_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??Y?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAAEAV01__J_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??Y?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAAEAV01__J_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??Y?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAAEAV01__J_Z(std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
_qstring<char> *__cdecl ??Y?$_qstring_D__QEAAAEAV0_AEBV0__Z(_qstring<char> *__hidden this, const _qstring<char> *r);
_qstring<char> *__cdecl ??Y?$_qstring_D__QEAAAEAV0_D_Z(_qstring<char> *__hidden this, char c);
_qstring<unsigned char> *__cdecl ??Y?$_qstring_E__QEAAAEAV0_AEBV0__Z(_qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *r);
_qstring<unsigned char> *__cdecl ??Y?$_qstring_E__QEAAAEAV0_E_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 c);
_qstring<wchar_t> *__cdecl ??Y?$_qstring__W__QEAAAEAV0_AEBV0__Z(_qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *r);
_qstring<wchar_t> *__cdecl ??Y?$_qstring__W__QEAAAEAV0__W_Z(_qstring<wchar_t> *__hidden this, __int16 c);
std::basic_string<char> *__cdecl ??Y?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV01_AEBV01__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ??Y?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV01_D_Z(std::basic_string<char> *__hidden this, char _Ch);
std::basic_string<char> *__cdecl ??Y?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV01_QEBD_Z(std::basic_string<char> *__hidden this, char *const _Ptr);
std::basic_string<char> *__cdecl ??Y?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV01_V?$initializer_list_D_1__Z(std::basic_string<char> *__hidden this, std::initializer_list<char> _Ilist);
std::basic_string<char16_t> *__cdecl ??Y?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV01_AEBV01__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ??Y?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV01_QEB_S_Z(std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr);
std::basic_string<char16_t> *__cdecl ??Y?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV01_V?$initializer_list__S_1__Z(std::basic_string<char16_t> *__hidden this, std::initializer_list<char16_t> _Ilist);
std::basic_string<char16_t> *__cdecl ??Y?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV01__S_Z(std::basic_string<char16_t> *__hidden this, __int16 _Ch);
std::basic_string<char32_t> *__cdecl ??Y?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV01_AEBV01__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ??Y?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV01_QEB_U_Z(std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr);
std::basic_string<char32_t> *__cdecl ??Y?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV01_V?$initializer_list__U_1__Z(std::basic_string<char32_t> *__hidden this, std::initializer_list<char32_t> _Ilist);
std::basic_string<char32_t> *__cdecl ??Y?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV01__U_Z(std::basic_string<char32_t> *__hidden this, __int32 _Ch);
std::basic_string<wchar_t> *__cdecl ??Y?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV01_AEBV01__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ??Y?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV01_QEB_W_Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr);
std::basic_string<wchar_t> *__cdecl ??Y?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV01_V?$initializer_list__W_1__Z(std::basic_string<wchar_t> *__hidden this, std::initializer_list<wchar_t> _Ilist);
std::basic_string<wchar_t> *__cdecl ??Y?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV01__W_Z(std::basic_string<wchar_t> *__hidden this, __int16 _Ch);
std::fpos<_Mbstatet> *__cdecl ??Y?$fpos_U_Mbstatet___std__QEAAAEAV01__J_Z(std::fpos<_Mbstatet> *__hidden this, std::streamoff _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??Y?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??Y?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??Y?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??Y?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??Y?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??Y?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??Y?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??Y?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__cdecl ??Y?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??Y?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??Y?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??Y?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??Y?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??Y?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??Y?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??Y?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??Y?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type _Off);
int128 *__cdecl ??Yint128__QEAAAEAV0_AEBV0__Z(int128 *__hidden this, const int128 *y);
uint128 *__cdecl ??Yuint128__QEAAAEAV0_AEBV0__Z(uint128 *__hidden this, const uint128 *y);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??Z?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAAEAV01__J_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??Z?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAAEAV01__J_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??Z?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAAEAV01__J_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??Z?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAAEAV01__J_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ??Z?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAAEAV01__J_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ??Z?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAAEAV01__J_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ??Z?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAAEAV01__J_Z(std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ??Z?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAAEAV01__J_Z(std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
std::fpos<_Mbstatet> *__cdecl ??Z?$fpos_U_Mbstatet___std__QEAAAEAV01__J_Z(std::fpos<_Mbstatet> *__hidden this, std::streamoff _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??Z?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??Z?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??Z?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??Z?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__cdecl ??Z?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__cdecl ??Z?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__cdecl ??Z?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>>::difference_type _Off);
std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__cdecl ??Z?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this, const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__cdecl ??Z?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??Z?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??Z?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??Z?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??Z?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__cdecl ??Z?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__cdecl ??Z?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__cdecl ??Z?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>>::difference_type _Off);
std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__cdecl ??Z?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEAAAEAV01__J_Z(std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>>::difference_type _Off);
int128 *__cdecl ??Zint128__QEAAAEAV0_AEBV0__Z(int128 *__hidden this, const int128 *y);
uint128 *__cdecl ??Zuint128__QEAAAEAV0_AEBV0__Z(uint128 *__hidden this, const uint128 *y);
int128 *__cdecl ??_0int128__QEAAAEAV0_AEBV0__Z(int128 *__hidden this, const int128 *y);
uint128 *__cdecl ??_0uint128__QEAAAEAV0_AEBV0__Z(uint128 *__hidden this, const uint128 *y);
int128 *__cdecl ??_1int128__QEAAAEAV0_AEBV0__Z(int128 *__hidden this, const int128 *y);
uint128 *__cdecl ??_1uint128__QEAAAEAV0_AEBV0__Z(uint128 *__hidden this, const uint128 *y);
int128 *__cdecl ??_2int128__QEAAAEAV0_H_Z(int128 *__hidden this, int cnt);
uint128 *__cdecl ??_2uint128__QEAAAEAV0_H_Z(uint128 *__hidden this, int cnt);
int128 *__cdecl ??_3int128__QEAAAEAV0_H_Z(int128 *__hidden this, int cnt);
uint128 *__cdecl ??_3uint128__QEAAAEAV0_H_Z(uint128 *__hidden this, int cnt);
int128 *__cdecl ??_4int128__QEAAAEAV0_AEBV0__Z(int128 *__hidden this, const int128 *y);
uint128 *__cdecl ??_4uint128__QEAAAEAV0_AEBV0__Z(uint128 *__hidden this, const uint128 *y);
int128 *__cdecl ??_5int128__QEAAAEAV0_AEBV0__Z(int128 *__hidden this, const int128 *y);
uint128 *__cdecl ??_5uint128__QEAAAEAV0_AEBV0__Z(uint128 *__hidden this, const uint128 *y);
int128 *__cdecl ??_6int128__QEAAAEAV0_AEBV0__Z(int128 *__hidden this, const int128 *y);
uint128 *__cdecl ??_6uint128__QEAAAEAV0_AEBV0__Z(uint128 *__hidden this, const uint128 *y);
void *__cdecl ??_U?$qlist_PEAVui_request_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_D__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_E__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_H__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_I__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_PEAUbpt_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_PEAUextlang_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_PEAUline_rendering_output_entry_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_PEAVsnapshot_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_PEBD__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_PEBUbpt_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_PEBVrangeset_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_PEBVtwinline_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uargpart_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ubpt_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ubptaddrs_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ucall_stack_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ucatch_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ucfgopt_set_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uchannel_redir_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ucliopt_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ucompiled_binpat_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Udebug_event_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Udirentry_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Udirtree_cursor_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uea_name_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uedge_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uenum_member_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uexception_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ufixup_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ufuncarg_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ugroup_crinfo_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uidc_global_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uidp_desc_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uidp_name_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uioport_bit_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uioport_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ujvalue_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ukvp_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ulochist_entry_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ulowcnd_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Umemory_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Umemreg_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Umodinfo_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Umovbpt_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Umulticmt_t_ida_syntax_highlighter_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Upoint_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uprocess_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uqbasic_block_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Urange_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Urect_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Urefinfo_desc_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ureg_access_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ureg_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uregister_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uregobj_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uregval_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Urow_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uscattered_segm_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Usegm_move_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uselection_item_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Usimd_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Usimpleline_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Ustkpnt_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Utev_info_reg_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Utev_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Utev_reg_value_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uthread_name_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Utoken_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Utype_attr_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uudt_member_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uupdate_bpt_info_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Uxreflist_entry_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_V?$_qstring_D____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_V?$_qstring_E____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_V?$_qstring__W____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_V?$qrefcnt_t_Vsource_item_t______SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_V?$qvector_H____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_V?$qvector_PEBD____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_V?$qvector_PEBVtwinline_t______SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_V?$qvector__J____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Vargloc_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Vintmap_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Vnode_set_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Vop_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Vrangeset_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Vsync_source_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Vtinfo_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Vtryblk_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Vtwinline_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_Vvalstr_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector_W4movbpt_code_t____SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector__J__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector__K__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector__N__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_U?$qvector__W__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uaction_handler_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uargloc_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uargpart_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uarray_type_data_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uchooser_base_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uenum_member_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uenum_type_data_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Ugdl_graph_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uintmap_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uintset_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Ulinearray_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Unode_ordering_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uplace_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uplugmod_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uptr_type_data_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Urangeset_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uscattered_aloc_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Usimpleline_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Usnapshot_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Utinfo_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Utwinline_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Utwinpos_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Utypedef_type_data_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uudt_member_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uudt_type_data_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uvalinfo_t__SAPEAX_K_Z(size_t _s);
void *__cdecl ??_Uvalstr_t__SAPEAX_K_Z(size_t _s);
void __cdecl ??_V?$qlist_PEAVui_request_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_D__SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_E__SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_H__SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_I__SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_PEAUbpt_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_PEAUextlang_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_PEAUline_rendering_output_entry_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_PEAVsnapshot_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_PEBD__SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_PEBUbpt_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_PEBVrangeset_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_PEBVtwinline_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uargpart_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ubpt_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ubptaddrs_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ucall_stack_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ucatch_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ucfgopt_set_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uchannel_redir_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ucliopt_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ucompiled_binpat_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Udebug_event_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Udirentry_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Udirtree_cursor_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uea_name_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uedge_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uenum_member_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uexception_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ufixup_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ufuncarg_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ugroup_crinfo_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uidc_global_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uidp_desc_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uidp_name_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uioport_bit_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uioport_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ujvalue_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ukvp_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ulochist_entry_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ulowcnd_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Umemory_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Umemreg_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Umodinfo_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Umovbpt_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Umulticmt_t_ida_syntax_highlighter_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Upoint_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uprocess_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uqbasic_block_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Urange_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Urect_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Urefinfo_desc_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ureg_access_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ureg_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uregister_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uregobj_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uregval_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Urow_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uscattered_segm_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Usegm_move_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uselection_item_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Usimd_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Usimpleline_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Ustkpnt_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Utev_info_reg_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Utev_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Utev_reg_value_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uthread_name_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Utoken_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Utype_attr_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uudt_member_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uupdate_bpt_info_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Uxreflist_entry_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_V?$_qstring_D____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_V?$_qstring_E____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_V?$_qstring__W____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_V?$qrefcnt_t_Vsource_item_t______SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_V?$qvector_H____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_V?$qvector_PEBD____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_V?$qvector_PEBVtwinline_t______SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_V?$qvector__J____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Vargloc_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Vintmap_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Vnode_set_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Vop_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Vrangeset_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Vsync_source_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Vtinfo_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Vtryblk_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Vtwinline_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_Vvalstr_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector_W4movbpt_code_t____SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector__J__SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector__K__SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector__N__SAXPEAX_Z(void *_blk);
void __cdecl ??_V?$qvector__W__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vaction_handler_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vargloc_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vargpart_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Varray_type_data_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vchooser_base_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Venum_member_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Venum_type_data_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vgdl_graph_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vintmap_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vintset_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vlinearray_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vnode_ordering_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vplace_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vplugmod_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vptr_type_data_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vrangeset_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vscattered_aloc_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vsimpleline_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vsnapshot_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vtinfo_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vtwinline_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vtwinpos_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vtypedef_type_data_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vudt_member_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vudt_type_data_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vvalinfo_t__SAXPEAX_Z(void *_blk);
void __cdecl ??_Vvalstr_t__SAXPEAX_Z(void *_blk);
int32 __cdecl ?CalcEXE_Length_exehdr__QEAAHXZ(exehdr *__hidden this);
void __cdecl ?CalcEXE_Pages_exehdr__QEAAXH_Z(exehdr *__hidden this, int32 len);
void __cdecl ?_Adopt__Iterator_base0_std__QEAAXPEBX_Z(std::_Iterator_base0 *__hidden this, const void *);
void __cdecl ?_Adopt__Iterator_base12_std__QEAAXPEBU_Container_base12_2__Z(std::_Iterator_base12 *__hidden this, const std::_Container_base12 *_Parent);
void __cdecl ?_Alloc_proxy__Container_base0_std__QEAAXAEBU_Fake_allocator_2__Z(std::_Container_base0 *__hidden this, const std::_Fake_allocator *);
void __cdecl ?_Alloc_sentinel_and_proxy_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__IEAAXXZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
void __cdecl ?_Alloc_sentinel_and_proxy_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__IEAAXXZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
void __cdecl ?_Alloc_sentinel_and_proxy_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__IEAAXXZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
void __cdecl ?_Alloc_sentinel_and_proxy_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__IEAAXXZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
void __cdecl ?_Alloc_sentinel_and_proxy_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__IEAAXXZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
void *__cdecl ?_Allocate__Default_allocate_traits_std__SAPEAX_K_Z(const size_t _Bytes);
void __cdecl ?_Become_small_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXXZ(std::basic_string<char> *__hidden this);
void __cdecl ?_Become_small_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXXZ(std::basic_string<char16_t> *__hidden this);
void __cdecl ?_Become_small_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXXZ(std::basic_string<char32_t> *__hidden this);
void __cdecl ?_Become_small_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXXZ(std::basic_string<wchar_t> *__hidden this);
void __cdecl ?_Bind__Fake_proxy_ptr_impl_std__QEAAXAEBU_Fake_allocator_2_PEAU_Container_base0_2__Z(std::_Fake_proxy_ptr_impl *__hidden this, const std::_Fake_allocator *, std::_Container_base0 *);
std::basic_string<char>::size_type __cdecl ?_Calculate_growth_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEBA_K_K_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Requested);
std::basic_string<char>::size_type __cdecl ?_Calculate_growth_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__CA_K_K00_Z(const std::basic_string<char>::size_type _Requested, const std::basic_string<char>::size_type _Old, const std::basic_string<char>::size_type _Max);
std::basic_string<char16_t>::size_type __cdecl ?_Calculate_growth_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEBA_K_K_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Requested);
std::basic_string<char16_t>::size_type __cdecl ?_Calculate_growth_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__CA_K_K00_Z(const std::basic_string<char16_t>::size_type _Requested, const std::basic_string<char16_t>::size_type _Old, const std::basic_string<char16_t>::size_type _Max);
std::basic_string<char32_t>::size_type __cdecl ?_Calculate_growth_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEBA_K_K_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Requested);
std::basic_string<char32_t>::size_type __cdecl ?_Calculate_growth_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__CA_K_K00_Z(const std::basic_string<char32_t>::size_type _Requested, const std::basic_string<char32_t>::size_type _Old, const std::basic_string<char32_t>::size_type _Max);
std::basic_string<wchar_t>::size_type __cdecl ?_Calculate_growth_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEBA_K_K_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Requested);
std::basic_string<wchar_t>::size_type __cdecl ?_Calculate_growth_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__CA_K_K00_Z(const std::basic_string<wchar_t>::size_type _Requested, const std::basic_string<wchar_t>::size_type _Old, const std::basic_string<wchar_t>::size_type _Max);
void __cdecl ?_Check_grow_by_1_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__IEAAXXZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
void __cdecl ?_Check_grow_by_1_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__IEAAXXZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
void __cdecl ?_Check_grow_by_1_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__IEAAXXZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
void __cdecl ?_Check_grow_by_1_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__IEAAXXZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
void __cdecl ?_Check_grow_by_1_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__IEAAXXZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
void __cdecl ?_Check_offset_?$_String_val_U?$_Simple_types_D_std___std__QEBAX_K_Z(const std::_String_val<std::_Simple_types<char>> *__hidden this, const std::_String_val<std::_Simple_types<char>>::size_type _Off);
void __cdecl ?_Check_offset_?$_String_val_U?$_Simple_types__S_std___std__QEBAX_K_Z(const std::_String_val<std::_Simple_types<char16_t>> *__hidden this, const std::_String_val<std::_Simple_types<char16_t>>::size_type _Off);
void __cdecl ?_Check_offset_?$_String_val_U?$_Simple_types__U_std___std__QEBAX_K_Z(const std::_String_val<std::_Simple_types<char32_t>> *__hidden this, const std::_String_val<std::_Simple_types<char32_t>>::size_type _Off);
void __cdecl ?_Check_offset_?$_String_val_U?$_Simple_types__W_std___std__QEBAX_K_Z(const std::_String_val<std::_Simple_types<wchar_t>> *__hidden this, const std::_String_val<std::_Simple_types<wchar_t>>::size_type _Off);
void __cdecl ?_Check_offset_exclusive_?$_String_val_U?$_Simple_types_D_std___std__QEBAX_K_Z(const std::_String_val<std::_Simple_types<char>> *__hidden this, const std::_String_val<std::_Simple_types<char>>::size_type _Off);
void __cdecl ?_Check_offset_exclusive_?$_String_val_U?$_Simple_types__S_std___std__QEBAX_K_Z(const std::_String_val<std::_Simple_types<char16_t>> *__hidden this, const std::_String_val<std::_Simple_types<char16_t>>::size_type _Off);
void __cdecl ?_Check_offset_exclusive_?$_String_val_U?$_Simple_types__U_std___std__QEBAX_K_Z(const std::_String_val<std::_Simple_types<char32_t>> *__hidden this, const std::_String_val<std::_Simple_types<char32_t>>::size_type _Off);
void __cdecl ?_Check_offset_exclusive_?$_String_val_U?$_Simple_types__W_std___std__QEBAX_K_Z(const std::_String_val<std::_Simple_types<wchar_t>> *__hidden this, const std::_String_val<std::_Simple_types<wchar_t>>::size_type _Off);
std::_String_val<std::_Simple_types<char>>::size_type __cdecl ?_Clamp_suffix_size_?$_String_val_U?$_Simple_types_D_std___std__QEBA_K_K0_Z(const std::_String_val<std::_Simple_types<char>> *__hidden this, const std::_String_val<std::_Simple_types<char>>::size_type _Off, const std::_String_val<std::_Simple_types<char>>::size_type _Size);
std::_String_val<std::_Simple_types<char16_t>>::size_type __cdecl ?_Clamp_suffix_size_?$_String_val_U?$_Simple_types__S_std___std__QEBA_K_K0_Z(const std::_String_val<std::_Simple_types<char16_t>> *__hidden this, const std::_String_val<std::_Simple_types<char16_t>>::size_type _Off, const std::_String_val<std::_Simple_types<char16_t>>::size_type _Size);
std::_String_val<std::_Simple_types<char32_t>>::size_type __cdecl ?_Clamp_suffix_size_?$_String_val_U?$_Simple_types__U_std___std__QEBA_K_K0_Z(const std::_String_val<std::_Simple_types<char32_t>> *__hidden this, const std::_String_val<std::_Simple_types<char32_t>>::size_type _Off, const std::_String_val<std::_Simple_types<char32_t>>::size_type _Size);
std::_String_val<std::_Simple_types<wchar_t>>::size_type __cdecl ?_Clamp_suffix_size_?$_String_val_U?$_Simple_types__W_std___std__QEBA_K_K0_Z(const std::_String_val<std::_Simple_types<wchar_t>> *__hidden this, const std::_String_val<std::_Simple_types<wchar_t>>::size_type _Off, const std::_String_val<std::_Simple_types<wchar_t>>::size_type _Size);
void __cdecl ?_Compat_?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBAXAEBV12__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *_Right);
void __cdecl ?_Compat_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBAXAEBV12__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *_Right);
void __cdecl ?_Compat_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBAXAEBV12__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *_Right);
void __cdecl ?_Compat_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBAXAEBV12__Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *_Right);
void __cdecl ?_Construct_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAXQEAD0Urandom_access_iterator_tag_2__Z(std::basic_string<char> *__hidden this, char *const _First, char *const _Last, std::random_access_iterator_tag);
void __cdecl ?_Construct_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAXQEBD0Urandom_access_iterator_tag_2__Z(std::basic_string<char> *__hidden this, char *const _First, char *const _Last, std::random_access_iterator_tag);
void __cdecl ?_Construct_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAXQEA_S0Urandom_access_iterator_tag_2__Z(std::basic_string<char16_t> *__hidden this, __int16 *const _First, __int16 *const _Last, std::random_access_iterator_tag);
void __cdecl ?_Construct_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAXQEB_S0Urandom_access_iterator_tag_2__Z(std::basic_string<char16_t> *__hidden this, __int16 *const _First, __int16 *const _Last, std::random_access_iterator_tag);
void __cdecl ?_Construct_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAXQEA_U0Urandom_access_iterator_tag_2__Z(std::basic_string<char32_t> *__hidden this, __int32 *const _First, __int32 *const _Last, std::random_access_iterator_tag);
void __cdecl ?_Construct_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAXQEB_U0Urandom_access_iterator_tag_2__Z(std::basic_string<char32_t> *__hidden this, __int32 *const _First, __int32 *const _Last, std::random_access_iterator_tag);
void __cdecl ?_Construct_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAXQEA_W0Urandom_access_iterator_tag_2__Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _First, __int16 *const _Last, std::random_access_iterator_tag);
void __cdecl ?_Construct_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAXQEB_W0Urandom_access_iterator_tag_2__Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _First, __int16 *const _Last, std::random_access_iterator_tag);
void __cdecl ?_Construct_lv_contents_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXAEBV12__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right);
void __cdecl ?_Construct_lv_contents_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXAEBV12__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right);
void __cdecl ?_Construct_lv_contents_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXAEBV12__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right);
void __cdecl ?_Construct_lv_contents_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXAEBV12__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right);
void __cdecl ?_Copy_assign_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__AEAAXAEBV12_U?$integral_constant__N$00_2__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right, std::true_type);
void __cdecl ?_Copy_assign_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__AEAAXAEBV12_U?$integral_constant__N$0A__2__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right, std::false_type);
void __cdecl ?_Copy_assign_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__AEAAXAEBV12_U?$integral_constant__N$00_2__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right, std::true_type);
void __cdecl ?_Copy_assign_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__AEAAXAEBV12_U?$integral_constant__N$0A__2__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right, std::false_type);
void __cdecl ?_Copy_assign_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__AEAAXAEBV12_U?$integral_constant__N$00_2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right, std::true_type);
void __cdecl ?_Copy_assign_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__AEAAXAEBV12_U?$integral_constant__N$0A__2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right, std::false_type);
void __cdecl ?_Copy_assign_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__AEAAXAEBV12_U?$integral_constant__N$00_2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right, std::true_type);
void __cdecl ?_Copy_assign_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__AEAAXAEBV12_U?$integral_constant__N$0A__2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right, std::false_type);
void __cdecl ?_Copy_assign_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__AEAAXAEBV12_U?$integral_constant__N$00_2__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right, std::true_type);
void __cdecl ?_Copy_assign_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__AEAAXAEBV12_U?$integral_constant__N$0A__2__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right, std::false_type);
void __cdecl ?_Copy_assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXAEBV12_U?$integral_constant__N$00_2__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, std::true_type);
void __cdecl ?_Copy_assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXAEBV12_U?$integral_constant__N$0A__2__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, std::false_type);
void __cdecl ?_Copy_assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXAEBV12_U?$integral_constant__N$00_2__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, std::true_type);
void __cdecl ?_Copy_assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXAEBV12_U?$integral_constant__N$0A__2__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, std::false_type);
void __cdecl ?_Copy_assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXAEBV12_U?$integral_constant__N$00_2__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, std::true_type);
void __cdecl ?_Copy_assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXAEBV12_U?$integral_constant__N$0A__2__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, std::false_type);
void __cdecl ?_Copy_assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXAEBV12_U?$integral_constant__N$00_2__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, std::true_type);
void __cdecl ?_Copy_assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXAEBV12_U?$integral_constant__N$0A__2__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, std::false_type);
void __cdecl ?_Copy_assign_val_from_small_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXAEBV12__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right);
void __cdecl ?_Copy_assign_val_from_small_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXAEBV12__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right);
void __cdecl ?_Copy_assign_val_from_small_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXAEBV12__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right);
void __cdecl ?_Copy_assign_val_from_small_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXAEBV12__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right);
std::exception_ptr __cdecl ?_Copy_exception_exception_ptr_std__SA?AV12_PEAXPEBX_Z(void *_Except, const void *_Ptr);
char *__cdecl ?_Copy_s_?$_Char_traits_DH_std__SAPEADQEAD_KQEBD1_Z(char *const _First1, const size_t _Dest_size, char *const _First2, const size_t _Count);
unsigned __int16 *__cdecl ?_Copy_s_?$_Char_traits_GG_std__SAPEAGQEAG_KQEBG1_Z(unsigned __int16 *const _First1, const size_t _Dest_size, unsigned __int16 *const _First2, const size_t _Count);
__int16 *__cdecl ?_Copy_s_?$_Char_traits__SG_std__SAPEA_SQEA_S_KQEB_S1_Z(__int16 *const _First1, const size_t _Dest_size, __int16 *const _First2, const size_t _Count);
__int32 *__cdecl ?_Copy_s_?$_Char_traits__UI_std__SAPEA_UQEA_U_KQEB_U1_Z(__int32 *const _First1, const size_t _Dest_size, __int32 *const _First2, const size_t _Count);
__int16 *__cdecl ?_Copy_s_?$_Char_traits__WG_std__SAPEA_WQEA_W_KQEB_W1_Z(__int16 *const _First1, const size_t _Dest_size, __int16 *const _First2, const size_t _Count);
std::basic_string<char>::size_type __cdecl ?_Copy_s_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEAD_K_K1_Z(const std::basic_string<char> *__hidden this, char *const _Dest, const std::basic_string<char>::size_type _Dest_size, std::basic_string<char>::size_type _Count, const std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?_Copy_s_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEA_S_K_K1_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Dest, const std::basic_string<char16_t>::size_type _Dest_size, std::basic_string<char16_t>::size_type _Count, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?_Copy_s_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEA_U_K_K1_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Dest, const std::basic_string<char32_t>::size_type _Dest_size, std::basic_string<char32_t>::size_type _Count, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?_Copy_s_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEA_W_K_K1_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Dest, const std::basic_string<wchar_t>::size_type _Dest_size, std::basic_string<wchar_t>::size_type _Count, const std::basic_string<wchar_t>::size_type _Off);
std::exception_ptr ?_Current_exception_exception_ptr_std__SA?AV12_XZ(void);
void __cdecl ?_Different_allocator_move_construct_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__AEAAX$$QEAV12__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right);
void __cdecl ?_Different_allocator_move_construct_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__AEAAX$$QEAV12__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right);
void __cdecl ?_Different_allocator_move_construct_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__AEAAX$$QEAV12__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right);
void __cdecl ?_Different_allocator_move_construct_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__AEAAX$$QEAV12__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right);
void __cdecl ?_Different_allocator_move_construct_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__AEAAX$$QEAV12__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right);
void __cdecl ?_Eos_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAX_K_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Newsize);
void __cdecl ?_Eos_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAX_K_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Newsize);
void __cdecl ?_Eos_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAX_K_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Newsize);
void __cdecl ?_Eos_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAX_K_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Newsize);
bool __cdecl ?_Equal_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_NAEBV12__Z(const std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right);
bool __cdecl ?_Equal_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_NQEBD_Z(const std::basic_string<char> *__hidden this, char *const _Ptr);
bool __cdecl ?_Equal_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_NAEBV12__Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right);
bool __cdecl ?_Equal_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_NQEB_S_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr);
bool __cdecl ?_Equal_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_NAEBV12__Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right);
bool __cdecl ?_Equal_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_NQEB_U_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr);
bool __cdecl ?_Equal_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_NAEBV12__Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right);
bool __cdecl ?_Equal_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_NQEB_W_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr);
bool __cdecl ?_Equals_?$tuple_$$V_std__QEBA_NAEBV12__Z(const std::tuple<> *__hidden this, const std::tuple<> *);
std::basic_string<char> *__cdecl ?_Erase_noexcept_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAAEAV12__K_K_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, std::basic_string<char>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?_Erase_noexcept_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAAEAV12__K_K_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, std::basic_string<char16_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?_Erase_noexcept_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAAEAV12__K_K_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, std::basic_string<char32_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?_Erase_noexcept_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAAEAV12__K_K_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, std::basic_string<wchar_t>::size_type _Count);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Nodeptr __cdecl ?_Erase_unchecked_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__AEAAPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__2_0_Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Unchecked_const_iterator _First, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Unchecked_const_iterator _Last);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Nodeptr __cdecl ?_Erase_unchecked_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__AEAAPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__2__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Unchecked_const_iterator _Where);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Nodeptr __cdecl ?_Erase_unchecked_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__AEAAPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__2_0_Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Unchecked_const_iterator _First, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Unchecked_const_iterator _Last);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Nodeptr __cdecl ?_Erase_unchecked_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__AEAAPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__2__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Unchecked_const_iterator _Where);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Nodeptr __cdecl ?_Erase_unchecked_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__AEAAPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__2_0_Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Unchecked_const_iterator _First, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Unchecked_const_iterator _Last);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Nodeptr __cdecl ?_Erase_unchecked_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__AEAAPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Unchecked_const_iterator _Where);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Nodeptr __cdecl ?_Erase_unchecked_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__AEAAPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__2_0_Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Unchecked_const_iterator _First, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Unchecked_const_iterator _Last);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Nodeptr __cdecl ?_Erase_unchecked_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__AEAAPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Unchecked_const_iterator _Where);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Nodeptr __cdecl ?_Erase_unchecked_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__AEAAPEAU?$_Tree_node_HPEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__2_0_Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Unchecked_const_iterator _First, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Unchecked_const_iterator _Last);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Nodeptr __cdecl ?_Erase_unchecked_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__AEAAPEAU?$_Tree_node_HPEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__2__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Unchecked_const_iterator _Where);
std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr __cdecl ?_Extract_?$_Tree_val_U?$_Tree_simple_types_H_std___std__QEAAPEAU?$_Tree_node_HPEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__2__Z(std::_Tree_val<std::_Tree_simple_types<int>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<int>>::_Unchecked_const_iterator _Where);
std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr __cdecl ?_Extract_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Unchecked_const_iterator _Where);
std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr __cdecl ?_Extract_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Unchecked_const_iterator _Where);
std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr __cdecl ?_Extract_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Unchecked_const_iterator _Where);
std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr __cdecl ?_Extract_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2_V?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Unchecked_const_iterator _Where);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBAAEBV?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_XZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBAAEBV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_XZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBAAEBV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_XZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBAAEBV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_XZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBAAEBV?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_XZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBAAEBV?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_XZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBAAEBV?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_XZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBAAEBV?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_XZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEBAAEBV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBAAEBV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBAAEBV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBAAEBV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBAAEBV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBAAEBV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBAAEBV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBAAEBV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__cdecl ?_Get_current_?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBAAEBV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::less<int> *__cdecl ?_Get_first_?$_Compressed_pair_U?$less_H_std__V?$_Compressed_pair_V?$allocator_U?$_Tree_node_HPEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_H_std___2_$00_2_$00_std__QEAAAEAU?$less_H_2_XZ(std::_Compressed_pair<std::less<int>, std::_Compressed_pair<std::allocator<std::_Tree_node<int, void *>>, std::_Tree_val<std::_Tree_simple_types<int>>, true>, true> *__hidden this);
std::less<int> *__cdecl ?_Get_first_?$_Compressed_pair_U?$less_H_std__V?$_Compressed_pair_V?$allocator_U?$_Tree_node_HPEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_H_std___2_$00_2_$00_std__QEBAAEBU?$less_H_2_XZ(const std::_Compressed_pair<std::less<int>, std::_Compressed_pair<std::allocator<std::_Tree_node<int, void *>>, std::_Tree_val<std::_Tree_simple_types<int>>, true>, true> *__hidden this);
std::less<int> *__cdecl ?_Get_first_?$_Compressed_pair_U?$less_H_std__V?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___2_$00_2_$00_std__QEAAAEAU?$less_H_2_XZ(std::_Compressed_pair<std::less<int>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>, true>, true> *__hidden this);
std::less<int> *__cdecl ?_Get_first_?$_Compressed_pair_U?$less_H_std__V?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___2_$00_2_$00_std__QEBAAEBU?$less_H_2_XZ(const std::_Compressed_pair<std::less<int>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>, true>, true> *__hidden this);
std::less<_qstring<char>> *__cdecl ?_Get_first_?$_Compressed_pair_U?$less_V?$_qstring_D___std__V?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___2_$00_2_$00_std__QEAAAEAU?$less_V?$_qstring_D___2_XZ(std::_Compressed_pair<std::less<_qstring<char>>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>, true>, true> *__hidden this);
std::less<_qstring<char>> *__cdecl ?_Get_first_?$_Compressed_pair_U?$less_V?$_qstring_D___std__V?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___2_$00_2_$00_std__QEBAAEBU?$less_V?$_qstring_D___2_XZ(const std::_Compressed_pair<std::less<_qstring<char>>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>, true>, true> *__hidden this);
std::less<unsigned long long> *__cdecl ?_Get_first_?$_Compressed_pair_U?$less__K_std__V?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___2_$00_2_$00_std__QEAAAEAU?$less__K_2_XZ(std::_Compressed_pair<std::less<unsigned long long>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>, true>, true> *__hidden this);
std::less<unsigned long long> *__cdecl ?_Get_first_?$_Compressed_pair_U?$less__K_std__V?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___2_$00_2_$00_std__QEBAAEBU?$less__K_2_XZ(const std::_Compressed_pair<std::less<unsigned long long>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>, true>, true> *__hidden this);
std::less<unsigned long long> *__cdecl ?_Get_first_?$_Compressed_pair_U?$less__K_std__V?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___2_$00_2_$00_std__QEAAAEAU?$less__K_2_XZ(std::_Compressed_pair<std::less<unsigned long long>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>, true>, true> *__hidden this);
std::less<unsigned long long> *__cdecl ?_Get_first_?$_Compressed_pair_U?$less__K_std__V?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___2_$00_2_$00_std__QEBAAEBU?$less__K_2_XZ(const std::_Compressed_pair<std::less<unsigned long long>, std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>, true>, true> *__hidden this);
std::allocator<char> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_D_std__V?$_String_val_U?$_Simple_types_D_std___2_$00_std__QEAAAEAV?$allocator_D_2_XZ(std::_Compressed_pair<std::allocator<char>, std::_String_val<std::_Simple_types<char>>, true> *__hidden this);
std::allocator<char> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_D_std__V?$_String_val_U?$_Simple_types_D_std___2_$00_std__QEBAAEBV?$allocator_D_2_XZ(const std::_Compressed_pair<std::allocator<char>, std::_String_val<std::_Simple_types<char>>, true> *__hidden this);
std::allocator<std::_Tree_node<int, void *>> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_U?$_Tree_node_HPEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_H_std___2_$00_std__QEAAAEAV?$allocator_U?$_Tree_node_HPEAX_std___2_XZ(std::_Compressed_pair<std::allocator<std::_Tree_node<int, void *>>, std::_Tree_val<std::_Tree_simple_types<int>>, true> *__hidden this);
std::allocator<std::_Tree_node<int, void *>> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_U?$_Tree_node_HPEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_H_std___2_$00_std__QEBAAEBV?$allocator_U?$_Tree_node_HPEAX_std___2_XZ(const std::_Compressed_pair<std::allocator<std::_Tree_node<int, void *>>, std::_Tree_val<std::_Tree_simple_types<int>>, true> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___2_$00_std__QEAAAEAV?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___2_XZ(std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>, true> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___2_$00_std__QEBAAEBV?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___2_XZ(const std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const int, int>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>, true> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___2_$00_std__QEAAAEAV?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___2_XZ(std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>, true> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___2_$00_std__QEBAAEBV?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___2_XZ(const std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>, true> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___2_$00_std__QEAAAEAV?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___2_XZ(std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>, true> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___2_$00_std__QEBAAEBV?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___2_XZ(const std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>, true> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___2_$00_std__QEAAAEAV?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___2_XZ(std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>, true> *__hidden this);
std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___2_$00_std__QEBAAEBV?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___2_XZ(const std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>>, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>, true> *__hidden this);
std::allocator<char16_t> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator__S_std__V?$_String_val_U?$_Simple_types__S_std___2_$00_std__QEAAAEAV?$allocator__S_2_XZ(std::_Compressed_pair<std::allocator<char16_t>, std::_String_val<std::_Simple_types<char16_t>>, true> *__hidden this);
std::allocator<char16_t> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator__S_std__V?$_String_val_U?$_Simple_types__S_std___2_$00_std__QEBAAEBV?$allocator__S_2_XZ(const std::_Compressed_pair<std::allocator<char16_t>, std::_String_val<std::_Simple_types<char16_t>>, true> *__hidden this);
std::allocator<char32_t> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator__U_std__V?$_String_val_U?$_Simple_types__U_std___2_$00_std__QEAAAEAV?$allocator__U_2_XZ(std::_Compressed_pair<std::allocator<char32_t>, std::_String_val<std::_Simple_types<char32_t>>, true> *__hidden this);
std::allocator<char32_t> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator__U_std__V?$_String_val_U?$_Simple_types__U_std___2_$00_std__QEBAAEBV?$allocator__U_2_XZ(const std::_Compressed_pair<std::allocator<char32_t>, std::_String_val<std::_Simple_types<char32_t>>, true> *__hidden this);
std::allocator<wchar_t> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator__W_std__V?$_String_val_U?$_Simple_types__W_std___2_$00_std__QEAAAEAV?$allocator__W_2_XZ(std::_Compressed_pair<std::allocator<wchar_t>, std::_String_val<std::_Simple_types<wchar_t>>, true> *__hidden this);
std::allocator<wchar_t> *__cdecl ?_Get_first_?$_Compressed_pair_V?$allocator__W_std__V?$_String_val_U?$_Simple_types__W_std___2_$00_std__QEBAAEBV?$allocator__W_2_XZ(const std::_Compressed_pair<std::allocator<wchar_t>, std::_String_val<std::_Simple_types<wchar_t>>, true> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Scary_val *__cdecl ?_Get_scary_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__IEAAPEAV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___2_XZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Scary_val *__cdecl ?_Get_scary_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__IEBAPEBV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Scary_val *__cdecl ?_Get_scary_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__IEAAPEAV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___2_XZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Scary_val *__cdecl ?_Get_scary_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__IEBAPEBV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Scary_val *__cdecl ?_Get_scary_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__IEAAPEAV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Scary_val *__cdecl ?_Get_scary_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__IEBAPEBV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Scary_val *__cdecl ?_Get_scary_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__IEAAPEAV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Scary_val *__cdecl ?_Get_scary_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__IEBAPEBV?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Scary_val *__cdecl ?_Get_scary_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__IEAAPEAV?$_Tree_val_U?$_Tree_simple_types_H_std___2_XZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Scary_val *__cdecl ?_Get_scary_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__IEBAPEBV?$_Tree_val_U?$_Tree_simple_types_H_std___2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Alnode *__cdecl ?_Getal_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__IEAAAEAV?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___2_XZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Alnode *__cdecl ?_Getal_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__IEBAAEBV?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Alnode *__cdecl ?_Getal_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__IEAAAEAV?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___2_XZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Alnode *__cdecl ?_Getal_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__IEBAAEBV?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Alnode *__cdecl ?_Getal_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__IEAAAEAV?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Alnode *__cdecl ?_Getal_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__IEBAAEBV?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Alnode *__cdecl ?_Getal_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__IEAAAEAV?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Alnode *__cdecl ?_Getal_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__IEBAAEBV?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Alnode *__cdecl ?_Getal_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__IEAAAEAV?$allocator_U?$_Tree_node_HPEAX_std___2_XZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Alnode *__cdecl ?_Getal_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__IEBAAEBV?$allocator_U?$_Tree_node_HPEAX_std___2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::basic_string<char>::_Alty *__cdecl ?_Getal_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAAEAV?$allocator_D_2_XZ(std::basic_string<char> *__hidden this);
const std::basic_string<char>::_Alty *__cdecl ?_Getal_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEBAAEBV?$allocator_D_2_XZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::_Alty *__cdecl ?_Getal_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAAEAV?$allocator__S_2_XZ(std::basic_string<char16_t> *__hidden this);
const std::basic_string<char16_t>::_Alty *__cdecl ?_Getal_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEBAAEBV?$allocator__S_2_XZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::_Alty *__cdecl ?_Getal_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAAEAV?$allocator__U_2_XZ(std::basic_string<char32_t> *__hidden this);
const std::basic_string<char32_t>::_Alty *__cdecl ?_Getal_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEBAAEBV?$allocator__U_2_XZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::_Alty *__cdecl ?_Getal_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAAEAV?$allocator__W_2_XZ(std::basic_string<wchar_t> *__hidden this);
const std::basic_string<wchar_t>::_Alty *__cdecl ?_Getal_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEBAAEBV?$allocator__W_2_XZ(const std::basic_string<wchar_t> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_compare *__cdecl ?_Getcomp_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__IEAAAEAU?$less_H_2_XZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_compare *__cdecl ?_Getcomp_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__IEBAAEBU?$less_H_2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_compare *__cdecl ?_Getcomp_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__IEAAAEAU?$less_V?$_qstring_D___2_XZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_compare *__cdecl ?_Getcomp_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__IEBAAEBU?$less_V?$_qstring_D___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_compare *__cdecl ?_Getcomp_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__IEAAAEAU?$less__K_2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_compare *__cdecl ?_Getcomp_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__IEBAAEBU?$less__K_2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_compare *__cdecl ?_Getcomp_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__IEAAAEAU?$less__K_2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_compare *__cdecl ?_Getcomp_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__IEBAAEBU?$less__K_2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_compare *__cdecl ?_Getcomp_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__IEAAAEAU?$less_H_2_XZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_compare *__cdecl ?_Getcomp_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__IEBAAEBU?$less_H_2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
const std::_Container_base0 *__cdecl ?_Getcont__Iterator_base0_std__QEBAPEBU_Container_base0_2_XZ(const std::_Iterator_base0 *__hidden this);
const std::_Container_base12 *__cdecl ?_Getcont__Iterator_base12_std__QEBAPEBU_Container_base12_2_XZ(const std::_Iterator_base12 *__hidden this);
void __cdecl ?_Init_locks_ctor__Init_locks_std__CAXPEAV12__Z(std::_Init_locks *);
void __cdecl ?_Init_locks_dtor__Init_locks_std__CAXPEAV12__Z(std::_Init_locks *);
std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr __cdecl ?_Insert_node_?$_Tree_val_U?$_Tree_simple_types_H_std___std__QEAAPEAU?$_Tree_node_HPEAX_2_U?$_Tree_id_PEAU?$_Tree_node_HPEAX_std___2_QEAU32__Z(std::_Tree_val<std::_Tree_simple_types<int>> *__hidden this, const std::_Tree_id<std::_Tree_node<int, void *> *> _Loc, const std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr _Newnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr __cdecl ?_Insert_node_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2_U?$_Tree_id_PEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___2_QEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> *__hidden this, const std::_Tree_id<std::_Tree_node<std::pair<const int, int>, void *> *> _Loc, const std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr _Newnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr __cdecl ?_Insert_node_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2_U?$_Tree_id_PEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___2_QEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> *__hidden this, const std::_Tree_id<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *> _Loc, const std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr _Newnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr __cdecl ?_Insert_node_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2_U?$_Tree_id_PEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___2_QEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> *__hidden this, const std::_Tree_id<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *> _Loc, const std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr _Newnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr __cdecl ?_Insert_node_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2_U?$_Tree_id_PEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___2_QEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> *__hidden this, const std::_Tree_id<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *> _Loc, const std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr _Newnode);
bool __cdecl ?_Large_string_engaged_?$_String_val_U?$_Simple_types_D_std___std__QEBA_NXZ(const std::_String_val<std::_Simple_types<char>> *__hidden this);
bool __cdecl ?_Large_string_engaged_?$_String_val_U?$_Simple_types__S_std___std__QEBA_NXZ(const std::_String_val<std::_Simple_types<char16_t>> *__hidden this);
bool __cdecl ?_Large_string_engaged_?$_String_val_U?$_Simple_types__U_std___std__QEBA_NXZ(const std::_String_val<std::_Simple_types<char32_t>> *__hidden this);
bool __cdecl ?_Large_string_engaged_?$_String_val_U?$_Simple_types__W_std___std__QEBA_NXZ(const std::_String_val<std::_Simple_types<wchar_t>> *__hidden this);
bool __cdecl ?_Less_?$tuple_$$V_std__QEBA_NAEBV12__Z(const std::tuple<> *__hidden this, const std::tuple<> *);
void __cdecl ?_Lockit_ctor__Lockit_std__CAXPEAV12__Z(std::_Lockit *);
void __cdecl ?_Lockit_ctor__Lockit_std__CAXPEAV12_H_Z(std::_Lockit *, int);
void __cdecl ?_Lockit_ctor__Lockit_std__SAXH_Z(int);
void __cdecl ?_Lockit_dtor__Lockit_std__CAXPEAV12__Z(std::_Lockit *);
void __cdecl ?_Lockit_dtor__Lockit_std__SAXH_Z(int);
void __cdecl ?_Lrotate_?$_Tree_val_U?$_Tree_simple_types_H_std___std__QEAAXPEAU?$_Tree_node_HPEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<int>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr _Wherenode);
void __cdecl ?_Lrotate_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__QEAAXPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr _Wherenode);
void __cdecl ?_Lrotate_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__QEAAXPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr _Wherenode);
void __cdecl ?_Lrotate_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__QEAAXPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr _Wherenode);
void __cdecl ?_Lrotate_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__QEAAXPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr _Wherenode);
std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr __cdecl ?_Max_?$_Tree_val_U?$_Tree_simple_types_H_std___std__SAPEAU?$_Tree_node_HPEAX_2_PEAU32__Z(std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr _Pnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr __cdecl ?_Max_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__SAPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2_PEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr _Pnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr __cdecl ?_Max_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__SAPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2_PEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr _Pnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr __cdecl ?_Max_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__SAPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2_PEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr _Pnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr __cdecl ?_Max_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__SAPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2_PEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr _Pnode);
void __cdecl ?_Memcpy_val_from_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXAEBV12__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right);
void __cdecl ?_Memcpy_val_from_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXAEBV12__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right);
void __cdecl ?_Memcpy_val_from_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXAEBV12__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right);
void __cdecl ?_Memcpy_val_from_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXAEBV12__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right);
std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr __cdecl ?_Min_?$_Tree_val_U?$_Tree_simple_types_H_std___std__SAPEAU?$_Tree_node_HPEAX_2_PEAU32__Z(std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr _Pnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr __cdecl ?_Min_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__SAPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2_PEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr _Pnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr __cdecl ?_Min_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__SAPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2_PEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr _Pnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr __cdecl ?_Min_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__SAPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2_PEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr _Pnode);
std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr __cdecl ?_Min_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__SAPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2_PEAU32__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr _Pnode);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__AEAAXAEAV12_U?$integral_constant__N$00_2__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right, std::_Propagate_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__AEAAXAEAV12_U?$integral_constant__N$0A__2__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right, std::_No_propagate_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__AEAAXAEAV12_U_Equal_allocators_2__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right, std::_Equal_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__AEAAXAEAV12_U?$integral_constant__N$00_2__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right, std::_Propagate_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__AEAAXAEAV12_U?$integral_constant__N$0A__2__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right, std::_No_propagate_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__AEAAXAEAV12_U_Equal_allocators_2__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right, std::_Equal_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__AEAAXAEAV12_U?$integral_constant__N$00_2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right, std::_Propagate_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__AEAAXAEAV12_U?$integral_constant__N$0A__2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right, std::_No_propagate_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__AEAAXAEAV12_U_Equal_allocators_2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right, std::_Equal_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__AEAAXAEAV12_U?$integral_constant__N$00_2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right, std::_Propagate_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__AEAAXAEAV12_U?$integral_constant__N$0A__2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right, std::_No_propagate_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__AEAAXAEAV12_U_Equal_allocators_2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right, std::_Equal_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__AEAAXAEAV12_U?$integral_constant__N$00_2__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right, std::_Propagate_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__AEAAXAEAV12_U?$integral_constant__N$0A__2__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right, std::_No_propagate_allocators);
void __cdecl ?_Move_assign_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__AEAAXAEAV12_U_Equal_allocators_2__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right, std::_Equal_allocators);
void __cdecl ?_Move_assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXAEAV12_U?$integral_constant__N$00_2__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right, std::_Propagate_allocators);
void __cdecl ?_Move_assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXAEAV12_U?$integral_constant__N$0A__2__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right, std::_No_propagate_allocators);
void __cdecl ?_Move_assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXAEAV12_U_Equal_allocators_2__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right, std::_Equal_allocators);
void __cdecl ?_Move_assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXAEAV12_U?$integral_constant__N$00_2__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right, std::_Propagate_allocators);
void __cdecl ?_Move_assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXAEAV12_U?$integral_constant__N$0A__2__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right, std::_No_propagate_allocators);
void __cdecl ?_Move_assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXAEAV12_U_Equal_allocators_2__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right, std::_Equal_allocators);
void __cdecl ?_Move_assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXAEAV12_U?$integral_constant__N$00_2__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right, std::_Propagate_allocators);
void __cdecl ?_Move_assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXAEAV12_U?$integral_constant__N$0A__2__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right, std::_No_propagate_allocators);
void __cdecl ?_Move_assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXAEAV12_U_Equal_allocators_2__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right, std::_Equal_allocators);
void __cdecl ?_Move_assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXAEAV12_U?$integral_constant__N$00_2__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right, std::_Propagate_allocators);
void __cdecl ?_Move_assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXAEAV12_U?$integral_constant__N$0A__2__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right, std::_No_propagate_allocators);
void __cdecl ?_Move_assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXAEAV12_U_Equal_allocators_2__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right, std::_Equal_allocators);
std::_String_val<std::_Simple_types<char>>::value_type *__cdecl ?_Myptr_?$_String_val_U?$_Simple_types_D_std___std__QEAAPEADXZ(std::_String_val<std::_Simple_types<char>> *__hidden this);
const std::_String_val<std::_Simple_types<char>>::value_type *__cdecl ?_Myptr_?$_String_val_U?$_Simple_types_D_std___std__QEBAPEBDXZ(const std::_String_val<std::_Simple_types<char>> *__hidden this);
std::_String_val<std::_Simple_types<char16_t>>::value_type *__cdecl ?_Myptr_?$_String_val_U?$_Simple_types__S_std___std__QEAAPEA_SXZ(std::_String_val<std::_Simple_types<char16_t>> *__hidden this);
const std::_String_val<std::_Simple_types<char16_t>>::value_type *__cdecl ?_Myptr_?$_String_val_U?$_Simple_types__S_std___std__QEBAPEB_SXZ(const std::_String_val<std::_Simple_types<char16_t>> *__hidden this);
std::_String_val<std::_Simple_types<char32_t>>::value_type *__cdecl ?_Myptr_?$_String_val_U?$_Simple_types__U_std___std__QEAAPEA_UXZ(std::_String_val<std::_Simple_types<char32_t>> *__hidden this);
const std::_String_val<std::_Simple_types<char32_t>>::value_type *__cdecl ?_Myptr_?$_String_val_U?$_Simple_types__U_std___std__QEBAPEB_UXZ(const std::_String_val<std::_Simple_types<char32_t>> *__hidden this);
std::_String_val<std::_Simple_types<wchar_t>>::value_type *__cdecl ?_Myptr_?$_String_val_U?$_Simple_types__W_std___std__QEAAPEA_WXZ(std::_String_val<std::_Simple_types<wchar_t>> *__hidden this);
const std::_String_val<std::_Simple_types<wchar_t>>::value_type *__cdecl ?_Myptr_?$_String_val_U?$_Simple_types__W_std___std__QEBAPEB_WXZ(const std::_String_val<std::_Simple_types<wchar_t>> *__hidden this);
void __cdecl ?_Orphan_all_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAXXZ(std::basic_string<char> *__hidden this);
void __cdecl ?_Orphan_all_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAXXZ(std::basic_string<char16_t> *__hidden this);
void __cdecl ?_Orphan_all_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAXXZ(std::basic_string<char32_t> *__hidden this);
void __cdecl ?_Orphan_all_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAXXZ(std::basic_string<wchar_t> *__hidden this);
void __cdecl ?_Orphan_all__Container_base0_std__QEAAXXZ(std::_Container_base0 *__hidden this);
void __cdecl ?_Orphan_all__Container_base12_std__QEAAXXZ(std::_Container_base12 *__hidden this);
void __cdecl ?_Orphan_all_locked_v3__Container_base12_std__AEAAXXZ(std::_Container_base12 *__hidden this);
void __cdecl ?_Orphan_all_unlocked_v3__Container_base12_std__AEAAXXZ(std::_Container_base12 *__hidden this);
void __cdecl ?_Orphan_ptr_?$_Tree_val_U?$_Tree_simple_types_H_std___std__QEAAXQEAU?$_Tree_node_HPEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<int>> *__hidden this, const std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr _Ptr);
void __cdecl ?_Orphan_ptr_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__QEAAXQEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> *__hidden this, const std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr _Ptr);
void __cdecl ?_Orphan_ptr_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__QEAAXQEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> *__hidden this, const std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr _Ptr);
void __cdecl ?_Orphan_ptr_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__QEAAXQEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> *__hidden this, const std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr _Ptr);
void __cdecl ?_Orphan_ptr_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__QEAAXQEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> *__hidden this, const std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr _Ptr);
void __cdecl ?_Release__Basic_container_proxy_ptr12_std__QEAAXXZ(std::_Basic_container_proxy_ptr12 *__hidden this);
void __cdecl ?_Release__Fake_proxy_ptr_impl_std__QEAAXXZ(std::_Fake_proxy_ptr_impl *__hidden this);
void __cdecl ?_Reload_proxy__Container_base0_std__QEAAXAEBU_Fake_allocator_2_0_Z(std::_Container_base0 *__hidden this, const std::_Fake_allocator *, const std::_Fake_allocator *);
void __cdecl ?_Rrotate_?$_Tree_val_U?$_Tree_simple_types_H_std___std__QEAAXPEAU?$_Tree_node_HPEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<int>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<int>>::_Nodeptr _Wherenode);
void __cdecl ?_Rrotate_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__QEAAXPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>::_Nodeptr _Wherenode);
void __cdecl ?_Rrotate_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__QEAAXPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>::_Nodeptr _Wherenode);
void __cdecl ?_Rrotate_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__QEAAXPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>::_Nodeptr _Wherenode);
void __cdecl ?_Rrotate_?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__QEAAXPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2__Z(std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>> *__hidden this, std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>::_Nodeptr _Wherenode);
void __cdecl ?_Seek_to_?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEAAXPEBD_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::value_type *_It);
void __cdecl ?_Seek_to_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEAAXPEB_S_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::value_type *_It);
void __cdecl ?_Seek_to_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEAAXPEB_U_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::value_type *_It);
void __cdecl ?_Seek_to_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEAAXPEB_W_Z(std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::value_type *_It);
void __cdecl ?_Seek_to_?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__QEAAXV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__2__Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> _It);
void __cdecl ?_Seek_to_?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEAAXV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__2__Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> _It);
void __cdecl ?_Seek_to_?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEAAXV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__2__Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> _It);
void __cdecl ?_Seek_to_?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEAAXV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__2__Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> _It);
void __cdecl ?_Seek_to_?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEAAXV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__2__Z(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this, const std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> _It);
void __cdecl ?_Swap_bx_large_with_small_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAXAEAV?$_String_val_U?$_Simple_types_D_std___2_0_Z(std::basic_string<char> *__hidden this, std::basic_string<char>::_Scary_val *_Starts_large, std::basic_string<char>::_Scary_val *_Starts_small);
void __cdecl ?_Swap_bx_large_with_small_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAXAEAV?$_String_val_U?$_Simple_types__S_std___2_0_Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t>::_Scary_val *_Starts_large, std::basic_string<char16_t>::_Scary_val *_Starts_small);
void __cdecl ?_Swap_bx_large_with_small_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAXAEAV?$_String_val_U?$_Simple_types__U_std___2_0_Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t>::_Scary_val *_Starts_large, std::basic_string<char32_t>::_Scary_val *_Starts_small);
void __cdecl ?_Swap_bx_large_with_small_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAXAEAV?$_String_val_U?$_Simple_types__W_std___2_0_Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t>::_Scary_val *_Starts_large, std::basic_string<wchar_t>::_Scary_val *_Starts_small);
void __cdecl ?_Swap_data_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAXAEAV12__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right);
void __cdecl ?_Swap_data_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAXAEAV12__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right);
void __cdecl ?_Swap_data_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAXAEAV12__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right);
void __cdecl ?_Swap_data_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAXAEAV12__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right);
void __cdecl ?_Swap_proxy_and_iterators_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXAEAV12__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right);
void __cdecl ?_Swap_proxy_and_iterators_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXAEAV12__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right);
void __cdecl ?_Swap_proxy_and_iterators_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXAEAV12__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right);
void __cdecl ?_Swap_proxy_and_iterators_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXAEAV12__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right);
void __cdecl ?_Swap_proxy_and_iterators__Container_base0_std__QEAAXAEAU12__Z(std::_Container_base0 *__hidden this, std::_Container_base0 *);
void __cdecl ?_Swap_proxy_and_iterators__Container_base12_std__QEAAXAEAU12__Z(std::_Container_base12 *__hidden this, std::_Container_base12 *);
void __cdecl ?_Swap_proxy_and_iterators_locked__Container_base12_std__AEAAXAEAU12__Z(std::_Container_base12 *__hidden this, std::_Container_base12 *_Right);
void __cdecl ?_Swap_proxy_and_iterators_unlocked__Container_base12_std__AEAAXAEAU12__Z(std::_Container_base12 *__hidden this, std::_Container_base12 *);
void __cdecl ?_Swap_val_excluding_comp_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__AEAAXAEAV12__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right);
void __cdecl ?_Swap_val_excluding_comp_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__AEAAXAEAV12__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right);
void __cdecl ?_Swap_val_excluding_comp_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__AEAAXAEAV12__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right);
void __cdecl ?_Swap_val_excluding_comp_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__AEAAXAEAV12__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right);
void __cdecl ?_Swap_val_excluding_comp_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__AEAAXAEAV12__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right);
void __cdecl ?_Take_contents_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXAEAV12__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right);
void __cdecl ?_Take_contents_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXAEAV12__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right);
void __cdecl ?_Take_contents_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXAEAV12__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right);
void __cdecl ?_Take_contents_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXAEAV12__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right);
void __cdecl ?_Tidy_deallocate_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXXZ(std::basic_string<char> *__hidden this);
void __cdecl ?_Tidy_deallocate_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXXZ(std::basic_string<char16_t> *__hidden this);
void __cdecl ?_Tidy_deallocate_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXXZ(std::basic_string<char32_t> *__hidden this);
void __cdecl ?_Tidy_deallocate_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXXZ(std::basic_string<wchar_t> *__hidden this);
void __cdecl ?_Tidy_init_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__AEAAXXZ(std::basic_string<char> *__hidden this);
void __cdecl ?_Tidy_init_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__AEAAXXZ(std::basic_string<char16_t> *__hidden this);
void __cdecl ?_Tidy_init_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__AEAAXXZ(std::basic_string<char32_t> *__hidden this);
void __cdecl ?_Tidy_init_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__AEAAXXZ(std::basic_string<wchar_t> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Unchecked_iterator __cdecl ?_Unchecked_begin_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Unchecked_const_iterator __cdecl ?_Unchecked_begin_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Unchecked_iterator __cdecl ?_Unchecked_begin_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Unchecked_const_iterator __cdecl ?_Unchecked_begin_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Unchecked_iterator __cdecl ?_Unchecked_begin_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Unchecked_const_iterator __cdecl ?_Unchecked_begin_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Unchecked_iterator __cdecl ?_Unchecked_begin_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Unchecked_const_iterator __cdecl ?_Unchecked_begin_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Unchecked_iterator __cdecl ?_Unchecked_begin_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__2_XZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Unchecked_const_iterator __cdecl ?_Unchecked_begin_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
char *__cdecl ?_Unchecked_begin_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAPEADXZ(std::basic_string<char> *__hidden this);
char *__cdecl ?_Unchecked_begin_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAPEBDXZ(const std::basic_string<char> *__hidden this);
__int16 *__cdecl ?_Unchecked_begin_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAPEA_SXZ(std::basic_string<char16_t> *__hidden this);
__int16 *__cdecl ?_Unchecked_begin_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAPEB_SXZ(const std::basic_string<char16_t> *__hidden this);
__int32 *__cdecl ?_Unchecked_begin_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAPEA_UXZ(std::basic_string<char32_t> *__hidden this);
__int32 *__cdecl ?_Unchecked_begin_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAPEB_UXZ(const std::basic_string<char32_t> *__hidden this);
__int16 *__cdecl ?_Unchecked_begin_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAPEA_WXZ(std::basic_string<wchar_t> *__hidden this);
__int16 *__cdecl ?_Unchecked_begin_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAPEB_WXZ(const std::basic_string<wchar_t> *__hidden this);
std::_Default_sentinel __cdecl ?_Unchecked_end_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AU_Default_sentinel_2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Default_sentinel __cdecl ?_Unchecked_end_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AU_Default_sentinel_2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Default_sentinel __cdecl ?_Unchecked_end_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AU_Default_sentinel_2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Default_sentinel __cdecl ?_Unchecked_end_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AU_Default_sentinel_2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Default_sentinel __cdecl ?_Unchecked_end_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AU_Default_sentinel_2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
char *__cdecl ?_Unchecked_end_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAPEADXZ(std::basic_string<char> *__hidden this);
char *__cdecl ?_Unchecked_end_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAPEBDXZ(const std::basic_string<char> *__hidden this);
__int16 *__cdecl ?_Unchecked_end_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAPEA_SXZ(std::basic_string<char16_t> *__hidden this);
__int16 *__cdecl ?_Unchecked_end_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAPEB_SXZ(const std::basic_string<char16_t> *__hidden this);
__int32 *__cdecl ?_Unchecked_end_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAPEA_UXZ(std::basic_string<char32_t> *__hidden this);
__int32 *__cdecl ?_Unchecked_end_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAPEB_UXZ(const std::basic_string<char32_t> *__hidden this);
__int16 *__cdecl ?_Unchecked_end_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAPEA_WXZ(std::basic_string<wchar_t> *__hidden this);
__int16 *__cdecl ?_Unchecked_end_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAPEB_WXZ(const std::basic_string<wchar_t> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::_Unchecked_const_iterator __cdecl ?_Unchecked_end_iter_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::_Unchecked_const_iterator __cdecl ?_Unchecked_end_iter_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::_Unchecked_const_iterator __cdecl ?_Unchecked_end_iter_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::_Unchecked_const_iterator __cdecl ?_Unchecked_end_iter_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::_Unchecked_const_iterator __cdecl ?_Unchecked_end_iter_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::value_type *__cdecl ?_Unwrapped_?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBAPEBDXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::value_type *__cdecl ?_Unwrapped_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBAPEB_SXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::value_type *__cdecl ?_Unwrapped_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBAPEB_UXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::value_type *__cdecl ?_Unwrapped_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBAPEB_WXZ(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>>::value_type *__cdecl ?_Unwrapped_?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBAPEADXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>::value_type *__cdecl ?_Unwrapped_?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBAPEA_SXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>::value_type *__cdecl ?_Unwrapped_?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBAPEA_UXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::value_type *__cdecl ?_Unwrapped_?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBAPEA_WXZ(const std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> __cdecl ?_Unwrapped_?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std__U_Iterator_base0_2__2_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ?_Unwrapped_?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ?_Unwrapped_?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ?_Unwrapped_?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ?_Unwrapped_?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEBA?AV?$_Tree_unchecked_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std__U_Iterator_base0_2__2_XZ(const std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ?_Unwrapped_?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__QEBA?AV?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ?_Unwrapped_?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__QEBA?AV?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ?_Unwrapped_?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__QEBA?AV?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> *__hidden this);
std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ?_Unwrapped_?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__QEBA?AV?$_Tree_unchecked_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(const std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> *__hidden this);
void __cdecl ?_Verify_offset_?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std__QEBAX_J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>::difference_type _Off);
void __cdecl ?_Verify_offset_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std__QEBAX_J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>::difference_type _Off);
void __cdecl ?_Verify_offset_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std__QEBAX_J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>::difference_type _Off);
void __cdecl ?_Verify_offset_?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std__QEBAX_J_Z(const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> *__hidden this, const std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>::difference_type _Off);
void ?_Xran_?$_String_val_U?$_Simple_types_D_std___std__SAXXZ(void);
void ?_Xran_?$_String_val_U?$_Simple_types__S_std___std__SAXXZ(void);
void ?_Xran_?$_String_val_U?$_Simple_types__U_std___std__SAXXZ(void);
void ?_Xran_?$_String_val_U?$_Simple_types__W_std___std__SAXXZ(void);
dterr_t __cdecl ?_chdir_dirtree_t__QEAA?AW4dterr_t__PEBD_Z(dirtree_t *__hidden this, const char *path);
bool __cdecl ?_consume_rrel_argloc_t__QEAA_NPEAUrrel_t___Z(argloc_t *__hidden this, rrel_t *p);
bool __cdecl ?_consume_scattered_argloc_t__QEAA_NPEAVscattered_aloc_t___Z(argloc_t *__hidden this, scattered_aloc_t *p);
void __cdecl ?_create_empty_string_idc_value_t__QEAAXXZ(idc_value_t *__hidden this);
const qstring *__cdecl ?_down_linearray_t__AEAAPEBV?$_qstring_D__XZ(linearray_t *__hidden this);
int __cdecl ?_find_subgraph_node_mutable_graph_t__AEBAHHH_Z(const mutable_graph_t *__hidden this, int group, int n);
bool __cdecl ?_get_field_value_form_actions_t__UEAA_NHPEAX_Z(form_actions_t *__hidden this, int field_id, void *buf);
adiff_t __cdecl ?_get_opval_refinfo_t__QEBA_J_J_Z(const refinfo_t *__hidden this, adiff_t opval);
bool __cdecl ?_get_str_field_value_form_actions_t__UEAA_NHPEAD_K_Z(form_actions_t *__hidden this, int field_id, char *buf, const size_t bufsize);
ea_t __cdecl ?_get_target_refinfo_t__QEBA_K_J_Z(const refinfo_t *__hidden this, adiff_t opval);
ea_t __cdecl ?_get_value_refinfo_t__QEBA_K_K_Z(const refinfo_t *__hidden this, ea_t target);
qstring __cdecl ?_getcwd_dirtree_t__QEBA?AV?$_qstring_D__XZ(const dirtree_t *__hidden this);
node_iterator *__cdecl ?_goup_node_iterator__AEAAAEAV1_XZ(node_iterator *__hidden this);
void __cdecl ?_set_badloc_argloc_t__QEAAXXZ(argloc_t *__hidden this);
void __cdecl ?_set_biggest_argloc_t__QEAAXH_K_Z(argloc_t *__hidden this, argloc_type_t ct, argloc_t::biggest_t data);
bytevec_t *__cdecl ?_set_bytes_regval_t__QEAAAEAVbytevec_t__XZ(regval_t *__hidden this);
void __cdecl ?_set_bytes_regval_t__QEAAXAEBVbytevec_t___Z(regval_t *__hidden this, const bytevec_t *v);
void __cdecl ?_set_bytes_regval_t__QEAAXPEBE_K_Z(regval_t *__hidden this, const uchar *data, size_t size);
void __cdecl ?_set_custom_argloc_t__QEAAXHPEAX_Z(argloc_t *__hidden this, argloc_type_t ct, void *pdata);
void __cdecl ?_set_ea_argloc_t__QEAAX_K_Z(argloc_t *__hidden this, ea_t _ea);
bool __cdecl ?_set_field_value_form_actions_t__UEAA_NHPEBX_Z(form_actions_t *__hidden this, int field_id, const void *buf);
void __cdecl ?_set_float_idc_value_t__QEAAXAEBUfpvalue_t___Z(idc_value_t *__hidden this, const fpvalue_t *f);
void __cdecl ?_set_float_regval_t__QEAAXAEBUfpvalue_t___Z(regval_t *__hidden this, const fpvalue_t *x);
void __cdecl ?_set_int64_idc_value_t__QEAAX_J_Z(idc_value_t *__hidden this, int64 v);
void __cdecl ?_set_int_regval_t__QEAAX_K_Z(regval_t *__hidden this, uint64 x);
void __cdecl ?_set_long_idc_value_t__QEAAX_J_Z(idc_value_t *__hidden this, sval_t v);
int __cdecl ?_set_place_linearray_t__AEAAHPEBVplace_t___Z(linearray_t *__hidden this, const place_t *new_at);
void __cdecl ?_set_pvoid_idc_value_t__QEAAXPEAX_Z(idc_value_t *__hidden this, void *p);
void __cdecl ?_set_reg1_argloc_t__QEAAXHH_Z(argloc_t *__hidden this, int reg, int off);
void __cdecl ?_set_reg2_argloc_t__QEAAXHH_Z(argloc_t *__hidden this, int _reg1, int _reg2);
void __cdecl ?_set_stkoff_argloc_t__QEAAX_J_Z(argloc_t *__hidden this, sval_t off);
void __cdecl ?_set_string_idc_value_t__QEAAXAEBV?$_qstring_D___Z(idc_value_t *__hidden this, const qstring *_str);
void __cdecl ?_set_string_idc_value_t__QEAAXPEBD_Z(idc_value_t *__hidden this, const char *_str);
void __cdecl ?_set_string_idc_value_t__QEAAXPEBD_K_Z(idc_value_t *__hidden this, const char *_str, size_t len);
void __cdecl ?_set_unavailable_regval_t__QEAAXXZ(regval_t *__hidden this);
const qstring *__cdecl ?_up_linearray_t__AEAAPEBV?$_qstring_D__XZ(linearray_t *__hidden this);
int __cdecl ?abits_segment_t__QEBAHXZ(const segment_t *__hidden this);
int __cdecl ?abytes_segment_t__QEBAHXZ(const segment_t *__hidden this);
void __cdecl ?acquire_place_lochist_entry_t__QEAAXPEAVplace_t___Z(lochist_entry_t *__hidden this, place_t *in_p);
int __cdecl ?activate_action_handler_t__UEAAHPEAUaction_ctx_base_t___Z(action_handler_t *__hidden this, action_activation_ctx_t *ctx);
void __cdecl ?add_?$qvector_D__QEAAX$$QEAD_Z(qvector<char> *__hidden this, char *x);
void __cdecl ?add_?$qvector_D__QEAAXAEBD_Z(qvector<char> *__hidden this, char *x);
void __cdecl ?add_?$qvector_E__QEAAX$$QEAE_Z(qvector<unsigned char> *__hidden this, unsigned __int8 *x);
void __cdecl ?add_?$qvector_E__QEAAXAEBE_Z(qvector<unsigned char> *__hidden this, unsigned __int8 *x);
void __cdecl ?add_?$qvector_H__QEAAX$$QEAH_Z(qvector<int> *__hidden this, int *x);
void __cdecl ?add_?$qvector_H__QEAAXAEBH_Z(qvector<int> *__hidden this, int *x);
void __cdecl ?add_?$qvector_I__QEAAX$$QEAI_Z(qvector<unsigned int> *__hidden this, unsigned int *x);
void __cdecl ?add_?$qvector_I__QEAAXAEBI_Z(qvector<unsigned int> *__hidden this, unsigned int *x);
void __cdecl ?add_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAX$$QEAP6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
void __cdecl ?add_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAXAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
void __cdecl ?add_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAX$$QEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
void __cdecl ?add_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAXAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
void __cdecl ?add_?$qvector_PEAUbpt_t____QEAAX$$QEAPEAUbpt_t___Z(qvector<bpt_t *> *__hidden this, bpt_t **x);
void __cdecl ?add_?$qvector_PEAUbpt_t____QEAAXAEBQEAUbpt_t___Z(qvector<bpt_t *> *__hidden this, bpt_t **x);
void __cdecl ?add_?$qvector_PEAUextlang_t____QEAAX$$QEAPEAUextlang_t___Z(qvector<extlang_t *> *__hidden this, extlang_t **x);
void __cdecl ?add_?$qvector_PEAUextlang_t____QEAAXAEBQEAUextlang_t___Z(qvector<extlang_t *> *__hidden this, extlang_t **x);
void __cdecl ?add_?$qvector_PEAUline_rendering_output_entry_t____QEAAX$$QEAPEAUline_rendering_output_entry_t___Z(qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
void __cdecl ?add_?$qvector_PEAUline_rendering_output_entry_t____QEAAXAEBQEAUline_rendering_output_entry_t___Z(qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
void __cdecl ?add_?$qvector_PEAVsnapshot_t____QEAAX$$QEAPEAVsnapshot_t___Z(qvector<snapshot_t *> *__hidden this, snapshot_t **x);
void __cdecl ?add_?$qvector_PEAVsnapshot_t____QEAAXAEBQEAVsnapshot_t___Z(qvector<snapshot_t *> *__hidden this, snapshot_t **x);
void __cdecl ?add_?$qvector_PEBD__QEAAX$$QEAPEBD_Z(qvector<const char *> *__hidden this, const char **x);
void __cdecl ?add_?$qvector_PEBD__QEAAXAEBQEBD_Z(qvector<const char *> *__hidden this, const char **x);
void __cdecl ?add_?$qvector_PEBUbpt_t____QEAAX$$QEAPEBUbpt_t___Z(qvector<const bpt_t *> *__hidden this, const bpt_t **x);
void __cdecl ?add_?$qvector_PEBUbpt_t____QEAAXAEBQEBUbpt_t___Z(qvector<const bpt_t *> *__hidden this, const bpt_t **x);
void __cdecl ?add_?$qvector_PEBVrangeset_t____QEAAX$$QEAPEBVrangeset_t___Z(qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
void __cdecl ?add_?$qvector_PEBVrangeset_t____QEAAXAEBQEBVrangeset_t___Z(qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
void __cdecl ?add_?$qvector_PEBVtwinline_t____QEAAX$$QEAPEBVtwinline_t___Z(qvector<const twinline_t *> *__hidden this, const twinline_t **x);
void __cdecl ?add_?$qvector_PEBVtwinline_t____QEAAXAEBQEBVtwinline_t___Z(qvector<const twinline_t *> *__hidden this, const twinline_t **x);
void __cdecl ?add_?$qvector_Uargpart_t____QEAAX$$QEAUargpart_t___Z(qvector<argpart_t> *__hidden this, argpart_t *x);
void __cdecl ?add_?$qvector_Uargpart_t____QEAAXAEBUargpart_t___Z(qvector<argpart_t> *__hidden this, argpart_t *x);
void __cdecl ?add_?$qvector_Ubpt_t____QEAAX$$QEAUbpt_t___Z(qvector<bpt_t> *__hidden this, bpt_t *x);
void __cdecl ?add_?$qvector_Ubpt_t____QEAAXAEBUbpt_t___Z(qvector<bpt_t> *__hidden this, bpt_t *x);
void __cdecl ?add_?$qvector_Ubptaddrs_t____QEAAX$$QEAUbptaddrs_t___Z(qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
void __cdecl ?add_?$qvector_Ubptaddrs_t____QEAAXAEBUbptaddrs_t___Z(qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
void __cdecl ?add_?$qvector_Ucall_stack_info_t____QEAAX$$QEAUcall_stack_info_t___Z(qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
void __cdecl ?add_?$qvector_Ucall_stack_info_t____QEAAXAEBUcall_stack_info_t___Z(qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
void __cdecl ?add_?$qvector_Ucatch_t____QEAAX$$QEAUcatch_t___Z(qvector<catch_t> *__hidden this, catch_t *x);
void __cdecl ?add_?$qvector_Ucatch_t____QEAAXAEBUcatch_t___Z(qvector<catch_t> *__hidden this, catch_t *x);
void __cdecl ?add_?$qvector_Ucfgopt_set_t____QEAAX$$QEAUcfgopt_set_t___Z(qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
void __cdecl ?add_?$qvector_Ucfgopt_set_t____QEAAXAEBUcfgopt_set_t___Z(qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
void __cdecl ?add_?$qvector_Uchannel_redir_t____QEAAX$$QEAUchannel_redir_t___Z(qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
void __cdecl ?add_?$qvector_Uchannel_redir_t____QEAAXAEBUchannel_redir_t___Z(qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
void __cdecl ?add_?$qvector_Ucliopt_t____QEAAX$$QEAUcliopt_t___Z(qvector<cliopt_t> *__hidden this, cliopt_t *x);
void __cdecl ?add_?$qvector_Ucliopt_t____QEAAXAEBUcliopt_t___Z(qvector<cliopt_t> *__hidden this, cliopt_t *x);
void __cdecl ?add_?$qvector_Ucompiled_binpat_t____QEAAX$$QEAUcompiled_binpat_t___Z(qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
void __cdecl ?add_?$qvector_Ucompiled_binpat_t____QEAAXAEBUcompiled_binpat_t___Z(qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
void __cdecl ?add_?$qvector_Udebug_event_t____QEAAX$$QEAUdebug_event_t___Z(qvector<debug_event_t> *__hidden this, debug_event_t *x);
void __cdecl ?add_?$qvector_Udebug_event_t____QEAAXAEBUdebug_event_t___Z(qvector<debug_event_t> *__hidden this, debug_event_t *x);
void __cdecl ?add_?$qvector_Udirentry_t____QEAAX$$QEAUdirentry_t___Z(qvector<direntry_t> *__hidden this, direntry_t *x);
void __cdecl ?add_?$qvector_Udirentry_t____QEAAXAEBUdirentry_t___Z(qvector<direntry_t> *__hidden this, direntry_t *x);
void __cdecl ?add_?$qvector_Udirtree_cursor_t____QEAAX$$QEAUdirtree_cursor_t___Z(qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
void __cdecl ?add_?$qvector_Udirtree_cursor_t____QEAAXAEBUdirtree_cursor_t___Z(qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
void __cdecl ?add_?$qvector_Uea_name_t____QEAAX$$QEAUea_name_t___Z(qvector<ea_name_t> *__hidden this, ea_name_t *x);
void __cdecl ?add_?$qvector_Uea_name_t____QEAAXAEBUea_name_t___Z(qvector<ea_name_t> *__hidden this, ea_name_t *x);
void __cdecl ?add_?$qvector_Uedge_t____QEAAX$$QEAUedge_t___Z(qvector<edge_t> *__hidden this, edge_t *x);
void __cdecl ?add_?$qvector_Uedge_t____QEAAXAEBUedge_t___Z(qvector<edge_t> *__hidden this, edge_t *x);
void __cdecl ?add_?$qvector_Uenum_member_t____QEAAX$$QEAUenum_member_t___Z(qvector<enum_member_t> *__hidden this, enum_member_t *x);
void __cdecl ?add_?$qvector_Uenum_member_t____QEAAXAEBUenum_member_t___Z(qvector<enum_member_t> *__hidden this, enum_member_t *x);
void __cdecl ?add_?$qvector_Uexception_info_t____QEAAX$$QEAUexception_info_t___Z(qvector<exception_info_t> *__hidden this, exception_info_t *x);
void __cdecl ?add_?$qvector_Uexception_info_t____QEAAXAEBUexception_info_t___Z(qvector<exception_info_t> *__hidden this, exception_info_t *x);
void __cdecl ?add_?$qvector_Ufixup_info_t____QEAAX$$QEAUfixup_info_t___Z(qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
void __cdecl ?add_?$qvector_Ufixup_info_t____QEAAXAEBUfixup_info_t___Z(qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
void __cdecl ?add_?$qvector_Ufuncarg_t____QEAAX$$QEAUfuncarg_t___Z(qvector<funcarg_t> *__hidden this, funcarg_t *x);
void __cdecl ?add_?$qvector_Ufuncarg_t____QEAAXAEBUfuncarg_t___Z(qvector<funcarg_t> *__hidden this, funcarg_t *x);
void __cdecl ?add_?$qvector_Ugroup_crinfo_t____QEAAX$$QEAUgroup_crinfo_t___Z(qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
void __cdecl ?add_?$qvector_Ugroup_crinfo_t____QEAAXAEBUgroup_crinfo_t___Z(qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
void __cdecl ?add_?$qvector_Uidc_global_t____QEAAX$$QEAUidc_global_t___Z(qvector<idc_global_t> *__hidden this, idc_global_t *x);
void __cdecl ?add_?$qvector_Uidc_global_t____QEAAXAEBUidc_global_t___Z(qvector<idc_global_t> *__hidden this, idc_global_t *x);
void __cdecl ?add_?$qvector_Uidp_desc_t____QEAAX$$QEAUidp_desc_t___Z(qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
void __cdecl ?add_?$qvector_Uidp_desc_t____QEAAXAEBUidp_desc_t___Z(qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
void __cdecl ?add_?$qvector_Uidp_name_t____QEAAX$$QEAUidp_name_t___Z(qvector<idp_name_t> *__hidden this, idp_name_t *x);
void __cdecl ?add_?$qvector_Uidp_name_t____QEAAXAEBUidp_name_t___Z(qvector<idp_name_t> *__hidden this, idp_name_t *x);
void __cdecl ?add_?$qvector_Uioport_bit_t____QEAAX$$QEAUioport_bit_t___Z(qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
void __cdecl ?add_?$qvector_Uioport_bit_t____QEAAXAEBUioport_bit_t___Z(qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
void __cdecl ?add_?$qvector_Uioport_t____QEAAX$$QEAUioport_t___Z(qvector<ioport_t> *__hidden this, ioport_t *x);
void __cdecl ?add_?$qvector_Uioport_t____QEAAXAEBUioport_t___Z(qvector<ioport_t> *__hidden this, ioport_t *x);
void __cdecl ?add_?$qvector_Ujvalue_t____QEAAX$$QEAUjvalue_t___Z(qvector<jvalue_t> *__hidden this, jvalue_t *x);
void __cdecl ?add_?$qvector_Ujvalue_t____QEAAXAEBUjvalue_t___Z(qvector<jvalue_t> *__hidden this, jvalue_t *x);
void __cdecl ?add_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAX$$QEAUkeywords_style_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
void __cdecl ?add_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAXAEBUkeywords_style_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
void __cdecl ?add_?$qvector_Ukvp_t____QEAAX$$QEAUkvp_t___Z(qvector<kvp_t> *__hidden this, kvp_t *x);
void __cdecl ?add_?$qvector_Ukvp_t____QEAAXAEBUkvp_t___Z(qvector<kvp_t> *__hidden this, kvp_t *x);
void __cdecl ?add_?$qvector_Ulochist_entry_t____QEAAX$$QEAUlochist_entry_t___Z(qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
void __cdecl ?add_?$qvector_Ulochist_entry_t____QEAAXAEBUlochist_entry_t___Z(qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
void __cdecl ?add_?$qvector_Ulowcnd_t____QEAAX$$QEAUlowcnd_t___Z(qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
void __cdecl ?add_?$qvector_Ulowcnd_t____QEAAXAEBUlowcnd_t___Z(qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
void __cdecl ?add_?$qvector_Umemory_info_t____QEAAX$$QEAUmemory_info_t___Z(qvector<memory_info_t> *__hidden this, memory_info_t *x);
void __cdecl ?add_?$qvector_Umemory_info_t____QEAAXAEBUmemory_info_t___Z(qvector<memory_info_t> *__hidden this, memory_info_t *x);
void __cdecl ?add_?$qvector_Umemreg_info_t____QEAAX$$QEAUmemreg_info_t___Z(qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
void __cdecl ?add_?$qvector_Umemreg_info_t____QEAAXAEBUmemreg_info_t___Z(qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
void __cdecl ?add_?$qvector_Umodinfo_t____QEAAX$$QEAUmodinfo_t___Z(qvector<modinfo_t> *__hidden this, modinfo_t *x);
void __cdecl ?add_?$qvector_Umodinfo_t____QEAAXAEBUmodinfo_t___Z(qvector<modinfo_t> *__hidden this, modinfo_t *x);
void __cdecl ?add_?$qvector_Umovbpt_info_t____QEAAX$$QEAUmovbpt_info_t___Z(qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
void __cdecl ?add_?$qvector_Umovbpt_info_t____QEAAXAEBUmovbpt_info_t___Z(qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
void __cdecl ?add_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAX$$QEAUmulticmt_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
void __cdecl ?add_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAXAEBUmulticmt_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
void __cdecl ?add_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAX$$QEAUplain_char_ptr_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
void __cdecl ?add_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAXAEBUplain_char_ptr_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
void __cdecl ?add_?$qvector_Upoint_t____QEAAX$$QEAUpoint_t___Z(qvector<point_t> *__hidden this, point_t *x);
void __cdecl ?add_?$qvector_Upoint_t____QEAAXAEBUpoint_t___Z(qvector<point_t> *__hidden this, point_t *x);
void __cdecl ?add_?$qvector_Uprocess_info_t____QEAAX$$QEAUprocess_info_t___Z(qvector<process_info_t> *__hidden this, process_info_t *x);
void __cdecl ?add_?$qvector_Uprocess_info_t____QEAAXAEBUprocess_info_t___Z(qvector<process_info_t> *__hidden this, process_info_t *x);
void __cdecl ?add_?$qvector_Uqbasic_block_t____QEAAX$$QEAUqbasic_block_t___Z(qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
void __cdecl ?add_?$qvector_Uqbasic_block_t____QEAAXAEBUqbasic_block_t___Z(qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
void __cdecl ?add_?$qvector_Urange_t____QEAAX$$QEAUrange_t___Z(qvector<range_t> *__hidden this, range_t *x);
void __cdecl ?add_?$qvector_Urange_t____QEAAXAEBUrange_t___Z(qvector<range_t> *__hidden this, range_t *x);
void __cdecl ?add_?$qvector_Urect_t____QEAAX$$QEAUrect_t___Z(qvector<rect_t> *__hidden this, rect_t *x);
void __cdecl ?add_?$qvector_Urect_t____QEAAXAEBUrect_t___Z(qvector<rect_t> *__hidden this, rect_t *x);
void __cdecl ?add_?$qvector_Urefinfo_desc_t____QEAAX$$QEAUrefinfo_desc_t___Z(qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
void __cdecl ?add_?$qvector_Urefinfo_desc_t____QEAAXAEBUrefinfo_desc_t___Z(qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
void __cdecl ?add_?$qvector_Ureg_access_t____QEAAX$$QEAUreg_access_t___Z(qvector<reg_access_t> *__hidden this, reg_access_t *x);
void __cdecl ?add_?$qvector_Ureg_access_t____QEAAXAEBUreg_access_t___Z(qvector<reg_access_t> *__hidden this, reg_access_t *x);
void __cdecl ?add_?$qvector_Ureg_info_t____QEAAX$$QEAUreg_info_t___Z(qvector<reg_info_t> *__hidden this, reg_info_t *x);
void __cdecl ?add_?$qvector_Ureg_info_t____QEAAXAEBUreg_info_t___Z(qvector<reg_info_t> *__hidden this, reg_info_t *x);
void __cdecl ?add_?$qvector_Uregister_info_t____QEAAX$$QEAUregister_info_t___Z(qvector<register_info_t> *__hidden this, register_info_t *x);
void __cdecl ?add_?$qvector_Uregister_info_t____QEAAXAEBUregister_info_t___Z(qvector<register_info_t> *__hidden this, register_info_t *x);
void __cdecl ?add_?$qvector_Uregobj_t____QEAAX$$QEAUregobj_t___Z(qvector<regobj_t> *__hidden this, regobj_t *x);
void __cdecl ?add_?$qvector_Uregobj_t____QEAAXAEBUregobj_t___Z(qvector<regobj_t> *__hidden this, regobj_t *x);
void __cdecl ?add_?$qvector_Uregval_t____QEAAX$$QEAUregval_t___Z(qvector<regval_t> *__hidden this, regval_t *x);
void __cdecl ?add_?$qvector_Uregval_t____QEAAXAEBUregval_t___Z(qvector<regval_t> *__hidden this, regval_t *x);
void __cdecl ?add_?$qvector_Urow_info_t____QEAAX$$QEAUrow_info_t___Z(qvector<row_info_t> *__hidden this, row_info_t *x);
void __cdecl ?add_?$qvector_Urow_info_t____QEAAXAEBUrow_info_t___Z(qvector<row_info_t> *__hidden this, row_info_t *x);
void __cdecl ?add_?$qvector_Uscattered_segm_t____QEAAX$$QEAUscattered_segm_t___Z(qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
void __cdecl ?add_?$qvector_Uscattered_segm_t____QEAAXAEBUscattered_segm_t___Z(qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
void __cdecl ?add_?$qvector_Usegm_move_info_t____QEAAX$$QEAUsegm_move_info_t___Z(qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
void __cdecl ?add_?$qvector_Usegm_move_info_t____QEAAXAEBUsegm_move_info_t___Z(qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
void __cdecl ?add_?$qvector_Uselection_item_t____QEAAX$$QEAUselection_item_t___Z(qvector<selection_item_t> *__hidden this, selection_item_t *x);
void __cdecl ?add_?$qvector_Uselection_item_t____QEAAXAEBUselection_item_t___Z(qvector<selection_item_t> *__hidden this, selection_item_t *x);
void __cdecl ?add_?$qvector_Usimd_info_t____QEAAX$$QEAUsimd_info_t___Z(qvector<simd_info_t> *__hidden this, simd_info_t *x);
void __cdecl ?add_?$qvector_Usimd_info_t____QEAAXAEBUsimd_info_t___Z(qvector<simd_info_t> *__hidden this, simd_info_t *x);
void __cdecl ?add_?$qvector_Usimpleline_t____QEAAX$$QEAUsimpleline_t___Z(qvector<simpleline_t> *__hidden this, simpleline_t *x);
void __cdecl ?add_?$qvector_Usimpleline_t____QEAAXAEBUsimpleline_t___Z(qvector<simpleline_t> *__hidden this, simpleline_t *x);
void __cdecl ?add_?$qvector_Ustkpnt_t____QEAAX$$QEAUstkpnt_t___Z(qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
void __cdecl ?add_?$qvector_Ustkpnt_t____QEAAXAEBUstkpnt_t___Z(qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
void __cdecl ?add_?$qvector_Utev_info_reg_t____QEAAX$$QEAUtev_info_reg_t___Z(qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
void __cdecl ?add_?$qvector_Utev_info_reg_t____QEAAXAEBUtev_info_reg_t___Z(qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
void __cdecl ?add_?$qvector_Utev_info_t____QEAAX$$QEAUtev_info_t___Z(qvector<tev_info_t> *__hidden this, tev_info_t *x);
void __cdecl ?add_?$qvector_Utev_info_t____QEAAXAEBUtev_info_t___Z(qvector<tev_info_t> *__hidden this, tev_info_t *x);
void __cdecl ?add_?$qvector_Utev_reg_value_t____QEAAX$$QEAUtev_reg_value_t___Z(qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
void __cdecl ?add_?$qvector_Utev_reg_value_t____QEAAXAEBUtev_reg_value_t___Z(qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
void __cdecl ?add_?$qvector_Uthread_name_t____QEAAX$$QEAUthread_name_t___Z(qvector<thread_name_t> *__hidden this, thread_name_t *x);
void __cdecl ?add_?$qvector_Uthread_name_t____QEAAXAEBUthread_name_t___Z(qvector<thread_name_t> *__hidden this, thread_name_t *x);
void __cdecl ?add_?$qvector_Utoken_t____QEAAX$$QEAUtoken_t___Z(qvector<token_t> *__hidden this, token_t *x);
void __cdecl ?add_?$qvector_Utoken_t____QEAAXAEBUtoken_t___Z(qvector<token_t> *__hidden this, token_t *x);
void __cdecl ?add_?$qvector_Utype_attr_t____QEAAX$$QEAUtype_attr_t___Z(qvector<type_attr_t> *__hidden this, type_attr_t *x);
void __cdecl ?add_?$qvector_Utype_attr_t____QEAAXAEBUtype_attr_t___Z(qvector<type_attr_t> *__hidden this, type_attr_t *x);
void __cdecl ?add_?$qvector_Uudt_member_t____QEAAX$$QEAUudt_member_t___Z(qvector<udt_member_t> *__hidden this, udt_member_t *x);
void __cdecl ?add_?$qvector_Uudt_member_t____QEAAXAEBUudt_member_t___Z(qvector<udt_member_t> *__hidden this, udt_member_t *x);
void __cdecl ?add_?$qvector_Uupdate_bpt_info_t____QEAAX$$QEAUupdate_bpt_info_t___Z(qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
void __cdecl ?add_?$qvector_Uupdate_bpt_info_t____QEAAXAEBUupdate_bpt_info_t___Z(qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
void __cdecl ?add_?$qvector_Uxreflist_entry_t____QEAAX$$QEAUxreflist_entry_t___Z(qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
void __cdecl ?add_?$qvector_Uxreflist_entry_t____QEAAXAEBUxreflist_entry_t___Z(qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
void __cdecl ?add_?$qvector_V?$_qstring_D____QEAAX$$QEAV?$_qstring_D___Z(qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
void __cdecl ?add_?$qvector_V?$_qstring_D____QEAAXAEBV?$_qstring_D___Z(qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
void __cdecl ?add_?$qvector_V?$_qstring_E____QEAAX$$QEAV?$_qstring_E___Z(qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
void __cdecl ?add_?$qvector_V?$_qstring_E____QEAAXAEBV?$_qstring_E___Z(qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
void __cdecl ?add_?$qvector_V?$_qstring__W____QEAAX$$QEAV?$_qstring__W___Z(qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
void __cdecl ?add_?$qvector_V?$_qstring__W____QEAAXAEBV?$_qstring__W___Z(qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
void __cdecl ?add_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAX$$QEAV?$qrefcnt_t_Vsource_item_t_____Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
void __cdecl ?add_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAXAEBV?$qrefcnt_t_Vsource_item_t_____Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
void __cdecl ?add_?$qvector_V?$qvector_H____QEAAX$$QEAV?$qvector_H___Z(qvector<qvector<int>> *__hidden this, qvector<int> *x);
void __cdecl ?add_?$qvector_V?$qvector_H____QEAAXAEBV?$qvector_H___Z(qvector<qvector<int>> *__hidden this, qvector<int> *x);
void __cdecl ?add_?$qvector_V?$qvector_PEBD____QEAAX$$QEAV?$qvector_PEBD___Z(qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
void __cdecl ?add_?$qvector_V?$qvector_PEBD____QEAAXAEBV?$qvector_PEBD___Z(qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
void __cdecl ?add_?$qvector_V?$qvector_PEBVtwinline_t______QEAAX$$QEAV?$qvector_PEBVtwinline_t_____Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
void __cdecl ?add_?$qvector_V?$qvector_PEBVtwinline_t______QEAAXAEBV?$qvector_PEBVtwinline_t_____Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
void __cdecl ?add_?$qvector_V?$qvector__J____QEAAX$$QEAV?$qvector__J___Z(qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
void __cdecl ?add_?$qvector_V?$qvector__J____QEAAXAEBV?$qvector__J___Z(qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
void __cdecl ?add_?$qvector_Vargloc_t____QEAAX$$QEAVargloc_t___Z(qvector<argloc_t> *__hidden this, argloc_t *x);
void __cdecl ?add_?$qvector_Vargloc_t____QEAAXAEBVargloc_t___Z(qvector<argloc_t> *__hidden this, argloc_t *x);
void __cdecl ?add_?$qvector_Vintmap_t____QEAAX$$QEAVintmap_t___Z(qvector<intmap_t> *__hidden this, intmap_t *x);
void __cdecl ?add_?$qvector_Vintmap_t____QEAAXAEBVintmap_t___Z(qvector<intmap_t> *__hidden this, intmap_t *x);
void __cdecl ?add_?$qvector_Vnode_set_t____QEAAX$$QEAVnode_set_t___Z(qvector<node_set_t> *__hidden this, node_set_t *x);
void __cdecl ?add_?$qvector_Vnode_set_t____QEAAXAEBVnode_set_t___Z(qvector<node_set_t> *__hidden this, node_set_t *x);
void __cdecl ?add_?$qvector_Vop_t____QEAAX$$QEAVop_t___Z(qvector<op_t> *__hidden this, op_t *x);
void __cdecl ?add_?$qvector_Vop_t____QEAAXAEBVop_t___Z(qvector<op_t> *__hidden this, op_t *x);
void __cdecl ?add_?$qvector_Vrangeset_t____QEAAX$$QEAVrangeset_t___Z(qvector<rangeset_t> *__hidden this, rangeset_t *x);
void __cdecl ?add_?$qvector_Vrangeset_t____QEAAXAEBVrangeset_t___Z(qvector<rangeset_t> *__hidden this, rangeset_t *x);
void __cdecl ?add_?$qvector_Vsync_source_t____QEAAX$$QEAVsync_source_t___Z(qvector<sync_source_t> *__hidden this, sync_source_t *x);
void __cdecl ?add_?$qvector_Vsync_source_t____QEAAXAEBVsync_source_t___Z(qvector<sync_source_t> *__hidden this, sync_source_t *x);
void __cdecl ?add_?$qvector_Vtinfo_t____QEAAX$$QEAVtinfo_t___Z(qvector<tinfo_t> *__hidden this, tinfo_t *x);
void __cdecl ?add_?$qvector_Vtinfo_t____QEAAXAEBVtinfo_t___Z(qvector<tinfo_t> *__hidden this, tinfo_t *x);
void __cdecl ?add_?$qvector_Vtryblk_t____QEAAX$$QEAVtryblk_t___Z(qvector<tryblk_t> *__hidden this, tryblk_t *x);
void __cdecl ?add_?$qvector_Vtryblk_t____QEAAXAEBVtryblk_t___Z(qvector<tryblk_t> *__hidden this, tryblk_t *x);
void __cdecl ?add_?$qvector_Vtwinline_t____QEAAX$$QEAVtwinline_t___Z(qvector<twinline_t> *__hidden this, twinline_t *x);
void __cdecl ?add_?$qvector_Vtwinline_t____QEAAXAEBVtwinline_t___Z(qvector<twinline_t> *__hidden this, twinline_t *x);
void __cdecl ?add_?$qvector_Vvalstr_t____QEAAX$$QEAVvalstr_t___Z(qvector<valstr_t> *__hidden this, valstr_t *x);
void __cdecl ?add_?$qvector_Vvalstr_t____QEAAXAEBVvalstr_t___Z(qvector<valstr_t> *__hidden this, valstr_t *x);
void __cdecl ?add_?$qvector_W4movbpt_code_t____QEAAX$$QEAW4movbpt_code_t___Z(qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
void __cdecl ?add_?$qvector_W4movbpt_code_t____QEAAXAEBW4movbpt_code_t___Z(qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
void __cdecl ?add_?$qvector__J__QEAAX$$QEA_J_Z(qvector<long long> *__hidden this, __int64 *x);
void __cdecl ?add_?$qvector__J__QEAAXAEB_J_Z(qvector<long long> *__hidden this, __int64 *x);
void __cdecl ?add_?$qvector__K__QEAAX$$QEA_K_Z(qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
void __cdecl ?add_?$qvector__K__QEAAXAEB_K_Z(qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
void __cdecl ?add_?$qvector__N__QEAAX$$QEA_N_Z(qvector<bool> *__hidden this, bool *x);
void __cdecl ?add_?$qvector__N__QEAAXAEB_N_Z(qvector<bool> *__hidden this, bool *x);
void __cdecl ?add_?$qvector__W__QEAAX$$QEA_W_Z(qvector<wchar_t> *__hidden this, __int16 *x);
void __cdecl ?add_?$qvector__W__QEAAXAEB_W_Z(qvector<wchar_t> *__hidden this, __int16 *x);
void __cdecl ?add_TPointDouble__QEAAXAEBU1__Z(TPointDouble *__hidden this, const TPointDouble *r);
void __cdecl ?add_cliopts_t__QEAAXPEBUcliopt_t___K_Z(cliopts_t *__hidden this, const cliopt_t *opts, size_t nopts);
void __cdecl ?add_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?add_node_set_t__QEAAXAEBV1__Z(node_set_t *__hidden this, const node_set_t *r);
bool __cdecl ?add_node_set_t__QEAA_NH_Z(node_set_t *__hidden this, int node);
point_t *__cdecl ?add_point_t__QEAAAEAU1_AEBU1__Z(point_t *__hidden this, const point_t *r);
bool __cdecl ?add_rangeset_t__QEAA_NAEBUrange_t___Z(rangeset_t *__hidden this, const range_t *range);
bool __cdecl ?add_rangeset_t__QEAA_NAEBV1__Z(rangeset_t *__hidden this, const rangeset_t *aset);
bool __cdecl ?add_rangeset_t__QEAA_N_K0_Z(rangeset_t *__hidden this, ea_t start, ea_t _end);
void __cdecl ?add_screen_graph_selection_t__QEAAXAEBU1__Z(screen_graph_selection_t *__hidden this, const screen_graph_selection_t *s);
void __cdecl ?add_aux_prefix_outctx_base_t__MEAAXPEBDH_Z(outctx_base_t *__hidden this, const char *, int);
void __cdecl ?add_cref_insn_t__QEBAX_KHW4cref_t___Z(const insn_t *__hidden this, ea_t to, int opoff, cref_t type);
ssize_t __cdecl ?add_cref_processor_t__SA_J_K0W4cref_t___Z(ea_t from, ea_t to, cref_t type);
void __cdecl ?add_dest_mutable_graph_t__AEAAXAEAUdestset_t__Uedge_t__H_Z(mutable_graph_t *__hidden this, destset_t *ne, edge_t e, int g);
void __cdecl ?add_dref_insn_t__QEBAX_KHW4dref_t___Z(const insn_t *__hidden this, ea_t to, int opoff, dref_t type);
ssize_t __cdecl ?add_dref_processor_t__SA_J_K0W4dref_t___Z(ea_t from, ea_t to, dref_t type);
bool __cdecl ?add_edge_mutable_graph_t__UEAA_NHHPEBUedge_info_t___Z(mutable_graph_t *__hidden this, int i, int j, const edge_info_t *ei);
void __cdecl ?add_external_colorizer_ida_syntax_highlighter_t__QEAAXP6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(ida_syntax_highlighter_t *__hidden this, external_colorizer_t *th);
void __cdecl ?add_external_ident_colorizer_ida_syntax_highlighter_t__QEAAXP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(ida_syntax_highlighter_t *__hidden this, external_ident_colorizer_t *th);
void __cdecl ?add_keywords_ida_syntax_highlighter_t__QEAAXPEBDW4syntax_highlight_style___Z(ida_syntax_highlighter_t *__hidden this, const char *kwstr, syntax_highlight_style _style);
void __cdecl ?add_layer_nodes_mutable_graph_t__AEAAXAEAV?$qvector_Urow_info_t____AEAV?$qvector_H___Z(mutable_graph_t *__hidden this, graph_row_info_t *gri, intvec_t *tops);
void __cdecl ?add_layout_point_edge_info_t__QEAAXUpoint_t___Z(edge_info_t *__hidden this, point_t p);
void __cdecl ?add_module_srcinfo_provider_t__UEAAXPEBD_K1_Z(srcinfo_provider_t *__hidden this, const char *path, ea_t base, asize_t size);
void __cdecl ?add_multi_line_comment_ida_syntax_highlighter_t__QEAAXPEBD0_Z(ida_syntax_highlighter_t *__hidden this, const char *begin, const char *end);
int __cdecl ?add_node_mutable_graph_t__UEAAHPEBUrect_t___Z(mutable_graph_t *__hidden this, const rect_t *r);
void __cdecl ?add_node_screen_graph_selection_t__QEAAXH_Z(screen_graph_selection_t *__hidden this, int node);
void __cdecl ?add_node_edges_abstract_graph_t__QEAAXAEAV?$qvector_Uedge_t____H_Z(abstract_graph_t *__hidden this, edgevec_t *dlist, int node);
ea_t __cdecl ?add_off_drefs_insn_t__QEBA_KAEBVop_t__W4dref_t__H_Z(const insn_t *__hidden this, const op_t *x, dref_t type, int outf);
void __cdecl ?add_point_screen_graph_selection_t__QEAAXUedge_t__H_Z(screen_graph_selection_t *__hidden this, edge_t e, int idx);
void __cdecl ?add_register_dynamic_register_set_t__QEAAXPEBDHEEPEBQEBD_K_Z(dynamic_register_set_t *__hidden this, const char *name, int flags, op_dtype_t dtype, register_class_t register_class, const char *const *bit_strings, uval_t bits_mask);
void __cdecl ?add_spaces_outctx_base_t__UEAAXPEAV?$_qstring_D___J_Z(outctx_base_t *__hidden this, qstring *buf, ssize_t len);
bool __cdecl ?add_unique_?$qvector_D__QEAA_NAEBD_Z(qvector<char> *__hidden this, char *x);
bool __cdecl ?add_unique_?$qvector_E__QEAA_NAEBE_Z(qvector<unsigned char> *__hidden this, unsigned __int8 *x);
bool __cdecl ?add_unique_?$qvector_H__QEAA_NAEBH_Z(qvector<int> *__hidden this, int *x);
bool __cdecl ?add_unique_?$qvector_I__QEAA_NAEBI_Z(qvector<unsigned int> *__hidden this, unsigned int *x);
bool __cdecl ?add_unique_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAA_NAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
bool __cdecl ?add_unique_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAA_NAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
bool __cdecl ?add_unique_?$qvector_PEAUbpt_t____QEAA_NAEBQEAUbpt_t___Z(qvector<bpt_t *> *__hidden this, bpt_t **x);
bool __cdecl ?add_unique_?$qvector_PEAUextlang_t____QEAA_NAEBQEAUextlang_t___Z(qvector<extlang_t *> *__hidden this, extlang_t **x);
bool __cdecl ?add_unique_?$qvector_PEAUline_rendering_output_entry_t____QEAA_NAEBQEAUline_rendering_output_entry_t___Z(qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
bool __cdecl ?add_unique_?$qvector_PEAVsnapshot_t____QEAA_NAEBQEAVsnapshot_t___Z(qvector<snapshot_t *> *__hidden this, snapshot_t **x);
bool __cdecl ?add_unique_?$qvector_PEBD__QEAA_NAEBQEBD_Z(qvector<const char *> *__hidden this, const char **x);
bool __cdecl ?add_unique_?$qvector_PEBUbpt_t____QEAA_NAEBQEBUbpt_t___Z(qvector<const bpt_t *> *__hidden this, const bpt_t **x);
bool __cdecl ?add_unique_?$qvector_PEBVrangeset_t____QEAA_NAEBQEBVrangeset_t___Z(qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
bool __cdecl ?add_unique_?$qvector_PEBVtwinline_t____QEAA_NAEBQEBVtwinline_t___Z(qvector<const twinline_t *> *__hidden this, const twinline_t **x);
bool __cdecl ?add_unique_?$qvector_Uargpart_t____QEAA_NAEBUargpart_t___Z(qvector<argpart_t> *__hidden this, argpart_t *x);
bool __cdecl ?add_unique_?$qvector_Ubpt_t____QEAA_NAEBUbpt_t___Z(qvector<bpt_t> *__hidden this, bpt_t *x);
bool __cdecl ?add_unique_?$qvector_Ubptaddrs_t____QEAA_NAEBUbptaddrs_t___Z(qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
bool __cdecl ?add_unique_?$qvector_Ucall_stack_info_t____QEAA_NAEBUcall_stack_info_t___Z(qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
bool __cdecl ?add_unique_?$qvector_Ucatch_t____QEAA_NAEBUcatch_t___Z(qvector<catch_t> *__hidden this, catch_t *x);
bool __cdecl ?add_unique_?$qvector_Ucfgopt_set_t____QEAA_NAEBUcfgopt_set_t___Z(qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
bool __cdecl ?add_unique_?$qvector_Uchannel_redir_t____QEAA_NAEBUchannel_redir_t___Z(qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
bool __cdecl ?add_unique_?$qvector_Ucliopt_t____QEAA_NAEBUcliopt_t___Z(qvector<cliopt_t> *__hidden this, cliopt_t *x);
bool __cdecl ?add_unique_?$qvector_Ucompiled_binpat_t____QEAA_NAEBUcompiled_binpat_t___Z(qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
bool __cdecl ?add_unique_?$qvector_Udebug_event_t____QEAA_NAEBUdebug_event_t___Z(qvector<debug_event_t> *__hidden this, debug_event_t *x);
bool __cdecl ?add_unique_?$qvector_Udirentry_t____QEAA_NAEBUdirentry_t___Z(qvector<direntry_t> *__hidden this, direntry_t *x);
bool __cdecl ?add_unique_?$qvector_Udirtree_cursor_t____QEAA_NAEBUdirtree_cursor_t___Z(qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
bool __cdecl ?add_unique_?$qvector_Uea_name_t____QEAA_NAEBUea_name_t___Z(qvector<ea_name_t> *__hidden this, ea_name_t *x);
bool __cdecl ?add_unique_?$qvector_Uedge_t____QEAA_NAEBUedge_t___Z(qvector<edge_t> *__hidden this, edge_t *x);
bool __cdecl ?add_unique_?$qvector_Uenum_member_t____QEAA_NAEBUenum_member_t___Z(qvector<enum_member_t> *__hidden this, enum_member_t *x);
bool __cdecl ?add_unique_?$qvector_Uexception_info_t____QEAA_NAEBUexception_info_t___Z(qvector<exception_info_t> *__hidden this, exception_info_t *x);
bool __cdecl ?add_unique_?$qvector_Ufixup_info_t____QEAA_NAEBUfixup_info_t___Z(qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
bool __cdecl ?add_unique_?$qvector_Ufuncarg_t____QEAA_NAEBUfuncarg_t___Z(qvector<funcarg_t> *__hidden this, funcarg_t *x);
bool __cdecl ?add_unique_?$qvector_Ugroup_crinfo_t____QEAA_NAEBUgroup_crinfo_t___Z(qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
bool __cdecl ?add_unique_?$qvector_Uidc_global_t____QEAA_NAEBUidc_global_t___Z(qvector<idc_global_t> *__hidden this, idc_global_t *x);
bool __cdecl ?add_unique_?$qvector_Uidp_desc_t____QEAA_NAEBUidp_desc_t___Z(qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
bool __cdecl ?add_unique_?$qvector_Uidp_name_t____QEAA_NAEBUidp_name_t___Z(qvector<idp_name_t> *__hidden this, idp_name_t *x);
bool __cdecl ?add_unique_?$qvector_Uioport_bit_t____QEAA_NAEBUioport_bit_t___Z(qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
bool __cdecl ?add_unique_?$qvector_Uioport_t____QEAA_NAEBUioport_t___Z(qvector<ioport_t> *__hidden this, ioport_t *x);
bool __cdecl ?add_unique_?$qvector_Ujvalue_t____QEAA_NAEBUjvalue_t___Z(qvector<jvalue_t> *__hidden this, jvalue_t *x);
bool __cdecl ?add_unique_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAA_NAEBUkeywords_style_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
bool __cdecl ?add_unique_?$qvector_Ukvp_t____QEAA_NAEBUkvp_t___Z(qvector<kvp_t> *__hidden this, kvp_t *x);
bool __cdecl ?add_unique_?$qvector_Ulochist_entry_t____QEAA_NAEBUlochist_entry_t___Z(qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
bool __cdecl ?add_unique_?$qvector_Ulowcnd_t____QEAA_NAEBUlowcnd_t___Z(qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
bool __cdecl ?add_unique_?$qvector_Umemory_info_t____QEAA_NAEBUmemory_info_t___Z(qvector<memory_info_t> *__hidden this, memory_info_t *x);
bool __cdecl ?add_unique_?$qvector_Umemreg_info_t____QEAA_NAEBUmemreg_info_t___Z(qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
bool __cdecl ?add_unique_?$qvector_Umodinfo_t____QEAA_NAEBUmodinfo_t___Z(qvector<modinfo_t> *__hidden this, modinfo_t *x);
bool __cdecl ?add_unique_?$qvector_Umovbpt_info_t____QEAA_NAEBUmovbpt_info_t___Z(qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
bool __cdecl ?add_unique_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAA_NAEBUmulticmt_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
bool __cdecl ?add_unique_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAA_NAEBUplain_char_ptr_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
bool __cdecl ?add_unique_?$qvector_Upoint_t____QEAA_NAEBUpoint_t___Z(qvector<point_t> *__hidden this, point_t *x);
bool __cdecl ?add_unique_?$qvector_Uprocess_info_t____QEAA_NAEBUprocess_info_t___Z(qvector<process_info_t> *__hidden this, process_info_t *x);
bool __cdecl ?add_unique_?$qvector_Uqbasic_block_t____QEAA_NAEBUqbasic_block_t___Z(qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
bool __cdecl ?add_unique_?$qvector_Urange_t____QEAA_NAEBUrange_t___Z(qvector<range_t> *__hidden this, range_t *x);
bool __cdecl ?add_unique_?$qvector_Urect_t____QEAA_NAEBUrect_t___Z(qvector<rect_t> *__hidden this, rect_t *x);
bool __cdecl ?add_unique_?$qvector_Urefinfo_desc_t____QEAA_NAEBUrefinfo_desc_t___Z(qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
bool __cdecl ?add_unique_?$qvector_Ureg_access_t____QEAA_NAEBUreg_access_t___Z(qvector<reg_access_t> *__hidden this, reg_access_t *x);
bool __cdecl ?add_unique_?$qvector_Ureg_info_t____QEAA_NAEBUreg_info_t___Z(qvector<reg_info_t> *__hidden this, reg_info_t *x);
bool __cdecl ?add_unique_?$qvector_Uregister_info_t____QEAA_NAEBUregister_info_t___Z(qvector<register_info_t> *__hidden this, register_info_t *x);
bool __cdecl ?add_unique_?$qvector_Uregobj_t____QEAA_NAEBUregobj_t___Z(qvector<regobj_t> *__hidden this, regobj_t *x);
bool __cdecl ?add_unique_?$qvector_Uregval_t____QEAA_NAEBUregval_t___Z(qvector<regval_t> *__hidden this, regval_t *x);
bool __cdecl ?add_unique_?$qvector_Urow_info_t____QEAA_NAEBUrow_info_t___Z(qvector<row_info_t> *__hidden this, row_info_t *x);
bool __cdecl ?add_unique_?$qvector_Uscattered_segm_t____QEAA_NAEBUscattered_segm_t___Z(qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
bool __cdecl ?add_unique_?$qvector_Usegm_move_info_t____QEAA_NAEBUsegm_move_info_t___Z(qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
bool __cdecl ?add_unique_?$qvector_Uselection_item_t____QEAA_NAEBUselection_item_t___Z(qvector<selection_item_t> *__hidden this, selection_item_t *x);
bool __cdecl ?add_unique_?$qvector_Usimd_info_t____QEAA_NAEBUsimd_info_t___Z(qvector<simd_info_t> *__hidden this, simd_info_t *x);
bool __cdecl ?add_unique_?$qvector_Usimpleline_t____QEAA_NAEBUsimpleline_t___Z(qvector<simpleline_t> *__hidden this, simpleline_t *x);
bool __cdecl ?add_unique_?$qvector_Ustkpnt_t____QEAA_NAEBUstkpnt_t___Z(qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
bool __cdecl ?add_unique_?$qvector_Utev_info_reg_t____QEAA_NAEBUtev_info_reg_t___Z(qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
bool __cdecl ?add_unique_?$qvector_Utev_info_t____QEAA_NAEBUtev_info_t___Z(qvector<tev_info_t> *__hidden this, tev_info_t *x);
bool __cdecl ?add_unique_?$qvector_Utev_reg_value_t____QEAA_NAEBUtev_reg_value_t___Z(qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
bool __cdecl ?add_unique_?$qvector_Uthread_name_t____QEAA_NAEBUthread_name_t___Z(qvector<thread_name_t> *__hidden this, thread_name_t *x);
bool __cdecl ?add_unique_?$qvector_Utoken_t____QEAA_NAEBUtoken_t___Z(qvector<token_t> *__hidden this, token_t *x);
bool __cdecl ?add_unique_?$qvector_Utype_attr_t____QEAA_NAEBUtype_attr_t___Z(qvector<type_attr_t> *__hidden this, type_attr_t *x);
bool __cdecl ?add_unique_?$qvector_Uudt_member_t____QEAA_NAEBUudt_member_t___Z(qvector<udt_member_t> *__hidden this, udt_member_t *x);
bool __cdecl ?add_unique_?$qvector_Uupdate_bpt_info_t____QEAA_NAEBUupdate_bpt_info_t___Z(qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
bool __cdecl ?add_unique_?$qvector_Uxreflist_entry_t____QEAA_NAEBUxreflist_entry_t___Z(qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
bool __cdecl ?add_unique_?$qvector_V?$_qstring_D____QEAA_NAEBV?$_qstring_D___Z(qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
bool __cdecl ?add_unique_?$qvector_V?$_qstring_E____QEAA_NAEBV?$_qstring_E___Z(qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
bool __cdecl ?add_unique_?$qvector_V?$_qstring__W____QEAA_NAEBV?$_qstring__W___Z(qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
bool __cdecl ?add_unique_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAA_NAEBV?$qrefcnt_t_Vsource_item_t_____Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
bool __cdecl ?add_unique_?$qvector_V?$qvector_H____QEAA_NAEBV?$qvector_H___Z(qvector<qvector<int>> *__hidden this, qvector<int> *x);
bool __cdecl ?add_unique_?$qvector_V?$qvector_PEBD____QEAA_NAEBV?$qvector_PEBD___Z(qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
bool __cdecl ?add_unique_?$qvector_V?$qvector_PEBVtwinline_t______QEAA_NAEBV?$qvector_PEBVtwinline_t_____Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
bool __cdecl ?add_unique_?$qvector_V?$qvector__J____QEAA_NAEBV?$qvector__J___Z(qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
bool __cdecl ?add_unique_?$qvector_Vargloc_t____QEAA_NAEBVargloc_t___Z(qvector<argloc_t> *__hidden this, argloc_t *x);
bool __cdecl ?add_unique_?$qvector_Vintmap_t____QEAA_NAEBVintmap_t___Z(qvector<intmap_t> *__hidden this, intmap_t *x);
bool __cdecl ?add_unique_?$qvector_Vnode_set_t____QEAA_NAEBVnode_set_t___Z(qvector<node_set_t> *__hidden this, node_set_t *x);
bool __cdecl ?add_unique_?$qvector_Vop_t____QEAA_NAEBVop_t___Z(qvector<op_t> *__hidden this, op_t *x);
bool __cdecl ?add_unique_?$qvector_Vrangeset_t____QEAA_NAEBVrangeset_t___Z(qvector<rangeset_t> *__hidden this, rangeset_t *x);
bool __cdecl ?add_unique_?$qvector_Vsync_source_t____QEAA_NAEBVsync_source_t___Z(qvector<sync_source_t> *__hidden this, sync_source_t *x);
bool __cdecl ?add_unique_?$qvector_Vtinfo_t____QEAA_NAEBVtinfo_t___Z(qvector<tinfo_t> *__hidden this, tinfo_t *x);
bool __cdecl ?add_unique_?$qvector_Vtryblk_t____QEAA_NAEBVtryblk_t___Z(qvector<tryblk_t> *__hidden this, tryblk_t *x);
bool __cdecl ?add_unique_?$qvector_Vtwinline_t____QEAA_NAEBVtwinline_t___Z(qvector<twinline_t> *__hidden this, twinline_t *x);
bool __cdecl ?add_unique_?$qvector_Vvalstr_t____QEAA_NAEBVvalstr_t___Z(qvector<valstr_t> *__hidden this, valstr_t *x);
bool __cdecl ?add_unique_?$qvector_W4movbpt_code_t____QEAA_NAEBW4movbpt_code_t___Z(qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
bool __cdecl ?add_unique_?$qvector__J__QEAA_NAEB_J_Z(qvector<long long> *__hidden this, __int64 *x);
bool __cdecl ?add_unique_?$qvector__K__QEAA_NAEB_K_Z(qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
bool __cdecl ?add_unique_?$qvector__N__QEAA_NAEB_N_Z(qvector<bool> *__hidden this, bool *x);
bool __cdecl ?add_unique_?$qvector__W__QEAA_NAEB_W_Z(qvector<wchar_t> *__hidden this, __int16 *x);
char *__cdecl ?address_?$allocator_D_std__QEBAPEADAEAD_Z(const std::allocator<char> *__hidden this, char *_Val);
char *__cdecl ?address_?$allocator_D_std__QEBAPEBDAEBD_Z(const std::allocator<char> *__hidden this, char *_Val);
int *__cdecl ?address_?$allocator_H_std__QEBAPEAHAEAH_Z(const std::allocator<int> *__hidden this, int *_Val);
int *__cdecl ?address_?$allocator_H_std__QEBAPEBHAEBH_Z(const std::allocator<int> *__hidden this, int *_Val);
std::_Tree_node<int, void *> *__cdecl ?address_?$allocator_U?$_Tree_node_HPEAX_std___std__QEBAPEAU?$_Tree_node_HPEAX_2_AEAU32__Z(const std::allocator<std::_Tree_node<int, void *>> *__hidden this, std::_Tree_node<int, void *> *_Val);
std::_Tree_node<int, void *> *__cdecl ?address_?$allocator_U?$_Tree_node_HPEAX_std___std__QEBAPEBU?$_Tree_node_HPEAX_2_AEBU32__Z(const std::allocator<std::_Tree_node<int, void *>> *__hidden this, std::_Tree_node<int, void *> *_Val);
std::_Tree_node<std::pair<const int, int>, void *> *__cdecl ?address_?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__QEBAPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2_AEAU32__Z(const std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__hidden this, std::_Tree_node<std::pair<const int, int>, void *> *_Val);
std::_Tree_node<std::pair<const int, int>, void *> *__cdecl ?address_?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__QEBAPEBU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2_AEBU32__Z(const std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__hidden this, std::_Tree_node<std::pair<const int, int>, void *> *_Val);
std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *__cdecl ?address_?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__QEBAPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2_AEAU32__Z(const std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__hidden this, std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *_Val);
std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *__cdecl ?address_?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__QEBAPEBU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2_AEBU32__Z(const std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__hidden this, std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *_Val);
std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *__cdecl ?address_?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__QEBAPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2_AEAU32__Z(const std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__hidden this, std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *_Val);
std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *__cdecl ?address_?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__QEBAPEBU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2_AEBU32__Z(const std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__hidden this, std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *_Val);
std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *__cdecl ?address_?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__QEBAPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2_AEAU32__Z(const std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__hidden this, std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *_Val);
std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *__cdecl ?address_?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__QEBAPEBU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2_AEBU32__Z(const std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__hidden this, std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *_Val);
std::pair<const int, int> *__cdecl ?address_?$allocator_U?$pair_$$CBHH_std___std__QEBAPEAU?$pair_$$CBHH_2_AEAU32__Z(const std::allocator<std::pair<const int, int>> *__hidden this, std::pair<const int, int> *_Val);
std::pair<const int, int> *__cdecl ?address_?$allocator_U?$pair_$$CBHH_std___std__QEBAPEBU?$pair_$$CBHH_2_AEBU32__Z(const std::allocator<std::pair<const int, int>> *__hidden this, std::pair<const int, int> *_Val);
std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ?address_?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEBAPEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____2_AEAU32__Z(const std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this, std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Val);
std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ?address_?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEBAPEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____2_AEBU32__Z(const std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this, std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Val);
std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ?address_?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEBAPEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____2_AEAU32__Z(const std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this, std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Val);
std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ?address_?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEBAPEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____2_AEBU32__Z(const std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this, std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Val);
std::pair<const unsigned long long, unsigned long long> *__cdecl ?address_?$allocator_U?$pair_$$CB_K_K_std___std__QEBAPEAU?$pair_$$CB_K_K_2_AEAU32__Z(const std::allocator<std::pair<const unsigned long long, unsigned long long>> *__hidden this, std::pair<const unsigned long long, unsigned long long> *_Val);
std::pair<const unsigned long long, unsigned long long> *__cdecl ?address_?$allocator_U?$pair_$$CB_K_K_std___std__QEBAPEBU?$pair_$$CB_K_K_2_AEBU32__Z(const std::allocator<std::pair<const unsigned long long, unsigned long long>> *__hidden this, std::pair<const unsigned long long, unsigned long long> *_Val);
__int16 *__cdecl ?address_?$allocator__S_std__QEBAPEA_SAEA_S_Z(const std::allocator<char16_t> *__hidden this, __int16 *_Val);
__int16 *__cdecl ?address_?$allocator__S_std__QEBAPEB_SAEB_S_Z(const std::allocator<char16_t> *__hidden this, __int16 *_Val);
__int32 *__cdecl ?address_?$allocator__U_std__QEBAPEA_UAEA_U_Z(const std::allocator<char32_t> *__hidden this, __int32 *_Val);
__int32 *__cdecl ?address_?$allocator__U_std__QEBAPEB_UAEB_U_Z(const std::allocator<char32_t> *__hidden this, __int32 *_Val);
__int16 *__cdecl ?address_?$allocator__W_std__QEBAPEA_WAEA_W_Z(const std::allocator<wchar_t> *__hidden this, __int16 *_Val);
__int16 *__cdecl ?address_?$allocator__W_std__QEBAPEB_WAEB_W_Z(const std::allocator<wchar_t> *__hidden this, __int16 *_Val);
void __cdecl ?adjust_enumplace_t__UEAAXPEAX_Z(enumplace_t *__hidden this, void *ud);
void __cdecl ?adjust_hexplace_t__UEAAXPEAX_Z(hexplace_t *__hidden this, void *ud);
void __cdecl ?adjust_idaplace_t__UEAAXPEAX_Z(idaplace_t *__hidden this, void *ud);
void __cdecl ?adjust_place_t__UEAAXPEAX_Z(place_t *__hidden this, void *ud);
void __cdecl ?adjust_simpleline_place_t__UEAAXPEAX_Z(simpleline_place_t *__hidden this, void *ud);
void __cdecl ?adjust_structplace_t__UEAAXPEAX_Z(structplace_t *__hidden this, void *ud);
ssize_t __cdecl ?adjust_argloc_processor_t__SA_JPEAVargloc_t__PEBVtinfo_t__H_Z(argloc_t *argloc, const tinfo_t *type, int size);
void __cdecl ?adjust_last_item_chooser_multi_t__IEBAXPEAV?$qvector__K___K_Z(const chooser_multi_t *__hidden this, sizevec_t *sel, size_t n);
ssize_t __cdecl ?adjust_last_item_chooser_t__IEBA_J_K_Z(const chooser_t *__hidden this, size_t n);
ssize_t __cdecl ?adjust_libfunc_ea_processor_t__SA_JAEBVidasgn_t__AEBUlibfunc_t__PEA_K_Z(const idasgn_t *sig, const libfunc_t *libfun, ea_t *ea);
ssize_t __cdecl ?adjust_refinfo_processor_t__SA_JPEAUrefinfo_t___KHAEBUfixup_data_t___Z(refinfo_t *ri, ea_t ea, int n, const fixup_data_t *fd);
bool __cdecl ?advance_argloc_t__QEAA_NH_Z(argloc_t *__hidden this, int delta);
bool __cdecl ?advance_memory_deserializer_t__QEAA_N_K_Z(memory_deserializer_t *__hidden this, size_t s);
void __cdecl ?align_reg_high_argloc_t__QEAAX_K0_Z(argloc_t *__hidden this, size_t size, size_t _slotsize);
void __cdecl ?align_stkoff_high_argloc_t__QEAAX_K0_Z(argloc_t *__hidden this, size_t size, size_t _slotsize);
bool __cdecl ?all_bytes_defined_compiled_binpat_t__QEBA_NXZ(const compiled_binpat_t *__hidden this);
char *__cdecl ?allocate_?$allocator_D_std__QEAAPEAD_K_Z(std::allocator<char> *__hidden this, const size_t _Count);
char *__cdecl ?allocate_?$allocator_D_std__QEAAPEAD_KPEBX_Z(std::allocator<char> *__hidden this, const size_t _Count, const void *);
int *__cdecl ?allocate_?$allocator_H_std__QEAAPEAH_K_Z(std::allocator<int> *__hidden this, const size_t _Count);
int *__cdecl ?allocate_?$allocator_H_std__QEAAPEAH_KPEBX_Z(std::allocator<int> *__hidden this, const size_t _Count, const void *);
std::_Tree_node<int, void *> *__cdecl ?allocate_?$allocator_U?$_Tree_node_HPEAX_std___std__QEAAPEAU?$_Tree_node_HPEAX_2__K_Z(std::allocator<std::_Tree_node<int, void *>> *__hidden this, const size_t _Count);
std::_Tree_node<int, void *> *__cdecl ?allocate_?$allocator_U?$_Tree_node_HPEAX_std___std__QEAAPEAU?$_Tree_node_HPEAX_2__KPEBX_Z(std::allocator<std::_Tree_node<int, void *>> *__hidden this, const size_t _Count, const void *);
std::_Tree_node<std::pair<const int, int>, void *> *__cdecl ?allocate_?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2__K_Z(std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__hidden this, const size_t _Count);
std::_Tree_node<std::pair<const int, int>, void *> *__cdecl ?allocate_?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2__KPEBX_Z(std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__hidden this, const size_t _Count, const void *);
std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *__cdecl ?allocate_?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2__K_Z(std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__hidden this, const size_t _Count);
std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *__cdecl ?allocate_?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2__KPEBX_Z(std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__hidden this, const size_t _Count, const void *);
std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *__cdecl ?allocate_?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2__K_Z(std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__hidden this, const size_t _Count);
std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *__cdecl ?allocate_?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2__KPEBX_Z(std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__hidden this, const size_t _Count, const void *);
std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *__cdecl ?allocate_?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2__K_Z(std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__hidden this, const size_t _Count);
std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *__cdecl ?allocate_?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__QEAAPEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2__KPEBX_Z(std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__hidden this, const size_t _Count, const void *);
std::pair<const int, int> *__cdecl ?allocate_?$allocator_U?$pair_$$CBHH_std___std__QEAAPEAU?$pair_$$CBHH_2__K_Z(std::allocator<std::pair<const int, int>> *__hidden this, const size_t _Count);
std::pair<const int, int> *__cdecl ?allocate_?$allocator_U?$pair_$$CBHH_std___std__QEAAPEAU?$pair_$$CBHH_2__KPEBX_Z(std::allocator<std::pair<const int, int>> *__hidden this, const size_t _Count, const void *);
std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ?allocate_?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEAAPEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____2__K_Z(std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this, const size_t _Count);
std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ?allocate_?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEAAPEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____2__KPEBX_Z(std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this, const size_t _Count, const void *);
std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ?allocate_?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEAAPEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____2__K_Z(std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this, const size_t _Count);
std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ?allocate_?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEAAPEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____2__KPEBX_Z(std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this, const size_t _Count, const void *);
std::pair<const unsigned long long, unsigned long long> *__cdecl ?allocate_?$allocator_U?$pair_$$CB_K_K_std___std__QEAAPEAU?$pair_$$CB_K_K_2__K_Z(std::allocator<std::pair<const unsigned long long, unsigned long long>> *__hidden this, const size_t _Count);
std::pair<const unsigned long long, unsigned long long> *__cdecl ?allocate_?$allocator_U?$pair_$$CB_K_K_std___std__QEAAPEAU?$pair_$$CB_K_K_2__KPEBX_Z(std::allocator<std::pair<const unsigned long long, unsigned long long>> *__hidden this, const size_t _Count, const void *);
__int16 *__cdecl ?allocate_?$allocator__S_std__QEAAPEA_S_K_Z(std::allocator<char16_t> *__hidden this, const size_t _Count);
__int16 *__cdecl ?allocate_?$allocator__S_std__QEAAPEA_S_KPEBX_Z(std::allocator<char16_t> *__hidden this, const size_t _Count, const void *);
__int32 *__cdecl ?allocate_?$allocator__U_std__QEAAPEA_U_K_Z(std::allocator<char32_t> *__hidden this, const size_t _Count);
__int32 *__cdecl ?allocate_?$allocator__U_std__QEAAPEA_U_KPEBX_Z(std::allocator<char32_t> *__hidden this, const size_t _Count, const void *);
__int16 *__cdecl ?allocate_?$allocator__W_std__QEAAPEA_W_K_Z(std::allocator<wchar_t> *__hidden this, const size_t _Count);
__int16 *__cdecl ?allocate_?$allocator__W_std__QEAAPEA_W_KPEBX_Z(std::allocator<wchar_t> *__hidden this, const size_t _Count, const void *);
void __cdecl ?altadjust2_netnode__QEAAX_K00AEAUaltadjust_visitor_t___Z(netnode *__hidden this, nodeidx_t from, nodeidx_t to, nodeidx_t size, altadjust_visitor_t *av);
void __cdecl ?altadjust_netnode__QEAAX_K00P6A_N0_Z_Z(netnode *__hidden this, nodeidx_t from, nodeidx_t to, nodeidx_t size, bool (__cdecl *should_skip)(nodeidx_t));
bool __cdecl ?altdel_netnode__QEAA_NXZ(netnode *__hidden this);
bool __cdecl ?altdel_netnode__QEAA_N_KE_Z(netnode *__hidden this, nodeidx_t alt, uchar tag);
bool __cdecl ?altdel_all_netnode__QEAA_NE_Z(netnode *__hidden this, uchar tag);
bool __cdecl ?altdel_ea_netnode__QEAA_N_KE_Z(netnode *__hidden this, ea_t ea, uchar tag);
bool __cdecl ?altdel_idx8_netnode__QEAA_NEE_Z(netnode *__hidden this, uchar alt, uchar tag);
nodeidx_t __cdecl ?altfirst_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?altfirst_idx8_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?altlast_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?altlast_idx8_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?altnext_netnode__QEBA_K_KE_Z(const netnode *__hidden this, nodeidx_t cur, uchar tag);
nodeidx_t __cdecl ?altnext_idx8_netnode__QEBA_KEE_Z(const netnode *__hidden this, uchar cur, uchar tag);
nodeidx_t __cdecl ?altprev_netnode__QEBA_K_KE_Z(const netnode *__hidden this, nodeidx_t cur, uchar tag);
nodeidx_t __cdecl ?altprev_idx8_netnode__QEBA_KEE_Z(const netnode *__hidden this, uchar cur, uchar tag);
bool __cdecl ?altset_netnode__QEAA_N_K0E_Z(netnode *__hidden this, nodeidx_t alt, nodeidx_t value, uchar tag);
bool __cdecl ?altset_ea_netnode__QEAA_N_K0E_Z(netnode *__hidden this, ea_t ea, nodeidx_t value, uchar tag);
bool __cdecl ?altset_idx8_netnode__QEAA_NE_KE_Z(netnode *__hidden this, uchar alt, nodeidx_t val, uchar tag);
size_t __cdecl ?altshift_netnode__QEAA_K_K00E_Z(netnode *__hidden this, nodeidx_t from, nodeidx_t to, nodeidx_t size, uchar tag);
nodeidx_t __cdecl ?altval_netnode__QEBA_K_KE_Z(const netnode *__hidden this, nodeidx_t alt, uchar tag);
nodeidx_t __cdecl ?altval_ea_netnode__QEBA_K_KE_Z(const netnode *__hidden this, ea_t ea, uchar tag);
nodeidx_t __cdecl ?altval_idx8_netnode__QEBA_KEE_Z(const netnode *__hidden this, uchar alt, uchar tag);
ssize_t __cdecl ?ana_insn_processor_t__SA_JPEAVinsn_t___Z(insn_t *out);
ssize_t __cdecl ?analyze_prolog_processor_t__SA_J_K_Z(ea_t fct_ea);
bool __cdecl ?analyzed_sp_func_t__QEBA_NXZ(const func_t *__hidden this);
ea_t __cdecl ?appcall_debugger_t__QEAA_K_KHPEBUfunc_type_data_t__HPEBUregobjs_t__PEAUrelobj_t__PEAU3_PEAV?$_qstring_D__PEAUdebug_event_t__H_Z(debugger_t *__hidden this, ea_t func_ea, thid_t tid, const func_type_data_t *fti, int nargs, const regobjs_t *regargs, relobj_t *stkargs, regobjs_t *retregs, qstring *errbuf, debug_event_t *event, int options);
_qstring<char> *__cdecl ?append_?$_qstring_D__QEAAAEAV1_AEBV1__Z(_qstring<char> *__hidden this, const _qstring<char> *qstr);
_qstring<char> *__cdecl ?append_?$_qstring_D__QEAAAEAV1_D_Z(_qstring<char> *__hidden this, char c);
_qstring<char> *__cdecl ?append_?$_qstring_D__QEAAAEAV1_PEBD_Z(_qstring<char> *__hidden this, char *str);
_qstring<char> *__cdecl ?append_?$_qstring_D__QEAAAEAV1_PEBD_K_Z(_qstring<char> *__hidden this, char *str, size_t addlen);
_qstring<unsigned char> *__cdecl ?append_?$_qstring_E__QEAAAEAV1_AEBV1__Z(_qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *qstr);
_qstring<unsigned char> *__cdecl ?append_?$_qstring_E__QEAAAEAV1_E_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 c);
_qstring<unsigned char> *__cdecl ?append_?$_qstring_E__QEAAAEAV1_PEBE_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 *str);
_qstring<unsigned char> *__cdecl ?append_?$_qstring_E__QEAAAEAV1_PEBE_K_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 *str, size_t addlen);
_qstring<wchar_t> *__cdecl ?append_?$_qstring__W__QEAAAEAV1_AEBV1__Z(_qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *qstr);
_qstring<wchar_t> *__cdecl ?append_?$_qstring__W__QEAAAEAV1_PEB_W_Z(_qstring<wchar_t> *__hidden this, __int16 *str);
_qstring<wchar_t> *__cdecl ?append_?$_qstring__W__QEAAAEAV1_PEB_W_K_Z(_qstring<wchar_t> *__hidden this, __int16 *str, size_t addlen);
_qstring<wchar_t> *__cdecl ?append_?$_qstring__W__QEAAAEAV1__W_Z(_qstring<wchar_t> *__hidden this, __int16 c);
std::basic_string<char> *__cdecl ?append_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_AEBV12__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ?append_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_AEBV12__K_K_Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Roff, std::basic_string<char>::size_type _Count);
std::basic_string<char> *__cdecl ?append_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_QEBD_Z(std::basic_string<char> *__hidden this, char *const _Ptr);
std::basic_string<char> *__cdecl ?append_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_QEBD_K_Z(std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Count);
std::basic_string<char> *__cdecl ?append_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_V?$initializer_list_D_2__Z(std::basic_string<char> *__hidden this, std::initializer_list<char> _Ilist);
std::basic_string<char> *__cdecl ?append_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__KD_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Count, char _Ch);
std::basic_string<char16_t> *__cdecl ?append_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_AEBV12__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ?append_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_AEBV12__K_K_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Roff, std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?append_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_QEB_S_Z(std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr);
std::basic_string<char16_t> *__cdecl ?append_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_QEB_S_K_Z(std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?append_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_V?$initializer_list__S_2__Z(std::basic_string<char16_t> *__hidden this, std::initializer_list<char16_t> _Ilist);
std::basic_string<char16_t> *__cdecl ?append_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__K_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Count, __int16 _Ch);
std::basic_string<char32_t> *__cdecl ?append_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_AEBV12__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ?append_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_AEBV12__K_K_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Roff, std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?append_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_QEB_U_Z(std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr);
std::basic_string<char32_t> *__cdecl ?append_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_QEB_U_K_Z(std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?append_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_V?$initializer_list__U_2__Z(std::basic_string<char32_t> *__hidden this, std::initializer_list<char32_t> _Ilist);
std::basic_string<char32_t> *__cdecl ?append_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__K_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Count, __int32 _Ch);
std::basic_string<wchar_t> *__cdecl ?append_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_AEBV12__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ?append_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_AEBV12__K_K_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Roff, std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?append_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_QEB_W_Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr);
std::basic_string<wchar_t> *__cdecl ?append_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_QEB_W_K_Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?append_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_V?$initializer_list__W_2__Z(std::basic_string<wchar_t> *__hidden this, std::initializer_list<wchar_t> _Ilist);
std::basic_string<wchar_t> *__cdecl ?append_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__K_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Count, __int16 _Ch);
bytevec_t *__cdecl ?append_bytevec_t__QEAAAEAV1_PEBX_K_Z(bytevec_t *__hidden this, const void *buf, size_t sz);
bool __cdecl ?append_char_valstr_t__AEAA_NDH_Z(valstr_t *__hidden this, char c, int max_length);
bool __cdecl ?append_covered_tinfo_t__QEBA_NPEAVrangeset_t___K_Z(const tinfo_t *__hidden this, rangeset_t *out, uint64 offset);
void __cdecl ?append_to_flowchart_qflow_chart_t__QEAAX_K0_Z(qflow_chart_t *__hidden this, ea_t ea1, ea_t ea2);
void __cdecl ?append_user_prefix_outctx_base_t__MEAAXPEBDH_Z(outctx_base_t *__hidden this, const char *, int);
const char *__cdecl ?apply_cfgopt_t__QEBAPEBDHPEBXPEAX_Z(const cfgopt_t *__hidden this, int vtype, const void *vdata, void *obj);
const char *__cdecl ?apply_cfgopt_t__QEBAPEBDPEAVlexer_t__HPEBXPEAX_Z(const cfgopt_t *__hidden this, lexer_t *lx, int vtype, const void *vdata, void *obj);
void __cdecl ?apply_cliopts_t__QEAAXHQEAPEBDPEAX_Z(cliopts_t *__hidden this, int argc, const char *argv[], void *ud);
bool __cdecl ?apply_mask_bitrange_t__QEAA_NAEBV1__Z(bitrange_t *__hidden this, const bitrange_t *subrange);
bool __cdecl ?apply_module_info_srcinfo_provider_t__UEAA_NPEBD_Z(srcinfo_provider_t *__hidden this, const char *);
int __cdecl ?apply_to_tinfo_visitor_t__QEAAHAEBVtinfo_t__PEAUtype_mods_t__PEBD2_Z(tinfo_visitor_t *__hidden this, const tinfo_t *tif, type_mods_t *out, const char *name, const char *cmt);
ssize_t ?arch_changed_processor_t__SA_JXZ(void);
int __cdecl ?area_rect_t__QEBAHXZ(const rect_t *__hidden this);
ssize_t __cdecl ?arg_addrs_ready_processor_t__SA_J_KHAEBVtinfo_t__PEA_K_Z(ea_t caller, int n, const tinfo_t *tif, ea_t *addrs);
jarr_t *__cdecl ?arr_jvalue_t__QEAAAEAUjarr_t__XZ(jvalue_t *__hidden this);
const jarr_t *__cdecl ?arr_jvalue_t__QEBAAEBUjarr_t__XZ(const jvalue_t *__hidden this);
bool __cdecl ?ask_item_attrs_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
ssize_t __cdecl ?asm_installed_processor_t__SA_JH_Z(int asmnum);
ssize_t __cdecl ?assemble_processor_t__SA_JPEAE_K11_NPEBD_Z(uchar *_bin, ea_t ea, ea_t cs, ea_t ip, bool _use32, const char *line);
char *__cdecl ?assign_?$_Char_traits_DH_std__SAPEADQEAD_KD_Z(char *const _First, size_t _Count, char _Ch);
void __cdecl ?assign_?$_Char_traits_DH_std__SAXAEADAEBD_Z(char *_Left, char *_Right);
unsigned __int16 *__cdecl ?assign_?$_Char_traits_GG_std__SAPEAGQEAG_KG_Z(unsigned __int16 *const _First, size_t _Count, unsigned __int16 _Ch);
void __cdecl ?assign_?$_Char_traits_GG_std__SAXAEAGAEBG_Z(unsigned __int16 *_Left, unsigned __int16 *_Right);
__int16 *__cdecl ?assign_?$_Char_traits__SG_std__SAPEA_SQEA_S_K_S_Z(__int16 *const _First, size_t _Count, __int16 _Ch);
void __cdecl ?assign_?$_Char_traits__SG_std__SAXAEA_SAEB_S_Z(__int16 *_Left, __int16 *_Right);
__int32 *__cdecl ?assign_?$_Char_traits__UI_std__SAPEA_UQEA_U_K_U_Z(__int32 *const _First, size_t _Count, __int32 _Ch);
void __cdecl ?assign_?$_Char_traits__UI_std__SAXAEA_UAEB_U_Z(__int32 *_Left, __int32 *_Right);
__int16 *__cdecl ?assign_?$_Char_traits__WG_std__SAPEA_WQEA_W_K_W_Z(__int16 *const _First, size_t _Count, __int16 _Ch);
void __cdecl ?assign_?$_Char_traits__WG_std__SAXAEA_WAEB_W_Z(__int16 *_Left, __int16 *_Right);
char *__cdecl ?assign_?$_Narrow_char_traits_DH_std__SAPEADQEAD_KD_Z(char *const _First, size_t _Count, char _Ch);
void __cdecl ?assign_?$_Narrow_char_traits_DH_std__SAXAEADAEBD_Z(char *_Left, char *_Right);
unsigned __int16 *__cdecl ?assign_?$_WChar_traits_G_std__SAPEAGQEAG_KG_Z(unsigned __int16 *const _First, size_t _Count, unsigned __int16 _Ch);
void __cdecl ?assign_?$_WChar_traits_G_std__SAXAEAGAEBG_Z(unsigned __int16 *_Left, unsigned __int16 *_Right);
__int16 *__cdecl ?assign_?$_WChar_traits__S_std__SAPEA_SQEA_S_K_S_Z(__int16 *const _First, size_t _Count, __int16 _Ch);
void __cdecl ?assign_?$_WChar_traits__S_std__SAXAEA_SAEB_S_Z(__int16 *_Left, __int16 *_Right);
__int16 *__cdecl ?assign_?$_WChar_traits__W_std__SAPEA_WQEA_W_K_W_Z(__int16 *const _First, size_t _Count, __int16 _Ch);
void __cdecl ?assign_?$_WChar_traits__W_std__SAXAEA_WAEB_W_Z(__int16 *_Left, __int16 *_Right);
void __cdecl ?assign_?$_qstring_D__AEAAXPEBD_K_Z(_qstring<char> *__hidden this, char *ptr, size_t len);
void __cdecl ?assign_?$_qstring_E__AEAAXPEBE_K_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 *ptr, size_t len);
void __cdecl ?assign_?$_qstring__W__AEAAXPEB_W_K_Z(_qstring<wchar_t> *__hidden this, __int16 *ptr, size_t len);
std::basic_string<char> *__cdecl ?assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_$$QEAV12__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ?assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_AEBV12__Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ?assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_AEBV12__K_K_Z(std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Roff, std::basic_string<char>::size_type _Count);
std::basic_string<char> *__cdecl ?assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_QEBD_Z(std::basic_string<char> *__hidden this, char *const _Ptr);
std::basic_string<char> *__cdecl ?assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_QEBD_K_Z(std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Count);
std::basic_string<char> *__cdecl ?assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_V?$initializer_list_D_2__Z(std::basic_string<char> *__hidden this, std::initializer_list<char> _Ilist);
std::basic_string<char> *__cdecl ?assign_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__KD_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Count, char _Ch);
std::basic_string<char16_t> *__cdecl ?assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_$$QEAV12__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ?assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_AEBV12__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ?assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_AEBV12__K_K_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Roff, std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_QEB_S_Z(std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr);
std::basic_string<char16_t> *__cdecl ?assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_QEB_S_K_Z(std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_V?$initializer_list__S_2__Z(std::basic_string<char16_t> *__hidden this, std::initializer_list<char16_t> _Ilist);
std::basic_string<char16_t> *__cdecl ?assign_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__K_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Count, __int16 _Ch);
std::basic_string<char32_t> *__cdecl ?assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_$$QEAV12__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ?assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_AEBV12__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ?assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_AEBV12__K_K_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Roff, std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_QEB_U_Z(std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr);
std::basic_string<char32_t> *__cdecl ?assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_QEB_U_K_Z(std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_V?$initializer_list__U_2__Z(std::basic_string<char32_t> *__hidden this, std::initializer_list<char32_t> _Ilist);
std::basic_string<char32_t> *__cdecl ?assign_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__K_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Count, __int32 _Ch);
std::basic_string<wchar_t> *__cdecl ?assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_$$QEAV12__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ?assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_AEBV12__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ?assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_AEBV12__K_K_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Roff, std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_QEB_W_Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr);
std::basic_string<wchar_t> *__cdecl ?assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_QEB_W_K_Z(std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_V?$initializer_list__W_2__Z(std::basic_string<wchar_t> *__hidden this, std::initializer_list<wchar_t> _Ilist);
std::basic_string<wchar_t> *__cdecl ?assign_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__K_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Count, __int16 _Ch);
qvector<char> *__cdecl ?assign_?$qvector_D__AEAAAEAV1_AEBV1__Z(qvector<char> *__hidden this, const qvector<char> *x);
qvector<unsigned char> *__cdecl ?assign_?$qvector_E__AEAAAEAV1_AEBV1__Z(qvector<unsigned char> *__hidden this, const qvector<unsigned char> *x);
qvector<int> *__cdecl ?assign_?$qvector_H__AEAAAEAV1_AEBV1__Z(qvector<int> *__hidden this, const qvector<int> *x);
qvector<unsigned int> *__cdecl ?assign_?$qvector_I__AEAAAEAV1_AEBV1__Z(qvector<unsigned int> *__hidden this, const qvector<unsigned int> *x);
qvector<long long (*)(syntax_highlight_style *, const char *)> *__cdecl ?assign_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__AEAAAEAV1_AEBV1__Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, const qvector<long long (*)(syntax_highlight_style *, const char *)> *x);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__cdecl ?assign_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__AEAAAEAV1_AEBV1__Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *x);
qvector<bpt_t *> *__cdecl ?assign_?$qvector_PEAUbpt_t____AEAAAEAV1_AEBV1__Z(qvector<bpt_t *> *__hidden this, const qvector<bpt_t *> *x);
qvector<extlang_t *> *__cdecl ?assign_?$qvector_PEAUextlang_t____AEAAAEAV1_AEBV1__Z(qvector<extlang_t *> *__hidden this, const qvector<extlang_t *> *x);
qvector<line_rendering_output_entry_t *> *__cdecl ?assign_?$qvector_PEAUline_rendering_output_entry_t____AEAAAEAV1_AEBV1__Z(qvector<line_rendering_output_entry_t *> *__hidden this, const qvector<line_rendering_output_entry_t *> *x);
qvector<snapshot_t *> *__cdecl ?assign_?$qvector_PEAVsnapshot_t____AEAAAEAV1_AEBV1__Z(qvector<snapshot_t *> *__hidden this, const qvector<snapshot_t *> *x);
qvector<const char *> *__cdecl ?assign_?$qvector_PEBD__AEAAAEAV1_AEBV1__Z(qvector<const char *> *__hidden this, const qvector<const char *> *x);
qvector<const bpt_t *> *__cdecl ?assign_?$qvector_PEBUbpt_t____AEAAAEAV1_AEBV1__Z(qvector<const bpt_t *> *__hidden this, const qvector<const bpt_t *> *x);
qvector<const rangeset_t *> *__cdecl ?assign_?$qvector_PEBVrangeset_t____AEAAAEAV1_AEBV1__Z(qvector<const rangeset_t *> *__hidden this, const qvector<const rangeset_t *> *x);
qvector<const twinline_t *> *__cdecl ?assign_?$qvector_PEBVtwinline_t____AEAAAEAV1_AEBV1__Z(qvector<const twinline_t *> *__hidden this, const qvector<const twinline_t *> *x);
qvector<argpart_t> *__cdecl ?assign_?$qvector_Uargpart_t____AEAAAEAV1_AEBV1__Z(qvector<argpart_t> *__hidden this, const qvector<argpart_t> *x);
qvector<bpt_t> *__cdecl ?assign_?$qvector_Ubpt_t____AEAAAEAV1_AEBV1__Z(qvector<bpt_t> *__hidden this, const qvector<bpt_t> *x);
qvector<bptaddrs_t> *__cdecl ?assign_?$qvector_Ubptaddrs_t____AEAAAEAV1_AEBV1__Z(qvector<bptaddrs_t> *__hidden this, const qvector<bptaddrs_t> *x);
qvector<call_stack_info_t> *__cdecl ?assign_?$qvector_Ucall_stack_info_t____AEAAAEAV1_AEBV1__Z(qvector<call_stack_info_t> *__hidden this, const qvector<call_stack_info_t> *x);
qvector<catch_t> *__cdecl ?assign_?$qvector_Ucatch_t____AEAAAEAV1_AEBV1__Z(qvector<catch_t> *__hidden this, const qvector<catch_t> *x);
qvector<cfgopt_set_t> *__cdecl ?assign_?$qvector_Ucfgopt_set_t____AEAAAEAV1_AEBV1__Z(qvector<cfgopt_set_t> *__hidden this, const qvector<cfgopt_set_t> *x);
qvector<channel_redir_t> *__cdecl ?assign_?$qvector_Uchannel_redir_t____AEAAAEAV1_AEBV1__Z(qvector<channel_redir_t> *__hidden this, const qvector<channel_redir_t> *x);
qvector<cliopt_t> *__cdecl ?assign_?$qvector_Ucliopt_t____AEAAAEAV1_AEBV1__Z(qvector<cliopt_t> *__hidden this, const qvector<cliopt_t> *x);
qvector<compiled_binpat_t> *__cdecl ?assign_?$qvector_Ucompiled_binpat_t____AEAAAEAV1_AEBV1__Z(qvector<compiled_binpat_t> *__hidden this, const qvector<compiled_binpat_t> *x);
qvector<debug_event_t> *__cdecl ?assign_?$qvector_Udebug_event_t____AEAAAEAV1_AEBV1__Z(qvector<debug_event_t> *__hidden this, const qvector<debug_event_t> *x);
qvector<direntry_t> *__cdecl ?assign_?$qvector_Udirentry_t____AEAAAEAV1_AEBV1__Z(qvector<direntry_t> *__hidden this, const qvector<direntry_t> *x);
qvector<dirtree_cursor_t> *__cdecl ?assign_?$qvector_Udirtree_cursor_t____AEAAAEAV1_AEBV1__Z(qvector<dirtree_cursor_t> *__hidden this, const qvector<dirtree_cursor_t> *x);
qvector<ea_name_t> *__cdecl ?assign_?$qvector_Uea_name_t____AEAAAEAV1_AEBV1__Z(qvector<ea_name_t> *__hidden this, const qvector<ea_name_t> *x);
qvector<edge_t> *__cdecl ?assign_?$qvector_Uedge_t____AEAAAEAV1_AEBV1__Z(qvector<edge_t> *__hidden this, const qvector<edge_t> *x);
qvector<enum_member_t> *__cdecl ?assign_?$qvector_Uenum_member_t____AEAAAEAV1_AEBV1__Z(qvector<enum_member_t> *__hidden this, const qvector<enum_member_t> *x);
qvector<exception_info_t> *__cdecl ?assign_?$qvector_Uexception_info_t____AEAAAEAV1_AEBV1__Z(qvector<exception_info_t> *__hidden this, const qvector<exception_info_t> *x);
qvector<fixup_info_t> *__cdecl ?assign_?$qvector_Ufixup_info_t____AEAAAEAV1_AEBV1__Z(qvector<fixup_info_t> *__hidden this, const qvector<fixup_info_t> *x);
qvector<funcarg_t> *__cdecl ?assign_?$qvector_Ufuncarg_t____AEAAAEAV1_AEBV1__Z(qvector<funcarg_t> *__hidden this, const qvector<funcarg_t> *x);
qvector<group_crinfo_t> *__cdecl ?assign_?$qvector_Ugroup_crinfo_t____AEAAAEAV1_AEBV1__Z(qvector<group_crinfo_t> *__hidden this, const qvector<group_crinfo_t> *x);
qvector<idc_global_t> *__cdecl ?assign_?$qvector_Uidc_global_t____AEAAAEAV1_AEBV1__Z(qvector<idc_global_t> *__hidden this, const qvector<idc_global_t> *x);
qvector<idp_desc_t> *__cdecl ?assign_?$qvector_Uidp_desc_t____AEAAAEAV1_AEBV1__Z(qvector<idp_desc_t> *__hidden this, const qvector<idp_desc_t> *x);
qvector<idp_name_t> *__cdecl ?assign_?$qvector_Uidp_name_t____AEAAAEAV1_AEBV1__Z(qvector<idp_name_t> *__hidden this, const qvector<idp_name_t> *x);
qvector<ioport_bit_t> *__cdecl ?assign_?$qvector_Uioport_bit_t____AEAAAEAV1_AEBV1__Z(qvector<ioport_bit_t> *__hidden this, const qvector<ioport_bit_t> *x);
qvector<ioport_t> *__cdecl ?assign_?$qvector_Uioport_t____AEAAAEAV1_AEBV1__Z(qvector<ioport_t> *__hidden this, const qvector<ioport_t> *x);
qvector<jvalue_t> *__cdecl ?assign_?$qvector_Ujvalue_t____AEAAAEAV1_AEBV1__Z(qvector<jvalue_t> *__hidden this, const qvector<jvalue_t> *x);
qvector<ida_syntax_highlighter_t::keywords_style_t> *__cdecl ?assign_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____AEAAAEAV1_AEBV1__Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, const qvector<ida_syntax_highlighter_t::keywords_style_t> *x);
qvector<kvp_t> *__cdecl ?assign_?$qvector_Ukvp_t____AEAAAEAV1_AEBV1__Z(qvector<kvp_t> *__hidden this, const qvector<kvp_t> *x);
qvector<lochist_entry_t> *__cdecl ?assign_?$qvector_Ulochist_entry_t____AEAAAEAV1_AEBV1__Z(qvector<lochist_entry_t> *__hidden this, const qvector<lochist_entry_t> *x);
qvector<lowcnd_t> *__cdecl ?assign_?$qvector_Ulowcnd_t____AEAAAEAV1_AEBV1__Z(qvector<lowcnd_t> *__hidden this, const qvector<lowcnd_t> *x);
qvector<memory_info_t> *__cdecl ?assign_?$qvector_Umemory_info_t____AEAAAEAV1_AEBV1__Z(qvector<memory_info_t> *__hidden this, const qvector<memory_info_t> *x);
qvector<memreg_info_t> *__cdecl ?assign_?$qvector_Umemreg_info_t____AEAAAEAV1_AEBV1__Z(qvector<memreg_info_t> *__hidden this, const qvector<memreg_info_t> *x);
qvector<modinfo_t> *__cdecl ?assign_?$qvector_Umodinfo_t____AEAAAEAV1_AEBV1__Z(qvector<modinfo_t> *__hidden this, const qvector<modinfo_t> *x);
qvector<movbpt_info_t> *__cdecl ?assign_?$qvector_Umovbpt_info_t____AEAAAEAV1_AEBV1__Z(qvector<movbpt_info_t> *__hidden this, const qvector<movbpt_info_t> *x);
qvector<ida_syntax_highlighter_t::multicmt_t> *__cdecl ?assign_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____AEAAAEAV1_AEBV1__Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, const qvector<ida_syntax_highlighter_t::multicmt_t> *x);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__cdecl ?assign_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____AEAAAEAV1_AEBV1__Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *x);
qvector<point_t> *__cdecl ?assign_?$qvector_Upoint_t____AEAAAEAV1_AEBV1__Z(qvector<point_t> *__hidden this, const qvector<point_t> *x);
qvector<process_info_t> *__cdecl ?assign_?$qvector_Uprocess_info_t____AEAAAEAV1_AEBV1__Z(qvector<process_info_t> *__hidden this, const qvector<process_info_t> *x);
qvector<qbasic_block_t> *__cdecl ?assign_?$qvector_Uqbasic_block_t____AEAAAEAV1_AEBV1__Z(qvector<qbasic_block_t> *__hidden this, const qvector<qbasic_block_t> *x);
qvector<range_t> *__cdecl ?assign_?$qvector_Urange_t____AEAAAEAV1_AEBV1__Z(qvector<range_t> *__hidden this, const qvector<range_t> *x);
qvector<rect_t> *__cdecl ?assign_?$qvector_Urect_t____AEAAAEAV1_AEBV1__Z(qvector<rect_t> *__hidden this, const qvector<rect_t> *x);
qvector<refinfo_desc_t> *__cdecl ?assign_?$qvector_Urefinfo_desc_t____AEAAAEAV1_AEBV1__Z(qvector<refinfo_desc_t> *__hidden this, const qvector<refinfo_desc_t> *x);
qvector<reg_access_t> *__cdecl ?assign_?$qvector_Ureg_access_t____AEAAAEAV1_AEBV1__Z(qvector<reg_access_t> *__hidden this, const qvector<reg_access_t> *x);
qvector<reg_info_t> *__cdecl ?assign_?$qvector_Ureg_info_t____AEAAAEAV1_AEBV1__Z(qvector<reg_info_t> *__hidden this, const qvector<reg_info_t> *x);
qvector<register_info_t> *__cdecl ?assign_?$qvector_Uregister_info_t____AEAAAEAV1_AEBV1__Z(qvector<register_info_t> *__hidden this, const qvector<register_info_t> *x);
qvector<regobj_t> *__cdecl ?assign_?$qvector_Uregobj_t____AEAAAEAV1_AEBV1__Z(qvector<regobj_t> *__hidden this, const qvector<regobj_t> *x);
qvector<regval_t> *__cdecl ?assign_?$qvector_Uregval_t____AEAAAEAV1_AEBV1__Z(qvector<regval_t> *__hidden this, const qvector<regval_t> *x);
qvector<row_info_t> *__cdecl ?assign_?$qvector_Urow_info_t____AEAAAEAV1_AEBV1__Z(qvector<row_info_t> *__hidden this, const qvector<row_info_t> *x);
qvector<scattered_segm_t> *__cdecl ?assign_?$qvector_Uscattered_segm_t____AEAAAEAV1_AEBV1__Z(qvector<scattered_segm_t> *__hidden this, const qvector<scattered_segm_t> *x);
qvector<segm_move_info_t> *__cdecl ?assign_?$qvector_Usegm_move_info_t____AEAAAEAV1_AEBV1__Z(qvector<segm_move_info_t> *__hidden this, const qvector<segm_move_info_t> *x);
qvector<selection_item_t> *__cdecl ?assign_?$qvector_Uselection_item_t____AEAAAEAV1_AEBV1__Z(qvector<selection_item_t> *__hidden this, const qvector<selection_item_t> *x);
qvector<simd_info_t> *__cdecl ?assign_?$qvector_Usimd_info_t____AEAAAEAV1_AEBV1__Z(qvector<simd_info_t> *__hidden this, const qvector<simd_info_t> *x);
qvector<simpleline_t> *__cdecl ?assign_?$qvector_Usimpleline_t____AEAAAEAV1_AEBV1__Z(qvector<simpleline_t> *__hidden this, const qvector<simpleline_t> *x);
qvector<stkpnt_t> *__cdecl ?assign_?$qvector_Ustkpnt_t____AEAAAEAV1_AEBV1__Z(qvector<stkpnt_t> *__hidden this, const qvector<stkpnt_t> *x);
qvector<tev_info_reg_t> *__cdecl ?assign_?$qvector_Utev_info_reg_t____AEAAAEAV1_AEBV1__Z(qvector<tev_info_reg_t> *__hidden this, const qvector<tev_info_reg_t> *x);
qvector<tev_info_t> *__cdecl ?assign_?$qvector_Utev_info_t____AEAAAEAV1_AEBV1__Z(qvector<tev_info_t> *__hidden this, const qvector<tev_info_t> *x);
qvector<tev_reg_value_t> *__cdecl ?assign_?$qvector_Utev_reg_value_t____AEAAAEAV1_AEBV1__Z(qvector<tev_reg_value_t> *__hidden this, const qvector<tev_reg_value_t> *x);
qvector<thread_name_t> *__cdecl ?assign_?$qvector_Uthread_name_t____AEAAAEAV1_AEBV1__Z(qvector<thread_name_t> *__hidden this, const qvector<thread_name_t> *x);
qvector<token_t> *__cdecl ?assign_?$qvector_Utoken_t____AEAAAEAV1_AEBV1__Z(qvector<token_t> *__hidden this, const qvector<token_t> *x);
qvector<type_attr_t> *__cdecl ?assign_?$qvector_Utype_attr_t____AEAAAEAV1_AEBV1__Z(qvector<type_attr_t> *__hidden this, const qvector<type_attr_t> *x);
qvector<udt_member_t> *__cdecl ?assign_?$qvector_Uudt_member_t____AEAAAEAV1_AEBV1__Z(qvector<udt_member_t> *__hidden this, const qvector<udt_member_t> *x);
qvector<update_bpt_info_t> *__cdecl ?assign_?$qvector_Uupdate_bpt_info_t____AEAAAEAV1_AEBV1__Z(qvector<update_bpt_info_t> *__hidden this, const qvector<update_bpt_info_t> *x);
qvector<xreflist_entry_t> *__cdecl ?assign_?$qvector_Uxreflist_entry_t____AEAAAEAV1_AEBV1__Z(qvector<xreflist_entry_t> *__hidden this, const qvector<xreflist_entry_t> *x);
qvector<_qstring<char>> *__cdecl ?assign_?$qvector_V?$_qstring_D____AEAAAEAV1_AEBV1__Z(qvector<_qstring<char>> *__hidden this, const qvector<_qstring<char>> *x);
qvector<_qstring<unsigned char>> *__cdecl ?assign_?$qvector_V?$_qstring_E____AEAAAEAV1_AEBV1__Z(qvector<_qstring<unsigned char>> *__hidden this, const qvector<_qstring<unsigned char>> *x);
qvector<_qstring<wchar_t>> *__cdecl ?assign_?$qvector_V?$_qstring__W____AEAAAEAV1_AEBV1__Z(qvector<_qstring<wchar_t>> *__hidden this, const qvector<_qstring<wchar_t>> *x);
qvector<qrefcnt_t<source_item_t>> *__cdecl ?assign_?$qvector_V?$qrefcnt_t_Vsource_item_t______AEAAAEAV1_AEBV1__Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, const qvector<qrefcnt_t<source_item_t>> *x);
qvector<qvector<int>> *__cdecl ?assign_?$qvector_V?$qvector_H____AEAAAEAV1_AEBV1__Z(qvector<qvector<int>> *__hidden this, const qvector<qvector<int>> *x);
qvector<qvector<const char *>> *__cdecl ?assign_?$qvector_V?$qvector_PEBD____AEAAAEAV1_AEBV1__Z(qvector<qvector<const char *>> *__hidden this, const qvector<qvector<const char *>> *x);
qvector<qvector<const twinline_t *>> *__cdecl ?assign_?$qvector_V?$qvector_PEBVtwinline_t______AEAAAEAV1_AEBV1__Z(qvector<qvector<const twinline_t *>> *__hidden this, const qvector<qvector<const twinline_t *>> *x);
qvector<qvector<long long>> *__cdecl ?assign_?$qvector_V?$qvector__J____AEAAAEAV1_AEBV1__Z(qvector<qvector<long long>> *__hidden this, const qvector<qvector<long long>> *x);
qvector<argloc_t> *__cdecl ?assign_?$qvector_Vargloc_t____AEAAAEAV1_AEBV1__Z(qvector<argloc_t> *__hidden this, const qvector<argloc_t> *x);
qvector<intmap_t> *__cdecl ?assign_?$qvector_Vintmap_t____AEAAAEAV1_AEBV1__Z(qvector<intmap_t> *__hidden this, const qvector<intmap_t> *x);
qvector<node_set_t> *__cdecl ?assign_?$qvector_Vnode_set_t____AEAAAEAV1_AEBV1__Z(qvector<node_set_t> *__hidden this, const qvector<node_set_t> *x);
qvector<op_t> *__cdecl ?assign_?$qvector_Vop_t____AEAAAEAV1_AEBV1__Z(qvector<op_t> *__hidden this, const qvector<op_t> *x);
qvector<rangeset_t> *__cdecl ?assign_?$qvector_Vrangeset_t____AEAAAEAV1_AEBV1__Z(qvector<rangeset_t> *__hidden this, const qvector<rangeset_t> *x);
qvector<sync_source_t> *__cdecl ?assign_?$qvector_Vsync_source_t____AEAAAEAV1_AEBV1__Z(qvector<sync_source_t> *__hidden this, const qvector<sync_source_t> *x);
qvector<tinfo_t> *__cdecl ?assign_?$qvector_Vtinfo_t____AEAAAEAV1_AEBV1__Z(qvector<tinfo_t> *__hidden this, const qvector<tinfo_t> *x);
qvector<tryblk_t> *__cdecl ?assign_?$qvector_Vtryblk_t____AEAAAEAV1_AEBV1__Z(qvector<tryblk_t> *__hidden this, const qvector<tryblk_t> *x);
qvector<twinline_t> *__cdecl ?assign_?$qvector_Vtwinline_t____AEAAAEAV1_AEBV1__Z(qvector<twinline_t> *__hidden this, const qvector<twinline_t> *x);
qvector<valstr_t> *__cdecl ?assign_?$qvector_Vvalstr_t____AEAAAEAV1_AEBV1__Z(qvector<valstr_t> *__hidden this, const qvector<valstr_t> *x);
qvector<movbpt_code_t> *__cdecl ?assign_?$qvector_W4movbpt_code_t____AEAAAEAV1_AEBV1__Z(qvector<movbpt_code_t> *__hidden this, const qvector<movbpt_code_t> *x);
qvector<long long> *__cdecl ?assign_?$qvector__J__AEAAAEAV1_AEBV1__Z(qvector<long long> *__hidden this, const qvector<long long> *x);
qvector<unsigned long long> *__cdecl ?assign_?$qvector__K__AEAAAEAV1_AEBV1__Z(qvector<unsigned long long> *__hidden this, const qvector<unsigned long long> *x);
qvector<bool> *__cdecl ?assign_?$qvector__N__AEAAAEAV1_AEBV1__Z(qvector<bool> *__hidden this, const qvector<bool> *x);
qvector<wchar_t> *__cdecl ?assign_?$qvector__W__AEAAAEAV1_AEBV1__Z(qvector<wchar_t> *__hidden this, const qvector<wchar_t> *x);
void __cdecl ?assign_edge_ports_abstract_graph_t__IEAAXAEBV?$qvector_Urow_info_t____AEBVnode_set_t___Z(abstract_graph_t *__hidden this, const graph_row_info_t *gri, const node_set_t *selfrefs);
char *__cdecl ?at_?$_qstring_D__QEAAAEAD_K_Z(_qstring<char> *__hidden this, size_t idx);
char *__cdecl ?at_?$_qstring_D__QEBAAEBD_K_Z(const _qstring<char> *__hidden this, size_t idx);
unsigned __int8 *__cdecl ?at_?$_qstring_E__QEAAAEAE_K_Z(_qstring<unsigned char> *__hidden this, size_t idx);
unsigned __int8 *__cdecl ?at_?$_qstring_E__QEBAAEBE_K_Z(const _qstring<unsigned char> *__hidden this, size_t idx);
__int16 *__cdecl ?at_?$_qstring__W__QEAAAEA_W_K_Z(_qstring<wchar_t> *__hidden this, size_t idx);
__int16 *__cdecl ?at_?$_qstring__W__QEBAAEB_W_K_Z(const _qstring<wchar_t> *__hidden this, size_t idx);
std::basic_string<char>::reference __cdecl ?at_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAD_K_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::const_reference __cdecl ?at_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAAEBD_K_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::reference __cdecl ?at_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEA_S_K_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::const_reference __cdecl ?at_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAAEB_S_K_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::reference __cdecl ?at_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEA_U_K_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::const_reference __cdecl ?at_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAAEB_U_K_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::reference __cdecl ?at_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEA_W_K_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::const_reference __cdecl ?at_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAAEB_W_K_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off);
std::map<int, int>::mapped_type *__cdecl ?at_?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAAAEAHAEBH_Z(std::map<int, int> *__hidden this, const std::map<int, int>::key_type *_Keyval);
const std::map<int, int>::mapped_type *__cdecl ?at_?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEBAAEBHAEBH_Z(const std::map<int, int> *__hidden this, const std::map<int, int>::key_type *_Keyval);
std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::mapped_type *__cdecl ?at_?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAAAEAV?$qrefcnt_t_Vrefcnted_regex_t____AEBV?$_qstring_D___Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::key_type *_Keyval);
const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::mapped_type *__cdecl ?at_?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEBAAEBV?$qrefcnt_t_Vrefcnted_regex_t____AEBV?$_qstring_D___Z(const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, const std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>>::key_type *_Keyval);
std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::mapped_type *__cdecl ?at_?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAAAEAUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____AEB_K_Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::key_type *_Keyval);
const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::mapped_type *__cdecl ?at_?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEBAAEBUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____AEB_K_Z(const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, const std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>::key_type *_Keyval);
std::map<unsigned long long, unsigned long long>::mapped_type *__cdecl ?at_?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAAAEA_KAEB_K_Z(std::map<unsigned long long, unsigned long long> *__hidden this, const std::map<unsigned long long, unsigned long long>::key_type *_Keyval);
const std::map<unsigned long long, unsigned long long>::mapped_type *__cdecl ?at_?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEBAAEB_KAEB_K_Z(const std::map<unsigned long long, unsigned long long> *__hidden this, const std::map<unsigned long long, unsigned long long>::key_type *_Keyval);
char *__cdecl ?at_?$qvector_D__QEAAAEAD_K_Z(qvector<char> *__hidden this, size_t _idx);
char *__cdecl ?at_?$qvector_D__QEBAAEBD_K_Z(const qvector<char> *__hidden this, size_t _idx);
unsigned __int8 *__cdecl ?at_?$qvector_E__QEAAAEAE_K_Z(qvector<unsigned char> *__hidden this, size_t _idx);
unsigned __int8 *__cdecl ?at_?$qvector_E__QEBAAEBE_K_Z(const qvector<unsigned char> *__hidden this, size_t _idx);
int *__cdecl ?at_?$qvector_H__QEAAAEAH_K_Z(qvector<int> *__hidden this, size_t _idx);
int *__cdecl ?at_?$qvector_H__QEBAAEBH_K_Z(const qvector<int> *__hidden this, size_t _idx);
unsigned int *__cdecl ?at_?$qvector_I__QEAAAEAI_K_Z(qvector<unsigned int> *__hidden this, size_t _idx);
unsigned int *__cdecl ?at_?$qvector_I__QEBAAEBI_K_Z(const qvector<unsigned int> *__hidden this, size_t _idx);
__int64 (__cdecl **__cdecl ?at_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAAEAP6A_JPEAW4syntax_highlight_style__PEBD_Z_K_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t _idx))(syntax_highlight_style *, const char *);
__int64 (__cdecl **__cdecl ?at_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBAAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_K_Z(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t _idx))(syntax_highlight_style *, const char *);
bool (__cdecl **__cdecl ?at_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAAEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_K_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t _idx))(syntax_highlight_style *, const _qstring<char> *);
bool (__cdecl **__cdecl ?at_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBAAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_K_Z(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t _idx))(syntax_highlight_style *, const _qstring<char> *);
bpt_t **__cdecl ?at_?$qvector_PEAUbpt_t____QEAAAEAPEAUbpt_t___K_Z(qvector<bpt_t *> *__hidden this, size_t _idx);
bpt_t **__cdecl ?at_?$qvector_PEAUbpt_t____QEBAAEBQEAUbpt_t___K_Z(const qvector<bpt_t *> *__hidden this, size_t _idx);
extlang_t **__cdecl ?at_?$qvector_PEAUextlang_t____QEAAAEAPEAUextlang_t___K_Z(qvector<extlang_t *> *__hidden this, size_t _idx);
extlang_t **__cdecl ?at_?$qvector_PEAUextlang_t____QEBAAEBQEAUextlang_t___K_Z(const qvector<extlang_t *> *__hidden this, size_t _idx);
line_rendering_output_entry_t **__cdecl ?at_?$qvector_PEAUline_rendering_output_entry_t____QEAAAEAPEAUline_rendering_output_entry_t___K_Z(qvector<line_rendering_output_entry_t *> *__hidden this, size_t _idx);
line_rendering_output_entry_t **__cdecl ?at_?$qvector_PEAUline_rendering_output_entry_t____QEBAAEBQEAUline_rendering_output_entry_t___K_Z(const qvector<line_rendering_output_entry_t *> *__hidden this, size_t _idx);
snapshot_t **__cdecl ?at_?$qvector_PEAVsnapshot_t____QEAAAEAPEAVsnapshot_t___K_Z(qvector<snapshot_t *> *__hidden this, size_t _idx);
snapshot_t **__cdecl ?at_?$qvector_PEAVsnapshot_t____QEBAAEBQEAVsnapshot_t___K_Z(const qvector<snapshot_t *> *__hidden this, size_t _idx);
const char **__cdecl ?at_?$qvector_PEBD__QEAAAEAPEBD_K_Z(qvector<const char *> *__hidden this, size_t _idx);
const char **__cdecl ?at_?$qvector_PEBD__QEBAAEBQEBD_K_Z(const qvector<const char *> *__hidden this, size_t _idx);
const bpt_t **__cdecl ?at_?$qvector_PEBUbpt_t____QEAAAEAPEBUbpt_t___K_Z(qvector<const bpt_t *> *__hidden this, size_t _idx);
const bpt_t **__cdecl ?at_?$qvector_PEBUbpt_t____QEBAAEBQEBUbpt_t___K_Z(const qvector<const bpt_t *> *__hidden this, size_t _idx);
const rangeset_t **__cdecl ?at_?$qvector_PEBVrangeset_t____QEAAAEAPEBVrangeset_t___K_Z(qvector<const rangeset_t *> *__hidden this, size_t _idx);
const rangeset_t **__cdecl ?at_?$qvector_PEBVrangeset_t____QEBAAEBQEBVrangeset_t___K_Z(const qvector<const rangeset_t *> *__hidden this, size_t _idx);
const twinline_t **__cdecl ?at_?$qvector_PEBVtwinline_t____QEAAAEAPEBVtwinline_t___K_Z(qvector<const twinline_t *> *__hidden this, size_t _idx);
const twinline_t **__cdecl ?at_?$qvector_PEBVtwinline_t____QEBAAEBQEBVtwinline_t___K_Z(const qvector<const twinline_t *> *__hidden this, size_t _idx);
argpart_t *__cdecl ?at_?$qvector_Uargpart_t____QEAAAEAUargpart_t___K_Z(qvector<argpart_t> *__hidden this, size_t _idx);
argpart_t *__cdecl ?at_?$qvector_Uargpart_t____QEBAAEBUargpart_t___K_Z(const qvector<argpart_t> *__hidden this, size_t _idx);
bpt_t *__cdecl ?at_?$qvector_Ubpt_t____QEAAAEAUbpt_t___K_Z(qvector<bpt_t> *__hidden this, size_t _idx);
bpt_t *__cdecl ?at_?$qvector_Ubpt_t____QEBAAEBUbpt_t___K_Z(const qvector<bpt_t> *__hidden this, size_t _idx);
bptaddrs_t *__cdecl ?at_?$qvector_Ubptaddrs_t____QEAAAEAUbptaddrs_t___K_Z(qvector<bptaddrs_t> *__hidden this, size_t _idx);
bptaddrs_t *__cdecl ?at_?$qvector_Ubptaddrs_t____QEBAAEBUbptaddrs_t___K_Z(const qvector<bptaddrs_t> *__hidden this, size_t _idx);
call_stack_info_t *__cdecl ?at_?$qvector_Ucall_stack_info_t____QEAAAEAUcall_stack_info_t___K_Z(qvector<call_stack_info_t> *__hidden this, size_t _idx);
call_stack_info_t *__cdecl ?at_?$qvector_Ucall_stack_info_t____QEBAAEBUcall_stack_info_t___K_Z(const qvector<call_stack_info_t> *__hidden this, size_t _idx);
catch_t *__cdecl ?at_?$qvector_Ucatch_t____QEAAAEAUcatch_t___K_Z(qvector<catch_t> *__hidden this, size_t _idx);
catch_t *__cdecl ?at_?$qvector_Ucatch_t____QEBAAEBUcatch_t___K_Z(const qvector<catch_t> *__hidden this, size_t _idx);
cfgopt_set_t *__cdecl ?at_?$qvector_Ucfgopt_set_t____QEAAAEAUcfgopt_set_t___K_Z(qvector<cfgopt_set_t> *__hidden this, size_t _idx);
cfgopt_set_t *__cdecl ?at_?$qvector_Ucfgopt_set_t____QEBAAEBUcfgopt_set_t___K_Z(const qvector<cfgopt_set_t> *__hidden this, size_t _idx);
channel_redir_t *__cdecl ?at_?$qvector_Uchannel_redir_t____QEAAAEAUchannel_redir_t___K_Z(qvector<channel_redir_t> *__hidden this, size_t _idx);
channel_redir_t *__cdecl ?at_?$qvector_Uchannel_redir_t____QEBAAEBUchannel_redir_t___K_Z(const qvector<channel_redir_t> *__hidden this, size_t _idx);
cliopt_t *__cdecl ?at_?$qvector_Ucliopt_t____QEAAAEAUcliopt_t___K_Z(qvector<cliopt_t> *__hidden this, size_t _idx);
cliopt_t *__cdecl ?at_?$qvector_Ucliopt_t____QEBAAEBUcliopt_t___K_Z(const qvector<cliopt_t> *__hidden this, size_t _idx);
compiled_binpat_t *__cdecl ?at_?$qvector_Ucompiled_binpat_t____QEAAAEAUcompiled_binpat_t___K_Z(qvector<compiled_binpat_t> *__hidden this, size_t _idx);
compiled_binpat_t *__cdecl ?at_?$qvector_Ucompiled_binpat_t____QEBAAEBUcompiled_binpat_t___K_Z(const qvector<compiled_binpat_t> *__hidden this, size_t _idx);
debug_event_t *__cdecl ?at_?$qvector_Udebug_event_t____QEAAAEAUdebug_event_t___K_Z(qvector<debug_event_t> *__hidden this, size_t _idx);
debug_event_t *__cdecl ?at_?$qvector_Udebug_event_t____QEBAAEBUdebug_event_t___K_Z(const qvector<debug_event_t> *__hidden this, size_t _idx);
direntry_t *__cdecl ?at_?$qvector_Udirentry_t____QEAAAEAUdirentry_t___K_Z(qvector<direntry_t> *__hidden this, size_t _idx);
direntry_t *__cdecl ?at_?$qvector_Udirentry_t____QEBAAEBUdirentry_t___K_Z(const qvector<direntry_t> *__hidden this, size_t _idx);
dirtree_cursor_t *__cdecl ?at_?$qvector_Udirtree_cursor_t____QEAAAEAUdirtree_cursor_t___K_Z(qvector<dirtree_cursor_t> *__hidden this, size_t _idx);
dirtree_cursor_t *__cdecl ?at_?$qvector_Udirtree_cursor_t____QEBAAEBUdirtree_cursor_t___K_Z(const qvector<dirtree_cursor_t> *__hidden this, size_t _idx);
ea_name_t *__cdecl ?at_?$qvector_Uea_name_t____QEAAAEAUea_name_t___K_Z(qvector<ea_name_t> *__hidden this, size_t _idx);
ea_name_t *__cdecl ?at_?$qvector_Uea_name_t____QEBAAEBUea_name_t___K_Z(const qvector<ea_name_t> *__hidden this, size_t _idx);
edge_t *__cdecl ?at_?$qvector_Uedge_t____QEAAAEAUedge_t___K_Z(qvector<edge_t> *__hidden this, size_t _idx);
edge_t *__cdecl ?at_?$qvector_Uedge_t____QEBAAEBUedge_t___K_Z(const qvector<edge_t> *__hidden this, size_t _idx);
enum_member_t *__cdecl ?at_?$qvector_Uenum_member_t____QEAAAEAUenum_member_t___K_Z(qvector<enum_member_t> *__hidden this, size_t _idx);
enum_member_t *__cdecl ?at_?$qvector_Uenum_member_t____QEBAAEBUenum_member_t___K_Z(const qvector<enum_member_t> *__hidden this, size_t _idx);
exception_info_t *__cdecl ?at_?$qvector_Uexception_info_t____QEAAAEAUexception_info_t___K_Z(qvector<exception_info_t> *__hidden this, size_t _idx);
exception_info_t *__cdecl ?at_?$qvector_Uexception_info_t____QEBAAEBUexception_info_t___K_Z(const qvector<exception_info_t> *__hidden this, size_t _idx);
fixup_info_t *__cdecl ?at_?$qvector_Ufixup_info_t____QEAAAEAUfixup_info_t___K_Z(qvector<fixup_info_t> *__hidden this, size_t _idx);
fixup_info_t *__cdecl ?at_?$qvector_Ufixup_info_t____QEBAAEBUfixup_info_t___K_Z(const qvector<fixup_info_t> *__hidden this, size_t _idx);
funcarg_t *__cdecl ?at_?$qvector_Ufuncarg_t____QEAAAEAUfuncarg_t___K_Z(qvector<funcarg_t> *__hidden this, size_t _idx);
funcarg_t *__cdecl ?at_?$qvector_Ufuncarg_t____QEBAAEBUfuncarg_t___K_Z(const qvector<funcarg_t> *__hidden this, size_t _idx);
group_crinfo_t *__cdecl ?at_?$qvector_Ugroup_crinfo_t____QEAAAEAUgroup_crinfo_t___K_Z(qvector<group_crinfo_t> *__hidden this, size_t _idx);
group_crinfo_t *__cdecl ?at_?$qvector_Ugroup_crinfo_t____QEBAAEBUgroup_crinfo_t___K_Z(const qvector<group_crinfo_t> *__hidden this, size_t _idx);
idc_global_t *__cdecl ?at_?$qvector_Uidc_global_t____QEAAAEAUidc_global_t___K_Z(qvector<idc_global_t> *__hidden this, size_t _idx);
idc_global_t *__cdecl ?at_?$qvector_Uidc_global_t____QEBAAEBUidc_global_t___K_Z(const qvector<idc_global_t> *__hidden this, size_t _idx);
idp_desc_t *__cdecl ?at_?$qvector_Uidp_desc_t____QEAAAEAUidp_desc_t___K_Z(qvector<idp_desc_t> *__hidden this, size_t _idx);
idp_desc_t *__cdecl ?at_?$qvector_Uidp_desc_t____QEBAAEBUidp_desc_t___K_Z(const qvector<idp_desc_t> *__hidden this, size_t _idx);
idp_name_t *__cdecl ?at_?$qvector_Uidp_name_t____QEAAAEAUidp_name_t___K_Z(qvector<idp_name_t> *__hidden this, size_t _idx);
idp_name_t *__cdecl ?at_?$qvector_Uidp_name_t____QEBAAEBUidp_name_t___K_Z(const qvector<idp_name_t> *__hidden this, size_t _idx);
ioport_bit_t *__cdecl ?at_?$qvector_Uioport_bit_t____QEAAAEAUioport_bit_t___K_Z(qvector<ioport_bit_t> *__hidden this, size_t _idx);
ioport_bit_t *__cdecl ?at_?$qvector_Uioport_bit_t____QEBAAEBUioport_bit_t___K_Z(const qvector<ioport_bit_t> *__hidden this, size_t _idx);
ioport_t *__cdecl ?at_?$qvector_Uioport_t____QEAAAEAUioport_t___K_Z(qvector<ioport_t> *__hidden this, size_t _idx);
ioport_t *__cdecl ?at_?$qvector_Uioport_t____QEBAAEBUioport_t___K_Z(const qvector<ioport_t> *__hidden this, size_t _idx);
jvalue_t *__cdecl ?at_?$qvector_Ujvalue_t____QEAAAEAUjvalue_t___K_Z(qvector<jvalue_t> *__hidden this, size_t _idx);
jvalue_t *__cdecl ?at_?$qvector_Ujvalue_t____QEBAAEBUjvalue_t___K_Z(const qvector<jvalue_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::keywords_style_t *__cdecl ?at_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAAEAUkeywords_style_t_ida_syntax_highlighter_t___K_Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::keywords_style_t *__cdecl ?at_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBAAEBUkeywords_style_t_ida_syntax_highlighter_t___K_Z(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t _idx);
kvp_t *__cdecl ?at_?$qvector_Ukvp_t____QEAAAEAUkvp_t___K_Z(qvector<kvp_t> *__hidden this, size_t _idx);
kvp_t *__cdecl ?at_?$qvector_Ukvp_t____QEBAAEBUkvp_t___K_Z(const qvector<kvp_t> *__hidden this, size_t _idx);
lochist_entry_t *__cdecl ?at_?$qvector_Ulochist_entry_t____QEAAAEAUlochist_entry_t___K_Z(qvector<lochist_entry_t> *__hidden this, size_t _idx);
lochist_entry_t *__cdecl ?at_?$qvector_Ulochist_entry_t____QEBAAEBUlochist_entry_t___K_Z(const qvector<lochist_entry_t> *__hidden this, size_t _idx);
lowcnd_t *__cdecl ?at_?$qvector_Ulowcnd_t____QEAAAEAUlowcnd_t___K_Z(qvector<lowcnd_t> *__hidden this, size_t _idx);
lowcnd_t *__cdecl ?at_?$qvector_Ulowcnd_t____QEBAAEBUlowcnd_t___K_Z(const qvector<lowcnd_t> *__hidden this, size_t _idx);
memory_info_t *__cdecl ?at_?$qvector_Umemory_info_t____QEAAAEAUmemory_info_t___K_Z(qvector<memory_info_t> *__hidden this, size_t _idx);
memory_info_t *__cdecl ?at_?$qvector_Umemory_info_t____QEBAAEBUmemory_info_t___K_Z(const qvector<memory_info_t> *__hidden this, size_t _idx);
memreg_info_t *__cdecl ?at_?$qvector_Umemreg_info_t____QEAAAEAUmemreg_info_t___K_Z(qvector<memreg_info_t> *__hidden this, size_t _idx);
memreg_info_t *__cdecl ?at_?$qvector_Umemreg_info_t____QEBAAEBUmemreg_info_t___K_Z(const qvector<memreg_info_t> *__hidden this, size_t _idx);
modinfo_t *__cdecl ?at_?$qvector_Umodinfo_t____QEAAAEAUmodinfo_t___K_Z(qvector<modinfo_t> *__hidden this, size_t _idx);
modinfo_t *__cdecl ?at_?$qvector_Umodinfo_t____QEBAAEBUmodinfo_t___K_Z(const qvector<modinfo_t> *__hidden this, size_t _idx);
movbpt_info_t *__cdecl ?at_?$qvector_Umovbpt_info_t____QEAAAEAUmovbpt_info_t___K_Z(qvector<movbpt_info_t> *__hidden this, size_t _idx);
movbpt_info_t *__cdecl ?at_?$qvector_Umovbpt_info_t____QEBAAEBUmovbpt_info_t___K_Z(const qvector<movbpt_info_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::multicmt_t *__cdecl ?at_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAAEAUmulticmt_t_ida_syntax_highlighter_t___K_Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::multicmt_t *__cdecl ?at_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBAAEBUmulticmt_t_ida_syntax_highlighter_t___K_Z(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ?at_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAAEAUplain_char_ptr_t_ida_syntax_highlighter_t___K_Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t _idx);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ?at_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBAAEBUplain_char_ptr_t_ida_syntax_highlighter_t___K_Z(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t _idx);
point_t *__cdecl ?at_?$qvector_Upoint_t____QEAAAEAUpoint_t___K_Z(qvector<point_t> *__hidden this, size_t _idx);
point_t *__cdecl ?at_?$qvector_Upoint_t____QEBAAEBUpoint_t___K_Z(const qvector<point_t> *__hidden this, size_t _idx);
process_info_t *__cdecl ?at_?$qvector_Uprocess_info_t____QEAAAEAUprocess_info_t___K_Z(qvector<process_info_t> *__hidden this, size_t _idx);
process_info_t *__cdecl ?at_?$qvector_Uprocess_info_t____QEBAAEBUprocess_info_t___K_Z(const qvector<process_info_t> *__hidden this, size_t _idx);
qbasic_block_t *__cdecl ?at_?$qvector_Uqbasic_block_t____QEAAAEAUqbasic_block_t___K_Z(qvector<qbasic_block_t> *__hidden this, size_t _idx);
qbasic_block_t *__cdecl ?at_?$qvector_Uqbasic_block_t____QEBAAEBUqbasic_block_t___K_Z(const qvector<qbasic_block_t> *__hidden this, size_t _idx);
range_t *__cdecl ?at_?$qvector_Urange_t____QEAAAEAUrange_t___K_Z(qvector<range_t> *__hidden this, size_t _idx);
range_t *__cdecl ?at_?$qvector_Urange_t____QEBAAEBUrange_t___K_Z(const qvector<range_t> *__hidden this, size_t _idx);
rect_t *__cdecl ?at_?$qvector_Urect_t____QEAAAEAUrect_t___K_Z(qvector<rect_t> *__hidden this, size_t _idx);
rect_t *__cdecl ?at_?$qvector_Urect_t____QEBAAEBUrect_t___K_Z(const qvector<rect_t> *__hidden this, size_t _idx);
refinfo_desc_t *__cdecl ?at_?$qvector_Urefinfo_desc_t____QEAAAEAUrefinfo_desc_t___K_Z(qvector<refinfo_desc_t> *__hidden this, size_t _idx);
refinfo_desc_t *__cdecl ?at_?$qvector_Urefinfo_desc_t____QEBAAEBUrefinfo_desc_t___K_Z(const qvector<refinfo_desc_t> *__hidden this, size_t _idx);
reg_access_t *__cdecl ?at_?$qvector_Ureg_access_t____QEAAAEAUreg_access_t___K_Z(qvector<reg_access_t> *__hidden this, size_t _idx);
reg_access_t *__cdecl ?at_?$qvector_Ureg_access_t____QEBAAEBUreg_access_t___K_Z(const qvector<reg_access_t> *__hidden this, size_t _idx);
reg_info_t *__cdecl ?at_?$qvector_Ureg_info_t____QEAAAEAUreg_info_t___K_Z(qvector<reg_info_t> *__hidden this, size_t _idx);
reg_info_t *__cdecl ?at_?$qvector_Ureg_info_t____QEBAAEBUreg_info_t___K_Z(const qvector<reg_info_t> *__hidden this, size_t _idx);
register_info_t *__cdecl ?at_?$qvector_Uregister_info_t____QEAAAEAUregister_info_t___K_Z(qvector<register_info_t> *__hidden this, size_t _idx);
register_info_t *__cdecl ?at_?$qvector_Uregister_info_t____QEBAAEBUregister_info_t___K_Z(const qvector<register_info_t> *__hidden this, size_t _idx);
regobj_t *__cdecl ?at_?$qvector_Uregobj_t____QEAAAEAUregobj_t___K_Z(qvector<regobj_t> *__hidden this, size_t _idx);
regobj_t *__cdecl ?at_?$qvector_Uregobj_t____QEBAAEBUregobj_t___K_Z(const qvector<regobj_t> *__hidden this, size_t _idx);
regval_t *__cdecl ?at_?$qvector_Uregval_t____QEAAAEAUregval_t___K_Z(qvector<regval_t> *__hidden this, size_t _idx);
regval_t *__cdecl ?at_?$qvector_Uregval_t____QEBAAEBUregval_t___K_Z(const qvector<regval_t> *__hidden this, size_t _idx);
row_info_t *__cdecl ?at_?$qvector_Urow_info_t____QEAAAEAUrow_info_t___K_Z(qvector<row_info_t> *__hidden this, size_t _idx);
row_info_t *__cdecl ?at_?$qvector_Urow_info_t____QEBAAEBUrow_info_t___K_Z(const qvector<row_info_t> *__hidden this, size_t _idx);
scattered_segm_t *__cdecl ?at_?$qvector_Uscattered_segm_t____QEAAAEAUscattered_segm_t___K_Z(qvector<scattered_segm_t> *__hidden this, size_t _idx);
scattered_segm_t *__cdecl ?at_?$qvector_Uscattered_segm_t____QEBAAEBUscattered_segm_t___K_Z(const qvector<scattered_segm_t> *__hidden this, size_t _idx);
segm_move_info_t *__cdecl ?at_?$qvector_Usegm_move_info_t____QEAAAEAUsegm_move_info_t___K_Z(qvector<segm_move_info_t> *__hidden this, size_t _idx);
segm_move_info_t *__cdecl ?at_?$qvector_Usegm_move_info_t____QEBAAEBUsegm_move_info_t___K_Z(const qvector<segm_move_info_t> *__hidden this, size_t _idx);
selection_item_t *__cdecl ?at_?$qvector_Uselection_item_t____QEAAAEAUselection_item_t___K_Z(qvector<selection_item_t> *__hidden this, size_t _idx);
selection_item_t *__cdecl ?at_?$qvector_Uselection_item_t____QEBAAEBUselection_item_t___K_Z(const qvector<selection_item_t> *__hidden this, size_t _idx);
simd_info_t *__cdecl ?at_?$qvector_Usimd_info_t____QEAAAEAUsimd_info_t___K_Z(qvector<simd_info_t> *__hidden this, size_t _idx);
simd_info_t *__cdecl ?at_?$qvector_Usimd_info_t____QEBAAEBUsimd_info_t___K_Z(const qvector<simd_info_t> *__hidden this, size_t _idx);
simpleline_t *__cdecl ?at_?$qvector_Usimpleline_t____QEAAAEAUsimpleline_t___K_Z(qvector<simpleline_t> *__hidden this, size_t _idx);
simpleline_t *__cdecl ?at_?$qvector_Usimpleline_t____QEBAAEBUsimpleline_t___K_Z(const qvector<simpleline_t> *__hidden this, size_t _idx);
stkpnt_t *__cdecl ?at_?$qvector_Ustkpnt_t____QEAAAEAUstkpnt_t___K_Z(qvector<stkpnt_t> *__hidden this, size_t _idx);
stkpnt_t *__cdecl ?at_?$qvector_Ustkpnt_t____QEBAAEBUstkpnt_t___K_Z(const qvector<stkpnt_t> *__hidden this, size_t _idx);
tev_info_reg_t *__cdecl ?at_?$qvector_Utev_info_reg_t____QEAAAEAUtev_info_reg_t___K_Z(qvector<tev_info_reg_t> *__hidden this, size_t _idx);
tev_info_reg_t *__cdecl ?at_?$qvector_Utev_info_reg_t____QEBAAEBUtev_info_reg_t___K_Z(const qvector<tev_info_reg_t> *__hidden this, size_t _idx);
tev_info_t *__cdecl ?at_?$qvector_Utev_info_t____QEAAAEAUtev_info_t___K_Z(qvector<tev_info_t> *__hidden this, size_t _idx);
tev_info_t *__cdecl ?at_?$qvector_Utev_info_t____QEBAAEBUtev_info_t___K_Z(const qvector<tev_info_t> *__hidden this, size_t _idx);
tev_reg_value_t *__cdecl ?at_?$qvector_Utev_reg_value_t____QEAAAEAUtev_reg_value_t___K_Z(qvector<tev_reg_value_t> *__hidden this, size_t _idx);
tev_reg_value_t *__cdecl ?at_?$qvector_Utev_reg_value_t____QEBAAEBUtev_reg_value_t___K_Z(const qvector<tev_reg_value_t> *__hidden this, size_t _idx);
thread_name_t *__cdecl ?at_?$qvector_Uthread_name_t____QEAAAEAUthread_name_t___K_Z(qvector<thread_name_t> *__hidden this, size_t _idx);
thread_name_t *__cdecl ?at_?$qvector_Uthread_name_t____QEBAAEBUthread_name_t___K_Z(const qvector<thread_name_t> *__hidden this, size_t _idx);
token_t *__cdecl ?at_?$qvector_Utoken_t____QEAAAEAUtoken_t___K_Z(qvector<token_t> *__hidden this, size_t _idx);
token_t *__cdecl ?at_?$qvector_Utoken_t____QEBAAEBUtoken_t___K_Z(const qvector<token_t> *__hidden this, size_t _idx);
type_attr_t *__cdecl ?at_?$qvector_Utype_attr_t____QEAAAEAUtype_attr_t___K_Z(qvector<type_attr_t> *__hidden this, size_t _idx);
type_attr_t *__cdecl ?at_?$qvector_Utype_attr_t____QEBAAEBUtype_attr_t___K_Z(const qvector<type_attr_t> *__hidden this, size_t _idx);
udt_member_t *__cdecl ?at_?$qvector_Uudt_member_t____QEAAAEAUudt_member_t___K_Z(qvector<udt_member_t> *__hidden this, size_t _idx);
udt_member_t *__cdecl ?at_?$qvector_Uudt_member_t____QEBAAEBUudt_member_t___K_Z(const qvector<udt_member_t> *__hidden this, size_t _idx);
update_bpt_info_t *__cdecl ?at_?$qvector_Uupdate_bpt_info_t____QEAAAEAUupdate_bpt_info_t___K_Z(qvector<update_bpt_info_t> *__hidden this, size_t _idx);
update_bpt_info_t *__cdecl ?at_?$qvector_Uupdate_bpt_info_t____QEBAAEBUupdate_bpt_info_t___K_Z(const qvector<update_bpt_info_t> *__hidden this, size_t _idx);
xreflist_entry_t *__cdecl ?at_?$qvector_Uxreflist_entry_t____QEAAAEAUxreflist_entry_t___K_Z(qvector<xreflist_entry_t> *__hidden this, size_t _idx);
xreflist_entry_t *__cdecl ?at_?$qvector_Uxreflist_entry_t____QEBAAEBUxreflist_entry_t___K_Z(const qvector<xreflist_entry_t> *__hidden this, size_t _idx);
_qstring<char> *__cdecl ?at_?$qvector_V?$_qstring_D____QEAAAEAV?$_qstring_D___K_Z(qvector<_qstring<char>> *__hidden this, size_t _idx);
_qstring<char> *__cdecl ?at_?$qvector_V?$_qstring_D____QEBAAEBV?$_qstring_D___K_Z(const qvector<_qstring<char>> *__hidden this, size_t _idx);
_qstring<unsigned char> *__cdecl ?at_?$qvector_V?$_qstring_E____QEAAAEAV?$_qstring_E___K_Z(qvector<_qstring<unsigned char>> *__hidden this, size_t _idx);
_qstring<unsigned char> *__cdecl ?at_?$qvector_V?$_qstring_E____QEBAAEBV?$_qstring_E___K_Z(const qvector<_qstring<unsigned char>> *__hidden this, size_t _idx);
_qstring<wchar_t> *__cdecl ?at_?$qvector_V?$_qstring__W____QEAAAEAV?$_qstring__W___K_Z(qvector<_qstring<wchar_t>> *__hidden this, size_t _idx);
_qstring<wchar_t> *__cdecl ?at_?$qvector_V?$_qstring__W____QEBAAEBV?$_qstring__W___K_Z(const qvector<_qstring<wchar_t>> *__hidden this, size_t _idx);
qrefcnt_t<source_item_t> *__cdecl ?at_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAAEAV?$qrefcnt_t_Vsource_item_t_____K_Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t _idx);
qrefcnt_t<source_item_t> *__cdecl ?at_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBAAEBV?$qrefcnt_t_Vsource_item_t_____K_Z(const qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t _idx);
qvector<int> *__cdecl ?at_?$qvector_V?$qvector_H____QEAAAEAV?$qvector_H___K_Z(qvector<qvector<int>> *__hidden this, size_t _idx);
qvector<int> *__cdecl ?at_?$qvector_V?$qvector_H____QEBAAEBV?$qvector_H___K_Z(const qvector<qvector<int>> *__hidden this, size_t _idx);
qvector<const char *> *__cdecl ?at_?$qvector_V?$qvector_PEBD____QEAAAEAV?$qvector_PEBD___K_Z(qvector<qvector<const char *>> *__hidden this, size_t _idx);
qvector<const char *> *__cdecl ?at_?$qvector_V?$qvector_PEBD____QEBAAEBV?$qvector_PEBD___K_Z(const qvector<qvector<const char *>> *__hidden this, size_t _idx);
qvector<const twinline_t *> *__cdecl ?at_?$qvector_V?$qvector_PEBVtwinline_t______QEAAAEAV?$qvector_PEBVtwinline_t_____K_Z(qvector<qvector<const twinline_t *>> *__hidden this, size_t _idx);
qvector<const twinline_t *> *__cdecl ?at_?$qvector_V?$qvector_PEBVtwinline_t______QEBAAEBV?$qvector_PEBVtwinline_t_____K_Z(const qvector<qvector<const twinline_t *>> *__hidden this, size_t _idx);
qvector<long long> *__cdecl ?at_?$qvector_V?$qvector__J____QEAAAEAV?$qvector__J___K_Z(qvector<qvector<long long>> *__hidden this, size_t _idx);
qvector<long long> *__cdecl ?at_?$qvector_V?$qvector__J____QEBAAEBV?$qvector__J___K_Z(const qvector<qvector<long long>> *__hidden this, size_t _idx);
argloc_t *__cdecl ?at_?$qvector_Vargloc_t____QEAAAEAVargloc_t___K_Z(qvector<argloc_t> *__hidden this, size_t _idx);
argloc_t *__cdecl ?at_?$qvector_Vargloc_t____QEBAAEBVargloc_t___K_Z(const qvector<argloc_t> *__hidden this, size_t _idx);
intmap_t *__cdecl ?at_?$qvector_Vintmap_t____QEAAAEAVintmap_t___K_Z(qvector<intmap_t> *__hidden this, size_t _idx);
intmap_t *__cdecl ?at_?$qvector_Vintmap_t____QEBAAEBVintmap_t___K_Z(const qvector<intmap_t> *__hidden this, size_t _idx);
node_set_t *__cdecl ?at_?$qvector_Vnode_set_t____QEAAAEAVnode_set_t___K_Z(qvector<node_set_t> *__hidden this, size_t _idx);
node_set_t *__cdecl ?at_?$qvector_Vnode_set_t____QEBAAEBVnode_set_t___K_Z(const qvector<node_set_t> *__hidden this, size_t _idx);
op_t *__cdecl ?at_?$qvector_Vop_t____QEAAAEAVop_t___K_Z(qvector<op_t> *__hidden this, size_t _idx);
op_t *__cdecl ?at_?$qvector_Vop_t____QEBAAEBVop_t___K_Z(const qvector<op_t> *__hidden this, size_t _idx);
rangeset_t *__cdecl ?at_?$qvector_Vrangeset_t____QEAAAEAVrangeset_t___K_Z(qvector<rangeset_t> *__hidden this, size_t _idx);
rangeset_t *__cdecl ?at_?$qvector_Vrangeset_t____QEBAAEBVrangeset_t___K_Z(const qvector<rangeset_t> *__hidden this, size_t _idx);
sync_source_t *__cdecl ?at_?$qvector_Vsync_source_t____QEAAAEAVsync_source_t___K_Z(qvector<sync_source_t> *__hidden this, size_t _idx);
sync_source_t *__cdecl ?at_?$qvector_Vsync_source_t____QEBAAEBVsync_source_t___K_Z(const qvector<sync_source_t> *__hidden this, size_t _idx);
tinfo_t *__cdecl ?at_?$qvector_Vtinfo_t____QEAAAEAVtinfo_t___K_Z(qvector<tinfo_t> *__hidden this, size_t _idx);
tinfo_t *__cdecl ?at_?$qvector_Vtinfo_t____QEBAAEBVtinfo_t___K_Z(const qvector<tinfo_t> *__hidden this, size_t _idx);
tryblk_t *__cdecl ?at_?$qvector_Vtryblk_t____QEAAAEAVtryblk_t___K_Z(qvector<tryblk_t> *__hidden this, size_t _idx);
tryblk_t *__cdecl ?at_?$qvector_Vtryblk_t____QEBAAEBVtryblk_t___K_Z(const qvector<tryblk_t> *__hidden this, size_t _idx);
twinline_t *__cdecl ?at_?$qvector_Vtwinline_t____QEAAAEAVtwinline_t___K_Z(qvector<twinline_t> *__hidden this, size_t _idx);
twinline_t *__cdecl ?at_?$qvector_Vtwinline_t____QEBAAEBVtwinline_t___K_Z(const qvector<twinline_t> *__hidden this, size_t _idx);
valstr_t *__cdecl ?at_?$qvector_Vvalstr_t____QEAAAEAVvalstr_t___K_Z(qvector<valstr_t> *__hidden this, size_t _idx);
valstr_t *__cdecl ?at_?$qvector_Vvalstr_t____QEBAAEBVvalstr_t___K_Z(const qvector<valstr_t> *__hidden this, size_t _idx);
movbpt_code_t *__cdecl ?at_?$qvector_W4movbpt_code_t____QEAAAEAW4movbpt_code_t___K_Z(qvector<movbpt_code_t> *__hidden this, size_t _idx);
movbpt_code_t *__cdecl ?at_?$qvector_W4movbpt_code_t____QEBAAEBW4movbpt_code_t___K_Z(const qvector<movbpt_code_t> *__hidden this, size_t _idx);
__int64 *__cdecl ?at_?$qvector__J__QEAAAEA_J_K_Z(qvector<long long> *__hidden this, size_t _idx);
__int64 *__cdecl ?at_?$qvector__J__QEBAAEB_J_K_Z(const qvector<long long> *__hidden this, size_t _idx);
unsigned __int64 *__cdecl ?at_?$qvector__K__QEAAAEA_K_K_Z(qvector<unsigned long long> *__hidden this, size_t _idx);
unsigned __int64 *__cdecl ?at_?$qvector__K__QEBAAEB_K_K_Z(const qvector<unsigned long long> *__hidden this, size_t _idx);
bool *__cdecl ?at_?$qvector__N__QEAAAEA_N_K_Z(qvector<bool> *__hidden this, size_t _idx);
bool *__cdecl ?at_?$qvector__N__QEBAAEB_N_K_Z(const qvector<bool> *__hidden this, size_t _idx);
__int16 *__cdecl ?at_?$qvector__W__QEAAAEA_W_K_Z(qvector<wchar_t> *__hidden this, size_t _idx);
__int16 *__cdecl ?at_?$qvector__W__QEBAAEB_W_K_Z(const qvector<wchar_t> *__hidden this, size_t _idx);
drc_t __cdecl ?attach_process_debugger_t__QEAA?AW4drc_t__HHIPEAV?$_qstring_D___Z(debugger_t *__hidden this, pid_t pid, int event_id, uint32 dbg_proc_flags, qstring *errbuf);
argloc_type_t __cdecl ?atype_argloc_t__QEBAHXZ(const argloc_t *__hidden this);
void __cdecl ?auto_queue_empty_processor_t__SAXH_Z(int type);
std::basic_string<char>::reference __cdecl ?back_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEADXZ(std::basic_string<char> *__hidden this);
std::basic_string<char>::const_reference __cdecl ?back_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAAEBDXZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::reference __cdecl ?back_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEA_SXZ(std::basic_string<char16_t> *__hidden this);
std::basic_string<char16_t>::const_reference __cdecl ?back_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAAEB_SXZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::reference __cdecl ?back_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEA_UXZ(std::basic_string<char32_t> *__hidden this);
std::basic_string<char32_t>::const_reference __cdecl ?back_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAAEB_UXZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::reference __cdecl ?back_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEA_WXZ(std::basic_string<wchar_t> *__hidden this);
std::basic_string<wchar_t>::const_reference __cdecl ?back_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAAEB_WXZ(const std::basic_string<wchar_t> *__hidden this);
ui_request_t **__cdecl ?back_?$qlist_PEAVui_request_t____QEAAAEAPEAVui_request_t__XZ(qlist<ui_request_t *> *__hidden this);
ui_request_t **__cdecl ?back_?$qlist_PEAVui_request_t____QEBAAEBQEAVui_request_t__XZ(const qlist<ui_request_t *> *__hidden this);
char *__cdecl ?back_?$qvector_D__QEAAAEADXZ(qvector<char> *__hidden this);
char *__cdecl ?back_?$qvector_D__QEBAAEBDXZ(const qvector<char> *__hidden this);
unsigned __int8 *__cdecl ?back_?$qvector_E__QEAAAEAEXZ(qvector<unsigned char> *__hidden this);
unsigned __int8 *__cdecl ?back_?$qvector_E__QEBAAEBEXZ(const qvector<unsigned char> *__hidden this);
int *__cdecl ?back_?$qvector_H__QEAAAEAHXZ(qvector<int> *__hidden this);
int *__cdecl ?back_?$qvector_H__QEBAAEBHXZ(const qvector<int> *__hidden this);
unsigned int *__cdecl ?back_?$qvector_I__QEAAAEAIXZ(qvector<unsigned int> *__hidden this);
unsigned int *__cdecl ?back_?$qvector_I__QEBAAEBIXZ(const qvector<unsigned int> *__hidden this);
__int64 (__cdecl **__cdecl ?back_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAAEAP6A_JPEAW4syntax_highlight_style__PEBD_ZXZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this))(syntax_highlight_style *, const char *);
__int64 (__cdecl **__cdecl ?back_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBAAEBQ6A_JPEAW4syntax_highlight_style__PEBD_ZXZ(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this))(syntax_highlight_style *, const char *);
bool (__cdecl **__cdecl ?back_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAAEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZXZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this))(syntax_highlight_style *, const _qstring<char> *);
bool (__cdecl **__cdecl ?back_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBAAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZXZ(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this))(syntax_highlight_style *, const _qstring<char> *);
bpt_t **__cdecl ?back_?$qvector_PEAUbpt_t____QEAAAEAPEAUbpt_t__XZ(qvector<bpt_t *> *__hidden this);
bpt_t **__cdecl ?back_?$qvector_PEAUbpt_t____QEBAAEBQEAUbpt_t__XZ(const qvector<bpt_t *> *__hidden this);
extlang_t **__cdecl ?back_?$qvector_PEAUextlang_t____QEAAAEAPEAUextlang_t__XZ(qvector<extlang_t *> *__hidden this);
extlang_t **__cdecl ?back_?$qvector_PEAUextlang_t____QEBAAEBQEAUextlang_t__XZ(const qvector<extlang_t *> *__hidden this);
line_rendering_output_entry_t **__cdecl ?back_?$qvector_PEAUline_rendering_output_entry_t____QEAAAEAPEAUline_rendering_output_entry_t__XZ(qvector<line_rendering_output_entry_t *> *__hidden this);
line_rendering_output_entry_t **__cdecl ?back_?$qvector_PEAUline_rendering_output_entry_t____QEBAAEBQEAUline_rendering_output_entry_t__XZ(const qvector<line_rendering_output_entry_t *> *__hidden this);
snapshot_t **__cdecl ?back_?$qvector_PEAVsnapshot_t____QEAAAEAPEAVsnapshot_t__XZ(qvector<snapshot_t *> *__hidden this);
snapshot_t **__cdecl ?back_?$qvector_PEAVsnapshot_t____QEBAAEBQEAVsnapshot_t__XZ(const qvector<snapshot_t *> *__hidden this);
const char **__cdecl ?back_?$qvector_PEBD__QEAAAEAPEBDXZ(qvector<const char *> *__hidden this);
const char **__cdecl ?back_?$qvector_PEBD__QEBAAEBQEBDXZ(const qvector<const char *> *__hidden this);
const bpt_t **__cdecl ?back_?$qvector_PEBUbpt_t____QEAAAEAPEBUbpt_t__XZ(qvector<const bpt_t *> *__hidden this);
const bpt_t **__cdecl ?back_?$qvector_PEBUbpt_t____QEBAAEBQEBUbpt_t__XZ(const qvector<const bpt_t *> *__hidden this);
const rangeset_t **__cdecl ?back_?$qvector_PEBVrangeset_t____QEAAAEAPEBVrangeset_t__XZ(qvector<const rangeset_t *> *__hidden this);
const rangeset_t **__cdecl ?back_?$qvector_PEBVrangeset_t____QEBAAEBQEBVrangeset_t__XZ(const qvector<const rangeset_t *> *__hidden this);
const twinline_t **__cdecl ?back_?$qvector_PEBVtwinline_t____QEAAAEAPEBVtwinline_t__XZ(qvector<const twinline_t *> *__hidden this);
const twinline_t **__cdecl ?back_?$qvector_PEBVtwinline_t____QEBAAEBQEBVtwinline_t__XZ(const qvector<const twinline_t *> *__hidden this);
argpart_t *__cdecl ?back_?$qvector_Uargpart_t____QEAAAEAUargpart_t__XZ(qvector<argpart_t> *__hidden this);
argpart_t *__cdecl ?back_?$qvector_Uargpart_t____QEBAAEBUargpart_t__XZ(const qvector<argpart_t> *__hidden this);
bpt_t *__cdecl ?back_?$qvector_Ubpt_t____QEAAAEAUbpt_t__XZ(qvector<bpt_t> *__hidden this);
bpt_t *__cdecl ?back_?$qvector_Ubpt_t____QEBAAEBUbpt_t__XZ(const qvector<bpt_t> *__hidden this);
bptaddrs_t *__cdecl ?back_?$qvector_Ubptaddrs_t____QEAAAEAUbptaddrs_t__XZ(qvector<bptaddrs_t> *__hidden this);
bptaddrs_t *__cdecl ?back_?$qvector_Ubptaddrs_t____QEBAAEBUbptaddrs_t__XZ(const qvector<bptaddrs_t> *__hidden this);
call_stack_info_t *__cdecl ?back_?$qvector_Ucall_stack_info_t____QEAAAEAUcall_stack_info_t__XZ(qvector<call_stack_info_t> *__hidden this);
call_stack_info_t *__cdecl ?back_?$qvector_Ucall_stack_info_t____QEBAAEBUcall_stack_info_t__XZ(const qvector<call_stack_info_t> *__hidden this);
catch_t *__cdecl ?back_?$qvector_Ucatch_t____QEAAAEAUcatch_t__XZ(qvector<catch_t> *__hidden this);
catch_t *__cdecl ?back_?$qvector_Ucatch_t____QEBAAEBUcatch_t__XZ(const qvector<catch_t> *__hidden this);
cfgopt_set_t *__cdecl ?back_?$qvector_Ucfgopt_set_t____QEAAAEAUcfgopt_set_t__XZ(qvector<cfgopt_set_t> *__hidden this);
cfgopt_set_t *__cdecl ?back_?$qvector_Ucfgopt_set_t____QEBAAEBUcfgopt_set_t__XZ(const qvector<cfgopt_set_t> *__hidden this);
channel_redir_t *__cdecl ?back_?$qvector_Uchannel_redir_t____QEAAAEAUchannel_redir_t__XZ(qvector<channel_redir_t> *__hidden this);
channel_redir_t *__cdecl ?back_?$qvector_Uchannel_redir_t____QEBAAEBUchannel_redir_t__XZ(const qvector<channel_redir_t> *__hidden this);
cliopt_t *__cdecl ?back_?$qvector_Ucliopt_t____QEAAAEAUcliopt_t__XZ(qvector<cliopt_t> *__hidden this);
cliopt_t *__cdecl ?back_?$qvector_Ucliopt_t____QEBAAEBUcliopt_t__XZ(const qvector<cliopt_t> *__hidden this);
compiled_binpat_t *__cdecl ?back_?$qvector_Ucompiled_binpat_t____QEAAAEAUcompiled_binpat_t__XZ(qvector<compiled_binpat_t> *__hidden this);
compiled_binpat_t *__cdecl ?back_?$qvector_Ucompiled_binpat_t____QEBAAEBUcompiled_binpat_t__XZ(const qvector<compiled_binpat_t> *__hidden this);
debug_event_t *__cdecl ?back_?$qvector_Udebug_event_t____QEAAAEAUdebug_event_t__XZ(qvector<debug_event_t> *__hidden this);
debug_event_t *__cdecl ?back_?$qvector_Udebug_event_t____QEBAAEBUdebug_event_t__XZ(const qvector<debug_event_t> *__hidden this);
direntry_t *__cdecl ?back_?$qvector_Udirentry_t____QEAAAEAUdirentry_t__XZ(qvector<direntry_t> *__hidden this);
direntry_t *__cdecl ?back_?$qvector_Udirentry_t____QEBAAEBUdirentry_t__XZ(const qvector<direntry_t> *__hidden this);
dirtree_cursor_t *__cdecl ?back_?$qvector_Udirtree_cursor_t____QEAAAEAUdirtree_cursor_t__XZ(qvector<dirtree_cursor_t> *__hidden this);
dirtree_cursor_t *__cdecl ?back_?$qvector_Udirtree_cursor_t____QEBAAEBUdirtree_cursor_t__XZ(const qvector<dirtree_cursor_t> *__hidden this);
ea_name_t *__cdecl ?back_?$qvector_Uea_name_t____QEAAAEAUea_name_t__XZ(qvector<ea_name_t> *__hidden this);
ea_name_t *__cdecl ?back_?$qvector_Uea_name_t____QEBAAEBUea_name_t__XZ(const qvector<ea_name_t> *__hidden this);
edge_t *__cdecl ?back_?$qvector_Uedge_t____QEAAAEAUedge_t__XZ(qvector<edge_t> *__hidden this);
edge_t *__cdecl ?back_?$qvector_Uedge_t____QEBAAEBUedge_t__XZ(const qvector<edge_t> *__hidden this);
enum_member_t *__cdecl ?back_?$qvector_Uenum_member_t____QEAAAEAUenum_member_t__XZ(qvector<enum_member_t> *__hidden this);
enum_member_t *__cdecl ?back_?$qvector_Uenum_member_t____QEBAAEBUenum_member_t__XZ(const qvector<enum_member_t> *__hidden this);
exception_info_t *__cdecl ?back_?$qvector_Uexception_info_t____QEAAAEAUexception_info_t__XZ(qvector<exception_info_t> *__hidden this);
exception_info_t *__cdecl ?back_?$qvector_Uexception_info_t____QEBAAEBUexception_info_t__XZ(const qvector<exception_info_t> *__hidden this);
fixup_info_t *__cdecl ?back_?$qvector_Ufixup_info_t____QEAAAEAUfixup_info_t__XZ(qvector<fixup_info_t> *__hidden this);
fixup_info_t *__cdecl ?back_?$qvector_Ufixup_info_t____QEBAAEBUfixup_info_t__XZ(const qvector<fixup_info_t> *__hidden this);
funcarg_t *__cdecl ?back_?$qvector_Ufuncarg_t____QEAAAEAUfuncarg_t__XZ(qvector<funcarg_t> *__hidden this);
funcarg_t *__cdecl ?back_?$qvector_Ufuncarg_t____QEBAAEBUfuncarg_t__XZ(const qvector<funcarg_t> *__hidden this);
group_crinfo_t *__cdecl ?back_?$qvector_Ugroup_crinfo_t____QEAAAEAUgroup_crinfo_t__XZ(qvector<group_crinfo_t> *__hidden this);
group_crinfo_t *__cdecl ?back_?$qvector_Ugroup_crinfo_t____QEBAAEBUgroup_crinfo_t__XZ(const qvector<group_crinfo_t> *__hidden this);
idc_global_t *__cdecl ?back_?$qvector_Uidc_global_t____QEAAAEAUidc_global_t__XZ(qvector<idc_global_t> *__hidden this);
idc_global_t *__cdecl ?back_?$qvector_Uidc_global_t____QEBAAEBUidc_global_t__XZ(const qvector<idc_global_t> *__hidden this);
idp_desc_t *__cdecl ?back_?$qvector_Uidp_desc_t____QEAAAEAUidp_desc_t__XZ(qvector<idp_desc_t> *__hidden this);
idp_desc_t *__cdecl ?back_?$qvector_Uidp_desc_t____QEBAAEBUidp_desc_t__XZ(const qvector<idp_desc_t> *__hidden this);
idp_name_t *__cdecl ?back_?$qvector_Uidp_name_t____QEAAAEAUidp_name_t__XZ(qvector<idp_name_t> *__hidden this);
idp_name_t *__cdecl ?back_?$qvector_Uidp_name_t____QEBAAEBUidp_name_t__XZ(const qvector<idp_name_t> *__hidden this);
ioport_bit_t *__cdecl ?back_?$qvector_Uioport_bit_t____QEAAAEAUioport_bit_t__XZ(qvector<ioport_bit_t> *__hidden this);
ioport_bit_t *__cdecl ?back_?$qvector_Uioport_bit_t____QEBAAEBUioport_bit_t__XZ(const qvector<ioport_bit_t> *__hidden this);
ioport_t *__cdecl ?back_?$qvector_Uioport_t____QEAAAEAUioport_t__XZ(qvector<ioport_t> *__hidden this);
ioport_t *__cdecl ?back_?$qvector_Uioport_t____QEBAAEBUioport_t__XZ(const qvector<ioport_t> *__hidden this);
jvalue_t *__cdecl ?back_?$qvector_Ujvalue_t____QEAAAEAUjvalue_t__XZ(qvector<jvalue_t> *__hidden this);
jvalue_t *__cdecl ?back_?$qvector_Ujvalue_t____QEBAAEBUjvalue_t__XZ(const qvector<jvalue_t> *__hidden this);
ida_syntax_highlighter_t::keywords_style_t *__cdecl ?back_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAAEAUkeywords_style_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
ida_syntax_highlighter_t::keywords_style_t *__cdecl ?back_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBAAEBUkeywords_style_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
kvp_t *__cdecl ?back_?$qvector_Ukvp_t____QEAAAEAUkvp_t__XZ(qvector<kvp_t> *__hidden this);
kvp_t *__cdecl ?back_?$qvector_Ukvp_t____QEBAAEBUkvp_t__XZ(const qvector<kvp_t> *__hidden this);
lochist_entry_t *__cdecl ?back_?$qvector_Ulochist_entry_t____QEAAAEAUlochist_entry_t__XZ(qvector<lochist_entry_t> *__hidden this);
lochist_entry_t *__cdecl ?back_?$qvector_Ulochist_entry_t____QEBAAEBUlochist_entry_t__XZ(const qvector<lochist_entry_t> *__hidden this);
lowcnd_t *__cdecl ?back_?$qvector_Ulowcnd_t____QEAAAEAUlowcnd_t__XZ(qvector<lowcnd_t> *__hidden this);
lowcnd_t *__cdecl ?back_?$qvector_Ulowcnd_t____QEBAAEBUlowcnd_t__XZ(const qvector<lowcnd_t> *__hidden this);
memory_info_t *__cdecl ?back_?$qvector_Umemory_info_t____QEAAAEAUmemory_info_t__XZ(qvector<memory_info_t> *__hidden this);
memory_info_t *__cdecl ?back_?$qvector_Umemory_info_t____QEBAAEBUmemory_info_t__XZ(const qvector<memory_info_t> *__hidden this);
memreg_info_t *__cdecl ?back_?$qvector_Umemreg_info_t____QEAAAEAUmemreg_info_t__XZ(qvector<memreg_info_t> *__hidden this);
memreg_info_t *__cdecl ?back_?$qvector_Umemreg_info_t____QEBAAEBUmemreg_info_t__XZ(const qvector<memreg_info_t> *__hidden this);
modinfo_t *__cdecl ?back_?$qvector_Umodinfo_t____QEAAAEAUmodinfo_t__XZ(qvector<modinfo_t> *__hidden this);
modinfo_t *__cdecl ?back_?$qvector_Umodinfo_t____QEBAAEBUmodinfo_t__XZ(const qvector<modinfo_t> *__hidden this);
movbpt_info_t *__cdecl ?back_?$qvector_Umovbpt_info_t____QEAAAEAUmovbpt_info_t__XZ(qvector<movbpt_info_t> *__hidden this);
movbpt_info_t *__cdecl ?back_?$qvector_Umovbpt_info_t____QEBAAEBUmovbpt_info_t__XZ(const qvector<movbpt_info_t> *__hidden this);
ida_syntax_highlighter_t::multicmt_t *__cdecl ?back_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAAEAUmulticmt_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
ida_syntax_highlighter_t::multicmt_t *__cdecl ?back_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBAAEBUmulticmt_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ?back_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAAEAUplain_char_ptr_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ?back_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBAAEBUplain_char_ptr_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
point_t *__cdecl ?back_?$qvector_Upoint_t____QEAAAEAUpoint_t__XZ(qvector<point_t> *__hidden this);
point_t *__cdecl ?back_?$qvector_Upoint_t____QEBAAEBUpoint_t__XZ(const qvector<point_t> *__hidden this);
process_info_t *__cdecl ?back_?$qvector_Uprocess_info_t____QEAAAEAUprocess_info_t__XZ(qvector<process_info_t> *__hidden this);
process_info_t *__cdecl ?back_?$qvector_Uprocess_info_t____QEBAAEBUprocess_info_t__XZ(const qvector<process_info_t> *__hidden this);
qbasic_block_t *__cdecl ?back_?$qvector_Uqbasic_block_t____QEAAAEAUqbasic_block_t__XZ(qvector<qbasic_block_t> *__hidden this);
qbasic_block_t *__cdecl ?back_?$qvector_Uqbasic_block_t____QEBAAEBUqbasic_block_t__XZ(const qvector<qbasic_block_t> *__hidden this);
range_t *__cdecl ?back_?$qvector_Urange_t____QEAAAEAUrange_t__XZ(qvector<range_t> *__hidden this);
range_t *__cdecl ?back_?$qvector_Urange_t____QEBAAEBUrange_t__XZ(const qvector<range_t> *__hidden this);
rect_t *__cdecl ?back_?$qvector_Urect_t____QEAAAEAUrect_t__XZ(qvector<rect_t> *__hidden this);
rect_t *__cdecl ?back_?$qvector_Urect_t____QEBAAEBUrect_t__XZ(const qvector<rect_t> *__hidden this);
refinfo_desc_t *__cdecl ?back_?$qvector_Urefinfo_desc_t____QEAAAEAUrefinfo_desc_t__XZ(qvector<refinfo_desc_t> *__hidden this);
refinfo_desc_t *__cdecl ?back_?$qvector_Urefinfo_desc_t____QEBAAEBUrefinfo_desc_t__XZ(const qvector<refinfo_desc_t> *__hidden this);
reg_access_t *__cdecl ?back_?$qvector_Ureg_access_t____QEAAAEAUreg_access_t__XZ(qvector<reg_access_t> *__hidden this);
reg_access_t *__cdecl ?back_?$qvector_Ureg_access_t____QEBAAEBUreg_access_t__XZ(const qvector<reg_access_t> *__hidden this);
reg_info_t *__cdecl ?back_?$qvector_Ureg_info_t____QEAAAEAUreg_info_t__XZ(qvector<reg_info_t> *__hidden this);
reg_info_t *__cdecl ?back_?$qvector_Ureg_info_t____QEBAAEBUreg_info_t__XZ(const qvector<reg_info_t> *__hidden this);
register_info_t *__cdecl ?back_?$qvector_Uregister_info_t____QEAAAEAUregister_info_t__XZ(qvector<register_info_t> *__hidden this);
register_info_t *__cdecl ?back_?$qvector_Uregister_info_t____QEBAAEBUregister_info_t__XZ(const qvector<register_info_t> *__hidden this);
regobj_t *__cdecl ?back_?$qvector_Uregobj_t____QEAAAEAUregobj_t__XZ(qvector<regobj_t> *__hidden this);
regobj_t *__cdecl ?back_?$qvector_Uregobj_t____QEBAAEBUregobj_t__XZ(const qvector<regobj_t> *__hidden this);
regval_t *__cdecl ?back_?$qvector_Uregval_t____QEAAAEAUregval_t__XZ(qvector<regval_t> *__hidden this);
regval_t *__cdecl ?back_?$qvector_Uregval_t____QEBAAEBUregval_t__XZ(const qvector<regval_t> *__hidden this);
row_info_t *__cdecl ?back_?$qvector_Urow_info_t____QEAAAEAUrow_info_t__XZ(qvector<row_info_t> *__hidden this);
row_info_t *__cdecl ?back_?$qvector_Urow_info_t____QEBAAEBUrow_info_t__XZ(const qvector<row_info_t> *__hidden this);
scattered_segm_t *__cdecl ?back_?$qvector_Uscattered_segm_t____QEAAAEAUscattered_segm_t__XZ(qvector<scattered_segm_t> *__hidden this);
scattered_segm_t *__cdecl ?back_?$qvector_Uscattered_segm_t____QEBAAEBUscattered_segm_t__XZ(const qvector<scattered_segm_t> *__hidden this);
segm_move_info_t *__cdecl ?back_?$qvector_Usegm_move_info_t____QEAAAEAUsegm_move_info_t__XZ(qvector<segm_move_info_t> *__hidden this);
segm_move_info_t *__cdecl ?back_?$qvector_Usegm_move_info_t____QEBAAEBUsegm_move_info_t__XZ(const qvector<segm_move_info_t> *__hidden this);
selection_item_t *__cdecl ?back_?$qvector_Uselection_item_t____QEAAAEAUselection_item_t__XZ(qvector<selection_item_t> *__hidden this);
selection_item_t *__cdecl ?back_?$qvector_Uselection_item_t____QEBAAEBUselection_item_t__XZ(const qvector<selection_item_t> *__hidden this);
simd_info_t *__cdecl ?back_?$qvector_Usimd_info_t____QEAAAEAUsimd_info_t__XZ(qvector<simd_info_t> *__hidden this);
simd_info_t *__cdecl ?back_?$qvector_Usimd_info_t____QEBAAEBUsimd_info_t__XZ(const qvector<simd_info_t> *__hidden this);
simpleline_t *__cdecl ?back_?$qvector_Usimpleline_t____QEAAAEAUsimpleline_t__XZ(qvector<simpleline_t> *__hidden this);
simpleline_t *__cdecl ?back_?$qvector_Usimpleline_t____QEBAAEBUsimpleline_t__XZ(const qvector<simpleline_t> *__hidden this);
stkpnt_t *__cdecl ?back_?$qvector_Ustkpnt_t____QEAAAEAUstkpnt_t__XZ(qvector<stkpnt_t> *__hidden this);
stkpnt_t *__cdecl ?back_?$qvector_Ustkpnt_t____QEBAAEBUstkpnt_t__XZ(const qvector<stkpnt_t> *__hidden this);
tev_info_reg_t *__cdecl ?back_?$qvector_Utev_info_reg_t____QEAAAEAUtev_info_reg_t__XZ(qvector<tev_info_reg_t> *__hidden this);
tev_info_reg_t *__cdecl ?back_?$qvector_Utev_info_reg_t____QEBAAEBUtev_info_reg_t__XZ(const qvector<tev_info_reg_t> *__hidden this);
tev_info_t *__cdecl ?back_?$qvector_Utev_info_t____QEAAAEAUtev_info_t__XZ(qvector<tev_info_t> *__hidden this);
tev_info_t *__cdecl ?back_?$qvector_Utev_info_t____QEBAAEBUtev_info_t__XZ(const qvector<tev_info_t> *__hidden this);
tev_reg_value_t *__cdecl ?back_?$qvector_Utev_reg_value_t____QEAAAEAUtev_reg_value_t__XZ(qvector<tev_reg_value_t> *__hidden this);
tev_reg_value_t *__cdecl ?back_?$qvector_Utev_reg_value_t____QEBAAEBUtev_reg_value_t__XZ(const qvector<tev_reg_value_t> *__hidden this);
thread_name_t *__cdecl ?back_?$qvector_Uthread_name_t____QEAAAEAUthread_name_t__XZ(qvector<thread_name_t> *__hidden this);
thread_name_t *__cdecl ?back_?$qvector_Uthread_name_t____QEBAAEBUthread_name_t__XZ(const qvector<thread_name_t> *__hidden this);
token_t *__cdecl ?back_?$qvector_Utoken_t____QEAAAEAUtoken_t__XZ(qvector<token_t> *__hidden this);
token_t *__cdecl ?back_?$qvector_Utoken_t____QEBAAEBUtoken_t__XZ(const qvector<token_t> *__hidden this);
type_attr_t *__cdecl ?back_?$qvector_Utype_attr_t____QEAAAEAUtype_attr_t__XZ(qvector<type_attr_t> *__hidden this);
type_attr_t *__cdecl ?back_?$qvector_Utype_attr_t____QEBAAEBUtype_attr_t__XZ(const qvector<type_attr_t> *__hidden this);
udt_member_t *__cdecl ?back_?$qvector_Uudt_member_t____QEAAAEAUudt_member_t__XZ(qvector<udt_member_t> *__hidden this);
udt_member_t *__cdecl ?back_?$qvector_Uudt_member_t____QEBAAEBUudt_member_t__XZ(const qvector<udt_member_t> *__hidden this);
update_bpt_info_t *__cdecl ?back_?$qvector_Uupdate_bpt_info_t____QEAAAEAUupdate_bpt_info_t__XZ(qvector<update_bpt_info_t> *__hidden this);
update_bpt_info_t *__cdecl ?back_?$qvector_Uupdate_bpt_info_t____QEBAAEBUupdate_bpt_info_t__XZ(const qvector<update_bpt_info_t> *__hidden this);
xreflist_entry_t *__cdecl ?back_?$qvector_Uxreflist_entry_t____QEAAAEAUxreflist_entry_t__XZ(qvector<xreflist_entry_t> *__hidden this);
xreflist_entry_t *__cdecl ?back_?$qvector_Uxreflist_entry_t____QEBAAEBUxreflist_entry_t__XZ(const qvector<xreflist_entry_t> *__hidden this);
_qstring<char> *__cdecl ?back_?$qvector_V?$_qstring_D____QEAAAEAV?$_qstring_D__XZ(qvector<_qstring<char>> *__hidden this);
_qstring<char> *__cdecl ?back_?$qvector_V?$_qstring_D____QEBAAEBV?$_qstring_D__XZ(const qvector<_qstring<char>> *__hidden this);
_qstring<unsigned char> *__cdecl ?back_?$qvector_V?$_qstring_E____QEAAAEAV?$_qstring_E__XZ(qvector<_qstring<unsigned char>> *__hidden this);
_qstring<unsigned char> *__cdecl ?back_?$qvector_V?$_qstring_E____QEBAAEBV?$_qstring_E__XZ(const qvector<_qstring<unsigned char>> *__hidden this);
_qstring<wchar_t> *__cdecl ?back_?$qvector_V?$_qstring__W____QEAAAEAV?$_qstring__W__XZ(qvector<_qstring<wchar_t>> *__hidden this);
_qstring<wchar_t> *__cdecl ?back_?$qvector_V?$_qstring__W____QEBAAEBV?$_qstring__W__XZ(const qvector<_qstring<wchar_t>> *__hidden this);
qrefcnt_t<source_item_t> *__cdecl ?back_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAAEAV?$qrefcnt_t_Vsource_item_t____XZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
qrefcnt_t<source_item_t> *__cdecl ?back_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBAAEBV?$qrefcnt_t_Vsource_item_t____XZ(const qvector<qrefcnt_t<source_item_t>> *__hidden this);
qvector<int> *__cdecl ?back_?$qvector_V?$qvector_H____QEAAAEAV?$qvector_H__XZ(qvector<qvector<int>> *__hidden this);
qvector<int> *__cdecl ?back_?$qvector_V?$qvector_H____QEBAAEBV?$qvector_H__XZ(const qvector<qvector<int>> *__hidden this);
qvector<const char *> *__cdecl ?back_?$qvector_V?$qvector_PEBD____QEAAAEAV?$qvector_PEBD__XZ(qvector<qvector<const char *>> *__hidden this);
qvector<const char *> *__cdecl ?back_?$qvector_V?$qvector_PEBD____QEBAAEBV?$qvector_PEBD__XZ(const qvector<qvector<const char *>> *__hidden this);
qvector<const twinline_t *> *__cdecl ?back_?$qvector_V?$qvector_PEBVtwinline_t______QEAAAEAV?$qvector_PEBVtwinline_t____XZ(qvector<qvector<const twinline_t *>> *__hidden this);
qvector<const twinline_t *> *__cdecl ?back_?$qvector_V?$qvector_PEBVtwinline_t______QEBAAEBV?$qvector_PEBVtwinline_t____XZ(const qvector<qvector<const twinline_t *>> *__hidden this);
qvector<long long> *__cdecl ?back_?$qvector_V?$qvector__J____QEAAAEAV?$qvector__J__XZ(qvector<qvector<long long>> *__hidden this);
qvector<long long> *__cdecl ?back_?$qvector_V?$qvector__J____QEBAAEBV?$qvector__J__XZ(const qvector<qvector<long long>> *__hidden this);
argloc_t *__cdecl ?back_?$qvector_Vargloc_t____QEAAAEAVargloc_t__XZ(qvector<argloc_t> *__hidden this);
argloc_t *__cdecl ?back_?$qvector_Vargloc_t____QEBAAEBVargloc_t__XZ(const qvector<argloc_t> *__hidden this);
intmap_t *__cdecl ?back_?$qvector_Vintmap_t____QEAAAEAVintmap_t__XZ(qvector<intmap_t> *__hidden this);
intmap_t *__cdecl ?back_?$qvector_Vintmap_t____QEBAAEBVintmap_t__XZ(const qvector<intmap_t> *__hidden this);
node_set_t *__cdecl ?back_?$qvector_Vnode_set_t____QEAAAEAVnode_set_t__XZ(qvector<node_set_t> *__hidden this);
node_set_t *__cdecl ?back_?$qvector_Vnode_set_t____QEBAAEBVnode_set_t__XZ(const qvector<node_set_t> *__hidden this);
op_t *__cdecl ?back_?$qvector_Vop_t____QEAAAEAVop_t__XZ(qvector<op_t> *__hidden this);
op_t *__cdecl ?back_?$qvector_Vop_t____QEBAAEBVop_t__XZ(const qvector<op_t> *__hidden this);
rangeset_t *__cdecl ?back_?$qvector_Vrangeset_t____QEAAAEAVrangeset_t__XZ(qvector<rangeset_t> *__hidden this);
rangeset_t *__cdecl ?back_?$qvector_Vrangeset_t____QEBAAEBVrangeset_t__XZ(const qvector<rangeset_t> *__hidden this);
sync_source_t *__cdecl ?back_?$qvector_Vsync_source_t____QEAAAEAVsync_source_t__XZ(qvector<sync_source_t> *__hidden this);
sync_source_t *__cdecl ?back_?$qvector_Vsync_source_t____QEBAAEBVsync_source_t__XZ(const qvector<sync_source_t> *__hidden this);
tinfo_t *__cdecl ?back_?$qvector_Vtinfo_t____QEAAAEAVtinfo_t__XZ(qvector<tinfo_t> *__hidden this);
tinfo_t *__cdecl ?back_?$qvector_Vtinfo_t____QEBAAEBVtinfo_t__XZ(const qvector<tinfo_t> *__hidden this);
tryblk_t *__cdecl ?back_?$qvector_Vtryblk_t____QEAAAEAVtryblk_t__XZ(qvector<tryblk_t> *__hidden this);
tryblk_t *__cdecl ?back_?$qvector_Vtryblk_t____QEBAAEBVtryblk_t__XZ(const qvector<tryblk_t> *__hidden this);
twinline_t *__cdecl ?back_?$qvector_Vtwinline_t____QEAAAEAVtwinline_t__XZ(qvector<twinline_t> *__hidden this);
twinline_t *__cdecl ?back_?$qvector_Vtwinline_t____QEBAAEBVtwinline_t__XZ(const qvector<twinline_t> *__hidden this);
valstr_t *__cdecl ?back_?$qvector_Vvalstr_t____QEAAAEAVvalstr_t__XZ(qvector<valstr_t> *__hidden this);
valstr_t *__cdecl ?back_?$qvector_Vvalstr_t____QEBAAEBVvalstr_t__XZ(const qvector<valstr_t> *__hidden this);
movbpt_code_t *__cdecl ?back_?$qvector_W4movbpt_code_t____QEAAAEAW4movbpt_code_t__XZ(qvector<movbpt_code_t> *__hidden this);
movbpt_code_t *__cdecl ?back_?$qvector_W4movbpt_code_t____QEBAAEBW4movbpt_code_t__XZ(const qvector<movbpt_code_t> *__hidden this);
__int64 *__cdecl ?back_?$qvector__J__QEAAAEA_JXZ(qvector<long long> *__hidden this);
__int64 *__cdecl ?back_?$qvector__J__QEBAAEB_JXZ(const qvector<long long> *__hidden this);
unsigned __int64 *__cdecl ?back_?$qvector__K__QEAAAEA_KXZ(qvector<unsigned long long> *__hidden this);
unsigned __int64 *__cdecl ?back_?$qvector__K__QEBAAEB_KXZ(const qvector<unsigned long long> *__hidden this);
bool *__cdecl ?back_?$qvector__N__QEAAAEA_NXZ(qvector<bool> *__hidden this);
bool *__cdecl ?back_?$qvector__N__QEBAAEB_NXZ(const qvector<bool> *__hidden this);
__int16 *__cdecl ?back_?$qvector__W__QEAAAEA_WXZ(qvector<wchar_t> *__hidden this);
__int16 *__cdecl ?back_?$qvector__W__QEBAAEB_WXZ(const qvector<wchar_t> *__hidden this);
bool __cdecl ?back_lochist_t__QEAA_NI_N_Z(lochist_t *__hidden this, uint32 cnt, bool try_to_unhide);
bool __cdecl ?bad_offset_argpart_t__QEBA_NXZ(const argpart_t *__hidden this);
bool __cdecl ?bad_size_argpart_t__QEBA_NXZ(const argpart_t *__hidden this);
bool __cdecl ?badbpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>> __cdecl ?base_?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_XZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>> __cdecl ?base_?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_XZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>> __cdecl ?base_?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_XZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>> __cdecl ?base_?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_XZ(const std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char>>> __cdecl ?base_?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___std__QEBA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_XZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>> __cdecl ?base_?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___std__QEBA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_XZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t>>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>> __cdecl ?base_?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___std__QEBA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_XZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t>>>> *__hidden this);
std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>> __cdecl ?base_?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___std__QEBA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_XZ(const std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>> __cdecl ?base_?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ?base_?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ?base_?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ?base_?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ?base_?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>> __cdecl ?base_?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___std__QEBA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>> __cdecl ?base_?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___std__QEBA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>> __cdecl ?base_?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___std__QEBA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this);
std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>> __cdecl ?base_?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___std__QEBA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(const std::reverse_iterator<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::iterator __cdecl ?begin_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator __cdecl ?begin_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::iterator __cdecl ?begin_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator __cdecl ?begin_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::iterator __cdecl ?begin_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator __cdecl ?begin_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::iterator __cdecl ?begin_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator __cdecl ?begin_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::iterator __cdecl ?begin_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_XZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator __cdecl ?begin_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
_qstring<char>::iterator __cdecl ?begin_?$_qstring_D__QEAAPEADXZ(_qstring<char> *__hidden this);
_qstring<char>::const_iterator __cdecl ?begin_?$_qstring_D__QEBAPEBDXZ(const _qstring<char> *__hidden this);
_qstring<unsigned char>::iterator __cdecl ?begin_?$_qstring_E__QEAAPEAEXZ(_qstring<unsigned char> *__hidden this);
_qstring<unsigned char>::const_iterator __cdecl ?begin_?$_qstring_E__QEBAPEBEXZ(const _qstring<unsigned char> *__hidden this);
_qstring<wchar_t>::iterator __cdecl ?begin_?$_qstring__W__QEAAPEA_WXZ(_qstring<wchar_t> *__hidden this);
_qstring<wchar_t>::const_iterator __cdecl ?begin_?$_qstring__W__QEBAPEB_WXZ(const _qstring<wchar_t> *__hidden this);
std::basic_string<char>::iterator __cdecl ?begin_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_XZ(std::basic_string<char> *__hidden this);
std::basic_string<char>::const_iterator __cdecl ?begin_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_XZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::iterator __cdecl ?begin_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_XZ(std::basic_string<char16_t> *__hidden this);
std::basic_string<char16_t>::const_iterator __cdecl ?begin_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_XZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::iterator __cdecl ?begin_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_XZ(std::basic_string<char32_t> *__hidden this);
std::basic_string<char32_t>::const_iterator __cdecl ?begin_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_XZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::iterator __cdecl ?begin_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_XZ(std::basic_string<wchar_t> *__hidden this);
std::basic_string<wchar_t>::const_iterator __cdecl ?begin_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_XZ(const std::basic_string<wchar_t> *__hidden this);
char *__cdecl ?begin_?$initializer_list_D_std__QEBAPEBDXZ(const std::initializer_list<char> *__hidden this);
int *__cdecl ?begin_?$initializer_list_H_std__QEBAPEBHXZ(const std::initializer_list<int> *__hidden this);
std::pair<const int, int> *__cdecl ?begin_?$initializer_list_U?$pair_$$CBHH_std___std__QEBAPEBU?$pair_$$CBHH_2_XZ(const std::initializer_list<std::pair<const int, int>> *__hidden this);
std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ?begin_?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEBAPEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____2_XZ(const std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this);
std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ?begin_?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEBAPEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____2_XZ(const std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this);
std::pair<const unsigned long long, unsigned long long> *__cdecl ?begin_?$initializer_list_U?$pair_$$CB_K_K_std___std__QEBAPEBU?$pair_$$CB_K_K_2_XZ(const std::initializer_list<std::pair<const unsigned long long, unsigned long long>> *__hidden this);
__int16 *__cdecl ?begin_?$initializer_list__S_std__QEBAPEB_SXZ(const std::initializer_list<char16_t> *__hidden this);
__int32 *__cdecl ?begin_?$initializer_list__U_std__QEBAPEB_UXZ(const std::initializer_list<char32_t> *__hidden this);
__int16 *__cdecl ?begin_?$initializer_list__W_std__QEBAPEB_WXZ(const std::initializer_list<wchar_t> *__hidden this);
qlist<ui_request_t *>::iterator __cdecl ?begin_?$qlist_PEAVui_request_t____QEAA?AViterator_1_XZ(qlist<ui_request_t *> *__hidden this);
qlist<ui_request_t *>::const_iterator __cdecl ?begin_?$qlist_PEAVui_request_t____QEBA?AVconst_iterator_1_XZ(const qlist<ui_request_t *> *__hidden this);
qvector<char>::iterator __cdecl ?begin_?$qvector_D__QEAAPEADXZ(qvector<char> *__hidden this);
qvector<char>::const_iterator __cdecl ?begin_?$qvector_D__QEBAPEBDXZ(const qvector<char> *__hidden this);
qvector<unsigned char>::iterator __cdecl ?begin_?$qvector_E__QEAAPEAEXZ(qvector<unsigned char> *__hidden this);
qvector<unsigned char>::const_iterator __cdecl ?begin_?$qvector_E__QEBAPEBEXZ(const qvector<unsigned char> *__hidden this);
qvector<int>::iterator __cdecl ?begin_?$qvector_H__QEAAPEAHXZ(qvector<int> *__hidden this);
qvector<int>::const_iterator __cdecl ?begin_?$qvector_H__QEBAPEBHXZ(const qvector<int> *__hidden this);
qvector<unsigned int>::iterator __cdecl ?begin_?$qvector_I__QEAAPEAIXZ(qvector<unsigned int> *__hidden this);
qvector<unsigned int>::const_iterator __cdecl ?begin_?$qvector_I__QEBAPEBIXZ(const qvector<unsigned int> *__hidden this);
qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator __cdecl ?begin_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAPEAP6A_JPEAW4syntax_highlight_style__PEBD_ZXZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
qvector<long long (*)(syntax_highlight_style *, const char *)>::const_iterator __cdecl ?begin_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBAPEBQ6A_JPEAW4syntax_highlight_style__PEBD_ZXZ(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator __cdecl ?begin_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAPEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZXZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::const_iterator __cdecl ?begin_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBAPEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZXZ(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
qvector<bpt_t *>::iterator __cdecl ?begin_?$qvector_PEAUbpt_t____QEAAPEAPEAUbpt_t__XZ(qvector<bpt_t *> *__hidden this);
qvector<bpt_t *>::const_iterator __cdecl ?begin_?$qvector_PEAUbpt_t____QEBAPEBQEAUbpt_t__XZ(const qvector<bpt_t *> *__hidden this);
qvector<extlang_t *>::iterator __cdecl ?begin_?$qvector_PEAUextlang_t____QEAAPEAPEAUextlang_t__XZ(qvector<extlang_t *> *__hidden this);
qvector<extlang_t *>::const_iterator __cdecl ?begin_?$qvector_PEAUextlang_t____QEBAPEBQEAUextlang_t__XZ(const qvector<extlang_t *> *__hidden this);
qvector<line_rendering_output_entry_t *>::iterator __cdecl ?begin_?$qvector_PEAUline_rendering_output_entry_t____QEAAPEAPEAUline_rendering_output_entry_t__XZ(qvector<line_rendering_output_entry_t *> *__hidden this);
qvector<line_rendering_output_entry_t *>::const_iterator __cdecl ?begin_?$qvector_PEAUline_rendering_output_entry_t____QEBAPEBQEAUline_rendering_output_entry_t__XZ(const qvector<line_rendering_output_entry_t *> *__hidden this);
qvector<snapshot_t *>::iterator __cdecl ?begin_?$qvector_PEAVsnapshot_t____QEAAPEAPEAVsnapshot_t__XZ(qvector<snapshot_t *> *__hidden this);
qvector<snapshot_t *>::const_iterator __cdecl ?begin_?$qvector_PEAVsnapshot_t____QEBAPEBQEAVsnapshot_t__XZ(const qvector<snapshot_t *> *__hidden this);
qvector<const char *>::iterator __cdecl ?begin_?$qvector_PEBD__QEAAPEAPEBDXZ(qvector<const char *> *__hidden this);
qvector<const char *>::const_iterator __cdecl ?begin_?$qvector_PEBD__QEBAPEBQEBDXZ(const qvector<const char *> *__hidden this);
qvector<const bpt_t *>::iterator __cdecl ?begin_?$qvector_PEBUbpt_t____QEAAPEAPEBUbpt_t__XZ(qvector<const bpt_t *> *__hidden this);
qvector<const bpt_t *>::const_iterator __cdecl ?begin_?$qvector_PEBUbpt_t____QEBAPEBQEBUbpt_t__XZ(const qvector<const bpt_t *> *__hidden this);
qvector<const rangeset_t *>::iterator __cdecl ?begin_?$qvector_PEBVrangeset_t____QEAAPEAPEBVrangeset_t__XZ(qvector<const rangeset_t *> *__hidden this);
qvector<const rangeset_t *>::const_iterator __cdecl ?begin_?$qvector_PEBVrangeset_t____QEBAPEBQEBVrangeset_t__XZ(const qvector<const rangeset_t *> *__hidden this);
qvector<const twinline_t *>::iterator __cdecl ?begin_?$qvector_PEBVtwinline_t____QEAAPEAPEBVtwinline_t__XZ(qvector<const twinline_t *> *__hidden this);
qvector<const twinline_t *>::const_iterator __cdecl ?begin_?$qvector_PEBVtwinline_t____QEBAPEBQEBVtwinline_t__XZ(const qvector<const twinline_t *> *__hidden this);
qvector<argpart_t>::iterator __cdecl ?begin_?$qvector_Uargpart_t____QEAAPEAUargpart_t__XZ(qvector<argpart_t> *__hidden this);
qvector<argpart_t>::const_iterator __cdecl ?begin_?$qvector_Uargpart_t____QEBAPEBUargpart_t__XZ(const qvector<argpart_t> *__hidden this);
qvector<bpt_t>::iterator __cdecl ?begin_?$qvector_Ubpt_t____QEAAPEAUbpt_t__XZ(qvector<bpt_t> *__hidden this);
qvector<bpt_t>::const_iterator __cdecl ?begin_?$qvector_Ubpt_t____QEBAPEBUbpt_t__XZ(const qvector<bpt_t> *__hidden this);
qvector<bptaddrs_t>::iterator __cdecl ?begin_?$qvector_Ubptaddrs_t____QEAAPEAUbptaddrs_t__XZ(qvector<bptaddrs_t> *__hidden this);
qvector<bptaddrs_t>::const_iterator __cdecl ?begin_?$qvector_Ubptaddrs_t____QEBAPEBUbptaddrs_t__XZ(const qvector<bptaddrs_t> *__hidden this);
qvector<call_stack_info_t>::iterator __cdecl ?begin_?$qvector_Ucall_stack_info_t____QEAAPEAUcall_stack_info_t__XZ(qvector<call_stack_info_t> *__hidden this);
qvector<call_stack_info_t>::const_iterator __cdecl ?begin_?$qvector_Ucall_stack_info_t____QEBAPEBUcall_stack_info_t__XZ(const qvector<call_stack_info_t> *__hidden this);
qvector<catch_t>::iterator __cdecl ?begin_?$qvector_Ucatch_t____QEAAPEAUcatch_t__XZ(qvector<catch_t> *__hidden this);
qvector<catch_t>::const_iterator __cdecl ?begin_?$qvector_Ucatch_t____QEBAPEBUcatch_t__XZ(const qvector<catch_t> *__hidden this);
qvector<cfgopt_set_t>::iterator __cdecl ?begin_?$qvector_Ucfgopt_set_t____QEAAPEAUcfgopt_set_t__XZ(qvector<cfgopt_set_t> *__hidden this);
qvector<cfgopt_set_t>::const_iterator __cdecl ?begin_?$qvector_Ucfgopt_set_t____QEBAPEBUcfgopt_set_t__XZ(const qvector<cfgopt_set_t> *__hidden this);
qvector<channel_redir_t>::iterator __cdecl ?begin_?$qvector_Uchannel_redir_t____QEAAPEAUchannel_redir_t__XZ(qvector<channel_redir_t> *__hidden this);
qvector<channel_redir_t>::const_iterator __cdecl ?begin_?$qvector_Uchannel_redir_t____QEBAPEBUchannel_redir_t__XZ(const qvector<channel_redir_t> *__hidden this);
qvector<cliopt_t>::iterator __cdecl ?begin_?$qvector_Ucliopt_t____QEAAPEAUcliopt_t__XZ(qvector<cliopt_t> *__hidden this);
qvector<cliopt_t>::const_iterator __cdecl ?begin_?$qvector_Ucliopt_t____QEBAPEBUcliopt_t__XZ(const qvector<cliopt_t> *__hidden this);
qvector<compiled_binpat_t>::iterator __cdecl ?begin_?$qvector_Ucompiled_binpat_t____QEAAPEAUcompiled_binpat_t__XZ(qvector<compiled_binpat_t> *__hidden this);
qvector<compiled_binpat_t>::const_iterator __cdecl ?begin_?$qvector_Ucompiled_binpat_t____QEBAPEBUcompiled_binpat_t__XZ(const qvector<compiled_binpat_t> *__hidden this);
qvector<debug_event_t>::iterator __cdecl ?begin_?$qvector_Udebug_event_t____QEAAPEAUdebug_event_t__XZ(qvector<debug_event_t> *__hidden this);
qvector<debug_event_t>::const_iterator __cdecl ?begin_?$qvector_Udebug_event_t____QEBAPEBUdebug_event_t__XZ(const qvector<debug_event_t> *__hidden this);
qvector<direntry_t>::iterator __cdecl ?begin_?$qvector_Udirentry_t____QEAAPEAUdirentry_t__XZ(qvector<direntry_t> *__hidden this);
qvector<direntry_t>::const_iterator __cdecl ?begin_?$qvector_Udirentry_t____QEBAPEBUdirentry_t__XZ(const qvector<direntry_t> *__hidden this);
qvector<dirtree_cursor_t>::iterator __cdecl ?begin_?$qvector_Udirtree_cursor_t____QEAAPEAUdirtree_cursor_t__XZ(qvector<dirtree_cursor_t> *__hidden this);
qvector<dirtree_cursor_t>::const_iterator __cdecl ?begin_?$qvector_Udirtree_cursor_t____QEBAPEBUdirtree_cursor_t__XZ(const qvector<dirtree_cursor_t> *__hidden this);
qvector<ea_name_t>::iterator __cdecl ?begin_?$qvector_Uea_name_t____QEAAPEAUea_name_t__XZ(qvector<ea_name_t> *__hidden this);
qvector<ea_name_t>::const_iterator __cdecl ?begin_?$qvector_Uea_name_t____QEBAPEBUea_name_t__XZ(const qvector<ea_name_t> *__hidden this);
qvector<edge_t>::iterator __cdecl ?begin_?$qvector_Uedge_t____QEAAPEAUedge_t__XZ(qvector<edge_t> *__hidden this);
qvector<edge_t>::const_iterator __cdecl ?begin_?$qvector_Uedge_t____QEBAPEBUedge_t__XZ(const qvector<edge_t> *__hidden this);
qvector<enum_member_t>::iterator __cdecl ?begin_?$qvector_Uenum_member_t____QEAAPEAUenum_member_t__XZ(qvector<enum_member_t> *__hidden this);
qvector<enum_member_t>::const_iterator __cdecl ?begin_?$qvector_Uenum_member_t____QEBAPEBUenum_member_t__XZ(const qvector<enum_member_t> *__hidden this);
qvector<exception_info_t>::iterator __cdecl ?begin_?$qvector_Uexception_info_t____QEAAPEAUexception_info_t__XZ(qvector<exception_info_t> *__hidden this);
qvector<exception_info_t>::const_iterator __cdecl ?begin_?$qvector_Uexception_info_t____QEBAPEBUexception_info_t__XZ(const qvector<exception_info_t> *__hidden this);
qvector<fixup_info_t>::iterator __cdecl ?begin_?$qvector_Ufixup_info_t____QEAAPEAUfixup_info_t__XZ(qvector<fixup_info_t> *__hidden this);
qvector<fixup_info_t>::const_iterator __cdecl ?begin_?$qvector_Ufixup_info_t____QEBAPEBUfixup_info_t__XZ(const qvector<fixup_info_t> *__hidden this);
qvector<funcarg_t>::iterator __cdecl ?begin_?$qvector_Ufuncarg_t____QEAAPEAUfuncarg_t__XZ(qvector<funcarg_t> *__hidden this);
qvector<funcarg_t>::const_iterator __cdecl ?begin_?$qvector_Ufuncarg_t____QEBAPEBUfuncarg_t__XZ(const qvector<funcarg_t> *__hidden this);
qvector<group_crinfo_t>::iterator __cdecl ?begin_?$qvector_Ugroup_crinfo_t____QEAAPEAUgroup_crinfo_t__XZ(qvector<group_crinfo_t> *__hidden this);
qvector<group_crinfo_t>::const_iterator __cdecl ?begin_?$qvector_Ugroup_crinfo_t____QEBAPEBUgroup_crinfo_t__XZ(const qvector<group_crinfo_t> *__hidden this);
qvector<idc_global_t>::iterator __cdecl ?begin_?$qvector_Uidc_global_t____QEAAPEAUidc_global_t__XZ(qvector<idc_global_t> *__hidden this);
qvector<idc_global_t>::const_iterator __cdecl ?begin_?$qvector_Uidc_global_t____QEBAPEBUidc_global_t__XZ(const qvector<idc_global_t> *__hidden this);
qvector<idp_desc_t>::iterator __cdecl ?begin_?$qvector_Uidp_desc_t____QEAAPEAUidp_desc_t__XZ(qvector<idp_desc_t> *__hidden this);
qvector<idp_desc_t>::const_iterator __cdecl ?begin_?$qvector_Uidp_desc_t____QEBAPEBUidp_desc_t__XZ(const qvector<idp_desc_t> *__hidden this);
qvector<idp_name_t>::iterator __cdecl ?begin_?$qvector_Uidp_name_t____QEAAPEAUidp_name_t__XZ(qvector<idp_name_t> *__hidden this);
qvector<idp_name_t>::const_iterator __cdecl ?begin_?$qvector_Uidp_name_t____QEBAPEBUidp_name_t__XZ(const qvector<idp_name_t> *__hidden this);
qvector<ioport_bit_t>::iterator __cdecl ?begin_?$qvector_Uioport_bit_t____QEAAPEAUioport_bit_t__XZ(qvector<ioport_bit_t> *__hidden this);
qvector<ioport_bit_t>::const_iterator __cdecl ?begin_?$qvector_Uioport_bit_t____QEBAPEBUioport_bit_t__XZ(const qvector<ioport_bit_t> *__hidden this);
qvector<ioport_t>::iterator __cdecl ?begin_?$qvector_Uioport_t____QEAAPEAUioport_t__XZ(qvector<ioport_t> *__hidden this);
qvector<ioport_t>::const_iterator __cdecl ?begin_?$qvector_Uioport_t____QEBAPEBUioport_t__XZ(const qvector<ioport_t> *__hidden this);
qvector<jvalue_t>::iterator __cdecl ?begin_?$qvector_Ujvalue_t____QEAAPEAUjvalue_t__XZ(qvector<jvalue_t> *__hidden this);
qvector<jvalue_t>::const_iterator __cdecl ?begin_?$qvector_Ujvalue_t____QEBAPEBUjvalue_t__XZ(const qvector<jvalue_t> *__hidden this);
qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator __cdecl ?begin_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAPEAUkeywords_style_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
qvector<ida_syntax_highlighter_t::keywords_style_t>::const_iterator __cdecl ?begin_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBAPEBUkeywords_style_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
qvector<kvp_t>::iterator __cdecl ?begin_?$qvector_Ukvp_t____QEAAPEAUkvp_t__XZ(qvector<kvp_t> *__hidden this);
qvector<kvp_t>::const_iterator __cdecl ?begin_?$qvector_Ukvp_t____QEBAPEBUkvp_t__XZ(const qvector<kvp_t> *__hidden this);
qvector<lochist_entry_t>::iterator __cdecl ?begin_?$qvector_Ulochist_entry_t____QEAAPEAUlochist_entry_t__XZ(qvector<lochist_entry_t> *__hidden this);
qvector<lochist_entry_t>::const_iterator __cdecl ?begin_?$qvector_Ulochist_entry_t____QEBAPEBUlochist_entry_t__XZ(const qvector<lochist_entry_t> *__hidden this);
qvector<lowcnd_t>::iterator __cdecl ?begin_?$qvector_Ulowcnd_t____QEAAPEAUlowcnd_t__XZ(qvector<lowcnd_t> *__hidden this);
qvector<lowcnd_t>::const_iterator __cdecl ?begin_?$qvector_Ulowcnd_t____QEBAPEBUlowcnd_t__XZ(const qvector<lowcnd_t> *__hidden this);
qvector<memory_info_t>::iterator __cdecl ?begin_?$qvector_Umemory_info_t____QEAAPEAUmemory_info_t__XZ(qvector<memory_info_t> *__hidden this);
qvector<memory_info_t>::const_iterator __cdecl ?begin_?$qvector_Umemory_info_t____QEBAPEBUmemory_info_t__XZ(const qvector<memory_info_t> *__hidden this);
qvector<memreg_info_t>::iterator __cdecl ?begin_?$qvector_Umemreg_info_t____QEAAPEAUmemreg_info_t__XZ(qvector<memreg_info_t> *__hidden this);
qvector<memreg_info_t>::const_iterator __cdecl ?begin_?$qvector_Umemreg_info_t____QEBAPEBUmemreg_info_t__XZ(const qvector<memreg_info_t> *__hidden this);
qvector<modinfo_t>::iterator __cdecl ?begin_?$qvector_Umodinfo_t____QEAAPEAUmodinfo_t__XZ(qvector<modinfo_t> *__hidden this);
qvector<modinfo_t>::const_iterator __cdecl ?begin_?$qvector_Umodinfo_t____QEBAPEBUmodinfo_t__XZ(const qvector<modinfo_t> *__hidden this);
qvector<movbpt_info_t>::iterator __cdecl ?begin_?$qvector_Umovbpt_info_t____QEAAPEAUmovbpt_info_t__XZ(qvector<movbpt_info_t> *__hidden this);
qvector<movbpt_info_t>::const_iterator __cdecl ?begin_?$qvector_Umovbpt_info_t____QEBAPEBUmovbpt_info_t__XZ(const qvector<movbpt_info_t> *__hidden this);
qvector<ida_syntax_highlighter_t::multicmt_t>::iterator __cdecl ?begin_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAPEAUmulticmt_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
qvector<ida_syntax_highlighter_t::multicmt_t>::const_iterator __cdecl ?begin_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBAPEBUmulticmt_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator __cdecl ?begin_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAPEAUplain_char_ptr_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::const_iterator __cdecl ?begin_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBAPEBUplain_char_ptr_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
qvector<point_t>::iterator __cdecl ?begin_?$qvector_Upoint_t____QEAAPEAUpoint_t__XZ(qvector<point_t> *__hidden this);
qvector<point_t>::const_iterator __cdecl ?begin_?$qvector_Upoint_t____QEBAPEBUpoint_t__XZ(const qvector<point_t> *__hidden this);
qvector<process_info_t>::iterator __cdecl ?begin_?$qvector_Uprocess_info_t____QEAAPEAUprocess_info_t__XZ(qvector<process_info_t> *__hidden this);
qvector<process_info_t>::const_iterator __cdecl ?begin_?$qvector_Uprocess_info_t____QEBAPEBUprocess_info_t__XZ(const qvector<process_info_t> *__hidden this);
qvector<qbasic_block_t>::iterator __cdecl ?begin_?$qvector_Uqbasic_block_t____QEAAPEAUqbasic_block_t__XZ(qvector<qbasic_block_t> *__hidden this);
qvector<qbasic_block_t>::const_iterator __cdecl ?begin_?$qvector_Uqbasic_block_t____QEBAPEBUqbasic_block_t__XZ(const qvector<qbasic_block_t> *__hidden this);
qvector<range_t>::iterator __cdecl ?begin_?$qvector_Urange_t____QEAAPEAUrange_t__XZ(qvector<range_t> *__hidden this);
qvector<range_t>::const_iterator __cdecl ?begin_?$qvector_Urange_t____QEBAPEBUrange_t__XZ(const qvector<range_t> *__hidden this);
qvector<rect_t>::iterator __cdecl ?begin_?$qvector_Urect_t____QEAAPEAUrect_t__XZ(qvector<rect_t> *__hidden this);
qvector<rect_t>::const_iterator __cdecl ?begin_?$qvector_Urect_t____QEBAPEBUrect_t__XZ(const qvector<rect_t> *__hidden this);
qvector<refinfo_desc_t>::iterator __cdecl ?begin_?$qvector_Urefinfo_desc_t____QEAAPEAUrefinfo_desc_t__XZ(qvector<refinfo_desc_t> *__hidden this);
qvector<refinfo_desc_t>::const_iterator __cdecl ?begin_?$qvector_Urefinfo_desc_t____QEBAPEBUrefinfo_desc_t__XZ(const qvector<refinfo_desc_t> *__hidden this);
qvector<reg_access_t>::iterator __cdecl ?begin_?$qvector_Ureg_access_t____QEAAPEAUreg_access_t__XZ(qvector<reg_access_t> *__hidden this);
qvector<reg_access_t>::const_iterator __cdecl ?begin_?$qvector_Ureg_access_t____QEBAPEBUreg_access_t__XZ(const qvector<reg_access_t> *__hidden this);
qvector<reg_info_t>::iterator __cdecl ?begin_?$qvector_Ureg_info_t____QEAAPEAUreg_info_t__XZ(qvector<reg_info_t> *__hidden this);
qvector<reg_info_t>::const_iterator __cdecl ?begin_?$qvector_Ureg_info_t____QEBAPEBUreg_info_t__XZ(const qvector<reg_info_t> *__hidden this);
qvector<register_info_t>::iterator __cdecl ?begin_?$qvector_Uregister_info_t____QEAAPEAUregister_info_t__XZ(qvector<register_info_t> *__hidden this);
qvector<register_info_t>::const_iterator __cdecl ?begin_?$qvector_Uregister_info_t____QEBAPEBUregister_info_t__XZ(const qvector<register_info_t> *__hidden this);
qvector<regobj_t>::iterator __cdecl ?begin_?$qvector_Uregobj_t____QEAAPEAUregobj_t__XZ(qvector<regobj_t> *__hidden this);
qvector<regobj_t>::const_iterator __cdecl ?begin_?$qvector_Uregobj_t____QEBAPEBUregobj_t__XZ(const qvector<regobj_t> *__hidden this);
qvector<regval_t>::iterator __cdecl ?begin_?$qvector_Uregval_t____QEAAPEAUregval_t__XZ(qvector<regval_t> *__hidden this);
qvector<regval_t>::const_iterator __cdecl ?begin_?$qvector_Uregval_t____QEBAPEBUregval_t__XZ(const qvector<regval_t> *__hidden this);
qvector<row_info_t>::iterator __cdecl ?begin_?$qvector_Urow_info_t____QEAAPEAUrow_info_t__XZ(qvector<row_info_t> *__hidden this);
qvector<row_info_t>::const_iterator __cdecl ?begin_?$qvector_Urow_info_t____QEBAPEBUrow_info_t__XZ(const qvector<row_info_t> *__hidden this);
qvector<scattered_segm_t>::iterator __cdecl ?begin_?$qvector_Uscattered_segm_t____QEAAPEAUscattered_segm_t__XZ(qvector<scattered_segm_t> *__hidden this);
qvector<scattered_segm_t>::const_iterator __cdecl ?begin_?$qvector_Uscattered_segm_t____QEBAPEBUscattered_segm_t__XZ(const qvector<scattered_segm_t> *__hidden this);
qvector<segm_move_info_t>::iterator __cdecl ?begin_?$qvector_Usegm_move_info_t____QEAAPEAUsegm_move_info_t__XZ(qvector<segm_move_info_t> *__hidden this);
qvector<segm_move_info_t>::const_iterator __cdecl ?begin_?$qvector_Usegm_move_info_t____QEBAPEBUsegm_move_info_t__XZ(const qvector<segm_move_info_t> *__hidden this);
qvector<selection_item_t>::iterator __cdecl ?begin_?$qvector_Uselection_item_t____QEAAPEAUselection_item_t__XZ(qvector<selection_item_t> *__hidden this);
qvector<selection_item_t>::const_iterator __cdecl ?begin_?$qvector_Uselection_item_t____QEBAPEBUselection_item_t__XZ(const qvector<selection_item_t> *__hidden this);
qvector<simd_info_t>::iterator __cdecl ?begin_?$qvector_Usimd_info_t____QEAAPEAUsimd_info_t__XZ(qvector<simd_info_t> *__hidden this);
qvector<simd_info_t>::const_iterator __cdecl ?begin_?$qvector_Usimd_info_t____QEBAPEBUsimd_info_t__XZ(const qvector<simd_info_t> *__hidden this);
qvector<simpleline_t>::iterator __cdecl ?begin_?$qvector_Usimpleline_t____QEAAPEAUsimpleline_t__XZ(qvector<simpleline_t> *__hidden this);
qvector<simpleline_t>::const_iterator __cdecl ?begin_?$qvector_Usimpleline_t____QEBAPEBUsimpleline_t__XZ(const qvector<simpleline_t> *__hidden this);
qvector<stkpnt_t>::iterator __cdecl ?begin_?$qvector_Ustkpnt_t____QEAAPEAUstkpnt_t__XZ(qvector<stkpnt_t> *__hidden this);
qvector<stkpnt_t>::const_iterator __cdecl ?begin_?$qvector_Ustkpnt_t____QEBAPEBUstkpnt_t__XZ(const qvector<stkpnt_t> *__hidden this);
qvector<tev_info_reg_t>::iterator __cdecl ?begin_?$qvector_Utev_info_reg_t____QEAAPEAUtev_info_reg_t__XZ(qvector<tev_info_reg_t> *__hidden this);
qvector<tev_info_reg_t>::const_iterator __cdecl ?begin_?$qvector_Utev_info_reg_t____QEBAPEBUtev_info_reg_t__XZ(const qvector<tev_info_reg_t> *__hidden this);
qvector<tev_info_t>::iterator __cdecl ?begin_?$qvector_Utev_info_t____QEAAPEAUtev_info_t__XZ(qvector<tev_info_t> *__hidden this);
qvector<tev_info_t>::const_iterator __cdecl ?begin_?$qvector_Utev_info_t____QEBAPEBUtev_info_t__XZ(const qvector<tev_info_t> *__hidden this);
qvector<tev_reg_value_t>::iterator __cdecl ?begin_?$qvector_Utev_reg_value_t____QEAAPEAUtev_reg_value_t__XZ(qvector<tev_reg_value_t> *__hidden this);
qvector<tev_reg_value_t>::const_iterator __cdecl ?begin_?$qvector_Utev_reg_value_t____QEBAPEBUtev_reg_value_t__XZ(const qvector<tev_reg_value_t> *__hidden this);
qvector<thread_name_t>::iterator __cdecl ?begin_?$qvector_Uthread_name_t____QEAAPEAUthread_name_t__XZ(qvector<thread_name_t> *__hidden this);
qvector<thread_name_t>::const_iterator __cdecl ?begin_?$qvector_Uthread_name_t____QEBAPEBUthread_name_t__XZ(const qvector<thread_name_t> *__hidden this);
qvector<token_t>::iterator __cdecl ?begin_?$qvector_Utoken_t____QEAAPEAUtoken_t__XZ(qvector<token_t> *__hidden this);
qvector<token_t>::const_iterator __cdecl ?begin_?$qvector_Utoken_t____QEBAPEBUtoken_t__XZ(const qvector<token_t> *__hidden this);
qvector<type_attr_t>::iterator __cdecl ?begin_?$qvector_Utype_attr_t____QEAAPEAUtype_attr_t__XZ(qvector<type_attr_t> *__hidden this);
qvector<type_attr_t>::const_iterator __cdecl ?begin_?$qvector_Utype_attr_t____QEBAPEBUtype_attr_t__XZ(const qvector<type_attr_t> *__hidden this);
qvector<udt_member_t>::iterator __cdecl ?begin_?$qvector_Uudt_member_t____QEAAPEAUudt_member_t__XZ(qvector<udt_member_t> *__hidden this);
qvector<udt_member_t>::const_iterator __cdecl ?begin_?$qvector_Uudt_member_t____QEBAPEBUudt_member_t__XZ(const qvector<udt_member_t> *__hidden this);
qvector<update_bpt_info_t>::iterator __cdecl ?begin_?$qvector_Uupdate_bpt_info_t____QEAAPEAUupdate_bpt_info_t__XZ(qvector<update_bpt_info_t> *__hidden this);
qvector<update_bpt_info_t>::const_iterator __cdecl ?begin_?$qvector_Uupdate_bpt_info_t____QEBAPEBUupdate_bpt_info_t__XZ(const qvector<update_bpt_info_t> *__hidden this);
qvector<xreflist_entry_t>::iterator __cdecl ?begin_?$qvector_Uxreflist_entry_t____QEAAPEAUxreflist_entry_t__XZ(qvector<xreflist_entry_t> *__hidden this);
qvector<xreflist_entry_t>::const_iterator __cdecl ?begin_?$qvector_Uxreflist_entry_t____QEBAPEBUxreflist_entry_t__XZ(const qvector<xreflist_entry_t> *__hidden this);
qvector<_qstring<char>>::iterator __cdecl ?begin_?$qvector_V?$_qstring_D____QEAAPEAV?$_qstring_D__XZ(qvector<_qstring<char>> *__hidden this);
qvector<_qstring<char>>::const_iterator __cdecl ?begin_?$qvector_V?$_qstring_D____QEBAPEBV?$_qstring_D__XZ(const qvector<_qstring<char>> *__hidden this);
qvector<_qstring<unsigned char>>::iterator __cdecl ?begin_?$qvector_V?$_qstring_E____QEAAPEAV?$_qstring_E__XZ(qvector<_qstring<unsigned char>> *__hidden this);
qvector<_qstring<unsigned char>>::const_iterator __cdecl ?begin_?$qvector_V?$_qstring_E____QEBAPEBV?$_qstring_E__XZ(const qvector<_qstring<unsigned char>> *__hidden this);
qvector<_qstring<wchar_t>>::iterator __cdecl ?begin_?$qvector_V?$_qstring__W____QEAAPEAV?$_qstring__W__XZ(qvector<_qstring<wchar_t>> *__hidden this);
qvector<_qstring<wchar_t>>::const_iterator __cdecl ?begin_?$qvector_V?$_qstring__W____QEBAPEBV?$_qstring__W__XZ(const qvector<_qstring<wchar_t>> *__hidden this);
qvector<qrefcnt_t<source_item_t>>::iterator __cdecl ?begin_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAPEAV?$qrefcnt_t_Vsource_item_t____XZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
qvector<qrefcnt_t<source_item_t>>::const_iterator __cdecl ?begin_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBAPEBV?$qrefcnt_t_Vsource_item_t____XZ(const qvector<qrefcnt_t<source_item_t>> *__hidden this);
qvector<qvector<int>>::iterator __cdecl ?begin_?$qvector_V?$qvector_H____QEAAPEAV?$qvector_H__XZ(qvector<qvector<int>> *__hidden this);
qvector<qvector<int>>::const_iterator __cdecl ?begin_?$qvector_V?$qvector_H____QEBAPEBV?$qvector_H__XZ(const qvector<qvector<int>> *__hidden this);
qvector<qvector<const char *>>::iterator __cdecl ?begin_?$qvector_V?$qvector_PEBD____QEAAPEAV?$qvector_PEBD__XZ(qvector<qvector<const char *>> *__hidden this);
qvector<qvector<const char *>>::const_iterator __cdecl ?begin_?$qvector_V?$qvector_PEBD____QEBAPEBV?$qvector_PEBD__XZ(const qvector<qvector<const char *>> *__hidden this);
qvector<qvector<const twinline_t *>>::iterator __cdecl ?begin_?$qvector_V?$qvector_PEBVtwinline_t______QEAAPEAV?$qvector_PEBVtwinline_t____XZ(qvector<qvector<const twinline_t *>> *__hidden this);
qvector<qvector<const twinline_t *>>::const_iterator __cdecl ?begin_?$qvector_V?$qvector_PEBVtwinline_t______QEBAPEBV?$qvector_PEBVtwinline_t____XZ(const qvector<qvector<const twinline_t *>> *__hidden this);
qvector<qvector<long long>>::iterator __cdecl ?begin_?$qvector_V?$qvector__J____QEAAPEAV?$qvector__J__XZ(qvector<qvector<long long>> *__hidden this);
qvector<qvector<long long>>::const_iterator __cdecl ?begin_?$qvector_V?$qvector__J____QEBAPEBV?$qvector__J__XZ(const qvector<qvector<long long>> *__hidden this);
qvector<argloc_t>::iterator __cdecl ?begin_?$qvector_Vargloc_t____QEAAPEAVargloc_t__XZ(qvector<argloc_t> *__hidden this);
qvector<argloc_t>::const_iterator __cdecl ?begin_?$qvector_Vargloc_t____QEBAPEBVargloc_t__XZ(const qvector<argloc_t> *__hidden this);
qvector<intmap_t>::iterator __cdecl ?begin_?$qvector_Vintmap_t____QEAAPEAVintmap_t__XZ(qvector<intmap_t> *__hidden this);
qvector<intmap_t>::const_iterator __cdecl ?begin_?$qvector_Vintmap_t____QEBAPEBVintmap_t__XZ(const qvector<intmap_t> *__hidden this);
qvector<node_set_t>::iterator __cdecl ?begin_?$qvector_Vnode_set_t____QEAAPEAVnode_set_t__XZ(qvector<node_set_t> *__hidden this);
qvector<node_set_t>::const_iterator __cdecl ?begin_?$qvector_Vnode_set_t____QEBAPEBVnode_set_t__XZ(const qvector<node_set_t> *__hidden this);
qvector<op_t>::iterator __cdecl ?begin_?$qvector_Vop_t____QEAAPEAVop_t__XZ(qvector<op_t> *__hidden this);
qvector<op_t>::const_iterator __cdecl ?begin_?$qvector_Vop_t____QEBAPEBVop_t__XZ(const qvector<op_t> *__hidden this);
qvector<rangeset_t>::iterator __cdecl ?begin_?$qvector_Vrangeset_t____QEAAPEAVrangeset_t__XZ(qvector<rangeset_t> *__hidden this);
qvector<rangeset_t>::const_iterator __cdecl ?begin_?$qvector_Vrangeset_t____QEBAPEBVrangeset_t__XZ(const qvector<rangeset_t> *__hidden this);
qvector<sync_source_t>::iterator __cdecl ?begin_?$qvector_Vsync_source_t____QEAAPEAVsync_source_t__XZ(qvector<sync_source_t> *__hidden this);
qvector<sync_source_t>::const_iterator __cdecl ?begin_?$qvector_Vsync_source_t____QEBAPEBVsync_source_t__XZ(const qvector<sync_source_t> *__hidden this);
qvector<tinfo_t>::iterator __cdecl ?begin_?$qvector_Vtinfo_t____QEAAPEAVtinfo_t__XZ(qvector<tinfo_t> *__hidden this);
qvector<tinfo_t>::const_iterator __cdecl ?begin_?$qvector_Vtinfo_t____QEBAPEBVtinfo_t__XZ(const qvector<tinfo_t> *__hidden this);
qvector<tryblk_t>::iterator __cdecl ?begin_?$qvector_Vtryblk_t____QEAAPEAVtryblk_t__XZ(qvector<tryblk_t> *__hidden this);
qvector<tryblk_t>::const_iterator __cdecl ?begin_?$qvector_Vtryblk_t____QEBAPEBVtryblk_t__XZ(const qvector<tryblk_t> *__hidden this);
qvector<twinline_t>::iterator __cdecl ?begin_?$qvector_Vtwinline_t____QEAAPEAVtwinline_t__XZ(qvector<twinline_t> *__hidden this);
qvector<twinline_t>::const_iterator __cdecl ?begin_?$qvector_Vtwinline_t____QEBAPEBVtwinline_t__XZ(const qvector<twinline_t> *__hidden this);
qvector<valstr_t>::iterator __cdecl ?begin_?$qvector_Vvalstr_t____QEAAPEAVvalstr_t__XZ(qvector<valstr_t> *__hidden this);
qvector<valstr_t>::const_iterator __cdecl ?begin_?$qvector_Vvalstr_t____QEBAPEBVvalstr_t__XZ(const qvector<valstr_t> *__hidden this);
qvector<movbpt_code_t>::iterator __cdecl ?begin_?$qvector_W4movbpt_code_t____QEAAPEAW4movbpt_code_t__XZ(qvector<movbpt_code_t> *__hidden this);
qvector<movbpt_code_t>::const_iterator __cdecl ?begin_?$qvector_W4movbpt_code_t____QEBAPEBW4movbpt_code_t__XZ(const qvector<movbpt_code_t> *__hidden this);
qvector<long long>::iterator __cdecl ?begin_?$qvector__J__QEAAPEA_JXZ(qvector<long long> *__hidden this);
qvector<long long>::const_iterator __cdecl ?begin_?$qvector__J__QEBAPEB_JXZ(const qvector<long long> *__hidden this);
qvector<unsigned long long>::iterator __cdecl ?begin_?$qvector__K__QEAAPEA_KXZ(qvector<unsigned long long> *__hidden this);
qvector<unsigned long long>::const_iterator __cdecl ?begin_?$qvector__K__QEBAPEB_KXZ(const qvector<unsigned long long> *__hidden this);
qvector<bool>::iterator __cdecl ?begin_?$qvector__N__QEAAPEA_NXZ(qvector<bool> *__hidden this);
qvector<bool>::const_iterator __cdecl ?begin_?$qvector__N__QEBAPEB_NXZ(const qvector<bool> *__hidden this);
qvector<wchar_t>::iterator __cdecl ?begin_?$qvector__W__QEAAPEA_WXZ(qvector<wchar_t> *__hidden this);
qvector<wchar_t>::const_iterator __cdecl ?begin_?$qvector__W__QEBAPEB_WXZ(const qvector<wchar_t> *__hidden this);
node_iterator __cdecl ?begin_gdl_graph_t__QEBA?AVnode_iterator__XZ(const gdl_graph_t *__hidden this);
rangeset_t::iterator __cdecl ?begin_rangeset_t__QEAAPEAUrange_t__XZ(rangeset_t *__hidden this);
rangeset_t::const_iterator __cdecl ?begin_rangeset_t__QEBAPEBUrange_t__XZ(const rangeset_t *__hidden this);
uint64 __cdecl ?begin_udt_member_t__QEBA_KXZ(const udt_member_t *__hidden this);
bool __cdecl ?beginning_enumplace_t__UEBA_NPEAX_Z(const enumplace_t *__hidden this, void *ud);
bool __cdecl ?beginning_hexplace_t__UEBA_NPEAX_Z(const hexplace_t *__hidden this, void *ud);
bool __cdecl ?beginning_idaplace_t__UEBA_NPEAX_Z(const idaplace_t *__hidden this, void *ud);
bool __cdecl ?beginning_linearray_t__QEBA_NXZ(const linearray_t *__hidden this);
bool __cdecl ?beginning_place_t__UEBA_NPEAX_Z(const place_t *__hidden this, void *ud);
bool __cdecl ?beginning_simpleline_place_t__UEBA_NPEAX_Z(const simpleline_place_t *__hidden this, void *ud);
bool __cdecl ?beginning_structplace_t__UEBA_NPEAX_Z(const structplace_t *__hidden this, void *ud);
drc_t __cdecl ?bin_search_debugger_t__QEAA?AW4drc_t__PEA_K_K1AEBV?$qvector_Ucompiled_binpat_t____HPEAV?$_qstring_D___Z(debugger_t *__hidden this, ea_t *out, ea_t start_ea, ea_t end_ea, const compiled_binpat_vec_t *data, int srch_flags, qstring *errbuf);
uint __cdecl ?bitoff_bitrange_t__QEBAIXZ(const bitrange_t *__hidden this);
uint __cdecl ?bitsize_bitrange_t__QEBAIXZ(const bitrange_t *__hidden this);
void __cdecl ?bitwise_and_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?bitwise_not_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?bitwise_or_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?bitwise_xor_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
size_t __cdecl ?blobsize_netnode__QEAA_K_KE_Z(netnode *__hidden this, nodeidx_t _start, uchar tag);
size_t __cdecl ?blobsize_ea_netnode__QEAA_K_KE_Z(netnode *__hidden this, ea_t ea, uchar tag);
point_t __cdecl ?bottomright_rect_t__QEBA?AUpoint_t__XZ(const rect_t *__hidden this);
bptaddr_t *__cdecl ?bpt_debug_event_t__QEAAAEAUbptaddr_t__XZ(debug_event_t *__hidden this);
const bptaddr_t *__cdecl ?bpt_debug_event_t__QEBAAEBUbptaddr_t__XZ(const debug_event_t *__hidden this);
ea_t __cdecl ?bpt_ea_debug_event_t__QEBA_KXZ(const debug_event_t *__hidden this);
bool __cdecl ?break_on_exception_info_t__QEBA_NXZ(const exception_info_t *__hidden this);
bool __cdecl ?build_macro_macro_constructor_t__UEAA_NPEAVinsn_t___N_Z(macro_constructor_t *__hidden this, insn_t *insn, bool may_go_forward);
bool __cdecl ?by_slots_callregs_t__QEBA_NXZ(const callregs_t *__hidden this);
bool __cdecl ?by_til_member_t__QEBA_NXZ(const member_t *__hidden this);
bytevec_t *__cdecl ?bytes_regval_t__QEAAAEAVbytevec_t__XZ(regval_t *__hidden this);
const bytevec_t *__cdecl ?bytes_regval_t__QEBAAEBVbytevec_t__XZ(const regval_t *__hidden this);
uint __cdecl ?bytesize_bitrange_t__QEBAIXZ(const bitrange_t *__hidden this);
char *__cdecl ?c_str_?$_qstring_D__QEBAPEBDXZ(const _qstring<char> *__hidden this);
unsigned __int8 *__cdecl ?c_str_?$_qstring_E__QEBAPEBEXZ(const _qstring<unsigned char> *__hidden this);
__int16 *__cdecl ?c_str_?$_qstring__W__QEBAPEB_WXZ(const _qstring<wchar_t> *__hidden this);
char *__cdecl ?c_str_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAPEBDXZ(const std::basic_string<char> *__hidden this);
__int16 *__cdecl ?c_str_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAPEB_SXZ(const std::basic_string<char16_t> *__hidden this);
__int32 *__cdecl ?c_str_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAPEB_UXZ(const std::basic_string<char32_t> *__hidden this);
__int16 *__cdecl ?c_str_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAPEB_WXZ(const std::basic_string<wchar_t> *__hidden this);
const char *__cdecl ?c_str_idc_value_t__QEBAPEBDXZ(const idc_value_t *__hidden this);
size_t __cdecl ?cache_block_size_debugger_t__QEBA_KXZ(const debugger_t *__hidden this);
const range_t *__cdecl ?cached_range_rangeset_t__QEBAPEBUrange_t__XZ(const rangeset_t *__hidden this);
ssize_t __cdecl ?calc_arglocs_processor_t__SA_JPEAUfunc_type_data_t___Z(func_type_data_t *fti);
fc_block_type_t __cdecl ?calc_block_type_qflow_chart_t__QEBA?AW4fc_block_type_t___K_Z(const qflow_chart_t *__hidden this, size_t blknum);
bool __cdecl ?calc_bounds_abstract_graph_t__QEAA_NPEAUrect_t___Z(abstract_graph_t *__hidden this, rect_t *r);
ssize_t __cdecl ?calc_cdecl_purged_bytes_processor_t__SA_J_K_Z(ea_t ea);
point_t __cdecl ?calc_center_of_mutable_graph_t__QEBA?AUpoint_t__AEBV?$qvector_H___Z(const mutable_graph_t *__hidden this, const intvec_t *nodes);
size_t __cdecl ?calc_cross_num_abstract_graph_t__AEBA_KAEBV?$qvector_H__0AEBVintmap_t___N_Z(const abstract_graph_t *__hidden this, const intvec_t *r1, const intvec_t *r2, const intmap_t *lpi1, bool ispred);
void __cdecl ?calc_fitting_params_abstract_graph_t__QEAAXAEBUrect_t__0PEAUgraph_location_info_t__N_Z(abstract_graph_t *__hidden this, const rect_t *area, const rect_t *r, graph_location_info_t *gli, double max_zoom);
bool __cdecl ?calc_fitting_params_abstract_graph_t__QEAA_NAEBUrect_t__PEAUgraph_location_info_t__N_Z(abstract_graph_t *__hidden this, const rect_t *area, graph_location_info_t *gli, double max_zoom);
bool __cdecl ?calc_gaps_tinfo_t__QEBA_NPEAVrangeset_t___Z(const tinfo_t *__hidden this, rangeset_t *out);
ea_t __cdecl ?calc_group_ea_mutable_graph_t__UEAA_KAEBV?$qvector_H___Z(mutable_graph_t *__hidden this, const intvec_t *);
int __cdecl ?calc_longest_pathes_abstract_graph_t__IEBAHAEBVnode_set_t__AEAV?$qvector_H__H_Z(const abstract_graph_t *__hidden this, const node_set_t *entries, intvec_t *tops, int row_height);
uint64 __cdecl ?calc_mask_enum_type_data_t__QEBA_KXZ(const enum_type_data_t *__hidden this);
int __cdecl ?calc_nbytes_enum_type_data_t__QEBAHXZ(const enum_type_data_t *__hidden this);
ssize_t __cdecl ?calc_next_eas_processor_t__SA_JPEAV?$qvector__K__AEBVinsn_t___N_Z(eavec_t *res, const insn_t *insn, bool over);
void __cdecl ?calc_nregs_callregs_t__AEAAXXZ(callregs_t *__hidden this);
sval_t __cdecl ?calc_offset_argloc_t__QEBA_JXZ(const argloc_t *__hidden this);
ssize_t __cdecl ?calc_purged_bytes_processor_t__SA_JPEAHAEBUfunc_type_data_t___Z(int *p_purged_bytes, const func_type_data_t *fti);
int __cdecl ?calc_purged_bytes_tinfo_t__QEBAHXZ(const tinfo_t *__hidden this);
ssize_t __cdecl ?calc_retloc_processor_t__SA_JPEAVargloc_t__AEBVtinfo_t__E_Z(argloc_t *retloc, const tinfo_t *rettype, cm_t cc);
void __cdecl ?calc_row_heights_abstract_graph_t__IEBAXAEAV?$qvector_Urow_info_t_____Z(const abstract_graph_t *__hidden this, graph_row_info_t *gri);
uint32 __cdecl ?calc_score_tinfo_t__QEBAIXZ(const tinfo_t *__hidden this);
int __cdecl ?calc_size_fixup_data_t__QEBAHXZ(const fixup_data_t *__hidden this);
ssize_t __cdecl ?calc_spdelta_processor_t__SA_JPEA_JAEBVinsn_t___Z(sval_t *spdelta, const insn_t *ins);
ssize_t __cdecl ?calc_step_over_processor_t__SA_JPEA_K_K_Z(ea_t *target, ea_t ip);
ssize_t __cdecl ?calc_switch_cases_processor_t__SA_JPEAXPEAV?$qvector__K___KAEBUswitch_info_t___Z(void *casevec, eavec_t *targets, ea_t insn_ea, const switch_info_t *si);
bool __cdecl ?calc_udt_aligns_tinfo_t__QEAA_NH_Z(tinfo_t *__hidden this, int sudt_flags);
ssize_t __cdecl ?calc_varglocs_processor_t__SA_JPEAUfunc_type_data_t__PEAUregobjs_t__PEAUrelobj_t__H_Z(func_type_data_t *ftd, regobjs_t *regs, relobj_t *stkargs, int nfixed);
int __cdecl ?calc_x_coord_abstract_graph_t__AEBAHAEBUrow_info_t__H_NH_Z(const abstract_graph_t *__hidden this, const row_info_t *ri, int idx, bool ispred, int first_added_node);
ssize_t __cdecl ?calcrel_processor_t__SA_JPEAVbytevec_t__PEA_K_K_Z(bytevec_t *out_relbits, size_t *out_consumed, ea_t ea);
bool __cdecl ?calcrel_in_bits_processor_t__QEBA_NXZ(const processor_t *__hidden this);
void __cdecl ?call_destructor_chooser_base_t__QEAAXXZ(chooser_base_t *__hidden this);
bool __cdecl ?can_continue_from_bpt_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?can_debug_standalone_dlls_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?can_del_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?can_edit_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?can_filter_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
ssize_t __cdecl ?can_have_type_processor_t__SA_JAEBVop_t___Z(const op_t *op);
bool __cdecl ?can_ins_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?can_refresh_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?can_sort_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
size_t __cdecl ?capacity_?$_qstring_D__QEBA_KXZ(const _qstring<char> *__hidden this);
size_t __cdecl ?capacity_?$_qstring_E__QEBA_KXZ(const _qstring<unsigned char> *__hidden this);
size_t __cdecl ?capacity_?$_qstring__W__QEBA_KXZ(const _qstring<wchar_t> *__hidden this);
std::basic_string<char>::size_type __cdecl ?capacity_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KXZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::size_type __cdecl ?capacity_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KXZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::size_type __cdecl ?capacity_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KXZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::size_type __cdecl ?capacity_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KXZ(const std::basic_string<wchar_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_D__QEBA_KXZ(const qvector<char> *__hidden this);
size_t __cdecl ?capacity_?$qvector_E__QEBA_KXZ(const qvector<unsigned char> *__hidden this);
size_t __cdecl ?capacity_?$qvector_H__QEBA_KXZ(const qvector<int> *__hidden this);
size_t __cdecl ?capacity_?$qvector_I__QEBA_KXZ(const qvector<unsigned int> *__hidden this);
size_t __cdecl ?capacity_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBA_KXZ(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
size_t __cdecl ?capacity_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBA_KXZ(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
size_t __cdecl ?capacity_?$qvector_PEAUbpt_t____QEBA_KXZ(const qvector<bpt_t *> *__hidden this);
size_t __cdecl ?capacity_?$qvector_PEAUextlang_t____QEBA_KXZ(const qvector<extlang_t *> *__hidden this);
size_t __cdecl ?capacity_?$qvector_PEAUline_rendering_output_entry_t____QEBA_KXZ(const qvector<line_rendering_output_entry_t *> *__hidden this);
size_t __cdecl ?capacity_?$qvector_PEAVsnapshot_t____QEBA_KXZ(const qvector<snapshot_t *> *__hidden this);
size_t __cdecl ?capacity_?$qvector_PEBD__QEBA_KXZ(const qvector<const char *> *__hidden this);
size_t __cdecl ?capacity_?$qvector_PEBUbpt_t____QEBA_KXZ(const qvector<const bpt_t *> *__hidden this);
size_t __cdecl ?capacity_?$qvector_PEBVrangeset_t____QEBA_KXZ(const qvector<const rangeset_t *> *__hidden this);
size_t __cdecl ?capacity_?$qvector_PEBVtwinline_t____QEBA_KXZ(const qvector<const twinline_t *> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uargpart_t____QEBA_KXZ(const qvector<argpart_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ubpt_t____QEBA_KXZ(const qvector<bpt_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ubptaddrs_t____QEBA_KXZ(const qvector<bptaddrs_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ucall_stack_info_t____QEBA_KXZ(const qvector<call_stack_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ucatch_t____QEBA_KXZ(const qvector<catch_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ucfgopt_set_t____QEBA_KXZ(const qvector<cfgopt_set_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uchannel_redir_t____QEBA_KXZ(const qvector<channel_redir_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ucliopt_t____QEBA_KXZ(const qvector<cliopt_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ucompiled_binpat_t____QEBA_KXZ(const qvector<compiled_binpat_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Udebug_event_t____QEBA_KXZ(const qvector<debug_event_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Udirentry_t____QEBA_KXZ(const qvector<direntry_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Udirtree_cursor_t____QEBA_KXZ(const qvector<dirtree_cursor_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uea_name_t____QEBA_KXZ(const qvector<ea_name_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uedge_t____QEBA_KXZ(const qvector<edge_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uenum_member_t____QEBA_KXZ(const qvector<enum_member_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uexception_info_t____QEBA_KXZ(const qvector<exception_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ufixup_info_t____QEBA_KXZ(const qvector<fixup_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ufuncarg_t____QEBA_KXZ(const qvector<funcarg_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ugroup_crinfo_t____QEBA_KXZ(const qvector<group_crinfo_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uidc_global_t____QEBA_KXZ(const qvector<idc_global_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uidp_desc_t____QEBA_KXZ(const qvector<idp_desc_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uidp_name_t____QEBA_KXZ(const qvector<idp_name_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uioport_bit_t____QEBA_KXZ(const qvector<ioport_bit_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uioport_t____QEBA_KXZ(const qvector<ioport_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ujvalue_t____QEBA_KXZ(const qvector<jvalue_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBA_KXZ(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ukvp_t____QEBA_KXZ(const qvector<kvp_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ulochist_entry_t____QEBA_KXZ(const qvector<lochist_entry_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ulowcnd_t____QEBA_KXZ(const qvector<lowcnd_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Umemory_info_t____QEBA_KXZ(const qvector<memory_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Umemreg_info_t____QEBA_KXZ(const qvector<memreg_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Umodinfo_t____QEBA_KXZ(const qvector<modinfo_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Umovbpt_info_t____QEBA_KXZ(const qvector<movbpt_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBA_KXZ(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBA_KXZ(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Upoint_t____QEBA_KXZ(const qvector<point_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uprocess_info_t____QEBA_KXZ(const qvector<process_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uqbasic_block_t____QEBA_KXZ(const qvector<qbasic_block_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Urange_t____QEBA_KXZ(const qvector<range_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Urect_t____QEBA_KXZ(const qvector<rect_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Urefinfo_desc_t____QEBA_KXZ(const qvector<refinfo_desc_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ureg_access_t____QEBA_KXZ(const qvector<reg_access_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ureg_info_t____QEBA_KXZ(const qvector<reg_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uregister_info_t____QEBA_KXZ(const qvector<register_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uregobj_t____QEBA_KXZ(const qvector<regobj_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uregval_t____QEBA_KXZ(const qvector<regval_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Urow_info_t____QEBA_KXZ(const qvector<row_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uscattered_segm_t____QEBA_KXZ(const qvector<scattered_segm_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Usegm_move_info_t____QEBA_KXZ(const qvector<segm_move_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uselection_item_t____QEBA_KXZ(const qvector<selection_item_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Usimd_info_t____QEBA_KXZ(const qvector<simd_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Usimpleline_t____QEBA_KXZ(const qvector<simpleline_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Ustkpnt_t____QEBA_KXZ(const qvector<stkpnt_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Utev_info_reg_t____QEBA_KXZ(const qvector<tev_info_reg_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Utev_info_t____QEBA_KXZ(const qvector<tev_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Utev_reg_value_t____QEBA_KXZ(const qvector<tev_reg_value_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uthread_name_t____QEBA_KXZ(const qvector<thread_name_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Utoken_t____QEBA_KXZ(const qvector<token_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Utype_attr_t____QEBA_KXZ(const qvector<type_attr_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uudt_member_t____QEBA_KXZ(const qvector<udt_member_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uupdate_bpt_info_t____QEBA_KXZ(const qvector<update_bpt_info_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Uxreflist_entry_t____QEBA_KXZ(const qvector<xreflist_entry_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_V?$_qstring_D____QEBA_KXZ(const qvector<_qstring<char>> *__hidden this);
size_t __cdecl ?capacity_?$qvector_V?$_qstring_E____QEBA_KXZ(const qvector<_qstring<unsigned char>> *__hidden this);
size_t __cdecl ?capacity_?$qvector_V?$_qstring__W____QEBA_KXZ(const qvector<_qstring<wchar_t>> *__hidden this);
size_t __cdecl ?capacity_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBA_KXZ(const qvector<qrefcnt_t<source_item_t>> *__hidden this);
size_t __cdecl ?capacity_?$qvector_V?$qvector_H____QEBA_KXZ(const qvector<qvector<int>> *__hidden this);
size_t __cdecl ?capacity_?$qvector_V?$qvector_PEBD____QEBA_KXZ(const qvector<qvector<const char *>> *__hidden this);
size_t __cdecl ?capacity_?$qvector_V?$qvector_PEBVtwinline_t______QEBA_KXZ(const qvector<qvector<const twinline_t *>> *__hidden this);
size_t __cdecl ?capacity_?$qvector_V?$qvector__J____QEBA_KXZ(const qvector<qvector<long long>> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Vargloc_t____QEBA_KXZ(const qvector<argloc_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Vintmap_t____QEBA_KXZ(const qvector<intmap_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Vnode_set_t____QEBA_KXZ(const qvector<node_set_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Vop_t____QEBA_KXZ(const qvector<op_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Vrangeset_t____QEBA_KXZ(const qvector<rangeset_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Vsync_source_t____QEBA_KXZ(const qvector<sync_source_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Vtinfo_t____QEBA_KXZ(const qvector<tinfo_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Vtryblk_t____QEBA_KXZ(const qvector<tryblk_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Vtwinline_t____QEBA_KXZ(const qvector<twinline_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_Vvalstr_t____QEBA_KXZ(const qvector<valstr_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector_W4movbpt_code_t____QEBA_KXZ(const qvector<movbpt_code_t> *__hidden this);
size_t __cdecl ?capacity_?$qvector__J__QEBA_KXZ(const qvector<long long> *__hidden this);
size_t __cdecl ?capacity_?$qvector__K__QEBA_KXZ(const qvector<unsigned long long> *__hidden this);
size_t __cdecl ?capacity_?$qvector__N__QEBA_KXZ(const qvector<bool> *__hidden this);
size_t __cdecl ?capacity_?$qvector__W__QEBA_KXZ(const qvector<wchar_t> *__hidden this);
_qstring<char> *?cat_sprnt_?$_qstring_D__QEAAAEAV1_PEBDZZ(_qstring<char> *__hidden this, const char *format, ...);
_qstring<unsigned char> *?cat_sprnt_?$_qstring_E__QEAAAEAV1_PEBDZZ(_qstring<unsigned char> *__hidden this, const char *format, ...);
_qstring<wchar_t> *?cat_sprnt_?$_qstring__W__QEAAAEAV1_PEBDZZ(_qstring<wchar_t> *__hidden this, const char *format, ...);
_qstring<char> *__cdecl ?cat_vsprnt_?$_qstring_D__QEAAAEAV1_PEBDPEAD_Z(_qstring<char> *__hidden this, const char *format, va_list va);
_qstring<unsigned char> *__cdecl ?cat_vsprnt_?$_qstring_E__QEAAAEAV1_PEBDPEAD_Z(_qstring<unsigned char> *__hidden this, const char *format, va_list va);
_qstring<wchar_t> *__cdecl ?cat_vsprnt_?$_qstring__W__QEAAAEAV1_PEBDPEAD_Z(_qstring<wchar_t> *__hidden this, const char *format, va_list va);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator __cdecl ?cbegin_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator __cdecl ?cbegin_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator __cdecl ?cbegin_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator __cdecl ?cbegin_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator __cdecl ?cbegin_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::basic_string<char>::const_iterator __cdecl ?cbegin_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_XZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::const_iterator __cdecl ?cbegin_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_XZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::const_iterator __cdecl ?cbegin_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_XZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::const_iterator __cdecl ?cbegin_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_XZ(const std::basic_string<wchar_t> *__hidden this);
int __cdecl ?cbsize_processor_t__QEAAHXZ(processor_t *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator __cdecl ?cend_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator __cdecl ?cend_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator __cdecl ?cend_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator __cdecl ?cend_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator __cdecl ?cend_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::basic_string<char>::const_iterator __cdecl ?cend_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_XZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::const_iterator __cdecl ?cend_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_XZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::const_iterator __cdecl ?cend_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_XZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::const_iterator __cdecl ?cend_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_XZ(const std::basic_string<wchar_t> *__hidden this);
point_t __cdecl ?center_rect_t__QEBA?AUpoint_t__XZ(const rect_t *__hidden this);
bool __cdecl ?change_group_visibility_mutable_graph_t__QEAA_NH_N_Z(mutable_graph_t *__hidden this, int group, bool expand);
dterr_t __cdecl ?change_rank_dirtree_t__QEAA?AW4dterr_t__PEBD_J_Z(dirtree_t *__hidden this, const char *path, ssize_t rank_delta);
bool __cdecl ?change_sign_tinfo_t__QEAA_NH_Z(tinfo_t *__hidden this, type_sign_t sign);
bool __cdecl ?change_visibility_mutable_graph_t__QEAA_NAEBV?$qvector_H___N_Z(mutable_graph_t *__hidden this, const intvec_t *nodes, bool expand);
bool __cdecl ?chardel_netnode__QEAA_N_KE_Z(netnode *__hidden this, nodeidx_t alt, uchar tag);
bool __cdecl ?chardel_ea_netnode__QEAA_N_KE_Z(netnode *__hidden this, ea_t ea, uchar tag);
bool __cdecl ?chardel_idx8_netnode__QEAA_NEE_Z(netnode *__hidden this, uchar alt, uchar tag);
nodeidx_t __cdecl ?charfirst_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?charfirst_idx8_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?charlast_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?charlast_idx8_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?charnext_netnode__QEBA_K_KE_Z(const netnode *__hidden this, nodeidx_t cur, uchar tag);
nodeidx_t __cdecl ?charnext_idx8_netnode__QEBA_KEE_Z(const netnode *__hidden this, uchar cur, uchar tag);
nodeidx_t __cdecl ?charprev_netnode__QEBA_K_KE_Z(const netnode *__hidden this, nodeidx_t cur, uchar tag);
nodeidx_t __cdecl ?charprev_idx8_netnode__QEBA_KEE_Z(const netnode *__hidden this, uchar cur, uchar tag);
bool __cdecl ?charset_netnode__QEAA_N_KEE_Z(netnode *__hidden this, nodeidx_t alt, uchar val, uchar tag);
bool __cdecl ?charset_ea_netnode__QEAA_N_KEE_Z(netnode *__hidden this, ea_t ea, uchar val, uchar tag);
bool __cdecl ?charset_idx8_netnode__QEAA_NEEE_Z(netnode *__hidden this, uchar alt, uchar val, uchar tag);
size_t __cdecl ?charshift_netnode__QEAA_K_K00E_Z(netnode *__hidden this, nodeidx_t from, nodeidx_t to, nodeidx_t size, uchar tag);
uchar __cdecl ?charval_netnode__QEBAE_KE_Z(const netnode *__hidden this, nodeidx_t alt, uchar tag);
uchar __cdecl ?charval_ea_netnode__QEBAE_KE_Z(const netnode *__hidden this, ea_t ea, uchar tag);
uchar __cdecl ?charval_idx8_netnode__QEBAEEE_Z(const netnode *__hidden this, uchar alt, uchar tag);
bool __cdecl ?check_bounds_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____IEBA_NXZ(const backward_flow_iterator_t<no_regs_t, simple_bfi_t> *__hidden this);
drc_t __cdecl ?check_bpt_debugger_t__QEAA?AW4drc_t__PEAHH_KH_Z(debugger_t *__hidden this, int *bptvc, bpttype_t type, ea_t ea, int len);
bool __cdecl ?check_cancel_cancellable_graph_t__QEBA_NXZ(const cancellable_graph_t *__hidden this);
int __cdecl ?check_move_args_rangeset_t__QEAAH_K00_Z(rangeset_t *__hidden this, ea_t from, ea_t to, asize_t size);
bool __cdecl ?check_new_group_mutable_graph_t__QEAA_NAEBV?$qvector_H__AEAV2__Z(mutable_graph_t *__hidden this, const intvec_t *nodes, intvec_t *refined);
void __cdecl ?check_spoiled_jump_pattern_t__UEBAXPEAV?$qvector_Vop_t_____Z(const jump_pattern_t *__hidden this, tracked_regs_t *_regs);
void __cdecl ?check_spoiled_not_reg_jump_pattern_t__IEBAXPEAV?$qvector_Vop_t____I_Z(const jump_pattern_t *__hidden this, tracked_regs_t *_regs, uint maxop);
void __cdecl ?check_usage_debug_event_t__AEAAXI_Z(debug_event_t *__hidden this, uint32 req);
void __cdecl ?check_version_chooser_base_t__QEBAXI_Z(const chooser_base_t *__hidden this, uint32 ver);
ssize_t __cdecl ?choose_chooser_multi_t__QEAA_JAEBV?$qvector__K___Z(chooser_multi_t *__hidden this, const sizevec_t *deflt);
ssize_t __cdecl ?choose_chooser_t__QEAA_J_J_Z(chooser_t *__hidden this, ssize_t deflt);
const range_t *__cdecl ?chunk_func_item_iterator_t__QEBAAEBUrange_t__XZ(const func_item_iterator_t *__hidden this);
const range_t *__cdecl ?chunk_func_tail_iterator_t__QEBAAEBUrange_t__XZ(const func_tail_iterator_t *__hidden this);
ssize_t __cdecl ?clean_tbit_processor_t__SA_J_KP6AAEBUregval_t__PEBDPEBU2__ZAEBU2__Z(ea_t ea, processor_t::regval_getter_t *_getreg, const regval_t *regvalues);
void __cdecl ?cleanup_linearray_t__AEAAXXZ(linearray_t *__hidden this);
drc_t __cdecl ?cleanup_appcall_debugger_t__QEAA?AW4drc_t__H_Z(debugger_t *__hidden this, thid_t tid);
void __cdecl ?clear_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAAXXZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
void __cdecl ?clear_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAAXXZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
void __cdecl ?clear_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAAXXZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
void __cdecl ?clear_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAAXXZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
void __cdecl ?clear_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAAXXZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
void __cdecl ?clear_?$_qstring_D__QEAAXXZ(_qstring<char> *__hidden this);
void __cdecl ?clear_?$_qstring_E__QEAAXXZ(_qstring<unsigned char> *__hidden this);
void __cdecl ?clear_?$_qstring__W__QEAAXXZ(_qstring<wchar_t> *__hidden this);
void __cdecl ?clear_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAXXZ(std::basic_string<char> *__hidden this);
void __cdecl ?clear_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAXXZ(std::basic_string<char16_t> *__hidden this);
void __cdecl ?clear_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAXXZ(std::basic_string<char32_t> *__hidden this);
void __cdecl ?clear_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAXXZ(std::basic_string<wchar_t> *__hidden this);
void __cdecl ?clear_?$qlist_PEAVui_request_t____QEAAXXZ(qlist<ui_request_t *> *__hidden this);
void __cdecl ?clear_?$qvector_D__QEAAXXZ(qvector<char> *__hidden this);
void __cdecl ?clear_?$qvector_E__QEAAXXZ(qvector<unsigned char> *__hidden this);
void __cdecl ?clear_?$qvector_H__QEAAXXZ(qvector<int> *__hidden this);
void __cdecl ?clear_?$qvector_I__QEAAXXZ(qvector<unsigned int> *__hidden this);
void __cdecl ?clear_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAXXZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
void __cdecl ?clear_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAXXZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
void __cdecl ?clear_?$qvector_PEAUbpt_t____QEAAXXZ(qvector<bpt_t *> *__hidden this);
void __cdecl ?clear_?$qvector_PEAUextlang_t____QEAAXXZ(qvector<extlang_t *> *__hidden this);
void __cdecl ?clear_?$qvector_PEAUline_rendering_output_entry_t____QEAAXXZ(qvector<line_rendering_output_entry_t *> *__hidden this);
void __cdecl ?clear_?$qvector_PEAVsnapshot_t____QEAAXXZ(qvector<snapshot_t *> *__hidden this);
void __cdecl ?clear_?$qvector_PEBD__QEAAXXZ(qvector<const char *> *__hidden this);
void __cdecl ?clear_?$qvector_PEBUbpt_t____QEAAXXZ(qvector<const bpt_t *> *__hidden this);
void __cdecl ?clear_?$qvector_PEBVrangeset_t____QEAAXXZ(qvector<const rangeset_t *> *__hidden this);
void __cdecl ?clear_?$qvector_PEBVtwinline_t____QEAAXXZ(qvector<const twinline_t *> *__hidden this);
void __cdecl ?clear_?$qvector_Uargpart_t____QEAAXXZ(qvector<argpart_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ubpt_t____QEAAXXZ(qvector<bpt_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ubptaddrs_t____QEAAXXZ(qvector<bptaddrs_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ucall_stack_info_t____QEAAXXZ(qvector<call_stack_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ucatch_t____QEAAXXZ(qvector<catch_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ucfgopt_set_t____QEAAXXZ(qvector<cfgopt_set_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uchannel_redir_t____QEAAXXZ(qvector<channel_redir_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ucliopt_t____QEAAXXZ(qvector<cliopt_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ucompiled_binpat_t____QEAAXXZ(qvector<compiled_binpat_t> *__hidden this);
void __cdecl ?clear_?$qvector_Udebug_event_t____QEAAXXZ(qvector<debug_event_t> *__hidden this);
void __cdecl ?clear_?$qvector_Udirentry_t____QEAAXXZ(qvector<direntry_t> *__hidden this);
void __cdecl ?clear_?$qvector_Udirtree_cursor_t____QEAAXXZ(qvector<dirtree_cursor_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uea_name_t____QEAAXXZ(qvector<ea_name_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uedge_t____QEAAXXZ(qvector<edge_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uenum_member_t____QEAAXXZ(qvector<enum_member_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uexception_info_t____QEAAXXZ(qvector<exception_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ufixup_info_t____QEAAXXZ(qvector<fixup_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ufuncarg_t____QEAAXXZ(qvector<funcarg_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ugroup_crinfo_t____QEAAXXZ(qvector<group_crinfo_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uidc_global_t____QEAAXXZ(qvector<idc_global_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uidp_desc_t____QEAAXXZ(qvector<idp_desc_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uidp_name_t____QEAAXXZ(qvector<idp_name_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uioport_bit_t____QEAAXXZ(qvector<ioport_bit_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uioport_t____QEAAXXZ(qvector<ioport_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ujvalue_t____QEAAXXZ(qvector<jvalue_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ukvp_t____QEAAXXZ(qvector<kvp_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ulochist_entry_t____QEAAXXZ(qvector<lochist_entry_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ulowcnd_t____QEAAXXZ(qvector<lowcnd_t> *__hidden this);
void __cdecl ?clear_?$qvector_Umemory_info_t____QEAAXXZ(qvector<memory_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Umemreg_info_t____QEAAXXZ(qvector<memreg_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Umodinfo_t____QEAAXXZ(qvector<modinfo_t> *__hidden this);
void __cdecl ?clear_?$qvector_Umovbpt_info_t____QEAAXXZ(qvector<movbpt_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
void __cdecl ?clear_?$qvector_Upoint_t____QEAAXXZ(qvector<point_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uprocess_info_t____QEAAXXZ(qvector<process_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uqbasic_block_t____QEAAXXZ(qvector<qbasic_block_t> *__hidden this);
void __cdecl ?clear_?$qvector_Urange_t____QEAAXXZ(qvector<range_t> *__hidden this);
void __cdecl ?clear_?$qvector_Urect_t____QEAAXXZ(qvector<rect_t> *__hidden this);
void __cdecl ?clear_?$qvector_Urefinfo_desc_t____QEAAXXZ(qvector<refinfo_desc_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ureg_access_t____QEAAXXZ(qvector<reg_access_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ureg_info_t____QEAAXXZ(qvector<reg_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uregister_info_t____QEAAXXZ(qvector<register_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uregobj_t____QEAAXXZ(qvector<regobj_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uregval_t____QEAAXXZ(qvector<regval_t> *__hidden this);
void __cdecl ?clear_?$qvector_Urow_info_t____QEAAXXZ(qvector<row_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uscattered_segm_t____QEAAXXZ(qvector<scattered_segm_t> *__hidden this);
void __cdecl ?clear_?$qvector_Usegm_move_info_t____QEAAXXZ(qvector<segm_move_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uselection_item_t____QEAAXXZ(qvector<selection_item_t> *__hidden this);
void __cdecl ?clear_?$qvector_Usimd_info_t____QEAAXXZ(qvector<simd_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Usimpleline_t____QEAAXXZ(qvector<simpleline_t> *__hidden this);
void __cdecl ?clear_?$qvector_Ustkpnt_t____QEAAXXZ(qvector<stkpnt_t> *__hidden this);
void __cdecl ?clear_?$qvector_Utev_info_reg_t____QEAAXXZ(qvector<tev_info_reg_t> *__hidden this);
void __cdecl ?clear_?$qvector_Utev_info_t____QEAAXXZ(qvector<tev_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Utev_reg_value_t____QEAAXXZ(qvector<tev_reg_value_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uthread_name_t____QEAAXXZ(qvector<thread_name_t> *__hidden this);
void __cdecl ?clear_?$qvector_Utoken_t____QEAAXXZ(qvector<token_t> *__hidden this);
void __cdecl ?clear_?$qvector_Utype_attr_t____QEAAXXZ(qvector<type_attr_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uudt_member_t____QEAAXXZ(qvector<udt_member_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uupdate_bpt_info_t____QEAAXXZ(qvector<update_bpt_info_t> *__hidden this);
void __cdecl ?clear_?$qvector_Uxreflist_entry_t____QEAAXXZ(qvector<xreflist_entry_t> *__hidden this);
void __cdecl ?clear_?$qvector_V?$_qstring_D____QEAAXXZ(qvector<_qstring<char>> *__hidden this);
void __cdecl ?clear_?$qvector_V?$_qstring_E____QEAAXXZ(qvector<_qstring<unsigned char>> *__hidden this);
void __cdecl ?clear_?$qvector_V?$_qstring__W____QEAAXXZ(qvector<_qstring<wchar_t>> *__hidden this);
void __cdecl ?clear_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAXXZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
void __cdecl ?clear_?$qvector_V?$qvector_H____QEAAXXZ(qvector<qvector<int>> *__hidden this);
void __cdecl ?clear_?$qvector_V?$qvector_PEBD____QEAAXXZ(qvector<qvector<const char *>> *__hidden this);
void __cdecl ?clear_?$qvector_V?$qvector_PEBVtwinline_t______QEAAXXZ(qvector<qvector<const twinline_t *>> *__hidden this);
void __cdecl ?clear_?$qvector_V?$qvector__J____QEAAXXZ(qvector<qvector<long long>> *__hidden this);
void __cdecl ?clear_?$qvector_Vargloc_t____QEAAXXZ(qvector<argloc_t> *__hidden this);
void __cdecl ?clear_?$qvector_Vintmap_t____QEAAXXZ(qvector<intmap_t> *__hidden this);
void __cdecl ?clear_?$qvector_Vnode_set_t____QEAAXXZ(qvector<node_set_t> *__hidden this);
void __cdecl ?clear_?$qvector_Vop_t____QEAAXXZ(qvector<op_t> *__hidden this);
void __cdecl ?clear_?$qvector_Vrangeset_t____QEAAXXZ(qvector<rangeset_t> *__hidden this);
void __cdecl ?clear_?$qvector_Vsync_source_t____QEAAXXZ(qvector<sync_source_t> *__hidden this);
void __cdecl ?clear_?$qvector_Vtinfo_t____QEAAXXZ(qvector<tinfo_t> *__hidden this);
void __cdecl ?clear_?$qvector_Vtryblk_t____QEAAXXZ(qvector<tryblk_t> *__hidden this);
void __cdecl ?clear_?$qvector_Vtwinline_t____QEAAXXZ(qvector<twinline_t> *__hidden this);
void __cdecl ?clear_?$qvector_Vvalstr_t____QEAAXXZ(qvector<valstr_t> *__hidden this);
void __cdecl ?clear_?$qvector_W4movbpt_code_t____QEAAXXZ(qvector<movbpt_code_t> *__hidden this);
void __cdecl ?clear_?$qvector__J__QEAAXXZ(qvector<long long> *__hidden this);
void __cdecl ?clear_?$qvector__K__QEAAXXZ(qvector<unsigned long long> *__hidden this);
void __cdecl ?clear_?$qvector__N__QEAAXXZ(qvector<bool> *__hidden this);
void __cdecl ?clear_?$qvector__W__QEAAXXZ(qvector<wchar_t> *__hidden this);
void __cdecl ?clear_abstract_graph_t__QEAAXXZ(abstract_graph_t *__hidden this);
void __cdecl ?clear_debug_event_t__QEAAXXZ(debug_event_t *__hidden this);
void __cdecl ?clear_dynamic_register_set_t__QEAAXXZ(dynamic_register_set_t *__hidden this);
void __cdecl ?clear_edge_infos_wrapper_t__QEAAXXZ(edge_infos_wrapper_t *__hidden this);
void __cdecl ?clear_fpvalue_t__QEAAXXZ(fpvalue_t *__hidden this);
void __cdecl ?clear_idc_value_t__QEAAXXZ(idc_value_t *__hidden this);
void __cdecl ?clear_jvalue_t__QEAAXXZ(jvalue_t *__hidden this);
void __cdecl ?clear_lines_rendering_output_t__QEAAXXZ(lines_rendering_output_t *__hidden this);
void __cdecl ?clear_lochist_entry_t__AEAAXXZ(lochist_entry_t *__hidden this);
void __cdecl ?clear_lochist_t__QEAAXXZ(lochist_t *__hidden this);
void __cdecl ?clear_mutable_graph_t__QEAAXXZ(mutable_graph_t *__hidden this);
void __cdecl ?clear_node_ordering_t__QEAAXXZ(node_ordering_t *__hidden this);
void __cdecl ?clear_range_t__QEAAXXZ(range_t *__hidden this);
void __cdecl ?clear_rangeset_t__QEAAXXZ(rangeset_t *__hidden this);
void __cdecl ?clear_regval_t__QEAAXXZ(regval_t *__hidden this);
void __cdecl ?clear_seh_t__QEAAXXZ(seh_t *__hidden this);
void __cdecl ?clear_snapshot_t__QEAAXXZ(snapshot_t *__hidden this);
void __cdecl ?clear_switch_info_t__QEAAXXZ(switch_info_t *__hidden this);
void __cdecl ?clear_tinfo_t__QEAAXXZ(tinfo_t *__hidden this);
void __cdecl ?clear_try_handler_t__QEAAXXZ(try_handler_t *__hidden this);
void __cdecl ?clear_tryblk_t__QEAAXXZ(tryblk_t *__hidden this);
void __cdecl ?clear_type_mods_t__QEAAXXZ(type_mods_t *__hidden this);
void __cdecl ?clear_all_debug_event_t__QEAAXXZ(debug_event_t *__hidden this);
void __cdecl ?clear_all_bits_bytevec_t__QEAAX_K_Z(bytevec_t *__hidden this, size_t nbits);
void __cdecl ?clear_bit_bytevec_t__QEAAX_K_Z(bytevec_t *__hidden this, size_t bit);
void __cdecl ?clear_bits_bytevec_t__QEAAXAEBV1__Z(bytevec_t *__hidden this, const bytevec_t *b);
void __cdecl ?clear_bits_bytevec_t__QEAAX_K0_Z(bytevec_t *__hidden this, size_t low, size_t high);
void __cdecl ?clear_layout_info_abstract_graph_t__IEAAXXZ(abstract_graph_t *__hidden this);
abstract_graph_t *__cdecl ?clone_abstract_graph_t__UEBAPEAV1_XZ(const abstract_graph_t *__hidden this);
place_t *__cdecl ?clone_enumplace_t__UEBAPEAVplace_t__XZ(const enumplace_t *__hidden this);
place_t *__cdecl ?clone_hexplace_t__UEBAPEAVplace_t__XZ(const hexplace_t *__hidden this);
place_t *__cdecl ?clone_idaplace_t__UEBAPEAVplace_t__XZ(const idaplace_t *__hidden this);
mutable_graph_t *__cdecl ?clone_mutable_graph_t__UEBAPEAV1_XZ(const mutable_graph_t *__hidden this);
place_t *__cdecl ?clone_place_t__UEBAPEAV1_XZ(const place_t *__hidden this);
place_t *__cdecl ?clone_simpleline_place_t__UEBAPEAVplace_t__XZ(const simpleline_place_t *__hidden this);
place_t *__cdecl ?clone_structplace_t__UEBAPEAVplace_t__XZ(const structplace_t *__hidden this);
void __cdecl ?close_form_actions_t__UEAAXH_Z(form_actions_t *__hidden this, int close_normally);
void __cdecl ?close_comment_outctx_base_t__QEAAXXZ(outctx_base_t *__hidden this);
void __cdecl ?close_file_debugger_t__QEAAXH_Z(debugger_t *__hidden this, int fn);
void __cdecl ?closed_chooser_base_t__UEAAXXZ(chooser_base_t *__hidden this);
bool __cdecl ?clr_node_ordering_t__QEAA_NH_Z(node_ordering_t *__hidden this, int _node);
void __cdecl ?clr_baseclass_udt_member_t__QEAAXXZ(udt_member_t *__hidden this);
void __cdecl ?clr_comorg_segment_t__QEAAXXZ(segment_t *__hidden this);
void __cdecl ?clr_const_tinfo_t__QEAAXXZ(tinfo_t *__hidden this);
void __cdecl ?clr_const_volatile_tinfo_t__QEAAXXZ(tinfo_t *__hidden this);
void __cdecl ?clr_extdef_fixup_data_t__QEAAXXZ(fixup_data_t *__hidden this);
void __cdecl ?clr_gen_label_outctx_base_t__QEAAXXZ(outctx_base_t *__hidden this);
void __cdecl ?clr_ignore_micro_ignore_micro_t__QEAAX_K_Z(ignore_micro_t *__hidden this, ea_t ea);
void __cdecl ?clr_method_udt_member_t__QEAAXXZ(udt_member_t *__hidden this);
void __cdecl ?clr_ob_ok_segment_t__QEAAXXZ(segment_t *__hidden this);
void __cdecl ?clr_shown_op_t__QEAAXXZ(op_t *__hidden this);
void __cdecl ?clr_unaligned_udt_member_t__QEAAXXZ(udt_member_t *__hidden this);
void __cdecl ?clr_unused_fixup_data_t__QEAAXXZ(fixup_data_t *__hidden this);
void __cdecl ?clr_vftable_udt_member_t__QEAAXXZ(udt_member_t *__hidden this);
void __cdecl ?clr_virtbase_udt_member_t__QEAAXXZ(udt_member_t *__hidden this);
void __cdecl ?clr_volatile_tinfo_t__QEAAXXZ(tinfo_t *__hidden this);
ssize_t __cdecl ?cmp_operands_processor_t__SA_JAEBVop_t__0_Z(const op_t *op1, const op_t *op2);
void __cdecl ?cmpeq_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?cmpge_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?cmpgt_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?cmple_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?cmplt_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?cmpneq_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
ssize_t __cdecl ?coagulate_processor_t__SA_J_K_Z(ea_t start_ea);
ssize_t __cdecl ?coagulate_dref_processor_t__SA_J_K0_NPEA_K_Z(ea_t from, ea_t to, bool may_define, ea_t *code_ea);
void __cdecl ?collapse_edges_mutable_graph_t__AEAAXAEBV?$qvector_H__H_Z(mutable_graph_t *__hidden this, const intvec_t *nodes, int group);
void __cdecl ?combine_insn_cnt_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____KAXPEAII_Z(uint *dst, uint src);
void __cdecl ?combine_regs_jump_pattern_t__QEAAXPEAV?$qvector_Vop_t____AEBV2__K_Z(jump_pattern_t *__hidden this, tracked_regs_t *dst, const tracked_regs_t *src, ea_t ea);
void __cdecl ?combine_regs_simple_bfi_t__SAXPEAUno_regs_t__AEBU2__K_Z(no_regs_t *, const no_regs_t *, ea_t);
bool __cdecl ?comorg_segment_t__QEBA_NXZ(const segment_t *__hidden this);
int __cdecl ?compare2_enumplace_t__UEBAHPEBVplace_t__PEAX_Z(const enumplace_t *__hidden this, const place_t *t2, void *ud);
int __cdecl ?compare2_hexplace_t__UEBAHPEBVplace_t__PEAX_Z(const hexplace_t *__hidden this, const place_t *t2, void *ud);
int __cdecl ?compare2_idaplace_t__UEBAHPEBVplace_t__PEAX_Z(const idaplace_t *__hidden this, const place_t *t2, void *ud);
int __cdecl ?compare2_place_t__UEBAHPEBV1_PEAX_Z(const place_t *__hidden this, const place_t *t2, void *);
int __cdecl ?compare2_simpleline_place_t__UEBAHPEBVplace_t__PEAX_Z(const simpleline_place_t *__hidden this, const place_t *t2, void *ud);
int __cdecl ?compare2_structplace_t__UEBAHPEBVplace_t__PEAX_Z(const structplace_t *__hidden this, const place_t *t2, void *ud);
int __cdecl ?compare_?$_Char_traits_DH_std__SAHPEBD0_K_Z(char *_First1, char *_First2, size_t _Count);
int __cdecl ?compare_?$_Char_traits_GG_std__SAHPEBG0_K_Z(unsigned __int16 *_First1, unsigned __int16 *_First2, size_t _Count);
int __cdecl ?compare_?$_Char_traits__SG_std__SAHPEB_S0_K_Z(__int16 *_First1, __int16 *_First2, size_t _Count);
int __cdecl ?compare_?$_Char_traits__UI_std__SAHPEB_U0_K_Z(__int32 *_First1, __int32 *_First2, size_t _Count);
int __cdecl ?compare_?$_Char_traits__WG_std__SAHPEB_W0_K_Z(__int16 *_First1, __int16 *_First2, size_t _Count);
int __cdecl ?compare_?$_Narrow_char_traits_DH_std__SAHQEBD0_K_Z(char *const _First1, char *const _First2, const size_t _Count);
int __cdecl ?compare_?$_WChar_traits_G_std__SAHQEBG0_K_Z(unsigned __int16 *const _First1, unsigned __int16 *const _First2, const size_t _Count);
int __cdecl ?compare_?$_WChar_traits__S_std__SAHQEB_S0_K_Z(__int16 *const _First1, __int16 *const _First2, const size_t _Count);
int __cdecl ?compare_?$_WChar_traits__W_std__SAHQEB_W0_K_Z(__int16 *const _First1, __int16 *const _First2, const size_t _Count);
int __cdecl ?compare_?$_qstring_D__QEBAHAEBV1__Z(const _qstring<char> *__hidden this, const _qstring<char> *r);
int __cdecl ?compare_?$_qstring_E__QEBAHAEBV1__Z(const _qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *r);
int __cdecl ?compare_?$_qstring__W__QEBAHAEBV1__Z(const _qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *r);
int __cdecl ?compare_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAHAEBV12__Z(const std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right);
int __cdecl ?compare_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAHQEBD_Z(const std::basic_string<char> *__hidden this, char *const _Ptr);
int __cdecl ?compare_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAH_K0AEBV12_00_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Nx, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Roff, const std::basic_string<char>::size_type _Count);
int __cdecl ?compare_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAH_K0AEBV12__Z(const std::basic_string<char> *__hidden this, std::basic_string<char>::size_type _Off, std::basic_string<char>::size_type _Nx, const std::basic_string<char> *_Right);
int __cdecl ?compare_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAH_K0QEBD0_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Nx, char *const _Ptr, const std::basic_string<char>::size_type _Count);
int __cdecl ?compare_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAH_K0QEBD_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Nx, char *const _Ptr);
int __cdecl ?compare_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAHAEBV12__Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right);
int __cdecl ?compare_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAHQEB_S_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr);
int __cdecl ?compare_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAH_K0AEBV12_00_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Nx, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Roff, const std::basic_string<char16_t>::size_type _Count);
int __cdecl ?compare_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAH_K0AEBV12__Z(const std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t>::size_type _Off, std::basic_string<char16_t>::size_type _Nx, const std::basic_string<char16_t> *_Right);
int __cdecl ?compare_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAH_K0QEB_S0_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Nx, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Count);
int __cdecl ?compare_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAH_K0QEB_S_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Nx, __int16 *const _Ptr);
int __cdecl ?compare_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAHAEBV12__Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right);
int __cdecl ?compare_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAHQEB_U_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr);
int __cdecl ?compare_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAH_K0AEBV12_00_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Nx, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Roff, const std::basic_string<char32_t>::size_type _Count);
int __cdecl ?compare_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAH_K0AEBV12__Z(const std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t>::size_type _Off, std::basic_string<char32_t>::size_type _Nx, const std::basic_string<char32_t> *_Right);
int __cdecl ?compare_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAH_K0QEB_U0_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Nx, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Count);
int __cdecl ?compare_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAH_K0QEB_U_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Nx, __int32 *const _Ptr);
int __cdecl ?compare_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAHAEBV12__Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right);
int __cdecl ?compare_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAHQEB_W_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr);
int __cdecl ?compare_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAH_K0AEBV12_00_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Nx, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Roff, const std::basic_string<wchar_t>::size_type _Count);
int __cdecl ?compare_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAH_K0AEBV12__Z(const std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t>::size_type _Off, std::basic_string<wchar_t>::size_type _Nx, const std::basic_string<wchar_t> *_Right);
int __cdecl ?compare_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAH_K0QEB_W0_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Nx, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Count);
int __cdecl ?compare_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAH_K0QEB_W_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Nx, __int16 *const _Ptr);
int __cdecl ?compare_argloc_t__QEBAHAEBV1__Z(const argloc_t *__hidden this, const argloc_t *r);
int __cdecl ?compare_bitfield_type_data_t__QEBAHAEBU1__Z(const bitfield_type_data_t *__hidden this, const bitfield_type_data_t *r);
int __cdecl ?compare_bitrange_t__QEBAHAEBV1__Z(const bitrange_t *__hidden this, const bitrange_t *r);
int __cdecl ?compare_bpt_location_t__QEBAHAEBU1__Z(const bpt_location_t *__hidden this, const bpt_location_t *r);
int __cdecl ?compare_custom_data_type_ids_t__QEBAHAEBU1__Z(const custom_data_type_ids_t *__hidden this, const custom_data_type_ids_t *r);
int __cdecl ?compare_custom_refinfo_handler_t__QEBAHAEBU1__Z(const custom_refinfo_handler_t *__hidden this, const custom_refinfo_handler_t *r);
int __cdecl ?compare_data_format_t__QEBAHAEBU1__Z(const data_format_t *__hidden this, const data_format_t *r);
int __cdecl ?compare_data_type_t__QEBAHAEBU1__Z(const data_type_t *__hidden this, const data_type_t *r);
int __cdecl ?compare_dirtree_cursor_t__QEBAHAEBU1__Z(const dirtree_cursor_t *__hidden this, const dirtree_cursor_t *r);
int __cdecl ?compare_edge_layout_point_t__QEBAHAEBU1__Z(const edge_layout_point_t *__hidden this, const edge_layout_point_t *r);
int __cdecl ?compare_enum_const_t__QEBAHAEBU1__Z(const enum_const_t *__hidden this, const enum_const_t *r);
int __cdecl ?compare_enumplace_t__UEBAHPEBVplace_t___Z(const enumplace_t *__hidden this, const place_t *t2);
int __cdecl ?compare_fixup_handler_t__QEBAHAEBU1__Z(const fixup_handler_t *__hidden this, const fixup_handler_t *r);
int __cdecl ?compare_fpvalue_t__QEBAHAEBU1__Z(const fpvalue_t *__hidden this, const fpvalue_t *r);
int __cdecl ?compare_func_t__QEBAHAEBV1__Z(const func_t *__hidden this, const func_t *r);
int __cdecl ?compare_hexplace_t__UEBAHPEBVplace_t___Z(const hexplace_t *__hidden this, const place_t *t2);
int __cdecl ?compare_idaplace_t__UEBAHPEBVplace_t___Z(const idaplace_t *__hidden this, const place_t *t2);
int __cdecl ?compare_place_t__UEBAHPEBV1__Z(const place_t *__hidden this, const place_t *t2);
int __cdecl ?compare_range_t__QEBAHAEBU1__Z(const range_t *__hidden this, const range_t *r);
int __cdecl ?compare_refinfo_t__QEBAHAEBU1__Z(const refinfo_t *__hidden this, const refinfo_t *r);
int __cdecl ?compare_reg_info_t__QEBAHAEBU1__Z(const reg_info_t *__hidden this, const reg_info_t *r);
int __cdecl ?compare_regarg_t__QEBAHAEBU1__Z(const regarg_t *__hidden this, const regarg_t *r);
int __cdecl ?compare_regvar_t__QEBAHAEBU1__Z(const regvar_t *__hidden this, const regvar_t *r);
int __cdecl ?compare_segment_t__QEBAHAEBV1__Z(const segment_t *__hidden this, const segment_t *r);
int __cdecl ?compare_selection_item_t__QEBAHAEBU1__Z(const selection_item_t *__hidden this, const selection_item_t *r);
int __cdecl ?compare_simpleline_place_t__UEBAHPEBVplace_t___Z(const simpleline_place_t *__hidden this, const place_t *t2);
int __cdecl ?compare_snapshot_t__AEBAHAEBV1__Z(const snapshot_t *__hidden this, const snapshot_t *r);
int __cdecl ?compare_stkpnt_t__QEBAHAEBU1__Z(const stkpnt_t *__hidden this, const stkpnt_t *r);
int __cdecl ?compare_stkpnts_t__QEBAHAEBU1__Z(const stkpnts_t *__hidden this, const stkpnts_t *r);
int __cdecl ?compare_strpath_t__QEBAHAEBU1__Z(const strpath_t *__hidden this, const strpath_t *r);
int __cdecl ?compare_structplace_t__UEBAHPEBVplace_t___Z(const structplace_t *__hidden this, const place_t *t2);
int __cdecl ?compare_tinfo_t__QEBAHAEBV1__Z(const tinfo_t *__hidden this, const tinfo_t *r);
int __cdecl ?compare_xreflist_entry_t__QEBAHAEBU1__Z(const xreflist_entry_t *__hidden this, const xreflist_entry_t *r);
bool __cdecl ?compare_with_tinfo_t__QEBA_NAEBV1_H_Z(const tinfo_t *__hidden this, const tinfo_t *r, int tcflags);
bool __cdecl ?construct_macro_macro_constructor_t__QEAA_NPEAVinsn_t___N_Z(macro_constructor_t *__hidden this, insn_t *insn, bool enable);
void __cdecl ?consume_oneline_valstr_t__AEAAXAEBV?$_qstring_D___Z(valstr_t *__hidden this, const qstring *line);
void __cdecl ?consume_rrel_argloc_t__QEAAXPEAUrrel_t___Z(argloc_t *__hidden this, rrel_t *p);
void __cdecl ?consume_scattered_argloc_t__QEAAXPEAVscattered_aloc_t___Z(argloc_t *__hidden this, scattered_aloc_t *p);
bool __cdecl ?contains_interval_t__QEBA_NH_Z(const interval_t *__hidden this, int x);
bool __cdecl ?contains_range_t__QEBA_NAEBU1__Z(const range_t *__hidden this, const range_t *r);
bool __cdecl ?contains_range_t__QEBA_N_K_Z(const range_t *__hidden this, ea_t ea);
bool __cdecl ?contains_rangeset_t__QEBA_NAEBV1__Z(const rangeset_t *__hidden this, const rangeset_t *aset);
bool __cdecl ?contains_rangeset_t__QEBA_N_K_Z(const rangeset_t *__hidden this, ea_t ea);
bool __cdecl ?contains_rect_t__QEBA_NAEBUpoint_t___Z(const rect_t *__hidden this, const point_t *p);
bool __cdecl ?convert_array_to_ptr_tinfo_t__QEAA_NXZ(tinfo_t *__hidden this);
bool __cdecl ?convert_to_one_line_valstr_t__AEAA_NHH_Z(valstr_t *__hidden this, int ptvf, int max_length);
char *__cdecl ?copy_?$_Char_traits_DH_std__SAPEADQEADQEBD_K_Z(char *const _First1, char *const _First2, const size_t _Count);
unsigned __int16 *__cdecl ?copy_?$_Char_traits_GG_std__SAPEAGQEAGQEBG_K_Z(unsigned __int16 *const _First1, unsigned __int16 *const _First2, const size_t _Count);
__int16 *__cdecl ?copy_?$_Char_traits__SG_std__SAPEA_SQEA_SQEB_S_K_Z(__int16 *const _First1, __int16 *const _First2, const size_t _Count);
__int32 *__cdecl ?copy_?$_Char_traits__UI_std__SAPEA_UQEA_UQEB_U_K_Z(__int32 *const _First1, __int32 *const _First2, const size_t _Count);
__int16 *__cdecl ?copy_?$_Char_traits__WG_std__SAPEA_WQEA_WQEB_W_K_Z(__int16 *const _First1, __int16 *const _First2, const size_t _Count);
std::basic_string<char>::size_type __cdecl ?copy_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEAD_K_K_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, std::basic_string<char>::size_type _Count, const std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?copy_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEA_S_K_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, std::basic_string<char16_t>::size_type _Count, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?copy_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEA_U_K_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, std::basic_string<char32_t>::size_type _Count, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?copy_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEA_W_K_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, std::basic_string<wchar_t>::size_type _Count, const std::basic_string<wchar_t>::size_type _Off);
debug_event_t *__cdecl ?copy_debug_event_t__QEAAAEAU1_AEBU1__Z(debug_event_t *__hidden this, const debug_event_t *r);
void __cdecl ?copy_tinfo_t__AEAAXAEBV1__Z(tinfo_t *__hidden this, const tinfo_t *r);
argpart_t *__cdecl ?copy_from_argpart_t__QEAAAEAU1_AEBVargloc_t___Z(argpart_t *__hidden this, const argloc_t *a);
void __cdecl ?copy_range_?$qvector_D__AEAAXAEBV1__K1_Z(qvector<char> *__hidden this, const qvector<char> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_E__AEAAXAEBV1__K1_Z(qvector<unsigned char> *__hidden this, const qvector<unsigned char> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_H__AEAAXAEBV1__K1_Z(qvector<int> *__hidden this, const qvector<int> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_I__AEAAXAEBV1__K1_Z(qvector<unsigned int> *__hidden this, const qvector<unsigned int> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__AEAAXAEBV1__K1_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, const qvector<long long (*)(syntax_highlight_style *, const char *)> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__AEAAXAEBV1__K1_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_PEAUbpt_t____AEAAXAEBV1__K1_Z(qvector<bpt_t *> *__hidden this, const qvector<bpt_t *> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_PEAUextlang_t____AEAAXAEBV1__K1_Z(qvector<extlang_t *> *__hidden this, const qvector<extlang_t *> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_PEAUline_rendering_output_entry_t____AEAAXAEBV1__K1_Z(qvector<line_rendering_output_entry_t *> *__hidden this, const qvector<line_rendering_output_entry_t *> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_PEAVsnapshot_t____AEAAXAEBV1__K1_Z(qvector<snapshot_t *> *__hidden this, const qvector<snapshot_t *> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_PEBD__AEAAXAEBV1__K1_Z(qvector<const char *> *__hidden this, const qvector<const char *> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_PEBUbpt_t____AEAAXAEBV1__K1_Z(qvector<const bpt_t *> *__hidden this, const qvector<const bpt_t *> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_PEBVrangeset_t____AEAAXAEBV1__K1_Z(qvector<const rangeset_t *> *__hidden this, const qvector<const rangeset_t *> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_PEBVtwinline_t____AEAAXAEBV1__K1_Z(qvector<const twinline_t *> *__hidden this, const qvector<const twinline_t *> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uargpart_t____AEAAXAEBV1__K1_Z(qvector<argpart_t> *__hidden this, const qvector<argpart_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ubpt_t____AEAAXAEBV1__K1_Z(qvector<bpt_t> *__hidden this, const qvector<bpt_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ubptaddrs_t____AEAAXAEBV1__K1_Z(qvector<bptaddrs_t> *__hidden this, const qvector<bptaddrs_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ucall_stack_info_t____AEAAXAEBV1__K1_Z(qvector<call_stack_info_t> *__hidden this, const qvector<call_stack_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ucatch_t____AEAAXAEBV1__K1_Z(qvector<catch_t> *__hidden this, const qvector<catch_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ucfgopt_set_t____AEAAXAEBV1__K1_Z(qvector<cfgopt_set_t> *__hidden this, const qvector<cfgopt_set_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uchannel_redir_t____AEAAXAEBV1__K1_Z(qvector<channel_redir_t> *__hidden this, const qvector<channel_redir_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ucliopt_t____AEAAXAEBV1__K1_Z(qvector<cliopt_t> *__hidden this, const qvector<cliopt_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ucompiled_binpat_t____AEAAXAEBV1__K1_Z(qvector<compiled_binpat_t> *__hidden this, const qvector<compiled_binpat_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Udebug_event_t____AEAAXAEBV1__K1_Z(qvector<debug_event_t> *__hidden this, const qvector<debug_event_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Udirentry_t____AEAAXAEBV1__K1_Z(qvector<direntry_t> *__hidden this, const qvector<direntry_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Udirtree_cursor_t____AEAAXAEBV1__K1_Z(qvector<dirtree_cursor_t> *__hidden this, const qvector<dirtree_cursor_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uea_name_t____AEAAXAEBV1__K1_Z(qvector<ea_name_t> *__hidden this, const qvector<ea_name_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uedge_t____AEAAXAEBV1__K1_Z(qvector<edge_t> *__hidden this, const qvector<edge_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uenum_member_t____AEAAXAEBV1__K1_Z(qvector<enum_member_t> *__hidden this, const qvector<enum_member_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uexception_info_t____AEAAXAEBV1__K1_Z(qvector<exception_info_t> *__hidden this, const qvector<exception_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ufixup_info_t____AEAAXAEBV1__K1_Z(qvector<fixup_info_t> *__hidden this, const qvector<fixup_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ufuncarg_t____AEAAXAEBV1__K1_Z(qvector<funcarg_t> *__hidden this, const qvector<funcarg_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ugroup_crinfo_t____AEAAXAEBV1__K1_Z(qvector<group_crinfo_t> *__hidden this, const qvector<group_crinfo_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uidc_global_t____AEAAXAEBV1__K1_Z(qvector<idc_global_t> *__hidden this, const qvector<idc_global_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uidp_desc_t____AEAAXAEBV1__K1_Z(qvector<idp_desc_t> *__hidden this, const qvector<idp_desc_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uidp_name_t____AEAAXAEBV1__K1_Z(qvector<idp_name_t> *__hidden this, const qvector<idp_name_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uioport_bit_t____AEAAXAEBV1__K1_Z(qvector<ioport_bit_t> *__hidden this, const qvector<ioport_bit_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uioport_t____AEAAXAEBV1__K1_Z(qvector<ioport_t> *__hidden this, const qvector<ioport_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ujvalue_t____AEAAXAEBV1__K1_Z(qvector<jvalue_t> *__hidden this, const qvector<jvalue_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____AEAAXAEBV1__K1_Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, const qvector<ida_syntax_highlighter_t::keywords_style_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ukvp_t____AEAAXAEBV1__K1_Z(qvector<kvp_t> *__hidden this, const qvector<kvp_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ulochist_entry_t____AEAAXAEBV1__K1_Z(qvector<lochist_entry_t> *__hidden this, const qvector<lochist_entry_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ulowcnd_t____AEAAXAEBV1__K1_Z(qvector<lowcnd_t> *__hidden this, const qvector<lowcnd_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Umemory_info_t____AEAAXAEBV1__K1_Z(qvector<memory_info_t> *__hidden this, const qvector<memory_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Umemreg_info_t____AEAAXAEBV1__K1_Z(qvector<memreg_info_t> *__hidden this, const qvector<memreg_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Umodinfo_t____AEAAXAEBV1__K1_Z(qvector<modinfo_t> *__hidden this, const qvector<modinfo_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Umovbpt_info_t____AEAAXAEBV1__K1_Z(qvector<movbpt_info_t> *__hidden this, const qvector<movbpt_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____AEAAXAEBV1__K1_Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, const qvector<ida_syntax_highlighter_t::multicmt_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____AEAAXAEBV1__K1_Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Upoint_t____AEAAXAEBV1__K1_Z(qvector<point_t> *__hidden this, const qvector<point_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uprocess_info_t____AEAAXAEBV1__K1_Z(qvector<process_info_t> *__hidden this, const qvector<process_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uqbasic_block_t____AEAAXAEBV1__K1_Z(qvector<qbasic_block_t> *__hidden this, const qvector<qbasic_block_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Urange_t____AEAAXAEBV1__K1_Z(qvector<range_t> *__hidden this, const qvector<range_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Urect_t____AEAAXAEBV1__K1_Z(qvector<rect_t> *__hidden this, const qvector<rect_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Urefinfo_desc_t____AEAAXAEBV1__K1_Z(qvector<refinfo_desc_t> *__hidden this, const qvector<refinfo_desc_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ureg_access_t____AEAAXAEBV1__K1_Z(qvector<reg_access_t> *__hidden this, const qvector<reg_access_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ureg_info_t____AEAAXAEBV1__K1_Z(qvector<reg_info_t> *__hidden this, const qvector<reg_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uregister_info_t____AEAAXAEBV1__K1_Z(qvector<register_info_t> *__hidden this, const qvector<register_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uregobj_t____AEAAXAEBV1__K1_Z(qvector<regobj_t> *__hidden this, const qvector<regobj_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uregval_t____AEAAXAEBV1__K1_Z(qvector<regval_t> *__hidden this, const qvector<regval_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Urow_info_t____AEAAXAEBV1__K1_Z(qvector<row_info_t> *__hidden this, const qvector<row_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uscattered_segm_t____AEAAXAEBV1__K1_Z(qvector<scattered_segm_t> *__hidden this, const qvector<scattered_segm_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Usegm_move_info_t____AEAAXAEBV1__K1_Z(qvector<segm_move_info_t> *__hidden this, const qvector<segm_move_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uselection_item_t____AEAAXAEBV1__K1_Z(qvector<selection_item_t> *__hidden this, const qvector<selection_item_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Usimd_info_t____AEAAXAEBV1__K1_Z(qvector<simd_info_t> *__hidden this, const qvector<simd_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Usimpleline_t____AEAAXAEBV1__K1_Z(qvector<simpleline_t> *__hidden this, const qvector<simpleline_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Ustkpnt_t____AEAAXAEBV1__K1_Z(qvector<stkpnt_t> *__hidden this, const qvector<stkpnt_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Utev_info_reg_t____AEAAXAEBV1__K1_Z(qvector<tev_info_reg_t> *__hidden this, const qvector<tev_info_reg_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Utev_info_t____AEAAXAEBV1__K1_Z(qvector<tev_info_t> *__hidden this, const qvector<tev_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Utev_reg_value_t____AEAAXAEBV1__K1_Z(qvector<tev_reg_value_t> *__hidden this, const qvector<tev_reg_value_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uthread_name_t____AEAAXAEBV1__K1_Z(qvector<thread_name_t> *__hidden this, const qvector<thread_name_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Utoken_t____AEAAXAEBV1__K1_Z(qvector<token_t> *__hidden this, const qvector<token_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Utype_attr_t____AEAAXAEBV1__K1_Z(qvector<type_attr_t> *__hidden this, const qvector<type_attr_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uudt_member_t____AEAAXAEBV1__K1_Z(qvector<udt_member_t> *__hidden this, const qvector<udt_member_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uupdate_bpt_info_t____AEAAXAEBV1__K1_Z(qvector<update_bpt_info_t> *__hidden this, const qvector<update_bpt_info_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Uxreflist_entry_t____AEAAXAEBV1__K1_Z(qvector<xreflist_entry_t> *__hidden this, const qvector<xreflist_entry_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_V?$_qstring_D____AEAAXAEBV1__K1_Z(qvector<_qstring<char>> *__hidden this, const qvector<_qstring<char>> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_V?$_qstring_E____AEAAXAEBV1__K1_Z(qvector<_qstring<unsigned char>> *__hidden this, const qvector<_qstring<unsigned char>> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_V?$_qstring__W____AEAAXAEBV1__K1_Z(qvector<_qstring<wchar_t>> *__hidden this, const qvector<_qstring<wchar_t>> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_V?$qrefcnt_t_Vsource_item_t______AEAAXAEBV1__K1_Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, const qvector<qrefcnt_t<source_item_t>> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_V?$qvector_H____AEAAXAEBV1__K1_Z(qvector<qvector<int>> *__hidden this, const qvector<qvector<int>> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_V?$qvector_PEBD____AEAAXAEBV1__K1_Z(qvector<qvector<const char *>> *__hidden this, const qvector<qvector<const char *>> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_V?$qvector_PEBVtwinline_t______AEAAXAEBV1__K1_Z(qvector<qvector<const twinline_t *>> *__hidden this, const qvector<qvector<const twinline_t *>> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_V?$qvector__J____AEAAXAEBV1__K1_Z(qvector<qvector<long long>> *__hidden this, const qvector<qvector<long long>> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Vargloc_t____AEAAXAEBV1__K1_Z(qvector<argloc_t> *__hidden this, const qvector<argloc_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Vintmap_t____AEAAXAEBV1__K1_Z(qvector<intmap_t> *__hidden this, const qvector<intmap_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Vnode_set_t____AEAAXAEBV1__K1_Z(qvector<node_set_t> *__hidden this, const qvector<node_set_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Vop_t____AEAAXAEBV1__K1_Z(qvector<op_t> *__hidden this, const qvector<op_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Vrangeset_t____AEAAXAEBV1__K1_Z(qvector<rangeset_t> *__hidden this, const qvector<rangeset_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Vsync_source_t____AEAAXAEBV1__K1_Z(qvector<sync_source_t> *__hidden this, const qvector<sync_source_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Vtinfo_t____AEAAXAEBV1__K1_Z(qvector<tinfo_t> *__hidden this, const qvector<tinfo_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Vtryblk_t____AEAAXAEBV1__K1_Z(qvector<tryblk_t> *__hidden this, const qvector<tryblk_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Vtwinline_t____AEAAXAEBV1__K1_Z(qvector<twinline_t> *__hidden this, const qvector<twinline_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_Vvalstr_t____AEAAXAEBV1__K1_Z(qvector<valstr_t> *__hidden this, const qvector<valstr_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector_W4movbpt_code_t____AEAAXAEBV1__K1_Z(qvector<movbpt_code_t> *__hidden this, const qvector<movbpt_code_t> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector__J__AEAAXAEBV1__K1_Z(qvector<long long> *__hidden this, const qvector<long long> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector__K__AEAAXAEBV1__K1_Z(qvector<unsigned long long> *__hidden this, const qvector<unsigned long long> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector__N__AEAAXAEBV1__K1_Z(qvector<bool> *__hidden this, const qvector<bool> *x, size_t from, size_t _newsize);
void __cdecl ?copy_range_?$qvector__W__AEAAXAEBV1__K1_Z(qvector<wchar_t> *__hidden this, const qvector<wchar_t> *x, size_t from, size_t _newsize);
void __cdecl ?copyfrom_enumplace_t__UEAAXPEBVplace_t___Z(enumplace_t *__hidden this, const place_t *from);
void __cdecl ?copyfrom_hexplace_t__UEAAXPEBVplace_t___Z(hexplace_t *__hidden this, const place_t *from);
void __cdecl ?copyfrom_idaplace_t__UEAAXPEBVplace_t___Z(idaplace_t *__hidden this, const place_t *from);
void __cdecl ?copyfrom_place_t__UEAAXPEBV1__Z(place_t *__hidden this, const place_t *from);
void __cdecl ?copyfrom_simpleline_place_t__UEAAXPEBVplace_t___Z(simpleline_place_t *__hidden this, const place_t *from);
void __cdecl ?copyfrom_structplace_t__UEAAXPEBVplace_t___Z(structplace_t *__hidden this, const place_t *from);
size_t __cdecl ?copyto_netnode__QEAA_KV1__K_Z(netnode *__hidden this, netnode destnode, nodeidx_t count);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::size_type __cdecl ?count_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA_KAEBH_Z(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::size_type __cdecl ?count_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA_KAEBV?$_qstring_D___Z(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::size_type __cdecl ?count_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA_KAEB_K_Z(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::size_type __cdecl ?count_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA_KAEB_K_Z(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::size_type __cdecl ?count_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA_KAEBH_Z(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type *_Keyval);
asize_t __cdecl ?count_rangeset_t__QEBA_KXZ(const rangeset_t *__hidden this);
size_t __cdecl ?count_items_with_type_jarr_t__QEBA_KW4jtype_t___Z(const jarr_t *__hidden this, jtype_t t);
catchvec_t *__cdecl ?cpp_tryblk_t__QEAAAEAV?$qvector_Ucatch_t____XZ(tryblk_t *__hidden this);
const catchvec_t *__cdecl ?cpp_tryblk_t__QEBAAEBV?$qvector_Ucatch_t____XZ(const tryblk_t *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_reverse_iterator __cdecl ?crbegin_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_reverse_iterator __cdecl ?crbegin_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_reverse_iterator __cdecl ?crbegin_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_reverse_iterator __cdecl ?crbegin_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_reverse_iterator __cdecl ?crbegin_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::basic_string<char>::const_reverse_iterator __cdecl ?crbegin_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___2_XZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::const_reverse_iterator __cdecl ?crbegin_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___2_XZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::const_reverse_iterator __cdecl ?crbegin_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___2_XZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::const_reverse_iterator __cdecl ?crbegin_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___2_XZ(const std::basic_string<wchar_t> *__hidden this);
bool __cdecl ?create_netnode__QEAA_NPEBD_K_Z(netnode *__hidden this, const char *_name, size_t namlen);
bool __cdecl ?create_netnode__QEAA_NXZ(netnode *__hidden this);
void __cdecl ?create_qflow_chart_t__QEAAXPEBDAEBUrangevec_t__H_Z(qflow_chart_t *__hidden this, const char *_title, const rangevec_t *ranges, int _flags);
void __cdecl ?create_qflow_chart_t__QEAAXPEBDPEAVfunc_t___K2H_Z(qflow_chart_t *__hidden this, const char *_title, func_t *_pfn, ea_t _ea1, ea_t _ea2, int _flags);
refcnted_regex_t *__cdecl ?create_refcnted_regex_t__SAPEAV1_AEBV?$_qstring_D___NPEAV2__Z(const qstring *text, bool case_insensitive, qstring *errmsg);
bool __cdecl ?create_array_tinfo_t__QEAA_NAEBUarray_type_data_t__E_Z(tinfo_t *__hidden this, const array_type_data_t *p, type_t decl_type);
bool __cdecl ?create_array_tinfo_t__QEAA_NAEBV1_IIE_Z(tinfo_t *__hidden this, const tinfo_t *tif, uint32 nelems, uint32 base, type_t decl_type);
bool __cdecl ?create_bitfield_tinfo_t__QEAA_NAEBUbitfield_type_data_t__E_Z(tinfo_t *__hidden this, const bitfield_type_data_t *p, type_t decl_type);
bool __cdecl ?create_bitfield_tinfo_t__QEAA_NEE_NE_Z(tinfo_t *__hidden this, uchar nbytes, uchar width, bool is_unsigned, type_t decl_type);
source_item_iterator __cdecl ?create_children_iterator_source_item_t__UEAA?AV?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________XZ(source_item_t *__hidden this);
bool __cdecl ?create_circle_layout_abstract_graph_t__QEAA_NUpoint_t__H_Z(abstract_graph_t *__hidden this, point_t p, int radius);
bool __cdecl ?create_digraph_layout_mutable_graph_t__QEAA_NXZ(mutable_graph_t *__hidden this);
void __cdecl ?create_empty_string_idc_value_t__QEAAXXZ(idc_value_t *__hidden this);
bool __cdecl ?create_enum_tinfo_t__QEAA_NAEAUenum_type_data_t__E_Z(tinfo_t *__hidden this, enum_type_data_t *p, type_t decl_type);
source_file_iterator __cdecl ?create_file_iterator_srcinfo_provider_t__UEAA?AV?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________PEBD_Z(srcinfo_provider_t *__hidden this, const char *filename);
ssize_t __cdecl ?create_flat_group_processor_t__SA_J_KH0_Z(ea_t image_base, int bitness, sel_t dataseg_sel);
tinfo_code_t __cdecl ?create_forward_decl_tinfo_t__QEAA?AW4tinfo_code_t__PEAUtil_t__EPEBDH_Z(tinfo_t *__hidden this, til_t *til, type_t decl_type, const char *name, int ntf_flags);
bool __cdecl ?create_func_tinfo_t__QEAA_NAEAUfunc_type_data_t__E_Z(tinfo_t *__hidden this, func_type_data_t *p, type_t decl_type);
ssize_t __cdecl ?create_func_frame_processor_t__SA_JPEAVfunc_t___Z(func_t *pfn);
void __cdecl ?create_graph_row_info_abstract_graph_t__IEBAXAEBV?$qvector_H__AEAV?$qvector_Urow_info_t____H_Z(const abstract_graph_t *__hidden this, const intvec_t *tops, graph_row_info_t *gri, int graph_height);
int __cdecl ?create_group_mutable_graph_t__QEAAHAEBV?$qvector_H___Z(mutable_graph_t *__hidden this, const intvec_t *nodes);
source_item_iterator __cdecl ?create_item_iterator_srcinfo_provider_t__UEAA?AV?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________PEBVsource_file_t___Z(srcinfo_provider_t *__hidden this, const source_file_t *sf);
ssize_t __cdecl ?create_merge_handlers_processor_t__SA_JPEAVmerge_data_t___Z(merge_data_t *md);
bool __cdecl ?create_op_data_insn_t__QEBA_N_KAEBVop_t___Z(const insn_t *__hidden this, ea_t ea_, const op_t *op);
bool __cdecl ?create_op_data_insn_t__QEBA_N_KHE_Z(const insn_t *__hidden this, ea_t ea_, int opoff, op_dtype_t dtype);
bool __cdecl ?create_orthogonal_layout_abstract_graph_t__QEAA_NXZ(abstract_graph_t *__hidden this);
bool __cdecl ?create_polar_tree_layout_abstract_graph_t__QEAA_NUpoint_t__H_Z(abstract_graph_t *__hidden this, point_t p, int radius);
bool __cdecl ?create_ptr_tinfo_t__QEAA_NAEBUptr_type_data_t__E_Z(tinfo_t *__hidden this, const ptr_type_data_t *p, type_t decl_type);
bool __cdecl ?create_ptr_tinfo_t__QEAA_NAEBV1_EE_Z(tinfo_t *__hidden this, const tinfo_t *tif, uchar bps, type_t decl_type);
bool __cdecl ?create_radial_tree_layout_abstract_graph_t__QEAA_NUpoint_t__H_Z(abstract_graph_t *__hidden this, point_t p, int radius);
bool __cdecl ?create_simple_type_tinfo_t__QEAA_NE_Z(tinfo_t *__hidden this, type_t decl_type);
void __cdecl ?create_spanning_tree_abstract_graph_t__IEBAXPEAVedge_typer_t__PEAVnode_set_t__PEAUedgeset_t__PEAVnode_ordering_t__3_Z(const abstract_graph_t *__hidden this, edge_typer_t *et, node_set_t *entries, edgeset_t *back_edges, node_ordering_t *pre, node_ordering_t *post);
bool __cdecl ?create_stkvar_insn_t__QEBA_NAEBVop_t___JH_Z(const insn_t *__hidden this, const op_t *x, adiff_t v, int flags_);
ssize_t __cdecl ?create_switch_xrefs_processor_t__SA_J_KAEBUswitch_info_t___Z(ea_t jumpea, const switch_info_t *si);
bool __cdecl ?create_tree_layout_abstract_graph_t__QEAA_NXZ(abstract_graph_t *__hidden this);
bool __cdecl ?create_type_tinfo_t__AEAA_NEEPEAX_Z(tinfo_t *__hidden this, type_t decl_type, type_t bt2, void *details);
void __cdecl ?create_typedef_tinfo_t__QEAAXPEBUtil_t__IE_Z(tinfo_t *__hidden this, const til_t *til, uint ord, type_t decl_type);
void __cdecl ?create_typedef_tinfo_t__QEAAXPEBUtil_t__PEBDE_N_Z(tinfo_t *__hidden this, const til_t *til, const char *name, type_t decl_type, bool try_ordinal);
bool __cdecl ?create_typedef_tinfo_t__QEAA_NAEBUtypedef_type_data_t__E_N_Z(tinfo_t *__hidden this, const typedef_type_data_t *p, type_t decl_type, bool try_ordinal);
bool __cdecl ?create_udt_tinfo_t__QEAA_NAEAUudt_type_data_t__E_Z(tinfo_t *__hidden this, udt_type_data_t *p, type_t decl_type);
void __cdecl ?create_union_bitrange_t__QEAAXAEBV1__Z(bitrange_t *__hidden this, const bitrange_t *r);
ssize_t __cdecl ?creating_segm_processor_t__SA_JPEAVsegment_t___Z(segment_t *seg);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_reverse_iterator __cdecl ?crend_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_reverse_iterator __cdecl ?crend_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_reverse_iterator __cdecl ?crend_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_reverse_iterator __cdecl ?crend_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_reverse_iterator __cdecl ?crend_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::basic_string<char>::const_reverse_iterator __cdecl ?crend_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___2_XZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::const_reverse_iterator __cdecl ?crend_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___2_XZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::const_reverse_iterator __cdecl ?crend_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___2_XZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::const_reverse_iterator __cdecl ?crend_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___2_XZ(const std::basic_string<wchar_t> *__hidden this);
int32 __cdecl ?cur_block_state_highlighter_cbs_t__UEAAHXZ(highlighter_cbs_t *__hidden this);
ea_t __cdecl ?current_func_item_iterator_t__QEBA_KXZ(const func_item_iterator_t *__hidden this);
uint32 __cdecl ?current_index_lochist_t__QEBAIXZ(const lochist_t *__hidden this);
char *__cdecl ?data_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAPEBDXZ(const std::basic_string<char> *__hidden this);
__int16 *__cdecl ?data_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAPEB_SXZ(const std::basic_string<char16_t> *__hidden this);
__int32 *__cdecl ?data_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAPEB_UXZ(const std::basic_string<char32_t> *__hidden this);
__int16 *__cdecl ?data_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAPEB_WXZ(const std::basic_string<wchar_t> *__hidden this);
bool __cdecl ?dbg_enable_trace_debugger_t__QEAA_NH_NH_Z(debugger_t *__hidden this, thid_t tid, bool enable, int trace_flags);
int __cdecl ?dbsize_processor_t__QEAAHXZ(processor_t *__hidden this);
void __cdecl ?deallocate_?$allocator_D_std__QEAAXQEAD_K_Z(std::allocator<char> *__hidden this, char *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator_H_std__QEAAXQEAH_K_Z(std::allocator<int> *__hidden this, int *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator_U?$_Tree_node_HPEAX_std___std__QEAAXQEAU?$_Tree_node_HPEAX_2__K_Z(std::allocator<std::_Tree_node<int, void *>> *__hidden this, std::_Tree_node<int, void *> *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__QEAAXQEAU?$_Tree_node_U?$pair_$$CBHH_std__PEAX_2__K_Z(std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__hidden this, std::_Tree_node<std::pair<const int, int>, void *> *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__QEAAXQEAU?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_2__K_Z(std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__hidden this, std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *> *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__QEAAXQEAU?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_2__K_Z(std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__hidden this, std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *> *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__QEAAXQEAU?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_2__K_Z(std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__hidden this, std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *> *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator_U?$pair_$$CBHH_std___std__QEAAXQEAU?$pair_$$CBHH_2__K_Z(std::allocator<std::pair<const int, int>> *__hidden this, std::pair<const int, int> *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEAAXQEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____2__K_Z(std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this, std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEAAXQEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____2__K_Z(std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this, std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator_U?$pair_$$CB_K_K_std___std__QEAAXQEAU?$pair_$$CB_K_K_2__K_Z(std::allocator<std::pair<const unsigned long long, unsigned long long>> *__hidden this, std::pair<const unsigned long long, unsigned long long> *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator__S_std__QEAAXQEA_S_K_Z(std::allocator<char16_t> *__hidden this, __int16 *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator__U_std__QEAAXQEA_U_K_Z(std::allocator<char32_t> *__hidden this, __int32 *const _Ptr, const size_t _Count);
void __cdecl ?deallocate_?$allocator__W_std__QEAAXQEA_W_K_Z(std::allocator<wchar_t> *__hidden this, __int16 *const _Ptr, const size_t _Count);
bool __cdecl ?decode_preceding_insn_func_item_iterator_t__QEAA_NPEAV?$qvector__K__PEA_NPEAVinsn_t___Z(func_item_iterator_t *__hidden this, eavec_t *visited, bool *p_farref, insn_t *out);
bool __cdecl ?decode_prev_insn_func_item_iterator_t__QEAA_NPEAVinsn_t___Z(func_item_iterator_t *__hidden this, insn_t *out);
ssize_t __cdecl ?decorate_name_processor_t__SA_JPEAV?$_qstring_D__PEBD_NEAEBVtinfo_t___Z(qstring *outbuf, const char *name, bool mangle, cm_t cc, const tinfo_t *type);
bool __cdecl ?del_?$qvector_D__QEAA_NAEBD_Z(qvector<char> *__hidden this, char *x);
bool __cdecl ?del_?$qvector_E__QEAA_NAEBE_Z(qvector<unsigned char> *__hidden this, unsigned __int8 *x);
bool __cdecl ?del_?$qvector_H__QEAA_NAEBH_Z(qvector<int> *__hidden this, int *x);
bool __cdecl ?del_?$qvector_I__QEAA_NAEBI_Z(qvector<unsigned int> *__hidden this, unsigned int *x);
bool __cdecl ?del_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAA_NAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
bool __cdecl ?del_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAA_NAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
bool __cdecl ?del_?$qvector_PEAUbpt_t____QEAA_NAEBQEAUbpt_t___Z(qvector<bpt_t *> *__hidden this, bpt_t **x);
bool __cdecl ?del_?$qvector_PEAUextlang_t____QEAA_NAEBQEAUextlang_t___Z(qvector<extlang_t *> *__hidden this, extlang_t **x);
bool __cdecl ?del_?$qvector_PEAUline_rendering_output_entry_t____QEAA_NAEBQEAUline_rendering_output_entry_t___Z(qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
bool __cdecl ?del_?$qvector_PEAVsnapshot_t____QEAA_NAEBQEAVsnapshot_t___Z(qvector<snapshot_t *> *__hidden this, snapshot_t **x);
bool __cdecl ?del_?$qvector_PEBD__QEAA_NAEBQEBD_Z(qvector<const char *> *__hidden this, const char **x);
bool __cdecl ?del_?$qvector_PEBUbpt_t____QEAA_NAEBQEBUbpt_t___Z(qvector<const bpt_t *> *__hidden this, const bpt_t **x);
bool __cdecl ?del_?$qvector_PEBVrangeset_t____QEAA_NAEBQEBVrangeset_t___Z(qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
bool __cdecl ?del_?$qvector_PEBVtwinline_t____QEAA_NAEBQEBVtwinline_t___Z(qvector<const twinline_t *> *__hidden this, const twinline_t **x);
bool __cdecl ?del_?$qvector_Uargpart_t____QEAA_NAEBUargpart_t___Z(qvector<argpart_t> *__hidden this, argpart_t *x);
bool __cdecl ?del_?$qvector_Ubpt_t____QEAA_NAEBUbpt_t___Z(qvector<bpt_t> *__hidden this, bpt_t *x);
bool __cdecl ?del_?$qvector_Ubptaddrs_t____QEAA_NAEBUbptaddrs_t___Z(qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
bool __cdecl ?del_?$qvector_Ucall_stack_info_t____QEAA_NAEBUcall_stack_info_t___Z(qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
bool __cdecl ?del_?$qvector_Ucatch_t____QEAA_NAEBUcatch_t___Z(qvector<catch_t> *__hidden this, catch_t *x);
bool __cdecl ?del_?$qvector_Ucfgopt_set_t____QEAA_NAEBUcfgopt_set_t___Z(qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
bool __cdecl ?del_?$qvector_Uchannel_redir_t____QEAA_NAEBUchannel_redir_t___Z(qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
bool __cdecl ?del_?$qvector_Ucliopt_t____QEAA_NAEBUcliopt_t___Z(qvector<cliopt_t> *__hidden this, cliopt_t *x);
bool __cdecl ?del_?$qvector_Ucompiled_binpat_t____QEAA_NAEBUcompiled_binpat_t___Z(qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
bool __cdecl ?del_?$qvector_Udebug_event_t____QEAA_NAEBUdebug_event_t___Z(qvector<debug_event_t> *__hidden this, debug_event_t *x);
bool __cdecl ?del_?$qvector_Udirentry_t____QEAA_NAEBUdirentry_t___Z(qvector<direntry_t> *__hidden this, direntry_t *x);
bool __cdecl ?del_?$qvector_Udirtree_cursor_t____QEAA_NAEBUdirtree_cursor_t___Z(qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
bool __cdecl ?del_?$qvector_Uea_name_t____QEAA_NAEBUea_name_t___Z(qvector<ea_name_t> *__hidden this, ea_name_t *x);
bool __cdecl ?del_?$qvector_Uedge_t____QEAA_NAEBUedge_t___Z(qvector<edge_t> *__hidden this, edge_t *x);
bool __cdecl ?del_?$qvector_Uenum_member_t____QEAA_NAEBUenum_member_t___Z(qvector<enum_member_t> *__hidden this, enum_member_t *x);
bool __cdecl ?del_?$qvector_Uexception_info_t____QEAA_NAEBUexception_info_t___Z(qvector<exception_info_t> *__hidden this, exception_info_t *x);
bool __cdecl ?del_?$qvector_Ufixup_info_t____QEAA_NAEBUfixup_info_t___Z(qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
bool __cdecl ?del_?$qvector_Ufuncarg_t____QEAA_NAEBUfuncarg_t___Z(qvector<funcarg_t> *__hidden this, funcarg_t *x);
bool __cdecl ?del_?$qvector_Ugroup_crinfo_t____QEAA_NAEBUgroup_crinfo_t___Z(qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
bool __cdecl ?del_?$qvector_Uidc_global_t____QEAA_NAEBUidc_global_t___Z(qvector<idc_global_t> *__hidden this, idc_global_t *x);
bool __cdecl ?del_?$qvector_Uidp_desc_t____QEAA_NAEBUidp_desc_t___Z(qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
bool __cdecl ?del_?$qvector_Uidp_name_t____QEAA_NAEBUidp_name_t___Z(qvector<idp_name_t> *__hidden this, idp_name_t *x);
bool __cdecl ?del_?$qvector_Uioport_bit_t____QEAA_NAEBUioport_bit_t___Z(qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
bool __cdecl ?del_?$qvector_Uioport_t____QEAA_NAEBUioport_t___Z(qvector<ioport_t> *__hidden this, ioport_t *x);
bool __cdecl ?del_?$qvector_Ujvalue_t____QEAA_NAEBUjvalue_t___Z(qvector<jvalue_t> *__hidden this, jvalue_t *x);
bool __cdecl ?del_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAA_NAEBUkeywords_style_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
bool __cdecl ?del_?$qvector_Ukvp_t____QEAA_NAEBUkvp_t___Z(qvector<kvp_t> *__hidden this, kvp_t *x);
bool __cdecl ?del_?$qvector_Ulochist_entry_t____QEAA_NAEBUlochist_entry_t___Z(qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
bool __cdecl ?del_?$qvector_Ulowcnd_t____QEAA_NAEBUlowcnd_t___Z(qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
bool __cdecl ?del_?$qvector_Umemory_info_t____QEAA_NAEBUmemory_info_t___Z(qvector<memory_info_t> *__hidden this, memory_info_t *x);
bool __cdecl ?del_?$qvector_Umemreg_info_t____QEAA_NAEBUmemreg_info_t___Z(qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
bool __cdecl ?del_?$qvector_Umodinfo_t____QEAA_NAEBUmodinfo_t___Z(qvector<modinfo_t> *__hidden this, modinfo_t *x);
bool __cdecl ?del_?$qvector_Umovbpt_info_t____QEAA_NAEBUmovbpt_info_t___Z(qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
bool __cdecl ?del_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAA_NAEBUmulticmt_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
bool __cdecl ?del_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAA_NAEBUplain_char_ptr_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
bool __cdecl ?del_?$qvector_Upoint_t____QEAA_NAEBUpoint_t___Z(qvector<point_t> *__hidden this, point_t *x);
bool __cdecl ?del_?$qvector_Uprocess_info_t____QEAA_NAEBUprocess_info_t___Z(qvector<process_info_t> *__hidden this, process_info_t *x);
bool __cdecl ?del_?$qvector_Uqbasic_block_t____QEAA_NAEBUqbasic_block_t___Z(qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
bool __cdecl ?del_?$qvector_Urange_t____QEAA_NAEBUrange_t___Z(qvector<range_t> *__hidden this, range_t *x);
bool __cdecl ?del_?$qvector_Urect_t____QEAA_NAEBUrect_t___Z(qvector<rect_t> *__hidden this, rect_t *x);
bool __cdecl ?del_?$qvector_Urefinfo_desc_t____QEAA_NAEBUrefinfo_desc_t___Z(qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
bool __cdecl ?del_?$qvector_Ureg_access_t____QEAA_NAEBUreg_access_t___Z(qvector<reg_access_t> *__hidden this, reg_access_t *x);
bool __cdecl ?del_?$qvector_Ureg_info_t____QEAA_NAEBUreg_info_t___Z(qvector<reg_info_t> *__hidden this, reg_info_t *x);
bool __cdecl ?del_?$qvector_Uregister_info_t____QEAA_NAEBUregister_info_t___Z(qvector<register_info_t> *__hidden this, register_info_t *x);
bool __cdecl ?del_?$qvector_Uregobj_t____QEAA_NAEBUregobj_t___Z(qvector<regobj_t> *__hidden this, regobj_t *x);
bool __cdecl ?del_?$qvector_Uregval_t____QEAA_NAEBUregval_t___Z(qvector<regval_t> *__hidden this, regval_t *x);
bool __cdecl ?del_?$qvector_Urow_info_t____QEAA_NAEBUrow_info_t___Z(qvector<row_info_t> *__hidden this, row_info_t *x);
bool __cdecl ?del_?$qvector_Uscattered_segm_t____QEAA_NAEBUscattered_segm_t___Z(qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
bool __cdecl ?del_?$qvector_Usegm_move_info_t____QEAA_NAEBUsegm_move_info_t___Z(qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
bool __cdecl ?del_?$qvector_Uselection_item_t____QEAA_NAEBUselection_item_t___Z(qvector<selection_item_t> *__hidden this, selection_item_t *x);
bool __cdecl ?del_?$qvector_Usimd_info_t____QEAA_NAEBUsimd_info_t___Z(qvector<simd_info_t> *__hidden this, simd_info_t *x);
bool __cdecl ?del_?$qvector_Usimpleline_t____QEAA_NAEBUsimpleline_t___Z(qvector<simpleline_t> *__hidden this, simpleline_t *x);
bool __cdecl ?del_?$qvector_Ustkpnt_t____QEAA_NAEBUstkpnt_t___Z(qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
bool __cdecl ?del_?$qvector_Utev_info_reg_t____QEAA_NAEBUtev_info_reg_t___Z(qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
bool __cdecl ?del_?$qvector_Utev_info_t____QEAA_NAEBUtev_info_t___Z(qvector<tev_info_t> *__hidden this, tev_info_t *x);
bool __cdecl ?del_?$qvector_Utev_reg_value_t____QEAA_NAEBUtev_reg_value_t___Z(qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
bool __cdecl ?del_?$qvector_Uthread_name_t____QEAA_NAEBUthread_name_t___Z(qvector<thread_name_t> *__hidden this, thread_name_t *x);
bool __cdecl ?del_?$qvector_Utoken_t____QEAA_NAEBUtoken_t___Z(qvector<token_t> *__hidden this, token_t *x);
bool __cdecl ?del_?$qvector_Utype_attr_t____QEAA_NAEBUtype_attr_t___Z(qvector<type_attr_t> *__hidden this, type_attr_t *x);
bool __cdecl ?del_?$qvector_Uudt_member_t____QEAA_NAEBUudt_member_t___Z(qvector<udt_member_t> *__hidden this, udt_member_t *x);
bool __cdecl ?del_?$qvector_Uupdate_bpt_info_t____QEAA_NAEBUupdate_bpt_info_t___Z(qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
bool __cdecl ?del_?$qvector_Uxreflist_entry_t____QEAA_NAEBUxreflist_entry_t___Z(qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
bool __cdecl ?del_?$qvector_V?$_qstring_D____QEAA_NAEBV?$_qstring_D___Z(qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
bool __cdecl ?del_?$qvector_V?$_qstring_E____QEAA_NAEBV?$_qstring_E___Z(qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
bool __cdecl ?del_?$qvector_V?$_qstring__W____QEAA_NAEBV?$_qstring__W___Z(qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
bool __cdecl ?del_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAA_NAEBV?$qrefcnt_t_Vsource_item_t_____Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
bool __cdecl ?del_?$qvector_V?$qvector_H____QEAA_NAEBV?$qvector_H___Z(qvector<qvector<int>> *__hidden this, qvector<int> *x);
bool __cdecl ?del_?$qvector_V?$qvector_PEBD____QEAA_NAEBV?$qvector_PEBD___Z(qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
bool __cdecl ?del_?$qvector_V?$qvector_PEBVtwinline_t______QEAA_NAEBV?$qvector_PEBVtwinline_t_____Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
bool __cdecl ?del_?$qvector_V?$qvector__J____QEAA_NAEBV?$qvector__J___Z(qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
bool __cdecl ?del_?$qvector_Vargloc_t____QEAA_NAEBVargloc_t___Z(qvector<argloc_t> *__hidden this, argloc_t *x);
bool __cdecl ?del_?$qvector_Vintmap_t____QEAA_NAEBVintmap_t___Z(qvector<intmap_t> *__hidden this, intmap_t *x);
bool __cdecl ?del_?$qvector_Vnode_set_t____QEAA_NAEBVnode_set_t___Z(qvector<node_set_t> *__hidden this, node_set_t *x);
bool __cdecl ?del_?$qvector_Vop_t____QEAA_NAEBVop_t___Z(qvector<op_t> *__hidden this, op_t *x);
bool __cdecl ?del_?$qvector_Vrangeset_t____QEAA_NAEBVrangeset_t___Z(qvector<rangeset_t> *__hidden this, rangeset_t *x);
bool __cdecl ?del_?$qvector_Vsync_source_t____QEAA_NAEBVsync_source_t___Z(qvector<sync_source_t> *__hidden this, sync_source_t *x);
bool __cdecl ?del_?$qvector_Vtinfo_t____QEAA_NAEBVtinfo_t___Z(qvector<tinfo_t> *__hidden this, tinfo_t *x);
bool __cdecl ?del_?$qvector_Vtryblk_t____QEAA_NAEBVtryblk_t___Z(qvector<tryblk_t> *__hidden this, tryblk_t *x);
bool __cdecl ?del_?$qvector_Vtwinline_t____QEAA_NAEBVtwinline_t___Z(qvector<twinline_t> *__hidden this, twinline_t *x);
bool __cdecl ?del_?$qvector_Vvalstr_t____QEAA_NAEBVvalstr_t___Z(qvector<valstr_t> *__hidden this, valstr_t *x);
bool __cdecl ?del_?$qvector_W4movbpt_code_t____QEAA_NAEBW4movbpt_code_t___Z(qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
bool __cdecl ?del_?$qvector__J__QEAA_NAEB_J_Z(qvector<long long> *__hidden this, __int64 *x);
bool __cdecl ?del_?$qvector__K__QEAA_NAEB_K_Z(qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
bool __cdecl ?del_?$qvector__N__QEAA_NAEB_N_Z(qvector<bool> *__hidden this, bool *x);
bool __cdecl ?del_?$qvector__W__QEAA_NAEB_W_Z(qvector<wchar_t> *__hidden this, __int16 *x);
chooser_base_t::cbres_t __cdecl ?del_chooser_multi_t__UEAA?AW4cbres_t_chooser_base_t__PEAV?$qvector__K___Z(chooser_multi_t *__hidden this, sizevec_t *);
chooser_t::cbret_t __cdecl ?del_chooser_t__UEAA?AUcbret_t_1__K_Z(chooser_t *__hidden this, size_t);
bool __cdecl ?del_attr_tinfo_t__QEAA_NAEBV?$_qstring_D___N_Z(tinfo_t *__hidden this, const qstring *key, bool make_copy);
void __cdecl ?del_attrs_tinfo_t__QEAAXXZ(tinfo_t *__hidden this);
ssize_t __cdecl ?del_cref_processor_t__SA_J_K0_N_Z(ea_t from, ea_t to, bool expand);
void __cdecl ?del_custom_layout_mutable_graph_t__QEAAXXZ(mutable_graph_t *__hidden this);
ssize_t __cdecl ?del_dref_processor_t__SA_J_K0_Z(ea_t from, ea_t to);
bool __cdecl ?del_edge_mutable_graph_t__UEAA_NHH_Z(mutable_graph_t *__hidden this, int i, int j);
void __cdecl ?del_layer_nodes_mutable_graph_t__AEAAXAEAV?$qvector_Urow_info_t____H_Z(mutable_graph_t *__hidden this, graph_row_info_t *gri, int first_added_node);
void __cdecl ?del_module_srcinfo_provider_t__UEAAX_K_Z(srcinfo_provider_t *__hidden this, ea_t base);
ssize_t __cdecl ?del_node_mutable_graph_t__UEAA_JH_Z(mutable_graph_t *__hidden this, int n);
void __cdecl ?del_node_screen_graph_selection_t__QEAAXH_Z(screen_graph_selection_t *__hidden this, int node);
void __cdecl ?del_node_keep_edges_mutable_graph_t__AEAAXH_Z(mutable_graph_t *__hidden this, int n);
void __cdecl ?del_point_screen_graph_selection_t__QEAAXUedge_t__H_Z(screen_graph_selection_t *__hidden this, edge_t e, int idx);
bool __cdecl ?delay_slot_insn_processor_t__QEAA_NPEA_KPEA_N1_Z(processor_t *__hidden this, ea_t *ea, bool *bexec, bool *fexec);
int __cdecl ?delblob_netnode__QEAAH_KE_Z(netnode *__hidden this, nodeidx_t _start, uchar tag);
int __cdecl ?delblob_ea_netnode__QEAAH_KE_Z(netnode *__hidden this, ea_t ea, uchar tag);
bool __cdecl ?delete_group_mutable_graph_t__QEAA_NH_Z(mutable_graph_t *__hidden this, int group);
void __cdecl ?delref_?$qrefcnt_t_Uextlang_t____AEAAXXZ(qrefcnt_t<extlang_t> *__hidden this);
void __cdecl ?delref_?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________AEAAXXZ(qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__hidden this);
void __cdecl ?delref_?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________AEAAXXZ(qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__hidden this);
void __cdecl ?delref_?$qrefcnt_t_Vrefcnted_regex_t____AEAAXXZ(qrefcnt_t<refcnted_regex_t> *__hidden this);
void __cdecl ?delref_?$qrefcnt_t_Vsource_file_t____AEAAXXZ(qrefcnt_t<source_file_t> *__hidden this);
void __cdecl ?delref_?$qrefcnt_t_Vsource_item_t____AEAAXXZ(qrefcnt_t<source_item_t> *__hidden this);
bool __cdecl ?delvalue_netnode__QEAA_NXZ(netnode *__hidden this);
ssize_t __cdecl ?demangle_name_processor_t__SA_JPEAHPEAV?$_qstring_D__PEBDIH_Z(int32 *res, qstring *out, const char *name, uint32 disable_mask, int demreq);
char ?denorm_min_?$numeric_limits_C_std__SACXZ(void);
char ?denorm_min_?$numeric_limits_D_std__SADXZ(void);
unsigned __int8 ?denorm_min_?$numeric_limits_E_std__SAEXZ(void);
__int16 ?denorm_min_?$numeric_limits_F_std__SAFXZ(void);
unsigned __int16 ?denorm_min_?$numeric_limits_G_std__SAGXZ(void);
int ?denorm_min_?$numeric_limits_H_std__SAHXZ(void);
unsigned int ?denorm_min_?$numeric_limits_I_std__SAIXZ(void);
__int32 ?denorm_min_?$numeric_limits_J_std__SAJXZ(void);
unsigned __int32 ?denorm_min_?$numeric_limits_K_std__SAKXZ(void);
float ?denorm_min_?$numeric_limits_M_std__SAMXZ(void);
double ?denorm_min_?$numeric_limits_N_std__SANXZ(void);
long double ?denorm_min_?$numeric_limits_O_std__SAOXZ(void);
__int64 ?denorm_min_?$numeric_limits__J_std__SA_JXZ(void);
unsigned __int64 ?denorm_min_?$numeric_limits__K_std__SA_KXZ(void);
bool ?denorm_min_?$numeric_limits__N_std__SA_NXZ(void);
__int16 ?denorm_min_?$numeric_limits__S_std__SA_SXZ(void);
__int32 ?denorm_min_?$numeric_limits__U_std__SA_UXZ(void);
__int16 ?denorm_min_?$numeric_limits__W_std__SA_WXZ(void);
void __cdecl ?depth_first_abstract_graph_t__AEBAXHAEAUdepth_first_info_t___Z(const abstract_graph_t *__hidden this, int root, depth_first_info_t *di);
void __cdecl ?depth_first_abstract_graph_t__IEBAXPEAVnode_ordering_t__0PEAVedge_typer_t___Z(const abstract_graph_t *__hidden this, node_ordering_t *pre, node_ordering_t *post, edge_typer_t *et);
bool __cdecl ?deserialize_enumplace_t__UEAA_NPEAPEBEPEBE_Z(enumplace_t *__hidden this, const uchar **pptr, const uchar *end);
bool __cdecl ?deserialize_graph_location_info_t__QEAA_NAEAUmemory_deserializer_t___Z(graph_location_info_t *__hidden this, memory_deserializer_t *mmdsr);
bool __cdecl ?deserialize_hexplace_t__UEAA_NPEAPEBEPEBE_Z(hexplace_t *__hidden this, const uchar **pptr, const uchar *end);
bool __cdecl ?deserialize_idaplace_t__UEAA_NPEAPEBEPEBE_Z(idaplace_t *__hidden this, const uchar **pptr, const uchar *end);
bool __cdecl ?deserialize_lochist_entry_t__QEAA_NPEAPEBEQEBEPEBVplace_t___Z(lochist_entry_t *__hidden this, const uchar **ptr, const uchar *const end, const place_t *tmplate);
bool __cdecl ?deserialize_place_t__UEAA_NPEAPEBEPEBE_Z(place_t *__hidden this, const uchar **pptr, const uchar *end);
bool __cdecl ?deserialize_renderer_info_pos_t__QEAA_NAEAUmemory_deserializer_t___Z(renderer_info_pos_t *__hidden this, memory_deserializer_t *mmdsr);
bool __cdecl ?deserialize_simpleline_place_t__UEAA_NPEAPEBEPEBE_Z(simpleline_place_t *__hidden this, const uchar **pptr, const uchar *end);
bool __cdecl ?deserialize_structplace_t__UEAA_NPEAPEBEPEBE_Z(structplace_t *__hidden this, const uchar **pptr, const uchar *end);
bool __cdecl ?deserialize_tinfo_t__QEAA_NPEBUtil_t__PEAPEBE11_Z(tinfo_t *__hidden this, const til_t *til, const type_t **ptype, const p_list **pfields, const p_list **pfldcmts);
bool __cdecl ?deserialize_tinfo_t__QEAA_NPEBUtil_t__PEBV?$_qstring_E__11_Z(tinfo_t *__hidden this, const til_t *til, const qtype *ptype, const qtype *pfields, const qtype *pfldcmts);
drc_t __cdecl ?detach_process_debugger_t__QEAA?AW4drc_t__PEAV?$_qstring_D___Z(debugger_t *__hidden this, qstring *errbuf);
bool __cdecl ?display_voids_outctx_base_t__QEBA_NXZ(const outctx_base_t *__hidden this);
void __cdecl ?div_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
bool __cdecl ?does_return_func_t__QEBA_NXZ(const func_t *__hidden this);
const qstring *__cdecl ?down_linearray_t__QEAAPEBV?$_qstring_D__XZ(linearray_t *__hidden this);
const char *__cdecl ?dstr_?$qvector_D__QEBAPEBDXZ(const qvector<char> *__hidden this);
const char *__cdecl ?dstr_?$qvector_E__QEBAPEBDXZ(const qvector<unsigned char> *__hidden this);
const char *__cdecl ?dstr_?$qvector_H__QEBAPEBDXZ(const qvector<int> *__hidden this);
const char *__cdecl ?dstr_?$qvector_I__QEBAPEBDXZ(const qvector<unsigned int> *__hidden this);
const char *__cdecl ?dstr_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBAPEBDXZ(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
const char *__cdecl ?dstr_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBAPEBDXZ(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
const char *__cdecl ?dstr_?$qvector_PEAUbpt_t____QEBAPEBDXZ(const qvector<bpt_t *> *__hidden this);
const char *__cdecl ?dstr_?$qvector_PEAUextlang_t____QEBAPEBDXZ(const qvector<extlang_t *> *__hidden this);
const char *__cdecl ?dstr_?$qvector_PEAUline_rendering_output_entry_t____QEBAPEBDXZ(const qvector<line_rendering_output_entry_t *> *__hidden this);
const char *__cdecl ?dstr_?$qvector_PEAVsnapshot_t____QEBAPEBDXZ(const qvector<snapshot_t *> *__hidden this);
const char *__cdecl ?dstr_?$qvector_PEBD__QEBAPEBDXZ(const qvector<const char *> *__hidden this);
const char *__cdecl ?dstr_?$qvector_PEBUbpt_t____QEBAPEBDXZ(const qvector<const bpt_t *> *__hidden this);
const char *__cdecl ?dstr_?$qvector_PEBVrangeset_t____QEBAPEBDXZ(const qvector<const rangeset_t *> *__hidden this);
const char *__cdecl ?dstr_?$qvector_PEBVtwinline_t____QEBAPEBDXZ(const qvector<const twinline_t *> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uargpart_t____QEBAPEBDXZ(const qvector<argpart_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ubpt_t____QEBAPEBDXZ(const qvector<bpt_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ubptaddrs_t____QEBAPEBDXZ(const qvector<bptaddrs_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ucall_stack_info_t____QEBAPEBDXZ(const qvector<call_stack_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ucatch_t____QEBAPEBDXZ(const qvector<catch_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ucfgopt_set_t____QEBAPEBDXZ(const qvector<cfgopt_set_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uchannel_redir_t____QEBAPEBDXZ(const qvector<channel_redir_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ucliopt_t____QEBAPEBDXZ(const qvector<cliopt_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ucompiled_binpat_t____QEBAPEBDXZ(const qvector<compiled_binpat_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Udebug_event_t____QEBAPEBDXZ(const qvector<debug_event_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Udirentry_t____QEBAPEBDXZ(const qvector<direntry_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Udirtree_cursor_t____QEBAPEBDXZ(const qvector<dirtree_cursor_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uea_name_t____QEBAPEBDXZ(const qvector<ea_name_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uedge_t____QEBAPEBDXZ(const qvector<edge_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uenum_member_t____QEBAPEBDXZ(const qvector<enum_member_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uexception_info_t____QEBAPEBDXZ(const qvector<exception_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ufixup_info_t____QEBAPEBDXZ(const qvector<fixup_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ufuncarg_t____QEBAPEBDXZ(const qvector<funcarg_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ugroup_crinfo_t____QEBAPEBDXZ(const qvector<group_crinfo_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uidc_global_t____QEBAPEBDXZ(const qvector<idc_global_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uidp_desc_t____QEBAPEBDXZ(const qvector<idp_desc_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uidp_name_t____QEBAPEBDXZ(const qvector<idp_name_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uioport_bit_t____QEBAPEBDXZ(const qvector<ioport_bit_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uioport_t____QEBAPEBDXZ(const qvector<ioport_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ujvalue_t____QEBAPEBDXZ(const qvector<jvalue_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBAPEBDXZ(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ukvp_t____QEBAPEBDXZ(const qvector<kvp_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ulochist_entry_t____QEBAPEBDXZ(const qvector<lochist_entry_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ulowcnd_t____QEBAPEBDXZ(const qvector<lowcnd_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Umemory_info_t____QEBAPEBDXZ(const qvector<memory_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Umemreg_info_t____QEBAPEBDXZ(const qvector<memreg_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Umodinfo_t____QEBAPEBDXZ(const qvector<modinfo_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Umovbpt_info_t____QEBAPEBDXZ(const qvector<movbpt_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBAPEBDXZ(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBAPEBDXZ(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Upoint_t____QEBAPEBDXZ(const qvector<point_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uprocess_info_t____QEBAPEBDXZ(const qvector<process_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uqbasic_block_t____QEBAPEBDXZ(const qvector<qbasic_block_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Urange_t____QEBAPEBDXZ(const qvector<range_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Urect_t____QEBAPEBDXZ(const qvector<rect_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Urefinfo_desc_t____QEBAPEBDXZ(const qvector<refinfo_desc_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ureg_access_t____QEBAPEBDXZ(const qvector<reg_access_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ureg_info_t____QEBAPEBDXZ(const qvector<reg_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uregister_info_t____QEBAPEBDXZ(const qvector<register_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uregobj_t____QEBAPEBDXZ(const qvector<regobj_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uregval_t____QEBAPEBDXZ(const qvector<regval_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Urow_info_t____QEBAPEBDXZ(const qvector<row_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uscattered_segm_t____QEBAPEBDXZ(const qvector<scattered_segm_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Usegm_move_info_t____QEBAPEBDXZ(const qvector<segm_move_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uselection_item_t____QEBAPEBDXZ(const qvector<selection_item_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Usimd_info_t____QEBAPEBDXZ(const qvector<simd_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Usimpleline_t____QEBAPEBDXZ(const qvector<simpleline_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Ustkpnt_t____QEBAPEBDXZ(const qvector<stkpnt_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Utev_info_reg_t____QEBAPEBDXZ(const qvector<tev_info_reg_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Utev_info_t____QEBAPEBDXZ(const qvector<tev_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Utev_reg_value_t____QEBAPEBDXZ(const qvector<tev_reg_value_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uthread_name_t____QEBAPEBDXZ(const qvector<thread_name_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Utoken_t____QEBAPEBDXZ(const qvector<token_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Utype_attr_t____QEBAPEBDXZ(const qvector<type_attr_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uudt_member_t____QEBAPEBDXZ(const qvector<udt_member_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uupdate_bpt_info_t____QEBAPEBDXZ(const qvector<update_bpt_info_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Uxreflist_entry_t____QEBAPEBDXZ(const qvector<xreflist_entry_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_V?$_qstring_D____QEBAPEBDXZ(const qvector<_qstring<char>> *__hidden this);
const char *__cdecl ?dstr_?$qvector_V?$_qstring_E____QEBAPEBDXZ(const qvector<_qstring<unsigned char>> *__hidden this);
const char *__cdecl ?dstr_?$qvector_V?$_qstring__W____QEBAPEBDXZ(const qvector<_qstring<wchar_t>> *__hidden this);
const char *__cdecl ?dstr_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBAPEBDXZ(const qvector<qrefcnt_t<source_item_t>> *__hidden this);
const char *__cdecl ?dstr_?$qvector_V?$qvector_H____QEBAPEBDXZ(const qvector<qvector<int>> *__hidden this);
const char *__cdecl ?dstr_?$qvector_V?$qvector_PEBD____QEBAPEBDXZ(const qvector<qvector<const char *>> *__hidden this);
const char *__cdecl ?dstr_?$qvector_V?$qvector_PEBVtwinline_t______QEBAPEBDXZ(const qvector<qvector<const twinline_t *>> *__hidden this);
const char *__cdecl ?dstr_?$qvector_V?$qvector__J____QEBAPEBDXZ(const qvector<qvector<long long>> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Vargloc_t____QEBAPEBDXZ(const qvector<argloc_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Vintmap_t____QEBAPEBDXZ(const qvector<intmap_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Vnode_set_t____QEBAPEBDXZ(const qvector<node_set_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Vop_t____QEBAPEBDXZ(const qvector<op_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Vrangeset_t____QEBAPEBDXZ(const qvector<rangeset_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Vsync_source_t____QEBAPEBDXZ(const qvector<sync_source_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Vtinfo_t____QEBAPEBDXZ(const qvector<tinfo_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Vtryblk_t____QEBAPEBDXZ(const qvector<tryblk_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Vtwinline_t____QEBAPEBDXZ(const qvector<twinline_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_Vvalstr_t____QEBAPEBDXZ(const qvector<valstr_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector_W4movbpt_code_t____QEBAPEBDXZ(const qvector<movbpt_code_t> *__hidden this);
const char *__cdecl ?dstr_?$qvector__J__QEBAPEBDXZ(const qvector<long long> *__hidden this);
const char *__cdecl ?dstr_?$qvector__K__QEBAPEBDXZ(const qvector<unsigned long long> *__hidden this);
const char *__cdecl ?dstr_?$qvector__N__QEBAPEBDXZ(const qvector<bool> *__hidden this);
const char *__cdecl ?dstr_?$qvector__W__QEBAPEBDXZ(const qvector<wchar_t> *__hidden this);
const char *__cdecl ?dstr_argloc_t__QEBAPEBDXZ(const argloc_t *__hidden this);
const char *__cdecl ?dstr_intmap_t__QEBAPEBDXZ(const intmap_t *__hidden this);
const char *__cdecl ?dstr_intset_t__QEBAPEBDXZ(const intset_t *__hidden this);
const char *__cdecl ?dstr_point_t__QEBAPEBDXZ(const point_t *__hidden this);
const char *__cdecl ?dstr_pointseq_t__QEBAPEBDXZ(const pointseq_t *__hidden this);
const char *__cdecl ?dstr_tinfo_t__QEBAPEBDXZ(const tinfo_t *__hidden this);
bool __cdecl ?dump_func_type_data_t__QEBA_NPEAV?$_qstring_D__H_Z(const func_type_data_t *__hidden this, qstring *out, int praloc_bits);
void __cdecl ?dump_graph_abstract_graph_t__QEBAXPEBD_Z(const abstract_graph_t *__hidden this, const char *header);
size_t __cdecl ?ea2str_hexplace_t__SA_KPEAD_KPEBUhexplace_gen_t__1_Z(char *buf, size_t bufsize, const hexplace_gen_t *hg, ea_t ea);
ea_t __cdecl ?ea_bpt_location_t__QEBA_KXZ(const bpt_location_t *__hidden this);
void __cdecl ?eabs_fpvalue_t__QEAAXXZ(fpvalue_t *__hidden this);
bool __cdecl ?eadel_netnode__QEAA_N_KE_Z(netnode *__hidden this, ea_t ea, uchar tag);
bool __cdecl ?eadel_idx8_netnode__QEAA_NEE_Z(netnode *__hidden this, uchar idx, uchar tag);
ea_t __cdecl ?eaget_netnode__QEBA_K_KE_Z(const netnode *__hidden this, ea_t ea, uchar tag);
ea_t __cdecl ?eaget_idx8_netnode__QEBA_KEE_Z(const netnode *__hidden this, uchar idx, uchar tag);
ea_t __cdecl ?eaget_idx_netnode__QEAA_K_KE_Z(netnode *__hidden this, nodeidx_t idx, uchar tag);
bool __cdecl ?easet_netnode__QEAA_N_K0E_Z(netnode *__hidden this, ea_t ea, ea_t addr, uchar tag);
bool __cdecl ?easet_idx8_netnode__QEAA_NE_KE_Z(netnode *__hidden this, uchar idx, ea_t addr, uchar tag);
bool __cdecl ?easet_idx_netnode__QEAA_N_K0E_Z(netnode *__hidden this, nodeidx_t idx, ea_t addr, uchar tag);
int __cdecl ?edge_gdl_graph_t__QEBAHHH_N_Z(const gdl_graph_t *__hidden this, int node, int i, bool ispred);
chooser_base_t::cbres_t __cdecl ?edit_chooser_multi_t__UEAA?AW4cbres_t_chooser_base_t__PEAV?$qvector__K___Z(chooser_multi_t *__hidden this, sizevec_t *);
chooser_t::cbret_t __cdecl ?edit_chooser_t__UEAA?AUcbret_t_1__K_Z(chooser_t *__hidden this, size_t);
event_id_t __cdecl ?eid_debug_event_t__QEBA?AW4event_id_t__XZ(const debug_event_t *__hidden this);
bool __cdecl ?empty_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA_NXZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
bool __cdecl ?empty_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA_NXZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
bool __cdecl ?empty_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA_NXZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
bool __cdecl ?empty_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA_NXZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
bool __cdecl ?empty_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA_NXZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
bool __cdecl ?empty_?$_qstring_D__QEBA_NXZ(const _qstring<char> *__hidden this);
bool __cdecl ?empty_?$_qstring_E__QEBA_NXZ(const _qstring<unsigned char> *__hidden this);
bool __cdecl ?empty_?$_qstring__W__QEBA_NXZ(const _qstring<wchar_t> *__hidden this);
bool __cdecl ?empty_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_NXZ(const std::basic_string<char> *__hidden this);
bool __cdecl ?empty_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_NXZ(const std::basic_string<char16_t> *__hidden this);
bool __cdecl ?empty_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_NXZ(const std::basic_string<char32_t> *__hidden this);
bool __cdecl ?empty_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_NXZ(const std::basic_string<wchar_t> *__hidden this);
bool __cdecl ?empty_?$qlist_PEAVui_request_t____QEBA_NXZ(const qlist<ui_request_t *> *__hidden this);
bool __cdecl ?empty_?$qvector_D__QEBA_NXZ(const qvector<char> *__hidden this);
bool __cdecl ?empty_?$qvector_E__QEBA_NXZ(const qvector<unsigned char> *__hidden this);
bool __cdecl ?empty_?$qvector_H__QEBA_NXZ(const qvector<int> *__hidden this);
bool __cdecl ?empty_?$qvector_I__QEBA_NXZ(const qvector<unsigned int> *__hidden this);
bool __cdecl ?empty_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBA_NXZ(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
bool __cdecl ?empty_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBA_NXZ(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
bool __cdecl ?empty_?$qvector_PEAUbpt_t____QEBA_NXZ(const qvector<bpt_t *> *__hidden this);
bool __cdecl ?empty_?$qvector_PEAUextlang_t____QEBA_NXZ(const qvector<extlang_t *> *__hidden this);
bool __cdecl ?empty_?$qvector_PEAUline_rendering_output_entry_t____QEBA_NXZ(const qvector<line_rendering_output_entry_t *> *__hidden this);
bool __cdecl ?empty_?$qvector_PEAVsnapshot_t____QEBA_NXZ(const qvector<snapshot_t *> *__hidden this);
bool __cdecl ?empty_?$qvector_PEBD__QEBA_NXZ(const qvector<const char *> *__hidden this);
bool __cdecl ?empty_?$qvector_PEBUbpt_t____QEBA_NXZ(const qvector<const bpt_t *> *__hidden this);
bool __cdecl ?empty_?$qvector_PEBVrangeset_t____QEBA_NXZ(const qvector<const rangeset_t *> *__hidden this);
bool __cdecl ?empty_?$qvector_PEBVtwinline_t____QEBA_NXZ(const qvector<const twinline_t *> *__hidden this);
bool __cdecl ?empty_?$qvector_Uargpart_t____QEBA_NXZ(const qvector<argpart_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ubpt_t____QEBA_NXZ(const qvector<bpt_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ubptaddrs_t____QEBA_NXZ(const qvector<bptaddrs_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ucall_stack_info_t____QEBA_NXZ(const qvector<call_stack_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ucatch_t____QEBA_NXZ(const qvector<catch_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ucfgopt_set_t____QEBA_NXZ(const qvector<cfgopt_set_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uchannel_redir_t____QEBA_NXZ(const qvector<channel_redir_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ucliopt_t____QEBA_NXZ(const qvector<cliopt_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ucompiled_binpat_t____QEBA_NXZ(const qvector<compiled_binpat_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Udebug_event_t____QEBA_NXZ(const qvector<debug_event_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Udirentry_t____QEBA_NXZ(const qvector<direntry_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Udirtree_cursor_t____QEBA_NXZ(const qvector<dirtree_cursor_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uea_name_t____QEBA_NXZ(const qvector<ea_name_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uedge_t____QEBA_NXZ(const qvector<edge_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uenum_member_t____QEBA_NXZ(const qvector<enum_member_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uexception_info_t____QEBA_NXZ(const qvector<exception_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ufixup_info_t____QEBA_NXZ(const qvector<fixup_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ufuncarg_t____QEBA_NXZ(const qvector<funcarg_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ugroup_crinfo_t____QEBA_NXZ(const qvector<group_crinfo_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uidc_global_t____QEBA_NXZ(const qvector<idc_global_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uidp_desc_t____QEBA_NXZ(const qvector<idp_desc_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uidp_name_t____QEBA_NXZ(const qvector<idp_name_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uioport_bit_t____QEBA_NXZ(const qvector<ioport_bit_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uioport_t____QEBA_NXZ(const qvector<ioport_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ujvalue_t____QEBA_NXZ(const qvector<jvalue_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBA_NXZ(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ukvp_t____QEBA_NXZ(const qvector<kvp_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ulochist_entry_t____QEBA_NXZ(const qvector<lochist_entry_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ulowcnd_t____QEBA_NXZ(const qvector<lowcnd_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Umemory_info_t____QEBA_NXZ(const qvector<memory_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Umemreg_info_t____QEBA_NXZ(const qvector<memreg_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Umodinfo_t____QEBA_NXZ(const qvector<modinfo_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Umovbpt_info_t____QEBA_NXZ(const qvector<movbpt_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBA_NXZ(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBA_NXZ(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Upoint_t____QEBA_NXZ(const qvector<point_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uprocess_info_t____QEBA_NXZ(const qvector<process_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uqbasic_block_t____QEBA_NXZ(const qvector<qbasic_block_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Urange_t____QEBA_NXZ(const qvector<range_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Urect_t____QEBA_NXZ(const qvector<rect_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Urefinfo_desc_t____QEBA_NXZ(const qvector<refinfo_desc_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ureg_access_t____QEBA_NXZ(const qvector<reg_access_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ureg_info_t____QEBA_NXZ(const qvector<reg_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uregister_info_t____QEBA_NXZ(const qvector<register_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uregobj_t____QEBA_NXZ(const qvector<regobj_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uregval_t____QEBA_NXZ(const qvector<regval_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Urow_info_t____QEBA_NXZ(const qvector<row_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uscattered_segm_t____QEBA_NXZ(const qvector<scattered_segm_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Usegm_move_info_t____QEBA_NXZ(const qvector<segm_move_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uselection_item_t____QEBA_NXZ(const qvector<selection_item_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Usimd_info_t____QEBA_NXZ(const qvector<simd_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Usimpleline_t____QEBA_NXZ(const qvector<simpleline_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Ustkpnt_t____QEBA_NXZ(const qvector<stkpnt_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Utev_info_reg_t____QEBA_NXZ(const qvector<tev_info_reg_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Utev_info_t____QEBA_NXZ(const qvector<tev_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Utev_reg_value_t____QEBA_NXZ(const qvector<tev_reg_value_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uthread_name_t____QEBA_NXZ(const qvector<thread_name_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Utoken_t____QEBA_NXZ(const qvector<token_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Utype_attr_t____QEBA_NXZ(const qvector<type_attr_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uudt_member_t____QEBA_NXZ(const qvector<udt_member_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uupdate_bpt_info_t____QEBA_NXZ(const qvector<update_bpt_info_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Uxreflist_entry_t____QEBA_NXZ(const qvector<xreflist_entry_t> *__hidden this);
bool __cdecl ?empty_?$qvector_V?$_qstring_D____QEBA_NXZ(const qvector<_qstring<char>> *__hidden this);
bool __cdecl ?empty_?$qvector_V?$_qstring_E____QEBA_NXZ(const qvector<_qstring<unsigned char>> *__hidden this);
bool __cdecl ?empty_?$qvector_V?$_qstring__W____QEBA_NXZ(const qvector<_qstring<wchar_t>> *__hidden this);
bool __cdecl ?empty_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBA_NXZ(const qvector<qrefcnt_t<source_item_t>> *__hidden this);
bool __cdecl ?empty_?$qvector_V?$qvector_H____QEBA_NXZ(const qvector<qvector<int>> *__hidden this);
bool __cdecl ?empty_?$qvector_V?$qvector_PEBD____QEBA_NXZ(const qvector<qvector<const char *>> *__hidden this);
bool __cdecl ?empty_?$qvector_V?$qvector_PEBVtwinline_t______QEBA_NXZ(const qvector<qvector<const twinline_t *>> *__hidden this);
bool __cdecl ?empty_?$qvector_V?$qvector__J____QEBA_NXZ(const qvector<qvector<long long>> *__hidden this);
bool __cdecl ?empty_?$qvector_Vargloc_t____QEBA_NXZ(const qvector<argloc_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Vintmap_t____QEBA_NXZ(const qvector<intmap_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Vnode_set_t____QEBA_NXZ(const qvector<node_set_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Vop_t____QEBA_NXZ(const qvector<op_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Vrangeset_t____QEBA_NXZ(const qvector<rangeset_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Vsync_source_t____QEBA_NXZ(const qvector<sync_source_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Vtinfo_t____QEBA_NXZ(const qvector<tinfo_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Vtryblk_t____QEBA_NXZ(const qvector<tryblk_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Vtwinline_t____QEBA_NXZ(const qvector<twinline_t> *__hidden this);
bool __cdecl ?empty_?$qvector_Vvalstr_t____QEBA_NXZ(const qvector<valstr_t> *__hidden this);
bool __cdecl ?empty_?$qvector_W4movbpt_code_t____QEBA_NXZ(const qvector<movbpt_code_t> *__hidden this);
bool __cdecl ?empty_?$qvector__J__QEBA_NXZ(const qvector<long long> *__hidden this);
bool __cdecl ?empty_?$qvector__K__QEBA_NXZ(const qvector<unsigned long long> *__hidden this);
bool __cdecl ?empty_?$qvector__N__QEBA_NXZ(const qvector<bool> *__hidden this);
bool __cdecl ?empty_?$qvector__W__QEBA_NXZ(const qvector<wchar_t> *__hidden this);
bool __cdecl ?empty_bitrange_t__QEBA_NXZ(const bitrange_t *__hidden this);
bool __cdecl ?empty_gdl_graph_t__UEBA_NXZ(const gdl_graph_t *__hidden this);
bool __cdecl ?empty_interval_t__QEBA_NXZ(const interval_t *__hidden this);
bool __cdecl ?empty_memory_deserializer_t__QEBA_NXZ(const memory_deserializer_t *__hidden this);
bool __cdecl ?empty_mutable_graph_t__UEBA_NXZ(const mutable_graph_t *__hidden this);
bool __cdecl ?empty_range_t__QEBA_NXZ(const range_t *__hidden this);
bool __cdecl ?empty_rangeset_t__QEBA_NXZ(const rangeset_t *__hidden this);
bool __cdecl ?empty_rect_t__QEBA_NXZ(const rect_t *__hidden this);
bool __cdecl ?empty_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?empty_tryblk_t__QEBA_NXZ(const tryblk_t *__hidden this);
ssize_t __cdecl ?emu_insn_processor_t__SA_JAEBVinsn_t___Z(const insn_t *insn);
bool __cdecl ?enable_dialog_button_form_actions_t__UEAA_NW4dlgbtn_t_1__N_Z(form_actions_t *__hidden this, form_actions_t::dlgbtn_t btn, bool enabled);
bool __cdecl ?enable_field_form_actions_t__UEAA_NH_N_Z(form_actions_t *__hidden this, int field_id, bool enable);
bool __cdecl ?enable_provider_srcinfo_provider_t__UEAA_N_N_Z(srcinfo_provider_t *__hidden this, bool enable);
bool __cdecl ?enabled_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?encode_encoder_t__UEBA_NPEAV?$_qstring_D___Z(const encoder_t *__hidden this, qstring *s);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::iterator __cdecl ?end_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator __cdecl ?end_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::iterator __cdecl ?end_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator __cdecl ?end_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::iterator __cdecl ?end_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator __cdecl ?end_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::iterator __cdecl ?end_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator __cdecl ?end_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::iterator __cdecl ?end_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_XZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator __cdecl ?end_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
_qstring<char>::iterator __cdecl ?end_?$_qstring_D__QEAAPEADXZ(_qstring<char> *__hidden this);
_qstring<char>::const_iterator __cdecl ?end_?$_qstring_D__QEBAPEBDXZ(const _qstring<char> *__hidden this);
_qstring<unsigned char>::iterator __cdecl ?end_?$_qstring_E__QEAAPEAEXZ(_qstring<unsigned char> *__hidden this);
_qstring<unsigned char>::const_iterator __cdecl ?end_?$_qstring_E__QEBAPEBEXZ(const _qstring<unsigned char> *__hidden this);
_qstring<wchar_t>::iterator __cdecl ?end_?$_qstring__W__QEAAPEA_WXZ(_qstring<wchar_t> *__hidden this);
_qstring<wchar_t>::const_iterator __cdecl ?end_?$_qstring__W__QEBAPEB_WXZ(const _qstring<wchar_t> *__hidden this);
std::basic_string<char>::iterator __cdecl ?end_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_XZ(std::basic_string<char> *__hidden this);
std::basic_string<char>::const_iterator __cdecl ?end_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_XZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::iterator __cdecl ?end_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_XZ(std::basic_string<char16_t> *__hidden this);
std::basic_string<char16_t>::const_iterator __cdecl ?end_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_XZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::iterator __cdecl ?end_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_XZ(std::basic_string<char32_t> *__hidden this);
std::basic_string<char32_t>::const_iterator __cdecl ?end_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_XZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::iterator __cdecl ?end_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_XZ(std::basic_string<wchar_t> *__hidden this);
std::basic_string<wchar_t>::const_iterator __cdecl ?end_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA?AV?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_XZ(const std::basic_string<wchar_t> *__hidden this);
char *__cdecl ?end_?$initializer_list_D_std__QEBAPEBDXZ(const std::initializer_list<char> *__hidden this);
int *__cdecl ?end_?$initializer_list_H_std__QEBAPEBHXZ(const std::initializer_list<int> *__hidden this);
std::pair<const int, int> *__cdecl ?end_?$initializer_list_U?$pair_$$CBHH_std___std__QEBAPEBU?$pair_$$CBHH_2_XZ(const std::initializer_list<std::pair<const int, int>> *__hidden this);
std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__cdecl ?end_?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEBAPEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____2_XZ(const std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this);
std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__cdecl ?end_?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEBAPEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____2_XZ(const std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this);
std::pair<const unsigned long long, unsigned long long> *__cdecl ?end_?$initializer_list_U?$pair_$$CB_K_K_std___std__QEBAPEBU?$pair_$$CB_K_K_2_XZ(const std::initializer_list<std::pair<const unsigned long long, unsigned long long>> *__hidden this);
__int16 *__cdecl ?end_?$initializer_list__S_std__QEBAPEB_SXZ(const std::initializer_list<char16_t> *__hidden this);
__int32 *__cdecl ?end_?$initializer_list__U_std__QEBAPEB_UXZ(const std::initializer_list<char32_t> *__hidden this);
__int16 *__cdecl ?end_?$initializer_list__W_std__QEBAPEB_WXZ(const std::initializer_list<wchar_t> *__hidden this);
qlist<ui_request_t *>::iterator __cdecl ?end_?$qlist_PEAVui_request_t____QEAA?AViterator_1_XZ(qlist<ui_request_t *> *__hidden this);
qlist<ui_request_t *>::const_iterator __cdecl ?end_?$qlist_PEAVui_request_t____QEBA?AVconst_iterator_1_XZ(const qlist<ui_request_t *> *__hidden this);
qvector<char>::iterator __cdecl ?end_?$qvector_D__QEAAPEADXZ(qvector<char> *__hidden this);
qvector<char>::const_iterator __cdecl ?end_?$qvector_D__QEBAPEBDXZ(const qvector<char> *__hidden this);
qvector<unsigned char>::iterator __cdecl ?end_?$qvector_E__QEAAPEAEXZ(qvector<unsigned char> *__hidden this);
qvector<unsigned char>::const_iterator __cdecl ?end_?$qvector_E__QEBAPEBEXZ(const qvector<unsigned char> *__hidden this);
qvector<int>::iterator __cdecl ?end_?$qvector_H__QEAAPEAHXZ(qvector<int> *__hidden this);
qvector<int>::const_iterator __cdecl ?end_?$qvector_H__QEBAPEBHXZ(const qvector<int> *__hidden this);
qvector<unsigned int>::iterator __cdecl ?end_?$qvector_I__QEAAPEAIXZ(qvector<unsigned int> *__hidden this);
qvector<unsigned int>::const_iterator __cdecl ?end_?$qvector_I__QEBAPEBIXZ(const qvector<unsigned int> *__hidden this);
qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator __cdecl ?end_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAPEAP6A_JPEAW4syntax_highlight_style__PEBD_ZXZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
qvector<long long (*)(syntax_highlight_style *, const char *)>::const_iterator __cdecl ?end_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBAPEBQ6A_JPEAW4syntax_highlight_style__PEBD_ZXZ(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator __cdecl ?end_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAPEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZXZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::const_iterator __cdecl ?end_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBAPEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZXZ(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
qvector<bpt_t *>::iterator __cdecl ?end_?$qvector_PEAUbpt_t____QEAAPEAPEAUbpt_t__XZ(qvector<bpt_t *> *__hidden this);
qvector<bpt_t *>::const_iterator __cdecl ?end_?$qvector_PEAUbpt_t____QEBAPEBQEAUbpt_t__XZ(const qvector<bpt_t *> *__hidden this);
qvector<extlang_t *>::iterator __cdecl ?end_?$qvector_PEAUextlang_t____QEAAPEAPEAUextlang_t__XZ(qvector<extlang_t *> *__hidden this);
qvector<extlang_t *>::const_iterator __cdecl ?end_?$qvector_PEAUextlang_t____QEBAPEBQEAUextlang_t__XZ(const qvector<extlang_t *> *__hidden this);
qvector<line_rendering_output_entry_t *>::iterator __cdecl ?end_?$qvector_PEAUline_rendering_output_entry_t____QEAAPEAPEAUline_rendering_output_entry_t__XZ(qvector<line_rendering_output_entry_t *> *__hidden this);
qvector<line_rendering_output_entry_t *>::const_iterator __cdecl ?end_?$qvector_PEAUline_rendering_output_entry_t____QEBAPEBQEAUline_rendering_output_entry_t__XZ(const qvector<line_rendering_output_entry_t *> *__hidden this);
qvector<snapshot_t *>::iterator __cdecl ?end_?$qvector_PEAVsnapshot_t____QEAAPEAPEAVsnapshot_t__XZ(qvector<snapshot_t *> *__hidden this);
qvector<snapshot_t *>::const_iterator __cdecl ?end_?$qvector_PEAVsnapshot_t____QEBAPEBQEAVsnapshot_t__XZ(const qvector<snapshot_t *> *__hidden this);
qvector<const char *>::iterator __cdecl ?end_?$qvector_PEBD__QEAAPEAPEBDXZ(qvector<const char *> *__hidden this);
qvector<const char *>::const_iterator __cdecl ?end_?$qvector_PEBD__QEBAPEBQEBDXZ(const qvector<const char *> *__hidden this);
qvector<const bpt_t *>::iterator __cdecl ?end_?$qvector_PEBUbpt_t____QEAAPEAPEBUbpt_t__XZ(qvector<const bpt_t *> *__hidden this);
qvector<const bpt_t *>::const_iterator __cdecl ?end_?$qvector_PEBUbpt_t____QEBAPEBQEBUbpt_t__XZ(const qvector<const bpt_t *> *__hidden this);
qvector<const rangeset_t *>::iterator __cdecl ?end_?$qvector_PEBVrangeset_t____QEAAPEAPEBVrangeset_t__XZ(qvector<const rangeset_t *> *__hidden this);
qvector<const rangeset_t *>::const_iterator __cdecl ?end_?$qvector_PEBVrangeset_t____QEBAPEBQEBVrangeset_t__XZ(const qvector<const rangeset_t *> *__hidden this);
qvector<const twinline_t *>::iterator __cdecl ?end_?$qvector_PEBVtwinline_t____QEAAPEAPEBVtwinline_t__XZ(qvector<const twinline_t *> *__hidden this);
qvector<const twinline_t *>::const_iterator __cdecl ?end_?$qvector_PEBVtwinline_t____QEBAPEBQEBVtwinline_t__XZ(const qvector<const twinline_t *> *__hidden this);
qvector<argpart_t>::iterator __cdecl ?end_?$qvector_Uargpart_t____QEAAPEAUargpart_t__XZ(qvector<argpart_t> *__hidden this);
qvector<argpart_t>::const_iterator __cdecl ?end_?$qvector_Uargpart_t____QEBAPEBUargpart_t__XZ(const qvector<argpart_t> *__hidden this);
qvector<bpt_t>::iterator __cdecl ?end_?$qvector_Ubpt_t____QEAAPEAUbpt_t__XZ(qvector<bpt_t> *__hidden this);
qvector<bpt_t>::const_iterator __cdecl ?end_?$qvector_Ubpt_t____QEBAPEBUbpt_t__XZ(const qvector<bpt_t> *__hidden this);
qvector<bptaddrs_t>::iterator __cdecl ?end_?$qvector_Ubptaddrs_t____QEAAPEAUbptaddrs_t__XZ(qvector<bptaddrs_t> *__hidden this);
qvector<bptaddrs_t>::const_iterator __cdecl ?end_?$qvector_Ubptaddrs_t____QEBAPEBUbptaddrs_t__XZ(const qvector<bptaddrs_t> *__hidden this);
qvector<call_stack_info_t>::iterator __cdecl ?end_?$qvector_Ucall_stack_info_t____QEAAPEAUcall_stack_info_t__XZ(qvector<call_stack_info_t> *__hidden this);
qvector<call_stack_info_t>::const_iterator __cdecl ?end_?$qvector_Ucall_stack_info_t____QEBAPEBUcall_stack_info_t__XZ(const qvector<call_stack_info_t> *__hidden this);
qvector<catch_t>::iterator __cdecl ?end_?$qvector_Ucatch_t____QEAAPEAUcatch_t__XZ(qvector<catch_t> *__hidden this);
qvector<catch_t>::const_iterator __cdecl ?end_?$qvector_Ucatch_t____QEBAPEBUcatch_t__XZ(const qvector<catch_t> *__hidden this);
qvector<cfgopt_set_t>::iterator __cdecl ?end_?$qvector_Ucfgopt_set_t____QEAAPEAUcfgopt_set_t__XZ(qvector<cfgopt_set_t> *__hidden this);
qvector<cfgopt_set_t>::const_iterator __cdecl ?end_?$qvector_Ucfgopt_set_t____QEBAPEBUcfgopt_set_t__XZ(const qvector<cfgopt_set_t> *__hidden this);
qvector<channel_redir_t>::iterator __cdecl ?end_?$qvector_Uchannel_redir_t____QEAAPEAUchannel_redir_t__XZ(qvector<channel_redir_t> *__hidden this);
qvector<channel_redir_t>::const_iterator __cdecl ?end_?$qvector_Uchannel_redir_t____QEBAPEBUchannel_redir_t__XZ(const qvector<channel_redir_t> *__hidden this);
qvector<cliopt_t>::iterator __cdecl ?end_?$qvector_Ucliopt_t____QEAAPEAUcliopt_t__XZ(qvector<cliopt_t> *__hidden this);
qvector<cliopt_t>::const_iterator __cdecl ?end_?$qvector_Ucliopt_t____QEBAPEBUcliopt_t__XZ(const qvector<cliopt_t> *__hidden this);
qvector<compiled_binpat_t>::iterator __cdecl ?end_?$qvector_Ucompiled_binpat_t____QEAAPEAUcompiled_binpat_t__XZ(qvector<compiled_binpat_t> *__hidden this);
qvector<compiled_binpat_t>::const_iterator __cdecl ?end_?$qvector_Ucompiled_binpat_t____QEBAPEBUcompiled_binpat_t__XZ(const qvector<compiled_binpat_t> *__hidden this);
qvector<debug_event_t>::iterator __cdecl ?end_?$qvector_Udebug_event_t____QEAAPEAUdebug_event_t__XZ(qvector<debug_event_t> *__hidden this);
qvector<debug_event_t>::const_iterator __cdecl ?end_?$qvector_Udebug_event_t____QEBAPEBUdebug_event_t__XZ(const qvector<debug_event_t> *__hidden this);
qvector<direntry_t>::iterator __cdecl ?end_?$qvector_Udirentry_t____QEAAPEAUdirentry_t__XZ(qvector<direntry_t> *__hidden this);
qvector<direntry_t>::const_iterator __cdecl ?end_?$qvector_Udirentry_t____QEBAPEBUdirentry_t__XZ(const qvector<direntry_t> *__hidden this);
qvector<dirtree_cursor_t>::iterator __cdecl ?end_?$qvector_Udirtree_cursor_t____QEAAPEAUdirtree_cursor_t__XZ(qvector<dirtree_cursor_t> *__hidden this);
qvector<dirtree_cursor_t>::const_iterator __cdecl ?end_?$qvector_Udirtree_cursor_t____QEBAPEBUdirtree_cursor_t__XZ(const qvector<dirtree_cursor_t> *__hidden this);
qvector<ea_name_t>::iterator __cdecl ?end_?$qvector_Uea_name_t____QEAAPEAUea_name_t__XZ(qvector<ea_name_t> *__hidden this);
qvector<ea_name_t>::const_iterator __cdecl ?end_?$qvector_Uea_name_t____QEBAPEBUea_name_t__XZ(const qvector<ea_name_t> *__hidden this);
qvector<edge_t>::iterator __cdecl ?end_?$qvector_Uedge_t____QEAAPEAUedge_t__XZ(qvector<edge_t> *__hidden this);
qvector<edge_t>::const_iterator __cdecl ?end_?$qvector_Uedge_t____QEBAPEBUedge_t__XZ(const qvector<edge_t> *__hidden this);
qvector<enum_member_t>::iterator __cdecl ?end_?$qvector_Uenum_member_t____QEAAPEAUenum_member_t__XZ(qvector<enum_member_t> *__hidden this);
qvector<enum_member_t>::const_iterator __cdecl ?end_?$qvector_Uenum_member_t____QEBAPEBUenum_member_t__XZ(const qvector<enum_member_t> *__hidden this);
qvector<exception_info_t>::iterator __cdecl ?end_?$qvector_Uexception_info_t____QEAAPEAUexception_info_t__XZ(qvector<exception_info_t> *__hidden this);
qvector<exception_info_t>::const_iterator __cdecl ?end_?$qvector_Uexception_info_t____QEBAPEBUexception_info_t__XZ(const qvector<exception_info_t> *__hidden this);
qvector<fixup_info_t>::iterator __cdecl ?end_?$qvector_Ufixup_info_t____QEAAPEAUfixup_info_t__XZ(qvector<fixup_info_t> *__hidden this);
qvector<fixup_info_t>::const_iterator __cdecl ?end_?$qvector_Ufixup_info_t____QEBAPEBUfixup_info_t__XZ(const qvector<fixup_info_t> *__hidden this);
qvector<funcarg_t>::iterator __cdecl ?end_?$qvector_Ufuncarg_t____QEAAPEAUfuncarg_t__XZ(qvector<funcarg_t> *__hidden this);
qvector<funcarg_t>::const_iterator __cdecl ?end_?$qvector_Ufuncarg_t____QEBAPEBUfuncarg_t__XZ(const qvector<funcarg_t> *__hidden this);
qvector<group_crinfo_t>::iterator __cdecl ?end_?$qvector_Ugroup_crinfo_t____QEAAPEAUgroup_crinfo_t__XZ(qvector<group_crinfo_t> *__hidden this);
qvector<group_crinfo_t>::const_iterator __cdecl ?end_?$qvector_Ugroup_crinfo_t____QEBAPEBUgroup_crinfo_t__XZ(const qvector<group_crinfo_t> *__hidden this);
qvector<idc_global_t>::iterator __cdecl ?end_?$qvector_Uidc_global_t____QEAAPEAUidc_global_t__XZ(qvector<idc_global_t> *__hidden this);
qvector<idc_global_t>::const_iterator __cdecl ?end_?$qvector_Uidc_global_t____QEBAPEBUidc_global_t__XZ(const qvector<idc_global_t> *__hidden this);
qvector<idp_desc_t>::iterator __cdecl ?end_?$qvector_Uidp_desc_t____QEAAPEAUidp_desc_t__XZ(qvector<idp_desc_t> *__hidden this);
qvector<idp_desc_t>::const_iterator __cdecl ?end_?$qvector_Uidp_desc_t____QEBAPEBUidp_desc_t__XZ(const qvector<idp_desc_t> *__hidden this);
qvector<idp_name_t>::iterator __cdecl ?end_?$qvector_Uidp_name_t____QEAAPEAUidp_name_t__XZ(qvector<idp_name_t> *__hidden this);
qvector<idp_name_t>::const_iterator __cdecl ?end_?$qvector_Uidp_name_t____QEBAPEBUidp_name_t__XZ(const qvector<idp_name_t> *__hidden this);
qvector<ioport_bit_t>::iterator __cdecl ?end_?$qvector_Uioport_bit_t____QEAAPEAUioport_bit_t__XZ(qvector<ioport_bit_t> *__hidden this);
qvector<ioport_bit_t>::const_iterator __cdecl ?end_?$qvector_Uioport_bit_t____QEBAPEBUioport_bit_t__XZ(const qvector<ioport_bit_t> *__hidden this);
qvector<ioport_t>::iterator __cdecl ?end_?$qvector_Uioport_t____QEAAPEAUioport_t__XZ(qvector<ioport_t> *__hidden this);
qvector<ioport_t>::const_iterator __cdecl ?end_?$qvector_Uioport_t____QEBAPEBUioport_t__XZ(const qvector<ioport_t> *__hidden this);
qvector<jvalue_t>::iterator __cdecl ?end_?$qvector_Ujvalue_t____QEAAPEAUjvalue_t__XZ(qvector<jvalue_t> *__hidden this);
qvector<jvalue_t>::const_iterator __cdecl ?end_?$qvector_Ujvalue_t____QEBAPEBUjvalue_t__XZ(const qvector<jvalue_t> *__hidden this);
qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator __cdecl ?end_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAPEAUkeywords_style_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
qvector<ida_syntax_highlighter_t::keywords_style_t>::const_iterator __cdecl ?end_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBAPEBUkeywords_style_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
qvector<kvp_t>::iterator __cdecl ?end_?$qvector_Ukvp_t____QEAAPEAUkvp_t__XZ(qvector<kvp_t> *__hidden this);
qvector<kvp_t>::const_iterator __cdecl ?end_?$qvector_Ukvp_t____QEBAPEBUkvp_t__XZ(const qvector<kvp_t> *__hidden this);
qvector<lochist_entry_t>::iterator __cdecl ?end_?$qvector_Ulochist_entry_t____QEAAPEAUlochist_entry_t__XZ(qvector<lochist_entry_t> *__hidden this);
qvector<lochist_entry_t>::const_iterator __cdecl ?end_?$qvector_Ulochist_entry_t____QEBAPEBUlochist_entry_t__XZ(const qvector<lochist_entry_t> *__hidden this);
qvector<lowcnd_t>::iterator __cdecl ?end_?$qvector_Ulowcnd_t____QEAAPEAUlowcnd_t__XZ(qvector<lowcnd_t> *__hidden this);
qvector<lowcnd_t>::const_iterator __cdecl ?end_?$qvector_Ulowcnd_t____QEBAPEBUlowcnd_t__XZ(const qvector<lowcnd_t> *__hidden this);
qvector<memory_info_t>::iterator __cdecl ?end_?$qvector_Umemory_info_t____QEAAPEAUmemory_info_t__XZ(qvector<memory_info_t> *__hidden this);
qvector<memory_info_t>::const_iterator __cdecl ?end_?$qvector_Umemory_info_t____QEBAPEBUmemory_info_t__XZ(const qvector<memory_info_t> *__hidden this);
qvector<memreg_info_t>::iterator __cdecl ?end_?$qvector_Umemreg_info_t____QEAAPEAUmemreg_info_t__XZ(qvector<memreg_info_t> *__hidden this);
qvector<memreg_info_t>::const_iterator __cdecl ?end_?$qvector_Umemreg_info_t____QEBAPEBUmemreg_info_t__XZ(const qvector<memreg_info_t> *__hidden this);
qvector<modinfo_t>::iterator __cdecl ?end_?$qvector_Umodinfo_t____QEAAPEAUmodinfo_t__XZ(qvector<modinfo_t> *__hidden this);
qvector<modinfo_t>::const_iterator __cdecl ?end_?$qvector_Umodinfo_t____QEBAPEBUmodinfo_t__XZ(const qvector<modinfo_t> *__hidden this);
qvector<movbpt_info_t>::iterator __cdecl ?end_?$qvector_Umovbpt_info_t____QEAAPEAUmovbpt_info_t__XZ(qvector<movbpt_info_t> *__hidden this);
qvector<movbpt_info_t>::const_iterator __cdecl ?end_?$qvector_Umovbpt_info_t____QEBAPEBUmovbpt_info_t__XZ(const qvector<movbpt_info_t> *__hidden this);
qvector<ida_syntax_highlighter_t::multicmt_t>::iterator __cdecl ?end_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAPEAUmulticmt_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
qvector<ida_syntax_highlighter_t::multicmt_t>::const_iterator __cdecl ?end_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBAPEBUmulticmt_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator __cdecl ?end_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAPEAUplain_char_ptr_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::const_iterator __cdecl ?end_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBAPEBUplain_char_ptr_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
qvector<point_t>::iterator __cdecl ?end_?$qvector_Upoint_t____QEAAPEAUpoint_t__XZ(qvector<point_t> *__hidden this);
qvector<point_t>::const_iterator __cdecl ?end_?$qvector_Upoint_t____QEBAPEBUpoint_t__XZ(const qvector<point_t> *__hidden this);
qvector<process_info_t>::iterator __cdecl ?end_?$qvector_Uprocess_info_t____QEAAPEAUprocess_info_t__XZ(qvector<process_info_t> *__hidden this);
qvector<process_info_t>::const_iterator __cdecl ?end_?$qvector_Uprocess_info_t____QEBAPEBUprocess_info_t__XZ(const qvector<process_info_t> *__hidden this);
qvector<qbasic_block_t>::iterator __cdecl ?end_?$qvector_Uqbasic_block_t____QEAAPEAUqbasic_block_t__XZ(qvector<qbasic_block_t> *__hidden this);
qvector<qbasic_block_t>::const_iterator __cdecl ?end_?$qvector_Uqbasic_block_t____QEBAPEBUqbasic_block_t__XZ(const qvector<qbasic_block_t> *__hidden this);
qvector<range_t>::iterator __cdecl ?end_?$qvector_Urange_t____QEAAPEAUrange_t__XZ(qvector<range_t> *__hidden this);
qvector<range_t>::const_iterator __cdecl ?end_?$qvector_Urange_t____QEBAPEBUrange_t__XZ(const qvector<range_t> *__hidden this);
qvector<rect_t>::iterator __cdecl ?end_?$qvector_Urect_t____QEAAPEAUrect_t__XZ(qvector<rect_t> *__hidden this);
qvector<rect_t>::const_iterator __cdecl ?end_?$qvector_Urect_t____QEBAPEBUrect_t__XZ(const qvector<rect_t> *__hidden this);
qvector<refinfo_desc_t>::iterator __cdecl ?end_?$qvector_Urefinfo_desc_t____QEAAPEAUrefinfo_desc_t__XZ(qvector<refinfo_desc_t> *__hidden this);
qvector<refinfo_desc_t>::const_iterator __cdecl ?end_?$qvector_Urefinfo_desc_t____QEBAPEBUrefinfo_desc_t__XZ(const qvector<refinfo_desc_t> *__hidden this);
qvector<reg_access_t>::iterator __cdecl ?end_?$qvector_Ureg_access_t____QEAAPEAUreg_access_t__XZ(qvector<reg_access_t> *__hidden this);
qvector<reg_access_t>::const_iterator __cdecl ?end_?$qvector_Ureg_access_t____QEBAPEBUreg_access_t__XZ(const qvector<reg_access_t> *__hidden this);
qvector<reg_info_t>::iterator __cdecl ?end_?$qvector_Ureg_info_t____QEAAPEAUreg_info_t__XZ(qvector<reg_info_t> *__hidden this);
qvector<reg_info_t>::const_iterator __cdecl ?end_?$qvector_Ureg_info_t____QEBAPEBUreg_info_t__XZ(const qvector<reg_info_t> *__hidden this);
qvector<register_info_t>::iterator __cdecl ?end_?$qvector_Uregister_info_t____QEAAPEAUregister_info_t__XZ(qvector<register_info_t> *__hidden this);
qvector<register_info_t>::const_iterator __cdecl ?end_?$qvector_Uregister_info_t____QEBAPEBUregister_info_t__XZ(const qvector<register_info_t> *__hidden this);
qvector<regobj_t>::iterator __cdecl ?end_?$qvector_Uregobj_t____QEAAPEAUregobj_t__XZ(qvector<regobj_t> *__hidden this);
qvector<regobj_t>::const_iterator __cdecl ?end_?$qvector_Uregobj_t____QEBAPEBUregobj_t__XZ(const qvector<regobj_t> *__hidden this);
qvector<regval_t>::iterator __cdecl ?end_?$qvector_Uregval_t____QEAAPEAUregval_t__XZ(qvector<regval_t> *__hidden this);
qvector<regval_t>::const_iterator __cdecl ?end_?$qvector_Uregval_t____QEBAPEBUregval_t__XZ(const qvector<regval_t> *__hidden this);
qvector<row_info_t>::iterator __cdecl ?end_?$qvector_Urow_info_t____QEAAPEAUrow_info_t__XZ(qvector<row_info_t> *__hidden this);
qvector<row_info_t>::const_iterator __cdecl ?end_?$qvector_Urow_info_t____QEBAPEBUrow_info_t__XZ(const qvector<row_info_t> *__hidden this);
qvector<scattered_segm_t>::iterator __cdecl ?end_?$qvector_Uscattered_segm_t____QEAAPEAUscattered_segm_t__XZ(qvector<scattered_segm_t> *__hidden this);
qvector<scattered_segm_t>::const_iterator __cdecl ?end_?$qvector_Uscattered_segm_t____QEBAPEBUscattered_segm_t__XZ(const qvector<scattered_segm_t> *__hidden this);
qvector<segm_move_info_t>::iterator __cdecl ?end_?$qvector_Usegm_move_info_t____QEAAPEAUsegm_move_info_t__XZ(qvector<segm_move_info_t> *__hidden this);
qvector<segm_move_info_t>::const_iterator __cdecl ?end_?$qvector_Usegm_move_info_t____QEBAPEBUsegm_move_info_t__XZ(const qvector<segm_move_info_t> *__hidden this);
qvector<selection_item_t>::iterator __cdecl ?end_?$qvector_Uselection_item_t____QEAAPEAUselection_item_t__XZ(qvector<selection_item_t> *__hidden this);
qvector<selection_item_t>::const_iterator __cdecl ?end_?$qvector_Uselection_item_t____QEBAPEBUselection_item_t__XZ(const qvector<selection_item_t> *__hidden this);
qvector<simd_info_t>::iterator __cdecl ?end_?$qvector_Usimd_info_t____QEAAPEAUsimd_info_t__XZ(qvector<simd_info_t> *__hidden this);
qvector<simd_info_t>::const_iterator __cdecl ?end_?$qvector_Usimd_info_t____QEBAPEBUsimd_info_t__XZ(const qvector<simd_info_t> *__hidden this);
qvector<simpleline_t>::iterator __cdecl ?end_?$qvector_Usimpleline_t____QEAAPEAUsimpleline_t__XZ(qvector<simpleline_t> *__hidden this);
qvector<simpleline_t>::const_iterator __cdecl ?end_?$qvector_Usimpleline_t____QEBAPEBUsimpleline_t__XZ(const qvector<simpleline_t> *__hidden this);
qvector<stkpnt_t>::iterator __cdecl ?end_?$qvector_Ustkpnt_t____QEAAPEAUstkpnt_t__XZ(qvector<stkpnt_t> *__hidden this);
qvector<stkpnt_t>::const_iterator __cdecl ?end_?$qvector_Ustkpnt_t____QEBAPEBUstkpnt_t__XZ(const qvector<stkpnt_t> *__hidden this);
qvector<tev_info_reg_t>::iterator __cdecl ?end_?$qvector_Utev_info_reg_t____QEAAPEAUtev_info_reg_t__XZ(qvector<tev_info_reg_t> *__hidden this);
qvector<tev_info_reg_t>::const_iterator __cdecl ?end_?$qvector_Utev_info_reg_t____QEBAPEBUtev_info_reg_t__XZ(const qvector<tev_info_reg_t> *__hidden this);
qvector<tev_info_t>::iterator __cdecl ?end_?$qvector_Utev_info_t____QEAAPEAUtev_info_t__XZ(qvector<tev_info_t> *__hidden this);
qvector<tev_info_t>::const_iterator __cdecl ?end_?$qvector_Utev_info_t____QEBAPEBUtev_info_t__XZ(const qvector<tev_info_t> *__hidden this);
qvector<tev_reg_value_t>::iterator __cdecl ?end_?$qvector_Utev_reg_value_t____QEAAPEAUtev_reg_value_t__XZ(qvector<tev_reg_value_t> *__hidden this);
qvector<tev_reg_value_t>::const_iterator __cdecl ?end_?$qvector_Utev_reg_value_t____QEBAPEBUtev_reg_value_t__XZ(const qvector<tev_reg_value_t> *__hidden this);
qvector<thread_name_t>::iterator __cdecl ?end_?$qvector_Uthread_name_t____QEAAPEAUthread_name_t__XZ(qvector<thread_name_t> *__hidden this);
qvector<thread_name_t>::const_iterator __cdecl ?end_?$qvector_Uthread_name_t____QEBAPEBUthread_name_t__XZ(const qvector<thread_name_t> *__hidden this);
qvector<token_t>::iterator __cdecl ?end_?$qvector_Utoken_t____QEAAPEAUtoken_t__XZ(qvector<token_t> *__hidden this);
qvector<token_t>::const_iterator __cdecl ?end_?$qvector_Utoken_t____QEBAPEBUtoken_t__XZ(const qvector<token_t> *__hidden this);
qvector<type_attr_t>::iterator __cdecl ?end_?$qvector_Utype_attr_t____QEAAPEAUtype_attr_t__XZ(qvector<type_attr_t> *__hidden this);
qvector<type_attr_t>::const_iterator __cdecl ?end_?$qvector_Utype_attr_t____QEBAPEBUtype_attr_t__XZ(const qvector<type_attr_t> *__hidden this);
qvector<udt_member_t>::iterator __cdecl ?end_?$qvector_Uudt_member_t____QEAAPEAUudt_member_t__XZ(qvector<udt_member_t> *__hidden this);
qvector<udt_member_t>::const_iterator __cdecl ?end_?$qvector_Uudt_member_t____QEBAPEBUudt_member_t__XZ(const qvector<udt_member_t> *__hidden this);
qvector<update_bpt_info_t>::iterator __cdecl ?end_?$qvector_Uupdate_bpt_info_t____QEAAPEAUupdate_bpt_info_t__XZ(qvector<update_bpt_info_t> *__hidden this);
qvector<update_bpt_info_t>::const_iterator __cdecl ?end_?$qvector_Uupdate_bpt_info_t____QEBAPEBUupdate_bpt_info_t__XZ(const qvector<update_bpt_info_t> *__hidden this);
qvector<xreflist_entry_t>::iterator __cdecl ?end_?$qvector_Uxreflist_entry_t____QEAAPEAUxreflist_entry_t__XZ(qvector<xreflist_entry_t> *__hidden this);
qvector<xreflist_entry_t>::const_iterator __cdecl ?end_?$qvector_Uxreflist_entry_t____QEBAPEBUxreflist_entry_t__XZ(const qvector<xreflist_entry_t> *__hidden this);
qvector<_qstring<char>>::iterator __cdecl ?end_?$qvector_V?$_qstring_D____QEAAPEAV?$_qstring_D__XZ(qvector<_qstring<char>> *__hidden this);
qvector<_qstring<char>>::const_iterator __cdecl ?end_?$qvector_V?$_qstring_D____QEBAPEBV?$_qstring_D__XZ(const qvector<_qstring<char>> *__hidden this);
qvector<_qstring<unsigned char>>::iterator __cdecl ?end_?$qvector_V?$_qstring_E____QEAAPEAV?$_qstring_E__XZ(qvector<_qstring<unsigned char>> *__hidden this);
qvector<_qstring<unsigned char>>::const_iterator __cdecl ?end_?$qvector_V?$_qstring_E____QEBAPEBV?$_qstring_E__XZ(const qvector<_qstring<unsigned char>> *__hidden this);
qvector<_qstring<wchar_t>>::iterator __cdecl ?end_?$qvector_V?$_qstring__W____QEAAPEAV?$_qstring__W__XZ(qvector<_qstring<wchar_t>> *__hidden this);
qvector<_qstring<wchar_t>>::const_iterator __cdecl ?end_?$qvector_V?$_qstring__W____QEBAPEBV?$_qstring__W__XZ(const qvector<_qstring<wchar_t>> *__hidden this);
qvector<qrefcnt_t<source_item_t>>::iterator __cdecl ?end_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAPEAV?$qrefcnt_t_Vsource_item_t____XZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
qvector<qrefcnt_t<source_item_t>>::const_iterator __cdecl ?end_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBAPEBV?$qrefcnt_t_Vsource_item_t____XZ(const qvector<qrefcnt_t<source_item_t>> *__hidden this);
qvector<qvector<int>>::iterator __cdecl ?end_?$qvector_V?$qvector_H____QEAAPEAV?$qvector_H__XZ(qvector<qvector<int>> *__hidden this);
qvector<qvector<int>>::const_iterator __cdecl ?end_?$qvector_V?$qvector_H____QEBAPEBV?$qvector_H__XZ(const qvector<qvector<int>> *__hidden this);
qvector<qvector<const char *>>::iterator __cdecl ?end_?$qvector_V?$qvector_PEBD____QEAAPEAV?$qvector_PEBD__XZ(qvector<qvector<const char *>> *__hidden this);
qvector<qvector<const char *>>::const_iterator __cdecl ?end_?$qvector_V?$qvector_PEBD____QEBAPEBV?$qvector_PEBD__XZ(const qvector<qvector<const char *>> *__hidden this);
qvector<qvector<const twinline_t *>>::iterator __cdecl ?end_?$qvector_V?$qvector_PEBVtwinline_t______QEAAPEAV?$qvector_PEBVtwinline_t____XZ(qvector<qvector<const twinline_t *>> *__hidden this);
qvector<qvector<const twinline_t *>>::const_iterator __cdecl ?end_?$qvector_V?$qvector_PEBVtwinline_t______QEBAPEBV?$qvector_PEBVtwinline_t____XZ(const qvector<qvector<const twinline_t *>> *__hidden this);
qvector<qvector<long long>>::iterator __cdecl ?end_?$qvector_V?$qvector__J____QEAAPEAV?$qvector__J__XZ(qvector<qvector<long long>> *__hidden this);
qvector<qvector<long long>>::const_iterator __cdecl ?end_?$qvector_V?$qvector__J____QEBAPEBV?$qvector__J__XZ(const qvector<qvector<long long>> *__hidden this);
qvector<argloc_t>::iterator __cdecl ?end_?$qvector_Vargloc_t____QEAAPEAVargloc_t__XZ(qvector<argloc_t> *__hidden this);
qvector<argloc_t>::const_iterator __cdecl ?end_?$qvector_Vargloc_t____QEBAPEBVargloc_t__XZ(const qvector<argloc_t> *__hidden this);
qvector<intmap_t>::iterator __cdecl ?end_?$qvector_Vintmap_t____QEAAPEAVintmap_t__XZ(qvector<intmap_t> *__hidden this);
qvector<intmap_t>::const_iterator __cdecl ?end_?$qvector_Vintmap_t____QEBAPEBVintmap_t__XZ(const qvector<intmap_t> *__hidden this);
qvector<node_set_t>::iterator __cdecl ?end_?$qvector_Vnode_set_t____QEAAPEAVnode_set_t__XZ(qvector<node_set_t> *__hidden this);
qvector<node_set_t>::const_iterator __cdecl ?end_?$qvector_Vnode_set_t____QEBAPEBVnode_set_t__XZ(const qvector<node_set_t> *__hidden this);
qvector<op_t>::iterator __cdecl ?end_?$qvector_Vop_t____QEAAPEAVop_t__XZ(qvector<op_t> *__hidden this);
qvector<op_t>::const_iterator __cdecl ?end_?$qvector_Vop_t____QEBAPEBVop_t__XZ(const qvector<op_t> *__hidden this);
qvector<rangeset_t>::iterator __cdecl ?end_?$qvector_Vrangeset_t____QEAAPEAVrangeset_t__XZ(qvector<rangeset_t> *__hidden this);
qvector<rangeset_t>::const_iterator __cdecl ?end_?$qvector_Vrangeset_t____QEBAPEBVrangeset_t__XZ(const qvector<rangeset_t> *__hidden this);
qvector<sync_source_t>::iterator __cdecl ?end_?$qvector_Vsync_source_t____QEAAPEAVsync_source_t__XZ(qvector<sync_source_t> *__hidden this);
qvector<sync_source_t>::const_iterator __cdecl ?end_?$qvector_Vsync_source_t____QEBAPEBVsync_source_t__XZ(const qvector<sync_source_t> *__hidden this);
qvector<tinfo_t>::iterator __cdecl ?end_?$qvector_Vtinfo_t____QEAAPEAVtinfo_t__XZ(qvector<tinfo_t> *__hidden this);
qvector<tinfo_t>::const_iterator __cdecl ?end_?$qvector_Vtinfo_t____QEBAPEBVtinfo_t__XZ(const qvector<tinfo_t> *__hidden this);
qvector<tryblk_t>::iterator __cdecl ?end_?$qvector_Vtryblk_t____QEAAPEAVtryblk_t__XZ(qvector<tryblk_t> *__hidden this);
qvector<tryblk_t>::const_iterator __cdecl ?end_?$qvector_Vtryblk_t____QEBAPEBVtryblk_t__XZ(const qvector<tryblk_t> *__hidden this);
qvector<twinline_t>::iterator __cdecl ?end_?$qvector_Vtwinline_t____QEAAPEAVtwinline_t__XZ(qvector<twinline_t> *__hidden this);
qvector<twinline_t>::const_iterator __cdecl ?end_?$qvector_Vtwinline_t____QEBAPEBVtwinline_t__XZ(const qvector<twinline_t> *__hidden this);
qvector<valstr_t>::iterator __cdecl ?end_?$qvector_Vvalstr_t____QEAAPEAVvalstr_t__XZ(qvector<valstr_t> *__hidden this);
qvector<valstr_t>::const_iterator __cdecl ?end_?$qvector_Vvalstr_t____QEBAPEBVvalstr_t__XZ(const qvector<valstr_t> *__hidden this);
qvector<movbpt_code_t>::iterator __cdecl ?end_?$qvector_W4movbpt_code_t____QEAAPEAW4movbpt_code_t__XZ(qvector<movbpt_code_t> *__hidden this);
qvector<movbpt_code_t>::const_iterator __cdecl ?end_?$qvector_W4movbpt_code_t____QEBAPEBW4movbpt_code_t__XZ(const qvector<movbpt_code_t> *__hidden this);
qvector<long long>::iterator __cdecl ?end_?$qvector__J__QEAAPEA_JXZ(qvector<long long> *__hidden this);
qvector<long long>::const_iterator __cdecl ?end_?$qvector__J__QEBAPEB_JXZ(const qvector<long long> *__hidden this);
qvector<unsigned long long>::iterator __cdecl ?end_?$qvector__K__QEAAPEA_KXZ(qvector<unsigned long long> *__hidden this);
qvector<unsigned long long>::const_iterator __cdecl ?end_?$qvector__K__QEBAPEB_KXZ(const qvector<unsigned long long> *__hidden this);
qvector<bool>::iterator __cdecl ?end_?$qvector__N__QEAAPEA_NXZ(qvector<bool> *__hidden this);
qvector<bool>::const_iterator __cdecl ?end_?$qvector__N__QEBAPEB_NXZ(const qvector<bool> *__hidden this);
qvector<wchar_t>::iterator __cdecl ?end_?$qvector__W__QEAAPEA_WXZ(qvector<wchar_t> *__hidden this);
qvector<wchar_t>::const_iterator __cdecl ?end_?$qvector__W__QEBAPEB_WXZ(const qvector<wchar_t> *__hidden this);
node_iterator __cdecl ?end_gdl_graph_t__QEBA?AVnode_iterator__XZ(const gdl_graph_t *__hidden this);
bool __cdecl ?end_netnode__QEAA_NXZ(netnode *__hidden this);
rangeset_t::iterator __cdecl ?end_rangeset_t__QEAAPEAUrange_t__XZ(rangeset_t *__hidden this);
rangeset_t::const_iterator __cdecl ?end_rangeset_t__QEBAPEBUrange_t__XZ(const rangeset_t *__hidden this);
uint64 __cdecl ?end_udt_member_t__QEBA_KXZ(const udt_member_t *__hidden this);
ssize_t __cdecl ?endbinary_processor_t__SA_J_N_Z(bool ok);
bool __cdecl ?ending_enumplace_t__UEBA_NPEAX_Z(const enumplace_t *__hidden this, void *ud);
bool __cdecl ?ending_hexplace_t__UEBA_NPEAX_Z(const hexplace_t *__hidden this, void *ud);
bool __cdecl ?ending_idaplace_t__UEBA_NPEAX_Z(const idaplace_t *__hidden this, void *ud);
bool __cdecl ?ending_linearray_t__QEBA_NXZ(const linearray_t *__hidden this);
bool __cdecl ?ending_place_t__UEBA_NPEAX_Z(const place_t *__hidden this, void *ud);
bool __cdecl ?ending_simpleline_place_t__UEBA_NPEAX_Z(const simpleline_place_t *__hidden this, void *ud);
bool __cdecl ?ending_structplace_t__UEBA_NPEAX_Z(const structplace_t *__hidden this, void *ud);
void __cdecl ?ensure_order_by_node_node_ordering_t__AEAAXXZ(node_ordering_t *__hidden this);
void __cdecl ?ensure_processor_processor_t__QEAAXXZ(processor_t *__hidden this);
chooser_base_t::cbres_t __cdecl ?enter_chooser_multi_t__UEAA?AW4cbres_t_chooser_base_t__PEAV?$qvector__K___Z(chooser_multi_t *__hidden this, sizevec_t *sel);
chooser_t::cbret_t __cdecl ?enter_chooser_t__UEAA?AUcbret_t_1__K_Z(chooser_t *__hidden this, size_t n);
place_t *__cdecl ?enter_enumplace_t__UEBAPEAVplace_t__PEAI_Z(const enumplace_t *__hidden this, uint32 *out_flags);
place_t *__cdecl ?enter_hexplace_t__UEBAPEAVplace_t__PEAI_Z(const hexplace_t *__hidden this, uint32 *out_flags);
place_t *__cdecl ?enter_idaplace_t__UEBAPEAVplace_t__PEAI_Z(const idaplace_t *__hidden this, uint32 *out_flags);
place_t *__cdecl ?enter_place_t__UEBAPEAV1_PEAI_Z(const place_t *__hidden this, uint32 *);
place_t *__cdecl ?enter_simpleline_place_t__UEBAPEAVplace_t__PEAI_Z(const simpleline_place_t *__hidden this, uint32 *out_flags);
place_t *__cdecl ?enter_structplace_t__UEBAPEAVplace_t__PEAI_Z(const structplace_t *__hidden this, uint32 *out_flags);
int __cdecl ?entry_gdl_graph_t__UEBAHXZ(const gdl_graph_t *__hidden this);
std::_Char_traits<char, int>::int_type ?eof_?$_Char_traits_DH_std__SAHXZ(void);
std::_Char_traits<unsigned short, unsigned short>::int_type ?eof_?$_Char_traits_GG_std__SAGXZ(void);
std::_Char_traits<char16_t, unsigned short>::int_type ?eof_?$_Char_traits__SG_std__SAGXZ(void);
std::_Char_traits<char32_t, unsigned int>::int_type ?eof_?$_Char_traits__UI_std__SAIXZ(void);
std::_Char_traits<wchar_t, unsigned short>::int_type ?eof_?$_Char_traits__WG_std__SAGXZ(void);
std::_Narrow_char_traits<char, int>::int_type ?eof_?$_Narrow_char_traits_DH_std__SAHXZ(void);
std::_WChar_traits<_Elem>::int_type ?eof_?$_WChar_traits_G_std__SAGXZ(void);
std::_WChar_traits<_Elem>::int_type ?eof_?$_WChar_traits__S_std__SAGXZ(void);
std::_WChar_traits<_Elem>::int_type ?eof_?$_WChar_traits__W_std__SAGXZ(void);
bool __cdecl ?eof_linput_buffer_t__QEAA_NXZ(linput_buffer_t *__hidden this);
bool __cdecl ?eof_memory_deserializer_t__QEBA_NXZ(const memory_deserializer_t *__hidden this);
char ?epsilon_?$numeric_limits_C_std__SACXZ(void);
char ?epsilon_?$numeric_limits_D_std__SADXZ(void);
unsigned __int8 ?epsilon_?$numeric_limits_E_std__SAEXZ(void);
__int16 ?epsilon_?$numeric_limits_F_std__SAFXZ(void);
unsigned __int16 ?epsilon_?$numeric_limits_G_std__SAGXZ(void);
int ?epsilon_?$numeric_limits_H_std__SAHXZ(void);
unsigned int ?epsilon_?$numeric_limits_I_std__SAIXZ(void);
__int32 ?epsilon_?$numeric_limits_J_std__SAJXZ(void);
unsigned __int32 ?epsilon_?$numeric_limits_K_std__SAKXZ(void);
float ?epsilon_?$numeric_limits_M_std__SAMXZ(void);
double ?epsilon_?$numeric_limits_N_std__SANXZ(void);
long double ?epsilon_?$numeric_limits_O_std__SAOXZ(void);
__int64 ?epsilon_?$numeric_limits__J_std__SA_JXZ(void);
unsigned __int64 ?epsilon_?$numeric_limits__K_std__SA_KXZ(void);
bool ?epsilon_?$numeric_limits__N_std__SA_NXZ(void);
__int16 ?epsilon_?$numeric_limits__S_std__SA_SXZ(void);
__int32 ?epsilon_?$numeric_limits__U_std__SA_UXZ(void);
__int16 ?epsilon_?$numeric_limits__W_std__SA_WXZ(void);
bool __cdecl ?eq_?$_Char_traits_DH_std__SA_NAEBD0_Z(char *_Left, char *_Right);
bool __cdecl ?eq_?$_Char_traits_GG_std__SA_NAEBG0_Z(unsigned __int16 *_Left, unsigned __int16 *_Right);
bool __cdecl ?eq_?$_Char_traits__SG_std__SA_NAEB_S0_Z(__int16 *_Left, __int16 *_Right);
bool __cdecl ?eq_?$_Char_traits__UI_std__SA_NAEB_U0_Z(__int32 *_Left, __int32 *_Right);
bool __cdecl ?eq_?$_Char_traits__WG_std__SA_NAEB_W0_Z(__int16 *_Left, __int16 *_Right);
bool __cdecl ?eq_?$_Narrow_char_traits_DH_std__SA_NAEBD0_Z(char *_Left, char *_Right);
bool __cdecl ?eq_?$_WChar_traits_G_std__SA_NAEBG0_Z(unsigned __int16 *_Left, unsigned __int16 *_Right);
bool __cdecl ?eq_?$_WChar_traits__S_std__SA_NAEB_S0_Z(__int16 *_Left, __int16 *_Right);
bool __cdecl ?eq_?$_WChar_traits__W_std__SA_NAEB_W0_Z(__int16 *_Left, __int16 *_Right);
bool __cdecl ?eq_int_type_?$_Char_traits_DH_std__SA_NAEBH0_Z(const std::_Char_traits<char, int>::int_type *_Left, const std::_Char_traits<char, int>::int_type *_Right);
bool __cdecl ?eq_int_type_?$_Char_traits_GG_std__SA_NAEBG0_Z(const std::_Char_traits<unsigned short, unsigned short>::int_type *_Left, const std::_Char_traits<unsigned short, unsigned short>::int_type *_Right);
bool __cdecl ?eq_int_type_?$_Char_traits__SG_std__SA_NAEBG0_Z(const std::_Char_traits<char16_t, unsigned short>::int_type *_Left, const std::_Char_traits<char16_t, unsigned short>::int_type *_Right);
bool __cdecl ?eq_int_type_?$_Char_traits__UI_std__SA_NAEBI0_Z(const std::_Char_traits<char32_t, unsigned int>::int_type *_Left, const std::_Char_traits<char32_t, unsigned int>::int_type *_Right);
bool __cdecl ?eq_int_type_?$_Char_traits__WG_std__SA_NAEBG0_Z(const std::_Char_traits<wchar_t, unsigned short>::int_type *_Left, const std::_Char_traits<wchar_t, unsigned short>::int_type *_Right);
bool __cdecl ?eq_int_type_?$_Narrow_char_traits_DH_std__SA_NAEBH0_Z(const std::_Narrow_char_traits<char, int>::int_type *_Left, const std::_Narrow_char_traits<char, int>::int_type *_Right);
bool __cdecl ?eq_int_type_?$_WChar_traits_G_std__SA_NAEBG0_Z(const std::_WChar_traits<_Elem>::int_type *_Left, const std::_WChar_traits<_Elem>::int_type *_Right);
bool __cdecl ?eq_int_type_?$_WChar_traits__S_std__SA_NAEBG0_Z(const std::_WChar_traits<_Elem>::int_type *_Left, const std::_WChar_traits<_Elem>::int_type *_Right);
bool __cdecl ?eq_int_type_?$_WChar_traits__W_std__SA_NAEBG0_Z(const std::_WChar_traits<_Elem>::int_type *_Left, const std::_WChar_traits<_Elem>::int_type *_Right);
bool __cdecl ?equal_ops_jump_pattern_t__UEBA_NAEBVop_t__0_Z(const jump_pattern_t *__hidden this, const op_t *x, const op_t *y);
bool __cdecl ?equal_ops_dtype_jump_pattern_t__IEBA_NAEBVop_t__0_Z(const jump_pattern_t *__hidden this, const op_t *op, const op_t *reg);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> __cdecl ?equal_range_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AU?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__V12__2_AEBH_Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type *_Keyval);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> __cdecl ?equal_range_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AU?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__V12__2_AEBH_Z(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type *_Keyval);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> __cdecl ?equal_range_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AU?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__V12__2_AEBV?$_qstring_D___Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type *_Keyval);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> __cdecl ?equal_range_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AU?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__V12__2_AEBV?$_qstring_D___Z(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type *_Keyval);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> __cdecl ?equal_range_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AU?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__V12__2_AEB_K_Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type *_Keyval);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> __cdecl ?equal_range_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AU?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__V12__2_AEB_K_Z(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type *_Keyval);
std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> __cdecl ?equal_range_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AU?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__V12__2_AEB_K_Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type *_Keyval);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> __cdecl ?equal_range_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AU?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__V12__2_AEB_K_Z(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type *_Keyval);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> __cdecl ?equal_range_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AU?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__V12__2_AEBH_Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type *_Keyval);
std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> __cdecl ?equal_range_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AU?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__V12__2_AEBH_Z(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type *_Keyval);
ssize_t __cdecl ?equal_reglocs_processor_t__SA_JAEBVargloc_t__0_Z(const argloc_t *a1, const argloc_t *a2);
bool __cdecl ?equals_source_item_t__UEBA_NPEBV1__Z(const source_item_t *__hidden this, const source_item_t *other);
bool __cdecl ?equals_to_tinfo_t__QEBA_NAEBV1__Z(const tinfo_t *__hidden this, const tinfo_t *r);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::iterator __cdecl ?erase_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_0_Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator _First, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator _Last);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::iterator __cdecl ?erase_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator _Where);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::size_type __cdecl ?erase_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA_KAEBH_Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::iterator __cdecl ?erase_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_0_Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator _First, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator _Last);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::iterator __cdecl ?erase_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator _Where);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::size_type __cdecl ?erase_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA_KAEBV?$_qstring_D___Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::iterator __cdecl ?erase_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_0_Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator _First, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator _Last);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::iterator __cdecl ?erase_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator _Where);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::size_type __cdecl ?erase_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA_KAEB_K_Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::iterator __cdecl ?erase_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_0_Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator _First, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator _Last);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::iterator __cdecl ?erase_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator _Where);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::size_type __cdecl ?erase_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA_KAEB_K_Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::iterator __cdecl ?erase_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_V32_0_Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator _First, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator _Last);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::iterator __cdecl ?erase_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_V32__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator _Where);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::size_type __cdecl ?erase_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA_KAEBH_Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type *_Keyval);
std::basic_string<char>::iterator __cdecl ?erase_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_0_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::const_iterator _First, const std::basic_string<char>::const_iterator _Last);
std::basic_string<char>::iterator __cdecl ?erase_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2__Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::const_iterator _Where);
std::basic_string<char> *__cdecl ?erase_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__K0_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Count);
std::basic_string<char> *__cdecl ?erase_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__K_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::iterator __cdecl ?erase_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_0_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::const_iterator _First, const std::basic_string<char16_t>::const_iterator _Last);
std::basic_string<char16_t>::iterator __cdecl ?erase_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::const_iterator _Where);
std::basic_string<char16_t> *__cdecl ?erase_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__K0_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?erase_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__K_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::iterator __cdecl ?erase_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_0_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::const_iterator _First, const std::basic_string<char32_t>::const_iterator _Last);
std::basic_string<char32_t>::iterator __cdecl ?erase_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::const_iterator _Where);
std::basic_string<char32_t> *__cdecl ?erase_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__K0_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?erase_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__K_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::iterator __cdecl ?erase_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_0_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::const_iterator _First, const std::basic_string<wchar_t>::const_iterator _Last);
std::basic_string<wchar_t>::iterator __cdecl ?erase_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::const_iterator _Where);
std::basic_string<wchar_t> *__cdecl ?erase_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__K0_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?erase_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__K_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off);
qlist<ui_request_t *>::iterator __cdecl ?erase_?$qlist_PEAVui_request_t____QEAA?AViterator_1_V21__Z(qlist<ui_request_t *> *__hidden this, qlist<ui_request_t *>::iterator p);
void __cdecl ?erase_?$qlist_PEAVui_request_t____QEAAXViterator_1_0_Z(qlist<ui_request_t *> *__hidden this, qlist<ui_request_t *>::iterator p1, qlist<ui_request_t *>::iterator p2);
qvector<char>::iterator __cdecl ?erase_?$qvector_D__QEAAPEADPEAD0_Z(qvector<char> *__hidden this, qvector<char>::iterator first, qvector<char>::iterator last);
qvector<char>::iterator __cdecl ?erase_?$qvector_D__QEAAPEADPEAD_Z(qvector<char> *__hidden this, qvector<char>::iterator it);
qvector<unsigned char>::iterator __cdecl ?erase_?$qvector_E__QEAAPEAEPEAE0_Z(qvector<unsigned char> *__hidden this, qvector<unsigned char>::iterator first, qvector<unsigned char>::iterator last);
qvector<unsigned char>::iterator __cdecl ?erase_?$qvector_E__QEAAPEAEPEAE_Z(qvector<unsigned char> *__hidden this, qvector<unsigned char>::iterator it);
qvector<int>::iterator __cdecl ?erase_?$qvector_H__QEAAPEAHPEAH0_Z(qvector<int> *__hidden this, qvector<int>::iterator first, qvector<int>::iterator last);
qvector<int>::iterator __cdecl ?erase_?$qvector_H__QEAAPEAHPEAH_Z(qvector<int> *__hidden this, qvector<int>::iterator it);
qvector<unsigned int>::iterator __cdecl ?erase_?$qvector_I__QEAAPEAIPEAI0_Z(qvector<unsigned int> *__hidden this, qvector<unsigned int>::iterator first, qvector<unsigned int>::iterator last);
qvector<unsigned int>::iterator __cdecl ?erase_?$qvector_I__QEAAPEAIPEAI_Z(qvector<unsigned int> *__hidden this, qvector<unsigned int>::iterator it);
qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator __cdecl ?erase_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAPEAP6A_JPEAW4syntax_highlight_style__PEBD_ZPEAP6A_J01_Z2_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator first, qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator last);
qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator __cdecl ?erase_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAPEAP6A_JPEAW4syntax_highlight_style__PEBD_ZPEAP6A_J01_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator it);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator __cdecl ?erase_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAPEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZPEAP6A_N01_Z2_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator first, qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator last);
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator __cdecl ?erase_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAPEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZPEAP6A_N01_Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator it);
qvector<bpt_t *>::iterator __cdecl ?erase_?$qvector_PEAUbpt_t____QEAAPEAPEAUbpt_t__PEAPEAU2_0_Z(qvector<bpt_t *> *__hidden this, qvector<bpt_t *>::iterator first, qvector<bpt_t *>::iterator last);
qvector<bpt_t *>::iterator __cdecl ?erase_?$qvector_PEAUbpt_t____QEAAPEAPEAUbpt_t__PEAPEAU2__Z(qvector<bpt_t *> *__hidden this, qvector<bpt_t *>::iterator it);
qvector<extlang_t *>::iterator __cdecl ?erase_?$qvector_PEAUextlang_t____QEAAPEAPEAUextlang_t__PEAPEAU2_0_Z(qvector<extlang_t *> *__hidden this, qvector<extlang_t *>::iterator first, qvector<extlang_t *>::iterator last);
qvector<extlang_t *>::iterator __cdecl ?erase_?$qvector_PEAUextlang_t____QEAAPEAPEAUextlang_t__PEAPEAU2__Z(qvector<extlang_t *> *__hidden this, qvector<extlang_t *>::iterator it);
qvector<line_rendering_output_entry_t *>::iterator __cdecl ?erase_?$qvector_PEAUline_rendering_output_entry_t____QEAAPEAPEAUline_rendering_output_entry_t__PEAPEAU2_0_Z(qvector<line_rendering_output_entry_t *> *__hidden this, qvector<line_rendering_output_entry_t *>::iterator first, qvector<line_rendering_output_entry_t *>::iterator last);
qvector<line_rendering_output_entry_t *>::iterator __cdecl ?erase_?$qvector_PEAUline_rendering_output_entry_t____QEAAPEAPEAUline_rendering_output_entry_t__PEAPEAU2__Z(qvector<line_rendering_output_entry_t *> *__hidden this, qvector<line_rendering_output_entry_t *>::iterator it);
qvector<snapshot_t *>::iterator __cdecl ?erase_?$qvector_PEAVsnapshot_t____QEAAPEAPEAVsnapshot_t__PEAPEAV2_0_Z(qvector<snapshot_t *> *__hidden this, qvector<snapshot_t *>::iterator first, qvector<snapshot_t *>::iterator last);
qvector<snapshot_t *>::iterator __cdecl ?erase_?$qvector_PEAVsnapshot_t____QEAAPEAPEAVsnapshot_t__PEAPEAV2__Z(qvector<snapshot_t *> *__hidden this, qvector<snapshot_t *>::iterator it);
qvector<const char *>::iterator __cdecl ?erase_?$qvector_PEBD__QEAAPEAPEBDPEAPEBD0_Z(qvector<const char *> *__hidden this, qvector<const char *>::iterator first, qvector<const char *>::iterator last);
qvector<const char *>::iterator __cdecl ?erase_?$qvector_PEBD__QEAAPEAPEBDPEAPEBD_Z(qvector<const char *> *__hidden this, qvector<const char *>::iterator it);
qvector<const bpt_t *>::iterator __cdecl ?erase_?$qvector_PEBUbpt_t____QEAAPEAPEBUbpt_t__PEAPEBU2_0_Z(qvector<const bpt_t *> *__hidden this, qvector<const bpt_t *>::iterator first, qvector<const bpt_t *>::iterator last);
qvector<const bpt_t *>::iterator __cdecl ?erase_?$qvector_PEBUbpt_t____QEAAPEAPEBUbpt_t__PEAPEBU2__Z(qvector<const bpt_t *> *__hidden this, qvector<const bpt_t *>::iterator it);
qvector<const rangeset_t *>::iterator __cdecl ?erase_?$qvector_PEBVrangeset_t____QEAAPEAPEBVrangeset_t__PEAPEBV2_0_Z(qvector<const rangeset_t *> *__hidden this, qvector<const rangeset_t *>::iterator first, qvector<const rangeset_t *>::iterator last);
qvector<const rangeset_t *>::iterator __cdecl ?erase_?$qvector_PEBVrangeset_t____QEAAPEAPEBVrangeset_t__PEAPEBV2__Z(qvector<const rangeset_t *> *__hidden this, qvector<const rangeset_t *>::iterator it);
qvector<const twinline_t *>::iterator __cdecl ?erase_?$qvector_PEBVtwinline_t____QEAAPEAPEBVtwinline_t__PEAPEBV2_0_Z(qvector<const twinline_t *> *__hidden this, qvector<const twinline_t *>::iterator first, qvector<const twinline_t *>::iterator last);
qvector<const twinline_t *>::iterator __cdecl ?erase_?$qvector_PEBVtwinline_t____QEAAPEAPEBVtwinline_t__PEAPEBV2__Z(qvector<const twinline_t *> *__hidden this, qvector<const twinline_t *>::iterator it);
qvector<argpart_t>::iterator __cdecl ?erase_?$qvector_Uargpart_t____QEAAPEAUargpart_t__PEAU2_0_Z(qvector<argpart_t> *__hidden this, qvector<argpart_t>::iterator first, qvector<argpart_t>::iterator last);
qvector<argpart_t>::iterator __cdecl ?erase_?$qvector_Uargpart_t____QEAAPEAUargpart_t__PEAU2__Z(qvector<argpart_t> *__hidden this, qvector<argpart_t>::iterator it);
qvector<bpt_t>::iterator __cdecl ?erase_?$qvector_Ubpt_t____QEAAPEAUbpt_t__PEAU2_0_Z(qvector<bpt_t> *__hidden this, qvector<bpt_t>::iterator first, qvector<bpt_t>::iterator last);
qvector<bpt_t>::iterator __cdecl ?erase_?$qvector_Ubpt_t____QEAAPEAUbpt_t__PEAU2__Z(qvector<bpt_t> *__hidden this, qvector<bpt_t>::iterator it);
qvector<bptaddrs_t>::iterator __cdecl ?erase_?$qvector_Ubptaddrs_t____QEAAPEAUbptaddrs_t__PEAU2_0_Z(qvector<bptaddrs_t> *__hidden this, qvector<bptaddrs_t>::iterator first, qvector<bptaddrs_t>::iterator last);
qvector<bptaddrs_t>::iterator __cdecl ?erase_?$qvector_Ubptaddrs_t____QEAAPEAUbptaddrs_t__PEAU2__Z(qvector<bptaddrs_t> *__hidden this, qvector<bptaddrs_t>::iterator it);
qvector<call_stack_info_t>::iterator __cdecl ?erase_?$qvector_Ucall_stack_info_t____QEAAPEAUcall_stack_info_t__PEAU2_0_Z(qvector<call_stack_info_t> *__hidden this, qvector<call_stack_info_t>::iterator first, qvector<call_stack_info_t>::iterator last);
qvector<call_stack_info_t>::iterator __cdecl ?erase_?$qvector_Ucall_stack_info_t____QEAAPEAUcall_stack_info_t__PEAU2__Z(qvector<call_stack_info_t> *__hidden this, qvector<call_stack_info_t>::iterator it);
qvector<catch_t>::iterator __cdecl ?erase_?$qvector_Ucatch_t____QEAAPEAUcatch_t__PEAU2_0_Z(qvector<catch_t> *__hidden this, qvector<catch_t>::iterator first, qvector<catch_t>::iterator last);
qvector<catch_t>::iterator __cdecl ?erase_?$qvector_Ucatch_t____QEAAPEAUcatch_t__PEAU2__Z(qvector<catch_t> *__hidden this, qvector<catch_t>::iterator it);
qvector<cfgopt_set_t>::iterator __cdecl ?erase_?$qvector_Ucfgopt_set_t____QEAAPEAUcfgopt_set_t__PEAU2_0_Z(qvector<cfgopt_set_t> *__hidden this, qvector<cfgopt_set_t>::iterator first, qvector<cfgopt_set_t>::iterator last);
qvector<cfgopt_set_t>::iterator __cdecl ?erase_?$qvector_Ucfgopt_set_t____QEAAPEAUcfgopt_set_t__PEAU2__Z(qvector<cfgopt_set_t> *__hidden this, qvector<cfgopt_set_t>::iterator it);
qvector<channel_redir_t>::iterator __cdecl ?erase_?$qvector_Uchannel_redir_t____QEAAPEAUchannel_redir_t__PEAU2_0_Z(qvector<channel_redir_t> *__hidden this, qvector<channel_redir_t>::iterator first, qvector<channel_redir_t>::iterator last);
qvector<channel_redir_t>::iterator __cdecl ?erase_?$qvector_Uchannel_redir_t____QEAAPEAUchannel_redir_t__PEAU2__Z(qvector<channel_redir_t> *__hidden this, qvector<channel_redir_t>::iterator it);
qvector<cliopt_t>::iterator __cdecl ?erase_?$qvector_Ucliopt_t____QEAAPEAUcliopt_t__PEAU2_0_Z(qvector<cliopt_t> *__hidden this, qvector<cliopt_t>::iterator first, qvector<cliopt_t>::iterator last);
qvector<cliopt_t>::iterator __cdecl ?erase_?$qvector_Ucliopt_t____QEAAPEAUcliopt_t__PEAU2__Z(qvector<cliopt_t> *__hidden this, qvector<cliopt_t>::iterator it);
qvector<compiled_binpat_t>::iterator __cdecl ?erase_?$qvector_Ucompiled_binpat_t____QEAAPEAUcompiled_binpat_t__PEAU2_0_Z(qvector<compiled_binpat_t> *__hidden this, qvector<compiled_binpat_t>::iterator first, qvector<compiled_binpat_t>::iterator last);
qvector<compiled_binpat_t>::iterator __cdecl ?erase_?$qvector_Ucompiled_binpat_t____QEAAPEAUcompiled_binpat_t__PEAU2__Z(qvector<compiled_binpat_t> *__hidden this, qvector<compiled_binpat_t>::iterator it);
qvector<debug_event_t>::iterator __cdecl ?erase_?$qvector_Udebug_event_t____QEAAPEAUdebug_event_t__PEAU2_0_Z(qvector<debug_event_t> *__hidden this, qvector<debug_event_t>::iterator first, qvector<debug_event_t>::iterator last);
qvector<debug_event_t>::iterator __cdecl ?erase_?$qvector_Udebug_event_t____QEAAPEAUdebug_event_t__PEAU2__Z(qvector<debug_event_t> *__hidden this, qvector<debug_event_t>::iterator it);
qvector<direntry_t>::iterator __cdecl ?erase_?$qvector_Udirentry_t____QEAAPEAUdirentry_t__PEAU2_0_Z(qvector<direntry_t> *__hidden this, qvector<direntry_t>::iterator first, qvector<direntry_t>::iterator last);
qvector<direntry_t>::iterator __cdecl ?erase_?$qvector_Udirentry_t____QEAAPEAUdirentry_t__PEAU2__Z(qvector<direntry_t> *__hidden this, qvector<direntry_t>::iterator it);
qvector<dirtree_cursor_t>::iterator __cdecl ?erase_?$qvector_Udirtree_cursor_t____QEAAPEAUdirtree_cursor_t__PEAU2_0_Z(qvector<dirtree_cursor_t> *__hidden this, qvector<dirtree_cursor_t>::iterator first, qvector<dirtree_cursor_t>::iterator last);
qvector<dirtree_cursor_t>::iterator __cdecl ?erase_?$qvector_Udirtree_cursor_t____QEAAPEAUdirtree_cursor_t__PEAU2__Z(qvector<dirtree_cursor_t> *__hidden this, qvector<dirtree_cursor_t>::iterator it);
qvector<ea_name_t>::iterator __cdecl ?erase_?$qvector_Uea_name_t____QEAAPEAUea_name_t__PEAU2_0_Z(qvector<ea_name_t> *__hidden this, qvector<ea_name_t>::iterator first, qvector<ea_name_t>::iterator last);
qvector<ea_name_t>::iterator __cdecl ?erase_?$qvector_Uea_name_t____QEAAPEAUea_name_t__PEAU2__Z(qvector<ea_name_t> *__hidden this, qvector<ea_name_t>::iterator it);
qvector<edge_t>::iterator __cdecl ?erase_?$qvector_Uedge_t____QEAAPEAUedge_t__PEAU2_0_Z(qvector<edge_t> *__hidden this, qvector<edge_t>::iterator first, qvector<edge_t>::iterator last);
qvector<edge_t>::iterator __cdecl ?erase_?$qvector_Uedge_t____QEAAPEAUedge_t__PEAU2__Z(qvector<edge_t> *__hidden this, qvector<edge_t>::iterator it);
qvector<enum_member_t>::iterator __cdecl ?erase_?$qvector_Uenum_member_t____QEAAPEAUenum_member_t__PEAU2_0_Z(qvector<enum_member_t> *__hidden this, qvector<enum_member_t>::iterator first, qvector<enum_member_t>::iterator last);
qvector<enum_member_t>::iterator __cdecl ?erase_?$qvector_Uenum_member_t____QEAAPEAUenum_member_t__PEAU2__Z(qvector<enum_member_t> *__hidden this, qvector<enum_member_t>::iterator it);
qvector<exception_info_t>::iterator __cdecl ?erase_?$qvector_Uexception_info_t____QEAAPEAUexception_info_t__PEAU2_0_Z(qvector<exception_info_t> *__hidden this, qvector<exception_info_t>::iterator first, qvector<exception_info_t>::iterator last);
qvector<exception_info_t>::iterator __cdecl ?erase_?$qvector_Uexception_info_t____QEAAPEAUexception_info_t__PEAU2__Z(qvector<exception_info_t> *__hidden this, qvector<exception_info_t>::iterator it);
qvector<fixup_info_t>::iterator __cdecl ?erase_?$qvector_Ufixup_info_t____QEAAPEAUfixup_info_t__PEAU2_0_Z(qvector<fixup_info_t> *__hidden this, qvector<fixup_info_t>::iterator first, qvector<fixup_info_t>::iterator last);
qvector<fixup_info_t>::iterator __cdecl ?erase_?$qvector_Ufixup_info_t____QEAAPEAUfixup_info_t__PEAU2__Z(qvector<fixup_info_t> *__hidden this, qvector<fixup_info_t>::iterator it);
qvector<funcarg_t>::iterator __cdecl ?erase_?$qvector_Ufuncarg_t____QEAAPEAUfuncarg_t__PEAU2_0_Z(qvector<funcarg_t> *__hidden this, qvector<funcarg_t>::iterator first, qvector<funcarg_t>::iterator last);
qvector<funcarg_t>::iterator __cdecl ?erase_?$qvector_Ufuncarg_t____QEAAPEAUfuncarg_t__PEAU2__Z(qvector<funcarg_t> *__hidden this, qvector<funcarg_t>::iterator it);
qvector<group_crinfo_t>::iterator __cdecl ?erase_?$qvector_Ugroup_crinfo_t____QEAAPEAUgroup_crinfo_t__PEAU2_0_Z(qvector<group_crinfo_t> *__hidden this, qvector<group_crinfo_t>::iterator first, qvector<group_crinfo_t>::iterator last);
qvector<group_crinfo_t>::iterator __cdecl ?erase_?$qvector_Ugroup_crinfo_t____QEAAPEAUgroup_crinfo_t__PEAU2__Z(qvector<group_crinfo_t> *__hidden this, qvector<group_crinfo_t>::iterator it);
qvector<idc_global_t>::iterator __cdecl ?erase_?$qvector_Uidc_global_t____QEAAPEAUidc_global_t__PEAU2_0_Z(qvector<idc_global_t> *__hidden this, qvector<idc_global_t>::iterator first, qvector<idc_global_t>::iterator last);
qvector<idc_global_t>::iterator __cdecl ?erase_?$qvector_Uidc_global_t____QEAAPEAUidc_global_t__PEAU2__Z(qvector<idc_global_t> *__hidden this, qvector<idc_global_t>::iterator it);
qvector<idp_desc_t>::iterator __cdecl ?erase_?$qvector_Uidp_desc_t____QEAAPEAUidp_desc_t__PEAU2_0_Z(qvector<idp_desc_t> *__hidden this, qvector<idp_desc_t>::iterator first, qvector<idp_desc_t>::iterator last);
qvector<idp_desc_t>::iterator __cdecl ?erase_?$qvector_Uidp_desc_t____QEAAPEAUidp_desc_t__PEAU2__Z(qvector<idp_desc_t> *__hidden this, qvector<idp_desc_t>::iterator it);
qvector<idp_name_t>::iterator __cdecl ?erase_?$qvector_Uidp_name_t____QEAAPEAUidp_name_t__PEAU2_0_Z(qvector<idp_name_t> *__hidden this, qvector<idp_name_t>::iterator first, qvector<idp_name_t>::iterator last);
qvector<idp_name_t>::iterator __cdecl ?erase_?$qvector_Uidp_name_t____QEAAPEAUidp_name_t__PEAU2__Z(qvector<idp_name_t> *__hidden this, qvector<idp_name_t>::iterator it);
qvector<ioport_bit_t>::iterator __cdecl ?erase_?$qvector_Uioport_bit_t____QEAAPEAUioport_bit_t__PEAU2_0_Z(qvector<ioport_bit_t> *__hidden this, qvector<ioport_bit_t>::iterator first, qvector<ioport_bit_t>::iterator last);
qvector<ioport_bit_t>::iterator __cdecl ?erase_?$qvector_Uioport_bit_t____QEAAPEAUioport_bit_t__PEAU2__Z(qvector<ioport_bit_t> *__hidden this, qvector<ioport_bit_t>::iterator it);
qvector<ioport_t>::iterator __cdecl ?erase_?$qvector_Uioport_t____QEAAPEAUioport_t__PEAU2_0_Z(qvector<ioport_t> *__hidden this, qvector<ioport_t>::iterator first, qvector<ioport_t>::iterator last);
qvector<ioport_t>::iterator __cdecl ?erase_?$qvector_Uioport_t____QEAAPEAUioport_t__PEAU2__Z(qvector<ioport_t> *__hidden this, qvector<ioport_t>::iterator it);
qvector<jvalue_t>::iterator __cdecl ?erase_?$qvector_Ujvalue_t____QEAAPEAUjvalue_t__PEAU2_0_Z(qvector<jvalue_t> *__hidden this, qvector<jvalue_t>::iterator first, qvector<jvalue_t>::iterator last);
qvector<jvalue_t>::iterator __cdecl ?erase_?$qvector_Ujvalue_t____QEAAPEAUjvalue_t__PEAU2__Z(qvector<jvalue_t> *__hidden this, qvector<jvalue_t>::iterator it);
qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator __cdecl ?erase_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAPEAUkeywords_style_t_ida_syntax_highlighter_t__PEAU23_0_Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator first, qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator last);
qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator __cdecl ?erase_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAPEAUkeywords_style_t_ida_syntax_highlighter_t__PEAU23__Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator it);
qvector<kvp_t>::iterator __cdecl ?erase_?$qvector_Ukvp_t____QEAAPEAUkvp_t__PEAU2_0_Z(qvector<kvp_t> *__hidden this, qvector<kvp_t>::iterator first, qvector<kvp_t>::iterator last);
qvector<kvp_t>::iterator __cdecl ?erase_?$qvector_Ukvp_t____QEAAPEAUkvp_t__PEAU2__Z(qvector<kvp_t> *__hidden this, qvector<kvp_t>::iterator it);
qvector<lochist_entry_t>::iterator __cdecl ?erase_?$qvector_Ulochist_entry_t____QEAAPEAUlochist_entry_t__PEAU2_0_Z(qvector<lochist_entry_t> *__hidden this, qvector<lochist_entry_t>::iterator first, qvector<lochist_entry_t>::iterator last);
qvector<lochist_entry_t>::iterator __cdecl ?erase_?$qvector_Ulochist_entry_t____QEAAPEAUlochist_entry_t__PEAU2__Z(qvector<lochist_entry_t> *__hidden this, qvector<lochist_entry_t>::iterator it);
qvector<lowcnd_t>::iterator __cdecl ?erase_?$qvector_Ulowcnd_t____QEAAPEAUlowcnd_t__PEAU2_0_Z(qvector<lowcnd_t> *__hidden this, qvector<lowcnd_t>::iterator first, qvector<lowcnd_t>::iterator last);
qvector<lowcnd_t>::iterator __cdecl ?erase_?$qvector_Ulowcnd_t____QEAAPEAUlowcnd_t__PEAU2__Z(qvector<lowcnd_t> *__hidden this, qvector<lowcnd_t>::iterator it);
qvector<memory_info_t>::iterator __cdecl ?erase_?$qvector_Umemory_info_t____QEAAPEAUmemory_info_t__PEAU2_0_Z(qvector<memory_info_t> *__hidden this, qvector<memory_info_t>::iterator first, qvector<memory_info_t>::iterator last);
qvector<memory_info_t>::iterator __cdecl ?erase_?$qvector_Umemory_info_t____QEAAPEAUmemory_info_t__PEAU2__Z(qvector<memory_info_t> *__hidden this, qvector<memory_info_t>::iterator it);
qvector<memreg_info_t>::iterator __cdecl ?erase_?$qvector_Umemreg_info_t____QEAAPEAUmemreg_info_t__PEAU2_0_Z(qvector<memreg_info_t> *__hidden this, qvector<memreg_info_t>::iterator first, qvector<memreg_info_t>::iterator last);
qvector<memreg_info_t>::iterator __cdecl ?erase_?$qvector_Umemreg_info_t____QEAAPEAUmemreg_info_t__PEAU2__Z(qvector<memreg_info_t> *__hidden this, qvector<memreg_info_t>::iterator it);
qvector<modinfo_t>::iterator __cdecl ?erase_?$qvector_Umodinfo_t____QEAAPEAUmodinfo_t__PEAU2_0_Z(qvector<modinfo_t> *__hidden this, qvector<modinfo_t>::iterator first, qvector<modinfo_t>::iterator last);
qvector<modinfo_t>::iterator __cdecl ?erase_?$qvector_Umodinfo_t____QEAAPEAUmodinfo_t__PEAU2__Z(qvector<modinfo_t> *__hidden this, qvector<modinfo_t>::iterator it);
qvector<movbpt_info_t>::iterator __cdecl ?erase_?$qvector_Umovbpt_info_t____QEAAPEAUmovbpt_info_t__PEAU2_0_Z(qvector<movbpt_info_t> *__hidden this, qvector<movbpt_info_t>::iterator first, qvector<movbpt_info_t>::iterator last);
qvector<movbpt_info_t>::iterator __cdecl ?erase_?$qvector_Umovbpt_info_t____QEAAPEAUmovbpt_info_t__PEAU2__Z(qvector<movbpt_info_t> *__hidden this, qvector<movbpt_info_t>::iterator it);
qvector<ida_syntax_highlighter_t::multicmt_t>::iterator __cdecl ?erase_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAPEAUmulticmt_t_ida_syntax_highlighter_t__PEAU23_0_Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, qvector<ida_syntax_highlighter_t::multicmt_t>::iterator first, qvector<ida_syntax_highlighter_t::multicmt_t>::iterator last);
qvector<ida_syntax_highlighter_t::multicmt_t>::iterator __cdecl ?erase_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAPEAUmulticmt_t_ida_syntax_highlighter_t__PEAU23__Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, qvector<ida_syntax_highlighter_t::multicmt_t>::iterator it);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator __cdecl ?erase_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAPEAUplain_char_ptr_t_ida_syntax_highlighter_t__PEAU23_0_Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator first, qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator last);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator __cdecl ?erase_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAPEAUplain_char_ptr_t_ida_syntax_highlighter_t__PEAU23__Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator it);
qvector<point_t>::iterator __cdecl ?erase_?$qvector_Upoint_t____QEAAPEAUpoint_t__PEAU2_0_Z(qvector<point_t> *__hidden this, qvector<point_t>::iterator first, qvector<point_t>::iterator last);
qvector<point_t>::iterator __cdecl ?erase_?$qvector_Upoint_t____QEAAPEAUpoint_t__PEAU2__Z(qvector<point_t> *__hidden this, qvector<point_t>::iterator it);
qvector<process_info_t>::iterator __cdecl ?erase_?$qvector_Uprocess_info_t____QEAAPEAUprocess_info_t__PEAU2_0_Z(qvector<process_info_t> *__hidden this, qvector<process_info_t>::iterator first, qvector<process_info_t>::iterator last);
qvector<process_info_t>::iterator __cdecl ?erase_?$qvector_Uprocess_info_t____QEAAPEAUprocess_info_t__PEAU2__Z(qvector<process_info_t> *__hidden this, qvector<process_info_t>::iterator it);
qvector<qbasic_block_t>::iterator __cdecl ?erase_?$qvector_Uqbasic_block_t____QEAAPEAUqbasic_block_t__PEAU2_0_Z(qvector<qbasic_block_t> *__hidden this, qvector<qbasic_block_t>::iterator first, qvector<qbasic_block_t>::iterator last);
qvector<qbasic_block_t>::iterator __cdecl ?erase_?$qvector_Uqbasic_block_t____QEAAPEAUqbasic_block_t__PEAU2__Z(qvector<qbasic_block_t> *__hidden this, qvector<qbasic_block_t>::iterator it);
qvector<range_t>::iterator __cdecl ?erase_?$qvector_Urange_t____QEAAPEAUrange_t__PEAU2_0_Z(qvector<range_t> *__hidden this, qvector<range_t>::iterator first, qvector<range_t>::iterator last);
qvector<range_t>::iterator __cdecl ?erase_?$qvector_Urange_t____QEAAPEAUrange_t__PEAU2__Z(qvector<range_t> *__hidden this, qvector<range_t>::iterator it);
qvector<rect_t>::iterator __cdecl ?erase_?$qvector_Urect_t____QEAAPEAUrect_t__PEAU2_0_Z(qvector<rect_t> *__hidden this, qvector<rect_t>::iterator first, qvector<rect_t>::iterator last);
qvector<rect_t>::iterator __cdecl ?erase_?$qvector_Urect_t____QEAAPEAUrect_t__PEAU2__Z(qvector<rect_t> *__hidden this, qvector<rect_t>::iterator it);
qvector<refinfo_desc_t>::iterator __cdecl ?erase_?$qvector_Urefinfo_desc_t____QEAAPEAUrefinfo_desc_t__PEAU2_0_Z(qvector<refinfo_desc_t> *__hidden this, qvector<refinfo_desc_t>::iterator first, qvector<refinfo_desc_t>::iterator last);
qvector<refinfo_desc_t>::iterator __cdecl ?erase_?$qvector_Urefinfo_desc_t____QEAAPEAUrefinfo_desc_t__PEAU2__Z(qvector<refinfo_desc_t> *__hidden this, qvector<refinfo_desc_t>::iterator it);
qvector<reg_access_t>::iterator __cdecl ?erase_?$qvector_Ureg_access_t____QEAAPEAUreg_access_t__PEAU2_0_Z(qvector<reg_access_t> *__hidden this, qvector<reg_access_t>::iterator first, qvector<reg_access_t>::iterator last);
qvector<reg_access_t>::iterator __cdecl ?erase_?$qvector_Ureg_access_t____QEAAPEAUreg_access_t__PEAU2__Z(qvector<reg_access_t> *__hidden this, qvector<reg_access_t>::iterator it);
qvector<reg_info_t>::iterator __cdecl ?erase_?$qvector_Ureg_info_t____QEAAPEAUreg_info_t__PEAU2_0_Z(qvector<reg_info_t> *__hidden this, qvector<reg_info_t>::iterator first, qvector<reg_info_t>::iterator last);
qvector<reg_info_t>::iterator __cdecl ?erase_?$qvector_Ureg_info_t____QEAAPEAUreg_info_t__PEAU2__Z(qvector<reg_info_t> *__hidden this, qvector<reg_info_t>::iterator it);
qvector<register_info_t>::iterator __cdecl ?erase_?$qvector_Uregister_info_t____QEAAPEAUregister_info_t__PEAU2_0_Z(qvector<register_info_t> *__hidden this, qvector<register_info_t>::iterator first, qvector<register_info_t>::iterator last);
qvector<register_info_t>::iterator __cdecl ?erase_?$qvector_Uregister_info_t____QEAAPEAUregister_info_t__PEAU2__Z(qvector<register_info_t> *__hidden this, qvector<register_info_t>::iterator it);
qvector<regobj_t>::iterator __cdecl ?erase_?$qvector_Uregobj_t____QEAAPEAUregobj_t__PEAU2_0_Z(qvector<regobj_t> *__hidden this, qvector<regobj_t>::iterator first, qvector<regobj_t>::iterator last);
qvector<regobj_t>::iterator __cdecl ?erase_?$qvector_Uregobj_t____QEAAPEAUregobj_t__PEAU2__Z(qvector<regobj_t> *__hidden this, qvector<regobj_t>::iterator it);
qvector<regval_t>::iterator __cdecl ?erase_?$qvector_Uregval_t____QEAAPEAUregval_t__PEAU2_0_Z(qvector<regval_t> *__hidden this, qvector<regval_t>::iterator first, qvector<regval_t>::iterator last);
qvector<regval_t>::iterator __cdecl ?erase_?$qvector_Uregval_t____QEAAPEAUregval_t__PEAU2__Z(qvector<regval_t> *__hidden this, qvector<regval_t>::iterator it);
qvector<row_info_t>::iterator __cdecl ?erase_?$qvector_Urow_info_t____QEAAPEAUrow_info_t__PEAU2_0_Z(qvector<row_info_t> *__hidden this, qvector<row_info_t>::iterator first, qvector<row_info_t>::iterator last);
qvector<row_info_t>::iterator __cdecl ?erase_?$qvector_Urow_info_t____QEAAPEAUrow_info_t__PEAU2__Z(qvector<row_info_t> *__hidden this, qvector<row_info_t>::iterator it);
qvector<scattered_segm_t>::iterator __cdecl ?erase_?$qvector_Uscattered_segm_t____QEAAPEAUscattered_segm_t__PEAU2_0_Z(qvector<scattered_segm_t> *__hidden this, qvector<scattered_segm_t>::iterator first, qvector<scattered_segm_t>::iterator last);
qvector<scattered_segm_t>::iterator __cdecl ?erase_?$qvector_Uscattered_segm_t____QEAAPEAUscattered_segm_t__PEAU2__Z(qvector<scattered_segm_t> *__hidden this, qvector<scattered_segm_t>::iterator it);
qvector<segm_move_info_t>::iterator __cdecl ?erase_?$qvector_Usegm_move_info_t____QEAAPEAUsegm_move_info_t__PEAU2_0_Z(qvector<segm_move_info_t> *__hidden this, qvector<segm_move_info_t>::iterator first, qvector<segm_move_info_t>::iterator last);
qvector<segm_move_info_t>::iterator __cdecl ?erase_?$qvector_Usegm_move_info_t____QEAAPEAUsegm_move_info_t__PEAU2__Z(qvector<segm_move_info_t> *__hidden this, qvector<segm_move_info_t>::iterator it);
qvector<selection_item_t>::iterator __cdecl ?erase_?$qvector_Uselection_item_t____QEAAPEAUselection_item_t__PEAU2_0_Z(qvector<selection_item_t> *__hidden this, qvector<selection_item_t>::iterator first, qvector<selection_item_t>::iterator last);
qvector<selection_item_t>::iterator __cdecl ?erase_?$qvector_Uselection_item_t____QEAAPEAUselection_item_t__PEAU2__Z(qvector<selection_item_t> *__hidden this, qvector<selection_item_t>::iterator it);
qvector<simd_info_t>::iterator __cdecl ?erase_?$qvector_Usimd_info_t____QEAAPEAUsimd_info_t__PEAU2_0_Z(qvector<simd_info_t> *__hidden this, qvector<simd_info_t>::iterator first, qvector<simd_info_t>::iterator last);
qvector<simd_info_t>::iterator __cdecl ?erase_?$qvector_Usimd_info_t____QEAAPEAUsimd_info_t__PEAU2__Z(qvector<simd_info_t> *__hidden this, qvector<simd_info_t>::iterator it);
qvector<simpleline_t>::iterator __cdecl ?erase_?$qvector_Usimpleline_t____QEAAPEAUsimpleline_t__PEAU2_0_Z(qvector<simpleline_t> *__hidden this, qvector<simpleline_t>::iterator first, qvector<simpleline_t>::iterator last);
qvector<simpleline_t>::iterator __cdecl ?erase_?$qvector_Usimpleline_t____QEAAPEAUsimpleline_t__PEAU2__Z(qvector<simpleline_t> *__hidden this, qvector<simpleline_t>::iterator it);
qvector<stkpnt_t>::iterator __cdecl ?erase_?$qvector_Ustkpnt_t____QEAAPEAUstkpnt_t__PEAU2_0_Z(qvector<stkpnt_t> *__hidden this, qvector<stkpnt_t>::iterator first, qvector<stkpnt_t>::iterator last);
qvector<stkpnt_t>::iterator __cdecl ?erase_?$qvector_Ustkpnt_t____QEAAPEAUstkpnt_t__PEAU2__Z(qvector<stkpnt_t> *__hidden this, qvector<stkpnt_t>::iterator it);
qvector<tev_info_reg_t>::iterator __cdecl ?erase_?$qvector_Utev_info_reg_t____QEAAPEAUtev_info_reg_t__PEAU2_0_Z(qvector<tev_info_reg_t> *__hidden this, qvector<tev_info_reg_t>::iterator first, qvector<tev_info_reg_t>::iterator last);
qvector<tev_info_reg_t>::iterator __cdecl ?erase_?$qvector_Utev_info_reg_t____QEAAPEAUtev_info_reg_t__PEAU2__Z(qvector<tev_info_reg_t> *__hidden this, qvector<tev_info_reg_t>::iterator it);
qvector<tev_info_t>::iterator __cdecl ?erase_?$qvector_Utev_info_t____QEAAPEAUtev_info_t__PEAU2_0_Z(qvector<tev_info_t> *__hidden this, qvector<tev_info_t>::iterator first, qvector<tev_info_t>::iterator last);
qvector<tev_info_t>::iterator __cdecl ?erase_?$qvector_Utev_info_t____QEAAPEAUtev_info_t__PEAU2__Z(qvector<tev_info_t> *__hidden this, qvector<tev_info_t>::iterator it);
qvector<tev_reg_value_t>::iterator __cdecl ?erase_?$qvector_Utev_reg_value_t____QEAAPEAUtev_reg_value_t__PEAU2_0_Z(qvector<tev_reg_value_t> *__hidden this, qvector<tev_reg_value_t>::iterator first, qvector<tev_reg_value_t>::iterator last);
qvector<tev_reg_value_t>::iterator __cdecl ?erase_?$qvector_Utev_reg_value_t____QEAAPEAUtev_reg_value_t__PEAU2__Z(qvector<tev_reg_value_t> *__hidden this, qvector<tev_reg_value_t>::iterator it);
qvector<thread_name_t>::iterator __cdecl ?erase_?$qvector_Uthread_name_t____QEAAPEAUthread_name_t__PEAU2_0_Z(qvector<thread_name_t> *__hidden this, qvector<thread_name_t>::iterator first, qvector<thread_name_t>::iterator last);
qvector<thread_name_t>::iterator __cdecl ?erase_?$qvector_Uthread_name_t____QEAAPEAUthread_name_t__PEAU2__Z(qvector<thread_name_t> *__hidden this, qvector<thread_name_t>::iterator it);
qvector<token_t>::iterator __cdecl ?erase_?$qvector_Utoken_t____QEAAPEAUtoken_t__PEAU2_0_Z(qvector<token_t> *__hidden this, qvector<token_t>::iterator first, qvector<token_t>::iterator last);
qvector<token_t>::iterator __cdecl ?erase_?$qvector_Utoken_t____QEAAPEAUtoken_t__PEAU2__Z(qvector<token_t> *__hidden this, qvector<token_t>::iterator it);
qvector<type_attr_t>::iterator __cdecl ?erase_?$qvector_Utype_attr_t____QEAAPEAUtype_attr_t__PEAU2_0_Z(qvector<type_attr_t> *__hidden this, qvector<type_attr_t>::iterator first, qvector<type_attr_t>::iterator last);
qvector<type_attr_t>::iterator __cdecl ?erase_?$qvector_Utype_attr_t____QEAAPEAUtype_attr_t__PEAU2__Z(qvector<type_attr_t> *__hidden this, qvector<type_attr_t>::iterator it);
qvector<udt_member_t>::iterator __cdecl ?erase_?$qvector_Uudt_member_t____QEAAPEAUudt_member_t__PEAU2_0_Z(qvector<udt_member_t> *__hidden this, qvector<udt_member_t>::iterator first, qvector<udt_member_t>::iterator last);
qvector<udt_member_t>::iterator __cdecl ?erase_?$qvector_Uudt_member_t____QEAAPEAUudt_member_t__PEAU2__Z(qvector<udt_member_t> *__hidden this, qvector<udt_member_t>::iterator it);
qvector<update_bpt_info_t>::iterator __cdecl ?erase_?$qvector_Uupdate_bpt_info_t____QEAAPEAUupdate_bpt_info_t__PEAU2_0_Z(qvector<update_bpt_info_t> *__hidden this, qvector<update_bpt_info_t>::iterator first, qvector<update_bpt_info_t>::iterator last);
qvector<update_bpt_info_t>::iterator __cdecl ?erase_?$qvector_Uupdate_bpt_info_t____QEAAPEAUupdate_bpt_info_t__PEAU2__Z(qvector<update_bpt_info_t> *__hidden this, qvector<update_bpt_info_t>::iterator it);
qvector<xreflist_entry_t>::iterator __cdecl ?erase_?$qvector_Uxreflist_entry_t____QEAAPEAUxreflist_entry_t__PEAU2_0_Z(qvector<xreflist_entry_t> *__hidden this, qvector<xreflist_entry_t>::iterator first, qvector<xreflist_entry_t>::iterator last);
qvector<xreflist_entry_t>::iterator __cdecl ?erase_?$qvector_Uxreflist_entry_t____QEAAPEAUxreflist_entry_t__PEAU2__Z(qvector<xreflist_entry_t> *__hidden this, qvector<xreflist_entry_t>::iterator it);
qvector<_qstring<char>>::iterator __cdecl ?erase_?$qvector_V?$_qstring_D____QEAAPEAV?$_qstring_D__PEAV2_0_Z(qvector<_qstring<char>> *__hidden this, qvector<_qstring<char>>::iterator first, qvector<_qstring<char>>::iterator last);
qvector<_qstring<char>>::iterator __cdecl ?erase_?$qvector_V?$_qstring_D____QEAAPEAV?$_qstring_D__PEAV2__Z(qvector<_qstring<char>> *__hidden this, qvector<_qstring<char>>::iterator it);
qvector<_qstring<unsigned char>>::iterator __cdecl ?erase_?$qvector_V?$_qstring_E____QEAAPEAV?$_qstring_E__PEAV2_0_Z(qvector<_qstring<unsigned char>> *__hidden this, qvector<_qstring<unsigned char>>::iterator first, qvector<_qstring<unsigned char>>::iterator last);
qvector<_qstring<unsigned char>>::iterator __cdecl ?erase_?$qvector_V?$_qstring_E____QEAAPEAV?$_qstring_E__PEAV2__Z(qvector<_qstring<unsigned char>> *__hidden this, qvector<_qstring<unsigned char>>::iterator it);
qvector<_qstring<wchar_t>>::iterator __cdecl ?erase_?$qvector_V?$_qstring__W____QEAAPEAV?$_qstring__W__PEAV2_0_Z(qvector<_qstring<wchar_t>> *__hidden this, qvector<_qstring<wchar_t>>::iterator first, qvector<_qstring<wchar_t>>::iterator last);
qvector<_qstring<wchar_t>>::iterator __cdecl ?erase_?$qvector_V?$_qstring__W____QEAAPEAV?$_qstring__W__PEAV2__Z(qvector<_qstring<wchar_t>> *__hidden this, qvector<_qstring<wchar_t>>::iterator it);
qvector<qrefcnt_t<source_item_t>>::iterator __cdecl ?erase_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAPEAV?$qrefcnt_t_Vsource_item_t____PEAV2_0_Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qvector<qrefcnt_t<source_item_t>>::iterator first, qvector<qrefcnt_t<source_item_t>>::iterator last);
qvector<qrefcnt_t<source_item_t>>::iterator __cdecl ?erase_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAPEAV?$qrefcnt_t_Vsource_item_t____PEAV2__Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qvector<qrefcnt_t<source_item_t>>::iterator it);
qvector<qvector<int>>::iterator __cdecl ?erase_?$qvector_V?$qvector_H____QEAAPEAV?$qvector_H__PEAV2_0_Z(qvector<qvector<int>> *__hidden this, qvector<qvector<int>>::iterator first, qvector<qvector<int>>::iterator last);
qvector<qvector<int>>::iterator __cdecl ?erase_?$qvector_V?$qvector_H____QEAAPEAV?$qvector_H__PEAV2__Z(qvector<qvector<int>> *__hidden this, qvector<qvector<int>>::iterator it);
qvector<qvector<const char *>>::iterator __cdecl ?erase_?$qvector_V?$qvector_PEBD____QEAAPEAV?$qvector_PEBD__PEAV2_0_Z(qvector<qvector<const char *>> *__hidden this, qvector<qvector<const char *>>::iterator first, qvector<qvector<const char *>>::iterator last);
qvector<qvector<const char *>>::iterator __cdecl ?erase_?$qvector_V?$qvector_PEBD____QEAAPEAV?$qvector_PEBD__PEAV2__Z(qvector<qvector<const char *>> *__hidden this, qvector<qvector<const char *>>::iterator it);
qvector<qvector<const twinline_t *>>::iterator __cdecl ?erase_?$qvector_V?$qvector_PEBVtwinline_t______QEAAPEAV?$qvector_PEBVtwinline_t____PEAV2_0_Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<qvector<const twinline_t *>>::iterator first, qvector<qvector<const twinline_t *>>::iterator last);
qvector<qvector<const twinline_t *>>::iterator __cdecl ?erase_?$qvector_V?$qvector_PEBVtwinline_t______QEAAPEAV?$qvector_PEBVtwinline_t____PEAV2__Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<qvector<const twinline_t *>>::iterator it);
qvector<qvector<long long>>::iterator __cdecl ?erase_?$qvector_V?$qvector__J____QEAAPEAV?$qvector__J__PEAV2_0_Z(qvector<qvector<long long>> *__hidden this, qvector<qvector<long long>>::iterator first, qvector<qvector<long long>>::iterator last);
qvector<qvector<long long>>::iterator __cdecl ?erase_?$qvector_V?$qvector__J____QEAAPEAV?$qvector__J__PEAV2__Z(qvector<qvector<long long>> *__hidden this, qvector<qvector<long long>>::iterator it);
qvector<argloc_t>::iterator __cdecl ?erase_?$qvector_Vargloc_t____QEAAPEAVargloc_t__PEAV2_0_Z(qvector<argloc_t> *__hidden this, qvector<argloc_t>::iterator first, qvector<argloc_t>::iterator last);
qvector<argloc_t>::iterator __cdecl ?erase_?$qvector_Vargloc_t____QEAAPEAVargloc_t__PEAV2__Z(qvector<argloc_t> *__hidden this, qvector<argloc_t>::iterator it);
qvector<intmap_t>::iterator __cdecl ?erase_?$qvector_Vintmap_t____QEAAPEAVintmap_t__PEAV2_0_Z(qvector<intmap_t> *__hidden this, qvector<intmap_t>::iterator first, qvector<intmap_t>::iterator last);
qvector<intmap_t>::iterator __cdecl ?erase_?$qvector_Vintmap_t____QEAAPEAVintmap_t__PEAV2__Z(qvector<intmap_t> *__hidden this, qvector<intmap_t>::iterator it);
qvector<node_set_t>::iterator __cdecl ?erase_?$qvector_Vnode_set_t____QEAAPEAVnode_set_t__PEAV2_0_Z(qvector<node_set_t> *__hidden this, qvector<node_set_t>::iterator first, qvector<node_set_t>::iterator last);
qvector<node_set_t>::iterator __cdecl ?erase_?$qvector_Vnode_set_t____QEAAPEAVnode_set_t__PEAV2__Z(qvector<node_set_t> *__hidden this, qvector<node_set_t>::iterator it);
qvector<op_t>::iterator __cdecl ?erase_?$qvector_Vop_t____QEAAPEAVop_t__PEAV2_0_Z(qvector<op_t> *__hidden this, qvector<op_t>::iterator first, qvector<op_t>::iterator last);
qvector<op_t>::iterator __cdecl ?erase_?$qvector_Vop_t____QEAAPEAVop_t__PEAV2__Z(qvector<op_t> *__hidden this, qvector<op_t>::iterator it);
qvector<rangeset_t>::iterator __cdecl ?erase_?$qvector_Vrangeset_t____QEAAPEAVrangeset_t__PEAV2_0_Z(qvector<rangeset_t> *__hidden this, qvector<rangeset_t>::iterator first, qvector<rangeset_t>::iterator last);
qvector<rangeset_t>::iterator __cdecl ?erase_?$qvector_Vrangeset_t____QEAAPEAVrangeset_t__PEAV2__Z(qvector<rangeset_t> *__hidden this, qvector<rangeset_t>::iterator it);
qvector<sync_source_t>::iterator __cdecl ?erase_?$qvector_Vsync_source_t____QEAAPEAVsync_source_t__PEAV2_0_Z(qvector<sync_source_t> *__hidden this, qvector<sync_source_t>::iterator first, qvector<sync_source_t>::iterator last);
qvector<sync_source_t>::iterator __cdecl ?erase_?$qvector_Vsync_source_t____QEAAPEAVsync_source_t__PEAV2__Z(qvector<sync_source_t> *__hidden this, qvector<sync_source_t>::iterator it);
qvector<tinfo_t>::iterator __cdecl ?erase_?$qvector_Vtinfo_t____QEAAPEAVtinfo_t__PEAV2_0_Z(qvector<tinfo_t> *__hidden this, qvector<tinfo_t>::iterator first, qvector<tinfo_t>::iterator last);
qvector<tinfo_t>::iterator __cdecl ?erase_?$qvector_Vtinfo_t____QEAAPEAVtinfo_t__PEAV2__Z(qvector<tinfo_t> *__hidden this, qvector<tinfo_t>::iterator it);
qvector<tryblk_t>::iterator __cdecl ?erase_?$qvector_Vtryblk_t____QEAAPEAVtryblk_t__PEAV2_0_Z(qvector<tryblk_t> *__hidden this, qvector<tryblk_t>::iterator first, qvector<tryblk_t>::iterator last);
qvector<tryblk_t>::iterator __cdecl ?erase_?$qvector_Vtryblk_t____QEAAPEAVtryblk_t__PEAV2__Z(qvector<tryblk_t> *__hidden this, qvector<tryblk_t>::iterator it);
qvector<twinline_t>::iterator __cdecl ?erase_?$qvector_Vtwinline_t____QEAAPEAVtwinline_t__PEAV2_0_Z(qvector<twinline_t> *__hidden this, qvector<twinline_t>::iterator first, qvector<twinline_t>::iterator last);
qvector<twinline_t>::iterator __cdecl ?erase_?$qvector_Vtwinline_t____QEAAPEAVtwinline_t__PEAV2__Z(qvector<twinline_t> *__hidden this, qvector<twinline_t>::iterator it);
qvector<valstr_t>::iterator __cdecl ?erase_?$qvector_Vvalstr_t____QEAAPEAVvalstr_t__PEAV2_0_Z(qvector<valstr_t> *__hidden this, qvector<valstr_t>::iterator first, qvector<valstr_t>::iterator last);
qvector<valstr_t>::iterator __cdecl ?erase_?$qvector_Vvalstr_t____QEAAPEAVvalstr_t__PEAV2__Z(qvector<valstr_t> *__hidden this, qvector<valstr_t>::iterator it);
qvector<movbpt_code_t>::iterator __cdecl ?erase_?$qvector_W4movbpt_code_t____QEAAPEAW4movbpt_code_t__PEAW42_0_Z(qvector<movbpt_code_t> *__hidden this, qvector<movbpt_code_t>::iterator first, qvector<movbpt_code_t>::iterator last);
qvector<movbpt_code_t>::iterator __cdecl ?erase_?$qvector_W4movbpt_code_t____QEAAPEAW4movbpt_code_t__PEAW42__Z(qvector<movbpt_code_t> *__hidden this, qvector<movbpt_code_t>::iterator it);
qvector<long long>::iterator __cdecl ?erase_?$qvector__J__QEAAPEA_JPEA_J0_Z(qvector<long long> *__hidden this, qvector<long long>::iterator first, qvector<long long>::iterator last);
qvector<long long>::iterator __cdecl ?erase_?$qvector__J__QEAAPEA_JPEA_J_Z(qvector<long long> *__hidden this, qvector<long long>::iterator it);
qvector<unsigned long long>::iterator __cdecl ?erase_?$qvector__K__QEAAPEA_KPEA_K0_Z(qvector<unsigned long long> *__hidden this, qvector<unsigned long long>::iterator first, qvector<unsigned long long>::iterator last);
qvector<unsigned long long>::iterator __cdecl ?erase_?$qvector__K__QEAAPEA_KPEA_K_Z(qvector<unsigned long long> *__hidden this, qvector<unsigned long long>::iterator it);
qvector<bool>::iterator __cdecl ?erase_?$qvector__N__QEAAPEA_NPEA_N0_Z(qvector<bool> *__hidden this, qvector<bool>::iterator first, qvector<bool>::iterator last);
qvector<bool>::iterator __cdecl ?erase_?$qvector__N__QEAAPEA_NPEA_N_Z(qvector<bool> *__hidden this, qvector<bool>::iterator it);
qvector<wchar_t>::iterator __cdecl ?erase_?$qvector__W__QEAAPEA_WPEA_W0_Z(qvector<wchar_t> *__hidden this, qvector<wchar_t>::iterator first, qvector<wchar_t>::iterator last);
qvector<wchar_t>::iterator __cdecl ?erase_?$qvector__W__QEAAPEA_WPEA_W_Z(qvector<wchar_t> *__hidden this, qvector<wchar_t>::iterator it);
bool __cdecl ?erase_bookmarks_t__SA_NAEBUlochist_entry_t__IPEAX_Z(const lochist_entry_t *e, uint32 index, void *ud);
const char *__cdecl ?errstr_dirtree_t__SAPEBDW4dterr_t___Z(dterr_t err);
bool __cdecl ?eval_cond_bpt_t__QEAA_N_KPEA_NPEBD_Z(bpt_t *__hidden this, ea_t ea, bool *fire, const char *bpt_type);
drc_t __cdecl ?eval_lowcnd_debugger_t__QEAA?AW4drc_t__H_KPEAV?$_qstring_D___Z(debugger_t *__hidden this, thid_t tid, ea_t ea, qstring *errbuf);
bool __cdecl ?evaluate_source_item_t__UEBA_NPEBVeval_ctx_t__PEAVidc_value_t__PEAV?$_qstring_D___Z(const source_item_t *__hidden this, const eval_ctx_t *ctx, idc_value_t *res, qstring *errbuf);
excinfo_t *__cdecl ?exc_debug_event_t__QEAAAEAUexcinfo_t__XZ(debug_event_t *__hidden this);
const excinfo_t *__cdecl ?exc_debug_event_t__QEBAAEBUexcinfo_t__XZ(const debug_event_t *__hidden this);
int __cdecl ?exec_refcnted_regex_t__QEAAHPEBD_KQEAUregmatch_t__H_Z(refcnted_regex_t *__hidden this, const char *string, size_t nmatch, regmatch_t pmatch[], int eflags);
int __cdecl ?execute_exec_request_t__UEAAHXZ(exec_request_t *__hidden this);
bool __cdecl ?exist_netnode__SA_NPEBD_Z(const char *_name);
bool __cdecl ?exists_gdl_graph_t__UEBA_NH_Z(const gdl_graph_t *__hidden this, int node);
bool __cdecl ?exists_mutable_graph_t__UEBA_NH_Z(const mutable_graph_t *__hidden this, int node);
int __cdecl ?exit_gdl_graph_t__UEBAHXZ(const gdl_graph_t *__hidden this);
int *__cdecl ?exit_code_debug_event_t__QEAAAEAHXZ(debug_event_t *__hidden this);
const int *__cdecl ?exit_code_debug_event_t__QEBAAEBHXZ(const debug_event_t *__hidden this);
drc_t __cdecl ?exit_process_debugger_t__QEAA?AW4drc_t__PEAV?$_qstring_D___Z(debugger_t *__hidden this, qstring *errbuf);
void __cdecl ?extend_range_t__QEAAX_K_Z(range_t *__hidden this, ea_t ea);
op_dtype_t __cdecl ?extend_dtype_jump_pattern_t__UEBAEAEBVop_t___Z(const jump_pattern_t *__hidden this, const op_t *op);
char *__cdecl ?extract_?$_qstring_D__QEAAPEADXZ(_qstring<char> *__hidden this);
unsigned __int8 *__cdecl ?extract_?$_qstring_E__QEAAPEAEXZ(_qstring<unsigned char> *__hidden this);
__int16 *__cdecl ?extract_?$_qstring__W__QEAAPEA_WXZ(_qstring<wchar_t> *__hidden this);
char *__cdecl ?extract_?$qvector_D__QEAAPEADXZ(qvector<char> *__hidden this);
unsigned __int8 *__cdecl ?extract_?$qvector_E__QEAAPEAEXZ(qvector<unsigned char> *__hidden this);
int *__cdecl ?extract_?$qvector_H__QEAAPEAHXZ(qvector<int> *__hidden this);
unsigned int *__cdecl ?extract_?$qvector_I__QEAAPEAIXZ(qvector<unsigned int> *__hidden this);
__int64 (__cdecl **__cdecl ?extract_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAPEAP6A_JPEAW4syntax_highlight_style__PEBD_ZXZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this))(syntax_highlight_style *, const char *);
bool (__cdecl **__cdecl ?extract_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAPEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZXZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this))(syntax_highlight_style *, const _qstring<char> *);
bpt_t **__cdecl ?extract_?$qvector_PEAUbpt_t____QEAAPEAPEAUbpt_t__XZ(qvector<bpt_t *> *__hidden this);
extlang_t **__cdecl ?extract_?$qvector_PEAUextlang_t____QEAAPEAPEAUextlang_t__XZ(qvector<extlang_t *> *__hidden this);
line_rendering_output_entry_t **__cdecl ?extract_?$qvector_PEAUline_rendering_output_entry_t____QEAAPEAPEAUline_rendering_output_entry_t__XZ(qvector<line_rendering_output_entry_t *> *__hidden this);
snapshot_t **__cdecl ?extract_?$qvector_PEAVsnapshot_t____QEAAPEAPEAVsnapshot_t__XZ(qvector<snapshot_t *> *__hidden this);
const char **__cdecl ?extract_?$qvector_PEBD__QEAAPEAPEBDXZ(qvector<const char *> *__hidden this);
const bpt_t **__cdecl ?extract_?$qvector_PEBUbpt_t____QEAAPEAPEBUbpt_t__XZ(qvector<const bpt_t *> *__hidden this);
const rangeset_t **__cdecl ?extract_?$qvector_PEBVrangeset_t____QEAAPEAPEBVrangeset_t__XZ(qvector<const rangeset_t *> *__hidden this);
const twinline_t **__cdecl ?extract_?$qvector_PEBVtwinline_t____QEAAPEAPEBVtwinline_t__XZ(qvector<const twinline_t *> *__hidden this);
argpart_t *__cdecl ?extract_?$qvector_Uargpart_t____QEAAPEAUargpart_t__XZ(qvector<argpart_t> *__hidden this);
bpt_t *__cdecl ?extract_?$qvector_Ubpt_t____QEAAPEAUbpt_t__XZ(qvector<bpt_t> *__hidden this);
bptaddrs_t *__cdecl ?extract_?$qvector_Ubptaddrs_t____QEAAPEAUbptaddrs_t__XZ(qvector<bptaddrs_t> *__hidden this);
call_stack_info_t *__cdecl ?extract_?$qvector_Ucall_stack_info_t____QEAAPEAUcall_stack_info_t__XZ(qvector<call_stack_info_t> *__hidden this);
catch_t *__cdecl ?extract_?$qvector_Ucatch_t____QEAAPEAUcatch_t__XZ(qvector<catch_t> *__hidden this);
cfgopt_set_t *__cdecl ?extract_?$qvector_Ucfgopt_set_t____QEAAPEAUcfgopt_set_t__XZ(qvector<cfgopt_set_t> *__hidden this);
channel_redir_t *__cdecl ?extract_?$qvector_Uchannel_redir_t____QEAAPEAUchannel_redir_t__XZ(qvector<channel_redir_t> *__hidden this);
cliopt_t *__cdecl ?extract_?$qvector_Ucliopt_t____QEAAPEAUcliopt_t__XZ(qvector<cliopt_t> *__hidden this);
compiled_binpat_t *__cdecl ?extract_?$qvector_Ucompiled_binpat_t____QEAAPEAUcompiled_binpat_t__XZ(qvector<compiled_binpat_t> *__hidden this);
debug_event_t *__cdecl ?extract_?$qvector_Udebug_event_t____QEAAPEAUdebug_event_t__XZ(qvector<debug_event_t> *__hidden this);
direntry_t *__cdecl ?extract_?$qvector_Udirentry_t____QEAAPEAUdirentry_t__XZ(qvector<direntry_t> *__hidden this);
dirtree_cursor_t *__cdecl ?extract_?$qvector_Udirtree_cursor_t____QEAAPEAUdirtree_cursor_t__XZ(qvector<dirtree_cursor_t> *__hidden this);
ea_name_t *__cdecl ?extract_?$qvector_Uea_name_t____QEAAPEAUea_name_t__XZ(qvector<ea_name_t> *__hidden this);
edge_t *__cdecl ?extract_?$qvector_Uedge_t____QEAAPEAUedge_t__XZ(qvector<edge_t> *__hidden this);
enum_member_t *__cdecl ?extract_?$qvector_Uenum_member_t____QEAAPEAUenum_member_t__XZ(qvector<enum_member_t> *__hidden this);
exception_info_t *__cdecl ?extract_?$qvector_Uexception_info_t____QEAAPEAUexception_info_t__XZ(qvector<exception_info_t> *__hidden this);
fixup_info_t *__cdecl ?extract_?$qvector_Ufixup_info_t____QEAAPEAUfixup_info_t__XZ(qvector<fixup_info_t> *__hidden this);
funcarg_t *__cdecl ?extract_?$qvector_Ufuncarg_t____QEAAPEAUfuncarg_t__XZ(qvector<funcarg_t> *__hidden this);
group_crinfo_t *__cdecl ?extract_?$qvector_Ugroup_crinfo_t____QEAAPEAUgroup_crinfo_t__XZ(qvector<group_crinfo_t> *__hidden this);
idc_global_t *__cdecl ?extract_?$qvector_Uidc_global_t____QEAAPEAUidc_global_t__XZ(qvector<idc_global_t> *__hidden this);
idp_desc_t *__cdecl ?extract_?$qvector_Uidp_desc_t____QEAAPEAUidp_desc_t__XZ(qvector<idp_desc_t> *__hidden this);
idp_name_t *__cdecl ?extract_?$qvector_Uidp_name_t____QEAAPEAUidp_name_t__XZ(qvector<idp_name_t> *__hidden this);
ioport_bit_t *__cdecl ?extract_?$qvector_Uioport_bit_t____QEAAPEAUioport_bit_t__XZ(qvector<ioport_bit_t> *__hidden this);
ioport_t *__cdecl ?extract_?$qvector_Uioport_t____QEAAPEAUioport_t__XZ(qvector<ioport_t> *__hidden this);
jvalue_t *__cdecl ?extract_?$qvector_Ujvalue_t____QEAAPEAUjvalue_t__XZ(qvector<jvalue_t> *__hidden this);
ida_syntax_highlighter_t::keywords_style_t *__cdecl ?extract_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAPEAUkeywords_style_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
kvp_t *__cdecl ?extract_?$qvector_Ukvp_t____QEAAPEAUkvp_t__XZ(qvector<kvp_t> *__hidden this);
lochist_entry_t *__cdecl ?extract_?$qvector_Ulochist_entry_t____QEAAPEAUlochist_entry_t__XZ(qvector<lochist_entry_t> *__hidden this);
lowcnd_t *__cdecl ?extract_?$qvector_Ulowcnd_t____QEAAPEAUlowcnd_t__XZ(qvector<lowcnd_t> *__hidden this);
memory_info_t *__cdecl ?extract_?$qvector_Umemory_info_t____QEAAPEAUmemory_info_t__XZ(qvector<memory_info_t> *__hidden this);
memreg_info_t *__cdecl ?extract_?$qvector_Umemreg_info_t____QEAAPEAUmemreg_info_t__XZ(qvector<memreg_info_t> *__hidden this);
modinfo_t *__cdecl ?extract_?$qvector_Umodinfo_t____QEAAPEAUmodinfo_t__XZ(qvector<modinfo_t> *__hidden this);
movbpt_info_t *__cdecl ?extract_?$qvector_Umovbpt_info_t____QEAAPEAUmovbpt_info_t__XZ(qvector<movbpt_info_t> *__hidden this);
ida_syntax_highlighter_t::multicmt_t *__cdecl ?extract_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAPEAUmulticmt_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ?extract_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAPEAUplain_char_ptr_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
point_t *__cdecl ?extract_?$qvector_Upoint_t____QEAAPEAUpoint_t__XZ(qvector<point_t> *__hidden this);
process_info_t *__cdecl ?extract_?$qvector_Uprocess_info_t____QEAAPEAUprocess_info_t__XZ(qvector<process_info_t> *__hidden this);
qbasic_block_t *__cdecl ?extract_?$qvector_Uqbasic_block_t____QEAAPEAUqbasic_block_t__XZ(qvector<qbasic_block_t> *__hidden this);
range_t *__cdecl ?extract_?$qvector_Urange_t____QEAAPEAUrange_t__XZ(qvector<range_t> *__hidden this);
rect_t *__cdecl ?extract_?$qvector_Urect_t____QEAAPEAUrect_t__XZ(qvector<rect_t> *__hidden this);
refinfo_desc_t *__cdecl ?extract_?$qvector_Urefinfo_desc_t____QEAAPEAUrefinfo_desc_t__XZ(qvector<refinfo_desc_t> *__hidden this);
reg_access_t *__cdecl ?extract_?$qvector_Ureg_access_t____QEAAPEAUreg_access_t__XZ(qvector<reg_access_t> *__hidden this);
reg_info_t *__cdecl ?extract_?$qvector_Ureg_info_t____QEAAPEAUreg_info_t__XZ(qvector<reg_info_t> *__hidden this);
register_info_t *__cdecl ?extract_?$qvector_Uregister_info_t____QEAAPEAUregister_info_t__XZ(qvector<register_info_t> *__hidden this);
regobj_t *__cdecl ?extract_?$qvector_Uregobj_t____QEAAPEAUregobj_t__XZ(qvector<regobj_t> *__hidden this);
regval_t *__cdecl ?extract_?$qvector_Uregval_t____QEAAPEAUregval_t__XZ(qvector<regval_t> *__hidden this);
row_info_t *__cdecl ?extract_?$qvector_Urow_info_t____QEAAPEAUrow_info_t__XZ(qvector<row_info_t> *__hidden this);
scattered_segm_t *__cdecl ?extract_?$qvector_Uscattered_segm_t____QEAAPEAUscattered_segm_t__XZ(qvector<scattered_segm_t> *__hidden this);
segm_move_info_t *__cdecl ?extract_?$qvector_Usegm_move_info_t____QEAAPEAUsegm_move_info_t__XZ(qvector<segm_move_info_t> *__hidden this);
selection_item_t *__cdecl ?extract_?$qvector_Uselection_item_t____QEAAPEAUselection_item_t__XZ(qvector<selection_item_t> *__hidden this);
simd_info_t *__cdecl ?extract_?$qvector_Usimd_info_t____QEAAPEAUsimd_info_t__XZ(qvector<simd_info_t> *__hidden this);
simpleline_t *__cdecl ?extract_?$qvector_Usimpleline_t____QEAAPEAUsimpleline_t__XZ(qvector<simpleline_t> *__hidden this);
stkpnt_t *__cdecl ?extract_?$qvector_Ustkpnt_t____QEAAPEAUstkpnt_t__XZ(qvector<stkpnt_t> *__hidden this);
tev_info_reg_t *__cdecl ?extract_?$qvector_Utev_info_reg_t____QEAAPEAUtev_info_reg_t__XZ(qvector<tev_info_reg_t> *__hidden this);
tev_info_t *__cdecl ?extract_?$qvector_Utev_info_t____QEAAPEAUtev_info_t__XZ(qvector<tev_info_t> *__hidden this);
tev_reg_value_t *__cdecl ?extract_?$qvector_Utev_reg_value_t____QEAAPEAUtev_reg_value_t__XZ(qvector<tev_reg_value_t> *__hidden this);
thread_name_t *__cdecl ?extract_?$qvector_Uthread_name_t____QEAAPEAUthread_name_t__XZ(qvector<thread_name_t> *__hidden this);
token_t *__cdecl ?extract_?$qvector_Utoken_t____QEAAPEAUtoken_t__XZ(qvector<token_t> *__hidden this);
type_attr_t *__cdecl ?extract_?$qvector_Utype_attr_t____QEAAPEAUtype_attr_t__XZ(qvector<type_attr_t> *__hidden this);
udt_member_t *__cdecl ?extract_?$qvector_Uudt_member_t____QEAAPEAUudt_member_t__XZ(qvector<udt_member_t> *__hidden this);
update_bpt_info_t *__cdecl ?extract_?$qvector_Uupdate_bpt_info_t____QEAAPEAUupdate_bpt_info_t__XZ(qvector<update_bpt_info_t> *__hidden this);
xreflist_entry_t *__cdecl ?extract_?$qvector_Uxreflist_entry_t____QEAAPEAUxreflist_entry_t__XZ(qvector<xreflist_entry_t> *__hidden this);
_qstring<char> *__cdecl ?extract_?$qvector_V?$_qstring_D____QEAAPEAV?$_qstring_D__XZ(qvector<_qstring<char>> *__hidden this);
_qstring<unsigned char> *__cdecl ?extract_?$qvector_V?$_qstring_E____QEAAPEAV?$_qstring_E__XZ(qvector<_qstring<unsigned char>> *__hidden this);
_qstring<wchar_t> *__cdecl ?extract_?$qvector_V?$_qstring__W____QEAAPEAV?$_qstring__W__XZ(qvector<_qstring<wchar_t>> *__hidden this);
qrefcnt_t<source_item_t> *__cdecl ?extract_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAPEAV?$qrefcnt_t_Vsource_item_t____XZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
qvector<int> *__cdecl ?extract_?$qvector_V?$qvector_H____QEAAPEAV?$qvector_H__XZ(qvector<qvector<int>> *__hidden this);
qvector<const char *> *__cdecl ?extract_?$qvector_V?$qvector_PEBD____QEAAPEAV?$qvector_PEBD__XZ(qvector<qvector<const char *>> *__hidden this);
qvector<const twinline_t *> *__cdecl ?extract_?$qvector_V?$qvector_PEBVtwinline_t______QEAAPEAV?$qvector_PEBVtwinline_t____XZ(qvector<qvector<const twinline_t *>> *__hidden this);
qvector<long long> *__cdecl ?extract_?$qvector_V?$qvector__J____QEAAPEAV?$qvector__J__XZ(qvector<qvector<long long>> *__hidden this);
argloc_t *__cdecl ?extract_?$qvector_Vargloc_t____QEAAPEAVargloc_t__XZ(qvector<argloc_t> *__hidden this);
intmap_t *__cdecl ?extract_?$qvector_Vintmap_t____QEAAPEAVintmap_t__XZ(qvector<intmap_t> *__hidden this);
node_set_t *__cdecl ?extract_?$qvector_Vnode_set_t____QEAAPEAVnode_set_t__XZ(qvector<node_set_t> *__hidden this);
op_t *__cdecl ?extract_?$qvector_Vop_t____QEAAPEAVop_t__XZ(qvector<op_t> *__hidden this);
rangeset_t *__cdecl ?extract_?$qvector_Vrangeset_t____QEAAPEAVrangeset_t__XZ(qvector<rangeset_t> *__hidden this);
sync_source_t *__cdecl ?extract_?$qvector_Vsync_source_t____QEAAPEAVsync_source_t__XZ(qvector<sync_source_t> *__hidden this);
tinfo_t *__cdecl ?extract_?$qvector_Vtinfo_t____QEAAPEAVtinfo_t__XZ(qvector<tinfo_t> *__hidden this);
tryblk_t *__cdecl ?extract_?$qvector_Vtryblk_t____QEAAPEAVtryblk_t__XZ(qvector<tryblk_t> *__hidden this);
twinline_t *__cdecl ?extract_?$qvector_Vtwinline_t____QEAAPEAVtwinline_t__XZ(qvector<twinline_t> *__hidden this);
valstr_t *__cdecl ?extract_?$qvector_Vvalstr_t____QEAAPEAVvalstr_t__XZ(qvector<valstr_t> *__hidden this);
movbpt_code_t *__cdecl ?extract_?$qvector_W4movbpt_code_t____QEAAPEAW4movbpt_code_t__XZ(qvector<movbpt_code_t> *__hidden this);
__int64 *__cdecl ?extract_?$qvector__J__QEAAPEA_JXZ(qvector<long long> *__hidden this);
unsigned __int64 *__cdecl ?extract_?$qvector__K__QEAAPEA_KXZ(qvector<unsigned long long> *__hidden this);
bool *__cdecl ?extract_?$qvector__N__QEAAPEA_NXZ(qvector<bool> *__hidden this);
__int16 *__cdecl ?extract_?$qvector__W__QEAAPEA_WXZ(qvector<wchar_t> *__hidden this);
bool __cdecl ?extract_bitrange_t__QEBA_NPEAVbytevec_t__PEBX_K_N_Z(const bitrange_t *__hidden this, bytevec_t *dst, const void *src, size_t src_size, bool is_mf);
bool __cdecl ?extract_bitrange_t__QEBA_NPEAX_KPEBX1_N_Z(const bitrange_t *__hidden this, void *dst, size_t dst_size, const void *src, size_t src_size, bool is_mf);
void __cdecl ?extract_node_set_t__QEBAXAEAV?$qvector_H___Z(const node_set_t *__hidden this, intvec_t *out);
ssize_t __cdecl ?extract_address_processor_t__SA_JPEA_K_KPEBD1_Z(ea_t *out_ea, ea_t screen_ea, const char *string, size_t x);
jarr_t *__cdecl ?extract_arr_jvalue_t__QEAAPEAUjarr_t__XZ(jvalue_t *__hidden this);
jobj_t *__cdecl ?extract_obj_jvalue_t__QEAAPEAUjobj_t__XZ(jvalue_t *__hidden this);
fpvalue_error_t __cdecl ?fadd_fpvalue_t__QEAA?AW4fpvalue_error_t__AEBU1__Z(fpvalue_t *__hidden this, const fpvalue_t *y);
bool __cdecl ?fake_memory_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
fpvalue_error_t __cdecl ?fdiv_fpvalue_t__QEAA?AW4fpvalue_error_t__AEBU1__Z(fpvalue_t *__hidden this, const fpvalue_t *y);
_qstring<char> *__cdecl ?fill_?$_qstring_D__QEAAAEAV1_D_K_Z(_qstring<char> *__hidden this, char c, size_t len);
_qstring<char> *__cdecl ?fill_?$_qstring_D__QEAAAEAV1__KD0_Z(_qstring<char> *__hidden this, size_t pos, char c, size_t len);
_qstring<unsigned char> *__cdecl ?fill_?$_qstring_E__QEAAAEAV1_E_K_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 c, size_t len);
_qstring<unsigned char> *__cdecl ?fill_?$_qstring_E__QEAAAEAV1__KE0_Z(_qstring<unsigned char> *__hidden this, size_t pos, unsigned __int8 c, size_t len);
_qstring<wchar_t> *__cdecl ?fill_?$_qstring__W__QEAAAEAV1__K_W0_Z(_qstring<wchar_t> *__hidden this, size_t pos, __int16 c, size_t len);
_qstring<wchar_t> *__cdecl ?fill_?$_qstring__W__QEAAAEAV1__W_K_Z(_qstring<wchar_t> *__hidden this, __int16 c, size_t len);
char *__cdecl ?find_?$_Char_traits_DH_std__SAPEBDPEBD_KAEBD_Z(char *_First, size_t _Count, char *_Ch);
unsigned __int16 *__cdecl ?find_?$_Char_traits_GG_std__SAPEBGPEBG_KAEBG_Z(unsigned __int16 *_First, size_t _Count, unsigned __int16 *_Ch);
__int16 *__cdecl ?find_?$_Char_traits__SG_std__SAPEB_SPEB_S_KAEB_S_Z(__int16 *_First, size_t _Count, __int16 *_Ch);
__int32 *__cdecl ?find_?$_Char_traits__UI_std__SAPEB_UPEB_U_KAEB_U_Z(__int32 *_First, size_t _Count, __int32 *_Ch);
__int16 *__cdecl ?find_?$_Char_traits__WG_std__SAPEB_WPEB_W_KAEB_W_Z(__int16 *_First, size_t _Count, __int16 *_Ch);
char *__cdecl ?find_?$_Narrow_char_traits_DH_std__SAPEBDQEBD_KAEBD_Z(char *const _First, const size_t _Count, char *_Ch);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::iterator __cdecl ?find_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_AEBH_Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator __cdecl ?find_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_AEBH_Z(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::iterator __cdecl ?find_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_AEBV?$_qstring_D___Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator __cdecl ?find_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_AEBV?$_qstring_D___Z(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::iterator __cdecl ?find_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_AEB_K_Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator __cdecl ?find_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_AEB_K_Z(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::iterator __cdecl ?find_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_AEB_K_Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator __cdecl ?find_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_AEB_K_Z(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::iterator __cdecl ?find_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_AEBH_Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type *_Keyval);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator __cdecl ?find_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_AEBH_Z(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type *_Keyval);
unsigned __int16 *__cdecl ?find_?$_WChar_traits_G_std__SAPEBGPEBG_KAEBG_Z(unsigned __int16 *_First, const size_t _Count, unsigned __int16 *_Ch);
__int16 *__cdecl ?find_?$_WChar_traits__S_std__SAPEB_SPEB_S_KAEB_S_Z(__int16 *_First, const size_t _Count, __int16 *_Ch);
__int16 *__cdecl ?find_?$_WChar_traits__W_std__SAPEB_WPEB_W_KAEB_W_Z(__int16 *_First, const size_t _Count, __int16 *_Ch);
size_t __cdecl ?find_?$_qstring_D__QEBA_KAEBV1__K_Z(const _qstring<char> *__hidden this, const _qstring<char> *str, size_t pos);
size_t __cdecl ?find_?$_qstring_D__QEBA_KD_K_Z(const _qstring<char> *__hidden this, char c, size_t pos);
size_t __cdecl ?find_?$_qstring_D__QEBA_KPEBD_K_Z(const _qstring<char> *__hidden this, char *str, size_t pos);
size_t __cdecl ?find_?$_qstring_E__QEBA_KAEBV1__K_Z(const _qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *str, size_t pos);
size_t __cdecl ?find_?$_qstring_E__QEBA_KE_K_Z(const _qstring<unsigned char> *__hidden this, unsigned __int8 c, size_t pos);
size_t __cdecl ?find_?$_qstring_E__QEBA_KPEBE_K_Z(const _qstring<unsigned char> *__hidden this, unsigned __int8 *str, size_t pos);
size_t __cdecl ?find_?$_qstring__W__QEBA_KAEBV1__K_Z(const _qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *str, size_t pos);
size_t __cdecl ?find_?$_qstring__W__QEBA_KPEB_W_K_Z(const _qstring<wchar_t> *__hidden this, __int16 *str, size_t pos);
size_t __cdecl ?find_?$_qstring__W__QEBA_K_W_K_Z(const _qstring<wchar_t> *__hidden this, __int16 c, size_t pos);
std::basic_string<char>::size_type __cdecl ?find_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KD_K_Z(const std::basic_string<char> *__hidden this, char _Ch, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K1_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Count);
std::basic_string<char>::size_type __cdecl ?find_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K1_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t>::size_type __cdecl ?find_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_K_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 _Ch, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K1_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t>::size_type __cdecl ?find_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_K_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 _Ch, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K1_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t>::size_type __cdecl ?find_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_K_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 _Ch, const std::basic_string<wchar_t>::size_type _Off);
qvector<char>::iterator __cdecl ?find_?$qvector_D__QEAAPEADAEBD_Z(qvector<char> *__hidden this, char *x);
qvector<char>::const_iterator __cdecl ?find_?$qvector_D__QEBAPEBDAEBD_Z(const qvector<char> *__hidden this, char *x);
qvector<unsigned char>::iterator __cdecl ?find_?$qvector_E__QEAAPEAEAEBE_Z(qvector<unsigned char> *__hidden this, unsigned __int8 *x);
qvector<unsigned char>::const_iterator __cdecl ?find_?$qvector_E__QEBAPEBEAEBE_Z(const qvector<unsigned char> *__hidden this, unsigned __int8 *x);
qvector<int>::iterator __cdecl ?find_?$qvector_H__QEAAPEAHAEBH_Z(qvector<int> *__hidden this, int *x);
qvector<int>::const_iterator __cdecl ?find_?$qvector_H__QEBAPEBHAEBH_Z(const qvector<int> *__hidden this, int *x);
qvector<unsigned int>::iterator __cdecl ?find_?$qvector_I__QEAAPEAIAEBI_Z(qvector<unsigned int> *__hidden this, unsigned int *x);
qvector<unsigned int>::const_iterator __cdecl ?find_?$qvector_I__QEBAPEBIAEBI_Z(const qvector<unsigned int> *__hidden this, unsigned int *x);
qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator __cdecl ?find_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAPEAP6A_JPEAW4syntax_highlight_style__PEBD_ZAEBQ6A_J01_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
qvector<long long (*)(syntax_highlight_style *, const char *)>::const_iterator __cdecl ?find_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBAPEBQ6A_JPEAW4syntax_highlight_style__PEBD_ZAEBQ6A_J01_Z_Z(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator __cdecl ?find_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAPEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZAEBQ6A_N01_Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::const_iterator __cdecl ?find_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBAPEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZAEBQ6A_N01_Z_Z(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
qvector<bpt_t *>::iterator __cdecl ?find_?$qvector_PEAUbpt_t____QEAAPEAPEAUbpt_t__AEBQEAU2__Z(qvector<bpt_t *> *__hidden this, bpt_t **x);
qvector<bpt_t *>::const_iterator __cdecl ?find_?$qvector_PEAUbpt_t____QEBAPEBQEAUbpt_t__AEBQEAU2__Z(const qvector<bpt_t *> *__hidden this, bpt_t **x);
qvector<extlang_t *>::iterator __cdecl ?find_?$qvector_PEAUextlang_t____QEAAPEAPEAUextlang_t__AEBQEAU2__Z(qvector<extlang_t *> *__hidden this, extlang_t **x);
qvector<extlang_t *>::const_iterator __cdecl ?find_?$qvector_PEAUextlang_t____QEBAPEBQEAUextlang_t__AEBQEAU2__Z(const qvector<extlang_t *> *__hidden this, extlang_t **x);
qvector<line_rendering_output_entry_t *>::iterator __cdecl ?find_?$qvector_PEAUline_rendering_output_entry_t____QEAAPEAPEAUline_rendering_output_entry_t__AEBQEAU2__Z(qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
qvector<line_rendering_output_entry_t *>::const_iterator __cdecl ?find_?$qvector_PEAUline_rendering_output_entry_t____QEBAPEBQEAUline_rendering_output_entry_t__AEBQEAU2__Z(const qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
qvector<snapshot_t *>::iterator __cdecl ?find_?$qvector_PEAVsnapshot_t____QEAAPEAPEAVsnapshot_t__AEBQEAV2__Z(qvector<snapshot_t *> *__hidden this, snapshot_t **x);
qvector<snapshot_t *>::const_iterator __cdecl ?find_?$qvector_PEAVsnapshot_t____QEBAPEBQEAVsnapshot_t__AEBQEAV2__Z(const qvector<snapshot_t *> *__hidden this, snapshot_t **x);
qvector<const char *>::iterator __cdecl ?find_?$qvector_PEBD__QEAAPEAPEBDAEBQEBD_Z(qvector<const char *> *__hidden this, const char **x);
qvector<const char *>::const_iterator __cdecl ?find_?$qvector_PEBD__QEBAPEBQEBDAEBQEBD_Z(const qvector<const char *> *__hidden this, const char **x);
qvector<const bpt_t *>::iterator __cdecl ?find_?$qvector_PEBUbpt_t____QEAAPEAPEBUbpt_t__AEBQEBU2__Z(qvector<const bpt_t *> *__hidden this, const bpt_t **x);
qvector<const bpt_t *>::const_iterator __cdecl ?find_?$qvector_PEBUbpt_t____QEBAPEBQEBUbpt_t__AEBQEBU2__Z(const qvector<const bpt_t *> *__hidden this, const bpt_t **x);
qvector<const rangeset_t *>::iterator __cdecl ?find_?$qvector_PEBVrangeset_t____QEAAPEAPEBVrangeset_t__AEBQEBV2__Z(qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
qvector<const rangeset_t *>::const_iterator __cdecl ?find_?$qvector_PEBVrangeset_t____QEBAPEBQEBVrangeset_t__AEBQEBV2__Z(const qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
qvector<const twinline_t *>::iterator __cdecl ?find_?$qvector_PEBVtwinline_t____QEAAPEAPEBVtwinline_t__AEBQEBV2__Z(qvector<const twinline_t *> *__hidden this, const twinline_t **x);
qvector<const twinline_t *>::const_iterator __cdecl ?find_?$qvector_PEBVtwinline_t____QEBAPEBQEBVtwinline_t__AEBQEBV2__Z(const qvector<const twinline_t *> *__hidden this, const twinline_t **x);
qvector<argpart_t>::iterator __cdecl ?find_?$qvector_Uargpart_t____QEAAPEAUargpart_t__AEBU2__Z(qvector<argpart_t> *__hidden this, argpart_t *x);
qvector<argpart_t>::const_iterator __cdecl ?find_?$qvector_Uargpart_t____QEBAPEBUargpart_t__AEBU2__Z(const qvector<argpart_t> *__hidden this, argpart_t *x);
qvector<bpt_t>::iterator __cdecl ?find_?$qvector_Ubpt_t____QEAAPEAUbpt_t__AEBU2__Z(qvector<bpt_t> *__hidden this, bpt_t *x);
qvector<bpt_t>::const_iterator __cdecl ?find_?$qvector_Ubpt_t____QEBAPEBUbpt_t__AEBU2__Z(const qvector<bpt_t> *__hidden this, bpt_t *x);
qvector<bptaddrs_t>::iterator __cdecl ?find_?$qvector_Ubptaddrs_t____QEAAPEAUbptaddrs_t__AEBU2__Z(qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
qvector<bptaddrs_t>::const_iterator __cdecl ?find_?$qvector_Ubptaddrs_t____QEBAPEBUbptaddrs_t__AEBU2__Z(const qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
qvector<call_stack_info_t>::iterator __cdecl ?find_?$qvector_Ucall_stack_info_t____QEAAPEAUcall_stack_info_t__AEBU2__Z(qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
qvector<call_stack_info_t>::const_iterator __cdecl ?find_?$qvector_Ucall_stack_info_t____QEBAPEBUcall_stack_info_t__AEBU2__Z(const qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
qvector<catch_t>::iterator __cdecl ?find_?$qvector_Ucatch_t____QEAAPEAUcatch_t__AEBU2__Z(qvector<catch_t> *__hidden this, catch_t *x);
qvector<catch_t>::const_iterator __cdecl ?find_?$qvector_Ucatch_t____QEBAPEBUcatch_t__AEBU2__Z(const qvector<catch_t> *__hidden this, catch_t *x);
qvector<cfgopt_set_t>::iterator __cdecl ?find_?$qvector_Ucfgopt_set_t____QEAAPEAUcfgopt_set_t__AEBU2__Z(qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
qvector<cfgopt_set_t>::const_iterator __cdecl ?find_?$qvector_Ucfgopt_set_t____QEBAPEBUcfgopt_set_t__AEBU2__Z(const qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
qvector<channel_redir_t>::iterator __cdecl ?find_?$qvector_Uchannel_redir_t____QEAAPEAUchannel_redir_t__AEBU2__Z(qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
qvector<channel_redir_t>::const_iterator __cdecl ?find_?$qvector_Uchannel_redir_t____QEBAPEBUchannel_redir_t__AEBU2__Z(const qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
qvector<cliopt_t>::iterator __cdecl ?find_?$qvector_Ucliopt_t____QEAAPEAUcliopt_t__AEBU2__Z(qvector<cliopt_t> *__hidden this, cliopt_t *x);
qvector<cliopt_t>::const_iterator __cdecl ?find_?$qvector_Ucliopt_t____QEBAPEBUcliopt_t__AEBU2__Z(const qvector<cliopt_t> *__hidden this, cliopt_t *x);
qvector<compiled_binpat_t>::iterator __cdecl ?find_?$qvector_Ucompiled_binpat_t____QEAAPEAUcompiled_binpat_t__AEBU2__Z(qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
qvector<compiled_binpat_t>::const_iterator __cdecl ?find_?$qvector_Ucompiled_binpat_t____QEBAPEBUcompiled_binpat_t__AEBU2__Z(const qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
qvector<debug_event_t>::iterator __cdecl ?find_?$qvector_Udebug_event_t____QEAAPEAUdebug_event_t__AEBU2__Z(qvector<debug_event_t> *__hidden this, debug_event_t *x);
qvector<debug_event_t>::const_iterator __cdecl ?find_?$qvector_Udebug_event_t____QEBAPEBUdebug_event_t__AEBU2__Z(const qvector<debug_event_t> *__hidden this, debug_event_t *x);
qvector<direntry_t>::iterator __cdecl ?find_?$qvector_Udirentry_t____QEAAPEAUdirentry_t__AEBU2__Z(qvector<direntry_t> *__hidden this, direntry_t *x);
qvector<direntry_t>::const_iterator __cdecl ?find_?$qvector_Udirentry_t____QEBAPEBUdirentry_t__AEBU2__Z(const qvector<direntry_t> *__hidden this, direntry_t *x);
qvector<dirtree_cursor_t>::iterator __cdecl ?find_?$qvector_Udirtree_cursor_t____QEAAPEAUdirtree_cursor_t__AEBU2__Z(qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
qvector<dirtree_cursor_t>::const_iterator __cdecl ?find_?$qvector_Udirtree_cursor_t____QEBAPEBUdirtree_cursor_t__AEBU2__Z(const qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
qvector<ea_name_t>::iterator __cdecl ?find_?$qvector_Uea_name_t____QEAAPEAUea_name_t__AEBU2__Z(qvector<ea_name_t> *__hidden this, ea_name_t *x);
qvector<ea_name_t>::const_iterator __cdecl ?find_?$qvector_Uea_name_t____QEBAPEBUea_name_t__AEBU2__Z(const qvector<ea_name_t> *__hidden this, ea_name_t *x);
qvector<edge_t>::iterator __cdecl ?find_?$qvector_Uedge_t____QEAAPEAUedge_t__AEBU2__Z(qvector<edge_t> *__hidden this, edge_t *x);
qvector<edge_t>::const_iterator __cdecl ?find_?$qvector_Uedge_t____QEBAPEBUedge_t__AEBU2__Z(const qvector<edge_t> *__hidden this, edge_t *x);
qvector<enum_member_t>::iterator __cdecl ?find_?$qvector_Uenum_member_t____QEAAPEAUenum_member_t__AEBU2__Z(qvector<enum_member_t> *__hidden this, enum_member_t *x);
qvector<enum_member_t>::const_iterator __cdecl ?find_?$qvector_Uenum_member_t____QEBAPEBUenum_member_t__AEBU2__Z(const qvector<enum_member_t> *__hidden this, enum_member_t *x);
qvector<exception_info_t>::iterator __cdecl ?find_?$qvector_Uexception_info_t____QEAAPEAUexception_info_t__AEBU2__Z(qvector<exception_info_t> *__hidden this, exception_info_t *x);
qvector<exception_info_t>::const_iterator __cdecl ?find_?$qvector_Uexception_info_t____QEBAPEBUexception_info_t__AEBU2__Z(const qvector<exception_info_t> *__hidden this, exception_info_t *x);
qvector<fixup_info_t>::iterator __cdecl ?find_?$qvector_Ufixup_info_t____QEAAPEAUfixup_info_t__AEBU2__Z(qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
qvector<fixup_info_t>::const_iterator __cdecl ?find_?$qvector_Ufixup_info_t____QEBAPEBUfixup_info_t__AEBU2__Z(const qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
qvector<funcarg_t>::iterator __cdecl ?find_?$qvector_Ufuncarg_t____QEAAPEAUfuncarg_t__AEBU2__Z(qvector<funcarg_t> *__hidden this, funcarg_t *x);
qvector<funcarg_t>::const_iterator __cdecl ?find_?$qvector_Ufuncarg_t____QEBAPEBUfuncarg_t__AEBU2__Z(const qvector<funcarg_t> *__hidden this, funcarg_t *x);
qvector<group_crinfo_t>::iterator __cdecl ?find_?$qvector_Ugroup_crinfo_t____QEAAPEAUgroup_crinfo_t__AEBU2__Z(qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
qvector<group_crinfo_t>::const_iterator __cdecl ?find_?$qvector_Ugroup_crinfo_t____QEBAPEBUgroup_crinfo_t__AEBU2__Z(const qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
qvector<idc_global_t>::iterator __cdecl ?find_?$qvector_Uidc_global_t____QEAAPEAUidc_global_t__AEBU2__Z(qvector<idc_global_t> *__hidden this, idc_global_t *x);
qvector<idc_global_t>::const_iterator __cdecl ?find_?$qvector_Uidc_global_t____QEBAPEBUidc_global_t__AEBU2__Z(const qvector<idc_global_t> *__hidden this, idc_global_t *x);
qvector<idp_desc_t>::iterator __cdecl ?find_?$qvector_Uidp_desc_t____QEAAPEAUidp_desc_t__AEBU2__Z(qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
qvector<idp_desc_t>::const_iterator __cdecl ?find_?$qvector_Uidp_desc_t____QEBAPEBUidp_desc_t__AEBU2__Z(const qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
qvector<idp_name_t>::iterator __cdecl ?find_?$qvector_Uidp_name_t____QEAAPEAUidp_name_t__AEBU2__Z(qvector<idp_name_t> *__hidden this, idp_name_t *x);
qvector<idp_name_t>::const_iterator __cdecl ?find_?$qvector_Uidp_name_t____QEBAPEBUidp_name_t__AEBU2__Z(const qvector<idp_name_t> *__hidden this, idp_name_t *x);
qvector<ioport_bit_t>::iterator __cdecl ?find_?$qvector_Uioport_bit_t____QEAAPEAUioport_bit_t__AEBU2__Z(qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
qvector<ioport_bit_t>::const_iterator __cdecl ?find_?$qvector_Uioport_bit_t____QEBAPEBUioport_bit_t__AEBU2__Z(const qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
qvector<ioport_t>::iterator __cdecl ?find_?$qvector_Uioport_t____QEAAPEAUioport_t__AEBU2__Z(qvector<ioport_t> *__hidden this, ioport_t *x);
qvector<ioport_t>::const_iterator __cdecl ?find_?$qvector_Uioport_t____QEBAPEBUioport_t__AEBU2__Z(const qvector<ioport_t> *__hidden this, ioport_t *x);
qvector<jvalue_t>::iterator __cdecl ?find_?$qvector_Ujvalue_t____QEAAPEAUjvalue_t__AEBU2__Z(qvector<jvalue_t> *__hidden this, jvalue_t *x);
qvector<jvalue_t>::const_iterator __cdecl ?find_?$qvector_Ujvalue_t____QEBAPEBUjvalue_t__AEBU2__Z(const qvector<jvalue_t> *__hidden this, jvalue_t *x);
qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator __cdecl ?find_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAPEAUkeywords_style_t_ida_syntax_highlighter_t__AEBU23__Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
qvector<ida_syntax_highlighter_t::keywords_style_t>::const_iterator __cdecl ?find_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBAPEBUkeywords_style_t_ida_syntax_highlighter_t__AEBU23__Z(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
qvector<kvp_t>::iterator __cdecl ?find_?$qvector_Ukvp_t____QEAAPEAUkvp_t__AEBU2__Z(qvector<kvp_t> *__hidden this, kvp_t *x);
qvector<kvp_t>::const_iterator __cdecl ?find_?$qvector_Ukvp_t____QEBAPEBUkvp_t__AEBU2__Z(const qvector<kvp_t> *__hidden this, kvp_t *x);
qvector<lochist_entry_t>::iterator __cdecl ?find_?$qvector_Ulochist_entry_t____QEAAPEAUlochist_entry_t__AEBU2__Z(qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
qvector<lochist_entry_t>::const_iterator __cdecl ?find_?$qvector_Ulochist_entry_t____QEBAPEBUlochist_entry_t__AEBU2__Z(const qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
qvector<lowcnd_t>::iterator __cdecl ?find_?$qvector_Ulowcnd_t____QEAAPEAUlowcnd_t__AEBU2__Z(qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
qvector<lowcnd_t>::const_iterator __cdecl ?find_?$qvector_Ulowcnd_t____QEBAPEBUlowcnd_t__AEBU2__Z(const qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
qvector<memory_info_t>::iterator __cdecl ?find_?$qvector_Umemory_info_t____QEAAPEAUmemory_info_t__AEBU2__Z(qvector<memory_info_t> *__hidden this, memory_info_t *x);
qvector<memory_info_t>::const_iterator __cdecl ?find_?$qvector_Umemory_info_t____QEBAPEBUmemory_info_t__AEBU2__Z(const qvector<memory_info_t> *__hidden this, memory_info_t *x);
qvector<memreg_info_t>::iterator __cdecl ?find_?$qvector_Umemreg_info_t____QEAAPEAUmemreg_info_t__AEBU2__Z(qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
qvector<memreg_info_t>::const_iterator __cdecl ?find_?$qvector_Umemreg_info_t____QEBAPEBUmemreg_info_t__AEBU2__Z(const qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
qvector<modinfo_t>::iterator __cdecl ?find_?$qvector_Umodinfo_t____QEAAPEAUmodinfo_t__AEBU2__Z(qvector<modinfo_t> *__hidden this, modinfo_t *x);
qvector<modinfo_t>::const_iterator __cdecl ?find_?$qvector_Umodinfo_t____QEBAPEBUmodinfo_t__AEBU2__Z(const qvector<modinfo_t> *__hidden this, modinfo_t *x);
qvector<movbpt_info_t>::iterator __cdecl ?find_?$qvector_Umovbpt_info_t____QEAAPEAUmovbpt_info_t__AEBU2__Z(qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
qvector<movbpt_info_t>::const_iterator __cdecl ?find_?$qvector_Umovbpt_info_t____QEBAPEBUmovbpt_info_t__AEBU2__Z(const qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
qvector<ida_syntax_highlighter_t::multicmt_t>::iterator __cdecl ?find_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAPEAUmulticmt_t_ida_syntax_highlighter_t__AEBU23__Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
qvector<ida_syntax_highlighter_t::multicmt_t>::const_iterator __cdecl ?find_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBAPEBUmulticmt_t_ida_syntax_highlighter_t__AEBU23__Z(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator __cdecl ?find_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAPEAUplain_char_ptr_t_ida_syntax_highlighter_t__AEBU23__Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::const_iterator __cdecl ?find_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBAPEBUplain_char_ptr_t_ida_syntax_highlighter_t__AEBU23__Z(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
qvector<point_t>::iterator __cdecl ?find_?$qvector_Upoint_t____QEAAPEAUpoint_t__AEBU2__Z(qvector<point_t> *__hidden this, point_t *x);
qvector<point_t>::const_iterator __cdecl ?find_?$qvector_Upoint_t____QEBAPEBUpoint_t__AEBU2__Z(const qvector<point_t> *__hidden this, point_t *x);
qvector<process_info_t>::iterator __cdecl ?find_?$qvector_Uprocess_info_t____QEAAPEAUprocess_info_t__AEBU2__Z(qvector<process_info_t> *__hidden this, process_info_t *x);
qvector<process_info_t>::const_iterator __cdecl ?find_?$qvector_Uprocess_info_t____QEBAPEBUprocess_info_t__AEBU2__Z(const qvector<process_info_t> *__hidden this, process_info_t *x);
qvector<qbasic_block_t>::iterator __cdecl ?find_?$qvector_Uqbasic_block_t____QEAAPEAUqbasic_block_t__AEBU2__Z(qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
qvector<qbasic_block_t>::const_iterator __cdecl ?find_?$qvector_Uqbasic_block_t____QEBAPEBUqbasic_block_t__AEBU2__Z(const qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
qvector<range_t>::iterator __cdecl ?find_?$qvector_Urange_t____QEAAPEAUrange_t__AEBU2__Z(qvector<range_t> *__hidden this, range_t *x);
qvector<range_t>::const_iterator __cdecl ?find_?$qvector_Urange_t____QEBAPEBUrange_t__AEBU2__Z(const qvector<range_t> *__hidden this, range_t *x);
qvector<rect_t>::iterator __cdecl ?find_?$qvector_Urect_t____QEAAPEAUrect_t__AEBU2__Z(qvector<rect_t> *__hidden this, rect_t *x);
qvector<rect_t>::const_iterator __cdecl ?find_?$qvector_Urect_t____QEBAPEBUrect_t__AEBU2__Z(const qvector<rect_t> *__hidden this, rect_t *x);
qvector<refinfo_desc_t>::iterator __cdecl ?find_?$qvector_Urefinfo_desc_t____QEAAPEAUrefinfo_desc_t__AEBU2__Z(qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
qvector<refinfo_desc_t>::const_iterator __cdecl ?find_?$qvector_Urefinfo_desc_t____QEBAPEBUrefinfo_desc_t__AEBU2__Z(const qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
qvector<reg_access_t>::iterator __cdecl ?find_?$qvector_Ureg_access_t____QEAAPEAUreg_access_t__AEBU2__Z(qvector<reg_access_t> *__hidden this, reg_access_t *x);
qvector<reg_access_t>::const_iterator __cdecl ?find_?$qvector_Ureg_access_t____QEBAPEBUreg_access_t__AEBU2__Z(const qvector<reg_access_t> *__hidden this, reg_access_t *x);
qvector<reg_info_t>::iterator __cdecl ?find_?$qvector_Ureg_info_t____QEAAPEAUreg_info_t__AEBU2__Z(qvector<reg_info_t> *__hidden this, reg_info_t *x);
qvector<reg_info_t>::const_iterator __cdecl ?find_?$qvector_Ureg_info_t____QEBAPEBUreg_info_t__AEBU2__Z(const qvector<reg_info_t> *__hidden this, reg_info_t *x);
qvector<register_info_t>::iterator __cdecl ?find_?$qvector_Uregister_info_t____QEAAPEAUregister_info_t__AEBU2__Z(qvector<register_info_t> *__hidden this, register_info_t *x);
qvector<register_info_t>::const_iterator __cdecl ?find_?$qvector_Uregister_info_t____QEBAPEBUregister_info_t__AEBU2__Z(const qvector<register_info_t> *__hidden this, register_info_t *x);
qvector<regobj_t>::iterator __cdecl ?find_?$qvector_Uregobj_t____QEAAPEAUregobj_t__AEBU2__Z(qvector<regobj_t> *__hidden this, regobj_t *x);
qvector<regobj_t>::const_iterator __cdecl ?find_?$qvector_Uregobj_t____QEBAPEBUregobj_t__AEBU2__Z(const qvector<regobj_t> *__hidden this, regobj_t *x);
qvector<regval_t>::iterator __cdecl ?find_?$qvector_Uregval_t____QEAAPEAUregval_t__AEBU2__Z(qvector<regval_t> *__hidden this, regval_t *x);
qvector<regval_t>::const_iterator __cdecl ?find_?$qvector_Uregval_t____QEBAPEBUregval_t__AEBU2__Z(const qvector<regval_t> *__hidden this, regval_t *x);
qvector<row_info_t>::iterator __cdecl ?find_?$qvector_Urow_info_t____QEAAPEAUrow_info_t__AEBU2__Z(qvector<row_info_t> *__hidden this, row_info_t *x);
qvector<row_info_t>::const_iterator __cdecl ?find_?$qvector_Urow_info_t____QEBAPEBUrow_info_t__AEBU2__Z(const qvector<row_info_t> *__hidden this, row_info_t *x);
qvector<scattered_segm_t>::iterator __cdecl ?find_?$qvector_Uscattered_segm_t____QEAAPEAUscattered_segm_t__AEBU2__Z(qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
qvector<scattered_segm_t>::const_iterator __cdecl ?find_?$qvector_Uscattered_segm_t____QEBAPEBUscattered_segm_t__AEBU2__Z(const qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
qvector<segm_move_info_t>::iterator __cdecl ?find_?$qvector_Usegm_move_info_t____QEAAPEAUsegm_move_info_t__AEBU2__Z(qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
qvector<segm_move_info_t>::const_iterator __cdecl ?find_?$qvector_Usegm_move_info_t____QEBAPEBUsegm_move_info_t__AEBU2__Z(const qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
qvector<selection_item_t>::iterator __cdecl ?find_?$qvector_Uselection_item_t____QEAAPEAUselection_item_t__AEBU2__Z(qvector<selection_item_t> *__hidden this, selection_item_t *x);
qvector<selection_item_t>::const_iterator __cdecl ?find_?$qvector_Uselection_item_t____QEBAPEBUselection_item_t__AEBU2__Z(const qvector<selection_item_t> *__hidden this, selection_item_t *x);
qvector<simd_info_t>::iterator __cdecl ?find_?$qvector_Usimd_info_t____QEAAPEAUsimd_info_t__AEBU2__Z(qvector<simd_info_t> *__hidden this, simd_info_t *x);
qvector<simd_info_t>::const_iterator __cdecl ?find_?$qvector_Usimd_info_t____QEBAPEBUsimd_info_t__AEBU2__Z(const qvector<simd_info_t> *__hidden this, simd_info_t *x);
qvector<simpleline_t>::iterator __cdecl ?find_?$qvector_Usimpleline_t____QEAAPEAUsimpleline_t__AEBU2__Z(qvector<simpleline_t> *__hidden this, simpleline_t *x);
qvector<simpleline_t>::const_iterator __cdecl ?find_?$qvector_Usimpleline_t____QEBAPEBUsimpleline_t__AEBU2__Z(const qvector<simpleline_t> *__hidden this, simpleline_t *x);
qvector<stkpnt_t>::iterator __cdecl ?find_?$qvector_Ustkpnt_t____QEAAPEAUstkpnt_t__AEBU2__Z(qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
qvector<stkpnt_t>::const_iterator __cdecl ?find_?$qvector_Ustkpnt_t____QEBAPEBUstkpnt_t__AEBU2__Z(const qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
qvector<tev_info_reg_t>::iterator __cdecl ?find_?$qvector_Utev_info_reg_t____QEAAPEAUtev_info_reg_t__AEBU2__Z(qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
qvector<tev_info_reg_t>::const_iterator __cdecl ?find_?$qvector_Utev_info_reg_t____QEBAPEBUtev_info_reg_t__AEBU2__Z(const qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
qvector<tev_info_t>::iterator __cdecl ?find_?$qvector_Utev_info_t____QEAAPEAUtev_info_t__AEBU2__Z(qvector<tev_info_t> *__hidden this, tev_info_t *x);
qvector<tev_info_t>::const_iterator __cdecl ?find_?$qvector_Utev_info_t____QEBAPEBUtev_info_t__AEBU2__Z(const qvector<tev_info_t> *__hidden this, tev_info_t *x);
qvector<tev_reg_value_t>::iterator __cdecl ?find_?$qvector_Utev_reg_value_t____QEAAPEAUtev_reg_value_t__AEBU2__Z(qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
qvector<tev_reg_value_t>::const_iterator __cdecl ?find_?$qvector_Utev_reg_value_t____QEBAPEBUtev_reg_value_t__AEBU2__Z(const qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
qvector<thread_name_t>::iterator __cdecl ?find_?$qvector_Uthread_name_t____QEAAPEAUthread_name_t__AEBU2__Z(qvector<thread_name_t> *__hidden this, thread_name_t *x);
qvector<thread_name_t>::const_iterator __cdecl ?find_?$qvector_Uthread_name_t____QEBAPEBUthread_name_t__AEBU2__Z(const qvector<thread_name_t> *__hidden this, thread_name_t *x);
qvector<token_t>::iterator __cdecl ?find_?$qvector_Utoken_t____QEAAPEAUtoken_t__AEBU2__Z(qvector<token_t> *__hidden this, token_t *x);
qvector<token_t>::const_iterator __cdecl ?find_?$qvector_Utoken_t____QEBAPEBUtoken_t__AEBU2__Z(const qvector<token_t> *__hidden this, token_t *x);
qvector<type_attr_t>::iterator __cdecl ?find_?$qvector_Utype_attr_t____QEAAPEAUtype_attr_t__AEBU2__Z(qvector<type_attr_t> *__hidden this, type_attr_t *x);
qvector<type_attr_t>::const_iterator __cdecl ?find_?$qvector_Utype_attr_t____QEBAPEBUtype_attr_t__AEBU2__Z(const qvector<type_attr_t> *__hidden this, type_attr_t *x);
qvector<udt_member_t>::iterator __cdecl ?find_?$qvector_Uudt_member_t____QEAAPEAUudt_member_t__AEBU2__Z(qvector<udt_member_t> *__hidden this, udt_member_t *x);
qvector<udt_member_t>::const_iterator __cdecl ?find_?$qvector_Uudt_member_t____QEBAPEBUudt_member_t__AEBU2__Z(const qvector<udt_member_t> *__hidden this, udt_member_t *x);
qvector<update_bpt_info_t>::iterator __cdecl ?find_?$qvector_Uupdate_bpt_info_t____QEAAPEAUupdate_bpt_info_t__AEBU2__Z(qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
qvector<update_bpt_info_t>::const_iterator __cdecl ?find_?$qvector_Uupdate_bpt_info_t____QEBAPEBUupdate_bpt_info_t__AEBU2__Z(const qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
qvector<xreflist_entry_t>::iterator __cdecl ?find_?$qvector_Uxreflist_entry_t____QEAAPEAUxreflist_entry_t__AEBU2__Z(qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
qvector<xreflist_entry_t>::const_iterator __cdecl ?find_?$qvector_Uxreflist_entry_t____QEBAPEBUxreflist_entry_t__AEBU2__Z(const qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
qvector<_qstring<char>>::iterator __cdecl ?find_?$qvector_V?$_qstring_D____QEAAPEAV?$_qstring_D__AEBV2__Z(qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
qvector<_qstring<char>>::const_iterator __cdecl ?find_?$qvector_V?$_qstring_D____QEBAPEBV?$_qstring_D__AEBV2__Z(const qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
qvector<_qstring<unsigned char>>::iterator __cdecl ?find_?$qvector_V?$_qstring_E____QEAAPEAV?$_qstring_E__AEBV2__Z(qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
qvector<_qstring<unsigned char>>::const_iterator __cdecl ?find_?$qvector_V?$_qstring_E____QEBAPEBV?$_qstring_E__AEBV2__Z(const qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
qvector<_qstring<wchar_t>>::iterator __cdecl ?find_?$qvector_V?$_qstring__W____QEAAPEAV?$_qstring__W__AEBV2__Z(qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
qvector<_qstring<wchar_t>>::const_iterator __cdecl ?find_?$qvector_V?$_qstring__W____QEBAPEBV?$_qstring__W__AEBV2__Z(const qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
qvector<qrefcnt_t<source_item_t>>::iterator __cdecl ?find_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAPEAV?$qrefcnt_t_Vsource_item_t____AEBV2__Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
qvector<qrefcnt_t<source_item_t>>::const_iterator __cdecl ?find_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBAPEBV?$qrefcnt_t_Vsource_item_t____AEBV2__Z(const qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
qvector<qvector<int>>::iterator __cdecl ?find_?$qvector_V?$qvector_H____QEAAPEAV?$qvector_H__AEBV2__Z(qvector<qvector<int>> *__hidden this, qvector<int> *x);
qvector<qvector<int>>::const_iterator __cdecl ?find_?$qvector_V?$qvector_H____QEBAPEBV?$qvector_H__AEBV2__Z(const qvector<qvector<int>> *__hidden this, qvector<int> *x);
qvector<qvector<const char *>>::iterator __cdecl ?find_?$qvector_V?$qvector_PEBD____QEAAPEAV?$qvector_PEBD__AEBV2__Z(qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
qvector<qvector<const char *>>::const_iterator __cdecl ?find_?$qvector_V?$qvector_PEBD____QEBAPEBV?$qvector_PEBD__AEBV2__Z(const qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
qvector<qvector<const twinline_t *>>::iterator __cdecl ?find_?$qvector_V?$qvector_PEBVtwinline_t______QEAAPEAV?$qvector_PEBVtwinline_t____AEBV2__Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
qvector<qvector<const twinline_t *>>::const_iterator __cdecl ?find_?$qvector_V?$qvector_PEBVtwinline_t______QEBAPEBV?$qvector_PEBVtwinline_t____AEBV2__Z(const qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
qvector<qvector<long long>>::iterator __cdecl ?find_?$qvector_V?$qvector__J____QEAAPEAV?$qvector__J__AEBV2__Z(qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
qvector<qvector<long long>>::const_iterator __cdecl ?find_?$qvector_V?$qvector__J____QEBAPEBV?$qvector__J__AEBV2__Z(const qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
qvector<argloc_t>::iterator __cdecl ?find_?$qvector_Vargloc_t____QEAAPEAVargloc_t__AEBV2__Z(qvector<argloc_t> *__hidden this, argloc_t *x);
qvector<argloc_t>::const_iterator __cdecl ?find_?$qvector_Vargloc_t____QEBAPEBVargloc_t__AEBV2__Z(const qvector<argloc_t> *__hidden this, argloc_t *x);
qvector<intmap_t>::iterator __cdecl ?find_?$qvector_Vintmap_t____QEAAPEAVintmap_t__AEBV2__Z(qvector<intmap_t> *__hidden this, intmap_t *x);
qvector<intmap_t>::const_iterator __cdecl ?find_?$qvector_Vintmap_t____QEBAPEBVintmap_t__AEBV2__Z(const qvector<intmap_t> *__hidden this, intmap_t *x);
qvector<node_set_t>::iterator __cdecl ?find_?$qvector_Vnode_set_t____QEAAPEAVnode_set_t__AEBV2__Z(qvector<node_set_t> *__hidden this, node_set_t *x);
qvector<node_set_t>::const_iterator __cdecl ?find_?$qvector_Vnode_set_t____QEBAPEBVnode_set_t__AEBV2__Z(const qvector<node_set_t> *__hidden this, node_set_t *x);
qvector<op_t>::iterator __cdecl ?find_?$qvector_Vop_t____QEAAPEAVop_t__AEBV2__Z(qvector<op_t> *__hidden this, op_t *x);
qvector<op_t>::const_iterator __cdecl ?find_?$qvector_Vop_t____QEBAPEBVop_t__AEBV2__Z(const qvector<op_t> *__hidden this, op_t *x);
qvector<rangeset_t>::iterator __cdecl ?find_?$qvector_Vrangeset_t____QEAAPEAVrangeset_t__AEBV2__Z(qvector<rangeset_t> *__hidden this, rangeset_t *x);
qvector<rangeset_t>::const_iterator __cdecl ?find_?$qvector_Vrangeset_t____QEBAPEBVrangeset_t__AEBV2__Z(const qvector<rangeset_t> *__hidden this, rangeset_t *x);
qvector<sync_source_t>::iterator __cdecl ?find_?$qvector_Vsync_source_t____QEAAPEAVsync_source_t__AEBV2__Z(qvector<sync_source_t> *__hidden this, sync_source_t *x);
qvector<sync_source_t>::const_iterator __cdecl ?find_?$qvector_Vsync_source_t____QEBAPEBVsync_source_t__AEBV2__Z(const qvector<sync_source_t> *__hidden this, sync_source_t *x);
qvector<tinfo_t>::iterator __cdecl ?find_?$qvector_Vtinfo_t____QEAAPEAVtinfo_t__AEBV2__Z(qvector<tinfo_t> *__hidden this, tinfo_t *x);
qvector<tinfo_t>::const_iterator __cdecl ?find_?$qvector_Vtinfo_t____QEBAPEBVtinfo_t__AEBV2__Z(const qvector<tinfo_t> *__hidden this, tinfo_t *x);
qvector<tryblk_t>::iterator __cdecl ?find_?$qvector_Vtryblk_t____QEAAPEAVtryblk_t__AEBV2__Z(qvector<tryblk_t> *__hidden this, tryblk_t *x);
qvector<tryblk_t>::const_iterator __cdecl ?find_?$qvector_Vtryblk_t____QEBAPEBVtryblk_t__AEBV2__Z(const qvector<tryblk_t> *__hidden this, tryblk_t *x);
qvector<twinline_t>::iterator __cdecl ?find_?$qvector_Vtwinline_t____QEAAPEAVtwinline_t__AEBV2__Z(qvector<twinline_t> *__hidden this, twinline_t *x);
qvector<twinline_t>::const_iterator __cdecl ?find_?$qvector_Vtwinline_t____QEBAPEBVtwinline_t__AEBV2__Z(const qvector<twinline_t> *__hidden this, twinline_t *x);
qvector<valstr_t>::iterator __cdecl ?find_?$qvector_Vvalstr_t____QEAAPEAVvalstr_t__AEBV2__Z(qvector<valstr_t> *__hidden this, valstr_t *x);
qvector<valstr_t>::const_iterator __cdecl ?find_?$qvector_Vvalstr_t____QEBAPEBVvalstr_t__AEBV2__Z(const qvector<valstr_t> *__hidden this, valstr_t *x);
qvector<movbpt_code_t>::iterator __cdecl ?find_?$qvector_W4movbpt_code_t____QEAAPEAW4movbpt_code_t__AEBW42__Z(qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
qvector<movbpt_code_t>::const_iterator __cdecl ?find_?$qvector_W4movbpt_code_t____QEBAPEBW4movbpt_code_t__AEBW42__Z(const qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
qvector<long long>::iterator __cdecl ?find_?$qvector__J__QEAAPEA_JAEB_J_Z(qvector<long long> *__hidden this, __int64 *x);
qvector<long long>::const_iterator __cdecl ?find_?$qvector__J__QEBAPEB_JAEB_J_Z(const qvector<long long> *__hidden this, __int64 *x);
qvector<unsigned long long>::iterator __cdecl ?find_?$qvector__K__QEAAPEA_KAEB_K_Z(qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
qvector<unsigned long long>::const_iterator __cdecl ?find_?$qvector__K__QEBAPEB_KAEB_K_Z(const qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
qvector<bool>::iterator __cdecl ?find_?$qvector__N__QEAAPEA_NAEB_N_Z(qvector<bool> *__hidden this, bool *x);
qvector<bool>::const_iterator __cdecl ?find_?$qvector__N__QEBAPEB_NAEB_N_Z(const qvector<bool> *__hidden this, bool *x);
qvector<wchar_t>::iterator __cdecl ?find_?$qvector__W__QEAAPEA_WAEB_W_Z(qvector<wchar_t> *__hidden this, __int16 *x);
qvector<wchar_t>::const_iterator __cdecl ?find_?$qvector__W__QEBAPEB_WAEB_W_Z(const qvector<wchar_t> *__hidden this, __int16 *x);
const segm_move_info_t *__cdecl ?find_segm_move_infos_t__QEBAPEBUsegm_move_info_t___K_Z(const segm_move_infos_t *__hidden this, ea_t ea);
void __cdecl ?find_entries_abstract_graph_t__AEBAXAEAVnode_set_t___Z(const abstract_graph_t *__hidden this, node_set_t *entries);
dirtree_cursor_t __cdecl ?find_entry_dirtree_t__QEAA?AUdirtree_cursor_t__AEBUdirentry_t___Z(dirtree_t *__hidden this, const direntry_t *de);
std::basic_string<char>::size_type __cdecl ?find_first_not_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_first_not_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KD_K_Z(const std::basic_string<char> *__hidden this, char _Ch, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_first_not_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K1_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Count);
std::basic_string<char>::size_type __cdecl ?find_first_not_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_first_not_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_first_not_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K1_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t>::size_type __cdecl ?find_first_not_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_first_not_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_K_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 _Ch, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_first_not_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_first_not_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K1_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t>::size_type __cdecl ?find_first_not_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_first_not_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_K_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 _Ch, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_first_not_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_first_not_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K1_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t>::size_type __cdecl ?find_first_not_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_first_not_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_K_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 _Ch, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_first_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_first_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KD_K_Z(const std::basic_string<char> *__hidden this, char _Ch, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_first_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K1_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Count);
std::basic_string<char>::size_type __cdecl ?find_first_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_first_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_first_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K1_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t>::size_type __cdecl ?find_first_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_first_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_K_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 _Ch, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_first_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_first_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K1_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t>::size_type __cdecl ?find_first_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_first_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_K_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 _Ch, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_first_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_first_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K1_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t>::size_type __cdecl ?find_first_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_first_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_K_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 _Ch, const std::basic_string<wchar_t>::size_type _Off);
uint32 __cdecl ?find_index_bookmarks_t__SAIAEBUlochist_entry_t__PEAX_Z(const lochist_entry_t *e, void *ud);
std::basic_string<char>::size_type __cdecl ?find_last_not_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_last_not_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KD_K_Z(const std::basic_string<char> *__hidden this, char _Ch, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_last_not_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K1_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Count);
std::basic_string<char>::size_type __cdecl ?find_last_not_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_last_not_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_last_not_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K1_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t>::size_type __cdecl ?find_last_not_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_last_not_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_K_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 _Ch, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_last_not_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_last_not_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K1_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t>::size_type __cdecl ?find_last_not_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_last_not_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_K_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 _Ch, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_last_not_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_last_not_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K1_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t>::size_type __cdecl ?find_last_not_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_last_not_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_K_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 _Ch, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_last_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_last_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KD_K_Z(const std::basic_string<char> *__hidden this, char _Ch, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?find_last_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K1_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Count);
std::basic_string<char>::size_type __cdecl ?find_last_of_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_last_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_last_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K1_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t>::size_type __cdecl ?find_last_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?find_last_of_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_K_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 _Ch, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_last_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_last_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K1_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t>::size_type __cdecl ?find_last_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?find_last_of_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_K_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 _Ch, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_last_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_last_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K1_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t>::size_type __cdecl ?find_last_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?find_last_of_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_K_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 _Ch, const std::basic_string<wchar_t>::size_type _Off);
const cliopt_t *__cdecl ?find_long_cliopts_t__QEBAPEBUcliopt_t__PEBD_Z(const cliopts_t *__hidden this, const char *longname);
ssize_t __cdecl ?find_op_value_processor_t__SA_JPEA_KAEBVinsn_t__H_Z(uval_t *out, const insn_t *insn, int op);
regex_ptr_t *__cdecl ?find_or_create_regex_cache_t__QEAAAEAV?$qrefcnt_t_Vrefcnted_regex_t____AEBV?$_qstring_D___Z(regex_cache_t *__hidden this, const qstring *str);
const range_t *__cdecl ?find_range_rangeset_t__QEBAPEBUrange_t___K_Z(const rangeset_t *__hidden this, ea_t ea);
ssize_t __cdecl ?find_reg_value_processor_t__SA_JPEA_KAEBVinsn_t__H_Z(uval_t *out, const insn_t *insn, int reg);
const cliopt_t *__cdecl ?find_short_cliopts_t__QEBAPEBUcliopt_t__D_Z(const cliopts_t *__hidden this, char shortname);
source_item_iterator __cdecl ?find_source_items_srcinfo_provider_t__UEAA?AV?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________PEAVsource_file_t__HH_Z(srcinfo_provider_t *__hidden this, source_file_t *sf, int lnnum, int colnum);
source_item_iterator __cdecl ?find_source_items_srcinfo_provider_t__UEAA?AV?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t_________K0W4src_item_kind_t___N_Z(srcinfo_provider_t *__hidden this, ea_t ea, asize_t size, src_item_kind_t level, bool may_decompile);
source_item_ptr __cdecl ?find_static_item_srcinfo_provider_t__UEAA?AV?$qrefcnt_t_Vsource_item_t____PEBD_K_Z(srcinfo_provider_t *__hidden this, const char *name, ea_t ea);
int __cdecl ?find_udt_member_tinfo_t__QEBAHPEAUudt_member_t__H_Z(const tinfo_t *__hidden this, udt_member_t *udm, int strmem_flags);
ea_t *__cdecl ?find_visited_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____IEAAPEA_K_K_Z(backward_flow_iterator_t<no_regs_t, simple_bfi_t> *__hidden this, ea_t ea);
bool __cdecl ?findfirst_dirtree_t__QEBA_NPEAUdirtree_iterator_t__PEBD_Z(const dirtree_t *__hidden this, dirtree_iterator_t *ff, const char *pattern);
bool __cdecl ?findnext_dirtree_t__QEBA_NPEAUdirtree_iterator_t___Z(const dirtree_t *__hidden this, dirtree_iterator_t *ff);
int __cdecl ?findreg_callregs_t__SAHAEBV?$qvector_H__H_Z(const intvec_t *regs, int r);
bool __cdecl ?findregs_callregs_t__IEBA_NPEAH0HAEBV?$qvector_H__1_Z(const callregs_t *__hidden this, int *gp_ind, int *fp_ind, int r, const intvec_t *gprs, const intvec_t *fprs);
bool __cdecl ?first_?$qiterator_V?$qrefcnt_t_Vsource_file_t______UEAA_NXZ(qiterator<qrefcnt_t<source_file_t>> *__hidden this);
bool __cdecl ?first_?$qiterator_V?$qrefcnt_t_Vsource_item_t______UEAA_NXZ(qiterator<qrefcnt_t<source_item_t>> *__hidden this);
bool __cdecl ?first_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
bool __cdecl ?first_func_parent_iterator_t__QEAA_NXZ(func_parent_iterator_t *__hidden this);
bool __cdecl ?first_func_tail_iterator_t__QEAA_NXZ(func_tail_iterator_t *__hidden this);
int __cdecl ?first_node_set_t__QEBAHXZ(const node_set_t *__hidden this);
bool __cdecl ?first_from_xrefblk_t__QEAA_N_KH_Z(xrefblk_t *__hidden this, ea_t _from, int flags);
bool __cdecl ?first_to_xrefblk_t__QEAA_N_KH_Z(xrefblk_t *__hidden this, ea_t _to, int flags);
void __cdecl ?fix_collapsed_group_edges_mutable_graph_t__AEAAXXZ(mutable_graph_t *__hidden this);
void __cdecl ?fix_links_listnode_t_?$qlist_PEAVui_request_t____QEAAX_K_Z(qlist<ui_request_t *>::listnode_t *__hidden this, size_t len);
bool __cdecl ?flatten_valstr_t__AEAA_NAEBUflatten_args_t_1_H_Z(valstr_t *__hidden this, const valstr_t::flatten_args_t *flargs, int level);
bool __cdecl ?flush_and_reinit_outctx_base_t__MEAA_NXZ(outctx_base_t *__hidden this);
bool __cdecl ?flush_buf_outctx_base_t__UEAA_NPEBDH_Z(outctx_base_t *__hidden this, const char *buf, int indent);
bool __cdecl ?flush_outbuf_outctx_base_t__UEAA_NH_Z(outctx_base_t *__hidden this, int indent);
void __cdecl ?flush_output_ida_syntax_highlighter_t__IEAAXPEAUhighlighter_cbs_t__PEBDW4syntax_highlight_style___Z(ida_syntax_highlighter_t *__hidden this, highlighter_cbs_t *highlighter_cbs, const char *ptr, syntax_highlight_style style);
fpvalue_error_t __cdecl ?fmul_fpvalue_t__QEAA?AW4fpvalue_error_t__AEBU1__Z(fpvalue_t *__hidden this, const fpvalue_t *y);
bool __cdecl ?follow_tree_jump_pattern_t__IEAA_N_KH_Z(jump_pattern_t *__hidden this, ea_t ea, int n);
int __cdecl ?for_all_bpts_bpt_visitor_t__QEAAHH_Z(bpt_visitor_t *__hidden this, int bvflags);
int __cdecl ?for_all_nodes_edges_abstract_graph_t__QEAAHAEAVgraph_visitor_t___N_Z(abstract_graph_t *__hidden this, graph_visitor_t *nev, bool visit_nodes);
int __cdecl ?forbid_annotations_outctx_base_t__QEAAHXZ(outctx_base_t *__hidden this);
bool __cdecl ?force_code_outctx_base_t__QEBA_NXZ(const outctx_base_t *__hidden this);
fpvalue_error_t __cdecl ?from_10bytes_fpvalue_t__QEAA?AW4fpvalue_error_t__PEBX_Z(fpvalue_t *__hidden this, const void *fpval);
fpvalue_error_t __cdecl ?from_12bytes_fpvalue_t__QEAA?AW4fpvalue_error_t__PEBX_Z(fpvalue_t *__hidden this, const void *fpval);
fpvalue_error_t __cdecl ?from_double_fpvalue_t__QEAA?AW4fpvalue_error_t__N_Z(fpvalue_t *__hidden this, double fpval);
fpvalue_error_t __cdecl ?from_float_fpvalue_t__QEAA?AW4fpvalue_error_t__M_Z(fpvalue_t *__hidden this, float fpval);
fpvalue_error_t __cdecl ?from_half_fpvalue_t__QEAA?AW4fpvalue_error_t__G_Z(fpvalue_t *__hidden this, uint16 fpval);
void __cdecl ?from_int64_fpvalue_t__QEAAX_J_Z(fpvalue_t *__hidden this, int64 x);
fpvalue_error_t __cdecl ?from_str_fpvalue_t__QEAA?AW4fpvalue_error_t__PEAPEBD_Z(fpvalue_t *__hidden this, const char **p_str);
void __cdecl ?from_sval_fpvalue_t__QEAAX_J_Z(fpvalue_t *__hidden this, sval_t x);
bool __cdecl ?from_til_struc_t__QEBA_NXZ(const struc_t *__hidden this);
void __cdecl ?from_uint64_fpvalue_t__QEAAX_K_Z(fpvalue_t *__hidden this, uint64 x);
bool __cdecl ?fromhex_bytevec_t__QEAA_NAEBV?$_qstring_D___Z(bytevec_t *__hidden this, const qstring *str);
std::basic_string<char>::reference __cdecl ?front_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEADXZ(std::basic_string<char> *__hidden this);
std::basic_string<char>::const_reference __cdecl ?front_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBAAEBDXZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::reference __cdecl ?front_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEA_SXZ(std::basic_string<char16_t> *__hidden this);
std::basic_string<char16_t>::const_reference __cdecl ?front_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBAAEB_SXZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::reference __cdecl ?front_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEA_UXZ(std::basic_string<char32_t> *__hidden this);
std::basic_string<char32_t>::const_reference __cdecl ?front_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBAAEB_UXZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::reference __cdecl ?front_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEA_WXZ(std::basic_string<wchar_t> *__hidden this);
std::basic_string<wchar_t>::const_reference __cdecl ?front_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBAAEB_WXZ(const std::basic_string<wchar_t> *__hidden this);
ui_request_t **__cdecl ?front_?$qlist_PEAVui_request_t____QEAAAEAPEAVui_request_t__XZ(qlist<ui_request_t *> *__hidden this);
ui_request_t **__cdecl ?front_?$qlist_PEAVui_request_t____QEBAAEBQEAVui_request_t__XZ(const qlist<ui_request_t *> *__hidden this);
char *__cdecl ?front_?$qvector_D__QEAAAEADXZ(qvector<char> *__hidden this);
char *__cdecl ?front_?$qvector_D__QEBAAEBDXZ(const qvector<char> *__hidden this);
unsigned __int8 *__cdecl ?front_?$qvector_E__QEAAAEAEXZ(qvector<unsigned char> *__hidden this);
unsigned __int8 *__cdecl ?front_?$qvector_E__QEBAAEBEXZ(const qvector<unsigned char> *__hidden this);
int *__cdecl ?front_?$qvector_H__QEAAAEAHXZ(qvector<int> *__hidden this);
int *__cdecl ?front_?$qvector_H__QEBAAEBHXZ(const qvector<int> *__hidden this);
unsigned int *__cdecl ?front_?$qvector_I__QEAAAEAIXZ(qvector<unsigned int> *__hidden this);
unsigned int *__cdecl ?front_?$qvector_I__QEBAAEBIXZ(const qvector<unsigned int> *__hidden this);
__int64 (__cdecl **__cdecl ?front_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAAEAP6A_JPEAW4syntax_highlight_style__PEBD_ZXZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this))(syntax_highlight_style *, const char *);
__int64 (__cdecl **__cdecl ?front_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBAAEBQ6A_JPEAW4syntax_highlight_style__PEBD_ZXZ(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this))(syntax_highlight_style *, const char *);
bool (__cdecl **__cdecl ?front_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAAEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZXZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this))(syntax_highlight_style *, const _qstring<char> *);
bool (__cdecl **__cdecl ?front_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBAAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZXZ(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this))(syntax_highlight_style *, const _qstring<char> *);
bpt_t **__cdecl ?front_?$qvector_PEAUbpt_t____QEAAAEAPEAUbpt_t__XZ(qvector<bpt_t *> *__hidden this);
bpt_t **__cdecl ?front_?$qvector_PEAUbpt_t____QEBAAEBQEAUbpt_t__XZ(const qvector<bpt_t *> *__hidden this);
extlang_t **__cdecl ?front_?$qvector_PEAUextlang_t____QEAAAEAPEAUextlang_t__XZ(qvector<extlang_t *> *__hidden this);
extlang_t **__cdecl ?front_?$qvector_PEAUextlang_t____QEBAAEBQEAUextlang_t__XZ(const qvector<extlang_t *> *__hidden this);
line_rendering_output_entry_t **__cdecl ?front_?$qvector_PEAUline_rendering_output_entry_t____QEAAAEAPEAUline_rendering_output_entry_t__XZ(qvector<line_rendering_output_entry_t *> *__hidden this);
line_rendering_output_entry_t **__cdecl ?front_?$qvector_PEAUline_rendering_output_entry_t____QEBAAEBQEAUline_rendering_output_entry_t__XZ(const qvector<line_rendering_output_entry_t *> *__hidden this);
snapshot_t **__cdecl ?front_?$qvector_PEAVsnapshot_t____QEAAAEAPEAVsnapshot_t__XZ(qvector<snapshot_t *> *__hidden this);
snapshot_t **__cdecl ?front_?$qvector_PEAVsnapshot_t____QEBAAEBQEAVsnapshot_t__XZ(const qvector<snapshot_t *> *__hidden this);
const char **__cdecl ?front_?$qvector_PEBD__QEAAAEAPEBDXZ(qvector<const char *> *__hidden this);
const char **__cdecl ?front_?$qvector_PEBD__QEBAAEBQEBDXZ(const qvector<const char *> *__hidden this);
const bpt_t **__cdecl ?front_?$qvector_PEBUbpt_t____QEAAAEAPEBUbpt_t__XZ(qvector<const bpt_t *> *__hidden this);
const bpt_t **__cdecl ?front_?$qvector_PEBUbpt_t____QEBAAEBQEBUbpt_t__XZ(const qvector<const bpt_t *> *__hidden this);
const rangeset_t **__cdecl ?front_?$qvector_PEBVrangeset_t____QEAAAEAPEBVrangeset_t__XZ(qvector<const rangeset_t *> *__hidden this);
const rangeset_t **__cdecl ?front_?$qvector_PEBVrangeset_t____QEBAAEBQEBVrangeset_t__XZ(const qvector<const rangeset_t *> *__hidden this);
const twinline_t **__cdecl ?front_?$qvector_PEBVtwinline_t____QEAAAEAPEBVtwinline_t__XZ(qvector<const twinline_t *> *__hidden this);
const twinline_t **__cdecl ?front_?$qvector_PEBVtwinline_t____QEBAAEBQEBVtwinline_t__XZ(const qvector<const twinline_t *> *__hidden this);
argpart_t *__cdecl ?front_?$qvector_Uargpart_t____QEAAAEAUargpart_t__XZ(qvector<argpart_t> *__hidden this);
argpart_t *__cdecl ?front_?$qvector_Uargpart_t____QEBAAEBUargpart_t__XZ(const qvector<argpart_t> *__hidden this);
bpt_t *__cdecl ?front_?$qvector_Ubpt_t____QEAAAEAUbpt_t__XZ(qvector<bpt_t> *__hidden this);
bpt_t *__cdecl ?front_?$qvector_Ubpt_t____QEBAAEBUbpt_t__XZ(const qvector<bpt_t> *__hidden this);
bptaddrs_t *__cdecl ?front_?$qvector_Ubptaddrs_t____QEAAAEAUbptaddrs_t__XZ(qvector<bptaddrs_t> *__hidden this);
bptaddrs_t *__cdecl ?front_?$qvector_Ubptaddrs_t____QEBAAEBUbptaddrs_t__XZ(const qvector<bptaddrs_t> *__hidden this);
call_stack_info_t *__cdecl ?front_?$qvector_Ucall_stack_info_t____QEAAAEAUcall_stack_info_t__XZ(qvector<call_stack_info_t> *__hidden this);
call_stack_info_t *__cdecl ?front_?$qvector_Ucall_stack_info_t____QEBAAEBUcall_stack_info_t__XZ(const qvector<call_stack_info_t> *__hidden this);
catch_t *__cdecl ?front_?$qvector_Ucatch_t____QEAAAEAUcatch_t__XZ(qvector<catch_t> *__hidden this);
catch_t *__cdecl ?front_?$qvector_Ucatch_t____QEBAAEBUcatch_t__XZ(const qvector<catch_t> *__hidden this);
cfgopt_set_t *__cdecl ?front_?$qvector_Ucfgopt_set_t____QEAAAEAUcfgopt_set_t__XZ(qvector<cfgopt_set_t> *__hidden this);
cfgopt_set_t *__cdecl ?front_?$qvector_Ucfgopt_set_t____QEBAAEBUcfgopt_set_t__XZ(const qvector<cfgopt_set_t> *__hidden this);
channel_redir_t *__cdecl ?front_?$qvector_Uchannel_redir_t____QEAAAEAUchannel_redir_t__XZ(qvector<channel_redir_t> *__hidden this);
channel_redir_t *__cdecl ?front_?$qvector_Uchannel_redir_t____QEBAAEBUchannel_redir_t__XZ(const qvector<channel_redir_t> *__hidden this);
cliopt_t *__cdecl ?front_?$qvector_Ucliopt_t____QEAAAEAUcliopt_t__XZ(qvector<cliopt_t> *__hidden this);
cliopt_t *__cdecl ?front_?$qvector_Ucliopt_t____QEBAAEBUcliopt_t__XZ(const qvector<cliopt_t> *__hidden this);
compiled_binpat_t *__cdecl ?front_?$qvector_Ucompiled_binpat_t____QEAAAEAUcompiled_binpat_t__XZ(qvector<compiled_binpat_t> *__hidden this);
compiled_binpat_t *__cdecl ?front_?$qvector_Ucompiled_binpat_t____QEBAAEBUcompiled_binpat_t__XZ(const qvector<compiled_binpat_t> *__hidden this);
debug_event_t *__cdecl ?front_?$qvector_Udebug_event_t____QEAAAEAUdebug_event_t__XZ(qvector<debug_event_t> *__hidden this);
debug_event_t *__cdecl ?front_?$qvector_Udebug_event_t____QEBAAEBUdebug_event_t__XZ(const qvector<debug_event_t> *__hidden this);
direntry_t *__cdecl ?front_?$qvector_Udirentry_t____QEAAAEAUdirentry_t__XZ(qvector<direntry_t> *__hidden this);
direntry_t *__cdecl ?front_?$qvector_Udirentry_t____QEBAAEBUdirentry_t__XZ(const qvector<direntry_t> *__hidden this);
dirtree_cursor_t *__cdecl ?front_?$qvector_Udirtree_cursor_t____QEAAAEAUdirtree_cursor_t__XZ(qvector<dirtree_cursor_t> *__hidden this);
dirtree_cursor_t *__cdecl ?front_?$qvector_Udirtree_cursor_t____QEBAAEBUdirtree_cursor_t__XZ(const qvector<dirtree_cursor_t> *__hidden this);
ea_name_t *__cdecl ?front_?$qvector_Uea_name_t____QEAAAEAUea_name_t__XZ(qvector<ea_name_t> *__hidden this);
ea_name_t *__cdecl ?front_?$qvector_Uea_name_t____QEBAAEBUea_name_t__XZ(const qvector<ea_name_t> *__hidden this);
edge_t *__cdecl ?front_?$qvector_Uedge_t____QEAAAEAUedge_t__XZ(qvector<edge_t> *__hidden this);
edge_t *__cdecl ?front_?$qvector_Uedge_t____QEBAAEBUedge_t__XZ(const qvector<edge_t> *__hidden this);
enum_member_t *__cdecl ?front_?$qvector_Uenum_member_t____QEAAAEAUenum_member_t__XZ(qvector<enum_member_t> *__hidden this);
enum_member_t *__cdecl ?front_?$qvector_Uenum_member_t____QEBAAEBUenum_member_t__XZ(const qvector<enum_member_t> *__hidden this);
exception_info_t *__cdecl ?front_?$qvector_Uexception_info_t____QEAAAEAUexception_info_t__XZ(qvector<exception_info_t> *__hidden this);
exception_info_t *__cdecl ?front_?$qvector_Uexception_info_t____QEBAAEBUexception_info_t__XZ(const qvector<exception_info_t> *__hidden this);
fixup_info_t *__cdecl ?front_?$qvector_Ufixup_info_t____QEAAAEAUfixup_info_t__XZ(qvector<fixup_info_t> *__hidden this);
fixup_info_t *__cdecl ?front_?$qvector_Ufixup_info_t____QEBAAEBUfixup_info_t__XZ(const qvector<fixup_info_t> *__hidden this);
funcarg_t *__cdecl ?front_?$qvector_Ufuncarg_t____QEAAAEAUfuncarg_t__XZ(qvector<funcarg_t> *__hidden this);
funcarg_t *__cdecl ?front_?$qvector_Ufuncarg_t____QEBAAEBUfuncarg_t__XZ(const qvector<funcarg_t> *__hidden this);
group_crinfo_t *__cdecl ?front_?$qvector_Ugroup_crinfo_t____QEAAAEAUgroup_crinfo_t__XZ(qvector<group_crinfo_t> *__hidden this);
group_crinfo_t *__cdecl ?front_?$qvector_Ugroup_crinfo_t____QEBAAEBUgroup_crinfo_t__XZ(const qvector<group_crinfo_t> *__hidden this);
idc_global_t *__cdecl ?front_?$qvector_Uidc_global_t____QEAAAEAUidc_global_t__XZ(qvector<idc_global_t> *__hidden this);
idc_global_t *__cdecl ?front_?$qvector_Uidc_global_t____QEBAAEBUidc_global_t__XZ(const qvector<idc_global_t> *__hidden this);
idp_desc_t *__cdecl ?front_?$qvector_Uidp_desc_t____QEAAAEAUidp_desc_t__XZ(qvector<idp_desc_t> *__hidden this);
idp_desc_t *__cdecl ?front_?$qvector_Uidp_desc_t____QEBAAEBUidp_desc_t__XZ(const qvector<idp_desc_t> *__hidden this);
idp_name_t *__cdecl ?front_?$qvector_Uidp_name_t____QEAAAEAUidp_name_t__XZ(qvector<idp_name_t> *__hidden this);
idp_name_t *__cdecl ?front_?$qvector_Uidp_name_t____QEBAAEBUidp_name_t__XZ(const qvector<idp_name_t> *__hidden this);
ioport_bit_t *__cdecl ?front_?$qvector_Uioport_bit_t____QEAAAEAUioport_bit_t__XZ(qvector<ioport_bit_t> *__hidden this);
ioport_bit_t *__cdecl ?front_?$qvector_Uioport_bit_t____QEBAAEBUioport_bit_t__XZ(const qvector<ioport_bit_t> *__hidden this);
ioport_t *__cdecl ?front_?$qvector_Uioport_t____QEAAAEAUioport_t__XZ(qvector<ioport_t> *__hidden this);
ioport_t *__cdecl ?front_?$qvector_Uioport_t____QEBAAEBUioport_t__XZ(const qvector<ioport_t> *__hidden this);
jvalue_t *__cdecl ?front_?$qvector_Ujvalue_t____QEAAAEAUjvalue_t__XZ(qvector<jvalue_t> *__hidden this);
jvalue_t *__cdecl ?front_?$qvector_Ujvalue_t____QEBAAEBUjvalue_t__XZ(const qvector<jvalue_t> *__hidden this);
ida_syntax_highlighter_t::keywords_style_t *__cdecl ?front_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAAEAUkeywords_style_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
ida_syntax_highlighter_t::keywords_style_t *__cdecl ?front_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBAAEBUkeywords_style_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
kvp_t *__cdecl ?front_?$qvector_Ukvp_t____QEAAAEAUkvp_t__XZ(qvector<kvp_t> *__hidden this);
kvp_t *__cdecl ?front_?$qvector_Ukvp_t____QEBAAEBUkvp_t__XZ(const qvector<kvp_t> *__hidden this);
lochist_entry_t *__cdecl ?front_?$qvector_Ulochist_entry_t____QEAAAEAUlochist_entry_t__XZ(qvector<lochist_entry_t> *__hidden this);
lochist_entry_t *__cdecl ?front_?$qvector_Ulochist_entry_t____QEBAAEBUlochist_entry_t__XZ(const qvector<lochist_entry_t> *__hidden this);
lowcnd_t *__cdecl ?front_?$qvector_Ulowcnd_t____QEAAAEAUlowcnd_t__XZ(qvector<lowcnd_t> *__hidden this);
lowcnd_t *__cdecl ?front_?$qvector_Ulowcnd_t____QEBAAEBUlowcnd_t__XZ(const qvector<lowcnd_t> *__hidden this);
memory_info_t *__cdecl ?front_?$qvector_Umemory_info_t____QEAAAEAUmemory_info_t__XZ(qvector<memory_info_t> *__hidden this);
memory_info_t *__cdecl ?front_?$qvector_Umemory_info_t____QEBAAEBUmemory_info_t__XZ(const qvector<memory_info_t> *__hidden this);
memreg_info_t *__cdecl ?front_?$qvector_Umemreg_info_t____QEAAAEAUmemreg_info_t__XZ(qvector<memreg_info_t> *__hidden this);
memreg_info_t *__cdecl ?front_?$qvector_Umemreg_info_t____QEBAAEBUmemreg_info_t__XZ(const qvector<memreg_info_t> *__hidden this);
modinfo_t *__cdecl ?front_?$qvector_Umodinfo_t____QEAAAEAUmodinfo_t__XZ(qvector<modinfo_t> *__hidden this);
modinfo_t *__cdecl ?front_?$qvector_Umodinfo_t____QEBAAEBUmodinfo_t__XZ(const qvector<modinfo_t> *__hidden this);
movbpt_info_t *__cdecl ?front_?$qvector_Umovbpt_info_t____QEAAAEAUmovbpt_info_t__XZ(qvector<movbpt_info_t> *__hidden this);
movbpt_info_t *__cdecl ?front_?$qvector_Umovbpt_info_t____QEBAAEBUmovbpt_info_t__XZ(const qvector<movbpt_info_t> *__hidden this);
ida_syntax_highlighter_t::multicmt_t *__cdecl ?front_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAAEAUmulticmt_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
ida_syntax_highlighter_t::multicmt_t *__cdecl ?front_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBAAEBUmulticmt_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ?front_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAAEAUplain_char_ptr_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ?front_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBAAEBUplain_char_ptr_t_ida_syntax_highlighter_t__XZ(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
point_t *__cdecl ?front_?$qvector_Upoint_t____QEAAAEAUpoint_t__XZ(qvector<point_t> *__hidden this);
point_t *__cdecl ?front_?$qvector_Upoint_t____QEBAAEBUpoint_t__XZ(const qvector<point_t> *__hidden this);
process_info_t *__cdecl ?front_?$qvector_Uprocess_info_t____QEAAAEAUprocess_info_t__XZ(qvector<process_info_t> *__hidden this);
process_info_t *__cdecl ?front_?$qvector_Uprocess_info_t____QEBAAEBUprocess_info_t__XZ(const qvector<process_info_t> *__hidden this);
qbasic_block_t *__cdecl ?front_?$qvector_Uqbasic_block_t____QEAAAEAUqbasic_block_t__XZ(qvector<qbasic_block_t> *__hidden this);
qbasic_block_t *__cdecl ?front_?$qvector_Uqbasic_block_t____QEBAAEBUqbasic_block_t__XZ(const qvector<qbasic_block_t> *__hidden this);
range_t *__cdecl ?front_?$qvector_Urange_t____QEAAAEAUrange_t__XZ(qvector<range_t> *__hidden this);
range_t *__cdecl ?front_?$qvector_Urange_t____QEBAAEBUrange_t__XZ(const qvector<range_t> *__hidden this);
rect_t *__cdecl ?front_?$qvector_Urect_t____QEAAAEAUrect_t__XZ(qvector<rect_t> *__hidden this);
rect_t *__cdecl ?front_?$qvector_Urect_t____QEBAAEBUrect_t__XZ(const qvector<rect_t> *__hidden this);
refinfo_desc_t *__cdecl ?front_?$qvector_Urefinfo_desc_t____QEAAAEAUrefinfo_desc_t__XZ(qvector<refinfo_desc_t> *__hidden this);
refinfo_desc_t *__cdecl ?front_?$qvector_Urefinfo_desc_t____QEBAAEBUrefinfo_desc_t__XZ(const qvector<refinfo_desc_t> *__hidden this);
reg_access_t *__cdecl ?front_?$qvector_Ureg_access_t____QEAAAEAUreg_access_t__XZ(qvector<reg_access_t> *__hidden this);
reg_access_t *__cdecl ?front_?$qvector_Ureg_access_t____QEBAAEBUreg_access_t__XZ(const qvector<reg_access_t> *__hidden this);
reg_info_t *__cdecl ?front_?$qvector_Ureg_info_t____QEAAAEAUreg_info_t__XZ(qvector<reg_info_t> *__hidden this);
reg_info_t *__cdecl ?front_?$qvector_Ureg_info_t____QEBAAEBUreg_info_t__XZ(const qvector<reg_info_t> *__hidden this);
register_info_t *__cdecl ?front_?$qvector_Uregister_info_t____QEAAAEAUregister_info_t__XZ(qvector<register_info_t> *__hidden this);
register_info_t *__cdecl ?front_?$qvector_Uregister_info_t____QEBAAEBUregister_info_t__XZ(const qvector<register_info_t> *__hidden this);
regobj_t *__cdecl ?front_?$qvector_Uregobj_t____QEAAAEAUregobj_t__XZ(qvector<regobj_t> *__hidden this);
regobj_t *__cdecl ?front_?$qvector_Uregobj_t____QEBAAEBUregobj_t__XZ(const qvector<regobj_t> *__hidden this);
regval_t *__cdecl ?front_?$qvector_Uregval_t____QEAAAEAUregval_t__XZ(qvector<regval_t> *__hidden this);
regval_t *__cdecl ?front_?$qvector_Uregval_t____QEBAAEBUregval_t__XZ(const qvector<regval_t> *__hidden this);
row_info_t *__cdecl ?front_?$qvector_Urow_info_t____QEAAAEAUrow_info_t__XZ(qvector<row_info_t> *__hidden this);
row_info_t *__cdecl ?front_?$qvector_Urow_info_t____QEBAAEBUrow_info_t__XZ(const qvector<row_info_t> *__hidden this);
scattered_segm_t *__cdecl ?front_?$qvector_Uscattered_segm_t____QEAAAEAUscattered_segm_t__XZ(qvector<scattered_segm_t> *__hidden this);
scattered_segm_t *__cdecl ?front_?$qvector_Uscattered_segm_t____QEBAAEBUscattered_segm_t__XZ(const qvector<scattered_segm_t> *__hidden this);
segm_move_info_t *__cdecl ?front_?$qvector_Usegm_move_info_t____QEAAAEAUsegm_move_info_t__XZ(qvector<segm_move_info_t> *__hidden this);
segm_move_info_t *__cdecl ?front_?$qvector_Usegm_move_info_t____QEBAAEBUsegm_move_info_t__XZ(const qvector<segm_move_info_t> *__hidden this);
selection_item_t *__cdecl ?front_?$qvector_Uselection_item_t____QEAAAEAUselection_item_t__XZ(qvector<selection_item_t> *__hidden this);
selection_item_t *__cdecl ?front_?$qvector_Uselection_item_t____QEBAAEBUselection_item_t__XZ(const qvector<selection_item_t> *__hidden this);
simd_info_t *__cdecl ?front_?$qvector_Usimd_info_t____QEAAAEAUsimd_info_t__XZ(qvector<simd_info_t> *__hidden this);
simd_info_t *__cdecl ?front_?$qvector_Usimd_info_t____QEBAAEBUsimd_info_t__XZ(const qvector<simd_info_t> *__hidden this);
simpleline_t *__cdecl ?front_?$qvector_Usimpleline_t____QEAAAEAUsimpleline_t__XZ(qvector<simpleline_t> *__hidden this);
simpleline_t *__cdecl ?front_?$qvector_Usimpleline_t____QEBAAEBUsimpleline_t__XZ(const qvector<simpleline_t> *__hidden this);
stkpnt_t *__cdecl ?front_?$qvector_Ustkpnt_t____QEAAAEAUstkpnt_t__XZ(qvector<stkpnt_t> *__hidden this);
stkpnt_t *__cdecl ?front_?$qvector_Ustkpnt_t____QEBAAEBUstkpnt_t__XZ(const qvector<stkpnt_t> *__hidden this);
tev_info_reg_t *__cdecl ?front_?$qvector_Utev_info_reg_t____QEAAAEAUtev_info_reg_t__XZ(qvector<tev_info_reg_t> *__hidden this);
tev_info_reg_t *__cdecl ?front_?$qvector_Utev_info_reg_t____QEBAAEBUtev_info_reg_t__XZ(const qvector<tev_info_reg_t> *__hidden this);
tev_info_t *__cdecl ?front_?$qvector_Utev_info_t____QEAAAEAUtev_info_t__XZ(qvector<tev_info_t> *__hidden this);
tev_info_t *__cdecl ?front_?$qvector_Utev_info_t____QEBAAEBUtev_info_t__XZ(const qvector<tev_info_t> *__hidden this);
tev_reg_value_t *__cdecl ?front_?$qvector_Utev_reg_value_t____QEAAAEAUtev_reg_value_t__XZ(qvector<tev_reg_value_t> *__hidden this);
tev_reg_value_t *__cdecl ?front_?$qvector_Utev_reg_value_t____QEBAAEBUtev_reg_value_t__XZ(const qvector<tev_reg_value_t> *__hidden this);
thread_name_t *__cdecl ?front_?$qvector_Uthread_name_t____QEAAAEAUthread_name_t__XZ(qvector<thread_name_t> *__hidden this);
thread_name_t *__cdecl ?front_?$qvector_Uthread_name_t____QEBAAEBUthread_name_t__XZ(const qvector<thread_name_t> *__hidden this);
token_t *__cdecl ?front_?$qvector_Utoken_t____QEAAAEAUtoken_t__XZ(qvector<token_t> *__hidden this);
token_t *__cdecl ?front_?$qvector_Utoken_t____QEBAAEBUtoken_t__XZ(const qvector<token_t> *__hidden this);
type_attr_t *__cdecl ?front_?$qvector_Utype_attr_t____QEAAAEAUtype_attr_t__XZ(qvector<type_attr_t> *__hidden this);
type_attr_t *__cdecl ?front_?$qvector_Utype_attr_t____QEBAAEBUtype_attr_t__XZ(const qvector<type_attr_t> *__hidden this);
udt_member_t *__cdecl ?front_?$qvector_Uudt_member_t____QEAAAEAUudt_member_t__XZ(qvector<udt_member_t> *__hidden this);
udt_member_t *__cdecl ?front_?$qvector_Uudt_member_t____QEBAAEBUudt_member_t__XZ(const qvector<udt_member_t> *__hidden this);
update_bpt_info_t *__cdecl ?front_?$qvector_Uupdate_bpt_info_t____QEAAAEAUupdate_bpt_info_t__XZ(qvector<update_bpt_info_t> *__hidden this);
update_bpt_info_t *__cdecl ?front_?$qvector_Uupdate_bpt_info_t____QEBAAEBUupdate_bpt_info_t__XZ(const qvector<update_bpt_info_t> *__hidden this);
xreflist_entry_t *__cdecl ?front_?$qvector_Uxreflist_entry_t____QEAAAEAUxreflist_entry_t__XZ(qvector<xreflist_entry_t> *__hidden this);
xreflist_entry_t *__cdecl ?front_?$qvector_Uxreflist_entry_t____QEBAAEBUxreflist_entry_t__XZ(const qvector<xreflist_entry_t> *__hidden this);
_qstring<char> *__cdecl ?front_?$qvector_V?$_qstring_D____QEAAAEAV?$_qstring_D__XZ(qvector<_qstring<char>> *__hidden this);
_qstring<char> *__cdecl ?front_?$qvector_V?$_qstring_D____QEBAAEBV?$_qstring_D__XZ(const qvector<_qstring<char>> *__hidden this);
_qstring<unsigned char> *__cdecl ?front_?$qvector_V?$_qstring_E____QEAAAEAV?$_qstring_E__XZ(qvector<_qstring<unsigned char>> *__hidden this);
_qstring<unsigned char> *__cdecl ?front_?$qvector_V?$_qstring_E____QEBAAEBV?$_qstring_E__XZ(const qvector<_qstring<unsigned char>> *__hidden this);
_qstring<wchar_t> *__cdecl ?front_?$qvector_V?$_qstring__W____QEAAAEAV?$_qstring__W__XZ(qvector<_qstring<wchar_t>> *__hidden this);
_qstring<wchar_t> *__cdecl ?front_?$qvector_V?$_qstring__W____QEBAAEBV?$_qstring__W__XZ(const qvector<_qstring<wchar_t>> *__hidden this);
qrefcnt_t<source_item_t> *__cdecl ?front_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAAEAV?$qrefcnt_t_Vsource_item_t____XZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
qrefcnt_t<source_item_t> *__cdecl ?front_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBAAEBV?$qrefcnt_t_Vsource_item_t____XZ(const qvector<qrefcnt_t<source_item_t>> *__hidden this);
qvector<int> *__cdecl ?front_?$qvector_V?$qvector_H____QEAAAEAV?$qvector_H__XZ(qvector<qvector<int>> *__hidden this);
qvector<int> *__cdecl ?front_?$qvector_V?$qvector_H____QEBAAEBV?$qvector_H__XZ(const qvector<qvector<int>> *__hidden this);
qvector<const char *> *__cdecl ?front_?$qvector_V?$qvector_PEBD____QEAAAEAV?$qvector_PEBD__XZ(qvector<qvector<const char *>> *__hidden this);
qvector<const char *> *__cdecl ?front_?$qvector_V?$qvector_PEBD____QEBAAEBV?$qvector_PEBD__XZ(const qvector<qvector<const char *>> *__hidden this);
qvector<const twinline_t *> *__cdecl ?front_?$qvector_V?$qvector_PEBVtwinline_t______QEAAAEAV?$qvector_PEBVtwinline_t____XZ(qvector<qvector<const twinline_t *>> *__hidden this);
qvector<const twinline_t *> *__cdecl ?front_?$qvector_V?$qvector_PEBVtwinline_t______QEBAAEBV?$qvector_PEBVtwinline_t____XZ(const qvector<qvector<const twinline_t *>> *__hidden this);
qvector<long long> *__cdecl ?front_?$qvector_V?$qvector__J____QEAAAEAV?$qvector__J__XZ(qvector<qvector<long long>> *__hidden this);
qvector<long long> *__cdecl ?front_?$qvector_V?$qvector__J____QEBAAEBV?$qvector__J__XZ(const qvector<qvector<long long>> *__hidden this);
argloc_t *__cdecl ?front_?$qvector_Vargloc_t____QEAAAEAVargloc_t__XZ(qvector<argloc_t> *__hidden this);
argloc_t *__cdecl ?front_?$qvector_Vargloc_t____QEBAAEBVargloc_t__XZ(const qvector<argloc_t> *__hidden this);
intmap_t *__cdecl ?front_?$qvector_Vintmap_t____QEAAAEAVintmap_t__XZ(qvector<intmap_t> *__hidden this);
intmap_t *__cdecl ?front_?$qvector_Vintmap_t____QEBAAEBVintmap_t__XZ(const qvector<intmap_t> *__hidden this);
node_set_t *__cdecl ?front_?$qvector_Vnode_set_t____QEAAAEAVnode_set_t__XZ(qvector<node_set_t> *__hidden this);
node_set_t *__cdecl ?front_?$qvector_Vnode_set_t____QEBAAEBVnode_set_t__XZ(const qvector<node_set_t> *__hidden this);
op_t *__cdecl ?front_?$qvector_Vop_t____QEAAAEAVop_t__XZ(qvector<op_t> *__hidden this);
op_t *__cdecl ?front_?$qvector_Vop_t____QEBAAEBVop_t__XZ(const qvector<op_t> *__hidden this);
rangeset_t *__cdecl ?front_?$qvector_Vrangeset_t____QEAAAEAVrangeset_t__XZ(qvector<rangeset_t> *__hidden this);
rangeset_t *__cdecl ?front_?$qvector_Vrangeset_t____QEBAAEBVrangeset_t__XZ(const qvector<rangeset_t> *__hidden this);
sync_source_t *__cdecl ?front_?$qvector_Vsync_source_t____QEAAAEAVsync_source_t__XZ(qvector<sync_source_t> *__hidden this);
sync_source_t *__cdecl ?front_?$qvector_Vsync_source_t____QEBAAEBVsync_source_t__XZ(const qvector<sync_source_t> *__hidden this);
tinfo_t *__cdecl ?front_?$qvector_Vtinfo_t____QEAAAEAVtinfo_t__XZ(qvector<tinfo_t> *__hidden this);
tinfo_t *__cdecl ?front_?$qvector_Vtinfo_t____QEBAAEBVtinfo_t__XZ(const qvector<tinfo_t> *__hidden this);
tryblk_t *__cdecl ?front_?$qvector_Vtryblk_t____QEAAAEAVtryblk_t__XZ(qvector<tryblk_t> *__hidden this);
tryblk_t *__cdecl ?front_?$qvector_Vtryblk_t____QEBAAEBVtryblk_t__XZ(const qvector<tryblk_t> *__hidden this);
twinline_t *__cdecl ?front_?$qvector_Vtwinline_t____QEAAAEAVtwinline_t__XZ(qvector<twinline_t> *__hidden this);
twinline_t *__cdecl ?front_?$qvector_Vtwinline_t____QEBAAEBVtwinline_t__XZ(const qvector<twinline_t> *__hidden this);
valstr_t *__cdecl ?front_?$qvector_Vvalstr_t____QEAAAEAVvalstr_t__XZ(qvector<valstr_t> *__hidden this);
valstr_t *__cdecl ?front_?$qvector_Vvalstr_t____QEBAAEBVvalstr_t__XZ(const qvector<valstr_t> *__hidden this);
movbpt_code_t *__cdecl ?front_?$qvector_W4movbpt_code_t____QEAAAEAW4movbpt_code_t__XZ(qvector<movbpt_code_t> *__hidden this);
movbpt_code_t *__cdecl ?front_?$qvector_W4movbpt_code_t____QEBAAEBW4movbpt_code_t__XZ(const qvector<movbpt_code_t> *__hidden this);
__int64 *__cdecl ?front_?$qvector__J__QEAAAEA_JXZ(qvector<long long> *__hidden this);
__int64 *__cdecl ?front_?$qvector__J__QEBAAEB_JXZ(const qvector<long long> *__hidden this);
unsigned __int64 *__cdecl ?front_?$qvector__K__QEAAAEA_KXZ(qvector<unsigned long long> *__hidden this);
unsigned __int64 *__cdecl ?front_?$qvector__K__QEBAAEB_KXZ(const qvector<unsigned long long> *__hidden this);
bool *__cdecl ?front_?$qvector__N__QEAAAEA_NXZ(qvector<bool> *__hidden this);
bool *__cdecl ?front_?$qvector__N__QEBAAEB_NXZ(const qvector<bool> *__hidden this);
__int16 *__cdecl ?front_?$qvector__W__QEAAAEA_WXZ(qvector<wchar_t> *__hidden this);
__int16 *__cdecl ?front_?$qvector__W__QEBAAEB_WXZ(const qvector<wchar_t> *__hidden this);
int __cdecl ?front_gdl_graph_t__QEAAHXZ(gdl_graph_t *__hidden this);
fpvalue_error_t __cdecl ?fsub_fpvalue_t__QEAA?AW4fpvalue_error_t__AEBU1__Z(fpvalue_t *__hidden this, const fpvalue_t *y);
ssize_t __cdecl ?func_bounds_processor_t__SA_JPEAHPEAVfunc_t___K_Z(int *possible_return_code, func_t *pfn, ea_t max_func_end_ea);
bool __cdecl ?func_has_stkframe_hole_ida_lowertype_helper_t__UEAA_NAEBVtinfo_t__AEBUfunc_type_data_t___Z(ida_lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *candidate_data);
bool __cdecl ?func_has_stkframe_hole_lowertype_helper_t__UEAA_NAEBVtinfo_t__AEBUfunc_type_data_t___Z(lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *candidate_data);
bool __cdecl ?fwd_lochist_t__QEAA_NI_N_Z(lochist_t *__hidden this, uint32 cnt, bool try_to_unhide);
void __cdecl ?gather_edge_segments_abstract_graph_t__IEBAXAEBV?$qvector_Urow_info_t____AEAUedge_segs_vec_t___Z(const abstract_graph_t *__hidden this, const graph_row_info_t *gri, edge_segs_vec_t *ges);
ssize_t __cdecl ?gen_asm_or_lst_processor_t__SA_J_NPEAU_iobuf__0HPEAX_Z(bool starting, FILE *fp, bool is_asm, int flags, void *outline);
bool __cdecl ?gen_block_cmt_outctx_base_t__UEAA_NPEBDE_Z(outctx_base_t *__hidden this, const char *cmt, color_t color);
bool __cdecl ?gen_border_line_outctx_base_t__UEAA_N_N_Z(outctx_base_t *__hidden this, bool solid);
bool ?gen_cmt_line_outctx_base_t__QEAA_NPEBDZZ(outctx_base_t *__hidden this, const char *format, ...);
bool __cdecl ?gen_cmt_line_v_outctx_base_t__QEAA_NPEBDPEAD_Z(outctx_base_t *__hidden this, const char *format, va_list va);
bool ?gen_collapsed_line_outctx_base_t__QEAA_NPEBDZZ(outctx_base_t *__hidden this, const char *format, ...);
bool __cdecl ?gen_colored_cmt_line_v_outctx_base_t__UEAA_NEPEBDPEAD_Z(outctx_base_t *__hidden this, color_t color, const char *format, va_list va);
void __cdecl ?gen_dot_gdl_graph_t__QEBAXPEAU_iobuf___Z(const gdl_graph_t *__hidden this, FILE *fp);
void __cdecl ?gen_dot_gdl_graph_t__QEBAXPEBD_Z(const gdl_graph_t *__hidden this, const char *file);
bool __cdecl ?gen_empty_line_outctx_base_t__UEAA_NXZ(outctx_base_t *__hidden this);
void __cdecl ?gen_empty_line_without_annotations_outctx_base_t__QEAAXXZ(outctx_base_t *__hidden this);
void __cdecl ?gen_func_footer_outctx_t__UEAAXPEBVfunc_t___Z(outctx_t *__hidden this, const func_t *pfn);
void __cdecl ?gen_func_header_outctx_t__UEAAXPEAVfunc_t___Z(outctx_t *__hidden this, func_t *pfn);
void __cdecl ?gen_gdl_gdl_graph_t__QEBAXPEAU_iobuf___Z(const gdl_graph_t *__hidden this, FILE *fp);
void __cdecl ?gen_gdl_gdl_graph_t__QEBAXPEBD_Z(const gdl_graph_t *__hidden this, const char *file);
void __cdecl ?gen_header_outctx_t__UEAAXHPEBD0_Z(outctx_t *__hidden this, int flags, const char *proc_name, const char *proc_flavour);
void __cdecl ?gen_header_extra_outctx_t__UEAAXXZ(outctx_t *__hidden this);
ssize_t __cdecl ?gen_map_file_processor_t__SA_JPEAHPEAU_iobuf___Z(int *nlines, FILE *fp);
bool ?gen_printf_outctx_base_t__QEAA_NHPEBDZZ(outctx_base_t *__hidden this, int indent, const char *format, ...);
ssize_t __cdecl ?gen_regvar_def_processor_t__SA_JAEAUoutctx_t__PEAUregvar_t___Z(outctx_t *ctx, regvar_t *v);
ssize_t __cdecl ?gen_src_file_lnnum_processor_t__SA_JAEAUoutctx_t__PEBD_K_Z(outctx_t *ctx, const char *file, size_t lnnum);
ssize_t __cdecl ?gen_stkvar_def_processor_t__SA_JAEAUoutctx_t__PEBVmember_t___J_Z(outctx_t *ctx, const member_t *mptr, sval_t v);
bool __cdecl ?gen_vprintf_outctx_base_t__UEAA_NHPEBDPEAD_Z(outctx_base_t *__hidden this, int indent, const char *format, va_list va);
bool __cdecl ?gen_xref_lines_outctx_base_t__UEAA_NXZ(outctx_base_t *__hidden this);
bool __cdecl ?gen_xref_lines_outctx_t__UEAA_NXZ(outctx_t *__hidden this);
int __cdecl ?generate_enumplace_t__UEBAHPEAV?$qvector_V?$_qstring_D____PEAHPEAEPEAIPEAXH_Z(const enumplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);
int __cdecl ?generate_hexplace_t__UEBAHPEAV?$qvector_V?$_qstring_D____PEAHPEAEPEAIPEAXH_Z(const hexplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);
int __cdecl ?generate_idaplace_t__UEBAHPEAV?$qvector_V?$_qstring_D____PEAHPEAEPEAIPEAXH_Z(const idaplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);
int __cdecl ?generate_place_t__UEBAHPEAV?$qvector_V?$_qstring_D____PEAHPEAEPEAIPEAXH_Z(const place_t *__hidden this, qstrvec_t *out, int *out_deflnnum, color_t *out_pfx_color, bgcolor_t *out_bgcolor, void *ud, int maxsize);
int __cdecl ?generate_simpleline_place_t__UEBAHPEAV?$qvector_V?$_qstring_D____PEAHPEAEPEAIPEAXH_Z(const simpleline_place_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);
int __cdecl ?generate_structplace_t__UEBAHPEAV?$qvector_V?$_qstring_D____PEAHPEAEPEAIPEAXH_Z(const structplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);
qrefcnt_t<source_file_t> __cdecl ?get_?$qiterator_V?$qrefcnt_t_Vsource_file_t______UEAA?AV?$qrefcnt_t_Vsource_file_t____XZ(qiterator<qrefcnt_t<source_file_t>> *__hidden this);
qrefcnt_t<source_item_t> __cdecl ?get_?$qiterator_V?$qrefcnt_t_Vsource_item_t______UEAA?AV?$qrefcnt_t_Vsource_item_t____XZ(qiterator<qrefcnt_t<source_item_t>> *__hidden this);
bool __cdecl ?get_bookmarks_t__SA_NPEAUlochist_entry_t__PEAV?$_qstring_D__PEAIPEAX_Z(lochist_entry_t *out_entry, qstring *out_desc, uint32 *index, void *ud);
bool __cdecl ?get_fixup_data_t__QEAA_N_K_Z(fixup_data_t *__hidden this, ea_t source);
const qstring *__cdecl ?get_jobj_t__QEBAAEBV?$_qstring_D__PEBDAEBV2__Z(const jobj_t *__hidden this, const char *k, const qstring *dflt);
int __cdecl ?get_jobj_t__QEBAHPEBDH_Z(const jobj_t *__hidden this, const char *k, int dflt);
const char *__cdecl ?get_jobj_t__QEBAPEBDPEBD0_Z(const jobj_t *__hidden this, const char *k, const char *dflt);
const jobj_t *__cdecl ?get_jobj_t__QEBAPEBU1_PEBDPEBU1__Z(const jobj_t *__hidden this, const char *k, const jobj_t *dflt);
const jarr_t *__cdecl ?get_jobj_t__QEBAPEBUjarr_t__PEBDPEBU2__Z(const jobj_t *__hidden this, const char *k, const jarr_t *dflt);
int64 __cdecl ?get_jobj_t__QEBA_JPEBD_J_Z(const jobj_t *__hidden this, const char *k, int64 dflt);
bool __cdecl ?get_jobj_t__QEBA_NPEAHPEBD_Z(const jobj_t *__hidden this, int *out, const char *k);
bool __cdecl ?get_jobj_t__QEBA_NPEAPEBDPEBD_Z(const jobj_t *__hidden this, const char **out, const char *k);
bool __cdecl ?get_jobj_t__QEBA_NPEAPEBU1_PEBD_Z(const jobj_t *__hidden this, const jobj_t **out, const char *k);
bool __cdecl ?get_jobj_t__QEBA_NPEAPEBUjarr_t__PEBD_Z(const jobj_t *__hidden this, const jarr_t **out, const char *k);
bool __cdecl ?get_jobj_t__QEBA_NPEAV?$_qstring_D__PEBD_Z(const jobj_t *__hidden this, qstring *out, const char *k);
bool __cdecl ?get_jobj_t__QEBA_NPEA_JPEBD_Z(const jobj_t *__hidden this, int64 *out, const char *k);
bool __cdecl ?get_jobj_t__QEBA_NPEA_NPEBD_Z(const jobj_t *__hidden this, bool *out, const char *k);
bool __cdecl ?get_jobj_t__QEBA_NPEBD_N_Z(const jobj_t *__hidden this, const char *k, bool dflt);
bool __cdecl ?get_lochist_t__QEBA_NPEAUlochist_entry_t__I_Z(const lochist_t *__hidden this, lochist_entry_t *out, uint32 index);
ssize_t __cdecl ?get_abi_info_processor_t__SA_JPEAV?$qvector_V?$_qstring_D____0E_Z(qstrvec_t *abi_names, qstrvec_t *abi_opts, comp_t comp);
qstring __cdecl ?get_abspath_dirtree_t__QEBA?AV?$_qstring_D__AEBUdirtree_cursor_t___Z(const dirtree_t *__hidden this, const dirtree_cursor_t *cursor);
qstring __cdecl ?get_abspath_dirtree_t__QEBA?AV?$_qstring_D__PEBD_Z(const dirtree_t *__hidden this, const char *relpath);
int __cdecl ?get_alignment_hexplace_gen_t__UEBAHXZ(const hexplace_gen_t *__hidden this);
int __cdecl ?get_alignment_struc_t__QEBAHXZ(const struc_t *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::allocator_type __cdecl ?get_allocator_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$allocator_U?$pair_$$CBHH_std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::allocator_type __cdecl ?get_allocator_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::allocator_type __cdecl ?get_allocator_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::allocator_type __cdecl ?get_allocator_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$allocator_U?$pair_$$CB_K_K_std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::allocator_type __cdecl ?get_allocator_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$allocator_H_2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::basic_string<char>::allocator_type __cdecl ?get_allocator_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA?AV?$allocator_D_2_XZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::allocator_type __cdecl ?get_allocator_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA?AV?$allocator__S_2_XZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::allocator_type __cdecl ?get_allocator_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA?AV?$allocator__U_2_XZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::allocator_type __cdecl ?get_allocator_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA?AV?$allocator__W_2_XZ(const std::basic_string<wchar_t> *__hidden this);
const jarr_t *__cdecl ?get_arr_jobj_t__QEBAAEBUjarr_t__PEBD_Z(const jobj_t *__hidden this, const char *k);
bool __cdecl ?get_array_details_tinfo_t__QEBA_NPEAUarray_type_data_t___Z(const tinfo_t *__hidden this, array_type_data_t *ai);
tinfo_t __cdecl ?get_array_element_tinfo_t__QEBA?AV1_XZ(const tinfo_t *__hidden this);
int __cdecl ?get_array_nelems_tinfo_t__QEBAHXZ(const tinfo_t *__hidden this);
bool __cdecl ?get_attr_tinfo_t__QEBA_NAEBV?$_qstring_D__PEAVbytevec_t___N_Z(const tinfo_t *__hidden this, const qstring *key, bytevec_t *bv, bool all_attrs);
qstring __cdecl ?get_attrs_dirspec_t__UEBA?AV?$_qstring_D___K_Z(const dirspec_t *__hidden this, inode_t inode);
bool __cdecl ?get_attrs_tinfo_t__QEBA_NPEAV?$qvector_Utype_attr_t_____N_Z(const tinfo_t *__hidden this, type_attrs_t *tav, bool all_attrs);
ssize_t __cdecl ?get_autocmt_processor_t__SA_JPEAV?$_qstring_D__AEBVinsn_t___Z(qstring *buf, const insn_t *insn);
ea_t __cdecl ?get_base_fixup_data_t__QEBA_KXZ(const fixup_data_t *__hidden this);
bgcolor_t __cdecl ?get_bg_color_linearray_t__QEBAIXZ(const linearray_t *__hidden this);
ssize_t __cdecl ?get_bg_color_processor_t__SA_JPEAI_K_Z(bgcolor_t *color, ea_t ea);
argloc_t::biggest_t __cdecl ?get_biggest_argloc_t__QEBA_KXZ(const argloc_t *__hidden this);
int __cdecl ?get_binop_state_outctx_base_t__QEBAHXZ(const outctx_base_t *__hidden this);
bool __cdecl ?get_bitfield_details_tinfo_t__QEBA_NPEAUbitfield_type_data_t___Z(const tinfo_t *__hidden this, bitfield_type_data_t *bi);
int __cdecl ?get_bitness_hexplace_gen_t__UEBAHXZ(const hexplace_gen_t *__hidden this);
bool __cdecl ?get_bom_encoder_t__UEBA_NPEAVbytevec_t___Z(const encoder_t *__hidden this, bytevec_t *out);
bool __cdecl ?get_bool_jobj_t__QEBA_NPEBD_Z(const jobj_t *__hidden this, const char *k);
uint __cdecl ?get_builtin_number_chooser_base_t__QEBAIXZ(const chooser_base_t *__hidden this);
bool __cdecl ?get_button_value_form_actions_t__QEAA_NHPEAV?$_qstring_D___Z(form_actions_t *__hidden this, int field_id, qstring *val);
hexplace_gen_t::byte_kind_t __cdecl ?get_byte_value_hexplace_gen_t__UEBA?AW4byte_kind_t_1__KPEA_KPEA_N_Z(const hexplace_gen_t *__hidden this, ea_t ea, uint64 *out_value, bool *out_edited);
int __cdecl ?get_bytes_per_item_hexplace_gen_t__UEBAHXZ(const hexplace_gen_t *__hidden this);
int __cdecl ?get_call_method_func_type_data_t__QEBAHXZ(const func_type_data_t *__hidden this);
uint32 __cdecl ?get_canon_feature_insn_t__QEBAIAEBUprocessor_t___Z(const insn_t *__hidden this, const processor_t *ph);
const char *__cdecl ?get_canon_mnem_insn_t__QEBAPEBDAEBUprocessor_t___Z(const insn_t *__hidden this, const processor_t *ph);
bool __cdecl ?get_cbgroup_value_form_actions_t__QEAA_NHPEAG_Z(form_actions_t *__hidden this, int field_id, ushort *val);
cm_t __cdecl ?get_cc_func_type_data_t__QEBAEXZ(const func_type_data_t *__hidden this);
cm_t __cdecl ?get_cc_tinfo_t__QEBAEXZ(const tinfo_t *__hidden this);
ssize_t __cdecl ?get_cc_regs_processor_t__SA_JPEAVcallregs_t__E_Z(callregs_t *regs, cm_t cc);
int __cdecl ?get_change_flags_srcinfo_provider_t__UEAAHXZ(srcinfo_provider_t *__hidden this);
bool __cdecl ?get_checkbox_value_form_actions_t__QEAA_NHPEAG_Z(form_actions_t *__hidden this, int field_id, ushort *val);
void *__cdecl ?get_chooser_obj_chooser_base_t__UEAAPEAXXZ(chooser_base_t *__hidden this);
bool __cdecl ?get_chooser_value_form_actions_t__QEAA_NHPEAV?$qvector__K___Z(form_actions_t *__hidden this, int field_id, sizevec_t *val);
int __cdecl ?get_cmtgen_state_outctx_base_t__QEBAHXZ(const outctx_base_t *__hidden this);
const char *__cdecl ?get_cnd_elang_bpt_t__QEBAPEBDXZ(const bpt_t *__hidden this);
size_t __cdecl ?get_cnd_elang_idx_bpt_t__QEBA_KXZ(const bpt_t *__hidden this);
bool __cdecl ?get_code16_mode_processor_t__SA_N_K_Z(ea_t ea);
int __cdecl ?get_colnum_source_item_t__UEBAHXZ(const source_item_t *__hidden this);
bool __cdecl ?get_color_value_form_actions_t__QEAA_NHPEAI_Z(form_actions_t *__hidden this, int field_id, bgcolor_t *val);
bool __cdecl ?get_combobox_value_form_actions_t__QEAA_NHPEAH_Z(form_actions_t *__hidden this, int field_id, int *val);
bool __cdecl ?get_combobox_value_form_actions_t__QEAA_NHPEAV?$_qstring_D___Z(form_actions_t *__hidden this, int field_id, qstring *val);
void __cdecl ?get_connected_components_abstract_graph_t__IEBAXAEAV?$qvector_H___Z(const abstract_graph_t *__hidden this, intvec_t *entries);
size_t __cdecl ?get_count_chooser_base_t__UEBA_KXZ(const chooser_base_t *__hidden this);
ea_t __cdecl ?get_cur_end_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____QEBA_KXZ(const backward_flow_iterator_t<no_regs_t, simple_bfi_t> *__hidden this);
ea_t __cdecl ?get_cur_item_ea_hexplace_gen_t__UEBA_KXZ(const hexplace_gen_t *__hidden this);
void __cdecl ?get_cur_item_text_hexplace_gen_t__UEBAXPEAV?$_qstring_D___Z(const hexplace_gen_t *__hidden this, qstring *out);
const lochist_entry_t *__cdecl ?get_current_lochist_t__QEBAAEBUlochist_entry_t__XZ(const lochist_t *__hidden this);
void *__cdecl ?get_custom_argloc_t__QEBAPEAXXZ(const argloc_t *__hidden this);
bool __cdecl ?get_custom_layout_mutable_graph_t__QEAA_NXZ(mutable_graph_t *__hidden this);
void *__cdecl ?get_data_regval_t__QEAAPEAXXZ(regval_t *__hidden this);
const void *__cdecl ?get_data_regval_t__QEBAPEBXXZ(const regval_t *__hidden this);
hexplace_gen_t::data_kind_t __cdecl ?get_data_kind_hexplace_gen_t__UEBA?AW4data_kind_t_1_XZ(const hexplace_gen_t *__hidden this);
size_t __cdecl ?get_data_size_regval_t__QEBA_KXZ(const regval_t *__hidden this);
ssize_t __cdecl ?get_dbr_opnum_processor_t__SA_JPEAHAEBVinsn_t___Z(int *opnum, const insn_t *insn);
bool __cdecl ?get_debapp_attrs_debugger_t__QEAA_NPEAUdebapp_attrs_t___Z(debugger_t *__hidden this, debapp_attrs_t *out_pattrs);
const void *__cdecl ?get_debmod_extensions_debugger_t__QEAAPEBXXZ(debugger_t *__hidden this);
gdecode_t __cdecl ?get_debug_event_debugger_t__QEAA?AW4gdecode_t__PEAUdebug_event_t__H_Z(debugger_t *__hidden this, debug_event_t *event, int timeout_ms);
uchar __cdecl ?get_declalign_tinfo_t__QEBAEXZ(const tinfo_t *__hidden this);
type_t __cdecl ?get_decltype_tinfo_t__QEBAEXZ(const tinfo_t *__hidden this);
bool __cdecl ?get_desc_bookmarks_t__SA_NPEAV?$_qstring_D__AEBUlochist_entry_t__IPEAX_Z(qstring *out, const lochist_entry_t *e, uint32 index, void *ud);
const char *__cdecl ?get_desc_fixup_data_t__QEBAPEBDPEAV?$_qstring_D___K_Z(const fixup_data_t *__hidden this, qstring *buf, ea_t source);
ssize_t __cdecl ?get_dir_size_dirtree_t__QEBA_J_K_Z(const dirtree_t *__hidden this, diridx_t diridx);
dirtree_t *__cdecl ?get_dirtree_chooser_multi_t__UEAAPEAVdirtree_t__XZ(chooser_multi_t *__hidden this);
dirtree_t *__cdecl ?get_dirtree_chooser_t__UEAAPEAVdirtree_t__XZ(chooser_t *__hidden this);
dirtree_id_t __cdecl ?get_dirtree_id_bookmarks_t__SA?AW4dirtree_id_t__AEBUlochist_entry_t__PEAX_Z(const lochist_entry_t *e, void *ud);
int __cdecl ?get_dlnnum_linearray_t__QEBAHXZ(const linearray_t *__hidden this);
tid_t __cdecl ?get_dtid_custom_data_type_ids_t__QEBA_KXZ(const custom_data_type_ids_t *__hidden this);
int __cdecl ?get_dtype_nbits_jump_pattern_t__KAHE_Z(op_dtype_t dtype);
ea_t __cdecl ?get_ea_argloc_t__QEBA_KXZ(const argloc_t *__hidden this);
ea_t __cdecl ?get_ea_chooser_base_t__UEBA_K_K_Z(const chooser_base_t *__hidden this, size_t);
ea_t __cdecl ?get_ea_source_item_t__UEBA_KXZ(const source_item_t *__hidden this);
bool __cdecl ?get_ea_value_form_actions_t__QEAA_NHPEA_K_Z(form_actions_t *__hidden this, int field_id, ea_t *val);
const edge_info_t *__cdecl ?get_edge_abstract_graph_t__QEBAPEBUedge_info_t__Uedge_t___Z(const abstract_graph_t *__hidden this, edge_t e);
edge_info_t *__cdecl ?get_edge_abstract_graph_t__UEAAPEAUedge_info_t__Uedge_t___Z(abstract_graph_t *__hidden this, edge_t e);
edge_info_t *__cdecl ?get_edge_mutable_graph_t__UEAAPEAUedge_info_t__Uedge_t___Z(mutable_graph_t *__hidden this, edge_t e);
bgcolor_t __cdecl ?get_edge_color_gdl_graph_t__UEBAIHH_Z(const gdl_graph_t *__hidden this, int i, int j);
const edge_info_t *__cdecl ?get_edge_ports_abstract_graph_t__QEBAPEBUedge_info_t__Uedge_t__AEAUpoint_t__1_Z(const abstract_graph_t *__hidden this, edge_t e, point_t *s, point_t *d);
void __cdecl ?get_encoding_hexplace_gen_t__UEBAXPEAV?$_qstring_D___Z(const hexplace_gen_t *__hidden this, qstring *out);
int __cdecl ?get_end_colnum_source_item_t__UEBAHXZ(const source_item_t *__hidden this);
int __cdecl ?get_end_lnnum_source_item_t__UEBAHXZ(const source_item_t *__hidden this);
qstring __cdecl ?get_entry_attrs_dirtree_t__QEBA?AV?$_qstring_D__AEBUdirentry_t___Z(const dirtree_t *__hidden this, const direntry_t *de);
qstring __cdecl ?get_entry_name_dirtree_t__QEBA?AV?$_qstring_D__AEBUdirentry_t__I_Z(const dirtree_t *__hidden this, const direntry_t *de, uint32 name_flags);
type_t __cdecl ?get_enum_base_type_tinfo_t__QEBAEXZ(const tinfo_t *__hidden this);
bool __cdecl ?get_enum_details_tinfo_t__QEBA_NPEAUenum_type_data_t___Z(const tinfo_t *__hidden this, enum_type_data_t *ei);
bool __cdecl ?get_expr_tinfo_source_item_t__UEBA_NPEAVtinfo_t___Z(const source_item_t *__hidden this, tinfo_t *tif);
uint32 __cdecl ?get_final_ordinal_tinfo_t__QEBAIXZ(const tinfo_t *__hidden this);
bool __cdecl ?get_final_type_name_tinfo_t__QEBA_NPEAV?$_qstring_D___Z(const tinfo_t *__hidden this, qstring *out);
int __cdecl ?get_first_subgraph_node_mutable_graph_t__QEBAHH_Z(const mutable_graph_t *__hidden this, int group);
uint32 __cdecl ?get_flags_fixup_data_t__QEBAIXZ(const fixup_data_t *__hidden this);
uint32 __cdecl ?get_flags_for_valid_node_info_t__QEBAIXZ(const node_info_t *__hidden this);
int __cdecl ?get_focused_field_form_actions_t__UEAAHXZ(form_actions_t *__hidden this);
ssize_t __cdecl ?get_frame_retsize_processor_t__SA_JPEAHPEBVfunc_t___Z(int *retsize, const func_t *pfn);
bool __cdecl ?get_func_details_tinfo_t__QEBA_NPEAUfunc_type_data_t__W4gtd_func_t___Z(const tinfo_t *__hidden this, func_type_data_t *fi, gtd_func_t gtd);
int __cdecl ?get_func_purged_bytes_ida_lowertype_helper_t__UEAAHAEBVtinfo_t__AEBUfunc_type_data_t___Z(ida_lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *);
int __cdecl ?get_func_purged_bytes_lowertype_helper_t__UEAAHAEBVtinfo_t__AEBUfunc_type_data_t___Z(lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *candidate_data);
bool __cdecl ?get_graph_groups_mutable_graph_t__QEAA_NXZ(mutable_graph_t *__hidden this);
const fixup_handler_t *__cdecl ?get_handler_fixup_data_t__QEBAPEBUfixup_handler_t__XZ(const fixup_data_t *__hidden this);
bool __cdecl ?get_hint_source_item_t__UEBA_NPEAV?$_qstring_D__PEBVeval_ctx_t__PEAH_Z(const source_item_t *__hidden this, qstring *hint, const eval_ctx_t *ctx, int *nlines);
const char *__cdecl ?get_id_dirtree_t__QEBAPEBDXZ(const dirtree_t *__hidden this);
ssize_t __cdecl ?get_idd_opinfo_processor_t__SA_JPEAUidd_opinfo_t___KHHP6AAEBUregval_t__PEBDPEBU3__ZAEBU3__Z(idd_opinfo_t *opinf, ea_t ea, int n, int thread_id, processor_t::regval_getter_t *_getreg, const regval_t *regvalues);
bool __cdecl ?get_ident_value_form_actions_t__QEAA_NHPEAV?$_qstring_D___Z(form_actions_t *__hidden this, int field_id, qstring *val);
char __cdecl ?get_ignore_micro_ignore_micro_t__QEBAD_K_Z(const ignore_micro_t *__hidden this, ea_t ea);
size_t __cdecl ?get_immvals_outctx_t__UEAA_KPEA_KH_Z(outctx_t *__hidden this, uval_t *out, int i);
inode_t __cdecl ?get_inode_dirspec_t__UEAA_KPEBD0_Z(dirspec_t *__hidden this, const char *dirpath, const char *name);
bool __cdecl ?get_int64_value_form_actions_t__QEAA_NHPEA_J_Z(form_actions_t *__hidden this, int field_id, int64 *val);
hexplace_gen_t::int_format_t __cdecl ?get_int_format_hexplace_gen_t__UEBA?AW4int_format_t_1_XZ(const hexplace_gen_t *__hidden this);
bool __cdecl ?get_item_bounds_source_item_t__UEBA_NPEAVrangeset_t___Z(const source_item_t *__hidden this, rangeset_t *set);
void __cdecl ?get_item_index_chooser_multi_t__UEBAXPEAV?$qvector__K__PEBX_Z(const chooser_multi_t *__hidden this, sizevec_t *sel, const void *item_data);
ssize_t __cdecl ?get_item_index_chooser_t__UEBA_JPEBX_Z(const chooser_t *__hidden this, const void *item_data);
src_item_kind_t __cdecl ?get_item_kind_source_item_t__UEBA?AW4src_item_kind_t__PEBVeval_ctx_t___Z(const source_item_t *__hidden this, const eval_ctx_t *);
int __cdecl ?get_item_width_hexplace_gen_t__UEBAH_K_Z(const hexplace_gen_t *__hidden this, ea_t ea);
int __cdecl ?get_items_per_line_hexplace_gen_t__UEBAHXZ(const hexplace_gen_t *__hidden this);
bool __cdecl ?get_jrange_vrange_switch_info_t__QEBA_NPEAUrange_t__0_Z(const switch_info_t *__hidden this, range_t *jrange, range_t *vrange);
int __cdecl ?get_jtable_element_size_switch_info_t__QEBAHXZ(const switch_info_t *__hidden this);
int __cdecl ?get_jtable_size_switch_info_t__QEBAHXZ(const switch_info_t *__hidden this);
fpvalue_kind_t __cdecl ?get_kind_fpvalue_t__QEBA?AW4fpvalue_kind_t__XZ(const fpvalue_t *__hidden this);
uchar __cdecl ?get_kind_tryblk_t__QEBAEXZ(const tryblk_t *__hidden this);
bool __cdecl ?get_label_value_form_actions_t__QEAA_NHPEAD_K_Z(form_actions_t *__hidden this, int field_id, char *buf, const size_t bufsize);
member_t *__cdecl ?get_last_member_struc_t__QEAAPEAVmember_t__XZ(struc_t *__hidden this);
const member_t *__cdecl ?get_last_member_struc_t__QEBAPEBVmember_t__XZ(const struc_t *__hidden this);
int __cdecl ?get_line_len_hexplace_gen_t__UEBAH_K_Z(const hexplace_gen_t *__hidden this, ea_t ea);
int __cdecl ?get_linecnt_linearray_t__QEBAHXZ(const linearray_t *__hidden this);
int __cdecl ?get_lnnum_source_item_t__UEBAHXZ(const source_item_t *__hidden this);
bool __cdecl ?get_location_source_item_t__UEBA_NPEAVargloc_t__PEBVeval_ctx_t___Z(const source_item_t *__hidden this, argloc_t *, const eval_ctx_t *);
sval_t __cdecl ?get_lowcase_switch_info_t__QEBA_JXZ(const switch_info_t *__hidden this);
ssize_t __cdecl ?get_macro_insn_head_processor_t__SA_JPEA_K_K_Z(ea_t *head, ea_t ip);
drc_t __cdecl ?get_memory_info_debugger_t__QEAA?AW4drc_t__AEAV?$qvector_Umemory_info_t____PEAV?$_qstring_D___Z(debugger_t *__hidden this, meminfo_vec_t *ranges, qstring *errbuf);
bool __cdecl ?get_methods_tinfo_t__QEBA_NPEAUudtmembervec_t___Z(const tinfo_t *__hidden this, udtmembervec_t *methods);
type_t __cdecl ?get_modifiers_tinfo_t__QEBAEXZ(const tinfo_t *__hidden this);
bool __cdecl ?get_name_dirspec_t__UEAA_NPEAV?$_qstring_D___KI_Z(dirspec_t *__hidden this, qstring *out, inode_t inode, uint32 name_flags);
ssize_t __cdecl ?get_name_netnode__QEBA_JPEAV?$_qstring_D___Z(const netnode *__hidden this, qstring *buf);
bool __cdecl ?get_name_source_item_t__UEBA_NPEAV?$_qstring_D___Z(const source_item_t *__hidden this, qstring *buf);
bool __cdecl ?get_named_type_tinfo_t__QEAA_NPEBUtil_t__PEBDE_N2_Z(tinfo_t *__hidden this, const til_t *til, const char *name, type_t decl_type, bool resolve, bool try_ordinal);
int __cdecl ?get_nargs_tinfo_t__QEBAHXZ(const tinfo_t *__hidden this);
uint8 __cdecl ?get_next_byte_insn_t__QEAAEXZ(insn_t *__hidden this);
uint32 __cdecl ?get_next_dword_insn_t__QEAAIXZ(insn_t *__hidden this);
uint64 __cdecl ?get_next_qword_insn_t__QEAA_KXZ(insn_t *__hidden this);
int __cdecl ?get_next_subgraph_node_mutable_graph_t__QEBAHHH_Z(const mutable_graph_t *__hidden this, int group, int current);
bool __cdecl ?get_next_type_name_tinfo_t__QEBA_NPEAV?$_qstring_D___Z(const tinfo_t *__hidden this, qstring *out);
uint16 __cdecl ?get_next_word_insn_t__QEAAGXZ(insn_t *__hidden this);
bgcolor_t __cdecl ?get_node_color_gdl_graph_t__UEBAIH_Z(const gdl_graph_t *__hidden this, int n);
int __cdecl ?get_node_group_mutable_graph_t__QEBAHH_Z(const mutable_graph_t *__hidden this, int node);
char *__cdecl ?get_node_label_gdl_graph_t__UEBAPEADPEADHH_Z(const gdl_graph_t *__hidden this, char *iobuf, int iobufsize, int n);
char *__cdecl ?get_node_label_qflow_chart_t__UEBAPEADPEADHH_Z(const qflow_chart_t *__hidden this, char *iobuf, int iobufsize, int n);
int __cdecl ?get_node_representative_mutable_graph_t__QEAAHH_Z(mutable_graph_t *__hidden this, int node);
tinfo_t __cdecl ?get_nth_arg_tinfo_t__QEBA?AV1_H_Z(const tinfo_t *__hidden this, int n);
int64 __cdecl ?get_num_jobj_t__QEBA_JPEBD_Z(const jobj_t *__hidden this, const char *k);
bool __cdecl ?get_number_cfgopt_t__QEBA_NPEA_JPEAVlexer_t__AEBUtoken_t__HH_Z(const cfgopt_t *__hidden this, int64 *out, lexer_t *lx, const token_t *_t, int range_bit, int usign_bit);
bool __cdecl ?get_numbered_type_tinfo_t__QEAA_NPEBUtil_t__IE_N_Z(tinfo_t *__hidden this, const til_t *til, uint32 ordinal, type_t decl_type, bool resolve);
const jobj_t *__cdecl ?get_obj_jobj_t__QEBAAEBU1_PEBD_Z(const jobj_t *__hidden this, const char *k);
const void *__cdecl ?get_obj_id_chooser_base_t__UEBAPEBXPEA_K_Z(const chooser_base_t *__hidden this, size_t *len);
tinfo_t __cdecl ?get_onemember_type_tinfo_t__QEBA?AV1_XZ(const tinfo_t *__hidden this);
ssize_t __cdecl ?get_operand_string_processor_t__SA_JPEAV?$_qstring_D__AEBVinsn_t__H_Z(qstring *buf, const insn_t *insn, int opnum);
uint32 __cdecl ?get_ordinal_tinfo_t__QEBAIXZ(const tinfo_t *__hidden this);
source_item_ptr __cdecl ?get_parent_source_item_t__UEBA?AV?$qrefcnt_t_Vsource_item_t____W4src_item_kind_t___Z(const source_item_t *__hidden this, src_item_kind_t max_kind);
dirtree_cursor_t __cdecl ?get_parent_cursor_dirtree_t__QEBA?AUdirtree_cursor_t__AEBU2__Z(const dirtree_t *__hidden this, const dirtree_cursor_t *cursor);
const char *__cdecl ?get_path_source_file_t__UEAAPEBDPEAV?$_qstring_D___Z(source_file_t *__hidden this, qstring *errbuf);
bool __cdecl ?get_path_value_form_actions_t__QEAA_NHPEAD_K_Z(form_actions_t *__hidden this, int field_id, char *buf, const size_t bufsize);
bgcolor_t __cdecl ?get_pfx_color_linearray_t__QEBAIXZ(const linearray_t *__hidden this);
place_t *__cdecl ?get_place_linearray_t__QEBAPEAVplace_t__XZ(const linearray_t *__hidden this);
int __cdecl ?get_place_id_lochist_t__QEBAHXZ(const lochist_t *__hidden this);
tinfo_t __cdecl ?get_pointed_object_tinfo_t__QEBA?AV1_XZ(const tinfo_t *__hidden this);
int __cdecl ?get_proc_index_processor_t__QEAAHXZ(processor_t *__hidden this);
drc_t __cdecl ?get_processes_debugger_t__QEAA?AW4drc_t__PEAV?$qvector_Uprocess_info_t____PEAV?$_qstring_D___Z(debugger_t *__hidden this, procinfo_vec_t *procs, qstring *errbuf);
srcinfo_provider_t *__cdecl ?get_provider_source_file_t__UEBAPEAVsrcinfo_provider_t__XZ(const source_file_t *__hidden this);
srcinfo_provider_t *__cdecl ?get_provider_source_item_t__UEBAPEAVsrcinfo_provider_t__XZ(const source_item_t *__hidden this);
bool __cdecl ?get_ptr_details_tinfo_t__QEBA_NPEAUptr_type_data_t___Z(const tinfo_t *__hidden this, ptr_type_data_t *pi);
tinfo_t __cdecl ?get_ptrarr_object_tinfo_t__QEBA?AV1_XZ(const tinfo_t *__hidden this);
int __cdecl ?get_ptrarr_objsize_tinfo_t__QEBAHXZ(const tinfo_t *__hidden this);
int __cdecl ?get_quick_filter_initial_mode_chooser_base_t__QEBAHXZ(const chooser_base_t *__hidden this);
bool __cdecl ?get_radiobutton_value_form_actions_t__QEAA_NHPEAG_Z(form_actions_t *__hidden this, int field_id, ushort *val);
ssize_t __cdecl ?get_rank_dirtree_t__QEBA_J_KAEBUdirentry_t___Z(const dirtree_t *__hidden this, diridx_t diridx, const direntry_t *de);
bool __cdecl ?get_rbgroup_value_form_actions_t__QEAA_NHPEAG_Z(form_actions_t *__hidden this, int field_id, ushort *val);
void __cdecl ?get_ready_srcinfo_provider_t__UEAAXXZ(srcinfo_provider_t *__hidden this);
type_t __cdecl ?get_realtype_tinfo_t__QEBAE_N_Z(const tinfo_t *__hidden this, bool full);
ssize_t __cdecl ?get_reg_accesses_processor_t__SA_JPEAUreg_accesses_t__AEBVinsn_t__H_Z(reg_accesses_t *accvec, const insn_t *insn, int flags);
const char *__cdecl ?get_reg_info_processor_t__SAPEBDPEBDPEAVbitrange_t___Z(const char *regname, bitrange_t *bitrange);
ssize_t __cdecl ?get_reg_name_processor_t__SA_JPEAV?$_qstring_D__H_KH_Z(qstring *buf, int reg, size_t width, int reghi);
uint32 __cdecl ?get_reginfo_argloc_t__QEBAIXZ(const argloc_t *__hidden this);
const char *__cdecl ?get_register_sync_source_t__QEBAPEBDXZ(const sync_source_t *__hidden this);
tinfo_t __cdecl ?get_rettype_tinfo_t__QEBA?AV1_XZ(const tinfo_t *__hidden this);
void __cdecl ?get_row_chooser_base_t__UEBAXPEAV?$qvector_V?$_qstring_D____PEAHPEAUchooser_item_attrs_t___K_Z(const chooser_base_t *__hidden this, qstrvec_t *out, int *out_icon, chooser_item_attrs_t *out_attrs, size_t n);
rrel_t *__cdecl ?get_rrel_argloc_t__QEAAAEAUrrel_t__XZ(argloc_t *__hidden this);
const rrel_t *__cdecl ?get_rrel_argloc_t__QEBAAEBUrrel_t__XZ(const argloc_t *__hidden this);
int __cdecl ?get_segm_bitness_processor_t__QEBAHXZ(const processor_t *__hidden this);
bool __cdecl ?get_segment_value_form_actions_t__QEAA_NHPEA_K_Z(form_actions_t *__hidden this, int field_id, sel_t *val);
int __cdecl ?get_shift_switch_info_t__QEBAHXZ(const switch_info_t *__hidden this);
type_sign_t __cdecl ?get_sign_tinfo_t__QEBAHXZ(const tinfo_t *__hidden this);
bool __cdecl ?get_signed_value_form_actions_t__QEAA_NHPEA_J_Z(form_actions_t *__hidden this, int field_id, sval_t *val);
ssize_t __cdecl ?get_simd_types_processor_t__SA_JPEAXPEBUsimd_info_t__PEBVargloc_t___N_Z(void *out, const simd_info_t *simd_attrs, const argloc_t *argloc, bool create_tifs);
int __cdecl ?get_size_bpt_t__QEBAHXZ(const bpt_t *__hidden this);
asize_t __cdecl ?get_size_member_t__QEBA_KXZ(const member_t *__hidden this);
asize_t __cdecl ?get_size_source_item_t__UEBA_KXZ(const source_item_t *__hidden this);
size_t __cdecl ?get_size_tinfo_t__QEBA_KPEAIH_Z(const tinfo_t *__hidden this, uint32 *p_effalign, int gts_code);
ea_t __cdecl ?get_soff_member_t__QEBA_KXZ(const member_t *__hidden this);
source_file_iterator __cdecl ?get_source_files_source_item_t__UEAA?AV?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________XZ(source_item_t *__hidden this);
bool __cdecl ?get_srcinfo_path_debugger_t__QEAA_NPEAV?$_qstring_D___K_Z(debugger_t *__hidden this, qstring *path, ea_t base);
ssize_t __cdecl ?get_stkarg_area_info_processor_t__SA_JPEAUstkarg_area_info_t__E_Z(stkarg_area_info_t *out, cm_t cc);
member_t *__cdecl ?get_stkvar_outctx_base_t__UEAAPEAVmember_t__AEBVop_t___KPEA_JPEAH_Z(outctx_base_t *__hidden this, const op_t *, uval_t, sval_t *, int *);
int __cdecl ?get_stkvar_scale_processor_t__QEAAHXZ(processor_t *__hidden this);
ssize_t ?get_stkvar_scale_factor_processor_t__SA_JXZ(void);
tinfo_t __cdecl ?get_stock_tinfo_t__SA?AV1_W4stock_type_id_t___Z(stock_type_id_t id);
const char *__cdecl ?get_str_jobj_t__QEBAPEBDPEBD_Z(const jobj_t *__hidden this, const char *k);
bool __cdecl ?get_string_value_form_actions_t__QEAA_NHPEAD_K_Z(form_actions_t *__hidden this, int field_id, char *buf, const size_t bufsize);
bool __cdecl ?get_string_value_form_actions_t__QEAA_NHPEAV?$_qstring_D___Z(form_actions_t *__hidden this, int field_id, qstring *val);
const place_t *__cdecl ?get_template_place_lochist_t__QEBAPEBVplace_t__XZ(const lochist_t *__hidden this);
bool __cdecl ?get_text_value_form_actions_t__QEAA_NHPEAUtextctrl_info_t___Z(form_actions_t *__hidden this, int field_id, textctrl_info_t *val);
const opinfo_t *__cdecl ?get_ti_printop_t__QEBAPEBTopinfo_t__XZ(const printop_t *__hidden this);
const til_t *__cdecl ?get_til_tinfo_t__QEBAPEBUtil_t__XZ(const tinfo_t *__hidden this);
fixup_type_t __cdecl ?get_type_fixup_data_t__QEBAGXZ(const fixup_data_t *__hidden this);
bool __cdecl ?get_type_details_tinfo_t__AEBA_NEPEAX_Z(const tinfo_t *__hidden this, type_t bt2, void *buf);
bool __cdecl ?get_type_name_tinfo_t__QEBA_NPEAV?$_qstring_D___Z(const tinfo_t *__hidden this, qstring *out);
void *__cdecl ?get_ud_form_actions_t__UEAAPEAXXZ(form_actions_t *__hidden this);
bool __cdecl ?get_udt_details_tinfo_t__QEBA_NPEAUudt_type_data_t__W4gtd_udt_t___Z(const tinfo_t *__hidden this, udt_type_data_t *udt, gtd_udt_t gtd);
int __cdecl ?get_udt_nmembers_tinfo_t__QEBAHXZ(const tinfo_t *__hidden this);
bool __cdecl ?get_uint64_value_form_actions_t__QEAA_NHPEA_K_Z(form_actions_t *__hidden this, int field_id, uint64 *val);
size_t __cdecl ?get_unpadded_size_tinfo_t__QEBA_KXZ(const tinfo_t *__hidden this);
bool __cdecl ?get_unsigned_value_form_actions_t__QEAA_NHPEA_K_Z(form_actions_t *__hidden this, int field_id, uval_t *val);
void __cdecl ?get_user_defined_prefix_user_defined_prefix_t__UEAAXPEAV?$_qstring_D___KAEBVinsn_t__HHPEBD_Z(user_defined_prefix_t *__hidden this, qstring *vout, ea_t ea, const insn_t *insn, int lnnum, int indent, const char *line);
uint64 __cdecl ?get_uval_lex_value_t__QEBA_KXZ(const lex_value_t *__hidden this);
int64 __cdecl ?get_val_lex_value_t__QEBA_JXZ(const lex_value_t *__hidden this);
uval_t __cdecl ?get_value_fixup_data_t__QEBA_K_K_Z(const fixup_data_t *__hidden this, ea_t ea);
jvalue_t *__cdecl ?get_value_jobj_t__QEAAPEAUjvalue_t__PEBDW4jtype_t___Z(jobj_t *__hidden this, const char *k, jtype_t t);
const jvalue_t *__cdecl ?get_value_jobj_t__QEBAPEBUjvalue_t__PEBDW4jtype_t___Z(const jobj_t *__hidden this, const char *k, jtype_t t);
const jvalue_t *__cdecl ?get_value_or_fail_jobj_t__QEBAPEBUjvalue_t__PEBDW4jtype_t___Z(const jobj_t *__hidden this, const char *k, jtype_t t);
jvalue_t *__cdecl ?get_value_or_new_jobj_t__QEAAPEAUjvalue_t__PEBD_Z(jobj_t *__hidden this, const char *key);
uint8 __cdecl ?get_version_srcinfo_provider_t__QEBAEXZ(const srcinfo_provider_t *__hidden this);
int __cdecl ?get_version_switch_info_t__QEBAHXZ(const switch_info_t *__hidden this);
int __cdecl ?get_vtable_element_size_switch_info_t__QEBAHXZ(const switch_info_t *__hidden this);
cref_t __cdecl ?get_waiting_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____IEAA?AW4cref_t__XZ(backward_flow_iterator_t<no_regs_t, simple_bfi_t> *__hidden this);
const TWidget *__cdecl ?get_widget_sync_source_t__QEBAPEBVTWidget__XZ(const sync_source_t *__hidden this);
const TWidget **__cdecl ?get_widget_ptr_storage_sync_source_t__AEBAPEAPEBVTWidget__XZ(const sync_source_t *__hidden this);
int __cdecl ?get_xrefgen_state_outctx_base_t__QEBAHXZ(const outctx_base_t *__hidden this);
void *__cdecl ?getblob_netnode__QEAAPEAXPEAXPEA_K_KE_Z(netnode *__hidden this, void *buf, size_t *bufsize, nodeidx_t _start, uchar tag);
ssize_t __cdecl ?getblob_netnode__QEAA_JPEAV?$_qstring_D___KE_Z(netnode *__hidden this, qstring *buf, nodeidx_t _start, uchar tag);
void *__cdecl ?getblob_ea_netnode__QEAAPEAXPEAXPEA_K_KE_Z(netnode *__hidden this, void *buf, size_t *bufsize, ea_t ea, uchar tag);
int __cdecl ?getlines_linearray_t__AEAAHXZ(linearray_t *__hidden this);
const range_t *__cdecl ?getrange_rangeset_t__QEBAAEBUrange_t__H_Z(const rangeset_t *__hidden this, int idx);
ssize_t __cdecl ?getreg_processor_t__SA_JPEA_KH_Z(uval_t *rv, int regnum);
node_iterator *__cdecl ?goup_node_iterator__AEAAAEAV1_XZ(node_iterator *__hidden this);
ssize_t ?grcall_abstract_graph_t__QEAA_JHZZ(abstract_graph_t *__hidden this, int code, ...);
bool __cdecl ?groups_are_present_mutable_graph_t__QEBA_NXZ(const mutable_graph_t *__hidden this);
void __cdecl ?grow_?$qvector_D__QEAAXAEBD_Z(qvector<char> *__hidden this, char *x);
void __cdecl ?grow_?$qvector_E__QEAAXAEBE_Z(qvector<unsigned char> *__hidden this, unsigned __int8 *x);
void __cdecl ?grow_?$qvector_H__QEAAXAEBH_Z(qvector<int> *__hidden this, int *x);
void __cdecl ?grow_?$qvector_I__QEAAXAEBI_Z(qvector<unsigned int> *__hidden this, unsigned int *x);
void __cdecl ?grow_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAXAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
void __cdecl ?grow_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAXAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
void __cdecl ?grow_?$qvector_PEAUbpt_t____QEAAXAEBQEAUbpt_t___Z(qvector<bpt_t *> *__hidden this, bpt_t **x);
void __cdecl ?grow_?$qvector_PEAUextlang_t____QEAAXAEBQEAUextlang_t___Z(qvector<extlang_t *> *__hidden this, extlang_t **x);
void __cdecl ?grow_?$qvector_PEAUline_rendering_output_entry_t____QEAAXAEBQEAUline_rendering_output_entry_t___Z(qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
void __cdecl ?grow_?$qvector_PEAVsnapshot_t____QEAAXAEBQEAVsnapshot_t___Z(qvector<snapshot_t *> *__hidden this, snapshot_t **x);
void __cdecl ?grow_?$qvector_PEBD__QEAAXAEBQEBD_Z(qvector<const char *> *__hidden this, const char **x);
void __cdecl ?grow_?$qvector_PEBUbpt_t____QEAAXAEBQEBUbpt_t___Z(qvector<const bpt_t *> *__hidden this, const bpt_t **x);
void __cdecl ?grow_?$qvector_PEBVrangeset_t____QEAAXAEBQEBVrangeset_t___Z(qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
void __cdecl ?grow_?$qvector_PEBVtwinline_t____QEAAXAEBQEBVtwinline_t___Z(qvector<const twinline_t *> *__hidden this, const twinline_t **x);
void __cdecl ?grow_?$qvector_Uargpart_t____QEAAXAEBUargpart_t___Z(qvector<argpart_t> *__hidden this, argpart_t *x);
void __cdecl ?grow_?$qvector_Ubpt_t____QEAAXAEBUbpt_t___Z(qvector<bpt_t> *__hidden this, bpt_t *x);
void __cdecl ?grow_?$qvector_Ubptaddrs_t____QEAAXAEBUbptaddrs_t___Z(qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
void __cdecl ?grow_?$qvector_Ucall_stack_info_t____QEAAXAEBUcall_stack_info_t___Z(qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
void __cdecl ?grow_?$qvector_Ucatch_t____QEAAXAEBUcatch_t___Z(qvector<catch_t> *__hidden this, catch_t *x);
void __cdecl ?grow_?$qvector_Ucfgopt_set_t____QEAAXAEBUcfgopt_set_t___Z(qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
void __cdecl ?grow_?$qvector_Uchannel_redir_t____QEAAXAEBUchannel_redir_t___Z(qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
void __cdecl ?grow_?$qvector_Ucliopt_t____QEAAXAEBUcliopt_t___Z(qvector<cliopt_t> *__hidden this, cliopt_t *x);
void __cdecl ?grow_?$qvector_Ucompiled_binpat_t____QEAAXAEBUcompiled_binpat_t___Z(qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
void __cdecl ?grow_?$qvector_Udebug_event_t____QEAAXAEBUdebug_event_t___Z(qvector<debug_event_t> *__hidden this, debug_event_t *x);
void __cdecl ?grow_?$qvector_Udirentry_t____QEAAXAEBUdirentry_t___Z(qvector<direntry_t> *__hidden this, direntry_t *x);
void __cdecl ?grow_?$qvector_Udirtree_cursor_t____QEAAXAEBUdirtree_cursor_t___Z(qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
void __cdecl ?grow_?$qvector_Uea_name_t____QEAAXAEBUea_name_t___Z(qvector<ea_name_t> *__hidden this, ea_name_t *x);
void __cdecl ?grow_?$qvector_Uedge_t____QEAAXAEBUedge_t___Z(qvector<edge_t> *__hidden this, edge_t *x);
void __cdecl ?grow_?$qvector_Uenum_member_t____QEAAXAEBUenum_member_t___Z(qvector<enum_member_t> *__hidden this, enum_member_t *x);
void __cdecl ?grow_?$qvector_Uexception_info_t____QEAAXAEBUexception_info_t___Z(qvector<exception_info_t> *__hidden this, exception_info_t *x);
void __cdecl ?grow_?$qvector_Ufixup_info_t____QEAAXAEBUfixup_info_t___Z(qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
void __cdecl ?grow_?$qvector_Ufuncarg_t____QEAAXAEBUfuncarg_t___Z(qvector<funcarg_t> *__hidden this, funcarg_t *x);
void __cdecl ?grow_?$qvector_Ugroup_crinfo_t____QEAAXAEBUgroup_crinfo_t___Z(qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
void __cdecl ?grow_?$qvector_Uidc_global_t____QEAAXAEBUidc_global_t___Z(qvector<idc_global_t> *__hidden this, idc_global_t *x);
void __cdecl ?grow_?$qvector_Uidp_desc_t____QEAAXAEBUidp_desc_t___Z(qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
void __cdecl ?grow_?$qvector_Uidp_name_t____QEAAXAEBUidp_name_t___Z(qvector<idp_name_t> *__hidden this, idp_name_t *x);
void __cdecl ?grow_?$qvector_Uioport_bit_t____QEAAXAEBUioport_bit_t___Z(qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
void __cdecl ?grow_?$qvector_Uioport_t____QEAAXAEBUioport_t___Z(qvector<ioport_t> *__hidden this, ioport_t *x);
void __cdecl ?grow_?$qvector_Ujvalue_t____QEAAXAEBUjvalue_t___Z(qvector<jvalue_t> *__hidden this, jvalue_t *x);
void __cdecl ?grow_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAXAEBUkeywords_style_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
void __cdecl ?grow_?$qvector_Ukvp_t____QEAAXAEBUkvp_t___Z(qvector<kvp_t> *__hidden this, kvp_t *x);
void __cdecl ?grow_?$qvector_Ulochist_entry_t____QEAAXAEBUlochist_entry_t___Z(qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
void __cdecl ?grow_?$qvector_Ulowcnd_t____QEAAXAEBUlowcnd_t___Z(qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
void __cdecl ?grow_?$qvector_Umemory_info_t____QEAAXAEBUmemory_info_t___Z(qvector<memory_info_t> *__hidden this, memory_info_t *x);
void __cdecl ?grow_?$qvector_Umemreg_info_t____QEAAXAEBUmemreg_info_t___Z(qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
void __cdecl ?grow_?$qvector_Umodinfo_t____QEAAXAEBUmodinfo_t___Z(qvector<modinfo_t> *__hidden this, modinfo_t *x);
void __cdecl ?grow_?$qvector_Umovbpt_info_t____QEAAXAEBUmovbpt_info_t___Z(qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
void __cdecl ?grow_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAXAEBUmulticmt_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
void __cdecl ?grow_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAXAEBUplain_char_ptr_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
void __cdecl ?grow_?$qvector_Upoint_t____QEAAXAEBUpoint_t___Z(qvector<point_t> *__hidden this, point_t *x);
void __cdecl ?grow_?$qvector_Uprocess_info_t____QEAAXAEBUprocess_info_t___Z(qvector<process_info_t> *__hidden this, process_info_t *x);
void __cdecl ?grow_?$qvector_Uqbasic_block_t____QEAAXAEBUqbasic_block_t___Z(qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
void __cdecl ?grow_?$qvector_Urange_t____QEAAXAEBUrange_t___Z(qvector<range_t> *__hidden this, range_t *x);
void __cdecl ?grow_?$qvector_Urect_t____QEAAXAEBUrect_t___Z(qvector<rect_t> *__hidden this, rect_t *x);
void __cdecl ?grow_?$qvector_Urefinfo_desc_t____QEAAXAEBUrefinfo_desc_t___Z(qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
void __cdecl ?grow_?$qvector_Ureg_access_t____QEAAXAEBUreg_access_t___Z(qvector<reg_access_t> *__hidden this, reg_access_t *x);
void __cdecl ?grow_?$qvector_Ureg_info_t____QEAAXAEBUreg_info_t___Z(qvector<reg_info_t> *__hidden this, reg_info_t *x);
void __cdecl ?grow_?$qvector_Uregister_info_t____QEAAXAEBUregister_info_t___Z(qvector<register_info_t> *__hidden this, register_info_t *x);
void __cdecl ?grow_?$qvector_Uregobj_t____QEAAXAEBUregobj_t___Z(qvector<regobj_t> *__hidden this, regobj_t *x);
void __cdecl ?grow_?$qvector_Uregval_t____QEAAXAEBUregval_t___Z(qvector<regval_t> *__hidden this, regval_t *x);
void __cdecl ?grow_?$qvector_Urow_info_t____QEAAXAEBUrow_info_t___Z(qvector<row_info_t> *__hidden this, row_info_t *x);
void __cdecl ?grow_?$qvector_Uscattered_segm_t____QEAAXAEBUscattered_segm_t___Z(qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
void __cdecl ?grow_?$qvector_Usegm_move_info_t____QEAAXAEBUsegm_move_info_t___Z(qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
void __cdecl ?grow_?$qvector_Uselection_item_t____QEAAXAEBUselection_item_t___Z(qvector<selection_item_t> *__hidden this, selection_item_t *x);
void __cdecl ?grow_?$qvector_Usimd_info_t____QEAAXAEBUsimd_info_t___Z(qvector<simd_info_t> *__hidden this, simd_info_t *x);
void __cdecl ?grow_?$qvector_Usimpleline_t____QEAAXAEBUsimpleline_t___Z(qvector<simpleline_t> *__hidden this, simpleline_t *x);
void __cdecl ?grow_?$qvector_Ustkpnt_t____QEAAXAEBUstkpnt_t___Z(qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
void __cdecl ?grow_?$qvector_Utev_info_reg_t____QEAAXAEBUtev_info_reg_t___Z(qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
void __cdecl ?grow_?$qvector_Utev_info_t____QEAAXAEBUtev_info_t___Z(qvector<tev_info_t> *__hidden this, tev_info_t *x);
void __cdecl ?grow_?$qvector_Utev_reg_value_t____QEAAXAEBUtev_reg_value_t___Z(qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
void __cdecl ?grow_?$qvector_Uthread_name_t____QEAAXAEBUthread_name_t___Z(qvector<thread_name_t> *__hidden this, thread_name_t *x);
void __cdecl ?grow_?$qvector_Utoken_t____QEAAXAEBUtoken_t___Z(qvector<token_t> *__hidden this, token_t *x);
void __cdecl ?grow_?$qvector_Utype_attr_t____QEAAXAEBUtype_attr_t___Z(qvector<type_attr_t> *__hidden this, type_attr_t *x);
void __cdecl ?grow_?$qvector_Uudt_member_t____QEAAXAEBUudt_member_t___Z(qvector<udt_member_t> *__hidden this, udt_member_t *x);
void __cdecl ?grow_?$qvector_Uupdate_bpt_info_t____QEAAXAEBUupdate_bpt_info_t___Z(qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
void __cdecl ?grow_?$qvector_Uxreflist_entry_t____QEAAXAEBUxreflist_entry_t___Z(qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
void __cdecl ?grow_?$qvector_V?$_qstring_D____QEAAXAEBV?$_qstring_D___Z(qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
void __cdecl ?grow_?$qvector_V?$_qstring_E____QEAAXAEBV?$_qstring_E___Z(qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
void __cdecl ?grow_?$qvector_V?$_qstring__W____QEAAXAEBV?$_qstring__W___Z(qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
void __cdecl ?grow_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAXAEBV?$qrefcnt_t_Vsource_item_t_____Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
void __cdecl ?grow_?$qvector_V?$qvector_H____QEAAXAEBV?$qvector_H___Z(qvector<qvector<int>> *__hidden this, qvector<int> *x);
void __cdecl ?grow_?$qvector_V?$qvector_PEBD____QEAAXAEBV?$qvector_PEBD___Z(qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
void __cdecl ?grow_?$qvector_V?$qvector_PEBVtwinline_t______QEAAXAEBV?$qvector_PEBVtwinline_t_____Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
void __cdecl ?grow_?$qvector_V?$qvector__J____QEAAXAEBV?$qvector__J___Z(qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
void __cdecl ?grow_?$qvector_Vargloc_t____QEAAXAEBVargloc_t___Z(qvector<argloc_t> *__hidden this, argloc_t *x);
void __cdecl ?grow_?$qvector_Vintmap_t____QEAAXAEBVintmap_t___Z(qvector<intmap_t> *__hidden this, intmap_t *x);
void __cdecl ?grow_?$qvector_Vnode_set_t____QEAAXAEBVnode_set_t___Z(qvector<node_set_t> *__hidden this, node_set_t *x);
void __cdecl ?grow_?$qvector_Vop_t____QEAAXAEBVop_t___Z(qvector<op_t> *__hidden this, op_t *x);
void __cdecl ?grow_?$qvector_Vrangeset_t____QEAAXAEBVrangeset_t___Z(qvector<rangeset_t> *__hidden this, rangeset_t *x);
void __cdecl ?grow_?$qvector_Vsync_source_t____QEAAXAEBVsync_source_t___Z(qvector<sync_source_t> *__hidden this, sync_source_t *x);
void __cdecl ?grow_?$qvector_Vtinfo_t____QEAAXAEBVtinfo_t___Z(qvector<tinfo_t> *__hidden this, tinfo_t *x);
void __cdecl ?grow_?$qvector_Vtryblk_t____QEAAXAEBVtryblk_t___Z(qvector<tryblk_t> *__hidden this, tryblk_t *x);
void __cdecl ?grow_?$qvector_Vtwinline_t____QEAAXAEBVtwinline_t___Z(qvector<twinline_t> *__hidden this, twinline_t *x);
void __cdecl ?grow_?$qvector_Vvalstr_t____QEAAXAEBVvalstr_t___Z(qvector<valstr_t> *__hidden this, valstr_t *x);
void __cdecl ?grow_?$qvector_W4movbpt_code_t____QEAAXAEBW4movbpt_code_t___Z(qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
void __cdecl ?grow_?$qvector__J__QEAAXAEB_J_Z(qvector<long long> *__hidden this, __int64 *x);
void __cdecl ?grow_?$qvector__K__QEAAXAEB_K_Z(qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
void __cdecl ?grow_?$qvector__N__QEAAXAEB_N_Z(qvector<bool> *__hidden this, bool *x);
void __cdecl ?grow_?$qvector__W__QEAAXAEB_W_Z(qvector<wchar_t> *__hidden this, __int16 *x);
void __cdecl ?grow_rect_t__QEAAXH_Z(rect_t *__hidden this, int delta);
bytevec_t *__cdecl ?growfill_bytevec_t__QEAAAEAV1__KE_Z(bytevec_t *__hidden this, size_t sz, uchar filler);
cm_t __cdecl ?guess_cc_func_type_data_t__QEBAEHH_Z(const func_type_data_t *__hidden this, int purged, int cc_flags);
bool __cdecl ?handle_exception_info_t__QEBA_NXZ(const exception_info_t *__hidden this);
bool __cdecl ?handle_ioports_fallback_t__UEAA_NPEAV?$_qstring_D__AEBV?$qvector_Uioport_t____PEBD_Z(ioports_fallback_t *__hidden this, qstring *errbuf, const ioports_t *ports, const char *line);
void __cdecl ?handle_cmt_ida_syntax_highlighter_t__IEAAXPEAUhighlighter_cbs_t__HPEAPEBD_Z(ida_syntax_highlighter_t *__hidden this, highlighter_cbs_t *highlighter_cbs, int mcmt_idx, const char **ptr);
bool __cdecl ?handle_mov_jump_pattern_t__UEAA_NAEAV?$qvector_Vop_t_____Z(jump_pattern_t *__hidden this, tracked_regs_t *);
ssize_t __cdecl ?handle_post_event_post_event_visitor_t__UEAA_J_JHPEAD_Z(post_event_visitor_t *__hidden this, ssize_t code, int notification_code, va_list va);
void __cdecl ?handle_preproc_ida_syntax_highlighter_t__IEAAXPEAUhighlighter_cbs_t__PEAPEBD_Z(ida_syntax_highlighter_t *__hidden this, highlighter_cbs_t *highlighter_cbs, const char **ptr);
bool __cdecl ?has_?$qvector_D__QEBA_NAEBD_Z(const qvector<char> *__hidden this, char *x);
bool __cdecl ?has_?$qvector_E__QEBA_NAEBE_Z(const qvector<unsigned char> *__hidden this, unsigned __int8 *x);
bool __cdecl ?has_?$qvector_H__QEBA_NAEBH_Z(const qvector<int> *__hidden this, int *x);
bool __cdecl ?has_?$qvector_I__QEBA_NAEBI_Z(const qvector<unsigned int> *__hidden this, unsigned int *x);
bool __cdecl ?has_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBA_NAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
bool __cdecl ?has_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBA_NAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
bool __cdecl ?has_?$qvector_PEAUbpt_t____QEBA_NAEBQEAUbpt_t___Z(const qvector<bpt_t *> *__hidden this, bpt_t **x);
bool __cdecl ?has_?$qvector_PEAUextlang_t____QEBA_NAEBQEAUextlang_t___Z(const qvector<extlang_t *> *__hidden this, extlang_t **x);
bool __cdecl ?has_?$qvector_PEAUline_rendering_output_entry_t____QEBA_NAEBQEAUline_rendering_output_entry_t___Z(const qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
bool __cdecl ?has_?$qvector_PEAVsnapshot_t____QEBA_NAEBQEAVsnapshot_t___Z(const qvector<snapshot_t *> *__hidden this, snapshot_t **x);
bool __cdecl ?has_?$qvector_PEBD__QEBA_NAEBQEBD_Z(const qvector<const char *> *__hidden this, const char **x);
bool __cdecl ?has_?$qvector_PEBUbpt_t____QEBA_NAEBQEBUbpt_t___Z(const qvector<const bpt_t *> *__hidden this, const bpt_t **x);
bool __cdecl ?has_?$qvector_PEBVrangeset_t____QEBA_NAEBQEBVrangeset_t___Z(const qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
bool __cdecl ?has_?$qvector_PEBVtwinline_t____QEBA_NAEBQEBVtwinline_t___Z(const qvector<const twinline_t *> *__hidden this, const twinline_t **x);
bool __cdecl ?has_?$qvector_Uargpart_t____QEBA_NAEBUargpart_t___Z(const qvector<argpart_t> *__hidden this, argpart_t *x);
bool __cdecl ?has_?$qvector_Ubpt_t____QEBA_NAEBUbpt_t___Z(const qvector<bpt_t> *__hidden this, bpt_t *x);
bool __cdecl ?has_?$qvector_Ubptaddrs_t____QEBA_NAEBUbptaddrs_t___Z(const qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
bool __cdecl ?has_?$qvector_Ucall_stack_info_t____QEBA_NAEBUcall_stack_info_t___Z(const qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
bool __cdecl ?has_?$qvector_Ucatch_t____QEBA_NAEBUcatch_t___Z(const qvector<catch_t> *__hidden this, catch_t *x);
bool __cdecl ?has_?$qvector_Ucfgopt_set_t____QEBA_NAEBUcfgopt_set_t___Z(const qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
bool __cdecl ?has_?$qvector_Uchannel_redir_t____QEBA_NAEBUchannel_redir_t___Z(const qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
bool __cdecl ?has_?$qvector_Ucliopt_t____QEBA_NAEBUcliopt_t___Z(const qvector<cliopt_t> *__hidden this, cliopt_t *x);
bool __cdecl ?has_?$qvector_Ucompiled_binpat_t____QEBA_NAEBUcompiled_binpat_t___Z(const qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
bool __cdecl ?has_?$qvector_Udebug_event_t____QEBA_NAEBUdebug_event_t___Z(const qvector<debug_event_t> *__hidden this, debug_event_t *x);
bool __cdecl ?has_?$qvector_Udirentry_t____QEBA_NAEBUdirentry_t___Z(const qvector<direntry_t> *__hidden this, direntry_t *x);
bool __cdecl ?has_?$qvector_Udirtree_cursor_t____QEBA_NAEBUdirtree_cursor_t___Z(const qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
bool __cdecl ?has_?$qvector_Uea_name_t____QEBA_NAEBUea_name_t___Z(const qvector<ea_name_t> *__hidden this, ea_name_t *x);
bool __cdecl ?has_?$qvector_Uedge_t____QEBA_NAEBUedge_t___Z(const qvector<edge_t> *__hidden this, edge_t *x);
bool __cdecl ?has_?$qvector_Uenum_member_t____QEBA_NAEBUenum_member_t___Z(const qvector<enum_member_t> *__hidden this, enum_member_t *x);
bool __cdecl ?has_?$qvector_Uexception_info_t____QEBA_NAEBUexception_info_t___Z(const qvector<exception_info_t> *__hidden this, exception_info_t *x);
bool __cdecl ?has_?$qvector_Ufixup_info_t____QEBA_NAEBUfixup_info_t___Z(const qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
bool __cdecl ?has_?$qvector_Ufuncarg_t____QEBA_NAEBUfuncarg_t___Z(const qvector<funcarg_t> *__hidden this, funcarg_t *x);
bool __cdecl ?has_?$qvector_Ugroup_crinfo_t____QEBA_NAEBUgroup_crinfo_t___Z(const qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
bool __cdecl ?has_?$qvector_Uidc_global_t____QEBA_NAEBUidc_global_t___Z(const qvector<idc_global_t> *__hidden this, idc_global_t *x);
bool __cdecl ?has_?$qvector_Uidp_desc_t____QEBA_NAEBUidp_desc_t___Z(const qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
bool __cdecl ?has_?$qvector_Uidp_name_t____QEBA_NAEBUidp_name_t___Z(const qvector<idp_name_t> *__hidden this, idp_name_t *x);
bool __cdecl ?has_?$qvector_Uioport_bit_t____QEBA_NAEBUioport_bit_t___Z(const qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
bool __cdecl ?has_?$qvector_Uioport_t____QEBA_NAEBUioport_t___Z(const qvector<ioport_t> *__hidden this, ioport_t *x);
bool __cdecl ?has_?$qvector_Ujvalue_t____QEBA_NAEBUjvalue_t___Z(const qvector<jvalue_t> *__hidden this, jvalue_t *x);
bool __cdecl ?has_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBA_NAEBUkeywords_style_t_ida_syntax_highlighter_t___Z(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
bool __cdecl ?has_?$qvector_Ukvp_t____QEBA_NAEBUkvp_t___Z(const qvector<kvp_t> *__hidden this, kvp_t *x);
bool __cdecl ?has_?$qvector_Ulochist_entry_t____QEBA_NAEBUlochist_entry_t___Z(const qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
bool __cdecl ?has_?$qvector_Ulowcnd_t____QEBA_NAEBUlowcnd_t___Z(const qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
bool __cdecl ?has_?$qvector_Umemory_info_t____QEBA_NAEBUmemory_info_t___Z(const qvector<memory_info_t> *__hidden this, memory_info_t *x);
bool __cdecl ?has_?$qvector_Umemreg_info_t____QEBA_NAEBUmemreg_info_t___Z(const qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
bool __cdecl ?has_?$qvector_Umodinfo_t____QEBA_NAEBUmodinfo_t___Z(const qvector<modinfo_t> *__hidden this, modinfo_t *x);
bool __cdecl ?has_?$qvector_Umovbpt_info_t____QEBA_NAEBUmovbpt_info_t___Z(const qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
bool __cdecl ?has_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBA_NAEBUmulticmt_t_ida_syntax_highlighter_t___Z(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
bool __cdecl ?has_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBA_NAEBUplain_char_ptr_t_ida_syntax_highlighter_t___Z(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
bool __cdecl ?has_?$qvector_Upoint_t____QEBA_NAEBUpoint_t___Z(const qvector<point_t> *__hidden this, point_t *x);
bool __cdecl ?has_?$qvector_Uprocess_info_t____QEBA_NAEBUprocess_info_t___Z(const qvector<process_info_t> *__hidden this, process_info_t *x);
bool __cdecl ?has_?$qvector_Uqbasic_block_t____QEBA_NAEBUqbasic_block_t___Z(const qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
bool __cdecl ?has_?$qvector_Urange_t____QEBA_NAEBUrange_t___Z(const qvector<range_t> *__hidden this, range_t *x);
bool __cdecl ?has_?$qvector_Urect_t____QEBA_NAEBUrect_t___Z(const qvector<rect_t> *__hidden this, rect_t *x);
bool __cdecl ?has_?$qvector_Urefinfo_desc_t____QEBA_NAEBUrefinfo_desc_t___Z(const qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
bool __cdecl ?has_?$qvector_Ureg_access_t____QEBA_NAEBUreg_access_t___Z(const qvector<reg_access_t> *__hidden this, reg_access_t *x);
bool __cdecl ?has_?$qvector_Ureg_info_t____QEBA_NAEBUreg_info_t___Z(const qvector<reg_info_t> *__hidden this, reg_info_t *x);
bool __cdecl ?has_?$qvector_Uregister_info_t____QEBA_NAEBUregister_info_t___Z(const qvector<register_info_t> *__hidden this, register_info_t *x);
bool __cdecl ?has_?$qvector_Uregobj_t____QEBA_NAEBUregobj_t___Z(const qvector<regobj_t> *__hidden this, regobj_t *x);
bool __cdecl ?has_?$qvector_Uregval_t____QEBA_NAEBUregval_t___Z(const qvector<regval_t> *__hidden this, regval_t *x);
bool __cdecl ?has_?$qvector_Urow_info_t____QEBA_NAEBUrow_info_t___Z(const qvector<row_info_t> *__hidden this, row_info_t *x);
bool __cdecl ?has_?$qvector_Uscattered_segm_t____QEBA_NAEBUscattered_segm_t___Z(const qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
bool __cdecl ?has_?$qvector_Usegm_move_info_t____QEBA_NAEBUsegm_move_info_t___Z(const qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
bool __cdecl ?has_?$qvector_Uselection_item_t____QEBA_NAEBUselection_item_t___Z(const qvector<selection_item_t> *__hidden this, selection_item_t *x);
bool __cdecl ?has_?$qvector_Usimd_info_t____QEBA_NAEBUsimd_info_t___Z(const qvector<simd_info_t> *__hidden this, simd_info_t *x);
bool __cdecl ?has_?$qvector_Usimpleline_t____QEBA_NAEBUsimpleline_t___Z(const qvector<simpleline_t> *__hidden this, simpleline_t *x);
bool __cdecl ?has_?$qvector_Ustkpnt_t____QEBA_NAEBUstkpnt_t___Z(const qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
bool __cdecl ?has_?$qvector_Utev_info_reg_t____QEBA_NAEBUtev_info_reg_t___Z(const qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
bool __cdecl ?has_?$qvector_Utev_info_t____QEBA_NAEBUtev_info_t___Z(const qvector<tev_info_t> *__hidden this, tev_info_t *x);
bool __cdecl ?has_?$qvector_Utev_reg_value_t____QEBA_NAEBUtev_reg_value_t___Z(const qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
bool __cdecl ?has_?$qvector_Uthread_name_t____QEBA_NAEBUthread_name_t___Z(const qvector<thread_name_t> *__hidden this, thread_name_t *x);
bool __cdecl ?has_?$qvector_Utoken_t____QEBA_NAEBUtoken_t___Z(const qvector<token_t> *__hidden this, token_t *x);
bool __cdecl ?has_?$qvector_Utype_attr_t____QEBA_NAEBUtype_attr_t___Z(const qvector<type_attr_t> *__hidden this, type_attr_t *x);
bool __cdecl ?has_?$qvector_Uudt_member_t____QEBA_NAEBUudt_member_t___Z(const qvector<udt_member_t> *__hidden this, udt_member_t *x);
bool __cdecl ?has_?$qvector_Uupdate_bpt_info_t____QEBA_NAEBUupdate_bpt_info_t___Z(const qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
bool __cdecl ?has_?$qvector_Uxreflist_entry_t____QEBA_NAEBUxreflist_entry_t___Z(const qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
bool __cdecl ?has_?$qvector_V?$_qstring_D____QEBA_NAEBV?$_qstring_D___Z(const qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
bool __cdecl ?has_?$qvector_V?$_qstring_E____QEBA_NAEBV?$_qstring_E___Z(const qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
bool __cdecl ?has_?$qvector_V?$_qstring__W____QEBA_NAEBV?$_qstring__W___Z(const qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
bool __cdecl ?has_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBA_NAEBV?$qrefcnt_t_Vsource_item_t_____Z(const qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
bool __cdecl ?has_?$qvector_V?$qvector_H____QEBA_NAEBV?$qvector_H___Z(const qvector<qvector<int>> *__hidden this, qvector<int> *x);
bool __cdecl ?has_?$qvector_V?$qvector_PEBD____QEBA_NAEBV?$qvector_PEBD___Z(const qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
bool __cdecl ?has_?$qvector_V?$qvector_PEBVtwinline_t______QEBA_NAEBV?$qvector_PEBVtwinline_t_____Z(const qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
bool __cdecl ?has_?$qvector_V?$qvector__J____QEBA_NAEBV?$qvector__J___Z(const qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
bool __cdecl ?has_?$qvector_Vargloc_t____QEBA_NAEBVargloc_t___Z(const qvector<argloc_t> *__hidden this, argloc_t *x);
bool __cdecl ?has_?$qvector_Vintmap_t____QEBA_NAEBVintmap_t___Z(const qvector<intmap_t> *__hidden this, intmap_t *x);
bool __cdecl ?has_?$qvector_Vnode_set_t____QEBA_NAEBVnode_set_t___Z(const qvector<node_set_t> *__hidden this, node_set_t *x);
bool __cdecl ?has_?$qvector_Vop_t____QEBA_NAEBVop_t___Z(const qvector<op_t> *__hidden this, op_t *x);
bool __cdecl ?has_?$qvector_Vrangeset_t____QEBA_NAEBVrangeset_t___Z(const qvector<rangeset_t> *__hidden this, rangeset_t *x);
bool __cdecl ?has_?$qvector_Vsync_source_t____QEBA_NAEBVsync_source_t___Z(const qvector<sync_source_t> *__hidden this, sync_source_t *x);
bool __cdecl ?has_?$qvector_Vtinfo_t____QEBA_NAEBVtinfo_t___Z(const qvector<tinfo_t> *__hidden this, tinfo_t *x);
bool __cdecl ?has_?$qvector_Vtryblk_t____QEBA_NAEBVtryblk_t___Z(const qvector<tryblk_t> *__hidden this, tryblk_t *x);
bool __cdecl ?has_?$qvector_Vtwinline_t____QEBA_NAEBVtwinline_t___Z(const qvector<twinline_t> *__hidden this, twinline_t *x);
bool __cdecl ?has_?$qvector_Vvalstr_t____QEBA_NAEBVvalstr_t___Z(const qvector<valstr_t> *__hidden this, valstr_t *x);
bool __cdecl ?has_?$qvector_W4movbpt_code_t____QEBA_NAEBW4movbpt_code_t___Z(const qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
bool __cdecl ?has_?$qvector__J__QEBA_NAEB_J_Z(const qvector<long long> *__hidden this, __int64 *x);
bool __cdecl ?has_?$qvector__K__QEBA_NAEB_K_Z(const qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
bool __cdecl ?has_?$qvector__N__QEBA_NAEB_N_Z(const qvector<bool> *__hidden this, bool *x);
bool __cdecl ?has_?$qvector__W__QEBA_NAEB_W_Z(const qvector<wchar_t> *__hidden this, __int16 *x);
bool __cdecl ?has_intset_t__QEBA_NH_Z(const intset_t *__hidden this, int value);
bool __cdecl ?has_screen_graph_selection_t__QEBA_NAEBUselection_item_t___Z(const screen_graph_selection_t *__hidden this, const selection_item_t *item);
bool __cdecl ?has_synced_group_t__QEBA_NAEBVsync_source_t___Z(const synced_group_t *__hidden this, const sync_source_t *ss);
bool __cdecl ?has_appcall_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_attach_process_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_base_fixup_data_t__QEBA_NXZ(const fixup_data_t *__hidden this);
bool __cdecl ?has_central_separator_hexplace_gen_t__UEBA_NXZ(const hexplace_gen_t *__hidden this);
bool __cdecl ?has_check_bpt_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_cmt_type_mods_t__QEBA_NXZ(const type_mods_t *__hidden this);
bool __cdecl ?has_code16_bit_processor_t__QEBA_NXZ(const processor_t *__hidden this);
bool __cdecl ?has_common_bitrange_t__QEBA_NAEBV1__Z(const bitrange_t *__hidden this, const bitrange_t *r);
bool __cdecl ?has_common_rangeset_t__QEBA_NAEBUrange_t___Z(const rangeset_t *__hidden this, const range_t *range);
bool __cdecl ?has_common_rangeset_t__QEBA_NAEBV1__Z(const rangeset_t *__hidden this, const rangeset_t *aset);
bool __cdecl ?has_default_switch_info_t__QEBA_NXZ(const switch_info_t *__hidden this);
bool __cdecl ?has_delay_slot_argtinfo_helper_t__UEAA_N_K_Z(argtinfo_helper_t *__hidden this, ea_t);
bool __cdecl ?has_detach_process_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_details_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?has_diff_capability_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?has_dirtree_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?has_elbase_switch_info_t__QEBA_NXZ(const switch_info_t *__hidden this);
bool __cdecl ?has_flag_action_ctx_base_t__QEBA_NI_Z(const action_ctx_base_t *__hidden this, uint32 flag);
bool __cdecl ?has_get_processes_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_idp_opts_processor_t__QEBA_NXZ(const processor_t *__hidden this);
bool __cdecl ?has_info_type_mods_t__QEBA_NXZ(const type_mods_t *__hidden this);
bool __cdecl ?has_map_address_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_name_type_mods_t__QEBA_NXZ(const type_mods_t *__hidden this);
bool __cdecl ?has_open_file_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_realcvt_processor_t__QEBA_NXZ(const processor_t *__hidden this);
bool __cdecl ?has_reg_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?has_register_synced_group_t__QEBA_NPEBD_Z(const synced_group_t *__hidden this, const char *r);
bool __cdecl ?has_request_pause_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_rexec_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_segregs_processor_t__QEBA_NXZ(const processor_t *__hidden this);
bool __cdecl ?has_set_exception_info_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_set_resume_mode_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_soft_bpt_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_stkoff_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?has_thread_continue_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_thread_get_sreg_base_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_thread_suspend_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_ti_member_t__QEBA_NXZ(const member_t *__hidden this);
bool __cdecl ?has_type_type_mods_t__QEBA_NXZ(const type_mods_t *__hidden this);
bool __cdecl ?has_union_member_t__QEBA_NXZ(const member_t *__hidden this);
bool __cdecl ?has_union_struc_t__QEBA_NXZ(const struc_t *__hidden this);
bool __cdecl ?has_update_call_stack_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?has_value_jobj_t__QEBA_NPEBD_Z(const jobj_t *__hidden this, const char *k);
bool __cdecl ?has_vftable_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?has_widget_synced_group_t__QEBA_NPEBVTWidget___Z(const synced_group_t *__hidden this, const TWidget *v);
bool __cdecl ?hashdel_netnode__QEAA_NPEBDE_Z(netnode *__hidden this, const char *idx, uchar tag);
bool __cdecl ?hashdel_all_netnode__QEAA_NE_Z(netnode *__hidden this, uchar tag);
ssize_t __cdecl ?hashfirst_netnode__QEBA_JPEAD_KE_Z(const netnode *__hidden this, char *buf, size_t bufsize, uchar tag);
ssize_t __cdecl ?hashfirst_netnode__QEBA_JPEAV?$_qstring_D__E_Z(const netnode *__hidden this, qstring *buf, uchar tag);
ssize_t __cdecl ?hashlast_netnode__QEBA_JPEAD_KE_Z(const netnode *__hidden this, char *buf, size_t bufsize, uchar tag);
ssize_t __cdecl ?hashlast_netnode__QEBA_JPEAV?$_qstring_D__E_Z(const netnode *__hidden this, qstring *buf, uchar tag);
ssize_t __cdecl ?hashnext_netnode__QEBA_JPEAV?$_qstring_D__PEBDE_Z(const netnode *__hidden this, qstring *buf, const char *idx, uchar tag);
ssize_t __cdecl ?hashnext_netnode__QEBA_JPEBDPEAD_KE_Z(const netnode *__hidden this, const char *idx, char *buf, size_t bufsize, uchar tag);
ssize_t __cdecl ?hashprev_netnode__QEBA_JPEAV?$_qstring_D__PEBDE_Z(const netnode *__hidden this, qstring *buf, const char *idx, uchar tag);
ssize_t __cdecl ?hashprev_netnode__QEBA_JPEBDPEAD_KE_Z(const netnode *__hidden this, const char *idx, char *buf, size_t bufsize, uchar tag);
bool __cdecl ?hashset_netnode__QEAA_NPEBDPEBX_KE_Z(netnode *__hidden this, const char *idx, const void *value, size_t length, uchar tag);
bool __cdecl ?hashset_netnode__QEAA_NPEBD_KE_Z(netnode *__hidden this, const char *idx, nodeidx_t value, uchar tag);
ssize_t __cdecl ?hashstr_netnode__QEBA_JPEAV?$_qstring_D__PEBDE_Z(const netnode *__hidden this, qstring *buf, const char *idx, uchar tag);
ssize_t __cdecl ?hashstr_netnode__QEBA_JPEBDPEAD_KE_Z(const netnode *__hidden this, const char *idx, char *buf, size_t bufsize, uchar tag);
ssize_t __cdecl ?hashval_netnode__QEBA_JPEBDPEAX_KE_Z(const netnode *__hidden this, const char *idx, void *buf, size_t bufsize, uchar tag);
nodeidx_t __cdecl ?hashval_long_netnode__QEBA_KPEBDE_Z(const netnode *__hidden this, const char *idx, uchar tag);
bool __cdecl ?have_common_bits_reg_access_t__QEBA_NAEBU1__Z(const reg_access_t *__hidden this, const reg_access_t *r);
int __cdecl ?height_rect_t__QEBAHXZ(const rect_t *__hidden this);
int __cdecl ?height_row_info_t__QEBAHXZ(const row_info_t *__hidden this);
void __cdecl ?highlight_block_ex_ida_syntax_highlighter_t__QEAAXPEAUhighlighter_cbs_t__AEBV?$_qstring_D___Z(ida_syntax_highlighter_t *__hidden this, highlighter_cbs_t *highlighter_cbs, const qstring *text);
bool __cdecl ?hook_event_listener_plugmod_t__QEAA_NW4hook_type_t__PEAUevent_listener_t__H_Z(plugmod_t *__hidden this, hook_type_t hook_type, event_listener_t *cb, int hkcb_flags);
int __cdecl ?id_enumplace_t__UEBAHXZ(const enumplace_t *__hidden this);
int __cdecl ?id_hexplace_t__UEBAHXZ(const hexplace_t *__hidden this);
int __cdecl ?id_idaplace_t__UEBAHXZ(const idaplace_t *__hidden this);
int __cdecl ?id_place_t__UEBAHXZ(const place_t *__hidden this);
int __cdecl ?id_simpleline_place_t__UEBAHXZ(const simpleline_place_t *__hidden this);
int __cdecl ?id_structplace_t__UEBAHXZ(const structplace_t *__hidden this);
bool __cdecl ?in_stack_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?includes_rangeset_t__QEBA_NAEBUrange_t___Z(const rangeset_t *__hidden this, const range_t *range);
ssize_t __cdecl ?index_?$qvector_D__QEBA_JAEBD_Z(const qvector<char> *__hidden this, char *x);
ssize_t __cdecl ?index_?$qvector_E__QEBA_JAEBE_Z(const qvector<unsigned char> *__hidden this, unsigned __int8 *x);
ssize_t __cdecl ?index_?$qvector_H__QEBA_JAEBH_Z(const qvector<int> *__hidden this, int *x);
ssize_t __cdecl ?index_?$qvector_I__QEBA_JAEBI_Z(const qvector<unsigned int> *__hidden this, unsigned int *x);
ssize_t __cdecl ?index_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBA_JAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
ssize_t __cdecl ?index_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBA_JAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
ssize_t __cdecl ?index_?$qvector_PEAUbpt_t____QEBA_JAEBQEAUbpt_t___Z(const qvector<bpt_t *> *__hidden this, bpt_t **x);
ssize_t __cdecl ?index_?$qvector_PEAUextlang_t____QEBA_JAEBQEAUextlang_t___Z(const qvector<extlang_t *> *__hidden this, extlang_t **x);
ssize_t __cdecl ?index_?$qvector_PEAUline_rendering_output_entry_t____QEBA_JAEBQEAUline_rendering_output_entry_t___Z(const qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
ssize_t __cdecl ?index_?$qvector_PEAVsnapshot_t____QEBA_JAEBQEAVsnapshot_t___Z(const qvector<snapshot_t *> *__hidden this, snapshot_t **x);
ssize_t __cdecl ?index_?$qvector_PEBD__QEBA_JAEBQEBD_Z(const qvector<const char *> *__hidden this, const char **x);
ssize_t __cdecl ?index_?$qvector_PEBUbpt_t____QEBA_JAEBQEBUbpt_t___Z(const qvector<const bpt_t *> *__hidden this, const bpt_t **x);
ssize_t __cdecl ?index_?$qvector_PEBVrangeset_t____QEBA_JAEBQEBVrangeset_t___Z(const qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
ssize_t __cdecl ?index_?$qvector_PEBVtwinline_t____QEBA_JAEBQEBVtwinline_t___Z(const qvector<const twinline_t *> *__hidden this, const twinline_t **x);
ssize_t __cdecl ?index_?$qvector_Uargpart_t____QEBA_JAEBUargpart_t___Z(const qvector<argpart_t> *__hidden this, argpart_t *x);
ssize_t __cdecl ?index_?$qvector_Ubpt_t____QEBA_JAEBUbpt_t___Z(const qvector<bpt_t> *__hidden this, bpt_t *x);
ssize_t __cdecl ?index_?$qvector_Ubptaddrs_t____QEBA_JAEBUbptaddrs_t___Z(const qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
ssize_t __cdecl ?index_?$qvector_Ucall_stack_info_t____QEBA_JAEBUcall_stack_info_t___Z(const qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
ssize_t __cdecl ?index_?$qvector_Ucatch_t____QEBA_JAEBUcatch_t___Z(const qvector<catch_t> *__hidden this, catch_t *x);
ssize_t __cdecl ?index_?$qvector_Ucfgopt_set_t____QEBA_JAEBUcfgopt_set_t___Z(const qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
ssize_t __cdecl ?index_?$qvector_Uchannel_redir_t____QEBA_JAEBUchannel_redir_t___Z(const qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
ssize_t __cdecl ?index_?$qvector_Ucliopt_t____QEBA_JAEBUcliopt_t___Z(const qvector<cliopt_t> *__hidden this, cliopt_t *x);
ssize_t __cdecl ?index_?$qvector_Ucompiled_binpat_t____QEBA_JAEBUcompiled_binpat_t___Z(const qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
ssize_t __cdecl ?index_?$qvector_Udebug_event_t____QEBA_JAEBUdebug_event_t___Z(const qvector<debug_event_t> *__hidden this, debug_event_t *x);
ssize_t __cdecl ?index_?$qvector_Udirentry_t____QEBA_JAEBUdirentry_t___Z(const qvector<direntry_t> *__hidden this, direntry_t *x);
ssize_t __cdecl ?index_?$qvector_Udirtree_cursor_t____QEBA_JAEBUdirtree_cursor_t___Z(const qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
ssize_t __cdecl ?index_?$qvector_Uea_name_t____QEBA_JAEBUea_name_t___Z(const qvector<ea_name_t> *__hidden this, ea_name_t *x);
ssize_t __cdecl ?index_?$qvector_Uedge_t____QEBA_JAEBUedge_t___Z(const qvector<edge_t> *__hidden this, edge_t *x);
ssize_t __cdecl ?index_?$qvector_Uenum_member_t____QEBA_JAEBUenum_member_t___Z(const qvector<enum_member_t> *__hidden this, enum_member_t *x);
ssize_t __cdecl ?index_?$qvector_Uexception_info_t____QEBA_JAEBUexception_info_t___Z(const qvector<exception_info_t> *__hidden this, exception_info_t *x);
ssize_t __cdecl ?index_?$qvector_Ufixup_info_t____QEBA_JAEBUfixup_info_t___Z(const qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
ssize_t __cdecl ?index_?$qvector_Ufuncarg_t____QEBA_JAEBUfuncarg_t___Z(const qvector<funcarg_t> *__hidden this, funcarg_t *x);
ssize_t __cdecl ?index_?$qvector_Ugroup_crinfo_t____QEBA_JAEBUgroup_crinfo_t___Z(const qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
ssize_t __cdecl ?index_?$qvector_Uidc_global_t____QEBA_JAEBUidc_global_t___Z(const qvector<idc_global_t> *__hidden this, idc_global_t *x);
ssize_t __cdecl ?index_?$qvector_Uidp_desc_t____QEBA_JAEBUidp_desc_t___Z(const qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
ssize_t __cdecl ?index_?$qvector_Uidp_name_t____QEBA_JAEBUidp_name_t___Z(const qvector<idp_name_t> *__hidden this, idp_name_t *x);
ssize_t __cdecl ?index_?$qvector_Uioport_bit_t____QEBA_JAEBUioport_bit_t___Z(const qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
ssize_t __cdecl ?index_?$qvector_Uioport_t____QEBA_JAEBUioport_t___Z(const qvector<ioport_t> *__hidden this, ioport_t *x);
ssize_t __cdecl ?index_?$qvector_Ujvalue_t____QEBA_JAEBUjvalue_t___Z(const qvector<jvalue_t> *__hidden this, jvalue_t *x);
ssize_t __cdecl ?index_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBA_JAEBUkeywords_style_t_ida_syntax_highlighter_t___Z(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
ssize_t __cdecl ?index_?$qvector_Ukvp_t____QEBA_JAEBUkvp_t___Z(const qvector<kvp_t> *__hidden this, kvp_t *x);
ssize_t __cdecl ?index_?$qvector_Ulochist_entry_t____QEBA_JAEBUlochist_entry_t___Z(const qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
ssize_t __cdecl ?index_?$qvector_Ulowcnd_t____QEBA_JAEBUlowcnd_t___Z(const qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
ssize_t __cdecl ?index_?$qvector_Umemory_info_t____QEBA_JAEBUmemory_info_t___Z(const qvector<memory_info_t> *__hidden this, memory_info_t *x);
ssize_t __cdecl ?index_?$qvector_Umemreg_info_t____QEBA_JAEBUmemreg_info_t___Z(const qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
ssize_t __cdecl ?index_?$qvector_Umodinfo_t____QEBA_JAEBUmodinfo_t___Z(const qvector<modinfo_t> *__hidden this, modinfo_t *x);
ssize_t __cdecl ?index_?$qvector_Umovbpt_info_t____QEBA_JAEBUmovbpt_info_t___Z(const qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
ssize_t __cdecl ?index_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBA_JAEBUmulticmt_t_ida_syntax_highlighter_t___Z(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
ssize_t __cdecl ?index_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBA_JAEBUplain_char_ptr_t_ida_syntax_highlighter_t___Z(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
ssize_t __cdecl ?index_?$qvector_Upoint_t____QEBA_JAEBUpoint_t___Z(const qvector<point_t> *__hidden this, point_t *x);
ssize_t __cdecl ?index_?$qvector_Uprocess_info_t____QEBA_JAEBUprocess_info_t___Z(const qvector<process_info_t> *__hidden this, process_info_t *x);
ssize_t __cdecl ?index_?$qvector_Uqbasic_block_t____QEBA_JAEBUqbasic_block_t___Z(const qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
ssize_t __cdecl ?index_?$qvector_Urange_t____QEBA_JAEBUrange_t___Z(const qvector<range_t> *__hidden this, range_t *x);
ssize_t __cdecl ?index_?$qvector_Urect_t____QEBA_JAEBUrect_t___Z(const qvector<rect_t> *__hidden this, rect_t *x);
ssize_t __cdecl ?index_?$qvector_Urefinfo_desc_t____QEBA_JAEBUrefinfo_desc_t___Z(const qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
ssize_t __cdecl ?index_?$qvector_Ureg_access_t____QEBA_JAEBUreg_access_t___Z(const qvector<reg_access_t> *__hidden this, reg_access_t *x);
ssize_t __cdecl ?index_?$qvector_Ureg_info_t____QEBA_JAEBUreg_info_t___Z(const qvector<reg_info_t> *__hidden this, reg_info_t *x);
ssize_t __cdecl ?index_?$qvector_Uregister_info_t____QEBA_JAEBUregister_info_t___Z(const qvector<register_info_t> *__hidden this, register_info_t *x);
ssize_t __cdecl ?index_?$qvector_Uregobj_t____QEBA_JAEBUregobj_t___Z(const qvector<regobj_t> *__hidden this, regobj_t *x);
ssize_t __cdecl ?index_?$qvector_Uregval_t____QEBA_JAEBUregval_t___Z(const qvector<regval_t> *__hidden this, regval_t *x);
ssize_t __cdecl ?index_?$qvector_Urow_info_t____QEBA_JAEBUrow_info_t___Z(const qvector<row_info_t> *__hidden this, row_info_t *x);
ssize_t __cdecl ?index_?$qvector_Uscattered_segm_t____QEBA_JAEBUscattered_segm_t___Z(const qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
ssize_t __cdecl ?index_?$qvector_Usegm_move_info_t____QEBA_JAEBUsegm_move_info_t___Z(const qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
ssize_t __cdecl ?index_?$qvector_Uselection_item_t____QEBA_JAEBUselection_item_t___Z(const qvector<selection_item_t> *__hidden this, selection_item_t *x);
ssize_t __cdecl ?index_?$qvector_Usimd_info_t____QEBA_JAEBUsimd_info_t___Z(const qvector<simd_info_t> *__hidden this, simd_info_t *x);
ssize_t __cdecl ?index_?$qvector_Usimpleline_t____QEBA_JAEBUsimpleline_t___Z(const qvector<simpleline_t> *__hidden this, simpleline_t *x);
ssize_t __cdecl ?index_?$qvector_Ustkpnt_t____QEBA_JAEBUstkpnt_t___Z(const qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
ssize_t __cdecl ?index_?$qvector_Utev_info_reg_t____QEBA_JAEBUtev_info_reg_t___Z(const qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
ssize_t __cdecl ?index_?$qvector_Utev_info_t____QEBA_JAEBUtev_info_t___Z(const qvector<tev_info_t> *__hidden this, tev_info_t *x);
ssize_t __cdecl ?index_?$qvector_Utev_reg_value_t____QEBA_JAEBUtev_reg_value_t___Z(const qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
ssize_t __cdecl ?index_?$qvector_Uthread_name_t____QEBA_JAEBUthread_name_t___Z(const qvector<thread_name_t> *__hidden this, thread_name_t *x);
ssize_t __cdecl ?index_?$qvector_Utoken_t____QEBA_JAEBUtoken_t___Z(const qvector<token_t> *__hidden this, token_t *x);
ssize_t __cdecl ?index_?$qvector_Utype_attr_t____QEBA_JAEBUtype_attr_t___Z(const qvector<type_attr_t> *__hidden this, type_attr_t *x);
ssize_t __cdecl ?index_?$qvector_Uudt_member_t____QEBA_JAEBUudt_member_t___Z(const qvector<udt_member_t> *__hidden this, udt_member_t *x);
ssize_t __cdecl ?index_?$qvector_Uupdate_bpt_info_t____QEBA_JAEBUupdate_bpt_info_t___Z(const qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
ssize_t __cdecl ?index_?$qvector_Uxreflist_entry_t____QEBA_JAEBUxreflist_entry_t___Z(const qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
ssize_t __cdecl ?index_?$qvector_V?$_qstring_D____QEBA_JAEBV?$_qstring_D___Z(const qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
ssize_t __cdecl ?index_?$qvector_V?$_qstring_E____QEBA_JAEBV?$_qstring_E___Z(const qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
ssize_t __cdecl ?index_?$qvector_V?$_qstring__W____QEBA_JAEBV?$_qstring__W___Z(const qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
ssize_t __cdecl ?index_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBA_JAEBV?$qrefcnt_t_Vsource_item_t_____Z(const qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
ssize_t __cdecl ?index_?$qvector_V?$qvector_H____QEBA_JAEBV?$qvector_H___Z(const qvector<qvector<int>> *__hidden this, qvector<int> *x);
ssize_t __cdecl ?index_?$qvector_V?$qvector_PEBD____QEBA_JAEBV?$qvector_PEBD___Z(const qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
ssize_t __cdecl ?index_?$qvector_V?$qvector_PEBVtwinline_t______QEBA_JAEBV?$qvector_PEBVtwinline_t_____Z(const qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
ssize_t __cdecl ?index_?$qvector_V?$qvector__J____QEBA_JAEBV?$qvector__J___Z(const qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
ssize_t __cdecl ?index_?$qvector_Vargloc_t____QEBA_JAEBVargloc_t___Z(const qvector<argloc_t> *__hidden this, argloc_t *x);
ssize_t __cdecl ?index_?$qvector_Vintmap_t____QEBA_JAEBVintmap_t___Z(const qvector<intmap_t> *__hidden this, intmap_t *x);
ssize_t __cdecl ?index_?$qvector_Vnode_set_t____QEBA_JAEBVnode_set_t___Z(const qvector<node_set_t> *__hidden this, node_set_t *x);
ssize_t __cdecl ?index_?$qvector_Vop_t____QEBA_JAEBVop_t___Z(const qvector<op_t> *__hidden this, op_t *x);
ssize_t __cdecl ?index_?$qvector_Vrangeset_t____QEBA_JAEBVrangeset_t___Z(const qvector<rangeset_t> *__hidden this, rangeset_t *x);
ssize_t __cdecl ?index_?$qvector_Vsync_source_t____QEBA_JAEBVsync_source_t___Z(const qvector<sync_source_t> *__hidden this, sync_source_t *x);
ssize_t __cdecl ?index_?$qvector_Vtinfo_t____QEBA_JAEBVtinfo_t___Z(const qvector<tinfo_t> *__hidden this, tinfo_t *x);
ssize_t __cdecl ?index_?$qvector_Vtryblk_t____QEBA_JAEBVtryblk_t___Z(const qvector<tryblk_t> *__hidden this, tryblk_t *x);
ssize_t __cdecl ?index_?$qvector_Vtwinline_t____QEBA_JAEBVtwinline_t___Z(const qvector<twinline_t> *__hidden this, twinline_t *x);
ssize_t __cdecl ?index_?$qvector_Vvalstr_t____QEBA_JAEBVvalstr_t___Z(const qvector<valstr_t> *__hidden this, valstr_t *x);
ssize_t __cdecl ?index_?$qvector_W4movbpt_code_t____QEBA_JAEBW4movbpt_code_t___Z(const qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
ssize_t __cdecl ?index_?$qvector__J__QEBA_JAEB_J_Z(const qvector<long long> *__hidden this, __int64 *x);
ssize_t __cdecl ?index_?$qvector__K__QEBA_JAEB_K_Z(const qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
ssize_t __cdecl ?index_?$qvector__N__QEBA_JAEB_N_Z(const qvector<bool> *__hidden this, bool *x);
ssize_t __cdecl ?index_?$qvector__W__QEBA_JAEB_W_Z(const qvector<wchar_t> *__hidden this, __int16 *x);
diffpos_t __cdecl ?index_to_diffpos_chooser_multi_t__UEBA_K_K_Z(const chooser_multi_t *__hidden this, size_t);
diffpos_t __cdecl ?index_to_diffpos_chooser_t__UEBA_K_K_Z(const chooser_t *__hidden this, size_t);
inode_t __cdecl ?index_to_inode_chooser_multi_t__UEBA_K_K_Z(const chooser_multi_t *__hidden this, size_t);
inode_t __cdecl ?index_to_inode_chooser_t__UEBA_K_K_Z(const chooser_t *__hidden this, size_t);
char ?infinity_?$numeric_limits_C_std__SACXZ(void);
char ?infinity_?$numeric_limits_D_std__SADXZ(void);
unsigned __int8 ?infinity_?$numeric_limits_E_std__SAEXZ(void);
__int16 ?infinity_?$numeric_limits_F_std__SAFXZ(void);
unsigned __int16 ?infinity_?$numeric_limits_G_std__SAGXZ(void);
int ?infinity_?$numeric_limits_H_std__SAHXZ(void);
unsigned int ?infinity_?$numeric_limits_I_std__SAIXZ(void);
__int32 ?infinity_?$numeric_limits_J_std__SAJXZ(void);
unsigned __int32 ?infinity_?$numeric_limits_K_std__SAKXZ(void);
float ?infinity_?$numeric_limits_M_std__SAMXZ(void);
double ?infinity_?$numeric_limits_N_std__SANXZ(void);
long double ?infinity_?$numeric_limits_O_std__SAOXZ(void);
__int64 ?infinity_?$numeric_limits__J_std__SA_JXZ(void);
unsigned __int64 ?infinity_?$numeric_limits__K_std__SA_KXZ(void);
bool ?infinity_?$numeric_limits__N_std__SA_NXZ(void);
__int16 ?infinity_?$numeric_limits__S_std__SA_SXZ(void);
__int32 ?infinity_?$numeric_limits__U_std__SA_UXZ(void);
__int16 ?infinity_?$numeric_limits__W_std__SA_WXZ(void);
qstring *__cdecl ?info_debug_event_t__QEAAAEAV?$_qstring_D__XZ(debug_event_t *__hidden this);
const qstring *__cdecl ?info_debug_event_t__QEBAAEBV?$_qstring_D__XZ(const debug_event_t *__hidden this);
void __cdecl ?init_?$qlist_PEAVui_request_t____AEAAXXZ(qlist<ui_request_t *> *__hidden this);
void __cdecl ?init_bitrange_t__QEAAXGG_Z(bitrange_t *__hidden this, uint16 bit_ofs, uint16 size_in_bits);
bool __cdecl ?init_chooser_base_t__UEAA_NXZ(chooser_base_t *__hidden this);
bool __cdecl ?init_lochist_t__QEAA_NPEBDPEBVplace_t__PEAXI_Z(lochist_t *__hidden this, const char *stream_name, const place_t *_defpos, void *_ud, uint32 _flags);
ssize_t __cdecl ?init_processor_t__SA_JPEBD_Z(const char *idp_modname);
void __cdecl ?init_refinfo_t__QEAAXI_K0_J_Z(refinfo_t *__hidden this, uint32 reft_and_flags, ea_t _base, ea_t _target, adiff_t _tdelta);
bool __cdecl ?init_debugger_debugger_t__QEAA_NPEBDH0PEAV?$_qstring_D___Z(debugger_t *__hidden this, const char *hostname, int portnum, const char *password, qstring *errbuf);
void __cdecl ?init_ignore_micro_ignore_micro_t__QEAAXXZ(ignore_micro_t *__hidden this);
void __cdecl ?init_lines_array_outctx_base_t__UEAAXPEAV?$qvector_V?$_qstring_D____H_Z(outctx_base_t *__hidden this, qstrvec_t *answers, int maxsize);
void __cdecl ?init_popup_names_chooser_base_t__IEAAXQEBQEBD_Z(chooser_base_t *__hidden this, const char *const default_popup_names[4]);
void __cdecl ?init_regs_callregs_t__QEAAXE_Z(callregs_t *__hidden this, cm_t cc);
bool ?inited_netnode__SA_NXZ(void);
void __cdecl ?inject_?$_qstring_D__QEAAXPEAD_Z(_qstring<char> *__hidden this, char *s);
void __cdecl ?inject_?$_qstring_D__QEAAXPEAD_K_Z(_qstring<char> *__hidden this, char *s, size_t len);
void __cdecl ?inject_?$_qstring_E__QEAAXPEAE_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 *s);
void __cdecl ?inject_?$_qstring_E__QEAAXPEAE_K_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 *s, size_t len);
void __cdecl ?inject_?$_qstring__W__QEAAXPEA_W_Z(_qstring<wchar_t> *__hidden this, __int16 *s);
void __cdecl ?inject_?$_qstring__W__QEAAXPEA_W_K_Z(_qstring<wchar_t> *__hidden this, __int16 *s, size_t len);
void __cdecl ?inject_?$qvector_D__QEAAXPEAD_K_Z(qvector<char> *__hidden this, char *s, size_t len);
void __cdecl ?inject_?$qvector_E__QEAAXPEAE_K_Z(qvector<unsigned char> *__hidden this, unsigned __int8 *s, size_t len);
void __cdecl ?inject_?$qvector_H__QEAAXPEAH_K_Z(qvector<int> *__hidden this, int *s, size_t len);
void __cdecl ?inject_?$qvector_I__QEAAXPEAI_K_Z(qvector<unsigned int> *__hidden this, unsigned int *s, size_t len);
void __cdecl ?inject_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAXPEAP6A_JPEAW4syntax_highlight_style__PEBD_Z_K_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **s)(syntax_highlight_style *, const char *), size_t len);
void __cdecl ?inject_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAXPEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_K_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **s)(syntax_highlight_style *, const _qstring<char> *), size_t len);
void __cdecl ?inject_?$qvector_PEAUbpt_t____QEAAXPEAPEAUbpt_t___K_Z(qvector<bpt_t *> *__hidden this, bpt_t **s, size_t len);
void __cdecl ?inject_?$qvector_PEAUextlang_t____QEAAXPEAPEAUextlang_t___K_Z(qvector<extlang_t *> *__hidden this, extlang_t **s, size_t len);
void __cdecl ?inject_?$qvector_PEAUline_rendering_output_entry_t____QEAAXPEAPEAUline_rendering_output_entry_t___K_Z(qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **s, size_t len);
void __cdecl ?inject_?$qvector_PEAVsnapshot_t____QEAAXPEAPEAVsnapshot_t___K_Z(qvector<snapshot_t *> *__hidden this, snapshot_t **s, size_t len);
void __cdecl ?inject_?$qvector_PEBD__QEAAXPEAPEBD_K_Z(qvector<const char *> *__hidden this, const char **s, size_t len);
void __cdecl ?inject_?$qvector_PEBUbpt_t____QEAAXPEAPEBUbpt_t___K_Z(qvector<const bpt_t *> *__hidden this, const bpt_t **s, size_t len);
void __cdecl ?inject_?$qvector_PEBVrangeset_t____QEAAXPEAPEBVrangeset_t___K_Z(qvector<const rangeset_t *> *__hidden this, const rangeset_t **s, size_t len);
void __cdecl ?inject_?$qvector_PEBVtwinline_t____QEAAXPEAPEBVtwinline_t___K_Z(qvector<const twinline_t *> *__hidden this, const twinline_t **s, size_t len);
void __cdecl ?inject_?$qvector_Uargpart_t____QEAAXPEAUargpart_t___K_Z(qvector<argpart_t> *__hidden this, argpart_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ubpt_t____QEAAXPEAUbpt_t___K_Z(qvector<bpt_t> *__hidden this, bpt_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ubptaddrs_t____QEAAXPEAUbptaddrs_t___K_Z(qvector<bptaddrs_t> *__hidden this, bptaddrs_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ucall_stack_info_t____QEAAXPEAUcall_stack_info_t___K_Z(qvector<call_stack_info_t> *__hidden this, call_stack_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ucatch_t____QEAAXPEAUcatch_t___K_Z(qvector<catch_t> *__hidden this, catch_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ucfgopt_set_t____QEAAXPEAUcfgopt_set_t___K_Z(qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uchannel_redir_t____QEAAXPEAUchannel_redir_t___K_Z(qvector<channel_redir_t> *__hidden this, channel_redir_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ucliopt_t____QEAAXPEAUcliopt_t___K_Z(qvector<cliopt_t> *__hidden this, cliopt_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ucompiled_binpat_t____QEAAXPEAUcompiled_binpat_t___K_Z(qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *s, size_t len);
void __cdecl ?inject_?$qvector_Udebug_event_t____QEAAXPEAUdebug_event_t___K_Z(qvector<debug_event_t> *__hidden this, debug_event_t *s, size_t len);
void __cdecl ?inject_?$qvector_Udirentry_t____QEAAXPEAUdirentry_t___K_Z(qvector<direntry_t> *__hidden this, direntry_t *s, size_t len);
void __cdecl ?inject_?$qvector_Udirtree_cursor_t____QEAAXPEAUdirtree_cursor_t___K_Z(qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uea_name_t____QEAAXPEAUea_name_t___K_Z(qvector<ea_name_t> *__hidden this, ea_name_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uedge_t____QEAAXPEAUedge_t___K_Z(qvector<edge_t> *__hidden this, edge_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uenum_member_t____QEAAXPEAUenum_member_t___K_Z(qvector<enum_member_t> *__hidden this, enum_member_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uexception_info_t____QEAAXPEAUexception_info_t___K_Z(qvector<exception_info_t> *__hidden this, exception_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ufixup_info_t____QEAAXPEAUfixup_info_t___K_Z(qvector<fixup_info_t> *__hidden this, fixup_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ufuncarg_t____QEAAXPEAUfuncarg_t___K_Z(qvector<funcarg_t> *__hidden this, funcarg_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ugroup_crinfo_t____QEAAXPEAUgroup_crinfo_t___K_Z(qvector<group_crinfo_t> *__hidden this, group_crinfo_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uidc_global_t____QEAAXPEAUidc_global_t___K_Z(qvector<idc_global_t> *__hidden this, idc_global_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uidp_desc_t____QEAAXPEAUidp_desc_t___K_Z(qvector<idp_desc_t> *__hidden this, idp_desc_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uidp_name_t____QEAAXPEAUidp_name_t___K_Z(qvector<idp_name_t> *__hidden this, idp_name_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uioport_bit_t____QEAAXPEAUioport_bit_t___K_Z(qvector<ioport_bit_t> *__hidden this, ioport_bit_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uioport_t____QEAAXPEAUioport_t___K_Z(qvector<ioport_t> *__hidden this, ioport_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ujvalue_t____QEAAXPEAUjvalue_t___K_Z(qvector<jvalue_t> *__hidden this, jvalue_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAXPEAUkeywords_style_t_ida_syntax_highlighter_t___K_Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ukvp_t____QEAAXPEAUkvp_t___K_Z(qvector<kvp_t> *__hidden this, kvp_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ulochist_entry_t____QEAAXPEAUlochist_entry_t___K_Z(qvector<lochist_entry_t> *__hidden this, lochist_entry_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ulowcnd_t____QEAAXPEAUlowcnd_t___K_Z(qvector<lowcnd_t> *__hidden this, lowcnd_t *s, size_t len);
void __cdecl ?inject_?$qvector_Umemory_info_t____QEAAXPEAUmemory_info_t___K_Z(qvector<memory_info_t> *__hidden this, memory_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Umemreg_info_t____QEAAXPEAUmemreg_info_t___K_Z(qvector<memreg_info_t> *__hidden this, memreg_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Umodinfo_t____QEAAXPEAUmodinfo_t___K_Z(qvector<modinfo_t> *__hidden this, modinfo_t *s, size_t len);
void __cdecl ?inject_?$qvector_Umovbpt_info_t____QEAAXPEAUmovbpt_info_t___K_Z(qvector<movbpt_info_t> *__hidden this, movbpt_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAXPEAUmulticmt_t_ida_syntax_highlighter_t___K_Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAXPEAUplain_char_ptr_t_ida_syntax_highlighter_t___K_Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *s, size_t len);
void __cdecl ?inject_?$qvector_Upoint_t____QEAAXPEAUpoint_t___K_Z(qvector<point_t> *__hidden this, point_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uprocess_info_t____QEAAXPEAUprocess_info_t___K_Z(qvector<process_info_t> *__hidden this, process_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uqbasic_block_t____QEAAXPEAUqbasic_block_t___K_Z(qvector<qbasic_block_t> *__hidden this, qbasic_block_t *s, size_t len);
void __cdecl ?inject_?$qvector_Urange_t____QEAAXPEAUrange_t___K_Z(qvector<range_t> *__hidden this, range_t *s, size_t len);
void __cdecl ?inject_?$qvector_Urect_t____QEAAXPEAUrect_t___K_Z(qvector<rect_t> *__hidden this, rect_t *s, size_t len);
void __cdecl ?inject_?$qvector_Urefinfo_desc_t____QEAAXPEAUrefinfo_desc_t___K_Z(qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ureg_access_t____QEAAXPEAUreg_access_t___K_Z(qvector<reg_access_t> *__hidden this, reg_access_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ureg_info_t____QEAAXPEAUreg_info_t___K_Z(qvector<reg_info_t> *__hidden this, reg_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uregister_info_t____QEAAXPEAUregister_info_t___K_Z(qvector<register_info_t> *__hidden this, register_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uregobj_t____QEAAXPEAUregobj_t___K_Z(qvector<regobj_t> *__hidden this, regobj_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uregval_t____QEAAXPEAUregval_t___K_Z(qvector<regval_t> *__hidden this, regval_t *s, size_t len);
void __cdecl ?inject_?$qvector_Urow_info_t____QEAAXPEAUrow_info_t___K_Z(qvector<row_info_t> *__hidden this, row_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uscattered_segm_t____QEAAXPEAUscattered_segm_t___K_Z(qvector<scattered_segm_t> *__hidden this, scattered_segm_t *s, size_t len);
void __cdecl ?inject_?$qvector_Usegm_move_info_t____QEAAXPEAUsegm_move_info_t___K_Z(qvector<segm_move_info_t> *__hidden this, segm_move_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uselection_item_t____QEAAXPEAUselection_item_t___K_Z(qvector<selection_item_t> *__hidden this, selection_item_t *s, size_t len);
void __cdecl ?inject_?$qvector_Usimd_info_t____QEAAXPEAUsimd_info_t___K_Z(qvector<simd_info_t> *__hidden this, simd_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Usimpleline_t____QEAAXPEAUsimpleline_t___K_Z(qvector<simpleline_t> *__hidden this, simpleline_t *s, size_t len);
void __cdecl ?inject_?$qvector_Ustkpnt_t____QEAAXPEAUstkpnt_t___K_Z(qvector<stkpnt_t> *__hidden this, stkpnt_t *s, size_t len);
void __cdecl ?inject_?$qvector_Utev_info_reg_t____QEAAXPEAUtev_info_reg_t___K_Z(qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *s, size_t len);
void __cdecl ?inject_?$qvector_Utev_info_t____QEAAXPEAUtev_info_t___K_Z(qvector<tev_info_t> *__hidden this, tev_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Utev_reg_value_t____QEAAXPEAUtev_reg_value_t___K_Z(qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uthread_name_t____QEAAXPEAUthread_name_t___K_Z(qvector<thread_name_t> *__hidden this, thread_name_t *s, size_t len);
void __cdecl ?inject_?$qvector_Utoken_t____QEAAXPEAUtoken_t___K_Z(qvector<token_t> *__hidden this, token_t *s, size_t len);
void __cdecl ?inject_?$qvector_Utype_attr_t____QEAAXPEAUtype_attr_t___K_Z(qvector<type_attr_t> *__hidden this, type_attr_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uudt_member_t____QEAAXPEAUudt_member_t___K_Z(qvector<udt_member_t> *__hidden this, udt_member_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uupdate_bpt_info_t____QEAAXPEAUupdate_bpt_info_t___K_Z(qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *s, size_t len);
void __cdecl ?inject_?$qvector_Uxreflist_entry_t____QEAAXPEAUxreflist_entry_t___K_Z(qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *s, size_t len);
void __cdecl ?inject_?$qvector_V?$_qstring_D____QEAAXPEAV?$_qstring_D___K_Z(qvector<_qstring<char>> *__hidden this, _qstring<char> *s, size_t len);
void __cdecl ?inject_?$qvector_V?$_qstring_E____QEAAXPEAV?$_qstring_E___K_Z(qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *s, size_t len);
void __cdecl ?inject_?$qvector_V?$_qstring__W____QEAAXPEAV?$_qstring__W___K_Z(qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *s, size_t len);
void __cdecl ?inject_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAXPEAV?$qrefcnt_t_Vsource_item_t_____K_Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *s, size_t len);
void __cdecl ?inject_?$qvector_V?$qvector_H____QEAAXPEAV?$qvector_H___K_Z(qvector<qvector<int>> *__hidden this, qvector<int> *s, size_t len);
void __cdecl ?inject_?$qvector_V?$qvector_PEBD____QEAAXPEAV?$qvector_PEBD___K_Z(qvector<qvector<const char *>> *__hidden this, qvector<const char *> *s, size_t len);
void __cdecl ?inject_?$qvector_V?$qvector_PEBVtwinline_t______QEAAXPEAV?$qvector_PEBVtwinline_t_____K_Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *s, size_t len);
void __cdecl ?inject_?$qvector_V?$qvector__J____QEAAXPEAV?$qvector__J___K_Z(qvector<qvector<long long>> *__hidden this, qvector<long long> *s, size_t len);
void __cdecl ?inject_?$qvector_Vargloc_t____QEAAXPEAVargloc_t___K_Z(qvector<argloc_t> *__hidden this, argloc_t *s, size_t len);
void __cdecl ?inject_?$qvector_Vintmap_t____QEAAXPEAVintmap_t___K_Z(qvector<intmap_t> *__hidden this, intmap_t *s, size_t len);
void __cdecl ?inject_?$qvector_Vnode_set_t____QEAAXPEAVnode_set_t___K_Z(qvector<node_set_t> *__hidden this, node_set_t *s, size_t len);
void __cdecl ?inject_?$qvector_Vop_t____QEAAXPEAVop_t___K_Z(qvector<op_t> *__hidden this, op_t *s, size_t len);
void __cdecl ?inject_?$qvector_Vrangeset_t____QEAAXPEAVrangeset_t___K_Z(qvector<rangeset_t> *__hidden this, rangeset_t *s, size_t len);
void __cdecl ?inject_?$qvector_Vsync_source_t____QEAAXPEAVsync_source_t___K_Z(qvector<sync_source_t> *__hidden this, sync_source_t *s, size_t len);
void __cdecl ?inject_?$qvector_Vtinfo_t____QEAAXPEAVtinfo_t___K_Z(qvector<tinfo_t> *__hidden this, tinfo_t *s, size_t len);
void __cdecl ?inject_?$qvector_Vtryblk_t____QEAAXPEAVtryblk_t___K_Z(qvector<tryblk_t> *__hidden this, tryblk_t *s, size_t len);
void __cdecl ?inject_?$qvector_Vtwinline_t____QEAAXPEAVtwinline_t___K_Z(qvector<twinline_t> *__hidden this, twinline_t *s, size_t len);
void __cdecl ?inject_?$qvector_Vvalstr_t____QEAAXPEAVvalstr_t___K_Z(qvector<valstr_t> *__hidden this, valstr_t *s, size_t len);
void __cdecl ?inject_?$qvector_W4movbpt_code_t____QEAAXPEAW4movbpt_code_t___K_Z(qvector<movbpt_code_t> *__hidden this, movbpt_code_t *s, size_t len);
void __cdecl ?inject_?$qvector__J__QEAAXPEA_J_K_Z(qvector<long long> *__hidden this, __int64 *s, size_t len);
void __cdecl ?inject_?$qvector__K__QEAAXPEA_K_K_Z(qvector<unsigned long long> *__hidden this, unsigned __int64 *s, size_t len);
void __cdecl ?inject_?$qvector__N__QEAAXPEA_N_K_Z(qvector<bool> *__hidden this, bool *s, size_t len);
void __cdecl ?inject_?$qvector__W__QEAAXPEA_W_K_Z(qvector<wchar_t> *__hidden this, __int16 *s, size_t len);
bool __cdecl ?inject_bitrange_t__QEBA_NPEAX_KAEBVbytevec_t___N_Z(const bitrange_t *__hidden this, void *dst, size_t dst_size, const bytevec_t *src, bool is_mf);
bool __cdecl ?inject_bitrange_t__QEBA_NPEAX_KPEBX1_N_Z(const bitrange_t *__hidden this, void *dst, size_t dst_size, const void *src, size_t src_size, bool is_mf);
void __cdecl ?inject_bytevec_t__QEAAXPEAX_K_Z(bytevec_t *__hidden this, void *buf, size_t len);
chooser_base_t::cbres_t __cdecl ?ins_chooser_multi_t__UEAA?AW4cbres_t_chooser_base_t__PEAV?$qvector__K___Z(chooser_multi_t *__hidden this, sizevec_t *);
chooser_t::cbret_t __cdecl ?ins_chooser_t__UEAA?AUcbret_t_1__J_Z(chooser_t *__hidden this, ssize_t);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::iterator __cdecl ?insert_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_$$QEAU?$pair_$$CBHH_2__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator _Where, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::value_type *_Val);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::iterator __cdecl ?insert_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_AEBU?$pair_$$CBHH_2__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator _Where, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::value_type *_Val);
void __cdecl ?insert_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAAXV?$initializer_list_U?$pair_$$CBHH_std___2__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::initializer_list<std::pair<const int, int>> _Ilist);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::iterator __cdecl ?insert_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_$$QEAU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____2__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator _Where, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::value_type *_Val);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::iterator __cdecl ?insert_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_AEBU?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____2__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator _Where, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::value_type *_Val);
void __cdecl ?insert_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAAXV?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___2__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> _Ilist);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::iterator __cdecl ?insert_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_$$QEAU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator _Where, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::value_type *_Val);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::iterator __cdecl ?insert_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_AEBU?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator _Where, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::value_type *_Val);
void __cdecl ?insert_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAAXV?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> _Ilist);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::iterator __cdecl ?insert_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_$$QEAU?$pair_$$CB_K_K_2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator _Where, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::value_type *_Val);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::iterator __cdecl ?insert_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_AEBU?$pair_$$CB_K_K_2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator _Where, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::value_type *_Val);
void __cdecl ?insert_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAAXV?$initializer_list_U?$pair_$$CB_K_K_std___2__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::initializer_list<std::pair<const unsigned long long, unsigned long long>> _Ilist);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::iterator __cdecl ?insert_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_V32_$$QEAH_Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator _Where, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::value_type *_Val);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::iterator __cdecl ?insert_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_V32_AEBH_Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator _Where, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::value_type *_Val);
void __cdecl ?insert_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAAXV?$initializer_list_H_2__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::initializer_list<int> _Ilist);
_qstring<char> *__cdecl ?insert_?$_qstring_D__QEAAAEAV1_AEBV1__Z(_qstring<char> *__hidden this, const _qstring<char> *qstr);
_qstring<char> *__cdecl ?insert_?$_qstring_D__QEAAAEAV1_D_Z(_qstring<char> *__hidden this, char c);
_qstring<char> *__cdecl ?insert_?$_qstring_D__QEAAAEAV1_PEBD_Z(_qstring<char> *__hidden this, char *str);
_qstring<char> *__cdecl ?insert_?$_qstring_D__QEAAAEAV1__KAEBV1__Z(_qstring<char> *__hidden this, size_t idx, const _qstring<char> *qstr);
_qstring<char> *__cdecl ?insert_?$_qstring_D__QEAAAEAV1__KD_Z(_qstring<char> *__hidden this, size_t idx, char c);
_qstring<char> *__cdecl ?insert_?$_qstring_D__QEAAAEAV1__KPEBD0_Z(_qstring<char> *__hidden this, size_t idx, char *str, size_t addlen);
_qstring<char> *__cdecl ?insert_?$_qstring_D__QEAAAEAV1__KPEBD_Z(_qstring<char> *__hidden this, size_t idx, char *str);
_qstring<unsigned char> *__cdecl ?insert_?$_qstring_E__QEAAAEAV1_AEBV1__Z(_qstring<unsigned char> *__hidden this, const _qstring<unsigned char> *qstr);
_qstring<unsigned char> *__cdecl ?insert_?$_qstring_E__QEAAAEAV1_E_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 c);
_qstring<unsigned char> *__cdecl ?insert_?$_qstring_E__QEAAAEAV1_PEBE_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 *str);
_qstring<unsigned char> *__cdecl ?insert_?$_qstring_E__QEAAAEAV1__KAEBV1__Z(_qstring<unsigned char> *__hidden this, size_t idx, const _qstring<unsigned char> *qstr);
_qstring<unsigned char> *__cdecl ?insert_?$_qstring_E__QEAAAEAV1__KE_Z(_qstring<unsigned char> *__hidden this, size_t idx, unsigned __int8 c);
_qstring<unsigned char> *__cdecl ?insert_?$_qstring_E__QEAAAEAV1__KPEBE0_Z(_qstring<unsigned char> *__hidden this, size_t idx, unsigned __int8 *str, size_t addlen);
_qstring<unsigned char> *__cdecl ?insert_?$_qstring_E__QEAAAEAV1__KPEBE_Z(_qstring<unsigned char> *__hidden this, size_t idx, unsigned __int8 *str);
_qstring<wchar_t> *__cdecl ?insert_?$_qstring__W__QEAAAEAV1_AEBV1__Z(_qstring<wchar_t> *__hidden this, const _qstring<wchar_t> *qstr);
_qstring<wchar_t> *__cdecl ?insert_?$_qstring__W__QEAAAEAV1_PEB_W_Z(_qstring<wchar_t> *__hidden this, __int16 *str);
_qstring<wchar_t> *__cdecl ?insert_?$_qstring__W__QEAAAEAV1__KAEBV1__Z(_qstring<wchar_t> *__hidden this, size_t idx, const _qstring<wchar_t> *qstr);
_qstring<wchar_t> *__cdecl ?insert_?$_qstring__W__QEAAAEAV1__KPEB_W0_Z(_qstring<wchar_t> *__hidden this, size_t idx, __int16 *str, size_t addlen);
_qstring<wchar_t> *__cdecl ?insert_?$_qstring__W__QEAAAEAV1__KPEB_W_Z(_qstring<wchar_t> *__hidden this, size_t idx, __int16 *str);
_qstring<wchar_t> *__cdecl ?insert_?$_qstring__W__QEAAAEAV1__K_W_Z(_qstring<wchar_t> *__hidden this, size_t idx, __int16 c);
_qstring<wchar_t> *__cdecl ?insert_?$_qstring__W__QEAAAEAV1__W_Z(_qstring<wchar_t> *__hidden this, __int16 c);
std::basic_string<char>::iterator __cdecl ?insert_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_D_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::const_iterator _Where, char _Ch);
std::basic_string<char>::iterator __cdecl ?insert_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_V?$initializer_list_D_2__Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::const_iterator _Where, const std::initializer_list<char> _Ilist);
std::basic_string<char>::iterator __cdecl ?insert_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2__KD_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::const_iterator _Where, const std::basic_string<char>::size_type _Count, char _Ch);
std::basic_string<char> *__cdecl ?insert_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__K0D_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Count, char _Ch);
std::basic_string<char> *__cdecl ?insert_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__KAEBV12_0_K_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Roff, std::basic_string<char>::size_type _Count);
std::basic_string<char> *__cdecl ?insert_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__KAEBV12__Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, const std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ?insert_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__KQEBD0_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, char *const _Ptr, const std::basic_string<char>::size_type _Count);
std::basic_string<char> *__cdecl ?insert_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__KQEBD_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, char *const _Ptr);
std::basic_string<char16_t>::iterator __cdecl ?insert_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_V?$initializer_list__S_2__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::const_iterator _Where, const std::initializer_list<char16_t> _Ilist);
std::basic_string<char16_t>::iterator __cdecl ?insert_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2__K_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::const_iterator _Where, const std::basic_string<char16_t>::size_type _Count, __int16 _Ch);
std::basic_string<char16_t>::iterator __cdecl ?insert_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2__S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::const_iterator _Where, __int16 _Ch);
std::basic_string<char16_t> *__cdecl ?insert_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__K0_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Count, __int16 _Ch);
std::basic_string<char16_t> *__cdecl ?insert_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__KAEBV12_0_K_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Roff, std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?insert_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__KAEBV12__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ?insert_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__KQEB_S0_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?insert_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__KQEB_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, __int16 *const _Ptr);
std::basic_string<char32_t>::iterator __cdecl ?insert_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_V?$initializer_list__U_2__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::const_iterator _Where, const std::initializer_list<char32_t> _Ilist);
std::basic_string<char32_t>::iterator __cdecl ?insert_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2__K_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::const_iterator _Where, const std::basic_string<char32_t>::size_type _Count, __int32 _Ch);
std::basic_string<char32_t>::iterator __cdecl ?insert_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2__U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::const_iterator _Where, __int32 _Ch);
std::basic_string<char32_t> *__cdecl ?insert_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__K0_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Count, __int32 _Ch);
std::basic_string<char32_t> *__cdecl ?insert_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__KAEBV12_0_K_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Roff, std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?insert_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__KAEBV12__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ?insert_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__KQEB_U0_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?insert_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__KQEB_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, __int32 *const _Ptr);
std::basic_string<wchar_t>::iterator __cdecl ?insert_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_V?$initializer_list__W_2__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::const_iterator _Where, const std::initializer_list<wchar_t> _Ilist);
std::basic_string<wchar_t>::iterator __cdecl ?insert_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2__K_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::const_iterator _Where, const std::basic_string<wchar_t>::size_type _Count, __int16 _Ch);
std::basic_string<wchar_t>::iterator __cdecl ?insert_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA?AV?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2__W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::const_iterator _Where, __int16 _Ch);
std::basic_string<wchar_t> *__cdecl ?insert_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__K0_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Count, __int16 _Ch);
std::basic_string<wchar_t> *__cdecl ?insert_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__KAEBV12_0_K_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Roff, std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?insert_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__KAEBV12__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ?insert_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__KQEB_W0_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?insert_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__KQEB_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, __int16 *const _Ptr);
qlist<ui_request_t *>::iterator __cdecl ?insert_?$qlist_PEAVui_request_t____QEAA?AViterator_1_V21__Z(qlist<ui_request_t *> *__hidden this, qlist<ui_request_t *>::iterator p);
qlist<ui_request_t *>::iterator __cdecl ?insert_?$qlist_PEAVui_request_t____QEAA?AViterator_1_V21_AEBQEAVui_request_t___Z(qlist<ui_request_t *> *__hidden this, qlist<ui_request_t *>::iterator p, ui_request_t **x);
qvector<char>::iterator __cdecl ?insert_?$qvector_D__QEAAPEADPEAD$$QEAD_Z(qvector<char> *__hidden this, qvector<char>::iterator it, char *x);
qvector<char>::iterator __cdecl ?insert_?$qvector_D__QEAAPEADPEADAEBD_Z(qvector<char> *__hidden this, qvector<char>::iterator it, char *x);
qvector<unsigned char>::iterator __cdecl ?insert_?$qvector_E__QEAAPEAEPEAE$$QEAE_Z(qvector<unsigned char> *__hidden this, qvector<unsigned char>::iterator it, unsigned __int8 *x);
qvector<unsigned char>::iterator __cdecl ?insert_?$qvector_E__QEAAPEAEPEAEAEBE_Z(qvector<unsigned char> *__hidden this, qvector<unsigned char>::iterator it, unsigned __int8 *x);
qvector<int>::iterator __cdecl ?insert_?$qvector_H__QEAAPEAHPEAH$$QEAH_Z(qvector<int> *__hidden this, qvector<int>::iterator it, int *x);
qvector<int>::iterator __cdecl ?insert_?$qvector_H__QEAAPEAHPEAHAEBH_Z(qvector<int> *__hidden this, qvector<int>::iterator it, int *x);
qvector<unsigned int>::iterator __cdecl ?insert_?$qvector_I__QEAAPEAIPEAI$$QEAI_Z(qvector<unsigned int> *__hidden this, qvector<unsigned int>::iterator it, unsigned int *x);
qvector<unsigned int>::iterator __cdecl ?insert_?$qvector_I__QEAAPEAIPEAIAEBI_Z(qvector<unsigned int> *__hidden this, qvector<unsigned int>::iterator it, unsigned int *x);
qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator __cdecl ?insert_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAPEAP6A_JPEAW4syntax_highlight_style__PEBD_ZPEAP6A_J01_Z$$QEAP6A_J01_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator it, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator __cdecl ?insert_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAPEAP6A_JPEAW4syntax_highlight_style__PEBD_ZPEAP6A_J01_ZAEBQ6A_J01_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, qvector<long long (*)(syntax_highlight_style *, const char *)>::iterator it, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator __cdecl ?insert_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAPEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZPEAP6A_N01_Z$$QEAP6A_N01_Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator it, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator __cdecl ?insert_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAPEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZPEAP6A_N01_ZAEBQ6A_N01_Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)>::iterator it, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
qvector<bpt_t *>::iterator __cdecl ?insert_?$qvector_PEAUbpt_t____QEAAPEAPEAUbpt_t__PEAPEAU2_$$QEAPEAU2__Z(qvector<bpt_t *> *__hidden this, qvector<bpt_t *>::iterator it, bpt_t **x);
qvector<bpt_t *>::iterator __cdecl ?insert_?$qvector_PEAUbpt_t____QEAAPEAPEAUbpt_t__PEAPEAU2_AEBQEAU2__Z(qvector<bpt_t *> *__hidden this, qvector<bpt_t *>::iterator it, bpt_t **x);
qvector<extlang_t *>::iterator __cdecl ?insert_?$qvector_PEAUextlang_t____QEAAPEAPEAUextlang_t__PEAPEAU2_$$QEAPEAU2__Z(qvector<extlang_t *> *__hidden this, qvector<extlang_t *>::iterator it, extlang_t **x);
qvector<extlang_t *>::iterator __cdecl ?insert_?$qvector_PEAUextlang_t____QEAAPEAPEAUextlang_t__PEAPEAU2_AEBQEAU2__Z(qvector<extlang_t *> *__hidden this, qvector<extlang_t *>::iterator it, extlang_t **x);
qvector<line_rendering_output_entry_t *>::iterator __cdecl ?insert_?$qvector_PEAUline_rendering_output_entry_t____QEAAPEAPEAUline_rendering_output_entry_t__PEAPEAU2_$$QEAPEAU2__Z(qvector<line_rendering_output_entry_t *> *__hidden this, qvector<line_rendering_output_entry_t *>::iterator it, line_rendering_output_entry_t **x);
qvector<line_rendering_output_entry_t *>::iterator __cdecl ?insert_?$qvector_PEAUline_rendering_output_entry_t____QEAAPEAPEAUline_rendering_output_entry_t__PEAPEAU2_AEBQEAU2__Z(qvector<line_rendering_output_entry_t *> *__hidden this, qvector<line_rendering_output_entry_t *>::iterator it, line_rendering_output_entry_t **x);
qvector<snapshot_t *>::iterator __cdecl ?insert_?$qvector_PEAVsnapshot_t____QEAAPEAPEAVsnapshot_t__PEAPEAV2_$$QEAPEAV2__Z(qvector<snapshot_t *> *__hidden this, qvector<snapshot_t *>::iterator it, snapshot_t **x);
qvector<snapshot_t *>::iterator __cdecl ?insert_?$qvector_PEAVsnapshot_t____QEAAPEAPEAVsnapshot_t__PEAPEAV2_AEBQEAV2__Z(qvector<snapshot_t *> *__hidden this, qvector<snapshot_t *>::iterator it, snapshot_t **x);
qvector<const char *>::iterator __cdecl ?insert_?$qvector_PEBD__QEAAPEAPEBDPEAPEBD$$QEAPEBD_Z(qvector<const char *> *__hidden this, qvector<const char *>::iterator it, const char **x);
qvector<const char *>::iterator __cdecl ?insert_?$qvector_PEBD__QEAAPEAPEBDPEAPEBDAEBQEBD_Z(qvector<const char *> *__hidden this, qvector<const char *>::iterator it, const char **x);
qvector<const bpt_t *>::iterator __cdecl ?insert_?$qvector_PEBUbpt_t____QEAAPEAPEBUbpt_t__PEAPEBU2_$$QEAPEBU2__Z(qvector<const bpt_t *> *__hidden this, qvector<const bpt_t *>::iterator it, const bpt_t **x);
qvector<const bpt_t *>::iterator __cdecl ?insert_?$qvector_PEBUbpt_t____QEAAPEAPEBUbpt_t__PEAPEBU2_AEBQEBU2__Z(qvector<const bpt_t *> *__hidden this, qvector<const bpt_t *>::iterator it, const bpt_t **x);
qvector<const rangeset_t *>::iterator __cdecl ?insert_?$qvector_PEBVrangeset_t____QEAAPEAPEBVrangeset_t__PEAPEBV2_$$QEAPEBV2__Z(qvector<const rangeset_t *> *__hidden this, qvector<const rangeset_t *>::iterator it, const rangeset_t **x);
qvector<const rangeset_t *>::iterator __cdecl ?insert_?$qvector_PEBVrangeset_t____QEAAPEAPEBVrangeset_t__PEAPEBV2_AEBQEBV2__Z(qvector<const rangeset_t *> *__hidden this, qvector<const rangeset_t *>::iterator it, const rangeset_t **x);
qvector<const twinline_t *>::iterator __cdecl ?insert_?$qvector_PEBVtwinline_t____QEAAPEAPEBVtwinline_t__PEAPEBV2_$$QEAPEBV2__Z(qvector<const twinline_t *> *__hidden this, qvector<const twinline_t *>::iterator it, const twinline_t **x);
qvector<const twinline_t *>::iterator __cdecl ?insert_?$qvector_PEBVtwinline_t____QEAAPEAPEBVtwinline_t__PEAPEBV2_AEBQEBV2__Z(qvector<const twinline_t *> *__hidden this, qvector<const twinline_t *>::iterator it, const twinline_t **x);
qvector<argpart_t>::iterator __cdecl ?insert_?$qvector_Uargpart_t____QEAAPEAUargpart_t__PEAU2_$$QEAU2__Z(qvector<argpart_t> *__hidden this, qvector<argpart_t>::iterator it, argpart_t *x);
qvector<argpart_t>::iterator __cdecl ?insert_?$qvector_Uargpart_t____QEAAPEAUargpart_t__PEAU2_AEBU2__Z(qvector<argpart_t> *__hidden this, qvector<argpart_t>::iterator it, argpart_t *x);
qvector<bpt_t>::iterator __cdecl ?insert_?$qvector_Ubpt_t____QEAAPEAUbpt_t__PEAU2_$$QEAU2__Z(qvector<bpt_t> *__hidden this, qvector<bpt_t>::iterator it, bpt_t *x);
qvector<bpt_t>::iterator __cdecl ?insert_?$qvector_Ubpt_t____QEAAPEAUbpt_t__PEAU2_AEBU2__Z(qvector<bpt_t> *__hidden this, qvector<bpt_t>::iterator it, bpt_t *x);
qvector<bptaddrs_t>::iterator __cdecl ?insert_?$qvector_Ubptaddrs_t____QEAAPEAUbptaddrs_t__PEAU2_$$QEAU2__Z(qvector<bptaddrs_t> *__hidden this, qvector<bptaddrs_t>::iterator it, bptaddrs_t *x);
qvector<bptaddrs_t>::iterator __cdecl ?insert_?$qvector_Ubptaddrs_t____QEAAPEAUbptaddrs_t__PEAU2_AEBU2__Z(qvector<bptaddrs_t> *__hidden this, qvector<bptaddrs_t>::iterator it, bptaddrs_t *x);
qvector<call_stack_info_t>::iterator __cdecl ?insert_?$qvector_Ucall_stack_info_t____QEAAPEAUcall_stack_info_t__PEAU2_$$QEAU2__Z(qvector<call_stack_info_t> *__hidden this, qvector<call_stack_info_t>::iterator it, call_stack_info_t *x);
qvector<call_stack_info_t>::iterator __cdecl ?insert_?$qvector_Ucall_stack_info_t____QEAAPEAUcall_stack_info_t__PEAU2_AEBU2__Z(qvector<call_stack_info_t> *__hidden this, qvector<call_stack_info_t>::iterator it, call_stack_info_t *x);
qvector<catch_t>::iterator __cdecl ?insert_?$qvector_Ucatch_t____QEAAPEAUcatch_t__PEAU2_$$QEAU2__Z(qvector<catch_t> *__hidden this, qvector<catch_t>::iterator it, catch_t *x);
qvector<catch_t>::iterator __cdecl ?insert_?$qvector_Ucatch_t____QEAAPEAUcatch_t__PEAU2_AEBU2__Z(qvector<catch_t> *__hidden this, qvector<catch_t>::iterator it, catch_t *x);
qvector<cfgopt_set_t>::iterator __cdecl ?insert_?$qvector_Ucfgopt_set_t____QEAAPEAUcfgopt_set_t__PEAU2_$$QEAU2__Z(qvector<cfgopt_set_t> *__hidden this, qvector<cfgopt_set_t>::iterator it, cfgopt_set_t *x);
qvector<cfgopt_set_t>::iterator __cdecl ?insert_?$qvector_Ucfgopt_set_t____QEAAPEAUcfgopt_set_t__PEAU2_AEBU2__Z(qvector<cfgopt_set_t> *__hidden this, qvector<cfgopt_set_t>::iterator it, cfgopt_set_t *x);
qvector<channel_redir_t>::iterator __cdecl ?insert_?$qvector_Uchannel_redir_t____QEAAPEAUchannel_redir_t__PEAU2_$$QEAU2__Z(qvector<channel_redir_t> *__hidden this, qvector<channel_redir_t>::iterator it, channel_redir_t *x);
qvector<channel_redir_t>::iterator __cdecl ?insert_?$qvector_Uchannel_redir_t____QEAAPEAUchannel_redir_t__PEAU2_AEBU2__Z(qvector<channel_redir_t> *__hidden this, qvector<channel_redir_t>::iterator it, channel_redir_t *x);
qvector<cliopt_t>::iterator __cdecl ?insert_?$qvector_Ucliopt_t____QEAAPEAUcliopt_t__PEAU2_$$QEAU2__Z(qvector<cliopt_t> *__hidden this, qvector<cliopt_t>::iterator it, cliopt_t *x);
qvector<cliopt_t>::iterator __cdecl ?insert_?$qvector_Ucliopt_t____QEAAPEAUcliopt_t__PEAU2_AEBU2__Z(qvector<cliopt_t> *__hidden this, qvector<cliopt_t>::iterator it, cliopt_t *x);
qvector<compiled_binpat_t>::iterator __cdecl ?insert_?$qvector_Ucompiled_binpat_t____QEAAPEAUcompiled_binpat_t__PEAU2_$$QEAU2__Z(qvector<compiled_binpat_t> *__hidden this, qvector<compiled_binpat_t>::iterator it, compiled_binpat_t *x);
qvector<compiled_binpat_t>::iterator __cdecl ?insert_?$qvector_Ucompiled_binpat_t____QEAAPEAUcompiled_binpat_t__PEAU2_AEBU2__Z(qvector<compiled_binpat_t> *__hidden this, qvector<compiled_binpat_t>::iterator it, compiled_binpat_t *x);
qvector<debug_event_t>::iterator __cdecl ?insert_?$qvector_Udebug_event_t____QEAAPEAUdebug_event_t__PEAU2_$$QEAU2__Z(qvector<debug_event_t> *__hidden this, qvector<debug_event_t>::iterator it, debug_event_t *x);
qvector<debug_event_t>::iterator __cdecl ?insert_?$qvector_Udebug_event_t____QEAAPEAUdebug_event_t__PEAU2_AEBU2__Z(qvector<debug_event_t> *__hidden this, qvector<debug_event_t>::iterator it, debug_event_t *x);
qvector<direntry_t>::iterator __cdecl ?insert_?$qvector_Udirentry_t____QEAAPEAUdirentry_t__PEAU2_$$QEAU2__Z(qvector<direntry_t> *__hidden this, qvector<direntry_t>::iterator it, direntry_t *x);
qvector<direntry_t>::iterator __cdecl ?insert_?$qvector_Udirentry_t____QEAAPEAUdirentry_t__PEAU2_AEBU2__Z(qvector<direntry_t> *__hidden this, qvector<direntry_t>::iterator it, direntry_t *x);
qvector<dirtree_cursor_t>::iterator __cdecl ?insert_?$qvector_Udirtree_cursor_t____QEAAPEAUdirtree_cursor_t__PEAU2_$$QEAU2__Z(qvector<dirtree_cursor_t> *__hidden this, qvector<dirtree_cursor_t>::iterator it, dirtree_cursor_t *x);
qvector<dirtree_cursor_t>::iterator __cdecl ?insert_?$qvector_Udirtree_cursor_t____QEAAPEAUdirtree_cursor_t__PEAU2_AEBU2__Z(qvector<dirtree_cursor_t> *__hidden this, qvector<dirtree_cursor_t>::iterator it, dirtree_cursor_t *x);
qvector<ea_name_t>::iterator __cdecl ?insert_?$qvector_Uea_name_t____QEAAPEAUea_name_t__PEAU2_$$QEAU2__Z(qvector<ea_name_t> *__hidden this, qvector<ea_name_t>::iterator it, ea_name_t *x);
qvector<ea_name_t>::iterator __cdecl ?insert_?$qvector_Uea_name_t____QEAAPEAUea_name_t__PEAU2_AEBU2__Z(qvector<ea_name_t> *__hidden this, qvector<ea_name_t>::iterator it, ea_name_t *x);
qvector<edge_t>::iterator __cdecl ?insert_?$qvector_Uedge_t____QEAAPEAUedge_t__PEAU2_$$QEAU2__Z(qvector<edge_t> *__hidden this, qvector<edge_t>::iterator it, edge_t *x);
qvector<edge_t>::iterator __cdecl ?insert_?$qvector_Uedge_t____QEAAPEAUedge_t__PEAU2_AEBU2__Z(qvector<edge_t> *__hidden this, qvector<edge_t>::iterator it, edge_t *x);
qvector<enum_member_t>::iterator __cdecl ?insert_?$qvector_Uenum_member_t____QEAAPEAUenum_member_t__PEAU2_$$QEAU2__Z(qvector<enum_member_t> *__hidden this, qvector<enum_member_t>::iterator it, enum_member_t *x);
qvector<enum_member_t>::iterator __cdecl ?insert_?$qvector_Uenum_member_t____QEAAPEAUenum_member_t__PEAU2_AEBU2__Z(qvector<enum_member_t> *__hidden this, qvector<enum_member_t>::iterator it, enum_member_t *x);
qvector<exception_info_t>::iterator __cdecl ?insert_?$qvector_Uexception_info_t____QEAAPEAUexception_info_t__PEAU2_$$QEAU2__Z(qvector<exception_info_t> *__hidden this, qvector<exception_info_t>::iterator it, exception_info_t *x);
qvector<exception_info_t>::iterator __cdecl ?insert_?$qvector_Uexception_info_t____QEAAPEAUexception_info_t__PEAU2_AEBU2__Z(qvector<exception_info_t> *__hidden this, qvector<exception_info_t>::iterator it, exception_info_t *x);
qvector<fixup_info_t>::iterator __cdecl ?insert_?$qvector_Ufixup_info_t____QEAAPEAUfixup_info_t__PEAU2_$$QEAU2__Z(qvector<fixup_info_t> *__hidden this, qvector<fixup_info_t>::iterator it, fixup_info_t *x);
qvector<fixup_info_t>::iterator __cdecl ?insert_?$qvector_Ufixup_info_t____QEAAPEAUfixup_info_t__PEAU2_AEBU2__Z(qvector<fixup_info_t> *__hidden this, qvector<fixup_info_t>::iterator it, fixup_info_t *x);
qvector<funcarg_t>::iterator __cdecl ?insert_?$qvector_Ufuncarg_t____QEAAPEAUfuncarg_t__PEAU2_$$QEAU2__Z(qvector<funcarg_t> *__hidden this, qvector<funcarg_t>::iterator it, funcarg_t *x);
qvector<funcarg_t>::iterator __cdecl ?insert_?$qvector_Ufuncarg_t____QEAAPEAUfuncarg_t__PEAU2_AEBU2__Z(qvector<funcarg_t> *__hidden this, qvector<funcarg_t>::iterator it, funcarg_t *x);
qvector<group_crinfo_t>::iterator __cdecl ?insert_?$qvector_Ugroup_crinfo_t____QEAAPEAUgroup_crinfo_t__PEAU2_$$QEAU2__Z(qvector<group_crinfo_t> *__hidden this, qvector<group_crinfo_t>::iterator it, group_crinfo_t *x);
qvector<group_crinfo_t>::iterator __cdecl ?insert_?$qvector_Ugroup_crinfo_t____QEAAPEAUgroup_crinfo_t__PEAU2_AEBU2__Z(qvector<group_crinfo_t> *__hidden this, qvector<group_crinfo_t>::iterator it, group_crinfo_t *x);
qvector<idc_global_t>::iterator __cdecl ?insert_?$qvector_Uidc_global_t____QEAAPEAUidc_global_t__PEAU2_$$QEAU2__Z(qvector<idc_global_t> *__hidden this, qvector<idc_global_t>::iterator it, idc_global_t *x);
qvector<idc_global_t>::iterator __cdecl ?insert_?$qvector_Uidc_global_t____QEAAPEAUidc_global_t__PEAU2_AEBU2__Z(qvector<idc_global_t> *__hidden this, qvector<idc_global_t>::iterator it, idc_global_t *x);
qvector<idp_desc_t>::iterator __cdecl ?insert_?$qvector_Uidp_desc_t____QEAAPEAUidp_desc_t__PEAU2_$$QEAU2__Z(qvector<idp_desc_t> *__hidden this, qvector<idp_desc_t>::iterator it, idp_desc_t *x);
qvector<idp_desc_t>::iterator __cdecl ?insert_?$qvector_Uidp_desc_t____QEAAPEAUidp_desc_t__PEAU2_AEBU2__Z(qvector<idp_desc_t> *__hidden this, qvector<idp_desc_t>::iterator it, idp_desc_t *x);
qvector<idp_name_t>::iterator __cdecl ?insert_?$qvector_Uidp_name_t____QEAAPEAUidp_name_t__PEAU2_$$QEAU2__Z(qvector<idp_name_t> *__hidden this, qvector<idp_name_t>::iterator it, idp_name_t *x);
qvector<idp_name_t>::iterator __cdecl ?insert_?$qvector_Uidp_name_t____QEAAPEAUidp_name_t__PEAU2_AEBU2__Z(qvector<idp_name_t> *__hidden this, qvector<idp_name_t>::iterator it, idp_name_t *x);
qvector<ioport_bit_t>::iterator __cdecl ?insert_?$qvector_Uioport_bit_t____QEAAPEAUioport_bit_t__PEAU2_$$QEAU2__Z(qvector<ioport_bit_t> *__hidden this, qvector<ioport_bit_t>::iterator it, ioport_bit_t *x);
qvector<ioport_bit_t>::iterator __cdecl ?insert_?$qvector_Uioport_bit_t____QEAAPEAUioport_bit_t__PEAU2_AEBU2__Z(qvector<ioport_bit_t> *__hidden this, qvector<ioport_bit_t>::iterator it, ioport_bit_t *x);
qvector<ioport_t>::iterator __cdecl ?insert_?$qvector_Uioport_t____QEAAPEAUioport_t__PEAU2_$$QEAU2__Z(qvector<ioport_t> *__hidden this, qvector<ioport_t>::iterator it, ioport_t *x);
qvector<ioport_t>::iterator __cdecl ?insert_?$qvector_Uioport_t____QEAAPEAUioport_t__PEAU2_AEBU2__Z(qvector<ioport_t> *__hidden this, qvector<ioport_t>::iterator it, ioport_t *x);
qvector<jvalue_t>::iterator __cdecl ?insert_?$qvector_Ujvalue_t____QEAAPEAUjvalue_t__PEAU2_$$QEAU2__Z(qvector<jvalue_t> *__hidden this, qvector<jvalue_t>::iterator it, jvalue_t *x);
qvector<jvalue_t>::iterator __cdecl ?insert_?$qvector_Ujvalue_t____QEAAPEAUjvalue_t__PEAU2_AEBU2__Z(qvector<jvalue_t> *__hidden this, qvector<jvalue_t>::iterator it, jvalue_t *x);
qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator __cdecl ?insert_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAPEAUkeywords_style_t_ida_syntax_highlighter_t__PEAU23_$$QEAU23__Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator it, ida_syntax_highlighter_t::keywords_style_t *x);
qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator __cdecl ?insert_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAPEAUkeywords_style_t_ida_syntax_highlighter_t__PEAU23_AEBU23__Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, qvector<ida_syntax_highlighter_t::keywords_style_t>::iterator it, ida_syntax_highlighter_t::keywords_style_t *x);
qvector<kvp_t>::iterator __cdecl ?insert_?$qvector_Ukvp_t____QEAAPEAUkvp_t__PEAU2_$$QEAU2__Z(qvector<kvp_t> *__hidden this, qvector<kvp_t>::iterator it, kvp_t *x);
qvector<kvp_t>::iterator __cdecl ?insert_?$qvector_Ukvp_t____QEAAPEAUkvp_t__PEAU2_AEBU2__Z(qvector<kvp_t> *__hidden this, qvector<kvp_t>::iterator it, kvp_t *x);
qvector<lochist_entry_t>::iterator __cdecl ?insert_?$qvector_Ulochist_entry_t____QEAAPEAUlochist_entry_t__PEAU2_$$QEAU2__Z(qvector<lochist_entry_t> *__hidden this, qvector<lochist_entry_t>::iterator it, lochist_entry_t *x);
qvector<lochist_entry_t>::iterator __cdecl ?insert_?$qvector_Ulochist_entry_t____QEAAPEAUlochist_entry_t__PEAU2_AEBU2__Z(qvector<lochist_entry_t> *__hidden this, qvector<lochist_entry_t>::iterator it, lochist_entry_t *x);
qvector<lowcnd_t>::iterator __cdecl ?insert_?$qvector_Ulowcnd_t____QEAAPEAUlowcnd_t__PEAU2_$$QEAU2__Z(qvector<lowcnd_t> *__hidden this, qvector<lowcnd_t>::iterator it, lowcnd_t *x);
qvector<lowcnd_t>::iterator __cdecl ?insert_?$qvector_Ulowcnd_t____QEAAPEAUlowcnd_t__PEAU2_AEBU2__Z(qvector<lowcnd_t> *__hidden this, qvector<lowcnd_t>::iterator it, lowcnd_t *x);
qvector<memory_info_t>::iterator __cdecl ?insert_?$qvector_Umemory_info_t____QEAAPEAUmemory_info_t__PEAU2_$$QEAU2__Z(qvector<memory_info_t> *__hidden this, qvector<memory_info_t>::iterator it, memory_info_t *x);
qvector<memory_info_t>::iterator __cdecl ?insert_?$qvector_Umemory_info_t____QEAAPEAUmemory_info_t__PEAU2_AEBU2__Z(qvector<memory_info_t> *__hidden this, qvector<memory_info_t>::iterator it, memory_info_t *x);
qvector<memreg_info_t>::iterator __cdecl ?insert_?$qvector_Umemreg_info_t____QEAAPEAUmemreg_info_t__PEAU2_$$QEAU2__Z(qvector<memreg_info_t> *__hidden this, qvector<memreg_info_t>::iterator it, memreg_info_t *x);
qvector<memreg_info_t>::iterator __cdecl ?insert_?$qvector_Umemreg_info_t____QEAAPEAUmemreg_info_t__PEAU2_AEBU2__Z(qvector<memreg_info_t> *__hidden this, qvector<memreg_info_t>::iterator it, memreg_info_t *x);
qvector<modinfo_t>::iterator __cdecl ?insert_?$qvector_Umodinfo_t____QEAAPEAUmodinfo_t__PEAU2_$$QEAU2__Z(qvector<modinfo_t> *__hidden this, qvector<modinfo_t>::iterator it, modinfo_t *x);
qvector<modinfo_t>::iterator __cdecl ?insert_?$qvector_Umodinfo_t____QEAAPEAUmodinfo_t__PEAU2_AEBU2__Z(qvector<modinfo_t> *__hidden this, qvector<modinfo_t>::iterator it, modinfo_t *x);
qvector<movbpt_info_t>::iterator __cdecl ?insert_?$qvector_Umovbpt_info_t____QEAAPEAUmovbpt_info_t__PEAU2_$$QEAU2__Z(qvector<movbpt_info_t> *__hidden this, qvector<movbpt_info_t>::iterator it, movbpt_info_t *x);
qvector<movbpt_info_t>::iterator __cdecl ?insert_?$qvector_Umovbpt_info_t____QEAAPEAUmovbpt_info_t__PEAU2_AEBU2__Z(qvector<movbpt_info_t> *__hidden this, qvector<movbpt_info_t>::iterator it, movbpt_info_t *x);
qvector<ida_syntax_highlighter_t::multicmt_t>::iterator __cdecl ?insert_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAPEAUmulticmt_t_ida_syntax_highlighter_t__PEAU23_$$QEAU23__Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, qvector<ida_syntax_highlighter_t::multicmt_t>::iterator it, ida_syntax_highlighter_t::multicmt_t *x);
qvector<ida_syntax_highlighter_t::multicmt_t>::iterator __cdecl ?insert_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAPEAUmulticmt_t_ida_syntax_highlighter_t__PEAU23_AEBU23__Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, qvector<ida_syntax_highlighter_t::multicmt_t>::iterator it, ida_syntax_highlighter_t::multicmt_t *x);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator __cdecl ?insert_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAPEAUplain_char_ptr_t_ida_syntax_highlighter_t__PEAU23_$$QEAU23__Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator it, ida_syntax_highlighter_t::plain_char_ptr_t *x);
qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator __cdecl ?insert_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAPEAUplain_char_ptr_t_ida_syntax_highlighter_t__PEAU23_AEBU23__Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, qvector<ida_syntax_highlighter_t::plain_char_ptr_t>::iterator it, ida_syntax_highlighter_t::plain_char_ptr_t *x);
qvector<point_t>::iterator __cdecl ?insert_?$qvector_Upoint_t____QEAAPEAUpoint_t__PEAU2_$$QEAU2__Z(qvector<point_t> *__hidden this, qvector<point_t>::iterator it, point_t *x);
qvector<point_t>::iterator __cdecl ?insert_?$qvector_Upoint_t____QEAAPEAUpoint_t__PEAU2_AEBU2__Z(qvector<point_t> *__hidden this, qvector<point_t>::iterator it, point_t *x);
qvector<process_info_t>::iterator __cdecl ?insert_?$qvector_Uprocess_info_t____QEAAPEAUprocess_info_t__PEAU2_$$QEAU2__Z(qvector<process_info_t> *__hidden this, qvector<process_info_t>::iterator it, process_info_t *x);
qvector<process_info_t>::iterator __cdecl ?insert_?$qvector_Uprocess_info_t____QEAAPEAUprocess_info_t__PEAU2_AEBU2__Z(qvector<process_info_t> *__hidden this, qvector<process_info_t>::iterator it, process_info_t *x);
qvector<qbasic_block_t>::iterator __cdecl ?insert_?$qvector_Uqbasic_block_t____QEAAPEAUqbasic_block_t__PEAU2_$$QEAU2__Z(qvector<qbasic_block_t> *__hidden this, qvector<qbasic_block_t>::iterator it, qbasic_block_t *x);
qvector<qbasic_block_t>::iterator __cdecl ?insert_?$qvector_Uqbasic_block_t____QEAAPEAUqbasic_block_t__PEAU2_AEBU2__Z(qvector<qbasic_block_t> *__hidden this, qvector<qbasic_block_t>::iterator it, qbasic_block_t *x);
qvector<range_t>::iterator __cdecl ?insert_?$qvector_Urange_t____QEAAPEAUrange_t__PEAU2_$$QEAU2__Z(qvector<range_t> *__hidden this, qvector<range_t>::iterator it, range_t *x);
qvector<range_t>::iterator __cdecl ?insert_?$qvector_Urange_t____QEAAPEAUrange_t__PEAU2_AEBU2__Z(qvector<range_t> *__hidden this, qvector<range_t>::iterator it, range_t *x);
qvector<rect_t>::iterator __cdecl ?insert_?$qvector_Urect_t____QEAAPEAUrect_t__PEAU2_$$QEAU2__Z(qvector<rect_t> *__hidden this, qvector<rect_t>::iterator it, rect_t *x);
qvector<rect_t>::iterator __cdecl ?insert_?$qvector_Urect_t____QEAAPEAUrect_t__PEAU2_AEBU2__Z(qvector<rect_t> *__hidden this, qvector<rect_t>::iterator it, rect_t *x);
qvector<refinfo_desc_t>::iterator __cdecl ?insert_?$qvector_Urefinfo_desc_t____QEAAPEAUrefinfo_desc_t__PEAU2_$$QEAU2__Z(qvector<refinfo_desc_t> *__hidden this, qvector<refinfo_desc_t>::iterator it, refinfo_desc_t *x);
qvector<refinfo_desc_t>::iterator __cdecl ?insert_?$qvector_Urefinfo_desc_t____QEAAPEAUrefinfo_desc_t__PEAU2_AEBU2__Z(qvector<refinfo_desc_t> *__hidden this, qvector<refinfo_desc_t>::iterator it, refinfo_desc_t *x);
qvector<reg_access_t>::iterator __cdecl ?insert_?$qvector_Ureg_access_t____QEAAPEAUreg_access_t__PEAU2_$$QEAU2__Z(qvector<reg_access_t> *__hidden this, qvector<reg_access_t>::iterator it, reg_access_t *x);
qvector<reg_access_t>::iterator __cdecl ?insert_?$qvector_Ureg_access_t____QEAAPEAUreg_access_t__PEAU2_AEBU2__Z(qvector<reg_access_t> *__hidden this, qvector<reg_access_t>::iterator it, reg_access_t *x);
qvector<reg_info_t>::iterator __cdecl ?insert_?$qvector_Ureg_info_t____QEAAPEAUreg_info_t__PEAU2_$$QEAU2__Z(qvector<reg_info_t> *__hidden this, qvector<reg_info_t>::iterator it, reg_info_t *x);
qvector<reg_info_t>::iterator __cdecl ?insert_?$qvector_Ureg_info_t____QEAAPEAUreg_info_t__PEAU2_AEBU2__Z(qvector<reg_info_t> *__hidden this, qvector<reg_info_t>::iterator it, reg_info_t *x);
qvector<register_info_t>::iterator __cdecl ?insert_?$qvector_Uregister_info_t____QEAAPEAUregister_info_t__PEAU2_$$QEAU2__Z(qvector<register_info_t> *__hidden this, qvector<register_info_t>::iterator it, register_info_t *x);
qvector<register_info_t>::iterator __cdecl ?insert_?$qvector_Uregister_info_t____QEAAPEAUregister_info_t__PEAU2_AEBU2__Z(qvector<register_info_t> *__hidden this, qvector<register_info_t>::iterator it, register_info_t *x);
qvector<regobj_t>::iterator __cdecl ?insert_?$qvector_Uregobj_t____QEAAPEAUregobj_t__PEAU2_$$QEAU2__Z(qvector<regobj_t> *__hidden this, qvector<regobj_t>::iterator it, regobj_t *x);
qvector<regobj_t>::iterator __cdecl ?insert_?$qvector_Uregobj_t____QEAAPEAUregobj_t__PEAU2_AEBU2__Z(qvector<regobj_t> *__hidden this, qvector<regobj_t>::iterator it, regobj_t *x);
qvector<regval_t>::iterator __cdecl ?insert_?$qvector_Uregval_t____QEAAPEAUregval_t__PEAU2_$$QEAU2__Z(qvector<regval_t> *__hidden this, qvector<regval_t>::iterator it, regval_t *x);
qvector<regval_t>::iterator __cdecl ?insert_?$qvector_Uregval_t____QEAAPEAUregval_t__PEAU2_AEBU2__Z(qvector<regval_t> *__hidden this, qvector<regval_t>::iterator it, regval_t *x);
qvector<row_info_t>::iterator __cdecl ?insert_?$qvector_Urow_info_t____QEAAPEAUrow_info_t__PEAU2_$$QEAU2__Z(qvector<row_info_t> *__hidden this, qvector<row_info_t>::iterator it, row_info_t *x);
qvector<row_info_t>::iterator __cdecl ?insert_?$qvector_Urow_info_t____QEAAPEAUrow_info_t__PEAU2_AEBU2__Z(qvector<row_info_t> *__hidden this, qvector<row_info_t>::iterator it, row_info_t *x);
qvector<scattered_segm_t>::iterator __cdecl ?insert_?$qvector_Uscattered_segm_t____QEAAPEAUscattered_segm_t__PEAU2_$$QEAU2__Z(qvector<scattered_segm_t> *__hidden this, qvector<scattered_segm_t>::iterator it, scattered_segm_t *x);
qvector<scattered_segm_t>::iterator __cdecl ?insert_?$qvector_Uscattered_segm_t____QEAAPEAUscattered_segm_t__PEAU2_AEBU2__Z(qvector<scattered_segm_t> *__hidden this, qvector<scattered_segm_t>::iterator it, scattered_segm_t *x);
qvector<segm_move_info_t>::iterator __cdecl ?insert_?$qvector_Usegm_move_info_t____QEAAPEAUsegm_move_info_t__PEAU2_$$QEAU2__Z(qvector<segm_move_info_t> *__hidden this, qvector<segm_move_info_t>::iterator it, segm_move_info_t *x);
qvector<segm_move_info_t>::iterator __cdecl ?insert_?$qvector_Usegm_move_info_t____QEAAPEAUsegm_move_info_t__PEAU2_AEBU2__Z(qvector<segm_move_info_t> *__hidden this, qvector<segm_move_info_t>::iterator it, segm_move_info_t *x);
qvector<selection_item_t>::iterator __cdecl ?insert_?$qvector_Uselection_item_t____QEAAPEAUselection_item_t__PEAU2_$$QEAU2__Z(qvector<selection_item_t> *__hidden this, qvector<selection_item_t>::iterator it, selection_item_t *x);
qvector<selection_item_t>::iterator __cdecl ?insert_?$qvector_Uselection_item_t____QEAAPEAUselection_item_t__PEAU2_AEBU2__Z(qvector<selection_item_t> *__hidden this, qvector<selection_item_t>::iterator it, selection_item_t *x);
qvector<simd_info_t>::iterator __cdecl ?insert_?$qvector_Usimd_info_t____QEAAPEAUsimd_info_t__PEAU2_$$QEAU2__Z(qvector<simd_info_t> *__hidden this, qvector<simd_info_t>::iterator it, simd_info_t *x);
qvector<simd_info_t>::iterator __cdecl ?insert_?$qvector_Usimd_info_t____QEAAPEAUsimd_info_t__PEAU2_AEBU2__Z(qvector<simd_info_t> *__hidden this, qvector<simd_info_t>::iterator it, simd_info_t *x);
qvector<simpleline_t>::iterator __cdecl ?insert_?$qvector_Usimpleline_t____QEAAPEAUsimpleline_t__PEAU2_$$QEAU2__Z(qvector<simpleline_t> *__hidden this, qvector<simpleline_t>::iterator it, simpleline_t *x);
qvector<simpleline_t>::iterator __cdecl ?insert_?$qvector_Usimpleline_t____QEAAPEAUsimpleline_t__PEAU2_AEBU2__Z(qvector<simpleline_t> *__hidden this, qvector<simpleline_t>::iterator it, simpleline_t *x);
qvector<stkpnt_t>::iterator __cdecl ?insert_?$qvector_Ustkpnt_t____QEAAPEAUstkpnt_t__PEAU2_$$QEAU2__Z(qvector<stkpnt_t> *__hidden this, qvector<stkpnt_t>::iterator it, stkpnt_t *x);
qvector<stkpnt_t>::iterator __cdecl ?insert_?$qvector_Ustkpnt_t____QEAAPEAUstkpnt_t__PEAU2_AEBU2__Z(qvector<stkpnt_t> *__hidden this, qvector<stkpnt_t>::iterator it, stkpnt_t *x);
qvector<tev_info_reg_t>::iterator __cdecl ?insert_?$qvector_Utev_info_reg_t____QEAAPEAUtev_info_reg_t__PEAU2_$$QEAU2__Z(qvector<tev_info_reg_t> *__hidden this, qvector<tev_info_reg_t>::iterator it, tev_info_reg_t *x);
qvector<tev_info_reg_t>::iterator __cdecl ?insert_?$qvector_Utev_info_reg_t____QEAAPEAUtev_info_reg_t__PEAU2_AEBU2__Z(qvector<tev_info_reg_t> *__hidden this, qvector<tev_info_reg_t>::iterator it, tev_info_reg_t *x);
qvector<tev_info_t>::iterator __cdecl ?insert_?$qvector_Utev_info_t____QEAAPEAUtev_info_t__PEAU2_$$QEAU2__Z(qvector<tev_info_t> *__hidden this, qvector<tev_info_t>::iterator it, tev_info_t *x);
qvector<tev_info_t>::iterator __cdecl ?insert_?$qvector_Utev_info_t____QEAAPEAUtev_info_t__PEAU2_AEBU2__Z(qvector<tev_info_t> *__hidden this, qvector<tev_info_t>::iterator it, tev_info_t *x);
qvector<tev_reg_value_t>::iterator __cdecl ?insert_?$qvector_Utev_reg_value_t____QEAAPEAUtev_reg_value_t__PEAU2_$$QEAU2__Z(qvector<tev_reg_value_t> *__hidden this, qvector<tev_reg_value_t>::iterator it, tev_reg_value_t *x);
qvector<tev_reg_value_t>::iterator __cdecl ?insert_?$qvector_Utev_reg_value_t____QEAAPEAUtev_reg_value_t__PEAU2_AEBU2__Z(qvector<tev_reg_value_t> *__hidden this, qvector<tev_reg_value_t>::iterator it, tev_reg_value_t *x);
qvector<thread_name_t>::iterator __cdecl ?insert_?$qvector_Uthread_name_t____QEAAPEAUthread_name_t__PEAU2_$$QEAU2__Z(qvector<thread_name_t> *__hidden this, qvector<thread_name_t>::iterator it, thread_name_t *x);
qvector<thread_name_t>::iterator __cdecl ?insert_?$qvector_Uthread_name_t____QEAAPEAUthread_name_t__PEAU2_AEBU2__Z(qvector<thread_name_t> *__hidden this, qvector<thread_name_t>::iterator it, thread_name_t *x);
qvector<token_t>::iterator __cdecl ?insert_?$qvector_Utoken_t____QEAAPEAUtoken_t__PEAU2_$$QEAU2__Z(qvector<token_t> *__hidden this, qvector<token_t>::iterator it, token_t *x);
qvector<token_t>::iterator __cdecl ?insert_?$qvector_Utoken_t____QEAAPEAUtoken_t__PEAU2_AEBU2__Z(qvector<token_t> *__hidden this, qvector<token_t>::iterator it, token_t *x);
qvector<type_attr_t>::iterator __cdecl ?insert_?$qvector_Utype_attr_t____QEAAPEAUtype_attr_t__PEAU2_$$QEAU2__Z(qvector<type_attr_t> *__hidden this, qvector<type_attr_t>::iterator it, type_attr_t *x);
qvector<type_attr_t>::iterator __cdecl ?insert_?$qvector_Utype_attr_t____QEAAPEAUtype_attr_t__PEAU2_AEBU2__Z(qvector<type_attr_t> *__hidden this, qvector<type_attr_t>::iterator it, type_attr_t *x);
qvector<udt_member_t>::iterator __cdecl ?insert_?$qvector_Uudt_member_t____QEAAPEAUudt_member_t__PEAU2_$$QEAU2__Z(qvector<udt_member_t> *__hidden this, qvector<udt_member_t>::iterator it, udt_member_t *x);
qvector<udt_member_t>::iterator __cdecl ?insert_?$qvector_Uudt_member_t____QEAAPEAUudt_member_t__PEAU2_AEBU2__Z(qvector<udt_member_t> *__hidden this, qvector<udt_member_t>::iterator it, udt_member_t *x);
qvector<update_bpt_info_t>::iterator __cdecl ?insert_?$qvector_Uupdate_bpt_info_t____QEAAPEAUupdate_bpt_info_t__PEAU2_$$QEAU2__Z(qvector<update_bpt_info_t> *__hidden this, qvector<update_bpt_info_t>::iterator it, update_bpt_info_t *x);
qvector<update_bpt_info_t>::iterator __cdecl ?insert_?$qvector_Uupdate_bpt_info_t____QEAAPEAUupdate_bpt_info_t__PEAU2_AEBU2__Z(qvector<update_bpt_info_t> *__hidden this, qvector<update_bpt_info_t>::iterator it, update_bpt_info_t *x);
qvector<xreflist_entry_t>::iterator __cdecl ?insert_?$qvector_Uxreflist_entry_t____QEAAPEAUxreflist_entry_t__PEAU2_$$QEAU2__Z(qvector<xreflist_entry_t> *__hidden this, qvector<xreflist_entry_t>::iterator it, xreflist_entry_t *x);
qvector<xreflist_entry_t>::iterator __cdecl ?insert_?$qvector_Uxreflist_entry_t____QEAAPEAUxreflist_entry_t__PEAU2_AEBU2__Z(qvector<xreflist_entry_t> *__hidden this, qvector<xreflist_entry_t>::iterator it, xreflist_entry_t *x);
qvector<_qstring<char>>::iterator __cdecl ?insert_?$qvector_V?$_qstring_D____QEAAPEAV?$_qstring_D__PEAV2_$$QEAV2__Z(qvector<_qstring<char>> *__hidden this, qvector<_qstring<char>>::iterator it, _qstring<char> *x);
qvector<_qstring<char>>::iterator __cdecl ?insert_?$qvector_V?$_qstring_D____QEAAPEAV?$_qstring_D__PEAV2_AEBV2__Z(qvector<_qstring<char>> *__hidden this, qvector<_qstring<char>>::iterator it, _qstring<char> *x);
qvector<_qstring<unsigned char>>::iterator __cdecl ?insert_?$qvector_V?$_qstring_E____QEAAPEAV?$_qstring_E__PEAV2_$$QEAV2__Z(qvector<_qstring<unsigned char>> *__hidden this, qvector<_qstring<unsigned char>>::iterator it, _qstring<unsigned char> *x);
qvector<_qstring<unsigned char>>::iterator __cdecl ?insert_?$qvector_V?$_qstring_E____QEAAPEAV?$_qstring_E__PEAV2_AEBV2__Z(qvector<_qstring<unsigned char>> *__hidden this, qvector<_qstring<unsigned char>>::iterator it, _qstring<unsigned char> *x);
qvector<_qstring<wchar_t>>::iterator __cdecl ?insert_?$qvector_V?$_qstring__W____QEAAPEAV?$_qstring__W__PEAV2_$$QEAV2__Z(qvector<_qstring<wchar_t>> *__hidden this, qvector<_qstring<wchar_t>>::iterator it, _qstring<wchar_t> *x);
qvector<_qstring<wchar_t>>::iterator __cdecl ?insert_?$qvector_V?$_qstring__W____QEAAPEAV?$_qstring__W__PEAV2_AEBV2__Z(qvector<_qstring<wchar_t>> *__hidden this, qvector<_qstring<wchar_t>>::iterator it, _qstring<wchar_t> *x);
qvector<qrefcnt_t<source_item_t>>::iterator __cdecl ?insert_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAPEAV?$qrefcnt_t_Vsource_item_t____PEAV2_$$QEAV2__Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qvector<qrefcnt_t<source_item_t>>::iterator it, qrefcnt_t<source_item_t> *x);
qvector<qrefcnt_t<source_item_t>>::iterator __cdecl ?insert_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAPEAV?$qrefcnt_t_Vsource_item_t____PEAV2_AEBV2__Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qvector<qrefcnt_t<source_item_t>>::iterator it, qrefcnt_t<source_item_t> *x);
qvector<qvector<int>>::iterator __cdecl ?insert_?$qvector_V?$qvector_H____QEAAPEAV?$qvector_H__PEAV2_$$QEAV2__Z(qvector<qvector<int>> *__hidden this, qvector<qvector<int>>::iterator it, qvector<int> *x);
qvector<qvector<int>>::iterator __cdecl ?insert_?$qvector_V?$qvector_H____QEAAPEAV?$qvector_H__PEAV2_AEBV2__Z(qvector<qvector<int>> *__hidden this, qvector<qvector<int>>::iterator it, qvector<int> *x);
qvector<qvector<const char *>>::iterator __cdecl ?insert_?$qvector_V?$qvector_PEBD____QEAAPEAV?$qvector_PEBD__PEAV2_$$QEAV2__Z(qvector<qvector<const char *>> *__hidden this, qvector<qvector<const char *>>::iterator it, qvector<const char *> *x);
qvector<qvector<const char *>>::iterator __cdecl ?insert_?$qvector_V?$qvector_PEBD____QEAAPEAV?$qvector_PEBD__PEAV2_AEBV2__Z(qvector<qvector<const char *>> *__hidden this, qvector<qvector<const char *>>::iterator it, qvector<const char *> *x);
qvector<qvector<const twinline_t *>>::iterator __cdecl ?insert_?$qvector_V?$qvector_PEBVtwinline_t______QEAAPEAV?$qvector_PEBVtwinline_t____PEAV2_$$QEAV2__Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<qvector<const twinline_t *>>::iterator it, qvector<const twinline_t *> *x);
qvector<qvector<const twinline_t *>>::iterator __cdecl ?insert_?$qvector_V?$qvector_PEBVtwinline_t______QEAAPEAV?$qvector_PEBVtwinline_t____PEAV2_AEBV2__Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<qvector<const twinline_t *>>::iterator it, qvector<const twinline_t *> *x);
qvector<qvector<long long>>::iterator __cdecl ?insert_?$qvector_V?$qvector__J____QEAAPEAV?$qvector__J__PEAV2_$$QEAV2__Z(qvector<qvector<long long>> *__hidden this, qvector<qvector<long long>>::iterator it, qvector<long long> *x);
qvector<qvector<long long>>::iterator __cdecl ?insert_?$qvector_V?$qvector__J____QEAAPEAV?$qvector__J__PEAV2_AEBV2__Z(qvector<qvector<long long>> *__hidden this, qvector<qvector<long long>>::iterator it, qvector<long long> *x);
qvector<argloc_t>::iterator __cdecl ?insert_?$qvector_Vargloc_t____QEAAPEAVargloc_t__PEAV2_$$QEAV2__Z(qvector<argloc_t> *__hidden this, qvector<argloc_t>::iterator it, argloc_t *x);
qvector<argloc_t>::iterator __cdecl ?insert_?$qvector_Vargloc_t____QEAAPEAVargloc_t__PEAV2_AEBV2__Z(qvector<argloc_t> *__hidden this, qvector<argloc_t>::iterator it, argloc_t *x);
qvector<intmap_t>::iterator __cdecl ?insert_?$qvector_Vintmap_t____QEAAPEAVintmap_t__PEAV2_$$QEAV2__Z(qvector<intmap_t> *__hidden this, qvector<intmap_t>::iterator it, intmap_t *x);
qvector<intmap_t>::iterator __cdecl ?insert_?$qvector_Vintmap_t____QEAAPEAVintmap_t__PEAV2_AEBV2__Z(qvector<intmap_t> *__hidden this, qvector<intmap_t>::iterator it, intmap_t *x);
qvector<node_set_t>::iterator __cdecl ?insert_?$qvector_Vnode_set_t____QEAAPEAVnode_set_t__PEAV2_$$QEAV2__Z(qvector<node_set_t> *__hidden this, qvector<node_set_t>::iterator it, node_set_t *x);
qvector<node_set_t>::iterator __cdecl ?insert_?$qvector_Vnode_set_t____QEAAPEAVnode_set_t__PEAV2_AEBV2__Z(qvector<node_set_t> *__hidden this, qvector<node_set_t>::iterator it, node_set_t *x);
qvector<op_t>::iterator __cdecl ?insert_?$qvector_Vop_t____QEAAPEAVop_t__PEAV2_$$QEAV2__Z(qvector<op_t> *__hidden this, qvector<op_t>::iterator it, op_t *x);
qvector<op_t>::iterator __cdecl ?insert_?$qvector_Vop_t____QEAAPEAVop_t__PEAV2_AEBV2__Z(qvector<op_t> *__hidden this, qvector<op_t>::iterator it, op_t *x);
qvector<rangeset_t>::iterator __cdecl ?insert_?$qvector_Vrangeset_t____QEAAPEAVrangeset_t__PEAV2_$$QEAV2__Z(qvector<rangeset_t> *__hidden this, qvector<rangeset_t>::iterator it, rangeset_t *x);
qvector<rangeset_t>::iterator __cdecl ?insert_?$qvector_Vrangeset_t____QEAAPEAVrangeset_t__PEAV2_AEBV2__Z(qvector<rangeset_t> *__hidden this, qvector<rangeset_t>::iterator it, rangeset_t *x);
qvector<sync_source_t>::iterator __cdecl ?insert_?$qvector_Vsync_source_t____QEAAPEAVsync_source_t__PEAV2_$$QEAV2__Z(qvector<sync_source_t> *__hidden this, qvector<sync_source_t>::iterator it, sync_source_t *x);
qvector<sync_source_t>::iterator __cdecl ?insert_?$qvector_Vsync_source_t____QEAAPEAVsync_source_t__PEAV2_AEBV2__Z(qvector<sync_source_t> *__hidden this, qvector<sync_source_t>::iterator it, sync_source_t *x);
qvector<tinfo_t>::iterator __cdecl ?insert_?$qvector_Vtinfo_t____QEAAPEAVtinfo_t__PEAV2_$$QEAV2__Z(qvector<tinfo_t> *__hidden this, qvector<tinfo_t>::iterator it, tinfo_t *x);
qvector<tinfo_t>::iterator __cdecl ?insert_?$qvector_Vtinfo_t____QEAAPEAVtinfo_t__PEAV2_AEBV2__Z(qvector<tinfo_t> *__hidden this, qvector<tinfo_t>::iterator it, tinfo_t *x);
qvector<tryblk_t>::iterator __cdecl ?insert_?$qvector_Vtryblk_t____QEAAPEAVtryblk_t__PEAV2_$$QEAV2__Z(qvector<tryblk_t> *__hidden this, qvector<tryblk_t>::iterator it, tryblk_t *x);
qvector<tryblk_t>::iterator __cdecl ?insert_?$qvector_Vtryblk_t____QEAAPEAVtryblk_t__PEAV2_AEBV2__Z(qvector<tryblk_t> *__hidden this, qvector<tryblk_t>::iterator it, tryblk_t *x);
qvector<twinline_t>::iterator __cdecl ?insert_?$qvector_Vtwinline_t____QEAAPEAVtwinline_t__PEAV2_$$QEAV2__Z(qvector<twinline_t> *__hidden this, qvector<twinline_t>::iterator it, twinline_t *x);
qvector<twinline_t>::iterator __cdecl ?insert_?$qvector_Vtwinline_t____QEAAPEAVtwinline_t__PEAV2_AEBV2__Z(qvector<twinline_t> *__hidden this, qvector<twinline_t>::iterator it, twinline_t *x);
qvector<valstr_t>::iterator __cdecl ?insert_?$qvector_Vvalstr_t____QEAAPEAVvalstr_t__PEAV2_$$QEAV2__Z(qvector<valstr_t> *__hidden this, qvector<valstr_t>::iterator it, valstr_t *x);
qvector<valstr_t>::iterator __cdecl ?insert_?$qvector_Vvalstr_t____QEAAPEAVvalstr_t__PEAV2_AEBV2__Z(qvector<valstr_t> *__hidden this, qvector<valstr_t>::iterator it, valstr_t *x);
qvector<movbpt_code_t>::iterator __cdecl ?insert_?$qvector_W4movbpt_code_t____QEAAPEAW4movbpt_code_t__PEAW42_$$QEAW42__Z(qvector<movbpt_code_t> *__hidden this, qvector<movbpt_code_t>::iterator it, movbpt_code_t *x);
qvector<movbpt_code_t>::iterator __cdecl ?insert_?$qvector_W4movbpt_code_t____QEAAPEAW4movbpt_code_t__PEAW42_AEBW42__Z(qvector<movbpt_code_t> *__hidden this, qvector<movbpt_code_t>::iterator it, movbpt_code_t *x);
qvector<long long>::iterator __cdecl ?insert_?$qvector__J__QEAAPEA_JPEA_J$$QEA_J_Z(qvector<long long> *__hidden this, qvector<long long>::iterator it, __int64 *x);
qvector<long long>::iterator __cdecl ?insert_?$qvector__J__QEAAPEA_JPEA_JAEB_J_Z(qvector<long long> *__hidden this, qvector<long long>::iterator it, __int64 *x);
qvector<unsigned long long>::iterator __cdecl ?insert_?$qvector__K__QEAAPEA_KPEA_K$$QEA_K_Z(qvector<unsigned long long> *__hidden this, qvector<unsigned long long>::iterator it, unsigned __int64 *x);
qvector<unsigned long long>::iterator __cdecl ?insert_?$qvector__K__QEAAPEA_KPEA_KAEB_K_Z(qvector<unsigned long long> *__hidden this, qvector<unsigned long long>::iterator it, unsigned __int64 *x);
qvector<bool>::iterator __cdecl ?insert_?$qvector__N__QEAAPEA_NPEA_N$$QEA_N_Z(qvector<bool> *__hidden this, qvector<bool>::iterator it, bool *x);
qvector<bool>::iterator __cdecl ?insert_?$qvector__N__QEAAPEA_NPEA_NAEB_N_Z(qvector<bool> *__hidden this, qvector<bool>::iterator it, bool *x);
qvector<wchar_t>::iterator __cdecl ?insert_?$qvector__W__QEAAPEA_WPEA_W$$QEA_W_Z(qvector<wchar_t> *__hidden this, qvector<wchar_t>::iterator it, __int16 *x);
qvector<wchar_t>::iterator __cdecl ?insert_?$qvector__W__QEAAPEA_WPEA_WAEB_W_Z(qvector<wchar_t> *__hidden this, qvector<wchar_t>::iterator it, __int16 *x);
void __cdecl ?insert_simple_nodes_mutable_graph_t__QEBAXAEAV?$qvector_H__H_Z(const mutable_graph_t *__hidden this, intvec_t *nodes, int group);
void __cdecl ?insert_visible_nodes_mutable_graph_t__QEBAXAEAV?$qvector_H__H_Z(const mutable_graph_t *__hidden this, intvec_t *nodes, int group);
ssize_t __cdecl ?insn_reads_tbit_processor_t__SA_JAEBVinsn_t__P6AAEBUregval_t__PEBDPEBU3__ZAEBU3__Z(const insn_t *insn, processor_t::regval_getter_t *_getreg, const regval_t *regvalues);
void __cdecl ?intersect_bitrange_t__QEAAXAEBV1__Z(bitrange_t *__hidden this, const bitrange_t *r);
void __cdecl ?intersect_interval_t__QEAAXAEBU1__Z(interval_t *__hidden this, const interval_t *r);
void __cdecl ?intersect_node_set_t__QEAAXAEBV1__Z(node_set_t *__hidden this, const node_set_t *r);
void __cdecl ?intersect_range_t__QEAAXAEBU1__Z(range_t *__hidden this, const range_t *r);
bool __cdecl ?intersect_rangeset_t__QEAA_NAEBV1__Z(rangeset_t *__hidden this, const rangeset_t *aset);
void __cdecl ?intersect_rect_t__QEAAXAEBU1__Z(rect_t *__hidden this, const rect_t *r);
bool __cdecl ?is_16bit_segment_t__QEBA_NXZ(const segment_t *__hidden this);
bool __cdecl ?is_32bit_segment_t__QEBA_NXZ(const segment_t *__hidden this);
bool __cdecl ?is_64bit_enum_type_data_t__QEBA_NXZ(const enum_type_data_t *__hidden this);
bool __cdecl ?is_64bit_insn_t__QEBA_NXZ(const insn_t *__hidden this);
bool __cdecl ?is_64bit_segment_t__QEBA_NXZ(const segment_t *__hidden this);
bool __cdecl ?is_absbpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_active_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_active_srcinfo_provider_t__QEBA_NXZ(const srcinfo_provider_t *__hidden this);
bool __cdecl ?is_addr_kind_hexplace_gen_t__QEBA_NXZ(const hexplace_gen_t *__hidden this);
bool __cdecl ?is_aflags_initialized_printop_t__QEBA_NXZ(const printop_t *__hidden this);
ssize_t __cdecl ?is_align_insn_processor_t__SA_J_K_Z(ea_t ea);
ssize_t __cdecl ?is_alloca_probe_processor_t__SA_J_K_Z(ea_t ea);
bool __cdecl ?is_anonymous_udm_udt_member_t__QEBA_NXZ(const udt_member_t *__hidden this);
bool __cdecl ?is_anonymous_udt_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_append_channel_redir_t__QEBA_NXZ(const channel_redir_t *__hidden this);
bool __cdecl ?is_archldr_load_info_t__QEAA_NXZ(load_info_t *__hidden this);
bool __cdecl ?is_arithmetic_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_array_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool ?is_available_netnode__SA_NXZ(void);
bool __cdecl ?is_badloc_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_baseclass_member_t__QEBA_NXZ(const member_t *__hidden this);
bool __cdecl ?is_baseclass_udt_member_t__QEBA_NXZ(const udt_member_t *__hidden this);
ssize_t __cdecl ?is_basic_block_end_processor_t__SA_JAEBVinsn_t___N_Z(const insn_t *insn, bool call_insn_stops_block);
bool __cdecl ?is_bg_color_direct_line_rendering_output_entry_t__QEBA_NXZ(const line_rendering_output_entry_t *__hidden this);
bool __cdecl ?is_bg_color_empty_line_rendering_output_entry_t__QEBA_NXZ(const line_rendering_output_entry_t *__hidden this);
bool __cdecl ?is_bg_color_key_line_rendering_output_entry_t__QEBA_NXZ(const line_rendering_output_entry_t *__hidden this);
bool __cdecl ?is_bitfield_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_bitfield_udt_member_t__QEBA_NXZ(const udt_member_t *__hidden this);
bool __cdecl ?is_bool_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
ssize_t __cdecl ?is_call_insn_processor_t__SA_JAEBVinsn_t___Z(const insn_t *insn);
bool __cdecl ?is_canon_insn_insn_t__QEBA_NAEBUprocessor_t___Z(const insn_t *__hidden this, const processor_t *ph);
bool __cdecl ?is_canon_insn_processor_t__QEBA_NG_Z(const processor_t *__hidden this, uint16 itype);
bool __cdecl ?is_castable_to_tinfo_t__QEBA_NAEBV1__Z(const tinfo_t *__hidden this, const tinfo_t *target);
bool __cdecl ?is_char_enum_type_data_t__QEBA_NXZ(const enum_type_data_t *__hidden this);
bool __cdecl ?is_char_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_choosable_struc_t__QEBA_NXZ(const struc_t *__hidden this);
bool __cdecl ?is_code_ptr_ptr_type_data_t__QEBA_NXZ(const ptr_type_data_t *__hidden this);
bool __cdecl ?is_collapsed_node_mutable_graph_t__QEBA_NH_Z(const mutable_graph_t *__hidden this, int node);
bool __cdecl ?is_compiled_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_complex_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
ssize_t __cdecl ?is_cond_insn_processor_t__SA_JAEBVinsn_t___Z(const insn_t *insn);
bool __cdecl ?is_const_func_type_data_t__QEBA_NXZ(const func_type_data_t *__hidden this);
bool __cdecl ?is_const_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
ssize_t __cdecl ?is_control_flow_guard_processor_t__SA_JPEAHPEBVinsn_t___Z(int *p_reg, const insn_t *insn);
bool __cdecl ?is_convertible_idc_value_t__QEBA_NXZ(const idc_value_t *__hidden this);
bool __cdecl ?is_copyof_struc_t__QEBA_NXZ(const struc_t *__hidden this);
bool __cdecl ?is_correct_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_cpp_tryblk_t__QEBA_NXZ(const tryblk_t *__hidden this);
bool __cdecl ?is_cppobj_udt_type_data_t__QEBA_NXZ(const udt_type_data_t *__hidden this);
bool __cdecl ?is_ctor_func_type_data_t__QEBA_NXZ(const func_type_data_t *__hidden this);
bool __cdecl ?is_curitem_changed_hexplace_gen_t__UEBA_NXZ(const hexplace_gen_t *__hidden this);
bool __cdecl ?is_custom_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_custom_fixup_data_t__QEBA_NXZ(const fixup_data_t *__hidden this);
bool __cdecl ?is_custom_refinfo_t__QEBA_NXZ(const refinfo_t *__hidden this);
bool __cdecl ?is_custom_switch_info_t__QEBA_NXZ(const switch_info_t *__hidden this);
bool __cdecl ?is_debugger_segm_segment_t__QEBA_NXZ(const segment_t *__hidden this);
bool __cdecl ?is_decl_array_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_bitfield_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_bool_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_char_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_complex_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_const_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_double_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_enum_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_float_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_floating_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_func_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_int128_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_int16_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_int32_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_int64_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_int_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_last_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_ldouble_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_paf_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_partial_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_ptr_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_struct_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_sue_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_tbyte_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_typedef_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_uchar_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_udt_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_uint128_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_uint16_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_uint32_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_uint64_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_uint_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_union_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_unknown_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_void_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decl_volatile_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_decompiler_srcinfo_provider_t__QEBA_NXZ(const srcinfo_provider_t *__hidden this);
bool __cdecl ?is_deleted_node_mutable_graph_t__QEBA_NH_Z(const mutable_graph_t *__hidden this, int node);
bool __cdecl ?is_destructor_member_t__QEBA_NXZ(const member_t *__hidden this);
bool __cdecl ?is_dialog_button_enabled_form_actions_t__UEAA_NW4dlgbtn_t_1__Z(form_actions_t *__hidden this, form_actions_t::dlgbtn_t btn);
bool __cdecl ?is_dirtree_persisted_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?is_dirty_til_t__QEBA_NXZ(const til_t *__hidden this);
bool __cdecl ?is_displayable_node_mutable_graph_t__QEBA_NH_Z(const mutable_graph_t *__hidden this, int node);
bool __cdecl ?is_dot_node_mutable_graph_t__QEBA_NH_Z(const mutable_graph_t *__hidden this, int node);
bool __cdecl ?is_double_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_dtor_func_type_data_t__QEBA_NXZ(const func_type_data_t *__hidden this);
bool __cdecl ?is_dupname_member_t__QEBA_NXZ(const member_t *__hidden this);
bool __cdecl ?is_ea_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_edge_graph_item_t__QEBA_NXZ(const graph_item_t *__hidden this);
bool __cdecl ?is_edited_byte_hexplace_gen_t__UEBA_N_KPEA_K_Z(const hexplace_gen_t *__hidden this, ea_t ea, uint64 *out_value);
bool __cdecl ?is_editing_hexplace_gen_t__UEBA_NXZ(const hexplace_gen_t *__hidden this);
bool __cdecl ?is_editing_text_hexplace_gen_t__UEBA_NXZ(const hexplace_gen_t *__hidden this);
bool __cdecl ?is_empty_path_bpt_location_t__QEBA_NXZ(const bpt_location_t *__hidden this);
bool __cdecl ?is_empty_udt_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_enabled_srcinfo_provider_t__QEBA_NXZ(const srcinfo_provider_t *__hidden this);
bool __cdecl ?is_enum_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_ephemeral_segm_segment_t__QEBA_NXZ(const segment_t *__hidden this);
bool __cdecl ?is_epilog_insn_ignore_micro_t__QEBA_N_K_Z(const ignore_micro_t *__hidden this, ea_t ea);
bool __cdecl ?is_equal_jump_pattern_t__QEAA_NAEBVop_t__H_Z(jump_pattern_t *__hidden this, const op_t *op, int r_i);
bool __cdecl ?is_equal_jump_pattern_t__QEAA_NHHE_Z(jump_pattern_t *__hidden this, int reg, int r_i, op_dtype_t dtype);
bool __cdecl ?is_equal_rangeset_t__QEBA_NAEBV1__Z(const rangeset_t *__hidden this, const rangeset_t *aset);
bool __cdecl ?is_expr_source_item_t__QEBA_NPEBVeval_ctx_t___Z(const source_item_t *__hidden this, const eval_ctx_t *ctx);
bool __cdecl ?is_ext_arithmetic_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_ext_integral_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_extdef_fixup_data_t__QEBA_NXZ(const fixup_data_t *__hidden this);
bool __cdecl ?is_far_func_t__QEBA_NXZ(const func_t *__hidden this);
ssize_t __cdecl ?is_far_jump_processor_t__SA_JH_Z(int icode);
bool __cdecl ?is_float_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_floating_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_forbidden_edge_graph_node_visitor_t__UEBA_NHH_Z(const graph_node_visitor_t *__hidden this, int, int);
bool __cdecl ?is_force_default_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?is_forward_decl_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_fragmented_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_frame_struc_t__QEBA_NXZ(const struc_t *__hidden this);
bool __cdecl ?is_from_subtil_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_func_source_item_t__QEBA_NPEBVeval_ctx_t___Z(const source_item_t *__hidden this, const eval_ctx_t *ctx);
bool __cdecl ?is_func_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_funcarg_off_processor_t__QEBA_NPEBVfunc_t___K_Z(const processor_t *__hidden this, const func_t *pfn, uval_t frameoff);
bool __cdecl ?is_funcptr_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_ghost_struc_t__QEBA_NXZ(const struc_t *__hidden this);
bool __cdecl ?is_golang_cc_func_type_data_t__QEBA_NXZ(const func_type_data_t *__hidden this);
bool __cdecl ?is_group_node_mutable_graph_t__QEBA_NH_Z(const mutable_graph_t *__hidden this, int node);
bool __cdecl ?is_header_segm_segment_t__QEBA_NXZ(const segment_t *__hidden this);
bool __cdecl ?is_hex_enum_type_data_t__QEBA_NXZ(const enum_type_data_t *__hidden this);
bool __cdecl ?is_hidden_struc_t__QEBA_NXZ(const struc_t *__hidden this);
bool __cdecl ?is_hidden_segtype_segment_t__QEBA_NXZ(const segment_t *__hidden this);
bool __cdecl ?is_high_func_type_data_t__QEBA_NXZ(const func_type_data_t *__hidden this);
bool __cdecl ?is_high_func_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_history_enabled_lochist_t__QEBA_NXZ(const lochist_t *__hidden this);
bool __cdecl ?is_homogeneous_jarr_t__QEBA_NW4jtype_t___Z(const jarr_t *__hidden this, jtype_t t);
bool __cdecl ?is_hwbpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_idc_extlang_t__QEBA_NXZ(const extlang_t *__hidden this);
bool __cdecl ?is_imm_op_t__QEBA_N_K_Z(const op_t *__hidden this, uval_t v);
bool __cdecl ?is_inactive_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_indirect_switch_info_t__QEBA_NXZ(const switch_info_t *__hidden this);
ssize_t __cdecl ?is_indirect_jump_processor_t__SA_JAEBVinsn_t___Z(const insn_t *insn);
bool __cdecl ?is_input_channel_redir_t__QEBA_NXZ(const channel_redir_t *__hidden this);
bool __cdecl ?is_int128_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_int16_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_int32_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_int64_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_int_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_integral_idc_value_t__QEAA_NXZ(idc_value_t *__hidden this);
bool __cdecl ?is_integral_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_intersection_empty_rect_t__QEBA_NAEBU1__Z(const rect_t *__hidden this, const rect_t *r);
ssize_t __cdecl ?is_jump_func_processor_t__SA_JPEAVfunc_t__PEA_K1_Z(func_t *pfn, ea_t *jump_target, ea_t *func_pointer);
bool __cdecl ?is_last_baseclass_udt_type_data_t__QEAA_N_K_Z(udt_type_data_t *__hidden this, size_t idx);
bool __cdecl ?is_ldouble_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_loaded_idadll_t__QEBA_NXZ(const idadll_t *__hidden this);
bool __cdecl ?is_loader_segm_segment_t__QEBA_NXZ(const segment_t *__hidden this);
bool __cdecl ?is_locvar_source_item_t__QEBA_NPEBVeval_ctx_t___Z(const source_item_t *__hidden this, const eval_ctx_t *ctx);
bool __cdecl ?is_low_level_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_lumina_usable_processor_t__QEBA_NXZ(const processor_t *__hidden this);
bool __cdecl ?is_macro_insn_t__QEBA_NXZ(const insn_t *__hidden this);
bool __cdecl ?is_manually_castable_to_tinfo_t__QEBA_NAEBV1__Z(const tinfo_t *__hidden this, const tinfo_t *target);
bool __cdecl ?is_mappedto_struc_t__QEBA_NXZ(const struc_t *__hidden this);
bool __cdecl ?is_mbroff_cfgopt_t__QEBA_NXZ(const cfgopt_t *__hidden this);
bool __cdecl ?is_method_udt_member_t__QEBA_NXZ(const udt_member_t *__hidden this);
bool __cdecl ?is_mixed_scattered_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_modal_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?is_module_source_item_t__QEBA_NPEBVeval_ctx_t___Z(const source_item_t *__hidden this, const eval_ctx_t *ctx);
bool __cdecl ?is_msstruct_udt_type_data_t__QEBA_NXZ(const udt_type_data_t *__hidden this);
bool __cdecl ?is_multi_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?is_namespace_aware_extlang_t__QEBA_NXZ(const extlang_t *__hidden this);
bool __cdecl ?is_narrower_jump_pattern_t__KA_NEE_Z(op_dtype_t dt1, op_dtype_t dt2);
bool __cdecl ?is_negative_fpvalue_t__QEBA_NXZ(const fpvalue_t *__hidden this);
bool __cdecl ?is_no_ones_refinfo_t__QEBA_NXZ(const refinfo_t *__hidden this);
bool __cdecl ?is_no_zeros_refinfo_t__QEBA_NXZ(const refinfo_t *__hidden this);
bool __cdecl ?is_node_graph_item_t__QEBA_NXZ(const graph_item_t *__hidden this);
bool __cdecl ?is_noidb_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?is_nolowcase_switch_info_t__QEBA_NXZ(const switch_info_t *__hidden this);
bool __cdecl ?is_noret_func_type_data_t__QEBA_NXZ(const func_type_data_t *__hidden this);
bool __cdecl ?is_noret_block_qflow_chart_t__QEBA_N_K_Z(const qflow_chart_t *__hidden this, size_t blknum);
bool __cdecl ?is_one_fpval_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_output_channel_redir_t__QEBA_NXZ(const channel_redir_t *__hidden this);
bool __cdecl ?is_paf_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_page_bpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_partial_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_partially_active_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_pastend_refinfo_t__QEBA_NXZ(const refinfo_t *__hidden this);
bool __cdecl ?is_present_in_menus_data_format_t__QEBA_NXZ(const data_format_t *__hidden this);
bool __cdecl ?is_present_in_menus_data_type_t__QEBA_NXZ(const data_type_t *__hidden this);
bool __cdecl ?is_prolog_insn_ignore_micro_t__QEBA_N_K_Z(const ignore_micro_t *__hidden this, ea_t ea);
bool __cdecl ?is_ptr_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_ptr_or_array_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_pure_func_type_data_t__QEBA_NXZ(const func_type_data_t *__hidden this);
bool __cdecl ?is_purging_cc_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_pvoid_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_quick_filter_visible_initially_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?is_quoted_channel_redir_t__QEBA_NXZ(const channel_redir_t *__hidden this);
bool __cdecl ?is_reg1_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_reg2_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_reg_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_reg_op_t__QEBA_NH_Z(const op_t *__hidden this, int r);
bool __cdecl ?is_register_sync_source_t__QEBA_NXZ(const sync_source_t *__hidden this);
bool __cdecl ?is_relbpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_remote_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?is_resmod_avail_debugger_t__QEBA_NH_Z(const debugger_t *__hidden this, int resmod);
bool __cdecl ?is_ret_block_qflow_chart_t__QEBA_N_K_Z(const qflow_chart_t *__hidden this, size_t blknum);
ssize_t __cdecl ?is_ret_insn_processor_t__SA_JAEBVinsn_t___N_Z(const insn_t *insn, bool strict);
bool __cdecl ?is_root_cursor_dirtree_cursor_t__QEBA_NXZ(const dirtree_cursor_t *__hidden this);
bool __cdecl ?is_rrel_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_rvaoff_refinfo_t__QEBA_NXZ(const refinfo_t *__hidden this);
bool __cdecl ?is_safe_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?is_same_chooser_base_t__QEBA_NPEBU1__Z(const chooser_base_t *__hidden this, const chooser_base_t *other);
ssize_t __cdecl ?is_sane_insn_processor_t__SA_JAEBVinsn_t__H_Z(const insn_t *insn, int no_crefs);
bool __cdecl ?is_scalar_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_scattered_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_sdec_enum_type_data_t__QEBA_NXZ(const enum_type_data_t *__hidden this);
bool __cdecl ?is_seh_tryblk_t__QEBA_NXZ(const tryblk_t *__hidden this);
bool __cdecl ?is_shifted_ptr_type_data_t__QEBA_NXZ(const ptr_type_data_t *__hidden this);
bool __cdecl ?is_shifted_ptr_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_signed_fixup_handler_t__QEBA_NXZ(const fixup_handler_t *__hidden this);
bool __cdecl ?is_signed_refinfo_t__QEBA_NXZ(const refinfo_t *__hidden this);
bool __cdecl ?is_signed_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_simple_node_mutable_graph_t__QEBA_NH_Z(const mutable_graph_t *__hidden this, int node);
bool __cdecl ?is_small_udt_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
ssize_t __cdecl ?is_sp_based_processor_t__SA_JAEBVinsn_t__AEBVop_t___Z(const insn_t *insn, const op_t *x);
bool __cdecl ?is_sparse_switch_info_t__QEBA_NXZ(const switch_info_t *__hidden this);
bool __cdecl ?is_spoiled_jump_pattern_t__QEAA_NH_Z(jump_pattern_t *__hidden this, int r_i);
bool __cdecl ?is_srcbpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_sse_type_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_static_func_type_data_t__QEBA_NXZ(const func_type_data_t *__hidden this);
bool __cdecl ?is_status_bar_hidden_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?is_stkarg_load_argtinfo_helper_t__UEAA_NAEBVinsn_t__PEAH1_Z(argtinfo_helper_t *__hidden this, const insn_t *insn, int *src, int *dst);
bool __cdecl ?is_stkoff_argloc_t__QEBA_NXZ(const argloc_t *__hidden this);
bool __cdecl ?is_stmt_source_item_t__QEBA_NPEBVeval_ctx_t___Z(const source_item_t *__hidden this, const eval_ctx_t *ctx);
bool __cdecl ?is_struct_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_sttvar_source_item_t__QEBA_NPEBVeval_ctx_t___Z(const source_item_t *__hidden this, const eval_ctx_t *ctx);
bool __cdecl ?is_subgraph_node_mutable_graph_t__QEBA_NH_Z(const mutable_graph_t *__hidden this, int node);
bool __cdecl ?is_subset_of_rangeset_t__QEBA_NAEBV1__Z(const rangeset_t *__hidden this, const rangeset_t *aset);
bool __cdecl ?is_subtract_refinfo_t__QEBA_NXZ(const refinfo_t *__hidden this);
bool __cdecl ?is_subtract_switch_info_t__QEBA_NXZ(const switch_info_t *__hidden this);
bool __cdecl ?is_sue_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
ssize_t __cdecl ?is_switch_processor_t__SA_JPEAUswitch_info_t__AEBVinsn_t___Z(switch_info_t *si, const insn_t *insn);
bool __cdecl ?is_switch_insn_ignore_micro_t__QEBA_N_K_Z(const ignore_micro_t *__hidden this, ea_t ea);
bool __cdecl ?is_symbpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_sync_locchange_md_t__QEBA_NXZ(const locchange_md_t *__hidden this);
bool __cdecl ?is_synced_struc_t__QEBA_NXZ(const struc_t *__hidden this);
bool __cdecl ?is_target_optional_refinfo_t__QEBA_NXZ(const refinfo_t *__hidden this);
bool __cdecl ?is_tbyte_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_ti_initialized_printop_t__QEBA_NXZ(const printop_t *__hidden this);
bool __cdecl ?is_tracemodebpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_traceoffbpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_traceonbpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?is_tracing_enabled_debugger_t__QEAA_NHH_Z(debugger_t *__hidden this, thid_t tid, int tracebit);
bool __cdecl ?is_typeref_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_uchar_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_udec_enum_type_data_t__QEBA_NXZ(const enum_type_data_t *__hidden this);
bool __cdecl ?is_udt_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_uint128_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_uint16_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_uint32_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_uint64_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_uint_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_unaligned_udt_member_t__QEBA_NXZ(const udt_member_t *__hidden this);
bool __cdecl ?is_unaligned_udt_type_data_t__QEBA_NXZ(const udt_type_data_t *__hidden this);
bool __cdecl ?is_uncollapsed_node_mutable_graph_t__QEBA_NH_Z(const mutable_graph_t *__hidden this, int node);
bool __cdecl ?is_union_struc_t__QEBA_NXZ(const struc_t *__hidden this);
bool __cdecl ?is_union_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_unknown_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_unsigned_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_unused_fixup_data_t__QEBA_NXZ(const fixup_data_t *__hidden this);
bool __cdecl ?is_user_cc_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_user_defined_switch_info_t__QEBA_NXZ(const switch_info_t *__hidden this);
bool __cdecl ?is_user_graph_mutable_graph_t__UEAA_NXZ(mutable_graph_t *__hidden this);
bool __cdecl ?is_valid_lochist_entry_t__QEBA_NXZ(const lochist_entry_t *__hidden this);
bool __cdecl ?is_valid_xrefpos_t__QEBA_NXZ(const xrefpos_t *__hidden this);
bool __cdecl ?is_vararg_cc_func_type_data_t__QEBA_NXZ(const func_type_data_t *__hidden this);
bool __cdecl ?is_vararg_cc_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_varstr_struc_t__QEBA_NXZ(const struc_t *__hidden this);
bool __cdecl ?is_varstruct_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_vftable_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_vftable_udt_member_t__QEBA_NXZ(const udt_member_t *__hidden this);
bool __cdecl ?is_vftable_udt_type_data_t__QEBA_NXZ(const udt_type_data_t *__hidden this);
bool __cdecl ?is_virtbase_udt_member_t__QEBA_NXZ(const udt_member_t *__hidden this);
bool __cdecl ?is_virtual_func_type_data_t__QEBA_NXZ(const func_type_data_t *__hidden this);
bool __cdecl ?is_visible_node_mutable_graph_t__QEBA_NH_Z(const mutable_graph_t *__hidden this, int node);
bool __cdecl ?is_visible_segm_segment_t__QEBA_NXZ(const segment_t *__hidden this);
bool __cdecl ?is_visited_graph_node_visitor_t__QEBA_NH_Z(const graph_node_visitor_t *__hidden this, int n);
bool __cdecl ?is_void_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_volatile_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_well_defined_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?is_widget_sync_source_t__QEBA_NXZ(const sync_source_t *__hidden this);
bool __cdecl ?is_zero_idc_value_t__QEBA_NXZ(const idc_value_t *__hidden this);
bool __cdecl ?is_zero_lex_value_t__QEBA_NXZ(const lex_value_t *__hidden this);
bool __cdecl ?is_zero_bitfield_udt_member_t__QEBA_NXZ(const udt_member_t *__hidden this);
bool __cdecl ?isdir_dirtree_t__QEBA_NPEBD_Z(const dirtree_t *__hidden this, const char *path);
bool __cdecl ?isdir_dirtree_t__SA_NAEBUdirentry_t___Z(const direntry_t *de);
bool __cdecl ?isfile_dirtree_t__QEBA_NPEBD_Z(const dirtree_t *__hidden this, const char *path);
bool __cdecl ?isfile_dirtree_t__SA_NAEBUdirentry_t___Z(const direntry_t *de);
size_t __cdecl ?items_count_screen_graph_selection_t__QEBA_K_N_Z(const screen_graph_selection_t *__hidden this, bool look_for_nodes);
_qstring<char> __cdecl ?join_?$_qstring_D__SA?AV1_AEBV?$qvector_V?$_qstring_D____PEBD_Z(const qvector<_qstring<char>> *parts, char *sep);
_qstring<unsigned char> __cdecl ?join_?$_qstring_E__SA?AV1_AEBV?$qvector_V?$_qstring_E____PEBE_Z(const qvector<_qstring<unsigned char>> *parts, unsigned __int8 *sep);
_qstring<wchar_t> __cdecl ?join_?$_qstring__W__SA?AV1_AEBV?$qvector_V?$_qstring__W____PEB_W_Z(const qvector<_qstring<wchar_t>> *parts, __int16 *sep);
bool __cdecl ?jpi0_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpi1_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpi2_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpi3_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpi4_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpi5_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpi6_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpi7_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpi8_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpi9_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpia_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpib_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpic_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpid_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpie_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
bool __cdecl ?jpif_jump_pattern_t__UEAA_NXZ(jump_pattern_t *__hidden this);
void __cdecl ?jump_lochist_t__QEAAX_NAEBUlochist_entry_t___Z(lochist_t *__hidden this, bool try_to_unhide, const lochist_entry_t *e);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_compare __cdecl ?key_comp_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AU?$less_H_2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_compare __cdecl ?key_comp_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AU?$less_V?$_qstring_D___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_compare __cdecl ?key_comp_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AU?$less__K_2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_compare __cdecl ?key_comp_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AU?$less__K_2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_compare __cdecl ?key_comp_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AU?$less_H_2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
void __cdecl ?kill_netnode__QEAAXXZ(netnode *__hidden this);
char __cdecl ?last_?$_qstring_D__QEBADXZ(const _qstring<char> *__hidden this);
unsigned __int8 __cdecl ?last_?$_qstring_E__QEBAEXZ(const _qstring<unsigned char> *__hidden this);
__int16 __cdecl ?last_?$_qstring__W__QEBA_WXZ(const _qstring<wchar_t> *__hidden this);
bool __cdecl ?last_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
bool __cdecl ?last_func_parent_iterator_t__QEAA_NXZ(func_parent_iterator_t *__hidden this);
bool __cdecl ?last_func_tail_iterator_t__QEAA_NXZ(func_tail_iterator_t *__hidden this);
const range_t *__cdecl ?lastrange_rangeset_t__QEBAAEBUrange_t__XZ(const rangeset_t *__hidden this);
void __cdecl ?layout_self_reference_edges_mutable_graph_t__AEAAXAEBUedge_infos_t___Z(mutable_graph_t *__hidden this, const edge_infos_t *selfrefs);
void __cdecl ?leave_enumplace_t__UEBAXI_Z(const enumplace_t *__hidden this, uint32 flags);
void __cdecl ?leave_hexplace_t__UEBAXI_Z(const hexplace_t *__hidden this, uint32 flags);
void __cdecl ?leave_idaplace_t__UEBAXI_Z(const idaplace_t *__hidden this, uint32 flags);
void __cdecl ?leave_place_t__UEBAXI_Z(const place_t *__hidden this, uint32);
void __cdecl ?leave_simpleline_place_t__UEBAXI_Z(const simpleline_place_t *__hidden this, uint32 flags);
void __cdecl ?leave_structplace_t__UEBAXI_Z(const structplace_t *__hidden this, uint32 flags);
size_t __cdecl ?length_?$_Char_traits_DH_std__SA_KPEBD_Z(char *_First);
size_t __cdecl ?length_?$_Char_traits_GG_std__SA_KPEBG_Z(unsigned __int16 *_First);
size_t __cdecl ?length_?$_Char_traits__SG_std__SA_KPEB_S_Z(__int16 *_First);
size_t __cdecl ?length_?$_Char_traits__UI_std__SA_KPEB_U_Z(__int32 *_First);
size_t __cdecl ?length_?$_Char_traits__WG_std__SA_KPEB_W_Z(__int16 *_First);
size_t __cdecl ?length_?$_Narrow_char_traits_DH_std__SA_KQEBD_Z(char *const _First);
size_t __cdecl ?length_?$_WChar_traits_G_std__SA_KPEBG_Z(unsigned __int16 *_First);
size_t __cdecl ?length_?$_WChar_traits__S_std__SA_KPEB_S_Z(__int16 *_First);
size_t __cdecl ?length_?$_WChar_traits__W_std__SA_KPEB_W_Z(__int16 *_First);
size_t __cdecl ?length_?$_qstring_D__QEBA_KXZ(const _qstring<char> *__hidden this);
size_t __cdecl ?length_?$_qstring_E__QEBA_KXZ(const _qstring<unsigned char> *__hidden this);
size_t __cdecl ?length_?$_qstring__W__QEBA_KXZ(const _qstring<wchar_t> *__hidden this);
std::basic_string<char>::size_type __cdecl ?length_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KXZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::size_type __cdecl ?length_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KXZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::size_type __cdecl ?length_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KXZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::size_type __cdecl ?length_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KXZ(const std::basic_string<wchar_t> *__hidden this);
size_t __cdecl ?length_edge_segment_t__QEBA_KXZ(const edge_segment_t *__hidden this);
int __cdecl ?length_interval_t__QEBAHXZ(const interval_t *__hidden this);
bool __cdecl ?like_union_struc_t__QEBA_NXZ(const struc_t *__hidden this);
int __cdecl ?lineno_bpt_location_t__QEBAHXZ(const bpt_location_t *__hidden this);
dterr_t __cdecl ?link_dirtree_t__QEAA?AW4dterr_t__PEBD_Z(dirtree_t *__hidden this, const char *path);
dterr_t __cdecl ?link_dirtree_t__QEAA?AW4dterr_t___K_Z(dirtree_t *__hidden this, inode_t inode);
void __cdecl ?linkin_?$qlist_PEAVui_request_t____AEAAXViterator_1_PEAUlistnode_t_1__Z(qlist<ui_request_t *> *__hidden this, qlist<ui_request_t *>::iterator p, qlist<ui_request_t *>::listnode_t *tmp);
bool __cdecl ?listbpt_bpt_t__QEBA_NXZ(const bpt_t *__hidden this);
bool __cdecl ?load_dirtree_t__QEAA_NXZ(dirtree_t *__hidden this);
ssize_t __cdecl ?loader_elf_machine_processor_t__SA_JPEAVlinput_t__HPEAPEBDPEAPEAUproc_def_t__PEAUelf_loader_t__PEAVreader_t___Z(linput_t *li, int machine_type, const char **p_procname, proc_def_t **p_pd, elf_loader_t *ldr, reader_t *reader);
void __cdecl ?logical_and_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?logical_or_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
nodeidx_t __cdecl ?long_value_netnode__QEBA_KXZ(const netnode *__hidden this);
int __cdecl ?longest_path_abstract_graph_t__AEBAHHAEAV?$qvector_H__H_Z(const abstract_graph_t *__hidden this, int n, intvec_t *tops, int row_height);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::iterator __cdecl ?lower_bound_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_AEBH_Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator __cdecl ?lower_bound_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_AEBH_Z(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::iterator __cdecl ?lower_bound_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_AEBV?$_qstring_D___Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator __cdecl ?lower_bound_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_AEBV?$_qstring_D___Z(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::iterator __cdecl ?lower_bound_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_AEB_K_Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator __cdecl ?lower_bound_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_AEB_K_Z(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::iterator __cdecl ?lower_bound_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_AEB_K_Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator __cdecl ?lower_bound_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_AEB_K_Z(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::iterator __cdecl ?lower_bound_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_AEBH_Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type *_Keyval);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator __cdecl ?lower_bound_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_AEBH_Z(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type *_Keyval);
nodeidx_t __cdecl ?lower_bound_netnode__QEBA_K_KE_Z(const netnode *__hidden this, nodeidx_t cur, uchar tag);
rangeset_t::const_iterator __cdecl ?lower_bound_rangeset_t__QEBAPEBUrange_t___K_Z(const rangeset_t *__hidden this, ea_t ea);
nodeidx_t __cdecl ?lower_bound_ea_netnode__QEBA_K_KE_Z(const netnode *__hidden this, ea_t ea, uchar tag);
nodeidx_t __cdecl ?lower_bound_idx8_netnode__QEBA_KEE_Z(const netnode *__hidden this, uchar alt, uchar tag);
ssize_t __cdecl ?lower_func_type_processor_t__SA_JPEAV?$qvector_H__PEAUfunc_type_data_t___Z(intvec_t *argnums, func_type_data_t *fti);
char ?lowest_?$numeric_limits_C_std__SACXZ(void);
char ?lowest_?$numeric_limits_D_std__SADXZ(void);
unsigned __int8 ?lowest_?$numeric_limits_E_std__SAEXZ(void);
__int16 ?lowest_?$numeric_limits_F_std__SAFXZ(void);
unsigned __int16 ?lowest_?$numeric_limits_G_std__SAGXZ(void);
int ?lowest_?$numeric_limits_H_std__SAHXZ(void);
unsigned int ?lowest_?$numeric_limits_I_std__SAIXZ(void);
__int32 ?lowest_?$numeric_limits_J_std__SAJXZ(void);
unsigned __int32 ?lowest_?$numeric_limits_K_std__SAKXZ(void);
float ?lowest_?$numeric_limits_M_std__SAMXZ(void);
double ?lowest_?$numeric_limits_N_std__SANXZ(void);
long double ?lowest_?$numeric_limits_O_std__SAOXZ(void);
__int64 ?lowest_?$numeric_limits__J_std__SA_JXZ(void);
unsigned __int64 ?lowest_?$numeric_limits__K_std__SA_KXZ(void);
bool ?lowest_?$numeric_limits__N_std__SA_NXZ(void);
__int16 ?lowest_?$numeric_limits__S_std__SA_SXZ(void);
__int32 ?lowest_?$numeric_limits__U_std__SA_UXZ(void);
__int16 ?lowest_?$numeric_limits__W_std__SA_WXZ(void);
bool __cdecl ?lt_?$_Char_traits_DH_std__SA_NAEBD0_Z(char *_Left, char *_Right);
bool __cdecl ?lt_?$_Char_traits_GG_std__SA_NAEBG0_Z(unsigned __int16 *_Left, unsigned __int16 *_Right);
bool __cdecl ?lt_?$_Char_traits__SG_std__SA_NAEB_S0_Z(__int16 *_Left, __int16 *_Right);
bool __cdecl ?lt_?$_Char_traits__UI_std__SA_NAEB_U0_Z(__int32 *_Left, __int32 *_Right);
bool __cdecl ?lt_?$_Char_traits__WG_std__SA_NAEB_W0_Z(__int16 *_Left, __int16 *_Right);
bool __cdecl ?lt_?$_Narrow_char_traits_DH_std__SA_NAEBD0_Z(char *_Left, char *_Right);
bool __cdecl ?lt_?$_WChar_traits_G_std__SA_NAEBG0_Z(unsigned __int16 *_Left, unsigned __int16 *_Right);
bool __cdecl ?lt_?$_WChar_traits__S_std__SA_NAEB_S0_Z(__int16 *_Left, __int16 *_Right);
bool __cdecl ?lt_?$_WChar_traits__W_std__SA_NAEB_W0_Z(__int16 *_Left, __int16 *_Right);
_qstring<char> *__cdecl ?ltrim_?$_qstring_D__QEAAAEAV1_D_Z(_qstring<char> *__hidden this, char blank);
_qstring<unsigned char> *__cdecl ?ltrim_?$_qstring_E__QEAAAEAV1_E_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 blank);
_qstring<wchar_t> *__cdecl ?ltrim_?$_qstring__W__QEAAAEAV1__W_Z(_qstring<wchar_t> *__hidden this, __int16 blank);
sval_t __cdecl ?lvar_off_processor_t__QEBA_JPEBVfunc_t___K_Z(const processor_t *__hidden this, const func_t *pfn, uval_t frameoff);
bool __cdecl ?main_func_tail_iterator_t__QEAA_NXZ(func_tail_iterator_t *__hidden this);
void __cdecl ?make_rect_edges_abstract_graph_t__IEAAXAEAV?$qvector_Urow_info_t____AEBUedge_segs_vec_t__H_Z(abstract_graph_t *__hidden this, graph_row_info_t *gri, const edge_segs_vec_t *ges, int first_reverser_node);
void __cdecl ?make_union_interval_t__QEAAXAEBU1__Z(interval_t *__hidden this, const interval_t *r);
void __cdecl ?make_union_rect_t__QEAAXAEBU1__Z(rect_t *__hidden this, const rect_t *r);
place_t *__cdecl ?makeplace_enumplace_t__UEBAPEAVplace_t__PEAX_KH_Z(const enumplace_t *__hidden this, void *ud, uval_t x, int _lnnum);
place_t *__cdecl ?makeplace_hexplace_t__UEBAPEAVplace_t__PEAX_KH_Z(const hexplace_t *__hidden this, void *ud, uval_t x, int _lnnum);
place_t *__cdecl ?makeplace_idaplace_t__UEBAPEAVplace_t__PEAX_KH_Z(const idaplace_t *__hidden this, void *ud, uval_t x, int _lnnum);
place_t *__cdecl ?makeplace_place_t__UEBAPEAV1_PEAX_KH_Z(const place_t *__hidden this, void *ud, uval_t x, int lnnum);
place_t *__cdecl ?makeplace_simpleline_place_t__UEBAPEAVplace_t__PEAX_KH_Z(const simpleline_place_t *__hidden this, void *ud, uval_t x, int _lnnum);
place_t *__cdecl ?makeplace_structplace_t__UEBAPEAVplace_t__PEAX_KH_Z(const structplace_t *__hidden this, void *ud, uval_t x, int _lnnum);
ea_t __cdecl ?map_address_debugger_t__QEAA_K_KPEBUregval_t__H_Z(debugger_t *__hidden this, ea_t off, const regval_t *regs, int regnum);
uint32 __cdecl ?mark_bookmarks_t__SAIAEBUlochist_entry_t__IPEBD1PEAX_Z(const lochist_entry_t *e, uint32 index, const char *title, const char *desc, void *ud);
void __cdecl ?mark_epilog_insn_ignore_micro_t__QEAAX_K_Z(ignore_micro_t *__hidden this, ea_t ea);
void __cdecl ?mark_prolog_insn_ignore_micro_t__QEAAX_K_Z(ignore_micro_t *__hidden this, ea_t ea);
void __cdecl ?mark_switch_insn_ignore_micro_t__QEAAX_K_Z(ignore_micro_t *__hidden this, ea_t ea);
void __cdecl ?mark_switch_insns_jump_pattern_t__QEBAXHH_Z(const jump_pattern_t *__hidden this, int last, int nlowcase);
uint64 __cdecl ?mask64_bitrange_t__QEBA_KXZ(const bitrange_t *__hidden this);
bool __cdecl ?match_jump_pattern_t__QEAA_NAEBVinsn_t___Z(jump_pattern_t *__hidden this, const insn_t *_insn);
bool __cdecl ?match_pattern_simd_info_t__QEAA_NPEBU1__Z(simd_info_t *__hidden this, const simd_info_t *pattern);
bool __cdecl ?match_tree_jump_pattern_t__IEAA_NXZ(jump_pattern_t *__hidden this);
char ?max_?$numeric_limits_C_std__SACXZ(void);
char ?max_?$numeric_limits_D_std__SADXZ(void);
unsigned __int8 ?max_?$numeric_limits_E_std__SAEXZ(void);
__int16 ?max_?$numeric_limits_F_std__SAFXZ(void);
unsigned __int16 ?max_?$numeric_limits_G_std__SAGXZ(void);
int ?max_?$numeric_limits_H_std__SAHXZ(void);
unsigned int ?max_?$numeric_limits_I_std__SAIXZ(void);
__int32 ?max_?$numeric_limits_J_std__SAJXZ(void);
unsigned __int32 ?max_?$numeric_limits_K_std__SAKXZ(void);
float ?max_?$numeric_limits_M_std__SAMXZ(void);
double ?max_?$numeric_limits_N_std__SANXZ(void);
long double ?max_?$numeric_limits_O_std__SAOXZ(void);
__int64 ?max_?$numeric_limits__J_std__SA_JXZ(void);
unsigned __int64 ?max_?$numeric_limits__K_std__SA_KXZ(void);
bool ?max_?$numeric_limits__N_std__SA_NXZ(void);
__int16 ?max_?$numeric_limits__S_std__SA_SXZ(void);
__int32 ?max_?$numeric_limits__U_std__SA_UXZ(void);
__int16 ?max_?$numeric_limits__W_std__SA_WXZ(void);
std::_Rand_urng_from_func::result_type ?max__Rand_urng_from_func_std__SAIXZ(void);
ssize_t ?max_ptr_size_processor_t__SA_JXZ(void);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::size_type __cdecl ?max_size_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA_KXZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::size_type __cdecl ?max_size_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA_KXZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::size_type __cdecl ?max_size_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA_KXZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::size_type __cdecl ?max_size_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA_KXZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::size_type __cdecl ?max_size_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA_KXZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
size_t __cdecl ?max_size_?$allocator_D_std__QEBA_KXZ(const std::allocator<char> *__hidden this);
size_t __cdecl ?max_size_?$allocator_H_std__QEBA_KXZ(const std::allocator<int> *__hidden this);
size_t __cdecl ?max_size_?$allocator_U?$_Tree_node_HPEAX_std___std__QEBA_KXZ(const std::allocator<std::_Tree_node<int, void *>> *__hidden this);
size_t __cdecl ?max_size_?$allocator_U?$_Tree_node_U?$pair_$$CBHH_std__PEAX_std___std__QEBA_KXZ(const std::allocator<std::_Tree_node<std::pair<const int, int>, void *>> *__hidden this);
size_t __cdecl ?max_size_?$allocator_U?$_Tree_node_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__PEAX_std___std__QEBA_KXZ(const std::allocator<std::_Tree_node<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>, void *>> *__hidden this);
size_t __cdecl ?max_size_?$allocator_U?$_Tree_node_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__PEAX_std___std__QEBA_KXZ(const std::allocator<std::_Tree_node<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>, void *>> *__hidden this);
size_t __cdecl ?max_size_?$allocator_U?$_Tree_node_U?$pair_$$CB_K_K_std__PEAX_std___std__QEBA_KXZ(const std::allocator<std::_Tree_node<std::pair<const unsigned long long, unsigned long long>, void *>> *__hidden this);
size_t __cdecl ?max_size_?$allocator_U?$pair_$$CBHH_std___std__QEBA_KXZ(const std::allocator<std::pair<const int, int>> *__hidden this);
size_t __cdecl ?max_size_?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEBA_KXZ(const std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this);
size_t __cdecl ?max_size_?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEBA_KXZ(const std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this);
size_t __cdecl ?max_size_?$allocator_U?$pair_$$CB_K_K_std___std__QEBA_KXZ(const std::allocator<std::pair<const unsigned long long, unsigned long long>> *__hidden this);
size_t __cdecl ?max_size_?$allocator__S_std__QEBA_KXZ(const std::allocator<char16_t> *__hidden this);
size_t __cdecl ?max_size_?$allocator__U_std__QEBA_KXZ(const std::allocator<char32_t> *__hidden this);
size_t __cdecl ?max_size_?$allocator__W_std__QEBA_KXZ(const std::allocator<wchar_t> *__hidden this);
std::basic_string<char>::size_type __cdecl ?max_size_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KXZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::size_type __cdecl ?max_size_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KXZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::size_type __cdecl ?max_size_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KXZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::size_type __cdecl ?max_size_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KXZ(const std::basic_string<wchar_t> *__hidden this);
ssize_t __cdecl ?may_be_func_processor_t__SA_JAEBVinsn_t__H_Z(const insn_t *insn, int state);
bool __cdecl ?may_disturb_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
ssize_t __cdecl ?may_show_sreg_processor_t__SA_J_K_Z(ea_t current_ea);
bool __cdecl ?may_take_exit_snapshot_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
char ?min_?$numeric_limits_C_std__SACXZ(void);
char ?min_?$numeric_limits_D_std__SADXZ(void);
unsigned __int8 ?min_?$numeric_limits_E_std__SAEXZ(void);
__int16 ?min_?$numeric_limits_F_std__SAFXZ(void);
unsigned __int16 ?min_?$numeric_limits_G_std__SAGXZ(void);
int ?min_?$numeric_limits_H_std__SAHXZ(void);
unsigned int ?min_?$numeric_limits_I_std__SAIXZ(void);
__int32 ?min_?$numeric_limits_J_std__SAJXZ(void);
unsigned __int32 ?min_?$numeric_limits_K_std__SAKXZ(void);
float ?min_?$numeric_limits_M_std__SAMXZ(void);
double ?min_?$numeric_limits_N_std__SANXZ(void);
long double ?min_?$numeric_limits_O_std__SAOXZ(void);
__int64 ?min_?$numeric_limits__J_std__SA_JXZ(void);
unsigned __int64 ?min_?$numeric_limits__K_std__SA_KXZ(void);
bool ?min_?$numeric_limits__N_std__SA_NXZ(void);
__int16 ?min_?$numeric_limits__S_std__SA_SXZ(void);
__int32 ?min_?$numeric_limits__U_std__SA_UXZ(void);
__int16 ?min_?$numeric_limits__W_std__SA_WXZ(void);
std::_Rand_urng_from_func::result_type ?min__Rand_urng_from_func_std__SAIXZ(void);
void __cdecl ?minimize_crossings_abstract_graph_t__IEBAXAEAV?$qvector_Urow_info_t_____Z(const abstract_graph_t *__hidden this, graph_row_info_t *gri);
dterr_t __cdecl ?mkdir_dirtree_t__QEAA?AW4dterr_t__PEBD_Z(dirtree_t *__hidden this, const char *path);
void __cdecl ?mod_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
modinfo_t *__cdecl ?modinfo_debug_event_t__QEAAAEAUmodinfo_t__XZ(debug_event_t *__hidden this);
const modinfo_t *__cdecl ?modinfo_debug_event_t__QEBAAEBUmodinfo_t__XZ(const debug_event_t *__hidden this);
char *__cdecl ?move_?$_Char_traits_DH_std__SAPEADQEADQEBD_K_Z(char *const _First1, char *const _First2, const size_t _Count);
unsigned __int16 *__cdecl ?move_?$_Char_traits_GG_std__SAPEAGQEAGQEBG_K_Z(unsigned __int16 *const _First1, unsigned __int16 *const _First2, const size_t _Count);
__int16 *__cdecl ?move_?$_Char_traits__SG_std__SAPEA_SQEA_SQEB_S_K_Z(__int16 *const _First1, __int16 *const _First2, const size_t _Count);
__int32 *__cdecl ?move_?$_Char_traits__UI_std__SAPEA_UQEA_UQEB_U_K_Z(__int32 *const _First1, __int32 *const _First2, const size_t _Count);
__int16 *__cdecl ?move_?$_Char_traits__WG_std__SAPEA_WQEA_WQEB_W_K_Z(__int16 *const _First1, __int16 *const _First2, const size_t _Count);
void __cdecl ?move_by_interval_t__QEAAXH_Z(interval_t *__hidden this, int shift);
void __cdecl ?move_by_rect_t__QEAAXAEBUpoint_t___Z(rect_t *__hidden this, const point_t *p);
int __cdecl ?move_chunk_rangeset_t__QEAAH_K00_Z(rangeset_t *__hidden this, ea_t from, ea_t to, asize_t size);
bool __cdecl ?move_field_form_actions_t__UEAA_NHHHHH_Z(form_actions_t *__hidden this, int field_id, int x, int y, int w, int h);
void __cdecl ?move_grouped_nodes_mutable_graph_t__QEAAXAEBV?$qvector_H__PEBV1__Z(mutable_graph_t *__hidden this, const intvec_t *groups, const mutable_graph_t *ng);
void __cdecl ?move_nodes_down_abstract_graph_t__IEBAXAEAV?$qvector_H__AEBVnode_ordering_t__HH_Z(const abstract_graph_t *__hidden this, intvec_t *tops, const node_ordering_t *post, int first_reverser_node, int row_height);
void __cdecl ?move_to_rect_t__QEAAXAEBUpoint_t___Z(rect_t *__hidden this, const point_t *p);
void __cdecl ?move_to_same_place_mutable_graph_t__QEAAXAEBV?$qvector_H__Upoint_t___Z(mutable_graph_t *__hidden this, const intvec_t *collapsing_nodes, point_t p);
size_t __cdecl ?moveto_netnode__QEAA_KV1__K_Z(netnode *__hidden this, netnode destnode, nodeidx_t count);
ssize_t __cdecl ?moving_segm_processor_t__SA_JPEAVsegment_t___KH_Z(segment_t *seg, ea_t to, int flags);
void __cdecl ?mul_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
fpvalue_error_t __cdecl ?mul_pow2_fpvalue_t__QEAA?AW4fpvalue_error_t__H_Z(fpvalue_t *__hidden this, int32 power_of_2);
bool __cdecl ?multiline_outctx_base_t__QEBA_NXZ(const outctx_base_t *__hidden this);
bool __cdecl ?must_have_hostname_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
const char *__cdecl ?name_enumplace_t__UEBAPEBDXZ(const enumplace_t *__hidden this);
const char *__cdecl ?name_hexplace_t__UEBAPEBDXZ(const hexplace_t *__hidden this);
const char *__cdecl ?name_idaplace_t__UEBAPEBDXZ(const idaplace_t *__hidden this);
const char *__cdecl ?name_place_t__UEBAPEBDXZ(const place_t *__hidden this);
const char *__cdecl ?name_simpleline_place_t__UEBAPEBDXZ(const simpleline_place_t *__hidden this);
const char *__cdecl ?name_structplace_t__UEBAPEBDXZ(const structplace_t *__hidden this);
size_t __cdecl ?nedge_gdl_graph_t__QEBA_KH_N_Z(const gdl_graph_t *__hidden this, int node, bool ispred);
bool __cdecl ?need_prolog_analysis_func_t__QEBA_NXZ(const func_t *__hidden this);
void __cdecl ?negate_TPointDouble__QEAAXXZ(TPointDouble *__hidden this);
void __cdecl ?negate_fpvalue_t__QEAAXXZ(fpvalue_t *__hidden this);
void __cdecl ?negate_point_t__QEAAXXZ(point_t *__hidden this);
std::exception_ptr __cdecl ?nested_ptr_nested_exception_std__QEBA?AVexception_ptr_2_XZ(const std::nested_exception *__hidden this);
nodeidx_t __cdecl ?netcode_lochist_t__QEBA_KXZ(const lochist_t *__hidden this);
ssize_t __cdecl ?new_sel_after_del_chooser_multi_t__IEBA_JAEBV?$qvector__K___Z(const chooser_multi_t *__hidden this, const sizevec_t *sel);
ssize_t __cdecl ?new_sel_after_del_chooser_t__IEBA_J_K_Z(const chooser_t *__hidden this, size_t n);
ssize_t __cdecl ?newasm_processor_t__SA_JH_Z(int asmnum);
ssize_t __cdecl ?newbinary_processor_t__SA_JPEBD_J_K22_Z(const char *filename, int64 fileoff, ea_t basepara, ea_t binoff, uint64 nbytes);
ssize_t __cdecl ?newfile_processor_t__SA_JPEBD_Z(const char *fname);
ssize_t __cdecl ?newprc_processor_t__SA_JH_N_Z(int pnum, bool keep_cfg);
bool __cdecl ?next_?$qiterator_V?$qrefcnt_t_Vsource_file_t______UEAA_NXZ(qiterator<qrefcnt_t<source_file_t>> *__hidden this);
bool __cdecl ?next_?$qiterator_V?$qrefcnt_t_Vsource_item_t______UEAA_NXZ(qiterator<qrefcnt_t<source_item_t>> *__hidden this);
bool __cdecl ?next_enumplace_t__UEAA_NPEAX_Z(enumplace_t *__hidden this, void *ud);
bool __cdecl ?next_func_item_iterator_t__QEAA_NP6A_NIPEAX_Z0_Z(func_item_iterator_t *__hidden this, testf_t *func, void *ud);
bool __cdecl ?next_func_parent_iterator_t__QEAA_NXZ(func_parent_iterator_t *__hidden this);
bool __cdecl ?next_func_tail_iterator_t__QEAA_NXZ(func_tail_iterator_t *__hidden this);
bool __cdecl ?next_hexplace_t__UEAA_NPEAX_Z(hexplace_t *__hidden this, void *ud);
bool __cdecl ?next_idaplace_t__UEAA_NPEAX_Z(idaplace_t *__hidden this, void *ud);
bool __cdecl ?next_netnode__QEAA_NXZ(netnode *__hidden this);
bool __cdecl ?next_place_t__UEAA_NPEAX_Z(place_t *__hidden this, void *ud);
bool __cdecl ?next_simpleline_place_t__UEAA_NPEAX_Z(simpleline_place_t *__hidden this, void *ud);
bool __cdecl ?next_structplace_t__UEAA_NPEAX_Z(structplace_t *__hidden this, void *ud);
bool __cdecl ?next_addr_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
ea_t __cdecl ?next_addr_rangeset_t__QEBA_K_K_Z(const rangeset_t *__hidden this, ea_t ea);
bool __cdecl ?next_code_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
bool __cdecl ?next_data_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
ssize_t __cdecl ?next_exec_insn_processor_t__SA_JPEA_K_KHP6AAEBUregval_t__PEBDPEBU2__ZAEBU2__Z(ea_t *target, ea_t ea, int tid, processor_t::regval_getter_t *_getreg, const regval_t *regvalues);
bool __cdecl ?next_from_xrefblk_t__QEAA_NXZ(xrefblk_t *__hidden this);
bool __cdecl ?next_from_xrefblk_t__QEAA_N_K0H_Z(xrefblk_t *__hidden this, ea_t _from, ea_t _to, int flags);
bool __cdecl ?next_head_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
bool __cdecl ?next_item_to_del_chooser_multi_t__KA_NPEAV?$qvector__K___Z(sizevec_t *sel);
ea_t __cdecl ?next_marked_insn_ignore_micro_t__QEAA_K_K_Z(ignore_micro_t *__hidden this, ea_t ea);
bool __cdecl ?next_not_tail_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
ea_t __cdecl ?next_range_rangeset_t__QEBA_K_K_Z(const rangeset_t *__hidden this, ea_t ea);
bool __cdecl ?next_to_xrefblk_t__QEAA_NXZ(xrefblk_t *__hidden this);
bool __cdecl ?next_to_xrefblk_t__QEAA_N_K0H_Z(xrefblk_t *__hidden this, ea_t _from, ea_t _to, int flags);
bool __cdecl ?no_base_xref_refinfo_t__QEBA_NXZ(const refinfo_t *__hidden this);
int __cdecl ?node_node_ordering_t__QEBAH_K_Z(const node_ordering_t *__hidden this, size_t _order);
int __cdecl ?node_qty_gdl_graph_t__UEBAHXZ(const gdl_graph_t *__hidden this);
int __cdecl ?node_qty_mutable_graph_t__UEBAHXZ(const mutable_graph_t *__hidden this);
size_t __cdecl ?nodes_count_screen_graph_selection_t__QEBA_KXZ(const screen_graph_selection_t *__hidden this);
std::_Char_traits<char, int>::int_type __cdecl ?not_eof_?$_Char_traits_DH_std__SAHAEBH_Z(const std::_Char_traits<char, int>::int_type *_Meta);
std::_Char_traits<unsigned short, unsigned short>::int_type __cdecl ?not_eof_?$_Char_traits_GG_std__SAGAEBG_Z(const std::_Char_traits<unsigned short, unsigned short>::int_type *_Meta);
std::_Char_traits<char16_t, unsigned short>::int_type __cdecl ?not_eof_?$_Char_traits__SG_std__SAGAEBG_Z(const std::_Char_traits<char16_t, unsigned short>::int_type *_Meta);
std::_Char_traits<char32_t, unsigned int>::int_type __cdecl ?not_eof_?$_Char_traits__UI_std__SAIAEBI_Z(const std::_Char_traits<char32_t, unsigned int>::int_type *_Meta);
std::_Char_traits<wchar_t, unsigned short>::int_type __cdecl ?not_eof_?$_Char_traits__WG_std__SAGAEBG_Z(const std::_Char_traits<wchar_t, unsigned short>::int_type *_Meta);
std::_Narrow_char_traits<char, int>::int_type __cdecl ?not_eof_?$_Narrow_char_traits_DH_std__SAHAEBH_Z(const std::_Narrow_char_traits<char, int>::int_type *_Meta);
std::_WChar_traits<unsigned short>::int_type __cdecl ?not_eof_?$_WChar_traits_G_std__SAGAEBG_Z(const std::_WChar_traits<_Elem>::int_type *_Meta);
std::_WChar_traits<char16_t>::int_type __cdecl ?not_eof_?$_WChar_traits__S_std__SAGAEBG_Z(const std::_WChar_traits<_Elem>::int_type *_Meta);
std::_WChar_traits<wchar_t>::int_type __cdecl ?not_eof_?$_WChar_traits__W_std__SAGAEBG_Z(const std::_WChar_traits<_Elem>::int_type *_Meta);
ssize_t ?notify_debugger_t__QEAA_JW4event_t_1_ZZ(debugger_t *__hidden this, debugger_t::event_t event_code, ...);
ssize_t ?notify_processor_t__SA_JW4event_t_1_ZZ(processor_t::event_t event_code, ...);
void __cdecl ?notify_dirtree_dirtree_t__QEAAX_N_K_Z(dirtree_t *__hidden this, bool added, inode_t inode);
drc_t ?notify_drc_debugger_t__QEAA?AW4drc_t__W4event_t_1_ZZ(debugger_t *__hidden this, debugger_t::event_t event_code, ...);
void ?nowarn_out_printf_outctx_base_t__QEAAXPEBDZZ(outctx_base_t *__hidden this, const char *format, ...);
_qstring<char> *?nowarn_sprnt_?$_qstring_D__QEAAAEAV1_PEBDZZ(_qstring<char> *__hidden this, const char *format, ...);
_qstring<unsigned char> *?nowarn_sprnt_?$_qstring_E__QEAAAEAV1_PEBDZZ(_qstring<unsigned char> *__hidden this, const char *format, ...);
_qstring<wchar_t> *?nowarn_sprnt_?$_qstring__W__QEAAAEAV1_PEBDZZ(_qstring<wchar_t> *__hidden this, const char *format, ...);
int __cdecl ?npred_gdl_graph_t__UEBAHH_Z(const gdl_graph_t *__hidden this, int node);
int __cdecl ?npred_mutable_graph_t__UEBAHH_Z(const mutable_graph_t *__hidden this, int b);
int __cdecl ?npred_qflow_chart_t__UEBAHH_Z(const qflow_chart_t *__hidden this, int node);
size_t __cdecl ?nranges_rangeset_t__QEBA_KXZ(const rangeset_t *__hidden this);
const rect_t *__cdecl ?nrect_abstract_graph_t__QEBAAEBUrect_t__H_Z(const abstract_graph_t *__hidden this, int n);
rect_t *__cdecl ?nrect_abstract_graph_t__UEAAAEAUrect_t__H_Z(abstract_graph_t *__hidden this, int n);
const rect_t *__cdecl ?nrect_mutable_graph_t__QEBAAEBUrect_t__H_Z(const mutable_graph_t *__hidden this, int n);
rect_t *__cdecl ?nrect_mutable_graph_t__UEAAAEAUrect_t__H_Z(mutable_graph_t *__hidden this, int n);
size_t __cdecl ?nregs_dynamic_register_set_t__QEAA_KXZ(dynamic_register_set_t *__hidden this);
size_t __cdecl ?nsub_refcnted_regex_t__QEAA_KXZ(refcnted_regex_t *__hidden this);
int __cdecl ?nsucc_gdl_graph_t__UEBAHH_Z(const gdl_graph_t *__hidden this, int node);
int __cdecl ?nsucc_mutable_graph_t__UEBAHH_Z(const mutable_graph_t *__hidden this, int b);
int __cdecl ?nsucc_qflow_chart_t__UEBAHH_Z(const qflow_chart_t *__hidden this, int node);
int64 __cdecl ?num_jvalue_t__QEBA_JXZ(const jvalue_t *__hidden this);
size_t __cdecl ?num_crossings_abstract_graph_t__AEBA_KAEBV?$qvector_Urow_info_t____AEBV?$qvector_Vintmap_t_____Z(const abstract_graph_t *__hidden this, const graph_row_info_t *gri, const array_of_intmap_t *nodepi);
bool __cdecl ?ob_ok_segment_t__QEBA_NXZ(const segment_t *__hidden this);
jobj_t *__cdecl ?obj_jvalue_t__QEAAAEAUjobj_t__XZ(jvalue_t *__hidden this);
const jobj_t *__cdecl ?obj_jvalue_t__QEBAAEBUjobj_t__XZ(const jvalue_t *__hidden this);
uval_t __cdecl ?offset_bpt_location_t__QEBA_KXZ(const bpt_location_t *__hidden this);
ssize_t __cdecl ?oldfile_processor_t__SA_JPEBD_Z(const char *fname);
ssize_t __cdecl ?on_event_event_listener_t__UEAA_J_JPEAD_Z(event_listener_t *__hidden this, ssize_t code, va_list va);
bool __cdecl ?only_main_line_outctx_base_t__QEBA_NXZ(const outctx_base_t *__hidden this);
int __cdecl ?open_file_debugger_t__QEAAHPEBDPEA_K_NPEAV?$_qstring_D___Z(debugger_t *__hidden this, const char *file, uint64 *fsize, bool readonly, qstring *errbuf);
TWidget *__cdecl ?open_srcview_source_file_t__UEAAPEAVTWidget__PEAPEAV?$qvector_Usimpleline_t____PEAPEAV2_HH_Z(source_file_t *__hidden this, strvec_t **strvec, TWidget **pview, int lnnum, int colnum);
int __cdecl ?order_node_ordering_t__QEAAHH_Z(node_ordering_t *__hidden this, int _node);
void __cdecl ?out_addr_tag_outctx_base_t__UEAAX_K_Z(outctx_base_t *__hidden this, ea_t ea);
ssize_t __cdecl ?out_assumes_processor_t__SA_JAEAUoutctx_t___Z(outctx_t *ctx);
void __cdecl ?out_aux_cmts_outctx_base_t__MEAAXXZ(outctx_base_t *__hidden this);
void __cdecl ?out_btoa_outctx_base_t__UEAAX_KD_Z(outctx_base_t *__hidden this, uval_t Word, char radix);
void __cdecl ?out_char_outctx_base_t__UEAAXD_Z(outctx_base_t *__hidden this, char c);
void __cdecl ?out_chars_outctx_base_t__UEAAXDH_Z(outctx_base_t *__hidden this, char c, int n);
void __cdecl ?out_colored_register_line_outctx_base_t__UEAAXPEBD_Z(outctx_base_t *__hidden this, const char *str);
void __cdecl ?out_custom_mnem_outctx_t__UEAAXPEBDH0_Z(outctx_t *__hidden this, const char *mnem, int width, const char *postfix);
void __cdecl ?out_data_outctx_t__UEAAX_N_Z(outctx_t *__hidden this, bool analyze_only);
ssize_t __cdecl ?out_data_processor_t__SA_JAEAUoutctx_t___N_Z(outctx_t *ctx, bool analyze_only);
ssize_t __cdecl ?out_footer_processor_t__SA_JAEAUoutctx_t___Z(outctx_t *ctx);
ssize_t __cdecl ?out_header_processor_t__SA_JAEAUoutctx_t___Z(outctx_t *ctx);
void __cdecl ?out_immchar_cmts_outctx_t__UEAAXXZ(outctx_t *__hidden this);
ssize_t __cdecl ?out_insn_processor_t__SA_JAEAUoutctx_t___Z(outctx_t *ctx);
void __cdecl ?out_keyword_outctx_base_t__QEAAXPEBD_Z(outctx_base_t *__hidden this, const char *str);
ssize_t __cdecl ?out_label_processor_t__SA_JAEAUoutctx_t__PEBD_Z(outctx_t *ctx, const char *colored_name);
void __cdecl ?out_label_addr_tag_outctx_base_t__MEAAXXZ(outctx_base_t *__hidden this);
void __cdecl ?out_line_outctx_base_t__UEAAXPEBDE_Z(outctx_base_t *__hidden this, const char *str, color_t color);
void __cdecl ?out_long_outctx_base_t__UEAAX_JD_Z(outctx_base_t *__hidden this, sval_t v, char radix);
void __cdecl ?out_mnem_outctx_t__UEAAXHPEBD_Z(outctx_t *__hidden this, int width, const char *postfix);
ssize_t __cdecl ?out_mnem_processor_t__SA_JAEAUoutctx_t___Z(outctx_t *ctx);
void __cdecl ?out_mnemonic_outctx_t__UEAAXXZ(outctx_t *__hidden this);
bool __cdecl ?out_name_expr_outctx_base_t__UEAA_NAEBVop_t___K_J_Z(outctx_base_t *__hidden this, const op_t *x, ea_t ea, adiff_t off);
void __cdecl ?out_one_item_hexplace_t__QEBAXAEAUoutctx_base_t__PEBUhexplace_gen_t__HPEAEE_Z(const hexplace_t *__hidden this, outctx_base_t *ctx, const hexplace_gen_t *hg, int itemno, color_t *color, color_t patch_or_edit);
bool __cdecl ?out_one_operand_outctx_t__UEAA_NH_Z(outctx_t *__hidden this, int n);
ssize_t __cdecl ?out_operand_processor_t__SA_JAEAUoutctx_t__AEBVop_t___Z(outctx_t *ctx, const op_t *op);
void ?out_printf_outctx_base_t__QEAAXPEBDZZ(outctx_base_t *__hidden this, const char *format, ...);
void __cdecl ?out_register_outctx_base_t__QEAAXPEBD_Z(outctx_base_t *__hidden this, const char *str);
ssize_t __cdecl ?out_segend_processor_t__SA_JAEAUoutctx_t__PEAVsegment_t___Z(outctx_t *ctx, segment_t *seg);
ssize_t __cdecl ?out_segstart_processor_t__SA_JAEAUoutctx_t__PEAVsegment_t___Z(outctx_t *ctx, segment_t *seg);
void __cdecl ?out_spaces_outctx_base_t__QEAAX_J_Z(outctx_base_t *__hidden this, ssize_t len);
bool __cdecl ?out_specea_outctx_t__UEAA_NE_Z(outctx_t *__hidden this, uchar segtype);
ssize_t __cdecl ?out_special_item_processor_t__SA_JAEAUoutctx_t__E_Z(outctx_t *ctx, uchar segtype);
void __cdecl ?out_symbol_outctx_base_t__UEAAXD_Z(outctx_base_t *__hidden this, char c);
void __cdecl ?out_tagoff_outctx_base_t__UEAAXE_Z(outctx_base_t *__hidden this, color_t tag);
void __cdecl ?out_tagon_outctx_base_t__UEAAXE_Z(outctx_base_t *__hidden this, color_t tag);
flags_t __cdecl ?out_value_outctx_base_t__UEAAIAEBVop_t__H_Z(outctx_base_t *__hidden this, const op_t *x, int outf);
void __cdecl ?out_vprintf_outctx_base_t__UEAAXPEBDPEAD_Z(outctx_base_t *__hidden this, const char *format, va_list va);
bool __cdecl ?overlaps_range_t__QEBA_NAEBU1__Z(const range_t *__hidden this, const range_t *r);
void __cdecl ?pack_buf_bytevec_t__QEAAXPEBX_K_Z(bytevec_t *__hidden this, const void *buf, size_t len);
void __cdecl ?pack_bytevec_bytevec_t__QEAAXAEBV1__Z(bytevec_t *__hidden this, const bytevec_t *b);
void __cdecl ?pack_db_bytevec_t__QEAAXE_Z(bytevec_t *__hidden this, uint8 x);
void __cdecl ?pack_dd_bytevec_t__QEAAXI_Z(bytevec_t *__hidden this, uint32 x);
void __cdecl ?pack_dq_bytevec_t__QEAAX_K_Z(bytevec_t *__hidden this, uint64 x);
void __cdecl ?pack_ds_bytevec_t__QEAAXPEBD_Z(bytevec_t *__hidden this, const char *x);
void __cdecl ?pack_dw_bytevec_t__QEAAXG_Z(bytevec_t *__hidden this, uint16 x);
void __cdecl ?pack_ea64_bytevec_t__QEAAX_K_Z(bytevec_t *__hidden this, ea64_t ea);
void __cdecl ?pack_ea_bytevec_t__QEAAX_K_Z(bytevec_t *__hidden this, ea_t x);
void __cdecl ?pack_eavec_bytevec_t__QEAAX_KAEBV?$qvector__K___Z(bytevec_t *__hidden this, ea_t ea, const eavec_t *vec);
void __cdecl ?pack_str_bytevec_t__QEAAXAEBV?$_qstring_D___Z(bytevec_t *__hidden this, const qstring *s);
void __cdecl ?pack_str_bytevec_t__QEAAXPEBD_Z(bytevec_t *__hidden this, const char *str);
ea_t __cdecl ?parent_func_parent_iterator_t__QEBA_KXZ(const func_parent_iterator_t *__hidden this);
bool __cdecl ?parse_choose_ioport_parser_t__UEAA_NPEAV?$_qstring_D__PEBD_Z(choose_ioport_parser_t *__hidden this, qstring *param, const char *line);
const char *__cdecl ?parse_literal_const_ida_syntax_highlighter_t__IEAAPEBDPEAUhighlighter_cbs_t__PEBDD_Z(ida_syntax_highlighter_t *__hidden this, highlighter_cbs_t *highlighter_cbs, const char *ptr, char literal_closer);
bool __cdecl ?patch_value_fixup_data_t__QEBA_N_K_Z(const fixup_data_t *__hidden this, ea_t ea);
const char *__cdecl ?path_bpt_location_t__QEBAPEBDXZ(const bpt_location_t *__hidden this);
bool __cdecl ?path_gdl_graph_t__AEBA_NAEAVnode_set_t__HH_Z(const gdl_graph_t *__hidden this, node_set_t *visited, int m, int n);
bool __cdecl ?path_back_abstract_graph_t__IEBA_NAEAVedge_typer_t__HH_Z(const abstract_graph_t *__hidden this, edge_typer_t *et, int m, int n);
bool __cdecl ?path_back_abstract_graph_t__IEBA_NAEBV?$qvector_Vnode_set_t____HH_Z(const abstract_graph_t *__hidden this, const array_of_node_set_t *domin, int m, int n);
bool __cdecl ?path_exists_gdl_graph_t__QEBA_NHH_Z(const gdl_graph_t *__hidden this, int m, int n);
bool __cdecl ?pending_nonspaces_present_ida_syntax_highlighter_t__IEAA_NPEBD_Z(ida_syntax_highlighter_t *__hidden this, const char *end);
void __cdecl ?perform_cast_lex_value_t__QEAAXAEBUcast_t___Z(lex_value_t *__hidden this, const cast_t *cast);
place_t *__cdecl ?place_lochist_entry_t__QEAAPEAVplace_t__XZ(lochist_entry_t *__hidden this);
const place_t *__cdecl ?place_lochist_entry_t__QEBAPEBVplace_t__XZ(const lochist_entry_t *__hidden this);
size_t __cdecl ?points_count_screen_graph_selection_t__QEBA_KXZ(const screen_graph_selection_t *__hidden this);
token_t __cdecl ?pop_?$qstack_Utoken_t____QEAA?AUtoken_t__XZ(qstack<token_t> *__hidden this);
void __cdecl ?pop_back_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAXXZ(std::basic_string<char> *__hidden this);
void __cdecl ?pop_back_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAXXZ(std::basic_string<char16_t> *__hidden this);
void __cdecl ?pop_back_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAXXZ(std::basic_string<char32_t> *__hidden this);
void __cdecl ?pop_back_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAXXZ(std::basic_string<wchar_t> *__hidden this);
void __cdecl ?pop_back_?$qlist_PEAVui_request_t____QEAAXXZ(qlist<ui_request_t *> *__hidden this);
void __cdecl ?pop_back_?$qvector_D__QEAAXXZ(qvector<char> *__hidden this);
void __cdecl ?pop_back_?$qvector_E__QEAAXXZ(qvector<unsigned char> *__hidden this);
void __cdecl ?pop_back_?$qvector_H__QEAAXXZ(qvector<int> *__hidden this);
void __cdecl ?pop_back_?$qvector_I__QEAAXXZ(qvector<unsigned int> *__hidden this);
void __cdecl ?pop_back_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAXXZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
void __cdecl ?pop_back_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAXXZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
void __cdecl ?pop_back_?$qvector_PEAUbpt_t____QEAAXXZ(qvector<bpt_t *> *__hidden this);
void __cdecl ?pop_back_?$qvector_PEAUextlang_t____QEAAXXZ(qvector<extlang_t *> *__hidden this);
void __cdecl ?pop_back_?$qvector_PEAUline_rendering_output_entry_t____QEAAXXZ(qvector<line_rendering_output_entry_t *> *__hidden this);
void __cdecl ?pop_back_?$qvector_PEAVsnapshot_t____QEAAXXZ(qvector<snapshot_t *> *__hidden this);
void __cdecl ?pop_back_?$qvector_PEBD__QEAAXXZ(qvector<const char *> *__hidden this);
void __cdecl ?pop_back_?$qvector_PEBUbpt_t____QEAAXXZ(qvector<const bpt_t *> *__hidden this);
void __cdecl ?pop_back_?$qvector_PEBVrangeset_t____QEAAXXZ(qvector<const rangeset_t *> *__hidden this);
void __cdecl ?pop_back_?$qvector_PEBVtwinline_t____QEAAXXZ(qvector<const twinline_t *> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uargpart_t____QEAAXXZ(qvector<argpart_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ubpt_t____QEAAXXZ(qvector<bpt_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ubptaddrs_t____QEAAXXZ(qvector<bptaddrs_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ucall_stack_info_t____QEAAXXZ(qvector<call_stack_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ucatch_t____QEAAXXZ(qvector<catch_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ucfgopt_set_t____QEAAXXZ(qvector<cfgopt_set_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uchannel_redir_t____QEAAXXZ(qvector<channel_redir_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ucliopt_t____QEAAXXZ(qvector<cliopt_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ucompiled_binpat_t____QEAAXXZ(qvector<compiled_binpat_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Udebug_event_t____QEAAXXZ(qvector<debug_event_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Udirentry_t____QEAAXXZ(qvector<direntry_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Udirtree_cursor_t____QEAAXXZ(qvector<dirtree_cursor_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uea_name_t____QEAAXXZ(qvector<ea_name_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uedge_t____QEAAXXZ(qvector<edge_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uenum_member_t____QEAAXXZ(qvector<enum_member_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uexception_info_t____QEAAXXZ(qvector<exception_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ufixup_info_t____QEAAXXZ(qvector<fixup_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ufuncarg_t____QEAAXXZ(qvector<funcarg_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ugroup_crinfo_t____QEAAXXZ(qvector<group_crinfo_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uidc_global_t____QEAAXXZ(qvector<idc_global_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uidp_desc_t____QEAAXXZ(qvector<idp_desc_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uidp_name_t____QEAAXXZ(qvector<idp_name_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uioport_bit_t____QEAAXXZ(qvector<ioport_bit_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uioport_t____QEAAXXZ(qvector<ioport_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ujvalue_t____QEAAXXZ(qvector<jvalue_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ukvp_t____QEAAXXZ(qvector<kvp_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ulochist_entry_t____QEAAXXZ(qvector<lochist_entry_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ulowcnd_t____QEAAXXZ(qvector<lowcnd_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Umemory_info_t____QEAAXXZ(qvector<memory_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Umemreg_info_t____QEAAXXZ(qvector<memreg_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Umodinfo_t____QEAAXXZ(qvector<modinfo_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Umovbpt_info_t____QEAAXXZ(qvector<movbpt_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Upoint_t____QEAAXXZ(qvector<point_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uprocess_info_t____QEAAXXZ(qvector<process_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uqbasic_block_t____QEAAXXZ(qvector<qbasic_block_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Urange_t____QEAAXXZ(qvector<range_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Urect_t____QEAAXXZ(qvector<rect_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Urefinfo_desc_t____QEAAXXZ(qvector<refinfo_desc_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ureg_access_t____QEAAXXZ(qvector<reg_access_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ureg_info_t____QEAAXXZ(qvector<reg_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uregister_info_t____QEAAXXZ(qvector<register_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uregobj_t____QEAAXXZ(qvector<regobj_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uregval_t____QEAAXXZ(qvector<regval_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Urow_info_t____QEAAXXZ(qvector<row_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uscattered_segm_t____QEAAXXZ(qvector<scattered_segm_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Usegm_move_info_t____QEAAXXZ(qvector<segm_move_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uselection_item_t____QEAAXXZ(qvector<selection_item_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Usimd_info_t____QEAAXXZ(qvector<simd_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Usimpleline_t____QEAAXXZ(qvector<simpleline_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Ustkpnt_t____QEAAXXZ(qvector<stkpnt_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Utev_info_reg_t____QEAAXXZ(qvector<tev_info_reg_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Utev_info_t____QEAAXXZ(qvector<tev_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Utev_reg_value_t____QEAAXXZ(qvector<tev_reg_value_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uthread_name_t____QEAAXXZ(qvector<thread_name_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Utoken_t____QEAAXXZ(qvector<token_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Utype_attr_t____QEAAXXZ(qvector<type_attr_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uudt_member_t____QEAAXXZ(qvector<udt_member_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uupdate_bpt_info_t____QEAAXXZ(qvector<update_bpt_info_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Uxreflist_entry_t____QEAAXXZ(qvector<xreflist_entry_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_V?$_qstring_D____QEAAXXZ(qvector<_qstring<char>> *__hidden this);
void __cdecl ?pop_back_?$qvector_V?$_qstring_E____QEAAXXZ(qvector<_qstring<unsigned char>> *__hidden this);
void __cdecl ?pop_back_?$qvector_V?$_qstring__W____QEAAXXZ(qvector<_qstring<wchar_t>> *__hidden this);
void __cdecl ?pop_back_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAXXZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
void __cdecl ?pop_back_?$qvector_V?$qvector_H____QEAAXXZ(qvector<qvector<int>> *__hidden this);
void __cdecl ?pop_back_?$qvector_V?$qvector_PEBD____QEAAXXZ(qvector<qvector<const char *>> *__hidden this);
void __cdecl ?pop_back_?$qvector_V?$qvector_PEBVtwinline_t______QEAAXXZ(qvector<qvector<const twinline_t *>> *__hidden this);
void __cdecl ?pop_back_?$qvector_V?$qvector__J____QEAAXXZ(qvector<qvector<long long>> *__hidden this);
void __cdecl ?pop_back_?$qvector_Vargloc_t____QEAAXXZ(qvector<argloc_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Vintmap_t____QEAAXXZ(qvector<intmap_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Vnode_set_t____QEAAXXZ(qvector<node_set_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Vop_t____QEAAXXZ(qvector<op_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Vrangeset_t____QEAAXXZ(qvector<rangeset_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Vsync_source_t____QEAAXXZ(qvector<sync_source_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Vtinfo_t____QEAAXXZ(qvector<tinfo_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Vtryblk_t____QEAAXXZ(qvector<tryblk_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Vtwinline_t____QEAAXXZ(qvector<twinline_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_Vvalstr_t____QEAAXXZ(qvector<valstr_t> *__hidden this);
void __cdecl ?pop_back_?$qvector_W4movbpt_code_t____QEAAXXZ(qvector<movbpt_code_t> *__hidden this);
void __cdecl ?pop_back_?$qvector__J__QEAAXXZ(qvector<long long> *__hidden this);
void __cdecl ?pop_back_?$qvector__K__QEAAXXZ(qvector<unsigned long long> *__hidden this);
void __cdecl ?pop_back_?$qvector__N__QEAAXXZ(qvector<bool> *__hidden this);
void __cdecl ?pop_back_?$qvector__W__QEAAXXZ(qvector<wchar_t> *__hidden this);
void __cdecl ?pop_front_?$qlist_PEAVui_request_t____QEAAXXZ(qlist<ui_request_t *> *__hidden this);
bool __cdecl ?popup_allowed_chooser_base_t__QEBA_NH_Z(const chooser_base_t *__hidden this, int i);
bool __cdecl ?pre_jpi_jump_pattern_t__UEAA_NH_Z(jump_pattern_t *__hidden this, int);
int __cdecl ?pred_gdl_graph_t__UEBAHHH_Z(const gdl_graph_t *__hidden this, int node, int i);
int __cdecl ?pred_mutable_graph_t__UEBAHHH_Z(const mutable_graph_t *__hidden this, int b, int i);
int __cdecl ?pred_qflow_chart_t__UEBAHHH_Z(const qflow_chart_t *__hidden this, int node, int i);
const intvec_t *__cdecl ?predset_mutable_graph_t__QEBAAEBV?$qvector_H__H_Z(const mutable_graph_t *__hidden this, int b);
bool __cdecl ?present_tinfo_t__QEBA_NXZ(const tinfo_t *__hidden this);
bool __cdecl ?prev_enumplace_t__UEAA_NPEAX_Z(enumplace_t *__hidden this, void *ud);
bool __cdecl ?prev_func_item_iterator_t__QEAA_NP6A_NIPEAX_Z0_Z(func_item_iterator_t *__hidden this, testf_t *func, void *ud);
bool __cdecl ?prev_func_parent_iterator_t__QEAA_NXZ(func_parent_iterator_t *__hidden this);
bool __cdecl ?prev_func_tail_iterator_t__QEAA_NXZ(func_tail_iterator_t *__hidden this);
bool __cdecl ?prev_hexplace_t__UEAA_NPEAX_Z(hexplace_t *__hidden this, void *ud);
bool __cdecl ?prev_idaplace_t__UEAA_NPEAX_Z(idaplace_t *__hidden this, void *ud);
bool __cdecl ?prev_netnode__QEAA_NXZ(netnode *__hidden this);
bool __cdecl ?prev_place_t__UEAA_NPEAX_Z(place_t *__hidden this, void *ud);
bool __cdecl ?prev_simpleline_place_t__UEAA_NPEAX_Z(simpleline_place_t *__hidden this, void *ud);
bool __cdecl ?prev_structplace_t__UEAA_NPEAX_Z(structplace_t *__hidden this, void *ud);
bool __cdecl ?prev_addr_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
ea_t __cdecl ?prev_addr_rangeset_t__QEBA_K_K_Z(const rangeset_t *__hidden this, ea_t ea);
int32 __cdecl ?prev_block_state_highlighter_cbs_t__UEAAHXZ(highlighter_cbs_t *__hidden this);
bool __cdecl ?prev_code_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
bool __cdecl ?prev_data_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
bool __cdecl ?prev_head_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
cref_t __cdecl ?prev_insn_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____QEAA?AW4cref_t__XZ(backward_flow_iterator_t<no_regs_t, simple_bfi_t> *__hidden this);
bool __cdecl ?prev_not_tail_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
ea_t __cdecl ?prev_range_rangeset_t__QEBA_K_K_Z(const rangeset_t *__hidden this, ea_t ea);
size_t __cdecl ?print_bpt_location_t__QEBA_KPEAV?$_qstring_D___Z(const bpt_location_t *__hidden this, qstring *buf);
bool ?print_encoder_t__UEBA_NPEAU_iobuf__PEBDZZ(const encoder_t *__hidden this, FILE *out, const char *format, ...);
void __cdecl ?print_enumplace_t__UEBAXPEAV?$_qstring_D__PEAX_Z(const enumplace_t *__hidden this, qstring *buf, void *ud);
void __cdecl ?print_hexplace_t__UEBAXPEAV?$_qstring_D__PEAX_Z(const hexplace_t *__hidden this, qstring *buf, void *ud);
void __cdecl ?print_idaplace_t__UEBAXPEAV?$_qstring_D__PEAX_Z(const idaplace_t *__hidden this, qstring *buf, void *ud);
size_t __cdecl ?print_intmap_t__QEBA_KPEAD_K_Z(const intmap_t *__hidden this, char *buf, size_t bufsize);
size_t __cdecl ?print_intset_t__QEBA_KPEAD_K_Z(const intset_t *__hidden this, char *buf, size_t bufsize);
void __cdecl ?print_place_t__UEBAXPEAV?$_qstring_D__PEAX_Z(const place_t *__hidden this, qstring *vout, void *ud);
size_t __cdecl ?print_point_t__QEBA_KPEAD_K_Z(const point_t *__hidden this, char *buf, size_t bufsize);
size_t __cdecl ?print_pointseq_t__QEBA_KPEAD_K_Z(const pointseq_t *__hidden this, char *buf, size_t bufsize);
size_t __cdecl ?print_range_t__QEBA_KPEAD_K_Z(const range_t *__hidden this, char *buf, size_t bufsize);
size_t __cdecl ?print_rangeset_t__QEBA_KPEAD_K_Z(const rangeset_t *__hidden this, char *buf, size_t bufsize);
void __cdecl ?print_simpleline_place_t__UEBAXPEAV?$_qstring_D__PEAX_Z(const simpleline_place_t *__hidden this, qstring *buf, void *ud);
void __cdecl ?print_structplace_t__UEBAXPEAV?$_qstring_D__PEAX_Z(const structplace_t *__hidden this, qstring *buf, void *ud);
int __cdecl ?print_text_sink_t__UEAAHPEBD_Z(text_sink_t *__hidden this, const char *str);
bool __cdecl ?print_tinfo_t__QEBA_NPEAV?$_qstring_D__PEBDHHH11_Z(const tinfo_t *__hidden this, qstring *out, const char *name, int prtype_flags, int indent, int cmtindent, const char *prefix, const char *cmt);
bool __cdecl ?print_edge_gdl_graph_t__UEBA_NPEAU_iobuf__HH_Z(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);
void __cdecl ?print_graph_attributes_gdl_graph_t__UEBAXPEAU_iobuf___Z(const gdl_graph_t *__hidden this, FILE *fp);
bool __cdecl ?print_label_now_outctx_base_t__QEBA_NXZ(const outctx_base_t *__hidden this);
bool __cdecl ?print_names_qflow_chart_t__QEBA_NXZ(const qflow_chart_t *__hidden this);
bool __cdecl ?print_node_gdl_graph_t__UEBA_NPEAU_iobuf__H_Z(const gdl_graph_t *__hidden this, FILE *fp, int n);
void __cdecl ?print_node_attributes_gdl_graph_t__UEBAXPEAU_iobuf__H_Z(const gdl_graph_t *__hidden this, FILE *fp, int n);
void __cdecl ?print_node_attributes_qflow_chart_t__UEBAXPEAU_iobuf__H_Z(const qflow_chart_t *__hidden this, FILE *fp, int n);
ssize_t __cdecl ?privrange_changed_processor_t__QEAA_JAEBUrange_t___JPEAV?$_qstring_D___Z(processor_t *__hidden this, const range_t *old_privrange, adiff_t delta, qstring *errbuf);
void __cdecl ?process_delay_slot_jump_pattern_t__UEBAXAEA_K_N_Z(const jump_pattern_t *__hidden this, ea_t *, bool);
void __cdecl ?process_delay_slot_simple_bfi_t__SAXAEA_K_N_Z(ea_t *, bool);
int __cdecl ?process_errors_refcnted_regex_t__QEAAHHPEAV?$_qstring_D___Z(refcnted_regex_t *__hidden this, int code, qstring *errmsg);
void __cdecl ?prune_now_tinfo_visitor_t__QEAAXXZ(tinfo_visitor_t *__hidden this);
void __cdecl ?push_?$qstack_Utoken_t____QEAAXAEBUtoken_t___Z(qstack<token_t> *__hidden this, token_t *v);
void __cdecl ?push_back_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAXD_Z(std::basic_string<char> *__hidden this, char _Ch);
void __cdecl ?push_back_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAX_S_Z(std::basic_string<char16_t> *__hidden this, __int16 _Ch);
void __cdecl ?push_back_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAX_U_Z(std::basic_string<char32_t> *__hidden this, __int32 _Ch);
void __cdecl ?push_back_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAX_W_Z(std::basic_string<wchar_t> *__hidden this, __int16 _Ch);
ui_request_t **__cdecl ?push_back_?$qlist_PEAVui_request_t____QEAAAEAPEAVui_request_t__XZ(qlist<ui_request_t *> *__hidden this);
void __cdecl ?push_back_?$qlist_PEAVui_request_t____QEAAXAEBQEAVui_request_t___Z(qlist<ui_request_t *> *__hidden this, ui_request_t **x);
char *__cdecl ?push_back_?$qvector_D__QEAAAEADXZ(qvector<char> *__hidden this);
void __cdecl ?push_back_?$qvector_D__QEAAX$$QEAD_Z(qvector<char> *__hidden this, char *x);
void __cdecl ?push_back_?$qvector_D__QEAAXAEBD_Z(qvector<char> *__hidden this, char *x);
unsigned __int8 *__cdecl ?push_back_?$qvector_E__QEAAAEAEXZ(qvector<unsigned char> *__hidden this);
void __cdecl ?push_back_?$qvector_E__QEAAX$$QEAE_Z(qvector<unsigned char> *__hidden this, unsigned __int8 *x);
void __cdecl ?push_back_?$qvector_E__QEAAXAEBE_Z(qvector<unsigned char> *__hidden this, unsigned __int8 *x);
int *__cdecl ?push_back_?$qvector_H__QEAAAEAHXZ(qvector<int> *__hidden this);
void __cdecl ?push_back_?$qvector_H__QEAAX$$QEAH_Z(qvector<int> *__hidden this, int *x);
void __cdecl ?push_back_?$qvector_H__QEAAXAEBH_Z(qvector<int> *__hidden this, int *x);
unsigned int *__cdecl ?push_back_?$qvector_I__QEAAAEAIXZ(qvector<unsigned int> *__hidden this);
void __cdecl ?push_back_?$qvector_I__QEAAX$$QEAI_Z(qvector<unsigned int> *__hidden this, unsigned int *x);
void __cdecl ?push_back_?$qvector_I__QEAAXAEBI_Z(qvector<unsigned int> *__hidden this, unsigned int *x);
__int64 (__cdecl **__cdecl ?push_back_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAAEAP6A_JPEAW4syntax_highlight_style__PEBD_ZXZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this))(syntax_highlight_style *, const char *);
void __cdecl ?push_back_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAX$$QEAP6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
void __cdecl ?push_back_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAXAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
bool (__cdecl **__cdecl ?push_back_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAAEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___ZXZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this))(syntax_highlight_style *, const _qstring<char> *);
void __cdecl ?push_back_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAX$$QEAP6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
void __cdecl ?push_back_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAXAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
bpt_t **__cdecl ?push_back_?$qvector_PEAUbpt_t____QEAAAEAPEAUbpt_t__XZ(qvector<bpt_t *> *__hidden this);
void __cdecl ?push_back_?$qvector_PEAUbpt_t____QEAAX$$QEAPEAUbpt_t___Z(qvector<bpt_t *> *__hidden this, bpt_t **x);
void __cdecl ?push_back_?$qvector_PEAUbpt_t____QEAAXAEBQEAUbpt_t___Z(qvector<bpt_t *> *__hidden this, bpt_t **x);
extlang_t **__cdecl ?push_back_?$qvector_PEAUextlang_t____QEAAAEAPEAUextlang_t__XZ(qvector<extlang_t *> *__hidden this);
void __cdecl ?push_back_?$qvector_PEAUextlang_t____QEAAX$$QEAPEAUextlang_t___Z(qvector<extlang_t *> *__hidden this, extlang_t **x);
void __cdecl ?push_back_?$qvector_PEAUextlang_t____QEAAXAEBQEAUextlang_t___Z(qvector<extlang_t *> *__hidden this, extlang_t **x);
line_rendering_output_entry_t **__cdecl ?push_back_?$qvector_PEAUline_rendering_output_entry_t____QEAAAEAPEAUline_rendering_output_entry_t__XZ(qvector<line_rendering_output_entry_t *> *__hidden this);
void __cdecl ?push_back_?$qvector_PEAUline_rendering_output_entry_t____QEAAX$$QEAPEAUline_rendering_output_entry_t___Z(qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
void __cdecl ?push_back_?$qvector_PEAUline_rendering_output_entry_t____QEAAXAEBQEAUline_rendering_output_entry_t___Z(qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
snapshot_t **__cdecl ?push_back_?$qvector_PEAVsnapshot_t____QEAAAEAPEAVsnapshot_t__XZ(qvector<snapshot_t *> *__hidden this);
void __cdecl ?push_back_?$qvector_PEAVsnapshot_t____QEAAX$$QEAPEAVsnapshot_t___Z(qvector<snapshot_t *> *__hidden this, snapshot_t **x);
void __cdecl ?push_back_?$qvector_PEAVsnapshot_t____QEAAXAEBQEAVsnapshot_t___Z(qvector<snapshot_t *> *__hidden this, snapshot_t **x);
const char **__cdecl ?push_back_?$qvector_PEBD__QEAAAEAPEBDXZ(qvector<const char *> *__hidden this);
void __cdecl ?push_back_?$qvector_PEBD__QEAAX$$QEAPEBD_Z(qvector<const char *> *__hidden this, const char **x);
void __cdecl ?push_back_?$qvector_PEBD__QEAAXAEBQEBD_Z(qvector<const char *> *__hidden this, const char **x);
const bpt_t **__cdecl ?push_back_?$qvector_PEBUbpt_t____QEAAAEAPEBUbpt_t__XZ(qvector<const bpt_t *> *__hidden this);
void __cdecl ?push_back_?$qvector_PEBUbpt_t____QEAAX$$QEAPEBUbpt_t___Z(qvector<const bpt_t *> *__hidden this, const bpt_t **x);
void __cdecl ?push_back_?$qvector_PEBUbpt_t____QEAAXAEBQEBUbpt_t___Z(qvector<const bpt_t *> *__hidden this, const bpt_t **x);
const rangeset_t **__cdecl ?push_back_?$qvector_PEBVrangeset_t____QEAAAEAPEBVrangeset_t__XZ(qvector<const rangeset_t *> *__hidden this);
void __cdecl ?push_back_?$qvector_PEBVrangeset_t____QEAAX$$QEAPEBVrangeset_t___Z(qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
void __cdecl ?push_back_?$qvector_PEBVrangeset_t____QEAAXAEBQEBVrangeset_t___Z(qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
const twinline_t **__cdecl ?push_back_?$qvector_PEBVtwinline_t____QEAAAEAPEBVtwinline_t__XZ(qvector<const twinline_t *> *__hidden this);
void __cdecl ?push_back_?$qvector_PEBVtwinline_t____QEAAX$$QEAPEBVtwinline_t___Z(qvector<const twinline_t *> *__hidden this, const twinline_t **x);
void __cdecl ?push_back_?$qvector_PEBVtwinline_t____QEAAXAEBQEBVtwinline_t___Z(qvector<const twinline_t *> *__hidden this, const twinline_t **x);
argpart_t *__cdecl ?push_back_?$qvector_Uargpart_t____QEAAAEAUargpart_t__XZ(qvector<argpart_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uargpart_t____QEAAX$$QEAUargpart_t___Z(qvector<argpart_t> *__hidden this, argpart_t *x);
void __cdecl ?push_back_?$qvector_Uargpart_t____QEAAXAEBUargpart_t___Z(qvector<argpart_t> *__hidden this, argpart_t *x);
bpt_t *__cdecl ?push_back_?$qvector_Ubpt_t____QEAAAEAUbpt_t__XZ(qvector<bpt_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ubpt_t____QEAAX$$QEAUbpt_t___Z(qvector<bpt_t> *__hidden this, bpt_t *x);
void __cdecl ?push_back_?$qvector_Ubpt_t____QEAAXAEBUbpt_t___Z(qvector<bpt_t> *__hidden this, bpt_t *x);
bptaddrs_t *__cdecl ?push_back_?$qvector_Ubptaddrs_t____QEAAAEAUbptaddrs_t__XZ(qvector<bptaddrs_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ubptaddrs_t____QEAAX$$QEAUbptaddrs_t___Z(qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
void __cdecl ?push_back_?$qvector_Ubptaddrs_t____QEAAXAEBUbptaddrs_t___Z(qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
call_stack_info_t *__cdecl ?push_back_?$qvector_Ucall_stack_info_t____QEAAAEAUcall_stack_info_t__XZ(qvector<call_stack_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ucall_stack_info_t____QEAAX$$QEAUcall_stack_info_t___Z(qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
void __cdecl ?push_back_?$qvector_Ucall_stack_info_t____QEAAXAEBUcall_stack_info_t___Z(qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
catch_t *__cdecl ?push_back_?$qvector_Ucatch_t____QEAAAEAUcatch_t__XZ(qvector<catch_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ucatch_t____QEAAX$$QEAUcatch_t___Z(qvector<catch_t> *__hidden this, catch_t *x);
void __cdecl ?push_back_?$qvector_Ucatch_t____QEAAXAEBUcatch_t___Z(qvector<catch_t> *__hidden this, catch_t *x);
cfgopt_set_t *__cdecl ?push_back_?$qvector_Ucfgopt_set_t____QEAAAEAUcfgopt_set_t__XZ(qvector<cfgopt_set_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ucfgopt_set_t____QEAAX$$QEAUcfgopt_set_t___Z(qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
void __cdecl ?push_back_?$qvector_Ucfgopt_set_t____QEAAXAEBUcfgopt_set_t___Z(qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
channel_redir_t *__cdecl ?push_back_?$qvector_Uchannel_redir_t____QEAAAEAUchannel_redir_t__XZ(qvector<channel_redir_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uchannel_redir_t____QEAAX$$QEAUchannel_redir_t___Z(qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
void __cdecl ?push_back_?$qvector_Uchannel_redir_t____QEAAXAEBUchannel_redir_t___Z(qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
cliopt_t *__cdecl ?push_back_?$qvector_Ucliopt_t____QEAAAEAUcliopt_t__XZ(qvector<cliopt_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ucliopt_t____QEAAX$$QEAUcliopt_t___Z(qvector<cliopt_t> *__hidden this, cliopt_t *x);
void __cdecl ?push_back_?$qvector_Ucliopt_t____QEAAXAEBUcliopt_t___Z(qvector<cliopt_t> *__hidden this, cliopt_t *x);
compiled_binpat_t *__cdecl ?push_back_?$qvector_Ucompiled_binpat_t____QEAAAEAUcompiled_binpat_t__XZ(qvector<compiled_binpat_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ucompiled_binpat_t____QEAAX$$QEAUcompiled_binpat_t___Z(qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
void __cdecl ?push_back_?$qvector_Ucompiled_binpat_t____QEAAXAEBUcompiled_binpat_t___Z(qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
debug_event_t *__cdecl ?push_back_?$qvector_Udebug_event_t____QEAAAEAUdebug_event_t__XZ(qvector<debug_event_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Udebug_event_t____QEAAX$$QEAUdebug_event_t___Z(qvector<debug_event_t> *__hidden this, debug_event_t *x);
void __cdecl ?push_back_?$qvector_Udebug_event_t____QEAAXAEBUdebug_event_t___Z(qvector<debug_event_t> *__hidden this, debug_event_t *x);
direntry_t *__cdecl ?push_back_?$qvector_Udirentry_t____QEAAAEAUdirentry_t__XZ(qvector<direntry_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Udirentry_t____QEAAX$$QEAUdirentry_t___Z(qvector<direntry_t> *__hidden this, direntry_t *x);
void __cdecl ?push_back_?$qvector_Udirentry_t____QEAAXAEBUdirentry_t___Z(qvector<direntry_t> *__hidden this, direntry_t *x);
dirtree_cursor_t *__cdecl ?push_back_?$qvector_Udirtree_cursor_t____QEAAAEAUdirtree_cursor_t__XZ(qvector<dirtree_cursor_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Udirtree_cursor_t____QEAAX$$QEAUdirtree_cursor_t___Z(qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
void __cdecl ?push_back_?$qvector_Udirtree_cursor_t____QEAAXAEBUdirtree_cursor_t___Z(qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
ea_name_t *__cdecl ?push_back_?$qvector_Uea_name_t____QEAAAEAUea_name_t__XZ(qvector<ea_name_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uea_name_t____QEAAX$$QEAUea_name_t___Z(qvector<ea_name_t> *__hidden this, ea_name_t *x);
void __cdecl ?push_back_?$qvector_Uea_name_t____QEAAXAEBUea_name_t___Z(qvector<ea_name_t> *__hidden this, ea_name_t *x);
edge_t *__cdecl ?push_back_?$qvector_Uedge_t____QEAAAEAUedge_t__XZ(qvector<edge_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uedge_t____QEAAX$$QEAUedge_t___Z(qvector<edge_t> *__hidden this, edge_t *x);
void __cdecl ?push_back_?$qvector_Uedge_t____QEAAXAEBUedge_t___Z(qvector<edge_t> *__hidden this, edge_t *x);
enum_member_t *__cdecl ?push_back_?$qvector_Uenum_member_t____QEAAAEAUenum_member_t__XZ(qvector<enum_member_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uenum_member_t____QEAAX$$QEAUenum_member_t___Z(qvector<enum_member_t> *__hidden this, enum_member_t *x);
void __cdecl ?push_back_?$qvector_Uenum_member_t____QEAAXAEBUenum_member_t___Z(qvector<enum_member_t> *__hidden this, enum_member_t *x);
exception_info_t *__cdecl ?push_back_?$qvector_Uexception_info_t____QEAAAEAUexception_info_t__XZ(qvector<exception_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uexception_info_t____QEAAX$$QEAUexception_info_t___Z(qvector<exception_info_t> *__hidden this, exception_info_t *x);
void __cdecl ?push_back_?$qvector_Uexception_info_t____QEAAXAEBUexception_info_t___Z(qvector<exception_info_t> *__hidden this, exception_info_t *x);
fixup_info_t *__cdecl ?push_back_?$qvector_Ufixup_info_t____QEAAAEAUfixup_info_t__XZ(qvector<fixup_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ufixup_info_t____QEAAX$$QEAUfixup_info_t___Z(qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
void __cdecl ?push_back_?$qvector_Ufixup_info_t____QEAAXAEBUfixup_info_t___Z(qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
funcarg_t *__cdecl ?push_back_?$qvector_Ufuncarg_t____QEAAAEAUfuncarg_t__XZ(qvector<funcarg_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ufuncarg_t____QEAAX$$QEAUfuncarg_t___Z(qvector<funcarg_t> *__hidden this, funcarg_t *x);
void __cdecl ?push_back_?$qvector_Ufuncarg_t____QEAAXAEBUfuncarg_t___Z(qvector<funcarg_t> *__hidden this, funcarg_t *x);
group_crinfo_t *__cdecl ?push_back_?$qvector_Ugroup_crinfo_t____QEAAAEAUgroup_crinfo_t__XZ(qvector<group_crinfo_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ugroup_crinfo_t____QEAAX$$QEAUgroup_crinfo_t___Z(qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
void __cdecl ?push_back_?$qvector_Ugroup_crinfo_t____QEAAXAEBUgroup_crinfo_t___Z(qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
idc_global_t *__cdecl ?push_back_?$qvector_Uidc_global_t____QEAAAEAUidc_global_t__XZ(qvector<idc_global_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uidc_global_t____QEAAX$$QEAUidc_global_t___Z(qvector<idc_global_t> *__hidden this, idc_global_t *x);
void __cdecl ?push_back_?$qvector_Uidc_global_t____QEAAXAEBUidc_global_t___Z(qvector<idc_global_t> *__hidden this, idc_global_t *x);
idp_desc_t *__cdecl ?push_back_?$qvector_Uidp_desc_t____QEAAAEAUidp_desc_t__XZ(qvector<idp_desc_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uidp_desc_t____QEAAX$$QEAUidp_desc_t___Z(qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
void __cdecl ?push_back_?$qvector_Uidp_desc_t____QEAAXAEBUidp_desc_t___Z(qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
idp_name_t *__cdecl ?push_back_?$qvector_Uidp_name_t____QEAAAEAUidp_name_t__XZ(qvector<idp_name_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uidp_name_t____QEAAX$$QEAUidp_name_t___Z(qvector<idp_name_t> *__hidden this, idp_name_t *x);
void __cdecl ?push_back_?$qvector_Uidp_name_t____QEAAXAEBUidp_name_t___Z(qvector<idp_name_t> *__hidden this, idp_name_t *x);
ioport_bit_t *__cdecl ?push_back_?$qvector_Uioport_bit_t____QEAAAEAUioport_bit_t__XZ(qvector<ioport_bit_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uioport_bit_t____QEAAX$$QEAUioport_bit_t___Z(qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
void __cdecl ?push_back_?$qvector_Uioport_bit_t____QEAAXAEBUioport_bit_t___Z(qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
ioport_t *__cdecl ?push_back_?$qvector_Uioport_t____QEAAAEAUioport_t__XZ(qvector<ioport_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uioport_t____QEAAX$$QEAUioport_t___Z(qvector<ioport_t> *__hidden this, ioport_t *x);
void __cdecl ?push_back_?$qvector_Uioport_t____QEAAXAEBUioport_t___Z(qvector<ioport_t> *__hidden this, ioport_t *x);
jvalue_t *__cdecl ?push_back_?$qvector_Ujvalue_t____QEAAAEAUjvalue_t__XZ(qvector<jvalue_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ujvalue_t____QEAAX$$QEAUjvalue_t___Z(qvector<jvalue_t> *__hidden this, jvalue_t *x);
void __cdecl ?push_back_?$qvector_Ujvalue_t____QEAAXAEBUjvalue_t___Z(qvector<jvalue_t> *__hidden this, jvalue_t *x);
ida_syntax_highlighter_t::keywords_style_t *__cdecl ?push_back_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAAEAUkeywords_style_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAX$$QEAUkeywords_style_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
void __cdecl ?push_back_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAXAEBUkeywords_style_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
kvp_t *__cdecl ?push_back_?$qvector_Ukvp_t____QEAAAEAUkvp_t__XZ(qvector<kvp_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ukvp_t____QEAAX$$QEAUkvp_t___Z(qvector<kvp_t> *__hidden this, kvp_t *x);
void __cdecl ?push_back_?$qvector_Ukvp_t____QEAAXAEBUkvp_t___Z(qvector<kvp_t> *__hidden this, kvp_t *x);
lochist_entry_t *__cdecl ?push_back_?$qvector_Ulochist_entry_t____QEAAAEAUlochist_entry_t__XZ(qvector<lochist_entry_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ulochist_entry_t____QEAAX$$QEAUlochist_entry_t___Z(qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
void __cdecl ?push_back_?$qvector_Ulochist_entry_t____QEAAXAEBUlochist_entry_t___Z(qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
lowcnd_t *__cdecl ?push_back_?$qvector_Ulowcnd_t____QEAAAEAUlowcnd_t__XZ(qvector<lowcnd_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ulowcnd_t____QEAAX$$QEAUlowcnd_t___Z(qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
void __cdecl ?push_back_?$qvector_Ulowcnd_t____QEAAXAEBUlowcnd_t___Z(qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
memory_info_t *__cdecl ?push_back_?$qvector_Umemory_info_t____QEAAAEAUmemory_info_t__XZ(qvector<memory_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Umemory_info_t____QEAAX$$QEAUmemory_info_t___Z(qvector<memory_info_t> *__hidden this, memory_info_t *x);
void __cdecl ?push_back_?$qvector_Umemory_info_t____QEAAXAEBUmemory_info_t___Z(qvector<memory_info_t> *__hidden this, memory_info_t *x);
memreg_info_t *__cdecl ?push_back_?$qvector_Umemreg_info_t____QEAAAEAUmemreg_info_t__XZ(qvector<memreg_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Umemreg_info_t____QEAAX$$QEAUmemreg_info_t___Z(qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
void __cdecl ?push_back_?$qvector_Umemreg_info_t____QEAAXAEBUmemreg_info_t___Z(qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
modinfo_t *__cdecl ?push_back_?$qvector_Umodinfo_t____QEAAAEAUmodinfo_t__XZ(qvector<modinfo_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Umodinfo_t____QEAAX$$QEAUmodinfo_t___Z(qvector<modinfo_t> *__hidden this, modinfo_t *x);
void __cdecl ?push_back_?$qvector_Umodinfo_t____QEAAXAEBUmodinfo_t___Z(qvector<modinfo_t> *__hidden this, modinfo_t *x);
movbpt_info_t *__cdecl ?push_back_?$qvector_Umovbpt_info_t____QEAAAEAUmovbpt_info_t__XZ(qvector<movbpt_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Umovbpt_info_t____QEAAX$$QEAUmovbpt_info_t___Z(qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
void __cdecl ?push_back_?$qvector_Umovbpt_info_t____QEAAXAEBUmovbpt_info_t___Z(qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
ida_syntax_highlighter_t::multicmt_t *__cdecl ?push_back_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAAEAUmulticmt_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAX$$QEAUmulticmt_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
void __cdecl ?push_back_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAXAEBUmulticmt_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
ida_syntax_highlighter_t::plain_char_ptr_t *__cdecl ?push_back_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAAEAUplain_char_ptr_t_ida_syntax_highlighter_t__XZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAX$$QEAUplain_char_ptr_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
void __cdecl ?push_back_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAXAEBUplain_char_ptr_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
point_t *__cdecl ?push_back_?$qvector_Upoint_t____QEAAAEAUpoint_t__XZ(qvector<point_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Upoint_t____QEAAX$$QEAUpoint_t___Z(qvector<point_t> *__hidden this, point_t *x);
void __cdecl ?push_back_?$qvector_Upoint_t____QEAAXAEBUpoint_t___Z(qvector<point_t> *__hidden this, point_t *x);
process_info_t *__cdecl ?push_back_?$qvector_Uprocess_info_t____QEAAAEAUprocess_info_t__XZ(qvector<process_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uprocess_info_t____QEAAX$$QEAUprocess_info_t___Z(qvector<process_info_t> *__hidden this, process_info_t *x);
void __cdecl ?push_back_?$qvector_Uprocess_info_t____QEAAXAEBUprocess_info_t___Z(qvector<process_info_t> *__hidden this, process_info_t *x);
qbasic_block_t *__cdecl ?push_back_?$qvector_Uqbasic_block_t____QEAAAEAUqbasic_block_t__XZ(qvector<qbasic_block_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uqbasic_block_t____QEAAX$$QEAUqbasic_block_t___Z(qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
void __cdecl ?push_back_?$qvector_Uqbasic_block_t____QEAAXAEBUqbasic_block_t___Z(qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
range_t *__cdecl ?push_back_?$qvector_Urange_t____QEAAAEAUrange_t__XZ(qvector<range_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Urange_t____QEAAX$$QEAUrange_t___Z(qvector<range_t> *__hidden this, range_t *x);
void __cdecl ?push_back_?$qvector_Urange_t____QEAAXAEBUrange_t___Z(qvector<range_t> *__hidden this, range_t *x);
rect_t *__cdecl ?push_back_?$qvector_Urect_t____QEAAAEAUrect_t__XZ(qvector<rect_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Urect_t____QEAAX$$QEAUrect_t___Z(qvector<rect_t> *__hidden this, rect_t *x);
void __cdecl ?push_back_?$qvector_Urect_t____QEAAXAEBUrect_t___Z(qvector<rect_t> *__hidden this, rect_t *x);
refinfo_desc_t *__cdecl ?push_back_?$qvector_Urefinfo_desc_t____QEAAAEAUrefinfo_desc_t__XZ(qvector<refinfo_desc_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Urefinfo_desc_t____QEAAX$$QEAUrefinfo_desc_t___Z(qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
void __cdecl ?push_back_?$qvector_Urefinfo_desc_t____QEAAXAEBUrefinfo_desc_t___Z(qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
reg_access_t *__cdecl ?push_back_?$qvector_Ureg_access_t____QEAAAEAUreg_access_t__XZ(qvector<reg_access_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ureg_access_t____QEAAX$$QEAUreg_access_t___Z(qvector<reg_access_t> *__hidden this, reg_access_t *x);
void __cdecl ?push_back_?$qvector_Ureg_access_t____QEAAXAEBUreg_access_t___Z(qvector<reg_access_t> *__hidden this, reg_access_t *x);
reg_info_t *__cdecl ?push_back_?$qvector_Ureg_info_t____QEAAAEAUreg_info_t__XZ(qvector<reg_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ureg_info_t____QEAAX$$QEAUreg_info_t___Z(qvector<reg_info_t> *__hidden this, reg_info_t *x);
void __cdecl ?push_back_?$qvector_Ureg_info_t____QEAAXAEBUreg_info_t___Z(qvector<reg_info_t> *__hidden this, reg_info_t *x);
register_info_t *__cdecl ?push_back_?$qvector_Uregister_info_t____QEAAAEAUregister_info_t__XZ(qvector<register_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uregister_info_t____QEAAX$$QEAUregister_info_t___Z(qvector<register_info_t> *__hidden this, register_info_t *x);
void __cdecl ?push_back_?$qvector_Uregister_info_t____QEAAXAEBUregister_info_t___Z(qvector<register_info_t> *__hidden this, register_info_t *x);
regobj_t *__cdecl ?push_back_?$qvector_Uregobj_t____QEAAAEAUregobj_t__XZ(qvector<regobj_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uregobj_t____QEAAX$$QEAUregobj_t___Z(qvector<regobj_t> *__hidden this, regobj_t *x);
void __cdecl ?push_back_?$qvector_Uregobj_t____QEAAXAEBUregobj_t___Z(qvector<regobj_t> *__hidden this, regobj_t *x);
regval_t *__cdecl ?push_back_?$qvector_Uregval_t____QEAAAEAUregval_t__XZ(qvector<regval_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uregval_t____QEAAX$$QEAUregval_t___Z(qvector<regval_t> *__hidden this, regval_t *x);
void __cdecl ?push_back_?$qvector_Uregval_t____QEAAXAEBUregval_t___Z(qvector<regval_t> *__hidden this, regval_t *x);
row_info_t *__cdecl ?push_back_?$qvector_Urow_info_t____QEAAAEAUrow_info_t__XZ(qvector<row_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Urow_info_t____QEAAX$$QEAUrow_info_t___Z(qvector<row_info_t> *__hidden this, row_info_t *x);
void __cdecl ?push_back_?$qvector_Urow_info_t____QEAAXAEBUrow_info_t___Z(qvector<row_info_t> *__hidden this, row_info_t *x);
scattered_segm_t *__cdecl ?push_back_?$qvector_Uscattered_segm_t____QEAAAEAUscattered_segm_t__XZ(qvector<scattered_segm_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uscattered_segm_t____QEAAX$$QEAUscattered_segm_t___Z(qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
void __cdecl ?push_back_?$qvector_Uscattered_segm_t____QEAAXAEBUscattered_segm_t___Z(qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
segm_move_info_t *__cdecl ?push_back_?$qvector_Usegm_move_info_t____QEAAAEAUsegm_move_info_t__XZ(qvector<segm_move_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Usegm_move_info_t____QEAAX$$QEAUsegm_move_info_t___Z(qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
void __cdecl ?push_back_?$qvector_Usegm_move_info_t____QEAAXAEBUsegm_move_info_t___Z(qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
selection_item_t *__cdecl ?push_back_?$qvector_Uselection_item_t____QEAAAEAUselection_item_t__XZ(qvector<selection_item_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uselection_item_t____QEAAX$$QEAUselection_item_t___Z(qvector<selection_item_t> *__hidden this, selection_item_t *x);
void __cdecl ?push_back_?$qvector_Uselection_item_t____QEAAXAEBUselection_item_t___Z(qvector<selection_item_t> *__hidden this, selection_item_t *x);
simd_info_t *__cdecl ?push_back_?$qvector_Usimd_info_t____QEAAAEAUsimd_info_t__XZ(qvector<simd_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Usimd_info_t____QEAAX$$QEAUsimd_info_t___Z(qvector<simd_info_t> *__hidden this, simd_info_t *x);
void __cdecl ?push_back_?$qvector_Usimd_info_t____QEAAXAEBUsimd_info_t___Z(qvector<simd_info_t> *__hidden this, simd_info_t *x);
simpleline_t *__cdecl ?push_back_?$qvector_Usimpleline_t____QEAAAEAUsimpleline_t__XZ(qvector<simpleline_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Usimpleline_t____QEAAX$$QEAUsimpleline_t___Z(qvector<simpleline_t> *__hidden this, simpleline_t *x);
void __cdecl ?push_back_?$qvector_Usimpleline_t____QEAAXAEBUsimpleline_t___Z(qvector<simpleline_t> *__hidden this, simpleline_t *x);
stkpnt_t *__cdecl ?push_back_?$qvector_Ustkpnt_t____QEAAAEAUstkpnt_t__XZ(qvector<stkpnt_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Ustkpnt_t____QEAAX$$QEAUstkpnt_t___Z(qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
void __cdecl ?push_back_?$qvector_Ustkpnt_t____QEAAXAEBUstkpnt_t___Z(qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
tev_info_reg_t *__cdecl ?push_back_?$qvector_Utev_info_reg_t____QEAAAEAUtev_info_reg_t__XZ(qvector<tev_info_reg_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Utev_info_reg_t____QEAAX$$QEAUtev_info_reg_t___Z(qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
void __cdecl ?push_back_?$qvector_Utev_info_reg_t____QEAAXAEBUtev_info_reg_t___Z(qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
tev_info_t *__cdecl ?push_back_?$qvector_Utev_info_t____QEAAAEAUtev_info_t__XZ(qvector<tev_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Utev_info_t____QEAAX$$QEAUtev_info_t___Z(qvector<tev_info_t> *__hidden this, tev_info_t *x);
void __cdecl ?push_back_?$qvector_Utev_info_t____QEAAXAEBUtev_info_t___Z(qvector<tev_info_t> *__hidden this, tev_info_t *x);
tev_reg_value_t *__cdecl ?push_back_?$qvector_Utev_reg_value_t____QEAAAEAUtev_reg_value_t__XZ(qvector<tev_reg_value_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Utev_reg_value_t____QEAAX$$QEAUtev_reg_value_t___Z(qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
void __cdecl ?push_back_?$qvector_Utev_reg_value_t____QEAAXAEBUtev_reg_value_t___Z(qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
thread_name_t *__cdecl ?push_back_?$qvector_Uthread_name_t____QEAAAEAUthread_name_t__XZ(qvector<thread_name_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uthread_name_t____QEAAX$$QEAUthread_name_t___Z(qvector<thread_name_t> *__hidden this, thread_name_t *x);
void __cdecl ?push_back_?$qvector_Uthread_name_t____QEAAXAEBUthread_name_t___Z(qvector<thread_name_t> *__hidden this, thread_name_t *x);
token_t *__cdecl ?push_back_?$qvector_Utoken_t____QEAAAEAUtoken_t__XZ(qvector<token_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Utoken_t____QEAAX$$QEAUtoken_t___Z(qvector<token_t> *__hidden this, token_t *x);
void __cdecl ?push_back_?$qvector_Utoken_t____QEAAXAEBUtoken_t___Z(qvector<token_t> *__hidden this, token_t *x);
type_attr_t *__cdecl ?push_back_?$qvector_Utype_attr_t____QEAAAEAUtype_attr_t__XZ(qvector<type_attr_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Utype_attr_t____QEAAX$$QEAUtype_attr_t___Z(qvector<type_attr_t> *__hidden this, type_attr_t *x);
void __cdecl ?push_back_?$qvector_Utype_attr_t____QEAAXAEBUtype_attr_t___Z(qvector<type_attr_t> *__hidden this, type_attr_t *x);
udt_member_t *__cdecl ?push_back_?$qvector_Uudt_member_t____QEAAAEAUudt_member_t__XZ(qvector<udt_member_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uudt_member_t____QEAAX$$QEAUudt_member_t___Z(qvector<udt_member_t> *__hidden this, udt_member_t *x);
void __cdecl ?push_back_?$qvector_Uudt_member_t____QEAAXAEBUudt_member_t___Z(qvector<udt_member_t> *__hidden this, udt_member_t *x);
update_bpt_info_t *__cdecl ?push_back_?$qvector_Uupdate_bpt_info_t____QEAAAEAUupdate_bpt_info_t__XZ(qvector<update_bpt_info_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uupdate_bpt_info_t____QEAAX$$QEAUupdate_bpt_info_t___Z(qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
void __cdecl ?push_back_?$qvector_Uupdate_bpt_info_t____QEAAXAEBUupdate_bpt_info_t___Z(qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
xreflist_entry_t *__cdecl ?push_back_?$qvector_Uxreflist_entry_t____QEAAAEAUxreflist_entry_t__XZ(qvector<xreflist_entry_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Uxreflist_entry_t____QEAAX$$QEAUxreflist_entry_t___Z(qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
void __cdecl ?push_back_?$qvector_Uxreflist_entry_t____QEAAXAEBUxreflist_entry_t___Z(qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
_qstring<char> *__cdecl ?push_back_?$qvector_V?$_qstring_D____QEAAAEAV?$_qstring_D__XZ(qvector<_qstring<char>> *__hidden this);
void __cdecl ?push_back_?$qvector_V?$_qstring_D____QEAAX$$QEAV?$_qstring_D___Z(qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
void __cdecl ?push_back_?$qvector_V?$_qstring_D____QEAAXAEBV?$_qstring_D___Z(qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
_qstring<unsigned char> *__cdecl ?push_back_?$qvector_V?$_qstring_E____QEAAAEAV?$_qstring_E__XZ(qvector<_qstring<unsigned char>> *__hidden this);
void __cdecl ?push_back_?$qvector_V?$_qstring_E____QEAAX$$QEAV?$_qstring_E___Z(qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
void __cdecl ?push_back_?$qvector_V?$_qstring_E____QEAAXAEBV?$_qstring_E___Z(qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
_qstring<wchar_t> *__cdecl ?push_back_?$qvector_V?$_qstring__W____QEAAAEAV?$_qstring__W__XZ(qvector<_qstring<wchar_t>> *__hidden this);
void __cdecl ?push_back_?$qvector_V?$_qstring__W____QEAAX$$QEAV?$_qstring__W___Z(qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
void __cdecl ?push_back_?$qvector_V?$_qstring__W____QEAAXAEBV?$_qstring__W___Z(qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
qrefcnt_t<source_item_t> *__cdecl ?push_back_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAAEAV?$qrefcnt_t_Vsource_item_t____XZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
void __cdecl ?push_back_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAX$$QEAV?$qrefcnt_t_Vsource_item_t_____Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
void __cdecl ?push_back_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAXAEBV?$qrefcnt_t_Vsource_item_t_____Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
qvector<int> *__cdecl ?push_back_?$qvector_V?$qvector_H____QEAAAEAV?$qvector_H__XZ(qvector<qvector<int>> *__hidden this);
void __cdecl ?push_back_?$qvector_V?$qvector_H____QEAAX$$QEAV?$qvector_H___Z(qvector<qvector<int>> *__hidden this, qvector<int> *x);
void __cdecl ?push_back_?$qvector_V?$qvector_H____QEAAXAEBV?$qvector_H___Z(qvector<qvector<int>> *__hidden this, qvector<int> *x);
qvector<const char *> *__cdecl ?push_back_?$qvector_V?$qvector_PEBD____QEAAAEAV?$qvector_PEBD__XZ(qvector<qvector<const char *>> *__hidden this);
void __cdecl ?push_back_?$qvector_V?$qvector_PEBD____QEAAX$$QEAV?$qvector_PEBD___Z(qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
void __cdecl ?push_back_?$qvector_V?$qvector_PEBD____QEAAXAEBV?$qvector_PEBD___Z(qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
qvector<const twinline_t *> *__cdecl ?push_back_?$qvector_V?$qvector_PEBVtwinline_t______QEAAAEAV?$qvector_PEBVtwinline_t____XZ(qvector<qvector<const twinline_t *>> *__hidden this);
void __cdecl ?push_back_?$qvector_V?$qvector_PEBVtwinline_t______QEAAX$$QEAV?$qvector_PEBVtwinline_t_____Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
void __cdecl ?push_back_?$qvector_V?$qvector_PEBVtwinline_t______QEAAXAEBV?$qvector_PEBVtwinline_t_____Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
qvector<long long> *__cdecl ?push_back_?$qvector_V?$qvector__J____QEAAAEAV?$qvector__J__XZ(qvector<qvector<long long>> *__hidden this);
void __cdecl ?push_back_?$qvector_V?$qvector__J____QEAAX$$QEAV?$qvector__J___Z(qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
void __cdecl ?push_back_?$qvector_V?$qvector__J____QEAAXAEBV?$qvector__J___Z(qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
argloc_t *__cdecl ?push_back_?$qvector_Vargloc_t____QEAAAEAVargloc_t__XZ(qvector<argloc_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Vargloc_t____QEAAX$$QEAVargloc_t___Z(qvector<argloc_t> *__hidden this, argloc_t *x);
void __cdecl ?push_back_?$qvector_Vargloc_t____QEAAXAEBVargloc_t___Z(qvector<argloc_t> *__hidden this, argloc_t *x);
intmap_t *__cdecl ?push_back_?$qvector_Vintmap_t____QEAAAEAVintmap_t__XZ(qvector<intmap_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Vintmap_t____QEAAX$$QEAVintmap_t___Z(qvector<intmap_t> *__hidden this, intmap_t *x);
void __cdecl ?push_back_?$qvector_Vintmap_t____QEAAXAEBVintmap_t___Z(qvector<intmap_t> *__hidden this, intmap_t *x);
node_set_t *__cdecl ?push_back_?$qvector_Vnode_set_t____QEAAAEAVnode_set_t__XZ(qvector<node_set_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Vnode_set_t____QEAAX$$QEAVnode_set_t___Z(qvector<node_set_t> *__hidden this, node_set_t *x);
void __cdecl ?push_back_?$qvector_Vnode_set_t____QEAAXAEBVnode_set_t___Z(qvector<node_set_t> *__hidden this, node_set_t *x);
op_t *__cdecl ?push_back_?$qvector_Vop_t____QEAAAEAVop_t__XZ(qvector<op_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Vop_t____QEAAX$$QEAVop_t___Z(qvector<op_t> *__hidden this, op_t *x);
void __cdecl ?push_back_?$qvector_Vop_t____QEAAXAEBVop_t___Z(qvector<op_t> *__hidden this, op_t *x);
rangeset_t *__cdecl ?push_back_?$qvector_Vrangeset_t____QEAAAEAVrangeset_t__XZ(qvector<rangeset_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Vrangeset_t____QEAAX$$QEAVrangeset_t___Z(qvector<rangeset_t> *__hidden this, rangeset_t *x);
void __cdecl ?push_back_?$qvector_Vrangeset_t____QEAAXAEBVrangeset_t___Z(qvector<rangeset_t> *__hidden this, rangeset_t *x);
sync_source_t *__cdecl ?push_back_?$qvector_Vsync_source_t____QEAAAEAVsync_source_t__XZ(qvector<sync_source_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Vsync_source_t____QEAAX$$QEAVsync_source_t___Z(qvector<sync_source_t> *__hidden this, sync_source_t *x);
void __cdecl ?push_back_?$qvector_Vsync_source_t____QEAAXAEBVsync_source_t___Z(qvector<sync_source_t> *__hidden this, sync_source_t *x);
tinfo_t *__cdecl ?push_back_?$qvector_Vtinfo_t____QEAAAEAVtinfo_t__XZ(qvector<tinfo_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Vtinfo_t____QEAAX$$QEAVtinfo_t___Z(qvector<tinfo_t> *__hidden this, tinfo_t *x);
void __cdecl ?push_back_?$qvector_Vtinfo_t____QEAAXAEBVtinfo_t___Z(qvector<tinfo_t> *__hidden this, tinfo_t *x);
tryblk_t *__cdecl ?push_back_?$qvector_Vtryblk_t____QEAAAEAVtryblk_t__XZ(qvector<tryblk_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Vtryblk_t____QEAAX$$QEAVtryblk_t___Z(qvector<tryblk_t> *__hidden this, tryblk_t *x);
void __cdecl ?push_back_?$qvector_Vtryblk_t____QEAAXAEBVtryblk_t___Z(qvector<tryblk_t> *__hidden this, tryblk_t *x);
twinline_t *__cdecl ?push_back_?$qvector_Vtwinline_t____QEAAAEAVtwinline_t__XZ(qvector<twinline_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Vtwinline_t____QEAAX$$QEAVtwinline_t___Z(qvector<twinline_t> *__hidden this, twinline_t *x);
void __cdecl ?push_back_?$qvector_Vtwinline_t____QEAAXAEBVtwinline_t___Z(qvector<twinline_t> *__hidden this, twinline_t *x);
valstr_t *__cdecl ?push_back_?$qvector_Vvalstr_t____QEAAAEAVvalstr_t__XZ(qvector<valstr_t> *__hidden this);
void __cdecl ?push_back_?$qvector_Vvalstr_t____QEAAX$$QEAVvalstr_t___Z(qvector<valstr_t> *__hidden this, valstr_t *x);
void __cdecl ?push_back_?$qvector_Vvalstr_t____QEAAXAEBVvalstr_t___Z(qvector<valstr_t> *__hidden this, valstr_t *x);
movbpt_code_t *__cdecl ?push_back_?$qvector_W4movbpt_code_t____QEAAAEAW4movbpt_code_t__XZ(qvector<movbpt_code_t> *__hidden this);
void __cdecl ?push_back_?$qvector_W4movbpt_code_t____QEAAX$$QEAW4movbpt_code_t___Z(qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
void __cdecl ?push_back_?$qvector_W4movbpt_code_t____QEAAXAEBW4movbpt_code_t___Z(qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
__int64 *__cdecl ?push_back_?$qvector__J__QEAAAEA_JXZ(qvector<long long> *__hidden this);
void __cdecl ?push_back_?$qvector__J__QEAAX$$QEA_J_Z(qvector<long long> *__hidden this, __int64 *x);
void __cdecl ?push_back_?$qvector__J__QEAAXAEB_J_Z(qvector<long long> *__hidden this, __int64 *x);
unsigned __int64 *__cdecl ?push_back_?$qvector__K__QEAAAEA_KXZ(qvector<unsigned long long> *__hidden this);
void __cdecl ?push_back_?$qvector__K__QEAAX$$QEA_K_Z(qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
void __cdecl ?push_back_?$qvector__K__QEAAXAEB_K_Z(qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
bool *__cdecl ?push_back_?$qvector__N__QEAAAEA_NXZ(qvector<bool> *__hidden this);
void __cdecl ?push_back_?$qvector__N__QEAAX$$QEA_N_Z(qvector<bool> *__hidden this, bool *x);
void __cdecl ?push_back_?$qvector__N__QEAAXAEB_N_Z(qvector<bool> *__hidden this, bool *x);
__int16 *__cdecl ?push_back_?$qvector__W__QEAAAEA_WXZ(qvector<wchar_t> *__hidden this);
void __cdecl ?push_back_?$qvector__W__QEAAX$$QEA_W_Z(qvector<wchar_t> *__hidden this, __int16 *x);
void __cdecl ?push_back_?$qvector__W__QEAAXAEB_W_Z(qvector<wchar_t> *__hidden this, __int16 *x);
void __cdecl ?push_front_?$qlist_PEAVui_request_t____QEAAXAEBQEAVui_request_t___Z(qlist<ui_request_t *> *__hidden this, ui_request_t **x);
void __cdecl ?put_jobj_t__QEAAXPEBD0_Z(jobj_t *__hidden this, const char *key, const char *value);
void __cdecl ?put_jobj_t__QEAAXPEBDAEBV?$_qstring_D___Z(jobj_t *__hidden this, const char *key, const qstring *value);
void __cdecl ?put_jobj_t__QEAAXPEBDH_Z(jobj_t *__hidden this, const char *key, int value);
void __cdecl ?put_jobj_t__QEAAXPEBDPEAU1__Z(jobj_t *__hidden this, const char *key, jobj_t *value);
void __cdecl ?put_jobj_t__QEAAXPEBDPEAUjarr_t___Z(jobj_t *__hidden this, const char *key, jarr_t *value);
void __cdecl ?put_jobj_t__QEAAXPEBD_J_Z(jobj_t *__hidden this, const char *key, int64 value);
void __cdecl ?put_jobj_t__QEAAXPEBD_N_Z(jobj_t *__hidden this, const char *key, bool value);
void __cdecl ?qclear_?$_qstring_D__QEAAXXZ(_qstring<char> *__hidden this);
void __cdecl ?qclear_?$_qstring_E__QEAAXXZ(_qstring<unsigned char> *__hidden this);
void __cdecl ?qclear_?$_qstring__W__QEAAXXZ(_qstring<wchar_t> *__hidden this);
void __cdecl ?qclear_?$qvector_D__QEAAXXZ(qvector<char> *__hidden this);
void __cdecl ?qclear_?$qvector_E__QEAAXXZ(qvector<unsigned char> *__hidden this);
void __cdecl ?qclear_?$qvector_H__QEAAXXZ(qvector<int> *__hidden this);
void __cdecl ?qclear_?$qvector_I__QEAAXXZ(qvector<unsigned int> *__hidden this);
void __cdecl ?qclear_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAXXZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
void __cdecl ?qclear_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAXXZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
void __cdecl ?qclear_?$qvector_PEAUbpt_t____QEAAXXZ(qvector<bpt_t *> *__hidden this);
void __cdecl ?qclear_?$qvector_PEAUextlang_t____QEAAXXZ(qvector<extlang_t *> *__hidden this);
void __cdecl ?qclear_?$qvector_PEAUline_rendering_output_entry_t____QEAAXXZ(qvector<line_rendering_output_entry_t *> *__hidden this);
void __cdecl ?qclear_?$qvector_PEAVsnapshot_t____QEAAXXZ(qvector<snapshot_t *> *__hidden this);
void __cdecl ?qclear_?$qvector_PEBD__QEAAXXZ(qvector<const char *> *__hidden this);
void __cdecl ?qclear_?$qvector_PEBUbpt_t____QEAAXXZ(qvector<const bpt_t *> *__hidden this);
void __cdecl ?qclear_?$qvector_PEBVrangeset_t____QEAAXXZ(qvector<const rangeset_t *> *__hidden this);
void __cdecl ?qclear_?$qvector_PEBVtwinline_t____QEAAXXZ(qvector<const twinline_t *> *__hidden this);
void __cdecl ?qclear_?$qvector_Uargpart_t____QEAAXXZ(qvector<argpart_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ubpt_t____QEAAXXZ(qvector<bpt_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ubptaddrs_t____QEAAXXZ(qvector<bptaddrs_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ucall_stack_info_t____QEAAXXZ(qvector<call_stack_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ucatch_t____QEAAXXZ(qvector<catch_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ucfgopt_set_t____QEAAXXZ(qvector<cfgopt_set_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uchannel_redir_t____QEAAXXZ(qvector<channel_redir_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ucliopt_t____QEAAXXZ(qvector<cliopt_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ucompiled_binpat_t____QEAAXXZ(qvector<compiled_binpat_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Udebug_event_t____QEAAXXZ(qvector<debug_event_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Udirentry_t____QEAAXXZ(qvector<direntry_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Udirtree_cursor_t____QEAAXXZ(qvector<dirtree_cursor_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uea_name_t____QEAAXXZ(qvector<ea_name_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uedge_t____QEAAXXZ(qvector<edge_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uenum_member_t____QEAAXXZ(qvector<enum_member_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uexception_info_t____QEAAXXZ(qvector<exception_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ufixup_info_t____QEAAXXZ(qvector<fixup_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ufuncarg_t____QEAAXXZ(qvector<funcarg_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ugroup_crinfo_t____QEAAXXZ(qvector<group_crinfo_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uidc_global_t____QEAAXXZ(qvector<idc_global_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uidp_desc_t____QEAAXXZ(qvector<idp_desc_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uidp_name_t____QEAAXXZ(qvector<idp_name_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uioport_bit_t____QEAAXXZ(qvector<ioport_bit_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uioport_t____QEAAXXZ(qvector<ioport_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ujvalue_t____QEAAXXZ(qvector<jvalue_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ukvp_t____QEAAXXZ(qvector<kvp_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ulochist_entry_t____QEAAXXZ(qvector<lochist_entry_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ulowcnd_t____QEAAXXZ(qvector<lowcnd_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Umemory_info_t____QEAAXXZ(qvector<memory_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Umemreg_info_t____QEAAXXZ(qvector<memreg_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Umodinfo_t____QEAAXXZ(qvector<modinfo_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Umovbpt_info_t____QEAAXXZ(qvector<movbpt_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Upoint_t____QEAAXXZ(qvector<point_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uprocess_info_t____QEAAXXZ(qvector<process_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uqbasic_block_t____QEAAXXZ(qvector<qbasic_block_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Urange_t____QEAAXXZ(qvector<range_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Urect_t____QEAAXXZ(qvector<rect_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Urefinfo_desc_t____QEAAXXZ(qvector<refinfo_desc_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ureg_access_t____QEAAXXZ(qvector<reg_access_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ureg_info_t____QEAAXXZ(qvector<reg_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uregister_info_t____QEAAXXZ(qvector<register_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uregobj_t____QEAAXXZ(qvector<regobj_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uregval_t____QEAAXXZ(qvector<regval_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Urow_info_t____QEAAXXZ(qvector<row_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uscattered_segm_t____QEAAXXZ(qvector<scattered_segm_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Usegm_move_info_t____QEAAXXZ(qvector<segm_move_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uselection_item_t____QEAAXXZ(qvector<selection_item_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Usimd_info_t____QEAAXXZ(qvector<simd_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Usimpleline_t____QEAAXXZ(qvector<simpleline_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Ustkpnt_t____QEAAXXZ(qvector<stkpnt_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Utev_info_reg_t____QEAAXXZ(qvector<tev_info_reg_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Utev_info_t____QEAAXXZ(qvector<tev_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Utev_reg_value_t____QEAAXXZ(qvector<tev_reg_value_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uthread_name_t____QEAAXXZ(qvector<thread_name_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Utoken_t____QEAAXXZ(qvector<token_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Utype_attr_t____QEAAXXZ(qvector<type_attr_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uudt_member_t____QEAAXXZ(qvector<udt_member_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uupdate_bpt_info_t____QEAAXXZ(qvector<update_bpt_info_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Uxreflist_entry_t____QEAAXXZ(qvector<xreflist_entry_t> *__hidden this);
void __cdecl ?qclear_?$qvector_V?$_qstring_D____QEAAXXZ(qvector<_qstring<char>> *__hidden this);
void __cdecl ?qclear_?$qvector_V?$_qstring_E____QEAAXXZ(qvector<_qstring<unsigned char>> *__hidden this);
void __cdecl ?qclear_?$qvector_V?$_qstring__W____QEAAXXZ(qvector<_qstring<wchar_t>> *__hidden this);
void __cdecl ?qclear_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAXXZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
void __cdecl ?qclear_?$qvector_V?$qvector_H____QEAAXXZ(qvector<qvector<int>> *__hidden this);
void __cdecl ?qclear_?$qvector_V?$qvector_PEBD____QEAAXXZ(qvector<qvector<const char *>> *__hidden this);
void __cdecl ?qclear_?$qvector_V?$qvector_PEBVtwinline_t______QEAAXXZ(qvector<qvector<const twinline_t *>> *__hidden this);
void __cdecl ?qclear_?$qvector_V?$qvector__J____QEAAXXZ(qvector<qvector<long long>> *__hidden this);
void __cdecl ?qclear_?$qvector_Vargloc_t____QEAAXXZ(qvector<argloc_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Vintmap_t____QEAAXXZ(qvector<intmap_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Vnode_set_t____QEAAXXZ(qvector<node_set_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Vop_t____QEAAXXZ(qvector<op_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Vrangeset_t____QEAAXXZ(qvector<rangeset_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Vsync_source_t____QEAAXXZ(qvector<sync_source_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Vtinfo_t____QEAAXXZ(qvector<tinfo_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Vtryblk_t____QEAAXXZ(qvector<tryblk_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Vtwinline_t____QEAAXXZ(qvector<twinline_t> *__hidden this);
void __cdecl ?qclear_?$qvector_Vvalstr_t____QEAAXXZ(qvector<valstr_t> *__hidden this);
void __cdecl ?qclear_?$qvector_W4movbpt_code_t____QEAAXXZ(qvector<movbpt_code_t> *__hidden this);
void __cdecl ?qclear_?$qvector__J__QEAAXXZ(qvector<long long> *__hidden this);
void __cdecl ?qclear_?$qvector__K__QEAAXXZ(qvector<unsigned long long> *__hidden this);
void __cdecl ?qclear_?$qvector__N__QEAAXXZ(qvector<bool> *__hidden this);
void __cdecl ?qclear_?$qvector__W__QEAAXXZ(qvector<wchar_t> *__hidden this);
void __cdecl ?qclear_compiled_binpat_t__QEAAXXZ(compiled_binpat_t *__hidden this);
qstring *__cdecl ?qstr_idc_value_t__QEAAAEAV?$_qstring_D__XZ(idc_value_t *__hidden this);
const qstring *__cdecl ?qstr_idc_value_t__QEBAAEBV?$_qstring_D__XZ(const idc_value_t *__hidden this);
const qstring *__cdecl ?qstr_jvalue_t__QEBAAEBV?$_qstring_D__XZ(const jvalue_t *__hidden this);
int __cdecl ?qualifier_cfgopt_t__QEBAHXZ(const cfgopt_t *__hidden this);
char ?quiet_NaN_?$numeric_limits_C_std__SACXZ(void);
char ?quiet_NaN_?$numeric_limits_D_std__SADXZ(void);
unsigned __int8 ?quiet_NaN_?$numeric_limits_E_std__SAEXZ(void);
__int16 ?quiet_NaN_?$numeric_limits_F_std__SAFXZ(void);
unsigned __int16 ?quiet_NaN_?$numeric_limits_G_std__SAGXZ(void);
int ?quiet_NaN_?$numeric_limits_H_std__SAHXZ(void);
unsigned int ?quiet_NaN_?$numeric_limits_I_std__SAIXZ(void);
__int32 ?quiet_NaN_?$numeric_limits_J_std__SAJXZ(void);
unsigned __int32 ?quiet_NaN_?$numeric_limits_K_std__SAKXZ(void);
float ?quiet_NaN_?$numeric_limits_M_std__SAMXZ(void);
double ?quiet_NaN_?$numeric_limits_N_std__SANXZ(void);
long double ?quiet_NaN_?$numeric_limits_O_std__SAOXZ(void);
__int64 ?quiet_NaN_?$numeric_limits__J_std__SA_JXZ(void);
unsigned __int64 ?quiet_NaN_?$numeric_limits__K_std__SA_KXZ(void);
bool ?quiet_NaN_?$numeric_limits__N_std__SA_NXZ(void);
__int16 ?quiet_NaN_?$numeric_limits__S_std__SA_SXZ(void);
__int32 ?quiet_NaN_?$numeric_limits__U_std__SA_UXZ(void);
__int16 ?quiet_NaN_?$numeric_limits__W_std__SA_WXZ(void);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::reverse_iterator __cdecl ?rbegin_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_reverse_iterator __cdecl ?rbegin_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::reverse_iterator __cdecl ?rbegin_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_reverse_iterator __cdecl ?rbegin_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::reverse_iterator __cdecl ?rbegin_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_reverse_iterator __cdecl ?rbegin_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::reverse_iterator __cdecl ?rbegin_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_reverse_iterator __cdecl ?rbegin_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::reverse_iterator __cdecl ?rbegin_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___2_XZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_reverse_iterator __cdecl ?rbegin_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::basic_string<char>::reverse_iterator __cdecl ?rbegin_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA?AV?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___2_XZ(std::basic_string<char> *__hidden this);
std::basic_string<char>::const_reverse_iterator __cdecl ?rbegin_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___2_XZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::reverse_iterator __cdecl ?rbegin_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA?AV?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___2_XZ(std::basic_string<char16_t> *__hidden this);
std::basic_string<char16_t>::const_reverse_iterator __cdecl ?rbegin_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___2_XZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::reverse_iterator __cdecl ?rbegin_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA?AV?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___2_XZ(std::basic_string<char32_t> *__hidden this);
std::basic_string<char32_t>::const_reverse_iterator __cdecl ?rbegin_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___2_XZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::reverse_iterator __cdecl ?rbegin_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA?AV?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___2_XZ(std::basic_string<wchar_t> *__hidden this);
std::basic_string<wchar_t>::const_reverse_iterator __cdecl ?rbegin_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___2_XZ(const std::basic_string<wchar_t> *__hidden this);
qlist<ui_request_t *>::reverse_iterator __cdecl ?rbegin_?$qlist_PEAVui_request_t____QEAA?AVreverse_iterator_1_XZ(qlist<ui_request_t *> *__hidden this);
qlist<ui_request_t *>::const_reverse_iterator __cdecl ?rbegin_?$qlist_PEAVui_request_t____QEBA?AVconst_reverse_iterator_1_XZ(const qlist<ui_request_t *> *__hidden this);
ssize_t __cdecl ?read_generic_linput_t__UEAA_J_JPEAX_K_Z(generic_linput_t *__hidden this, int64 off, void *buffer, size_t nbytes);
ssize_t __cdecl ?read_linput_buffer_t__QEAA_JPEAX_K_Z(linput_buffer_t *__hidden this, void *buf, size_t n);
ssize_t __cdecl ?read_memory_deserializer_t__QEAA_JPEAX_K_Z(memory_deserializer_t *__hidden this, void *obj, size_t objsize);
uint64 __cdecl ?read_bitfield_value_tinfo_t__QEBA_K_KH_Z(const tinfo_t *__hidden this, uint64 v, int bitoff);
ssize_t __cdecl ?read_file_debugger_t__QEAA_JH_JPEAX_KPEAV?$_qstring_D___Z(debugger_t *__hidden this, int fn, int64 off, void *buf, size_t size, qstring *errbuf);
bool __cdecl ?read_file_source_file_t__UEAA_NPEAV?$qvector_Usimpleline_t____PEAV?$_qstring_D___Z(source_file_t *__hidden this, strvec_t *buf, qstring *errbuf);
drc_t __cdecl ?read_memory_debugger_t__QEAA?AW4drc_t__PEA_K_KPEAX1PEAV?$_qstring_D___Z(debugger_t *__hidden this, size_t *nbytes, ea_t ea, void *buffer, size_t size, qstring *errbuf);
drc_t __cdecl ?read_registers_debugger_t__QEAA?AW4drc_t__HHPEAUregval_t__PEAV?$_qstring_D___Z(debugger_t *__hidden this, thid_t tid, int clsmask, regval_t *values, qstring *errbuf);
fpvalue_error_t __cdecl ?realcvt_processor_t__SA?AW4fpvalue_error_t__PEAXPEAUfpvalue_t__G_Z(void *m, fpvalue_t *e, uint16 swt);
locchange_reason_t __cdecl ?reason_locchange_md_t__QEBA?AW4locchange_reason_t__XZ(const locchange_md_t *__hidden this);
bool __cdecl ?rebase_enumplace_t__UEAA_NAEBUsegm_move_infos_t___Z(enumplace_t *__hidden this, const segm_move_infos_t *infos);
bool __cdecl ?rebase_hexplace_t__UEAA_NAEBUsegm_move_infos_t___Z(hexplace_t *__hidden this, const segm_move_infos_t *infos);
bool __cdecl ?rebase_idaplace_t__UEAA_NAEBUsegm_move_infos_t___Z(idaplace_t *__hidden this, const segm_move_infos_t *infos);
bool __cdecl ?rebase_place_t__UEAA_NAEBUsegm_move_infos_t___Z(place_t *__hidden this, const segm_move_infos_t *);
bool __cdecl ?rebase_simpleline_place_t__UEAA_NAEBUsegm_move_infos_t___Z(simpleline_place_t *__hidden this, const segm_move_infos_t *infos);
bool __cdecl ?rebase_structplace_t__UEAA_NAEBUsegm_move_infos_t___Z(structplace_t *__hidden this, const segm_move_infos_t *infos);
void __cdecl ?rebase_if_required_to_debugger_t__QEAAX_K_Z(debugger_t *__hidden this, ea_t new_base);
void __cdecl ?recalc_edge_widths_abstract_graph_t__IEAAXAEBUedgeset_t__AEBUedge_infos_t___Z(abstract_graph_t *__hidden this, const edgeset_t *back_edges, const edge_infos_t *self_edges);
bool __cdecl ?redo_layout_mutable_graph_t__UEAA_NXZ(mutable_graph_t *__hidden this);
bool __cdecl ?ref_within_range_?$qvector_D__AEBA_NAEBD_Z(const qvector<char> *__hidden this, char *x);
bool __cdecl ?ref_within_range_?$qvector_E__AEBA_NAEBE_Z(const qvector<unsigned char> *__hidden this, unsigned __int8 *x);
bool __cdecl ?ref_within_range_?$qvector_H__AEBA_NAEBH_Z(const qvector<int> *__hidden this, int *x);
bool __cdecl ?ref_within_range_?$qvector_I__AEBA_NAEBI_Z(const qvector<unsigned int> *__hidden this, unsigned int *x);
bool __cdecl ?ref_within_range_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__AEBA_NAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
bool __cdecl ?ref_within_range_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__AEBA_NAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
bool __cdecl ?ref_within_range_?$qvector_PEAUbpt_t____AEBA_NAEBQEAUbpt_t___Z(const qvector<bpt_t *> *__hidden this, bpt_t **x);
bool __cdecl ?ref_within_range_?$qvector_PEAUextlang_t____AEBA_NAEBQEAUextlang_t___Z(const qvector<extlang_t *> *__hidden this, extlang_t **x);
bool __cdecl ?ref_within_range_?$qvector_PEAUline_rendering_output_entry_t____AEBA_NAEBQEAUline_rendering_output_entry_t___Z(const qvector<line_rendering_output_entry_t *> *__hidden this, line_rendering_output_entry_t **x);
bool __cdecl ?ref_within_range_?$qvector_PEAVsnapshot_t____AEBA_NAEBQEAVsnapshot_t___Z(const qvector<snapshot_t *> *__hidden this, snapshot_t **x);
bool __cdecl ?ref_within_range_?$qvector_PEBD__AEBA_NAEBQEBD_Z(const qvector<const char *> *__hidden this, const char **x);
bool __cdecl ?ref_within_range_?$qvector_PEBUbpt_t____AEBA_NAEBQEBUbpt_t___Z(const qvector<const bpt_t *> *__hidden this, const bpt_t **x);
bool __cdecl ?ref_within_range_?$qvector_PEBVrangeset_t____AEBA_NAEBQEBVrangeset_t___Z(const qvector<const rangeset_t *> *__hidden this, const rangeset_t **x);
bool __cdecl ?ref_within_range_?$qvector_PEBVtwinline_t____AEBA_NAEBQEBVtwinline_t___Z(const qvector<const twinline_t *> *__hidden this, const twinline_t **x);
bool __cdecl ?ref_within_range_?$qvector_Uargpart_t____AEBA_NAEBUargpart_t___Z(const qvector<argpart_t> *__hidden this, argpart_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ubpt_t____AEBA_NAEBUbpt_t___Z(const qvector<bpt_t> *__hidden this, bpt_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ubptaddrs_t____AEBA_NAEBUbptaddrs_t___Z(const qvector<bptaddrs_t> *__hidden this, bptaddrs_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ucall_stack_info_t____AEBA_NAEBUcall_stack_info_t___Z(const qvector<call_stack_info_t> *__hidden this, call_stack_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ucatch_t____AEBA_NAEBUcatch_t___Z(const qvector<catch_t> *__hidden this, catch_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ucfgopt_set_t____AEBA_NAEBUcfgopt_set_t___Z(const qvector<cfgopt_set_t> *__hidden this, cfgopt_set_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uchannel_redir_t____AEBA_NAEBUchannel_redir_t___Z(const qvector<channel_redir_t> *__hidden this, channel_redir_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ucliopt_t____AEBA_NAEBUcliopt_t___Z(const qvector<cliopt_t> *__hidden this, cliopt_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ucompiled_binpat_t____AEBA_NAEBUcompiled_binpat_t___Z(const qvector<compiled_binpat_t> *__hidden this, compiled_binpat_t *x);
bool __cdecl ?ref_within_range_?$qvector_Udebug_event_t____AEBA_NAEBUdebug_event_t___Z(const qvector<debug_event_t> *__hidden this, debug_event_t *x);
bool __cdecl ?ref_within_range_?$qvector_Udirentry_t____AEBA_NAEBUdirentry_t___Z(const qvector<direntry_t> *__hidden this, direntry_t *x);
bool __cdecl ?ref_within_range_?$qvector_Udirtree_cursor_t____AEBA_NAEBUdirtree_cursor_t___Z(const qvector<dirtree_cursor_t> *__hidden this, dirtree_cursor_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uea_name_t____AEBA_NAEBUea_name_t___Z(const qvector<ea_name_t> *__hidden this, ea_name_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uedge_t____AEBA_NAEBUedge_t___Z(const qvector<edge_t> *__hidden this, edge_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uenum_member_t____AEBA_NAEBUenum_member_t___Z(const qvector<enum_member_t> *__hidden this, enum_member_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uexception_info_t____AEBA_NAEBUexception_info_t___Z(const qvector<exception_info_t> *__hidden this, exception_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ufixup_info_t____AEBA_NAEBUfixup_info_t___Z(const qvector<fixup_info_t> *__hidden this, fixup_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ufuncarg_t____AEBA_NAEBUfuncarg_t___Z(const qvector<funcarg_t> *__hidden this, funcarg_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ugroup_crinfo_t____AEBA_NAEBUgroup_crinfo_t___Z(const qvector<group_crinfo_t> *__hidden this, group_crinfo_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uidc_global_t____AEBA_NAEBUidc_global_t___Z(const qvector<idc_global_t> *__hidden this, idc_global_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uidp_desc_t____AEBA_NAEBUidp_desc_t___Z(const qvector<idp_desc_t> *__hidden this, idp_desc_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uidp_name_t____AEBA_NAEBUidp_name_t___Z(const qvector<idp_name_t> *__hidden this, idp_name_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uioport_bit_t____AEBA_NAEBUioport_bit_t___Z(const qvector<ioport_bit_t> *__hidden this, ioport_bit_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uioport_t____AEBA_NAEBUioport_t___Z(const qvector<ioport_t> *__hidden this, ioport_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ujvalue_t____AEBA_NAEBUjvalue_t___Z(const qvector<jvalue_t> *__hidden this, jvalue_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____AEBA_NAEBUkeywords_style_t_ida_syntax_highlighter_t___Z(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, ida_syntax_highlighter_t::keywords_style_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ukvp_t____AEBA_NAEBUkvp_t___Z(const qvector<kvp_t> *__hidden this, kvp_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ulochist_entry_t____AEBA_NAEBUlochist_entry_t___Z(const qvector<lochist_entry_t> *__hidden this, lochist_entry_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ulowcnd_t____AEBA_NAEBUlowcnd_t___Z(const qvector<lowcnd_t> *__hidden this, lowcnd_t *x);
bool __cdecl ?ref_within_range_?$qvector_Umemory_info_t____AEBA_NAEBUmemory_info_t___Z(const qvector<memory_info_t> *__hidden this, memory_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Umemreg_info_t____AEBA_NAEBUmemreg_info_t___Z(const qvector<memreg_info_t> *__hidden this, memreg_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Umodinfo_t____AEBA_NAEBUmodinfo_t___Z(const qvector<modinfo_t> *__hidden this, modinfo_t *x);
bool __cdecl ?ref_within_range_?$qvector_Umovbpt_info_t____AEBA_NAEBUmovbpt_info_t___Z(const qvector<movbpt_info_t> *__hidden this, movbpt_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____AEBA_NAEBUmulticmt_t_ida_syntax_highlighter_t___Z(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, ida_syntax_highlighter_t::multicmt_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____AEBA_NAEBUplain_char_ptr_t_ida_syntax_highlighter_t___Z(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, ida_syntax_highlighter_t::plain_char_ptr_t *x);
bool __cdecl ?ref_within_range_?$qvector_Upoint_t____AEBA_NAEBUpoint_t___Z(const qvector<point_t> *__hidden this, point_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uprocess_info_t____AEBA_NAEBUprocess_info_t___Z(const qvector<process_info_t> *__hidden this, process_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uqbasic_block_t____AEBA_NAEBUqbasic_block_t___Z(const qvector<qbasic_block_t> *__hidden this, qbasic_block_t *x);
bool __cdecl ?ref_within_range_?$qvector_Urange_t____AEBA_NAEBUrange_t___Z(const qvector<range_t> *__hidden this, range_t *x);
bool __cdecl ?ref_within_range_?$qvector_Urect_t____AEBA_NAEBUrect_t___Z(const qvector<rect_t> *__hidden this, rect_t *x);
bool __cdecl ?ref_within_range_?$qvector_Urefinfo_desc_t____AEBA_NAEBUrefinfo_desc_t___Z(const qvector<refinfo_desc_t> *__hidden this, refinfo_desc_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ureg_access_t____AEBA_NAEBUreg_access_t___Z(const qvector<reg_access_t> *__hidden this, reg_access_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ureg_info_t____AEBA_NAEBUreg_info_t___Z(const qvector<reg_info_t> *__hidden this, reg_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uregister_info_t____AEBA_NAEBUregister_info_t___Z(const qvector<register_info_t> *__hidden this, register_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uregobj_t____AEBA_NAEBUregobj_t___Z(const qvector<regobj_t> *__hidden this, regobj_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uregval_t____AEBA_NAEBUregval_t___Z(const qvector<regval_t> *__hidden this, regval_t *x);
bool __cdecl ?ref_within_range_?$qvector_Urow_info_t____AEBA_NAEBUrow_info_t___Z(const qvector<row_info_t> *__hidden this, row_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uscattered_segm_t____AEBA_NAEBUscattered_segm_t___Z(const qvector<scattered_segm_t> *__hidden this, scattered_segm_t *x);
bool __cdecl ?ref_within_range_?$qvector_Usegm_move_info_t____AEBA_NAEBUsegm_move_info_t___Z(const qvector<segm_move_info_t> *__hidden this, segm_move_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uselection_item_t____AEBA_NAEBUselection_item_t___Z(const qvector<selection_item_t> *__hidden this, selection_item_t *x);
bool __cdecl ?ref_within_range_?$qvector_Usimd_info_t____AEBA_NAEBUsimd_info_t___Z(const qvector<simd_info_t> *__hidden this, simd_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Usimpleline_t____AEBA_NAEBUsimpleline_t___Z(const qvector<simpleline_t> *__hidden this, simpleline_t *x);
bool __cdecl ?ref_within_range_?$qvector_Ustkpnt_t____AEBA_NAEBUstkpnt_t___Z(const qvector<stkpnt_t> *__hidden this, stkpnt_t *x);
bool __cdecl ?ref_within_range_?$qvector_Utev_info_reg_t____AEBA_NAEBUtev_info_reg_t___Z(const qvector<tev_info_reg_t> *__hidden this, tev_info_reg_t *x);
bool __cdecl ?ref_within_range_?$qvector_Utev_info_t____AEBA_NAEBUtev_info_t___Z(const qvector<tev_info_t> *__hidden this, tev_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Utev_reg_value_t____AEBA_NAEBUtev_reg_value_t___Z(const qvector<tev_reg_value_t> *__hidden this, tev_reg_value_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uthread_name_t____AEBA_NAEBUthread_name_t___Z(const qvector<thread_name_t> *__hidden this, thread_name_t *x);
bool __cdecl ?ref_within_range_?$qvector_Utoken_t____AEBA_NAEBUtoken_t___Z(const qvector<token_t> *__hidden this, token_t *x);
bool __cdecl ?ref_within_range_?$qvector_Utype_attr_t____AEBA_NAEBUtype_attr_t___Z(const qvector<type_attr_t> *__hidden this, type_attr_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uudt_member_t____AEBA_NAEBUudt_member_t___Z(const qvector<udt_member_t> *__hidden this, udt_member_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uupdate_bpt_info_t____AEBA_NAEBUupdate_bpt_info_t___Z(const qvector<update_bpt_info_t> *__hidden this, update_bpt_info_t *x);
bool __cdecl ?ref_within_range_?$qvector_Uxreflist_entry_t____AEBA_NAEBUxreflist_entry_t___Z(const qvector<xreflist_entry_t> *__hidden this, xreflist_entry_t *x);
bool __cdecl ?ref_within_range_?$qvector_V?$_qstring_D____AEBA_NAEBV?$_qstring_D___Z(const qvector<_qstring<char>> *__hidden this, _qstring<char> *x);
bool __cdecl ?ref_within_range_?$qvector_V?$_qstring_E____AEBA_NAEBV?$_qstring_E___Z(const qvector<_qstring<unsigned char>> *__hidden this, _qstring<unsigned char> *x);
bool __cdecl ?ref_within_range_?$qvector_V?$_qstring__W____AEBA_NAEBV?$_qstring__W___Z(const qvector<_qstring<wchar_t>> *__hidden this, _qstring<wchar_t> *x);
bool __cdecl ?ref_within_range_?$qvector_V?$qrefcnt_t_Vsource_item_t______AEBA_NAEBV?$qrefcnt_t_Vsource_item_t_____Z(const qvector<qrefcnt_t<source_item_t>> *__hidden this, qrefcnt_t<source_item_t> *x);
bool __cdecl ?ref_within_range_?$qvector_V?$qvector_H____AEBA_NAEBV?$qvector_H___Z(const qvector<qvector<int>> *__hidden this, qvector<int> *x);
bool __cdecl ?ref_within_range_?$qvector_V?$qvector_PEBD____AEBA_NAEBV?$qvector_PEBD___Z(const qvector<qvector<const char *>> *__hidden this, qvector<const char *> *x);
bool __cdecl ?ref_within_range_?$qvector_V?$qvector_PEBVtwinline_t______AEBA_NAEBV?$qvector_PEBVtwinline_t_____Z(const qvector<qvector<const twinline_t *>> *__hidden this, qvector<const twinline_t *> *x);
bool __cdecl ?ref_within_range_?$qvector_V?$qvector__J____AEBA_NAEBV?$qvector__J___Z(const qvector<qvector<long long>> *__hidden this, qvector<long long> *x);
bool __cdecl ?ref_within_range_?$qvector_Vargloc_t____AEBA_NAEBVargloc_t___Z(const qvector<argloc_t> *__hidden this, argloc_t *x);
bool __cdecl ?ref_within_range_?$qvector_Vintmap_t____AEBA_NAEBVintmap_t___Z(const qvector<intmap_t> *__hidden this, intmap_t *x);
bool __cdecl ?ref_within_range_?$qvector_Vnode_set_t____AEBA_NAEBVnode_set_t___Z(const qvector<node_set_t> *__hidden this, node_set_t *x);
bool __cdecl ?ref_within_range_?$qvector_Vop_t____AEBA_NAEBVop_t___Z(const qvector<op_t> *__hidden this, op_t *x);
bool __cdecl ?ref_within_range_?$qvector_Vrangeset_t____AEBA_NAEBVrangeset_t___Z(const qvector<rangeset_t> *__hidden this, rangeset_t *x);
bool __cdecl ?ref_within_range_?$qvector_Vsync_source_t____AEBA_NAEBVsync_source_t___Z(const qvector<sync_source_t> *__hidden this, sync_source_t *x);
bool __cdecl ?ref_within_range_?$qvector_Vtinfo_t____AEBA_NAEBVtinfo_t___Z(const qvector<tinfo_t> *__hidden this, tinfo_t *x);
bool __cdecl ?ref_within_range_?$qvector_Vtryblk_t____AEBA_NAEBVtryblk_t___Z(const qvector<tryblk_t> *__hidden this, tryblk_t *x);
bool __cdecl ?ref_within_range_?$qvector_Vtwinline_t____AEBA_NAEBVtwinline_t___Z(const qvector<twinline_t> *__hidden this, twinline_t *x);
bool __cdecl ?ref_within_range_?$qvector_Vvalstr_t____AEBA_NAEBVvalstr_t___Z(const qvector<valstr_t> *__hidden this, valstr_t *x);
bool __cdecl ?ref_within_range_?$qvector_W4movbpt_code_t____AEBA_NAEBW4movbpt_code_t___Z(const qvector<movbpt_code_t> *__hidden this, movbpt_code_t *x);
bool __cdecl ?ref_within_range_?$qvector__J__AEBA_NAEB_J_Z(const qvector<long long> *__hidden this, __int64 *x);
bool __cdecl ?ref_within_range_?$qvector__K__AEBA_NAEB_K_Z(const qvector<unsigned long long> *__hidden this, unsigned __int64 *x);
bool __cdecl ?ref_within_range_?$qvector__N__AEBA_NAEB_N_Z(const qvector<bool> *__hidden this, bool *x);
bool __cdecl ?ref_within_range_?$qvector__W__AEBA_NAEB_W_Z(const qvector<wchar_t> *__hidden this, __int16 *x);
chooser_base_t::cbres_t __cdecl ?refresh_chooser_multi_t__UEAA?AW4cbres_t_chooser_base_t__PEAV?$qvector__K___Z(chooser_multi_t *__hidden this, sizevec_t *);
chooser_t::cbret_t __cdecl ?refresh_chooser_t__UEAA?AUcbret_t_1__J_Z(chooser_t *__hidden this, ssize_t n);
bool __cdecl ?refresh_mutable_graph_t__UEAA_NXZ(mutable_graph_t *__hidden this);
void __cdecl ?refresh_qflow_chart_t__QEAAXXZ(qflow_chart_t *__hidden this);
void __cdecl ?refresh_field_form_actions_t__UEAAXH_Z(form_actions_t *__hidden this, int field_id);
int __cdecl ?reg1_argloc_t__QEBAHXZ(const argloc_t *__hidden this);
int __cdecl ?reg2_argloc_t__QEBAHXZ(const argloc_t *__hidden this);
const char **__cdecl ?regclasses_dynamic_register_set_t__QEAAPEAPEBDXZ(dynamic_register_set_t *__hidden this);
int __cdecl ?regcount_callregs_t__SAHE_Z(cm_t cc);
bool __cdecl ?reginds_callregs_t__QEBA_NPEAH0H_Z(const callregs_t *__hidden this, int *gp_ind, int *fp_ind, int r);
register_info_t *__cdecl ?registers_dynamic_register_set_t__QEAAPEAUregister_info_t__XZ(dynamic_register_set_t *__hidden this);
int __cdecl ?regoff_argloc_t__QEBAHXZ(const argloc_t *__hidden this);
register_info_t *__cdecl ?regs_debugger_t__QEAAAEAUregister_info_t__H_Z(debugger_t *__hidden this, int idx);
void __cdecl ?reinit_graph_node_visitor_t__QEAAXXZ(graph_node_visitor_t *__hidden this);
void __cdecl ?release_extlang_t__QEAAXXZ(extlang_t *__hidden this);
void __cdecl ?release_qrefcnt_obj_t__UEAAXXZ(qrefcnt_obj_t *__hidden this);
void __cdecl ?release_refcnted_regex_t__UEAAXXZ(refcnted_regex_t *__hidden this);
void __cdecl ?release_source_file_t__UEAAXXZ(source_file_t *__hidden this);
void __cdecl ?release_source_item_t__UEAAXXZ(source_item_t *__hidden this);
bool __cdecl ?relocate_relobj_t__QEAA_N_K_N_Z(relobj_t *__hidden this, ea_t ea, bool mf);
_qstring<char> *__cdecl ?remove_?$_qstring_D__QEAAAEAV1__K0_Z(_qstring<char> *__hidden this, size_t idx, size_t cnt);
_qstring<unsigned char> *__cdecl ?remove_?$_qstring_E__QEAAAEAV1__K0_Z(_qstring<unsigned char> *__hidden this, size_t idx, size_t cnt);
_qstring<wchar_t> *__cdecl ?remove_?$_qstring__W__QEAAAEAV1__K0_Z(_qstring<wchar_t> *__hidden this, size_t idx, size_t cnt);
void __cdecl ?remove_last_?$_qstring_D__QEAAXH_Z(_qstring<char> *__hidden this, int cnt);
void __cdecl ?remove_last_?$_qstring_E__QEAAXH_Z(_qstring<unsigned char> *__hidden this, int cnt);
void __cdecl ?remove_last_?$_qstring__W__QEAAXH_Z(_qstring<wchar_t> *__hidden this, int cnt);
bool __cdecl ?remove_ptr_or_array_tinfo_t__QEAA_NXZ(tinfo_t *__hidden this);
size_t __cdecl ?remove_reachable_abstract_graph_t__AEBA_KHPEAVnode_set_t___Z(const abstract_graph_t *__hidden this, int n, node_set_t *s);
dterr_t __cdecl ?rename_dirtree_t__QEAA?AW4dterr_t__PEBD0_Z(dirtree_t *__hidden this, const char *from, const char *to);
bool __cdecl ?rename_netnode__QEAA_NPEBD_K_Z(netnode *__hidden this, const char *newname, size_t namlen);
ssize_t __cdecl ?rename_processor_t__SA_J_KPEBDH_Z(ea_t ea, const char *new_name, int flags);
bool __cdecl ?rename_inode_dirspec_t__UEAA_N_KPEBD_Z(dirspec_t *__hidden this, inode_t inode, const char *newname);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::reverse_iterator __cdecl ?rend_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_reverse_iterator __cdecl ?rend_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::reverse_iterator __cdecl ?rend_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_reverse_iterator __cdecl ?rend_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::reverse_iterator __cdecl ?rend_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_reverse_iterator __cdecl ?rend_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::reverse_iterator __cdecl ?rend_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$reverse_iterator_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___2_XZ(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_reverse_iterator __cdecl ?rend_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std___2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::reverse_iterator __cdecl ?rend_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___2_XZ(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_reverse_iterator __cdecl ?rend_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$reverse_iterator_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std___2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
std::basic_string<char>::reverse_iterator __cdecl ?rend_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAA?AV?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___2_XZ(std::basic_string<char> *__hidden this);
std::basic_string<char>::const_reverse_iterator __cdecl ?rend_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___std___2_XZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::reverse_iterator __cdecl ?rend_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAA?AV?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___2_XZ(std::basic_string<char16_t> *__hidden this);
std::basic_string<char16_t>::const_reverse_iterator __cdecl ?rend_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___std___2_XZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::reverse_iterator __cdecl ?rend_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAA?AV?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___2_XZ(std::basic_string<char32_t> *__hidden this);
std::basic_string<char32_t>::const_reverse_iterator __cdecl ?rend_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___std___2_XZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::reverse_iterator __cdecl ?rend_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAA?AV?$reverse_iterator_V?$_String_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___2_XZ(std::basic_string<wchar_t> *__hidden this);
std::basic_string<wchar_t>::const_reverse_iterator __cdecl ?rend_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA?AV?$reverse_iterator_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___std___2_XZ(const std::basic_string<wchar_t> *__hidden this);
qlist<ui_request_t *>::reverse_iterator __cdecl ?rend_?$qlist_PEAVui_request_t____QEAA?AVreverse_iterator_1_XZ(qlist<ui_request_t *> *__hidden this);
qlist<ui_request_t *>::const_reverse_iterator __cdecl ?rend_?$qlist_PEAVui_request_t____QEBA?AVconst_reverse_iterator_1_XZ(const qlist<ui_request_t *> *__hidden this);
renderer_info_t *__cdecl ?renderer_info_lochist_entry_t__QEAAAEAUrenderer_info_t__XZ(lochist_entry_t *__hidden this);
const renderer_info_t *__cdecl ?renderer_info_lochist_entry_t__QEBAAEBUrenderer_info_t__XZ(const lochist_entry_t *__hidden this);
bool __cdecl ?replace_?$_qstring_D__QEAA_NPEBD0_Z(_qstring<char> *__hidden this, char *what, char *with);
bool __cdecl ?replace_?$_qstring_E__QEAA_NPEBE0_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 *what, unsigned __int8 *with);
bool __cdecl ?replace_?$_qstring__W__QEAA_NPEB_W0_Z(_qstring<wchar_t> *__hidden this, __int16 *what, __int16 *with);
std::basic_string<char> *__cdecl ?replace_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_0AEBV12__Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::const_iterator _First, const std::basic_string<char>::const_iterator _Last, const std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ?replace_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_0QEBD_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::const_iterator _First, const std::basic_string<char>::const_iterator _Last, char *const _Ptr);
std::basic_string<char> *__cdecl ?replace_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_0QEBD_K_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::const_iterator _First, const std::basic_string<char>::const_iterator _Last, char *const _Ptr, const std::basic_string<char>::size_type _Count);
std::basic_string<char> *__cdecl ?replace_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_0V?$initializer_list_D_2__Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::const_iterator _First, const std::basic_string<char>::const_iterator _Last, const std::initializer_list<char> _Ilist);
std::basic_string<char> *__cdecl ?replace_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types_D_std___std___2_0_KD_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::const_iterator _First, const std::basic_string<char>::const_iterator _Last, const std::basic_string<char>::size_type _Count, char _Ch);
std::basic_string<char> *__cdecl ?replace_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__K0AEBV12__Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Nx, const std::basic_string<char> *_Right);
std::basic_string<char> *__cdecl ?replace_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__K0QEBD_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Nx, char *const _Ptr);
std::basic_string<char> *__cdecl ?replace_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__K_K0D_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, std::basic_string<char>::size_type _Nx, const std::basic_string<char>::size_type _Count, char _Ch);
std::basic_string<char> *__cdecl ?replace_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__K_KAEBV12_01_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, std::basic_string<char>::size_type _Nx, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Roff, std::basic_string<char>::size_type _Count);
std::basic_string<char> *__cdecl ?replace_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAAEAV12__K_KQEBD0_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, std::basic_string<char>::size_type _Nx, char *const _Ptr, const std::basic_string<char>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?replace_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_0AEBV12__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::const_iterator _First, const std::basic_string<char16_t>::const_iterator _Last, const std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ?replace_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_0QEB_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::const_iterator _First, const std::basic_string<char16_t>::const_iterator _Last, __int16 *const _Ptr);
std::basic_string<char16_t> *__cdecl ?replace_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_0QEB_S_K_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::const_iterator _First, const std::basic_string<char16_t>::const_iterator _Last, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?replace_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_0V?$initializer_list__S_2__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::const_iterator _First, const std::basic_string<char16_t>::const_iterator _Last, const std::initializer_list<char16_t> _Ilist);
std::basic_string<char16_t> *__cdecl ?replace_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__S_std___std___2_0_K_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::const_iterator _First, const std::basic_string<char16_t>::const_iterator _Last, const std::basic_string<char16_t>::size_type _Count, __int16 _Ch);
std::basic_string<char16_t> *__cdecl ?replace_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__K0AEBV12__Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Nx, const std::basic_string<char16_t> *_Right);
std::basic_string<char16_t> *__cdecl ?replace_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__K0QEB_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Nx, __int16 *const _Ptr);
std::basic_string<char16_t> *__cdecl ?replace_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__K_K0_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, std::basic_string<char16_t>::size_type _Nx, const std::basic_string<char16_t>::size_type _Count, __int16 _Ch);
std::basic_string<char16_t> *__cdecl ?replace_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__K_KAEBV12_01_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, std::basic_string<char16_t>::size_type _Nx, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Roff, std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t> *__cdecl ?replace_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAAEAV12__K_KQEB_S0_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, std::basic_string<char16_t>::size_type _Nx, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?replace_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_0AEBV12__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::const_iterator _First, const std::basic_string<char32_t>::const_iterator _Last, const std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ?replace_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_0QEB_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::const_iterator _First, const std::basic_string<char32_t>::const_iterator _Last, __int32 *const _Ptr);
std::basic_string<char32_t> *__cdecl ?replace_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_0QEB_U_K_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::const_iterator _First, const std::basic_string<char32_t>::const_iterator _Last, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?replace_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_0V?$initializer_list__U_2__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::const_iterator _First, const std::basic_string<char32_t>::const_iterator _Last, const std::initializer_list<char32_t> _Ilist);
std::basic_string<char32_t> *__cdecl ?replace_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__U_std___std___2_0_K_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::const_iterator _First, const std::basic_string<char32_t>::const_iterator _Last, const std::basic_string<char32_t>::size_type _Count, __int32 _Ch);
std::basic_string<char32_t> *__cdecl ?replace_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__K0AEBV12__Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Nx, const std::basic_string<char32_t> *_Right);
std::basic_string<char32_t> *__cdecl ?replace_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__K0QEB_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Nx, __int32 *const _Ptr);
std::basic_string<char32_t> *__cdecl ?replace_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__K_K0_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, std::basic_string<char32_t>::size_type _Nx, const std::basic_string<char32_t>::size_type _Count, __int32 _Ch);
std::basic_string<char32_t> *__cdecl ?replace_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__K_KAEBV12_01_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, std::basic_string<char32_t>::size_type _Nx, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Roff, std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t> *__cdecl ?replace_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAAEAV12__K_KQEB_U0_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, std::basic_string<char32_t>::size_type _Nx, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?replace_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_0AEBV12__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::const_iterator _First, const std::basic_string<wchar_t>::const_iterator _Last, const std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ?replace_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_0QEB_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::const_iterator _First, const std::basic_string<wchar_t>::const_iterator _Last, __int16 *const _Ptr);
std::basic_string<wchar_t> *__cdecl ?replace_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_0QEB_W_K_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::const_iterator _First, const std::basic_string<wchar_t>::const_iterator _Last, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?replace_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_0V?$initializer_list__W_2__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::const_iterator _First, const std::basic_string<wchar_t>::const_iterator _Last, const std::initializer_list<wchar_t> _Ilist);
std::basic_string<wchar_t> *__cdecl ?replace_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12_V?$_String_const_iterator_V?$_String_val_U?$_Simple_types__W_std___std___2_0_K_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::const_iterator _First, const std::basic_string<wchar_t>::const_iterator _Last, const std::basic_string<wchar_t>::size_type _Count, __int16 _Ch);
std::basic_string<wchar_t> *__cdecl ?replace_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__K0AEBV12__Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Nx, const std::basic_string<wchar_t> *_Right);
std::basic_string<wchar_t> *__cdecl ?replace_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__K0QEB_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Nx, __int16 *const _Ptr);
std::basic_string<wchar_t> *__cdecl ?replace_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__K_K0_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, std::basic_string<wchar_t>::size_type _Nx, const std::basic_string<wchar_t>::size_type _Count, __int16 _Ch);
std::basic_string<wchar_t> *__cdecl ?replace_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__K_KAEBV12_01_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, std::basic_string<wchar_t>::size_type _Nx, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Roff, std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t> *__cdecl ?replace_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAAEAV12__K_KQEB_W0_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, std::basic_string<wchar_t>::size_type _Nx, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Count);
bool __cdecl ?replace_edge_mutable_graph_t__UEAA_NHHHH_Z(mutable_graph_t *__hidden this, int i, int j, int x, int y);
drc_t __cdecl ?request_pause_debugger_t__QEAA?AW4drc_t__PEAV?$_qstring_D___Z(debugger_t *__hidden this, qstring *errbuf);
bool __cdecl ?requires_binary_mode_encoder_t__UEBA_NXZ(const encoder_t *__hidden this);
bool __cdecl ?requires_qualifier_tinfo_t__QEBA_NPEAV?$_qstring_D__PEBD_K_Z(const tinfo_t *__hidden this, qstring *out, const char *name, uint64 offset);
void __cdecl ?reserve_?$_qstring_D__QEAAX_K_Z(_qstring<char> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$_qstring_E__QEAAX_K_Z(_qstring<unsigned char> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$_qstring__W__QEAAX_K_Z(_qstring<wchar_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAX_K_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Newcap);
void __cdecl ?reserve_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAX_K_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Newcap);
void __cdecl ?reserve_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAX_K_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Newcap);
void __cdecl ?reserve_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAX_K_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Newcap);
void __cdecl ?reserve_?$qvector_D__QEAAX_K_Z(qvector<char> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_E__QEAAX_K_Z(qvector<unsigned char> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_H__QEAAX_K_Z(qvector<int> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_I__QEAAX_K_Z(qvector<unsigned int> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAX_K_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAX_K_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_PEAUbpt_t____QEAAX_K_Z(qvector<bpt_t *> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_PEAUextlang_t____QEAAX_K_Z(qvector<extlang_t *> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_PEAUline_rendering_output_entry_t____QEAAX_K_Z(qvector<line_rendering_output_entry_t *> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_PEAVsnapshot_t____QEAAX_K_Z(qvector<snapshot_t *> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_PEBD__QEAAX_K_Z(qvector<const char *> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_PEBUbpt_t____QEAAX_K_Z(qvector<const bpt_t *> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_PEBVrangeset_t____QEAAX_K_Z(qvector<const rangeset_t *> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_PEBVtwinline_t____QEAAX_K_Z(qvector<const twinline_t *> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uargpart_t____QEAAX_K_Z(qvector<argpart_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ubpt_t____QEAAX_K_Z(qvector<bpt_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ubptaddrs_t____QEAAX_K_Z(qvector<bptaddrs_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ucall_stack_info_t____QEAAX_K_Z(qvector<call_stack_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ucatch_t____QEAAX_K_Z(qvector<catch_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ucfgopt_set_t____QEAAX_K_Z(qvector<cfgopt_set_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uchannel_redir_t____QEAAX_K_Z(qvector<channel_redir_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ucliopt_t____QEAAX_K_Z(qvector<cliopt_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ucompiled_binpat_t____QEAAX_K_Z(qvector<compiled_binpat_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Udebug_event_t____QEAAX_K_Z(qvector<debug_event_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Udirentry_t____QEAAX_K_Z(qvector<direntry_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Udirtree_cursor_t____QEAAX_K_Z(qvector<dirtree_cursor_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uea_name_t____QEAAX_K_Z(qvector<ea_name_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uedge_t____QEAAX_K_Z(qvector<edge_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uenum_member_t____QEAAX_K_Z(qvector<enum_member_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uexception_info_t____QEAAX_K_Z(qvector<exception_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ufixup_info_t____QEAAX_K_Z(qvector<fixup_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ufuncarg_t____QEAAX_K_Z(qvector<funcarg_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ugroup_crinfo_t____QEAAX_K_Z(qvector<group_crinfo_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uidc_global_t____QEAAX_K_Z(qvector<idc_global_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uidp_desc_t____QEAAX_K_Z(qvector<idp_desc_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uidp_name_t____QEAAX_K_Z(qvector<idp_name_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uioport_bit_t____QEAAX_K_Z(qvector<ioport_bit_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uioport_t____QEAAX_K_Z(qvector<ioport_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ujvalue_t____QEAAX_K_Z(qvector<jvalue_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAX_K_Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ukvp_t____QEAAX_K_Z(qvector<kvp_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ulochist_entry_t____QEAAX_K_Z(qvector<lochist_entry_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ulowcnd_t____QEAAX_K_Z(qvector<lowcnd_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Umemory_info_t____QEAAX_K_Z(qvector<memory_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Umemreg_info_t____QEAAX_K_Z(qvector<memreg_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Umodinfo_t____QEAAX_K_Z(qvector<modinfo_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Umovbpt_info_t____QEAAX_K_Z(qvector<movbpt_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAX_K_Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAX_K_Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Upoint_t____QEAAX_K_Z(qvector<point_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uprocess_info_t____QEAAX_K_Z(qvector<process_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uqbasic_block_t____QEAAX_K_Z(qvector<qbasic_block_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Urange_t____QEAAX_K_Z(qvector<range_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Urect_t____QEAAX_K_Z(qvector<rect_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Urefinfo_desc_t____QEAAX_K_Z(qvector<refinfo_desc_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ureg_access_t____QEAAX_K_Z(qvector<reg_access_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ureg_info_t____QEAAX_K_Z(qvector<reg_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uregister_info_t____QEAAX_K_Z(qvector<register_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uregobj_t____QEAAX_K_Z(qvector<regobj_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uregval_t____QEAAX_K_Z(qvector<regval_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Urow_info_t____QEAAX_K_Z(qvector<row_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uscattered_segm_t____QEAAX_K_Z(qvector<scattered_segm_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Usegm_move_info_t____QEAAX_K_Z(qvector<segm_move_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uselection_item_t____QEAAX_K_Z(qvector<selection_item_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Usimd_info_t____QEAAX_K_Z(qvector<simd_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Usimpleline_t____QEAAX_K_Z(qvector<simpleline_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Ustkpnt_t____QEAAX_K_Z(qvector<stkpnt_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Utev_info_reg_t____QEAAX_K_Z(qvector<tev_info_reg_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Utev_info_t____QEAAX_K_Z(qvector<tev_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Utev_reg_value_t____QEAAX_K_Z(qvector<tev_reg_value_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uthread_name_t____QEAAX_K_Z(qvector<thread_name_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Utoken_t____QEAAX_K_Z(qvector<token_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Utype_attr_t____QEAAX_K_Z(qvector<type_attr_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uudt_member_t____QEAAX_K_Z(qvector<udt_member_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uupdate_bpt_info_t____QEAAX_K_Z(qvector<update_bpt_info_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Uxreflist_entry_t____QEAAX_K_Z(qvector<xreflist_entry_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_V?$_qstring_D____QEAAX_K_Z(qvector<_qstring<char>> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_V?$_qstring_E____QEAAX_K_Z(qvector<_qstring<unsigned char>> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_V?$_qstring__W____QEAAX_K_Z(qvector<_qstring<wchar_t>> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAX_K_Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_V?$qvector_H____QEAAX_K_Z(qvector<qvector<int>> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_V?$qvector_PEBD____QEAAX_K_Z(qvector<qvector<const char *>> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_V?$qvector_PEBVtwinline_t______QEAAX_K_Z(qvector<qvector<const twinline_t *>> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_V?$qvector__J____QEAAX_K_Z(qvector<qvector<long long>> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Vargloc_t____QEAAX_K_Z(qvector<argloc_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Vintmap_t____QEAAX_K_Z(qvector<intmap_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Vnode_set_t____QEAAX_K_Z(qvector<node_set_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Vop_t____QEAAX_K_Z(qvector<op_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Vrangeset_t____QEAAX_K_Z(qvector<rangeset_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Vsync_source_t____QEAAX_K_Z(qvector<sync_source_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Vtinfo_t____QEAAX_K_Z(qvector<tinfo_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Vtryblk_t____QEAAX_K_Z(qvector<tryblk_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Vtwinline_t____QEAAX_K_Z(qvector<twinline_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_Vvalstr_t____QEAAX_K_Z(qvector<valstr_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector_W4movbpt_code_t____QEAAX_K_Z(qvector<movbpt_code_t> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector__J__QEAAX_K_Z(qvector<long long> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector__K__QEAAX_K_Z(qvector<unsigned long long> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector__N__QEAAX_K_Z(qvector<bool> *__hidden this, size_t cnt);
void __cdecl ?reserve_?$qvector__W__QEAAX_K_Z(qvector<wchar_t> *__hidden this, size_t cnt);
void __cdecl ?reset_?$qrefcnt_t_Uextlang_t____QEAAXXZ(qrefcnt_t<extlang_t> *__hidden this);
void __cdecl ?reset_?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_file_t________QEAAXXZ(qrefcnt_t<qiterator<qrefcnt_t<source_file_t>>> *__hidden this);
void __cdecl ?reset_?$qrefcnt_t_V?$qiterator_V?$qrefcnt_t_Vsource_item_t________QEAAXXZ(qrefcnt_t<qiterator<qrefcnt_t<source_item_t>>> *__hidden this);
void __cdecl ?reset_?$qrefcnt_t_Vrefcnted_regex_t____QEAAXXZ(qrefcnt_t<refcnted_regex_t> *__hidden this);
void __cdecl ?reset_?$qrefcnt_t_Vsource_file_t____QEAAXXZ(qrefcnt_t<source_file_t> *__hidden this);
void __cdecl ?reset_?$qrefcnt_t_Vsource_item_t____QEAAXXZ(qrefcnt_t<source_item_t> *__hidden this);
void __cdecl ?reset_action_ctx_base_cur_sel_t__QEAAXXZ(action_ctx_base_cur_sel_t *__hidden this);
void __cdecl ?reset_action_ctx_base_t__QEAAXXZ(action_ctx_base_t *__hidden this);
void __cdecl ?reset_bitrange_t__QEAAXXZ(bitrange_t *__hidden this);
void __cdecl ?reset_callregs_t__QEAAXXZ(callregs_t *__hidden this);
void __cdecl ?reset_cast_t__QEAAXXZ(cast_t *__hidden this);
void __cdecl ?reset_chooser_item_attrs_t__QEAAXXZ(chooser_item_attrs_t *__hidden this);
void __cdecl ?reset_lex_value_t__QEAAXXZ(lex_value_t *__hidden this);
void __cdecl ?reset_mutable_graph_t__QEAAXXZ(mutable_graph_t *__hidden this);
void __cdecl ?reset_fnt_func_parent_iterator_t__QEAAXPEAVfunc_t___Z(func_parent_iterator_t *__hidden this, func_t *_fnt);
void __cdecl ?resize_?$_qstring_D__QEAAX_K_Z(_qstring<char> *__hidden this, size_t s);
void __cdecl ?resize_?$_qstring_D__QEAAX_KD_Z(_qstring<char> *__hidden this, size_t s, char c);
void __cdecl ?resize_?$_qstring_E__QEAAX_K_Z(_qstring<unsigned char> *__hidden this, size_t s);
void __cdecl ?resize_?$_qstring_E__QEAAX_KE_Z(_qstring<unsigned char> *__hidden this, size_t s, unsigned __int8 c);
void __cdecl ?resize_?$_qstring__W__QEAAX_K_Z(_qstring<wchar_t> *__hidden this, size_t s);
void __cdecl ?resize_?$_qstring__W__QEAAX_K_W_Z(_qstring<wchar_t> *__hidden this, size_t s, __int16 c);
void __cdecl ?resize_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAX_KD_Z(std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Newsize, char _Ch);
void __cdecl ?resize_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAX_K_S_Z(std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Newsize, __int16 _Ch);
void __cdecl ?resize_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAX_K_U_Z(std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Newsize, __int32 _Ch);
void __cdecl ?resize_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAX_K_W_Z(std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Newsize, __int16 _Ch);
void __cdecl ?resize_?$qvector_D__QEAAX_K_Z(qvector<char> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_D__QEAAX_KAEBD_Z(qvector<char> *__hidden this, size_t _newsize, char *x);
void __cdecl ?resize_?$qvector_E__QEAAX_K_Z(qvector<unsigned char> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_E__QEAAX_KAEBE_Z(qvector<unsigned char> *__hidden this, size_t _newsize, unsigned __int8 *x);
void __cdecl ?resize_?$qvector_H__QEAAX_K_Z(qvector<int> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_H__QEAAX_KAEBH_Z(qvector<int> *__hidden this, size_t _newsize, int *x);
void __cdecl ?resize_?$qvector_I__QEAAX_K_Z(qvector<unsigned int> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_I__QEAAX_KAEBI_Z(qvector<unsigned int> *__hidden this, size_t _newsize, unsigned int *x);
void __cdecl ?resize_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAX_K_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAX_KAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t _newsize, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
void __cdecl ?resize_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAX_K_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAX_KAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t _newsize, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
void __cdecl ?resize_?$qvector_PEAUbpt_t____QEAAX_K_Z(qvector<bpt_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_PEAUbpt_t____QEAAX_KAEBQEAUbpt_t___Z(qvector<bpt_t *> *__hidden this, size_t _newsize, bpt_t **x);
void __cdecl ?resize_?$qvector_PEAUextlang_t____QEAAX_K_Z(qvector<extlang_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_PEAUextlang_t____QEAAX_KAEBQEAUextlang_t___Z(qvector<extlang_t *> *__hidden this, size_t _newsize, extlang_t **x);
void __cdecl ?resize_?$qvector_PEAUline_rendering_output_entry_t____QEAAX_K_Z(qvector<line_rendering_output_entry_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_PEAUline_rendering_output_entry_t____QEAAX_KAEBQEAUline_rendering_output_entry_t___Z(qvector<line_rendering_output_entry_t *> *__hidden this, size_t _newsize, line_rendering_output_entry_t **x);
void __cdecl ?resize_?$qvector_PEAVsnapshot_t____QEAAX_K_Z(qvector<snapshot_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_PEAVsnapshot_t____QEAAX_KAEBQEAVsnapshot_t___Z(qvector<snapshot_t *> *__hidden this, size_t _newsize, snapshot_t **x);
void __cdecl ?resize_?$qvector_PEBD__QEAAX_K_Z(qvector<const char *> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_PEBD__QEAAX_KAEBQEBD_Z(qvector<const char *> *__hidden this, size_t _newsize, const char **x);
void __cdecl ?resize_?$qvector_PEBUbpt_t____QEAAX_K_Z(qvector<const bpt_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_PEBUbpt_t____QEAAX_KAEBQEBUbpt_t___Z(qvector<const bpt_t *> *__hidden this, size_t _newsize, const bpt_t **x);
void __cdecl ?resize_?$qvector_PEBVrangeset_t____QEAAX_K_Z(qvector<const rangeset_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_PEBVrangeset_t____QEAAX_KAEBQEBVrangeset_t___Z(qvector<const rangeset_t *> *__hidden this, size_t _newsize, const rangeset_t **x);
void __cdecl ?resize_?$qvector_PEBVtwinline_t____QEAAX_K_Z(qvector<const twinline_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_PEBVtwinline_t____QEAAX_KAEBQEBVtwinline_t___Z(qvector<const twinline_t *> *__hidden this, size_t _newsize, const twinline_t **x);
void __cdecl ?resize_?$qvector_Uargpart_t____QEAAX_K_Z(qvector<argpart_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uargpart_t____QEAAX_KAEBUargpart_t___Z(qvector<argpart_t> *__hidden this, size_t _newsize, argpart_t *x);
void __cdecl ?resize_?$qvector_Ubpt_t____QEAAX_K_Z(qvector<bpt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ubpt_t____QEAAX_KAEBUbpt_t___Z(qvector<bpt_t> *__hidden this, size_t _newsize, bpt_t *x);
void __cdecl ?resize_?$qvector_Ubptaddrs_t____QEAAX_K_Z(qvector<bptaddrs_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ubptaddrs_t____QEAAX_KAEBUbptaddrs_t___Z(qvector<bptaddrs_t> *__hidden this, size_t _newsize, bptaddrs_t *x);
void __cdecl ?resize_?$qvector_Ucall_stack_info_t____QEAAX_K_Z(qvector<call_stack_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ucall_stack_info_t____QEAAX_KAEBUcall_stack_info_t___Z(qvector<call_stack_info_t> *__hidden this, size_t _newsize, call_stack_info_t *x);
void __cdecl ?resize_?$qvector_Ucatch_t____QEAAX_K_Z(qvector<catch_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ucatch_t____QEAAX_KAEBUcatch_t___Z(qvector<catch_t> *__hidden this, size_t _newsize, catch_t *x);
void __cdecl ?resize_?$qvector_Ucfgopt_set_t____QEAAX_K_Z(qvector<cfgopt_set_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ucfgopt_set_t____QEAAX_KAEBUcfgopt_set_t___Z(qvector<cfgopt_set_t> *__hidden this, size_t _newsize, cfgopt_set_t *x);
void __cdecl ?resize_?$qvector_Uchannel_redir_t____QEAAX_K_Z(qvector<channel_redir_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uchannel_redir_t____QEAAX_KAEBUchannel_redir_t___Z(qvector<channel_redir_t> *__hidden this, size_t _newsize, channel_redir_t *x);
void __cdecl ?resize_?$qvector_Ucliopt_t____QEAAX_K_Z(qvector<cliopt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ucliopt_t____QEAAX_KAEBUcliopt_t___Z(qvector<cliopt_t> *__hidden this, size_t _newsize, cliopt_t *x);
void __cdecl ?resize_?$qvector_Ucompiled_binpat_t____QEAAX_K_Z(qvector<compiled_binpat_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ucompiled_binpat_t____QEAAX_KAEBUcompiled_binpat_t___Z(qvector<compiled_binpat_t> *__hidden this, size_t _newsize, compiled_binpat_t *x);
void __cdecl ?resize_?$qvector_Udebug_event_t____QEAAX_K_Z(qvector<debug_event_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Udebug_event_t____QEAAX_KAEBUdebug_event_t___Z(qvector<debug_event_t> *__hidden this, size_t _newsize, debug_event_t *x);
void __cdecl ?resize_?$qvector_Udirentry_t____QEAAX_K_Z(qvector<direntry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Udirentry_t____QEAAX_KAEBUdirentry_t___Z(qvector<direntry_t> *__hidden this, size_t _newsize, direntry_t *x);
void __cdecl ?resize_?$qvector_Udirtree_cursor_t____QEAAX_K_Z(qvector<dirtree_cursor_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Udirtree_cursor_t____QEAAX_KAEBUdirtree_cursor_t___Z(qvector<dirtree_cursor_t> *__hidden this, size_t _newsize, dirtree_cursor_t *x);
void __cdecl ?resize_?$qvector_Uea_name_t____QEAAX_K_Z(qvector<ea_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uea_name_t____QEAAX_KAEBUea_name_t___Z(qvector<ea_name_t> *__hidden this, size_t _newsize, ea_name_t *x);
void __cdecl ?resize_?$qvector_Uedge_t____QEAAX_K_Z(qvector<edge_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uedge_t____QEAAX_KAEBUedge_t___Z(qvector<edge_t> *__hidden this, size_t _newsize, edge_t *x);
void __cdecl ?resize_?$qvector_Uenum_member_t____QEAAX_K_Z(qvector<enum_member_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uenum_member_t____QEAAX_KAEBUenum_member_t___Z(qvector<enum_member_t> *__hidden this, size_t _newsize, enum_member_t *x);
void __cdecl ?resize_?$qvector_Uexception_info_t____QEAAX_K_Z(qvector<exception_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uexception_info_t____QEAAX_KAEBUexception_info_t___Z(qvector<exception_info_t> *__hidden this, size_t _newsize, exception_info_t *x);
void __cdecl ?resize_?$qvector_Ufixup_info_t____QEAAX_K_Z(qvector<fixup_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ufixup_info_t____QEAAX_KAEBUfixup_info_t___Z(qvector<fixup_info_t> *__hidden this, size_t _newsize, fixup_info_t *x);
void __cdecl ?resize_?$qvector_Ufuncarg_t____QEAAX_K_Z(qvector<funcarg_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ufuncarg_t____QEAAX_KAEBUfuncarg_t___Z(qvector<funcarg_t> *__hidden this, size_t _newsize, funcarg_t *x);
void __cdecl ?resize_?$qvector_Ugroup_crinfo_t____QEAAX_K_Z(qvector<group_crinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ugroup_crinfo_t____QEAAX_KAEBUgroup_crinfo_t___Z(qvector<group_crinfo_t> *__hidden this, size_t _newsize, group_crinfo_t *x);
void __cdecl ?resize_?$qvector_Uidc_global_t____QEAAX_K_Z(qvector<idc_global_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uidc_global_t____QEAAX_KAEBUidc_global_t___Z(qvector<idc_global_t> *__hidden this, size_t _newsize, idc_global_t *x);
void __cdecl ?resize_?$qvector_Uidp_desc_t____QEAAX_K_Z(qvector<idp_desc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uidp_desc_t____QEAAX_KAEBUidp_desc_t___Z(qvector<idp_desc_t> *__hidden this, size_t _newsize, idp_desc_t *x);
void __cdecl ?resize_?$qvector_Uidp_name_t____QEAAX_K_Z(qvector<idp_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uidp_name_t____QEAAX_KAEBUidp_name_t___Z(qvector<idp_name_t> *__hidden this, size_t _newsize, idp_name_t *x);
void __cdecl ?resize_?$qvector_Uioport_bit_t____QEAAX_K_Z(qvector<ioport_bit_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uioport_bit_t____QEAAX_KAEBUioport_bit_t___Z(qvector<ioport_bit_t> *__hidden this, size_t _newsize, ioport_bit_t *x);
void __cdecl ?resize_?$qvector_Uioport_t____QEAAX_K_Z(qvector<ioport_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uioport_t____QEAAX_KAEBUioport_t___Z(qvector<ioport_t> *__hidden this, size_t _newsize, ioport_t *x);
void __cdecl ?resize_?$qvector_Ujvalue_t____QEAAX_K_Z(qvector<jvalue_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ujvalue_t____QEAAX_KAEBUjvalue_t___Z(qvector<jvalue_t> *__hidden this, size_t _newsize, jvalue_t *x);
void __cdecl ?resize_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAX_K_Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAX_KAEBUkeywords_style_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t _newsize, ida_syntax_highlighter_t::keywords_style_t *x);
void __cdecl ?resize_?$qvector_Ukvp_t____QEAAX_K_Z(qvector<kvp_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ukvp_t____QEAAX_KAEBUkvp_t___Z(qvector<kvp_t> *__hidden this, size_t _newsize, kvp_t *x);
void __cdecl ?resize_?$qvector_Ulochist_entry_t____QEAAX_K_Z(qvector<lochist_entry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ulochist_entry_t____QEAAX_KAEBUlochist_entry_t___Z(qvector<lochist_entry_t> *__hidden this, size_t _newsize, lochist_entry_t *x);
void __cdecl ?resize_?$qvector_Ulowcnd_t____QEAAX_K_Z(qvector<lowcnd_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ulowcnd_t____QEAAX_KAEBUlowcnd_t___Z(qvector<lowcnd_t> *__hidden this, size_t _newsize, lowcnd_t *x);
void __cdecl ?resize_?$qvector_Umemory_info_t____QEAAX_K_Z(qvector<memory_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Umemory_info_t____QEAAX_KAEBUmemory_info_t___Z(qvector<memory_info_t> *__hidden this, size_t _newsize, memory_info_t *x);
void __cdecl ?resize_?$qvector_Umemreg_info_t____QEAAX_K_Z(qvector<memreg_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Umemreg_info_t____QEAAX_KAEBUmemreg_info_t___Z(qvector<memreg_info_t> *__hidden this, size_t _newsize, memreg_info_t *x);
void __cdecl ?resize_?$qvector_Umodinfo_t____QEAAX_K_Z(qvector<modinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Umodinfo_t____QEAAX_KAEBUmodinfo_t___Z(qvector<modinfo_t> *__hidden this, size_t _newsize, modinfo_t *x);
void __cdecl ?resize_?$qvector_Umovbpt_info_t____QEAAX_K_Z(qvector<movbpt_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Umovbpt_info_t____QEAAX_KAEBUmovbpt_info_t___Z(qvector<movbpt_info_t> *__hidden this, size_t _newsize, movbpt_info_t *x);
void __cdecl ?resize_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAX_K_Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAX_KAEBUmulticmt_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t _newsize, ida_syntax_highlighter_t::multicmt_t *x);
void __cdecl ?resize_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAX_K_Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAX_KAEBUplain_char_ptr_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t _newsize, ida_syntax_highlighter_t::plain_char_ptr_t *x);
void __cdecl ?resize_?$qvector_Upoint_t____QEAAX_K_Z(qvector<point_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Upoint_t____QEAAX_KAEBUpoint_t___Z(qvector<point_t> *__hidden this, size_t _newsize, point_t *x);
void __cdecl ?resize_?$qvector_Uprocess_info_t____QEAAX_K_Z(qvector<process_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uprocess_info_t____QEAAX_KAEBUprocess_info_t___Z(qvector<process_info_t> *__hidden this, size_t _newsize, process_info_t *x);
void __cdecl ?resize_?$qvector_Uqbasic_block_t____QEAAX_K_Z(qvector<qbasic_block_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uqbasic_block_t____QEAAX_KAEBUqbasic_block_t___Z(qvector<qbasic_block_t> *__hidden this, size_t _newsize, qbasic_block_t *x);
void __cdecl ?resize_?$qvector_Urange_t____QEAAX_K_Z(qvector<range_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Urange_t____QEAAX_KAEBUrange_t___Z(qvector<range_t> *__hidden this, size_t _newsize, range_t *x);
void __cdecl ?resize_?$qvector_Urect_t____QEAAX_K_Z(qvector<rect_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Urect_t____QEAAX_KAEBUrect_t___Z(qvector<rect_t> *__hidden this, size_t _newsize, rect_t *x);
void __cdecl ?resize_?$qvector_Urefinfo_desc_t____QEAAX_K_Z(qvector<refinfo_desc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Urefinfo_desc_t____QEAAX_KAEBUrefinfo_desc_t___Z(qvector<refinfo_desc_t> *__hidden this, size_t _newsize, refinfo_desc_t *x);
void __cdecl ?resize_?$qvector_Ureg_access_t____QEAAX_K_Z(qvector<reg_access_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ureg_access_t____QEAAX_KAEBUreg_access_t___Z(qvector<reg_access_t> *__hidden this, size_t _newsize, reg_access_t *x);
void __cdecl ?resize_?$qvector_Ureg_info_t____QEAAX_K_Z(qvector<reg_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ureg_info_t____QEAAX_KAEBUreg_info_t___Z(qvector<reg_info_t> *__hidden this, size_t _newsize, reg_info_t *x);
void __cdecl ?resize_?$qvector_Uregister_info_t____QEAAX_K_Z(qvector<register_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uregister_info_t____QEAAX_KAEBUregister_info_t___Z(qvector<register_info_t> *__hidden this, size_t _newsize, register_info_t *x);
void __cdecl ?resize_?$qvector_Uregobj_t____QEAAX_K_Z(qvector<regobj_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uregobj_t____QEAAX_KAEBUregobj_t___Z(qvector<regobj_t> *__hidden this, size_t _newsize, regobj_t *x);
void __cdecl ?resize_?$qvector_Uregval_t____QEAAX_K_Z(qvector<regval_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uregval_t____QEAAX_KAEBUregval_t___Z(qvector<regval_t> *__hidden this, size_t _newsize, regval_t *x);
void __cdecl ?resize_?$qvector_Urow_info_t____QEAAX_K_Z(qvector<row_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Urow_info_t____QEAAX_KAEBUrow_info_t___Z(qvector<row_info_t> *__hidden this, size_t _newsize, row_info_t *x);
void __cdecl ?resize_?$qvector_Uscattered_segm_t____QEAAX_K_Z(qvector<scattered_segm_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uscattered_segm_t____QEAAX_KAEBUscattered_segm_t___Z(qvector<scattered_segm_t> *__hidden this, size_t _newsize, scattered_segm_t *x);
void __cdecl ?resize_?$qvector_Usegm_move_info_t____QEAAX_K_Z(qvector<segm_move_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Usegm_move_info_t____QEAAX_KAEBUsegm_move_info_t___Z(qvector<segm_move_info_t> *__hidden this, size_t _newsize, segm_move_info_t *x);
void __cdecl ?resize_?$qvector_Uselection_item_t____QEAAX_K_Z(qvector<selection_item_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uselection_item_t____QEAAX_KAEBUselection_item_t___Z(qvector<selection_item_t> *__hidden this, size_t _newsize, selection_item_t *x);
void __cdecl ?resize_?$qvector_Usimd_info_t____QEAAX_K_Z(qvector<simd_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Usimd_info_t____QEAAX_KAEBUsimd_info_t___Z(qvector<simd_info_t> *__hidden this, size_t _newsize, simd_info_t *x);
void __cdecl ?resize_?$qvector_Usimpleline_t____QEAAX_K_Z(qvector<simpleline_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Usimpleline_t____QEAAX_KAEBUsimpleline_t___Z(qvector<simpleline_t> *__hidden this, size_t _newsize, simpleline_t *x);
void __cdecl ?resize_?$qvector_Ustkpnt_t____QEAAX_K_Z(qvector<stkpnt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Ustkpnt_t____QEAAX_KAEBUstkpnt_t___Z(qvector<stkpnt_t> *__hidden this, size_t _newsize, stkpnt_t *x);
void __cdecl ?resize_?$qvector_Utev_info_reg_t____QEAAX_K_Z(qvector<tev_info_reg_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Utev_info_reg_t____QEAAX_KAEBUtev_info_reg_t___Z(qvector<tev_info_reg_t> *__hidden this, size_t _newsize, tev_info_reg_t *x);
void __cdecl ?resize_?$qvector_Utev_info_t____QEAAX_K_Z(qvector<tev_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Utev_info_t____QEAAX_KAEBUtev_info_t___Z(qvector<tev_info_t> *__hidden this, size_t _newsize, tev_info_t *x);
void __cdecl ?resize_?$qvector_Utev_reg_value_t____QEAAX_K_Z(qvector<tev_reg_value_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Utev_reg_value_t____QEAAX_KAEBUtev_reg_value_t___Z(qvector<tev_reg_value_t> *__hidden this, size_t _newsize, tev_reg_value_t *x);
void __cdecl ?resize_?$qvector_Uthread_name_t____QEAAX_K_Z(qvector<thread_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uthread_name_t____QEAAX_KAEBUthread_name_t___Z(qvector<thread_name_t> *__hidden this, size_t _newsize, thread_name_t *x);
void __cdecl ?resize_?$qvector_Utoken_t____QEAAX_K_Z(qvector<token_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Utoken_t____QEAAX_KAEBUtoken_t___Z(qvector<token_t> *__hidden this, size_t _newsize, token_t *x);
void __cdecl ?resize_?$qvector_Utype_attr_t____QEAAX_K_Z(qvector<type_attr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Utype_attr_t____QEAAX_KAEBUtype_attr_t___Z(qvector<type_attr_t> *__hidden this, size_t _newsize, type_attr_t *x);
void __cdecl ?resize_?$qvector_Uudt_member_t____QEAAX_K_Z(qvector<udt_member_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uudt_member_t____QEAAX_KAEBUudt_member_t___Z(qvector<udt_member_t> *__hidden this, size_t _newsize, udt_member_t *x);
void __cdecl ?resize_?$qvector_Uupdate_bpt_info_t____QEAAX_K_Z(qvector<update_bpt_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uupdate_bpt_info_t____QEAAX_KAEBUupdate_bpt_info_t___Z(qvector<update_bpt_info_t> *__hidden this, size_t _newsize, update_bpt_info_t *x);
void __cdecl ?resize_?$qvector_Uxreflist_entry_t____QEAAX_K_Z(qvector<xreflist_entry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Uxreflist_entry_t____QEAAX_KAEBUxreflist_entry_t___Z(qvector<xreflist_entry_t> *__hidden this, size_t _newsize, xreflist_entry_t *x);
void __cdecl ?resize_?$qvector_V?$_qstring_D____QEAAX_K_Z(qvector<_qstring<char>> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_V?$_qstring_D____QEAAX_KAEBV?$_qstring_D___Z(qvector<_qstring<char>> *__hidden this, size_t _newsize, _qstring<char> *x);
void __cdecl ?resize_?$qvector_V?$_qstring_E____QEAAX_K_Z(qvector<_qstring<unsigned char>> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_V?$_qstring_E____QEAAX_KAEBV?$_qstring_E___Z(qvector<_qstring<unsigned char>> *__hidden this, size_t _newsize, _qstring<unsigned char> *x);
void __cdecl ?resize_?$qvector_V?$_qstring__W____QEAAX_K_Z(qvector<_qstring<wchar_t>> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_V?$_qstring__W____QEAAX_KAEBV?$_qstring__W___Z(qvector<_qstring<wchar_t>> *__hidden this, size_t _newsize, _qstring<wchar_t> *x);
void __cdecl ?resize_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAX_K_Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAX_KAEBV?$qrefcnt_t_Vsource_item_t_____Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t _newsize, qrefcnt_t<source_item_t> *x);
void __cdecl ?resize_?$qvector_V?$qvector_H____QEAAX_K_Z(qvector<qvector<int>> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_V?$qvector_H____QEAAX_KAEBV?$qvector_H___Z(qvector<qvector<int>> *__hidden this, size_t _newsize, qvector<int> *x);
void __cdecl ?resize_?$qvector_V?$qvector_PEBD____QEAAX_K_Z(qvector<qvector<const char *>> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_V?$qvector_PEBD____QEAAX_KAEBV?$qvector_PEBD___Z(qvector<qvector<const char *>> *__hidden this, size_t _newsize, qvector<const char *> *x);
void __cdecl ?resize_?$qvector_V?$qvector_PEBVtwinline_t______QEAAX_K_Z(qvector<qvector<const twinline_t *>> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_V?$qvector_PEBVtwinline_t______QEAAX_KAEBV?$qvector_PEBVtwinline_t_____Z(qvector<qvector<const twinline_t *>> *__hidden this, size_t _newsize, qvector<const twinline_t *> *x);
void __cdecl ?resize_?$qvector_V?$qvector__J____QEAAX_K_Z(qvector<qvector<long long>> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_V?$qvector__J____QEAAX_KAEBV?$qvector__J___Z(qvector<qvector<long long>> *__hidden this, size_t _newsize, qvector<long long> *x);
void __cdecl ?resize_?$qvector_Vargloc_t____QEAAX_K_Z(qvector<argloc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Vargloc_t____QEAAX_KAEBVargloc_t___Z(qvector<argloc_t> *__hidden this, size_t _newsize, argloc_t *x);
void __cdecl ?resize_?$qvector_Vintmap_t____QEAAX_K_Z(qvector<intmap_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Vintmap_t____QEAAX_KAEBVintmap_t___Z(qvector<intmap_t> *__hidden this, size_t _newsize, intmap_t *x);
void __cdecl ?resize_?$qvector_Vnode_set_t____QEAAX_K_Z(qvector<node_set_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Vnode_set_t____QEAAX_KAEBVnode_set_t___Z(qvector<node_set_t> *__hidden this, size_t _newsize, node_set_t *x);
void __cdecl ?resize_?$qvector_Vop_t____QEAAX_K_Z(qvector<op_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Vop_t____QEAAX_KAEBVop_t___Z(qvector<op_t> *__hidden this, size_t _newsize, op_t *x);
void __cdecl ?resize_?$qvector_Vrangeset_t____QEAAX_K_Z(qvector<rangeset_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Vrangeset_t____QEAAX_KAEBVrangeset_t___Z(qvector<rangeset_t> *__hidden this, size_t _newsize, rangeset_t *x);
void __cdecl ?resize_?$qvector_Vsync_source_t____QEAAX_K_Z(qvector<sync_source_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Vsync_source_t____QEAAX_KAEBVsync_source_t___Z(qvector<sync_source_t> *__hidden this, size_t _newsize, sync_source_t *x);
void __cdecl ?resize_?$qvector_Vtinfo_t____QEAAX_K_Z(qvector<tinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Vtinfo_t____QEAAX_KAEBVtinfo_t___Z(qvector<tinfo_t> *__hidden this, size_t _newsize, tinfo_t *x);
void __cdecl ?resize_?$qvector_Vtryblk_t____QEAAX_K_Z(qvector<tryblk_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Vtryblk_t____QEAAX_KAEBVtryblk_t___Z(qvector<tryblk_t> *__hidden this, size_t _newsize, tryblk_t *x);
void __cdecl ?resize_?$qvector_Vtwinline_t____QEAAX_K_Z(qvector<twinline_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Vtwinline_t____QEAAX_KAEBVtwinline_t___Z(qvector<twinline_t> *__hidden this, size_t _newsize, twinline_t *x);
void __cdecl ?resize_?$qvector_Vvalstr_t____QEAAX_K_Z(qvector<valstr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_Vvalstr_t____QEAAX_KAEBVvalstr_t___Z(qvector<valstr_t> *__hidden this, size_t _newsize, valstr_t *x);
void __cdecl ?resize_?$qvector_W4movbpt_code_t____QEAAX_K_Z(qvector<movbpt_code_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector_W4movbpt_code_t____QEAAX_KAEBW4movbpt_code_t___Z(qvector<movbpt_code_t> *__hidden this, size_t _newsize, movbpt_code_t *x);
void __cdecl ?resize_?$qvector__J__QEAAX_K_Z(qvector<long long> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector__J__QEAAX_KAEB_J_Z(qvector<long long> *__hidden this, size_t _newsize, __int64 *x);
void __cdecl ?resize_?$qvector__K__QEAAX_K_Z(qvector<unsigned long long> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector__K__QEAAX_KAEB_K_Z(qvector<unsigned long long> *__hidden this, size_t _newsize, unsigned __int64 *x);
void __cdecl ?resize_?$qvector__N__QEAAX_K_Z(qvector<bool> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector__N__QEAAX_KAEB_N_Z(qvector<bool> *__hidden this, size_t _newsize, bool *x);
void __cdecl ?resize_?$qvector__W__QEAAX_K_Z(qvector<wchar_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_?$qvector__W__QEAAX_KAEB_W_Z(qvector<wchar_t> *__hidden this, size_t _newsize, __int16 *x);
void __cdecl ?resize_mutable_graph_t__UEAAXH_Z(mutable_graph_t *__hidden this, int n);
void __cdecl ?resize_node_ordering_t__QEAAXH_Z(node_ordering_t *__hidden this, int n);
void __cdecl ?resize_less_?$qvector_D__AEAAX_K_Z(qvector<char> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_E__AEAAX_K_Z(qvector<unsigned char> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_H__AEAAX_K_Z(qvector<int> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_I__AEAAX_K_Z(qvector<unsigned int> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__AEAAX_K_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__AEAAX_K_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_PEAUbpt_t____AEAAX_K_Z(qvector<bpt_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_PEAUextlang_t____AEAAX_K_Z(qvector<extlang_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_PEAUline_rendering_output_entry_t____AEAAX_K_Z(qvector<line_rendering_output_entry_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_PEAVsnapshot_t____AEAAX_K_Z(qvector<snapshot_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_PEBD__AEAAX_K_Z(qvector<const char *> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_PEBUbpt_t____AEAAX_K_Z(qvector<const bpt_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_PEBVrangeset_t____AEAAX_K_Z(qvector<const rangeset_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_PEBVtwinline_t____AEAAX_K_Z(qvector<const twinline_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uargpart_t____AEAAX_K_Z(qvector<argpart_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ubpt_t____AEAAX_K_Z(qvector<bpt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ubptaddrs_t____AEAAX_K_Z(qvector<bptaddrs_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ucall_stack_info_t____AEAAX_K_Z(qvector<call_stack_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ucatch_t____AEAAX_K_Z(qvector<catch_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ucfgopt_set_t____AEAAX_K_Z(qvector<cfgopt_set_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uchannel_redir_t____AEAAX_K_Z(qvector<channel_redir_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ucliopt_t____AEAAX_K_Z(qvector<cliopt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ucompiled_binpat_t____AEAAX_K_Z(qvector<compiled_binpat_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Udebug_event_t____AEAAX_K_Z(qvector<debug_event_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Udirentry_t____AEAAX_K_Z(qvector<direntry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Udirtree_cursor_t____AEAAX_K_Z(qvector<dirtree_cursor_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uea_name_t____AEAAX_K_Z(qvector<ea_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uedge_t____AEAAX_K_Z(qvector<edge_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uenum_member_t____AEAAX_K_Z(qvector<enum_member_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uexception_info_t____AEAAX_K_Z(qvector<exception_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ufixup_info_t____AEAAX_K_Z(qvector<fixup_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ufuncarg_t____AEAAX_K_Z(qvector<funcarg_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ugroup_crinfo_t____AEAAX_K_Z(qvector<group_crinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uidc_global_t____AEAAX_K_Z(qvector<idc_global_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uidp_desc_t____AEAAX_K_Z(qvector<idp_desc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uidp_name_t____AEAAX_K_Z(qvector<idp_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uioport_bit_t____AEAAX_K_Z(qvector<ioport_bit_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uioport_t____AEAAX_K_Z(qvector<ioport_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ujvalue_t____AEAAX_K_Z(qvector<jvalue_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____AEAAX_K_Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ukvp_t____AEAAX_K_Z(qvector<kvp_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ulochist_entry_t____AEAAX_K_Z(qvector<lochist_entry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ulowcnd_t____AEAAX_K_Z(qvector<lowcnd_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Umemory_info_t____AEAAX_K_Z(qvector<memory_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Umemreg_info_t____AEAAX_K_Z(qvector<memreg_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Umodinfo_t____AEAAX_K_Z(qvector<modinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Umovbpt_info_t____AEAAX_K_Z(qvector<movbpt_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____AEAAX_K_Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____AEAAX_K_Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Upoint_t____AEAAX_K_Z(qvector<point_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uprocess_info_t____AEAAX_K_Z(qvector<process_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uqbasic_block_t____AEAAX_K_Z(qvector<qbasic_block_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Urange_t____AEAAX_K_Z(qvector<range_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Urect_t____AEAAX_K_Z(qvector<rect_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Urefinfo_desc_t____AEAAX_K_Z(qvector<refinfo_desc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ureg_access_t____AEAAX_K_Z(qvector<reg_access_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ureg_info_t____AEAAX_K_Z(qvector<reg_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uregister_info_t____AEAAX_K_Z(qvector<register_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uregobj_t____AEAAX_K_Z(qvector<regobj_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uregval_t____AEAAX_K_Z(qvector<regval_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Urow_info_t____AEAAX_K_Z(qvector<row_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uscattered_segm_t____AEAAX_K_Z(qvector<scattered_segm_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Usegm_move_info_t____AEAAX_K_Z(qvector<segm_move_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uselection_item_t____AEAAX_K_Z(qvector<selection_item_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Usimd_info_t____AEAAX_K_Z(qvector<simd_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Usimpleline_t____AEAAX_K_Z(qvector<simpleline_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Ustkpnt_t____AEAAX_K_Z(qvector<stkpnt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Utev_info_reg_t____AEAAX_K_Z(qvector<tev_info_reg_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Utev_info_t____AEAAX_K_Z(qvector<tev_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Utev_reg_value_t____AEAAX_K_Z(qvector<tev_reg_value_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uthread_name_t____AEAAX_K_Z(qvector<thread_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Utoken_t____AEAAX_K_Z(qvector<token_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Utype_attr_t____AEAAX_K_Z(qvector<type_attr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uudt_member_t____AEAAX_K_Z(qvector<udt_member_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uupdate_bpt_info_t____AEAAX_K_Z(qvector<update_bpt_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Uxreflist_entry_t____AEAAX_K_Z(qvector<xreflist_entry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_V?$_qstring_D____AEAAX_K_Z(qvector<_qstring<char>> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_V?$_qstring_E____AEAAX_K_Z(qvector<_qstring<unsigned char>> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_V?$_qstring__W____AEAAX_K_Z(qvector<_qstring<wchar_t>> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_V?$qrefcnt_t_Vsource_item_t______AEAAX_K_Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_V?$qvector_H____AEAAX_K_Z(qvector<qvector<int>> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_V?$qvector_PEBD____AEAAX_K_Z(qvector<qvector<const char *>> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_V?$qvector_PEBVtwinline_t______AEAAX_K_Z(qvector<qvector<const twinline_t *>> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_V?$qvector__J____AEAAX_K_Z(qvector<qvector<long long>> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Vargloc_t____AEAAX_K_Z(qvector<argloc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Vintmap_t____AEAAX_K_Z(qvector<intmap_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Vnode_set_t____AEAAX_K_Z(qvector<node_set_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Vop_t____AEAAX_K_Z(qvector<op_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Vrangeset_t____AEAAX_K_Z(qvector<rangeset_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Vsync_source_t____AEAAX_K_Z(qvector<sync_source_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Vtinfo_t____AEAAX_K_Z(qvector<tinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Vtryblk_t____AEAAX_K_Z(qvector<tryblk_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Vtwinline_t____AEAAX_K_Z(qvector<twinline_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_Vvalstr_t____AEAAX_K_Z(qvector<valstr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector_W4movbpt_code_t____AEAAX_K_Z(qvector<movbpt_code_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector__J__AEAAX_K_Z(qvector<long long> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector__K__AEAAX_K_Z(qvector<unsigned long long> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector__N__AEAAX_K_Z(qvector<bool> *__hidden this, size_t _newsize);
void __cdecl ?resize_less_?$qvector__W__AEAAX_K_Z(qvector<wchar_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_?$qvector_D__AEAAX_KAEBD_Z(qvector<char> *__hidden this, size_t _newsize, char *x);
void __cdecl ?resize_more_?$qvector_E__AEAAX_KAEBE_Z(qvector<unsigned char> *__hidden this, size_t _newsize, unsigned __int8 *x);
void __cdecl ?resize_more_?$qvector_H__AEAAX_KAEBH_Z(qvector<int> *__hidden this, size_t _newsize, int *x);
void __cdecl ?resize_more_?$qvector_I__AEAAX_KAEBI_Z(qvector<unsigned int> *__hidden this, size_t _newsize, unsigned int *x);
void __cdecl ?resize_more_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__AEAAX_KAEBQ6A_JPEAW4syntax_highlight_style__PEBD_Z_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t _newsize, __int64 (__cdecl **x)(syntax_highlight_style *, const char *));
void __cdecl ?resize_more_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__AEAAX_KAEBQ6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t _newsize, bool (__cdecl **x)(syntax_highlight_style *, const _qstring<char> *));
void __cdecl ?resize_more_?$qvector_PEAUbpt_t____AEAAX_KAEBQEAUbpt_t___Z(qvector<bpt_t *> *__hidden this, size_t _newsize, bpt_t **x);
void __cdecl ?resize_more_?$qvector_PEAUextlang_t____AEAAX_KAEBQEAUextlang_t___Z(qvector<extlang_t *> *__hidden this, size_t _newsize, extlang_t **x);
void __cdecl ?resize_more_?$qvector_PEAUline_rendering_output_entry_t____AEAAX_KAEBQEAUline_rendering_output_entry_t___Z(qvector<line_rendering_output_entry_t *> *__hidden this, size_t _newsize, line_rendering_output_entry_t **x);
void __cdecl ?resize_more_?$qvector_PEAVsnapshot_t____AEAAX_KAEBQEAVsnapshot_t___Z(qvector<snapshot_t *> *__hidden this, size_t _newsize, snapshot_t **x);
void __cdecl ?resize_more_?$qvector_PEBD__AEAAX_KAEBQEBD_Z(qvector<const char *> *__hidden this, size_t _newsize, const char **x);
void __cdecl ?resize_more_?$qvector_PEBUbpt_t____AEAAX_KAEBQEBUbpt_t___Z(qvector<const bpt_t *> *__hidden this, size_t _newsize, const bpt_t **x);
void __cdecl ?resize_more_?$qvector_PEBVrangeset_t____AEAAX_KAEBQEBVrangeset_t___Z(qvector<const rangeset_t *> *__hidden this, size_t _newsize, const rangeset_t **x);
void __cdecl ?resize_more_?$qvector_PEBVtwinline_t____AEAAX_KAEBQEBVtwinline_t___Z(qvector<const twinline_t *> *__hidden this, size_t _newsize, const twinline_t **x);
void __cdecl ?resize_more_?$qvector_Uargpart_t____AEAAX_KAEBUargpart_t___Z(qvector<argpart_t> *__hidden this, size_t _newsize, argpart_t *x);
void __cdecl ?resize_more_?$qvector_Ubpt_t____AEAAX_KAEBUbpt_t___Z(qvector<bpt_t> *__hidden this, size_t _newsize, bpt_t *x);
void __cdecl ?resize_more_?$qvector_Ubptaddrs_t____AEAAX_KAEBUbptaddrs_t___Z(qvector<bptaddrs_t> *__hidden this, size_t _newsize, bptaddrs_t *x);
void __cdecl ?resize_more_?$qvector_Ucall_stack_info_t____AEAAX_KAEBUcall_stack_info_t___Z(qvector<call_stack_info_t> *__hidden this, size_t _newsize, call_stack_info_t *x);
void __cdecl ?resize_more_?$qvector_Ucatch_t____AEAAX_KAEBUcatch_t___Z(qvector<catch_t> *__hidden this, size_t _newsize, catch_t *x);
void __cdecl ?resize_more_?$qvector_Ucfgopt_set_t____AEAAX_KAEBUcfgopt_set_t___Z(qvector<cfgopt_set_t> *__hidden this, size_t _newsize, cfgopt_set_t *x);
void __cdecl ?resize_more_?$qvector_Uchannel_redir_t____AEAAX_KAEBUchannel_redir_t___Z(qvector<channel_redir_t> *__hidden this, size_t _newsize, channel_redir_t *x);
void __cdecl ?resize_more_?$qvector_Ucliopt_t____AEAAX_KAEBUcliopt_t___Z(qvector<cliopt_t> *__hidden this, size_t _newsize, cliopt_t *x);
void __cdecl ?resize_more_?$qvector_Ucompiled_binpat_t____AEAAX_KAEBUcompiled_binpat_t___Z(qvector<compiled_binpat_t> *__hidden this, size_t _newsize, compiled_binpat_t *x);
void __cdecl ?resize_more_?$qvector_Udebug_event_t____AEAAX_KAEBUdebug_event_t___Z(qvector<debug_event_t> *__hidden this, size_t _newsize, debug_event_t *x);
void __cdecl ?resize_more_?$qvector_Udirentry_t____AEAAX_KAEBUdirentry_t___Z(qvector<direntry_t> *__hidden this, size_t _newsize, direntry_t *x);
void __cdecl ?resize_more_?$qvector_Udirtree_cursor_t____AEAAX_KAEBUdirtree_cursor_t___Z(qvector<dirtree_cursor_t> *__hidden this, size_t _newsize, dirtree_cursor_t *x);
void __cdecl ?resize_more_?$qvector_Uea_name_t____AEAAX_KAEBUea_name_t___Z(qvector<ea_name_t> *__hidden this, size_t _newsize, ea_name_t *x);
void __cdecl ?resize_more_?$qvector_Uedge_t____AEAAX_KAEBUedge_t___Z(qvector<edge_t> *__hidden this, size_t _newsize, edge_t *x);
void __cdecl ?resize_more_?$qvector_Uenum_member_t____AEAAX_KAEBUenum_member_t___Z(qvector<enum_member_t> *__hidden this, size_t _newsize, enum_member_t *x);
void __cdecl ?resize_more_?$qvector_Uexception_info_t____AEAAX_KAEBUexception_info_t___Z(qvector<exception_info_t> *__hidden this, size_t _newsize, exception_info_t *x);
void __cdecl ?resize_more_?$qvector_Ufixup_info_t____AEAAX_KAEBUfixup_info_t___Z(qvector<fixup_info_t> *__hidden this, size_t _newsize, fixup_info_t *x);
void __cdecl ?resize_more_?$qvector_Ufuncarg_t____AEAAX_KAEBUfuncarg_t___Z(qvector<funcarg_t> *__hidden this, size_t _newsize, funcarg_t *x);
void __cdecl ?resize_more_?$qvector_Ugroup_crinfo_t____AEAAX_KAEBUgroup_crinfo_t___Z(qvector<group_crinfo_t> *__hidden this, size_t _newsize, group_crinfo_t *x);
void __cdecl ?resize_more_?$qvector_Uidc_global_t____AEAAX_KAEBUidc_global_t___Z(qvector<idc_global_t> *__hidden this, size_t _newsize, idc_global_t *x);
void __cdecl ?resize_more_?$qvector_Uidp_desc_t____AEAAX_KAEBUidp_desc_t___Z(qvector<idp_desc_t> *__hidden this, size_t _newsize, idp_desc_t *x);
void __cdecl ?resize_more_?$qvector_Uidp_name_t____AEAAX_KAEBUidp_name_t___Z(qvector<idp_name_t> *__hidden this, size_t _newsize, idp_name_t *x);
void __cdecl ?resize_more_?$qvector_Uioport_bit_t____AEAAX_KAEBUioport_bit_t___Z(qvector<ioport_bit_t> *__hidden this, size_t _newsize, ioport_bit_t *x);
void __cdecl ?resize_more_?$qvector_Uioport_t____AEAAX_KAEBUioport_t___Z(qvector<ioport_t> *__hidden this, size_t _newsize, ioport_t *x);
void __cdecl ?resize_more_?$qvector_Ujvalue_t____AEAAX_KAEBUjvalue_t___Z(qvector<jvalue_t> *__hidden this, size_t _newsize, jvalue_t *x);
void __cdecl ?resize_more_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____AEAAX_KAEBUkeywords_style_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t _newsize, ida_syntax_highlighter_t::keywords_style_t *x);
void __cdecl ?resize_more_?$qvector_Ukvp_t____AEAAX_KAEBUkvp_t___Z(qvector<kvp_t> *__hidden this, size_t _newsize, kvp_t *x);
void __cdecl ?resize_more_?$qvector_Ulochist_entry_t____AEAAX_KAEBUlochist_entry_t___Z(qvector<lochist_entry_t> *__hidden this, size_t _newsize, lochist_entry_t *x);
void __cdecl ?resize_more_?$qvector_Ulowcnd_t____AEAAX_KAEBUlowcnd_t___Z(qvector<lowcnd_t> *__hidden this, size_t _newsize, lowcnd_t *x);
void __cdecl ?resize_more_?$qvector_Umemory_info_t____AEAAX_KAEBUmemory_info_t___Z(qvector<memory_info_t> *__hidden this, size_t _newsize, memory_info_t *x);
void __cdecl ?resize_more_?$qvector_Umemreg_info_t____AEAAX_KAEBUmemreg_info_t___Z(qvector<memreg_info_t> *__hidden this, size_t _newsize, memreg_info_t *x);
void __cdecl ?resize_more_?$qvector_Umodinfo_t____AEAAX_KAEBUmodinfo_t___Z(qvector<modinfo_t> *__hidden this, size_t _newsize, modinfo_t *x);
void __cdecl ?resize_more_?$qvector_Umovbpt_info_t____AEAAX_KAEBUmovbpt_info_t___Z(qvector<movbpt_info_t> *__hidden this, size_t _newsize, movbpt_info_t *x);
void __cdecl ?resize_more_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____AEAAX_KAEBUmulticmt_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t _newsize, ida_syntax_highlighter_t::multicmt_t *x);
void __cdecl ?resize_more_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____AEAAX_KAEBUplain_char_ptr_t_ida_syntax_highlighter_t___Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t _newsize, ida_syntax_highlighter_t::plain_char_ptr_t *x);
void __cdecl ?resize_more_?$qvector_Upoint_t____AEAAX_KAEBUpoint_t___Z(qvector<point_t> *__hidden this, size_t _newsize, point_t *x);
void __cdecl ?resize_more_?$qvector_Uprocess_info_t____AEAAX_KAEBUprocess_info_t___Z(qvector<process_info_t> *__hidden this, size_t _newsize, process_info_t *x);
void __cdecl ?resize_more_?$qvector_Uqbasic_block_t____AEAAX_KAEBUqbasic_block_t___Z(qvector<qbasic_block_t> *__hidden this, size_t _newsize, qbasic_block_t *x);
void __cdecl ?resize_more_?$qvector_Urange_t____AEAAX_KAEBUrange_t___Z(qvector<range_t> *__hidden this, size_t _newsize, range_t *x);
void __cdecl ?resize_more_?$qvector_Urect_t____AEAAX_KAEBUrect_t___Z(qvector<rect_t> *__hidden this, size_t _newsize, rect_t *x);
void __cdecl ?resize_more_?$qvector_Urefinfo_desc_t____AEAAX_KAEBUrefinfo_desc_t___Z(qvector<refinfo_desc_t> *__hidden this, size_t _newsize, refinfo_desc_t *x);
void __cdecl ?resize_more_?$qvector_Ureg_access_t____AEAAX_KAEBUreg_access_t___Z(qvector<reg_access_t> *__hidden this, size_t _newsize, reg_access_t *x);
void __cdecl ?resize_more_?$qvector_Ureg_info_t____AEAAX_KAEBUreg_info_t___Z(qvector<reg_info_t> *__hidden this, size_t _newsize, reg_info_t *x);
void __cdecl ?resize_more_?$qvector_Uregister_info_t____AEAAX_KAEBUregister_info_t___Z(qvector<register_info_t> *__hidden this, size_t _newsize, register_info_t *x);
void __cdecl ?resize_more_?$qvector_Uregobj_t____AEAAX_KAEBUregobj_t___Z(qvector<regobj_t> *__hidden this, size_t _newsize, regobj_t *x);
void __cdecl ?resize_more_?$qvector_Uregval_t____AEAAX_KAEBUregval_t___Z(qvector<regval_t> *__hidden this, size_t _newsize, regval_t *x);
void __cdecl ?resize_more_?$qvector_Urow_info_t____AEAAX_KAEBUrow_info_t___Z(qvector<row_info_t> *__hidden this, size_t _newsize, row_info_t *x);
void __cdecl ?resize_more_?$qvector_Uscattered_segm_t____AEAAX_KAEBUscattered_segm_t___Z(qvector<scattered_segm_t> *__hidden this, size_t _newsize, scattered_segm_t *x);
void __cdecl ?resize_more_?$qvector_Usegm_move_info_t____AEAAX_KAEBUsegm_move_info_t___Z(qvector<segm_move_info_t> *__hidden this, size_t _newsize, segm_move_info_t *x);
void __cdecl ?resize_more_?$qvector_Uselection_item_t____AEAAX_KAEBUselection_item_t___Z(qvector<selection_item_t> *__hidden this, size_t _newsize, selection_item_t *x);
void __cdecl ?resize_more_?$qvector_Usimd_info_t____AEAAX_KAEBUsimd_info_t___Z(qvector<simd_info_t> *__hidden this, size_t _newsize, simd_info_t *x);
void __cdecl ?resize_more_?$qvector_Usimpleline_t____AEAAX_KAEBUsimpleline_t___Z(qvector<simpleline_t> *__hidden this, size_t _newsize, simpleline_t *x);
void __cdecl ?resize_more_?$qvector_Ustkpnt_t____AEAAX_KAEBUstkpnt_t___Z(qvector<stkpnt_t> *__hidden this, size_t _newsize, stkpnt_t *x);
void __cdecl ?resize_more_?$qvector_Utev_info_reg_t____AEAAX_KAEBUtev_info_reg_t___Z(qvector<tev_info_reg_t> *__hidden this, size_t _newsize, tev_info_reg_t *x);
void __cdecl ?resize_more_?$qvector_Utev_info_t____AEAAX_KAEBUtev_info_t___Z(qvector<tev_info_t> *__hidden this, size_t _newsize, tev_info_t *x);
void __cdecl ?resize_more_?$qvector_Utev_reg_value_t____AEAAX_KAEBUtev_reg_value_t___Z(qvector<tev_reg_value_t> *__hidden this, size_t _newsize, tev_reg_value_t *x);
void __cdecl ?resize_more_?$qvector_Uthread_name_t____AEAAX_KAEBUthread_name_t___Z(qvector<thread_name_t> *__hidden this, size_t _newsize, thread_name_t *x);
void __cdecl ?resize_more_?$qvector_Utoken_t____AEAAX_KAEBUtoken_t___Z(qvector<token_t> *__hidden this, size_t _newsize, token_t *x);
void __cdecl ?resize_more_?$qvector_Utype_attr_t____AEAAX_KAEBUtype_attr_t___Z(qvector<type_attr_t> *__hidden this, size_t _newsize, type_attr_t *x);
void __cdecl ?resize_more_?$qvector_Uudt_member_t____AEAAX_KAEBUudt_member_t___Z(qvector<udt_member_t> *__hidden this, size_t _newsize, udt_member_t *x);
void __cdecl ?resize_more_?$qvector_Uupdate_bpt_info_t____AEAAX_KAEBUupdate_bpt_info_t___Z(qvector<update_bpt_info_t> *__hidden this, size_t _newsize, update_bpt_info_t *x);
void __cdecl ?resize_more_?$qvector_Uxreflist_entry_t____AEAAX_KAEBUxreflist_entry_t___Z(qvector<xreflist_entry_t> *__hidden this, size_t _newsize, xreflist_entry_t *x);
void __cdecl ?resize_more_?$qvector_V?$_qstring_D____AEAAX_KAEBV?$_qstring_D___Z(qvector<_qstring<char>> *__hidden this, size_t _newsize, _qstring<char> *x);
void __cdecl ?resize_more_?$qvector_V?$_qstring_E____AEAAX_KAEBV?$_qstring_E___Z(qvector<_qstring<unsigned char>> *__hidden this, size_t _newsize, _qstring<unsigned char> *x);
void __cdecl ?resize_more_?$qvector_V?$_qstring__W____AEAAX_KAEBV?$_qstring__W___Z(qvector<_qstring<wchar_t>> *__hidden this, size_t _newsize, _qstring<wchar_t> *x);
void __cdecl ?resize_more_?$qvector_V?$qrefcnt_t_Vsource_item_t______AEAAX_KAEBV?$qrefcnt_t_Vsource_item_t_____Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t _newsize, qrefcnt_t<source_item_t> *x);
void __cdecl ?resize_more_?$qvector_V?$qvector_H____AEAAX_KAEBV?$qvector_H___Z(qvector<qvector<int>> *__hidden this, size_t _newsize, qvector<int> *x);
void __cdecl ?resize_more_?$qvector_V?$qvector_PEBD____AEAAX_KAEBV?$qvector_PEBD___Z(qvector<qvector<const char *>> *__hidden this, size_t _newsize, qvector<const char *> *x);
void __cdecl ?resize_more_?$qvector_V?$qvector_PEBVtwinline_t______AEAAX_KAEBV?$qvector_PEBVtwinline_t_____Z(qvector<qvector<const twinline_t *>> *__hidden this, size_t _newsize, qvector<const twinline_t *> *x);
void __cdecl ?resize_more_?$qvector_V?$qvector__J____AEAAX_KAEBV?$qvector__J___Z(qvector<qvector<long long>> *__hidden this, size_t _newsize, qvector<long long> *x);
void __cdecl ?resize_more_?$qvector_Vargloc_t____AEAAX_KAEBVargloc_t___Z(qvector<argloc_t> *__hidden this, size_t _newsize, argloc_t *x);
void __cdecl ?resize_more_?$qvector_Vintmap_t____AEAAX_KAEBVintmap_t___Z(qvector<intmap_t> *__hidden this, size_t _newsize, intmap_t *x);
void __cdecl ?resize_more_?$qvector_Vnode_set_t____AEAAX_KAEBVnode_set_t___Z(qvector<node_set_t> *__hidden this, size_t _newsize, node_set_t *x);
void __cdecl ?resize_more_?$qvector_Vop_t____AEAAX_KAEBVop_t___Z(qvector<op_t> *__hidden this, size_t _newsize, op_t *x);
void __cdecl ?resize_more_?$qvector_Vrangeset_t____AEAAX_KAEBVrangeset_t___Z(qvector<rangeset_t> *__hidden this, size_t _newsize, rangeset_t *x);
void __cdecl ?resize_more_?$qvector_Vsync_source_t____AEAAX_KAEBVsync_source_t___Z(qvector<sync_source_t> *__hidden this, size_t _newsize, sync_source_t *x);
void __cdecl ?resize_more_?$qvector_Vtinfo_t____AEAAX_KAEBVtinfo_t___Z(qvector<tinfo_t> *__hidden this, size_t _newsize, tinfo_t *x);
void __cdecl ?resize_more_?$qvector_Vtryblk_t____AEAAX_KAEBVtryblk_t___Z(qvector<tryblk_t> *__hidden this, size_t _newsize, tryblk_t *x);
void __cdecl ?resize_more_?$qvector_Vtwinline_t____AEAAX_KAEBVtwinline_t___Z(qvector<twinline_t> *__hidden this, size_t _newsize, twinline_t *x);
void __cdecl ?resize_more_?$qvector_Vvalstr_t____AEAAX_KAEBVvalstr_t___Z(qvector<valstr_t> *__hidden this, size_t _newsize, valstr_t *x);
void __cdecl ?resize_more_?$qvector_W4movbpt_code_t____AEAAX_KAEBW4movbpt_code_t___Z(qvector<movbpt_code_t> *__hidden this, size_t _newsize, movbpt_code_t *x);
void __cdecl ?resize_more_?$qvector__J__AEAAX_KAEB_J_Z(qvector<long long> *__hidden this, size_t _newsize, __int64 *x);
void __cdecl ?resize_more_?$qvector__K__AEAAX_KAEB_K_Z(qvector<unsigned long long> *__hidden this, size_t _newsize, unsigned __int64 *x);
void __cdecl ?resize_more_?$qvector__N__AEAAX_KAEB_N_Z(qvector<bool> *__hidden this, size_t _newsize, bool *x);
void __cdecl ?resize_more_?$qvector__W__AEAAX_KAEB_W_Z(qvector<wchar_t> *__hidden this, size_t _newsize, __int16 *x);
void __cdecl ?resize_more_trivial_?$qvector_D__AEAAX_K_Z(qvector<char> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_E__AEAAX_K_Z(qvector<unsigned char> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_H__AEAAX_K_Z(qvector<int> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_I__AEAAX_K_Z(qvector<unsigned int> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__AEAAX_K_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__AEAAX_K_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_PEAUbpt_t____AEAAX_K_Z(qvector<bpt_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_PEAUextlang_t____AEAAX_K_Z(qvector<extlang_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_PEAUline_rendering_output_entry_t____AEAAX_K_Z(qvector<line_rendering_output_entry_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_PEAVsnapshot_t____AEAAX_K_Z(qvector<snapshot_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_PEBD__AEAAX_K_Z(qvector<const char *> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_PEBUbpt_t____AEAAX_K_Z(qvector<const bpt_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_PEBVrangeset_t____AEAAX_K_Z(qvector<const rangeset_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_PEBVtwinline_t____AEAAX_K_Z(qvector<const twinline_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uargpart_t____AEAAX_K_Z(qvector<argpart_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ubpt_t____AEAAX_K_Z(qvector<bpt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ubptaddrs_t____AEAAX_K_Z(qvector<bptaddrs_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ucall_stack_info_t____AEAAX_K_Z(qvector<call_stack_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ucatch_t____AEAAX_K_Z(qvector<catch_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ucfgopt_set_t____AEAAX_K_Z(qvector<cfgopt_set_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uchannel_redir_t____AEAAX_K_Z(qvector<channel_redir_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ucliopt_t____AEAAX_K_Z(qvector<cliopt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ucompiled_binpat_t____AEAAX_K_Z(qvector<compiled_binpat_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Udebug_event_t____AEAAX_K_Z(qvector<debug_event_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Udirentry_t____AEAAX_K_Z(qvector<direntry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Udirtree_cursor_t____AEAAX_K_Z(qvector<dirtree_cursor_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uea_name_t____AEAAX_K_Z(qvector<ea_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uedge_t____AEAAX_K_Z(qvector<edge_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uenum_member_t____AEAAX_K_Z(qvector<enum_member_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uexception_info_t____AEAAX_K_Z(qvector<exception_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ufixup_info_t____AEAAX_K_Z(qvector<fixup_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ufuncarg_t____AEAAX_K_Z(qvector<funcarg_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ugroup_crinfo_t____AEAAX_K_Z(qvector<group_crinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uidc_global_t____AEAAX_K_Z(qvector<idc_global_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uidp_desc_t____AEAAX_K_Z(qvector<idp_desc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uidp_name_t____AEAAX_K_Z(qvector<idp_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uioport_bit_t____AEAAX_K_Z(qvector<ioport_bit_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uioport_t____AEAAX_K_Z(qvector<ioport_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ujvalue_t____AEAAX_K_Z(qvector<jvalue_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____AEAAX_K_Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ukvp_t____AEAAX_K_Z(qvector<kvp_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ulochist_entry_t____AEAAX_K_Z(qvector<lochist_entry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ulowcnd_t____AEAAX_K_Z(qvector<lowcnd_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Umemory_info_t____AEAAX_K_Z(qvector<memory_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Umemreg_info_t____AEAAX_K_Z(qvector<memreg_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Umodinfo_t____AEAAX_K_Z(qvector<modinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Umovbpt_info_t____AEAAX_K_Z(qvector<movbpt_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____AEAAX_K_Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____AEAAX_K_Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Upoint_t____AEAAX_K_Z(qvector<point_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uprocess_info_t____AEAAX_K_Z(qvector<process_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uqbasic_block_t____AEAAX_K_Z(qvector<qbasic_block_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Urange_t____AEAAX_K_Z(qvector<range_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Urect_t____AEAAX_K_Z(qvector<rect_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Urefinfo_desc_t____AEAAX_K_Z(qvector<refinfo_desc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ureg_access_t____AEAAX_K_Z(qvector<reg_access_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ureg_info_t____AEAAX_K_Z(qvector<reg_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uregister_info_t____AEAAX_K_Z(qvector<register_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uregobj_t____AEAAX_K_Z(qvector<regobj_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uregval_t____AEAAX_K_Z(qvector<regval_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Urow_info_t____AEAAX_K_Z(qvector<row_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uscattered_segm_t____AEAAX_K_Z(qvector<scattered_segm_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Usegm_move_info_t____AEAAX_K_Z(qvector<segm_move_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uselection_item_t____AEAAX_K_Z(qvector<selection_item_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Usimd_info_t____AEAAX_K_Z(qvector<simd_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Usimpleline_t____AEAAX_K_Z(qvector<simpleline_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Ustkpnt_t____AEAAX_K_Z(qvector<stkpnt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Utev_info_reg_t____AEAAX_K_Z(qvector<tev_info_reg_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Utev_info_t____AEAAX_K_Z(qvector<tev_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Utev_reg_value_t____AEAAX_K_Z(qvector<tev_reg_value_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uthread_name_t____AEAAX_K_Z(qvector<thread_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Utoken_t____AEAAX_K_Z(qvector<token_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Utype_attr_t____AEAAX_K_Z(qvector<type_attr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uudt_member_t____AEAAX_K_Z(qvector<udt_member_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uupdate_bpt_info_t____AEAAX_K_Z(qvector<update_bpt_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Uxreflist_entry_t____AEAAX_K_Z(qvector<xreflist_entry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_V?$_qstring_D____AEAAX_K_Z(qvector<_qstring<char>> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_V?$_qstring_E____AEAAX_K_Z(qvector<_qstring<unsigned char>> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_V?$_qstring__W____AEAAX_K_Z(qvector<_qstring<wchar_t>> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_V?$qrefcnt_t_Vsource_item_t______AEAAX_K_Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_V?$qvector_H____AEAAX_K_Z(qvector<qvector<int>> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_V?$qvector_PEBD____AEAAX_K_Z(qvector<qvector<const char *>> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_V?$qvector_PEBVtwinline_t______AEAAX_K_Z(qvector<qvector<const twinline_t *>> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_V?$qvector__J____AEAAX_K_Z(qvector<qvector<long long>> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Vargloc_t____AEAAX_K_Z(qvector<argloc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Vintmap_t____AEAAX_K_Z(qvector<intmap_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Vnode_set_t____AEAAX_K_Z(qvector<node_set_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Vop_t____AEAAX_K_Z(qvector<op_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Vrangeset_t____AEAAX_K_Z(qvector<rangeset_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Vsync_source_t____AEAAX_K_Z(qvector<sync_source_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Vtinfo_t____AEAAX_K_Z(qvector<tinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Vtryblk_t____AEAAX_K_Z(qvector<tryblk_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Vtwinline_t____AEAAX_K_Z(qvector<twinline_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_Vvalstr_t____AEAAX_K_Z(qvector<valstr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector_W4movbpt_code_t____AEAAX_K_Z(qvector<movbpt_code_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector__J__AEAAX_K_Z(qvector<long long> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector__K__AEAAX_K_Z(qvector<unsigned long long> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector__N__AEAAX_K_Z(qvector<bool> *__hidden this, size_t _newsize);
void __cdecl ?resize_more_trivial_?$qvector__W__AEAAX_K_Z(qvector<wchar_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_D__QEAAX_K_Z(qvector<char> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_E__QEAAX_K_Z(qvector<unsigned char> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_H__QEAAX_K_Z(qvector<int> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_I__QEAAX_K_Z(qvector<unsigned int> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAX_K_Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAX_K_Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_PEAUbpt_t____QEAAX_K_Z(qvector<bpt_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_PEAUextlang_t____QEAAX_K_Z(qvector<extlang_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_PEAUline_rendering_output_entry_t____QEAAX_K_Z(qvector<line_rendering_output_entry_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_PEAVsnapshot_t____QEAAX_K_Z(qvector<snapshot_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_PEBD__QEAAX_K_Z(qvector<const char *> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_PEBUbpt_t____QEAAX_K_Z(qvector<const bpt_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_PEBVrangeset_t____QEAAX_K_Z(qvector<const rangeset_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_PEBVtwinline_t____QEAAX_K_Z(qvector<const twinline_t *> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uargpart_t____QEAAX_K_Z(qvector<argpart_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ubpt_t____QEAAX_K_Z(qvector<bpt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ubptaddrs_t____QEAAX_K_Z(qvector<bptaddrs_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ucall_stack_info_t____QEAAX_K_Z(qvector<call_stack_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ucatch_t____QEAAX_K_Z(qvector<catch_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ucfgopt_set_t____QEAAX_K_Z(qvector<cfgopt_set_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uchannel_redir_t____QEAAX_K_Z(qvector<channel_redir_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ucliopt_t____QEAAX_K_Z(qvector<cliopt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ucompiled_binpat_t____QEAAX_K_Z(qvector<compiled_binpat_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Udebug_event_t____QEAAX_K_Z(qvector<debug_event_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Udirentry_t____QEAAX_K_Z(qvector<direntry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Udirtree_cursor_t____QEAAX_K_Z(qvector<dirtree_cursor_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uea_name_t____QEAAX_K_Z(qvector<ea_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uedge_t____QEAAX_K_Z(qvector<edge_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uenum_member_t____QEAAX_K_Z(qvector<enum_member_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uexception_info_t____QEAAX_K_Z(qvector<exception_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ufixup_info_t____QEAAX_K_Z(qvector<fixup_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ufuncarg_t____QEAAX_K_Z(qvector<funcarg_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ugroup_crinfo_t____QEAAX_K_Z(qvector<group_crinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uidc_global_t____QEAAX_K_Z(qvector<idc_global_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uidp_desc_t____QEAAX_K_Z(qvector<idp_desc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uidp_name_t____QEAAX_K_Z(qvector<idp_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uioport_bit_t____QEAAX_K_Z(qvector<ioport_bit_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uioport_t____QEAAX_K_Z(qvector<ioport_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ujvalue_t____QEAAX_K_Z(qvector<jvalue_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAX_K_Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ukvp_t____QEAAX_K_Z(qvector<kvp_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ulochist_entry_t____QEAAX_K_Z(qvector<lochist_entry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ulowcnd_t____QEAAX_K_Z(qvector<lowcnd_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Umemory_info_t____QEAAX_K_Z(qvector<memory_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Umemreg_info_t____QEAAX_K_Z(qvector<memreg_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Umodinfo_t____QEAAX_K_Z(qvector<modinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Umovbpt_info_t____QEAAX_K_Z(qvector<movbpt_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAX_K_Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAX_K_Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Upoint_t____QEAAX_K_Z(qvector<point_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uprocess_info_t____QEAAX_K_Z(qvector<process_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uqbasic_block_t____QEAAX_K_Z(qvector<qbasic_block_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Urange_t____QEAAX_K_Z(qvector<range_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Urect_t____QEAAX_K_Z(qvector<rect_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Urefinfo_desc_t____QEAAX_K_Z(qvector<refinfo_desc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ureg_access_t____QEAAX_K_Z(qvector<reg_access_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ureg_info_t____QEAAX_K_Z(qvector<reg_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uregister_info_t____QEAAX_K_Z(qvector<register_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uregobj_t____QEAAX_K_Z(qvector<regobj_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uregval_t____QEAAX_K_Z(qvector<regval_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Urow_info_t____QEAAX_K_Z(qvector<row_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uscattered_segm_t____QEAAX_K_Z(qvector<scattered_segm_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Usegm_move_info_t____QEAAX_K_Z(qvector<segm_move_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uselection_item_t____QEAAX_K_Z(qvector<selection_item_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Usimd_info_t____QEAAX_K_Z(qvector<simd_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Usimpleline_t____QEAAX_K_Z(qvector<simpleline_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Ustkpnt_t____QEAAX_K_Z(qvector<stkpnt_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Utev_info_reg_t____QEAAX_K_Z(qvector<tev_info_reg_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Utev_info_t____QEAAX_K_Z(qvector<tev_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Utev_reg_value_t____QEAAX_K_Z(qvector<tev_reg_value_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uthread_name_t____QEAAX_K_Z(qvector<thread_name_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Utoken_t____QEAAX_K_Z(qvector<token_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Utype_attr_t____QEAAX_K_Z(qvector<type_attr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uudt_member_t____QEAAX_K_Z(qvector<udt_member_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uupdate_bpt_info_t____QEAAX_K_Z(qvector<update_bpt_info_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Uxreflist_entry_t____QEAAX_K_Z(qvector<xreflist_entry_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_V?$_qstring_D____QEAAX_K_Z(qvector<_qstring<char>> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_V?$_qstring_E____QEAAX_K_Z(qvector<_qstring<unsigned char>> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_V?$_qstring__W____QEAAX_K_Z(qvector<_qstring<wchar_t>> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAX_K_Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_V?$qvector_H____QEAAX_K_Z(qvector<qvector<int>> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_V?$qvector_PEBD____QEAAX_K_Z(qvector<qvector<const char *>> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_V?$qvector_PEBVtwinline_t______QEAAX_K_Z(qvector<qvector<const twinline_t *>> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_V?$qvector__J____QEAAX_K_Z(qvector<qvector<long long>> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Vargloc_t____QEAAX_K_Z(qvector<argloc_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Vintmap_t____QEAAX_K_Z(qvector<intmap_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Vnode_set_t____QEAAX_K_Z(qvector<node_set_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Vop_t____QEAAX_K_Z(qvector<op_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Vrangeset_t____QEAAX_K_Z(qvector<rangeset_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Vsync_source_t____QEAAX_K_Z(qvector<sync_source_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Vtinfo_t____QEAAX_K_Z(qvector<tinfo_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Vtryblk_t____QEAAX_K_Z(qvector<tryblk_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Vtwinline_t____QEAAX_K_Z(qvector<twinline_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_Vvalstr_t____QEAAX_K_Z(qvector<valstr_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector_W4movbpt_code_t____QEAAX_K_Z(qvector<movbpt_code_t> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector__J__QEAAX_K_Z(qvector<long long> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector__K__QEAAX_K_Z(qvector<unsigned long long> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector__N__QEAAX_K_Z(qvector<bool> *__hidden this, size_t _newsize);
void __cdecl ?resize_noinit_?$qvector__W__QEAAX_K_Z(qvector<wchar_t> *__hidden this, size_t _newsize);
direntry_t __cdecl ?resolve_cursor_dirtree_t__QEBA?AUdirentry_t__AEBUdirtree_cursor_t___Z(const dirtree_t *__hidden this, const dirtree_cursor_t *cursor);
uval_t __cdecl ?resolve_name_idc_resolver_t__UEAA_KPEBD_Z(idc_resolver_t *__hidden this, const char *name);
direntry_t __cdecl ?resolve_path_dirtree_t__QEBA?AUdirentry_t__PEBD_Z(const dirtree_t *__hidden this, const char *path);
void __cdecl ?restore_ctxflags_outctx_base_t__QEAAXH_Z(outctx_base_t *__hidden this, int saved_flags);
void __cdecl ?restore_edges_mutable_graph_t__AEAAXH_N_Z(mutable_graph_t *__hidden this, int first_reserver_node, bool failed);
drc_t __cdecl ?resume_debugger_t__QEAA?AW4drc_t__PEBUdebug_event_t__PEAV?$_qstring_D___Z(debugger_t *__hidden this, const debug_event_t *event, qstring *errbuf);
void __cdecl ?rethrow_nested_nested_exception_std__QEBAXXZ(const std::nested_exception *__hidden this);
ssize_t __cdecl ?retrieve_cmt_outctx_base_t__UEAA_JXZ(outctx_base_t *__hidden this);
ssize_t __cdecl ?retrieve_cmt_outctx_t__UEAA_JXZ(outctx_t *__hidden this);
ssize_t __cdecl ?retrieve_name_outctx_base_t__UEAA_JPEAV?$_qstring_D__PEAE_Z(outctx_base_t *__hidden this, qstring *, color_t *);
ssize_t __cdecl ?retrieve_name_outctx_t__UEAA_JPEAV?$_qstring_D__PEAE_Z(outctx_t *__hidden this, qstring *, color_t *);
void __cdecl ?reverse_edges_mutable_graph_t__AEAAXAEBUedgeset_t__AEAUedge_infos_t__AEAVnode_set_t___Z(mutable_graph_t *__hidden this, const edgeset_t *back_edges, edge_infos_t *self_edges, node_set_t *entries);
void __cdecl ?reverse_layout_edge_info_t__QEAAXXZ(edge_info_t *__hidden this);
int __cdecl ?rexec_debugger_t__QEAAHPEBD_Z(debugger_t *__hidden this, const char *cmdline);
size_t __cdecl ?rfind_?$_qstring_D__QEBA_KD_K_Z(const _qstring<char> *__hidden this, char c, size_t pos);
size_t __cdecl ?rfind_?$_qstring_E__QEBA_KE_K_Z(const _qstring<unsigned char> *__hidden this, unsigned __int8 c, size_t pos);
size_t __cdecl ?rfind_?$_qstring__W__QEBA_K_W_K_Z(const _qstring<wchar_t> *__hidden this, __int16 c, size_t pos);
std::basic_string<char>::size_type __cdecl ?rfind_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char> *_Right, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?rfind_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KD_K_Z(const std::basic_string<char> *__hidden this, char _Ch, const std::basic_string<char>::size_type _Off);
std::basic_string<char>::size_type __cdecl ?rfind_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K1_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Count);
std::basic_string<char>::size_type __cdecl ?rfind_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KQEBD_K_Z(const std::basic_string<char> *__hidden this, char *const _Ptr, const std::basic_string<char>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?rfind_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t> *_Right, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?rfind_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K1_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char16_t>::size_type __cdecl ?rfind_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KQEB_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char16_t>::size_type __cdecl ?rfind_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_K_S_K_Z(const std::basic_string<char16_t> *__hidden this, __int16 _Ch, const std::basic_string<char16_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?rfind_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t> *_Right, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?rfind_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K1_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<char32_t>::size_type __cdecl ?rfind_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KQEB_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 *const _Ptr, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<char32_t>::size_type __cdecl ?rfind_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_K_U_K_Z(const std::basic_string<char32_t> *__hidden this, __int32 _Ch, const std::basic_string<char32_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?rfind_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KAEBV12__K_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t> *_Right, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?rfind_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K1_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Count);
std::basic_string<wchar_t>::size_type __cdecl ?rfind_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KQEB_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 *const _Ptr, const std::basic_string<wchar_t>::size_type _Off);
std::basic_string<wchar_t>::size_type __cdecl ?rfind_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_K_W_K_Z(const std::basic_string<wchar_t> *__hidden this, __int16 _Ch, const std::basic_string<wchar_t>::size_type _Off);
dterr_t __cdecl ?rmdir_dirtree_t__QEAA?AW4dterr_t__PEBD_Z(dirtree_t *__hidden this, const char *path);
dirtree_cursor_t ?root_cursor_dirtree_cursor_t__SA?AU1_XZ(void);
char ?round_error_?$numeric_limits_C_std__SACXZ(void);
char ?round_error_?$numeric_limits_D_std__SADXZ(void);
unsigned __int8 ?round_error_?$numeric_limits_E_std__SAEXZ(void);
__int16 ?round_error_?$numeric_limits_F_std__SAFXZ(void);
unsigned __int16 ?round_error_?$numeric_limits_G_std__SAGXZ(void);
int ?round_error_?$numeric_limits_H_std__SAHXZ(void);
unsigned int ?round_error_?$numeric_limits_I_std__SAIXZ(void);
__int32 ?round_error_?$numeric_limits_J_std__SAJXZ(void);
unsigned __int32 ?round_error_?$numeric_limits_K_std__SAKXZ(void);
float ?round_error_?$numeric_limits_M_std__SAMXZ(void);
double ?round_error_?$numeric_limits_N_std__SANXZ(void);
long double ?round_error_?$numeric_limits_O_std__SAOXZ(void);
__int64 ?round_error_?$numeric_limits__J_std__SA_JXZ(void);
unsigned __int64 ?round_error_?$numeric_limits__K_std__SA_KXZ(void);
bool ?round_error_?$numeric_limits__N_std__SA_NXZ(void);
__int16 ?round_error_?$numeric_limits__S_std__SA_SXZ(void);
__int32 ?round_error_?$numeric_limits__U_std__SA_UXZ(void);
__int16 ?round_error_?$numeric_limits__W_std__SA_WXZ(void);
_qstring<char> *__cdecl ?rtrim_?$_qstring_D__QEAAAEAV1_D_Z(_qstring<char> *__hidden this, char blank);
_qstring<unsigned char> *__cdecl ?rtrim_?$_qstring_E__QEAAAEAV1_E_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 blank);
_qstring<wchar_t> *__cdecl ?rtrim_?$_qstring__W__QEAAAEAV1__W_Z(_qstring<wchar_t> *__hidden this, __int16 blank);
bool __cdecl ?run_plugmod_t__UEAA_N_K_Z(plugmod_t *__hidden this, size_t arg);
bool __cdecl ?run_ui_request_t__UEAA_NXZ(ui_request_t *__hidden this);
bool __cdecl ?same_value_jump_pattern_t__QEAA_NAEBVop_t__H_Z(jump_pattern_t *__hidden this, const op_t *op, int r_i);
bool __cdecl ?same_value_impl_jump_pattern_t__IEAA_NAEBVop_t__H_Z(jump_pattern_t *__hidden this, const op_t *op, int r_i);
bool __cdecl ?save_dirtree_t__QEBA_NXZ(const dirtree_t *__hidden this);
void __cdecl ?save_lochist_t__QEBAXXZ(const lochist_t *__hidden this);
scattered_aloc_t *__cdecl ?scattered_argloc_t__QEAAAEAVscattered_aloc_t__XZ(argloc_t *__hidden this);
const scattered_aloc_t *__cdecl ?scattered_argloc_t__QEBAAEBVscattered_aloc_t__XZ(const argloc_t *__hidden this);
bool __cdecl ?seek_lochist_t__QEAA_NI_N_Z(lochist_t *__hidden this, uint32 index, bool try_to_unhide);
fpos_t __cdecl ?seekpos_?$fpos_U_Mbstatet___std__QEBA_JXZ(const std::fpos<_Mbstatet> *__hidden this);
seh_t *__cdecl ?seh_tryblk_t__QEAAAEAUseh_t__XZ(tryblk_t *__hidden this);
const seh_t *__cdecl ?seh_tryblk_t__QEBAAEBUseh_t__XZ(const tryblk_t *__hidden this);
void __cdecl ?select_chooser_multi_t__UEBAXAEBV?$qvector__K___Z(const chooser_multi_t *__hidden this, const sizevec_t *);
void __cdecl ?select_chooser_t__UEBAX_J_Z(const chooser_t *__hidden this, ssize_t);
drc_t __cdecl ?send_ioctl_debugger_t__QEAA?AW4drc_t__HPEBX_KPEAPEAXPEA_JPEAV?$_qstring_D___Z(debugger_t *__hidden this, int fn, const void *buf, size_t size, void **poutbuf, ssize_t *poutsize, qstring *errbuf);
bool __cdecl ?serialize_bitfield_type_data_t__QEBA_NPEAV?$_qstring_E__E_Z(const bitfield_type_data_t *__hidden this, qtype *type, type_t mods);
void __cdecl ?serialize_enumplace_t__UEBAXPEAVbytevec_t___Z(const enumplace_t *__hidden this, bytevec_t *out);
void __cdecl ?serialize_graph_location_info_t__QEBAXPEAVbytevec_t___Z(const graph_location_info_t *__hidden this, bytevec_t *out);
void __cdecl ?serialize_hexplace_t__UEBAXPEAVbytevec_t___Z(const hexplace_t *__hidden this, bytevec_t *out);
void __cdecl ?serialize_idaplace_t__UEBAXPEAVbytevec_t___Z(const idaplace_t *__hidden this, bytevec_t *out);
void __cdecl ?serialize_lochist_entry_t__QEBAXPEAVbytevec_t___Z(const lochist_entry_t *__hidden this, bytevec_t *out);
void __cdecl ?serialize_place_t__UEBAXPEAVbytevec_t___Z(const place_t *__hidden this, bytevec_t *out);
void __cdecl ?serialize_renderer_info_pos_t__QEBAXPEAVbytevec_t___Z(const renderer_info_pos_t *__hidden this, bytevec_t *out);
void __cdecl ?serialize_simpleline_place_t__UEBAXPEAVbytevec_t___Z(const simpleline_place_t *__hidden this, bytevec_t *out);
void __cdecl ?serialize_structplace_t__UEBAXPEAVbytevec_t___Z(const structplace_t *__hidden this, bytevec_t *out);
bool __cdecl ?serialize_tinfo_t__QEBA_NPEAV?$_qstring_E__00H_Z(const tinfo_t *__hidden this, qtype *type, qtype *fields, qtype *fldcmts, int sudt_flags);
void __cdecl ?set_callregs_t__QEAAXW4argreg_policy_t__PEBH1_Z(callregs_t *__hidden this, argreg_policy_t _policy, const int *gprs, const int *fprs);
void __cdecl ?set_custom_data_type_ids_t__QEAAX_K_Z(custom_data_type_ids_t *__hidden this, tid_t tid);
void __cdecl ?set_fixup_data_t__QEBAX_K_Z(const fixup_data_t *__hidden this, ea_t source);
bool __cdecl ?set_func_item_iterator_t__QEAA_NPEAVfunc_t___K_Z(func_item_iterator_t *__hidden this, func_t *pfn, ea_t _ea);
bool __cdecl ?set_func_parent_iterator_t__QEAA_NPEAVfunc_t___Z(func_parent_iterator_t *__hidden this, func_t *_fnt);
bool __cdecl ?set_func_tail_iterator_t__QEAA_NPEAVfunc_t___K_Z(func_tail_iterator_t *__hidden this, func_t *_pfn, ea_t ea);
void __cdecl ?set_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?set_lochist_t__QEAAXIAEBUlochist_entry_t___Z(lochist_t *__hidden this, uint32 index, const lochist_entry_t *e);
bool __cdecl ?set_netnode__QEAA_NPEBX_K_Z(netnode *__hidden this, const void *value, size_t length);
void __cdecl ?set_node_ordering_t__QEAAXHH_Z(node_ordering_t *__hidden this, int _node, int num);
void __cdecl ?set_abs_bpt_bpt_location_t__QEAAX_K_Z(bpt_location_t *__hidden this, ea_t a);
void __cdecl ?set_abs_bpt_bpt_t__QEAAX_K_Z(bpt_t *__hidden this, ea_t a);
void __cdecl ?set_aflags_initialized_printop_t__QEAAX_N_Z(printop_t *__hidden this, bool v);
void __cdecl ?set_alignment_struc_t__QEAAXH_Z(struc_t *__hidden this, int shift);
void __cdecl ?set_all_bits_bytevec_t__QEAAX_K_Z(bytevec_t *__hidden this, size_t nbits);
void __cdecl ?set_arr_jvalue_t__QEAAXPEAUjarr_t___Z(jvalue_t *__hidden this, jarr_t *a);
void __cdecl ?set_ask_item_attrs_chooser_base_t__QEAAX_N_Z(chooser_base_t *__hidden this, bool enable);
bool __cdecl ?set_attr_tinfo_t__QEAA_NAEBUtype_attr_t___N_Z(tinfo_t *__hidden this, const type_attr_t *ta, bool may_overwrite);
bool __cdecl ?set_attrs_tinfo_t__QEAA_NPEAV?$qvector_Utype_attr_t_____Z(tinfo_t *__hidden this, type_attrs_t *tav);
void __cdecl ?set_badloc_argloc_t__QEAAXXZ(argloc_t *__hidden this);
void __cdecl ?set_base_fixup_data_t__QEAAX_K_Z(fixup_data_t *__hidden this, ea_t new_base);
void __cdecl ?set_baseclass_udt_member_t__QEAAXXZ(udt_member_t *__hidden this);
void __cdecl ?set_bin_state_outctx_t__QEAAXH_Z(outctx_t *__hidden this, int value);
void __cdecl ?set_bit_bytevec_t__QEAAX_K_Z(bytevec_t *__hidden this, size_t bit);
void __cdecl ?set_bits_bytevec_t__QEAAXAEBV1__Z(bytevec_t *__hidden this, const bytevec_t *b);
void __cdecl ?set_bits_bytevec_t__QEAAX_K0_Z(bytevec_t *__hidden this, size_t low, size_t high);
void __cdecl ?set_block_state_highlighter_cbs_t__UEAAXH_Z(highlighter_cbs_t *__hidden this, int32);
void __cdecl ?set_bool_jvalue_t__QEAAX_N_Z(jvalue_t *__hidden this, bool b);
bptaddr_t *__cdecl ?set_bpt_debug_event_t__QEAAAEAUbptaddr_t__XZ(debug_event_t *__hidden this);
bool __cdecl ?set_button_value_form_actions_t__QEAA_NHPEBV?$_qstring_D___Z(form_actions_t *__hidden this, int field_id, const qstring *val);
bytevec_t *__cdecl ?set_bytes_regval_t__QEAAAEAVbytevec_t__XZ(regval_t *__hidden this);
void __cdecl ?set_bytes_regval_t__QEAAXAEBVbytevec_t___Z(regval_t *__hidden this, const bytevec_t *v);
void __cdecl ?set_bytes_regval_t__QEAAXPEBE_K_Z(regval_t *__hidden this, const uchar *data, size_t size);
void __cdecl ?set_callback_abstract_graph_t__QEAAXP6A_JPEAXHPEAD_Z0_Z(abstract_graph_t *__hidden this, hook_cb_t *_callback, void *_ud);
bool __cdecl ?set_cbgroup_value_form_actions_t__QEAA_NHPEBG_Z(form_actions_t *__hidden this, int field_id, const ushort *val);
bool __cdecl ?set_checkbox_value_form_actions_t__QEAA_NHPEBG_Z(form_actions_t *__hidden this, int field_id, const ushort *val);
bool __cdecl ?set_chooser_value_form_actions_t__QEAA_NHPEBV?$qvector__K___Z(form_actions_t *__hidden this, int field_id, const sizevec_t *val);
bool __cdecl ?set_cnd_elang_bpt_t__QEAA_NPEBD_Z(bpt_t *__hidden this, const char *name);
ssize_t __cdecl ?set_code16_mode_processor_t__SA_J_K_N_Z(ea_t ea, bool code16);
bool __cdecl ?set_color_value_form_actions_t__QEAA_NHPEBI_Z(form_actions_t *__hidden this, int field_id, const bgcolor_t *val);
bool __cdecl ?set_combobox_value_form_actions_t__QEAA_NHPEBH_Z(form_actions_t *__hidden this, int field_id, const int *val);
bool __cdecl ?set_combobox_value_form_actions_t__QEAA_NHPEBV?$_qstring_D___Z(form_actions_t *__hidden this, int field_id, const qstring *val);
void __cdecl ?set_comment_addr_outctx_base_t__QEAAX_K_Z(outctx_base_t *__hidden this, ea_t ea);
void __cdecl ?set_comorg_segment_t__QEAAXXZ(segment_t *__hidden this);
void __cdecl ?set_cond_bpt_t__QEAAXPEBD_Z(bpt_t *__hidden this, const char *cnd);
void __cdecl ?set_const_tinfo_t__QEAAXXZ(tinfo_t *__hidden this);
catchvec_t *__cdecl ?set_cpp_tryblk_t__QEAAAEAV?$qvector_Ucatch_t____XZ(tryblk_t *__hidden this);
void __cdecl ?set_current_lochist_t__QEAAXAEBUlochist_entry_t___Z(lochist_t *__hidden this, const lochist_entry_t *e);
void __cdecl ?set_custom_layout_mutable_graph_t__QEBAXXZ(const mutable_graph_t *__hidden this);
void __cdecl ?set_debugger_segm_segment_t__QEAAX_N_Z(segment_t *__hidden this, bool debseg);
bool __cdecl ?set_declalign_tinfo_t__QEAA_NE_Z(tinfo_t *__hidden this, uchar declalign);
void __cdecl ?set_deleted_node_mutable_graph_t__QEAAXH_Z(mutable_graph_t *__hidden this, int node);
void __cdecl ?set_dirty_til_t__QEAAXXZ(til_t *__hidden this);
void __cdecl ?set_dlbind_opnd_outctx_base_t__QEAAXXZ(outctx_base_t *__hidden this);
void __cdecl ?set_ea_argloc_t__QEAAX_K_Z(argloc_t *__hidden this, ea_t _ea);
bool __cdecl ?set_ea_func_tail_iterator_t__QEAA_N_K_Z(func_tail_iterator_t *__hidden this, ea_t ea);
bool __cdecl ?set_ea_value_form_actions_t__QEAA_NHPEB_K_Z(form_actions_t *__hidden this, int field_id, const ea_t *val);
bool __cdecl ?set_edge_mutable_graph_t__UEAA_NUedge_t__PEBUedge_info_t___Z(mutable_graph_t *__hidden this, edge_t e, const edge_info_t *ei);
void __cdecl ?set_eid_debug_event_t__QEAAXW4event_id_t___Z(debug_event_t *__hidden this, event_id_t id);
void __cdecl ?set_elbase_switch_info_t__QEAAX_K_Z(switch_info_t *__hidden this, ea_t base);
excinfo_t *__cdecl ?set_exception_debug_event_t__QEAAAEAUexcinfo_t__XZ(debug_event_t *__hidden this);
void __cdecl ?set_exception_info_debugger_t__QEAAXPEBUexception_info_t__H_Z(debugger_t *__hidden this, const exception_info_t *info, int qty);
void __cdecl ?set_exit_code_debug_event_t__QEAAXW4event_id_t__H_Z(debug_event_t *__hidden this, event_id_t id, int code);
void __cdecl ?set_expr_switch_info_t__QEAAXHE_Z(switch_info_t *__hidden this, int r, op_dtype_t dt);
void __cdecl ?set_extdef_fixup_data_t__QEAAXXZ(fixup_data_t *__hidden this);
void __cdecl ?set_float_idc_value_t__QEAAXAEBUfpvalue_t___Z(idc_value_t *__hidden this, const fpvalue_t *f);
void __cdecl ?set_float_regval_t__QEAAXAEBUfpvalue_t___Z(regval_t *__hidden this, const fpvalue_t *x);
bool __cdecl ?set_focused_field_form_actions_t__UEAA_NH_Z(form_actions_t *__hidden this, int field_id);
void __cdecl ?set_gen_cmt_outctx_base_t__QEAAX_N_Z(outctx_base_t *__hidden this, bool on);
void __cdecl ?set_gen_demangled_label_outctx_base_t__QEAAXXZ(outctx_base_t *__hidden this);
void __cdecl ?set_gen_label_outctx_base_t__QEAAXXZ(outctx_base_t *__hidden this);
void __cdecl ?set_gen_xrefs_outctx_base_t__QEAAX_N_Z(outctx_base_t *__hidden this, bool on);
void __cdecl ?set_ghost_struc_t__QEAAX_N_Z(struc_t *__hidden this, bool _is_ghost);
void __cdecl ?set_graph_groups_mutable_graph_t__QEBAXXZ(const mutable_graph_t *__hidden this);
void __cdecl ?set_header_segm_segment_t__QEAAX_N_Z(segment_t *__hidden this, bool on);
void __cdecl ?set_hidden_segtype_segment_t__QEAAX_N_Z(segment_t *__hidden this, bool hide);
void __cdecl ?set_id_dirtree_t__QEAAXPEBD_Z(dirtree_t *__hidden this, const char *nm);
bool __cdecl ?set_ident_value_form_actions_t__QEAA_NHPEBV?$_qstring_D___Z(form_actions_t *__hidden this, int field_id, const qstring *val);
const char *__cdecl ?set_idp_options_processor_t__SAPEBDPEBDHPEBX_N_Z(const char *keyword, int vtype, const void *value, bool idb_loaded);
void __cdecl ?set_ignore_micro_ignore_micro_t__QEAAX_KE_Z(ignore_micro_t *__hidden this, ea_t ea, uchar im_type);
bool __cdecl ?set_inds_callregs_t__AEBA_NPEAH0H_Z(const callregs_t *__hidden this, int *p_ind1, int *p_ind2, int ind);
qstring *__cdecl ?set_info_debug_event_t__QEAAAEAV?$_qstring_D__W4event_id_t___Z(debug_event_t *__hidden this, event_id_t id);
void __cdecl ?set_int64_idc_value_t__QEAAX_J_Z(idc_value_t *__hidden this, int64 v);
bool __cdecl ?set_int64_value_form_actions_t__QEAA_NHPEB_J_Z(form_actions_t *__hidden this, int field_id, const int64 *val);
void __cdecl ?set_int_regval_t__QEAAX_K_Z(regval_t *__hidden this, uint64 x);
void __cdecl ?set_jtable_element_size_switch_info_t__QEAAXH_Z(switch_info_t *__hidden this, int size);
void __cdecl ?set_jtable_size_switch_info_t__QEAAXH_Z(switch_info_t *__hidden this, int size);
bool __cdecl ?set_label_value_form_actions_t__QEAA_NHPEBD_Z(form_actions_t *__hidden this, int field_id, const char *val);
void __cdecl ?set_loader_segm_segment_t__QEAAX_N_Z(segment_t *__hidden this, bool ldrseg);
void __cdecl ?set_long_idc_value_t__QEAAX_J_Z(idc_value_t *__hidden this, sval_t v);
bool __cdecl ?set_long_netnode__QEAA_N_K_Z(netnode *__hidden this, nodeidx_t x);
void __cdecl ?set_method_udt_member_t__QEAAXXZ(udt_member_t *__hidden this);
bool __cdecl ?set_methods_tinfo_t__QEAA_NAEAUudtmembervec_t___Z(tinfo_t *__hidden this, udtmembervec_t *methods);
void __cdecl ?set_modifiers_tinfo_t__QEAAXE_Z(tinfo_t *__hidden this, type_t mod);
modinfo_t *__cdecl ?set_modinfo_debug_event_t__QEAAAEAUmodinfo_t__W4event_id_t___Z(debug_event_t *__hidden this, event_id_t id);
bool __cdecl ?set_moved_jump_pattern_t__QEBA_NAEBVop_t__0AEAV?$qvector_Vop_t____EE_Z(const jump_pattern_t *__hidden this, const op_t *dst, const op_t *src, tracked_regs_t *_regs, op_dtype_t real_dst_dtype, op_dtype_t real_src_dtype);
tinfo_code_t __cdecl ?set_named_type_tinfo_t__QEAA?AW4tinfo_code_t__PEAUtil_t__PEBDH_Z(tinfo_t *__hidden this, til_t *til, const char *name, int ntf_flags);
void __cdecl ?set_new_cmt_type_mods_t__QEAAXAEBV?$_qstring_D___Z(type_mods_t *__hidden this, const qstring *c);
void __cdecl ?set_new_name_type_mods_t__QEAAXAEBV?$_qstring_D___Z(type_mods_t *__hidden this, const qstring *n);
void __cdecl ?set_new_type_type_mods_t__QEAAXAEBVtinfo_t___Z(type_mods_t *__hidden this, const tinfo_t *t);
void __cdecl ?set_node_group_mutable_graph_t__QEAAXHH_Z(mutable_graph_t *__hidden this, int node, int group);
bool __cdecl ?set_nrect_mutable_graph_t__UEAA_NHAEBUrect_t___Z(mutable_graph_t *__hidden this, int n, const rect_t *r);
void __cdecl ?set_num_jvalue_t__QEAAX_J_Z(jvalue_t *__hidden this, int64 i);
tinfo_code_t __cdecl ?set_numbered_type_tinfo_t__QEAA?AW4tinfo_code_t__PEAUtil_t__IHPEBD_Z(tinfo_t *__hidden this, til_t *til, uint32 ord, int ntf_flags, const char *name);
void __cdecl ?set_ob_ok_segment_t__QEAAXXZ(segment_t *__hidden this);
void __cdecl ?set_obj_jvalue_t__QEAAXPEAUjobj_t___Z(jvalue_t *__hidden this, jobj_t *o);
void __cdecl ?set_oneline_valstr_t__AEAAXPEBDH_Z(valstr_t *__hidden this, const char *line, int len);
bool __cdecl ?set_op_tinfo_argtinfo_helper_t__UEAA_NAEBVinsn_t__AEBVop_t__AEBVtinfo_t__PEBD_Z(argtinfo_helper_t *__hidden this, const insn_t *insn, const op_t *x, const tinfo_t *tif, const char *name);
void __cdecl ?set_open_cmt_ida_syntax_highlighter_t__QEAAXPEBD_Z(ida_syntax_highlighter_t *__hidden this, const char *begin);
const char *__cdecl ?set_options_srcinfo_provider_t__UEAAPEBDPEBDHPEBX_Z(srcinfo_provider_t *__hidden this, const char *keyword, int value_type, const void *value);
bool __cdecl ?set_path_value_form_actions_t__QEAA_NHPEBD_Z(form_actions_t *__hidden this, int field_id, const char *val);
int __cdecl ?set_place_linearray_t__QEAAHPEBVplace_t___Z(linearray_t *__hidden this, const place_t *new_at);
void __cdecl ?set_place_lochist_entry_t__QEAAXAEBVplace_t___Z(lochist_entry_t *__hidden this, const place_t *p);
void __cdecl ?set_place_lochist_entry_t__QEAAXPEBVplace_t___Z(lochist_entry_t *__hidden this, const place_t *p);
ssize_t __cdecl ?set_proc_options_processor_t__SA_JPEBDH_Z(const char *options, int confidence);
void __cdecl ?set_pvoid_idc_value_t__QEAAXPEAX_Z(idc_value_t *__hidden this, void *p);
bool __cdecl ?set_radiobutton_value_form_actions_t__QEAA_NHPEBG_Z(form_actions_t *__hidden this, int field_id, const ushort *val);
bool __cdecl ?set_range_func_item_iterator_t__QEAA_N_K0_Z(func_item_iterator_t *__hidden this, ea_t ea1, ea_t ea2);
bool __cdecl ?set_range_func_tail_iterator_t__QEAA_N_K0_Z(func_tail_iterator_t *__hidden this, ea_t ea1, ea_t ea2);
bool __cdecl ?set_rbgroup_value_form_actions_t__QEAA_NHPEBG_Z(form_actions_t *__hidden this, int field_id, const ushort *val);
void __cdecl ?set_reg1_argloc_t__QEAAXHH_Z(argloc_t *__hidden this, int reg, int off);
void __cdecl ?set_reg2_argloc_t__QEAAXHH_Z(argloc_t *__hidden this, int _reg1, int _reg2);
void __cdecl ?set_regarray_callregs_t__CAXPEAV?$qvector_H__PEBH_Z(intvec_t *regvec, const int *regarray);
void __cdecl ?set_regclasses_dynamic_register_set_t__QEAAXPEAPEBD_Z(dynamic_register_set_t *__hidden this, const char **register_classes);
void __cdecl ?set_rel_bpt_bpt_location_t__QEAAXPEBD_K_Z(bpt_location_t *__hidden this, const char *mod, uval_t _offset);
void __cdecl ?set_rel_bpt_bpt_t__QEAAXPEBD_K_Z(bpt_t *__hidden this, const char *mod, uval_t o);
drc_t __cdecl ?set_resume_mode_debugger_t__QEAA?AW4drc_t__HW4resume_mode_t__PEAV?$_qstring_D___Z(debugger_t *__hidden this, thid_t tid, resume_mode_t resmod, qstring *errbuf);
void __cdecl ?set_root_cursor_dirtree_cursor_t__QEAAXXZ(dirtree_cursor_t *__hidden this);
bool __cdecl ?set_segment_value_form_actions_t__QEAA_NHPEB_K_Z(form_actions_t *__hidden this, int field_id, const sel_t *val);
seh_t *__cdecl ?set_seh_tryblk_t__QEAAAEAUseh_t__XZ(tryblk_t *__hidden this);
void __cdecl ?set_sel_fixup_data_t__QEAAXPEBVsegment_t___Z(fixup_data_t *__hidden this, const segment_t *seg);
void __cdecl ?set_shift_switch_info_t__QEAAXH_Z(switch_info_t *__hidden this, int shift);
void __cdecl ?set_shown_op_t__QEAAXXZ(op_t *__hidden this);
bool __cdecl ?set_signed_value_form_actions_t__QEAA_NHPEB_J_Z(form_actions_t *__hidden this, int field_id, const sval_t *val);
void __cdecl ?set_spoiled_jump_pattern_t__QEBAXPEAV?$qvector_Vop_t____AEBVop_t___Z(const jump_pattern_t *__hidden this, tracked_regs_t *_regs, const op_t *op);
void __cdecl ?set_spoiled_jump_pattern_t__SAXPEAV?$qvector_Vop_t_____Z(tracked_regs_t *_regs);
void __cdecl ?set_src_bpt_bpt_location_t__QEAAXPEBDH_Z(bpt_location_t *__hidden this, const char *fn, int _lineno);
void __cdecl ?set_src_bpt_bpt_t__QEAAXPEBDH_Z(bpt_t *__hidden this, const char *fn, int lineno);
void __cdecl ?set_stkoff_argloc_t__QEAAX_J_Z(argloc_t *__hidden this, sval_t off);
void __cdecl ?set_str_jvalue_t__QEAAXPEAV?$_qstring_D___Z(jvalue_t *__hidden this, qstring *s);
void __cdecl ?set_string_idc_value_t__QEAAXAEBV?$_qstring_D___Z(idc_value_t *__hidden this, const qstring *_str);
void __cdecl ?set_string_idc_value_t__QEAAXPEBD_Z(idc_value_t *__hidden this, const char *_str);
void __cdecl ?set_string_idc_value_t__QEAAXPEBD_K_Z(idc_value_t *__hidden this, const char *_str, size_t len);
bool __cdecl ?set_string_value_form_actions_t__QEAA_NHPEBD_Z(form_actions_t *__hidden this, int field_id, const char *val);
bool __cdecl ?set_string_value_form_actions_t__QEAA_NHPEBV?$_qstring_D___Z(form_actions_t *__hidden this, int field_id, const qstring *val);
void __cdecl ?set_style_highlighter_cbs_t__UEAAXHHW4syntax_highlight_style___Z(highlighter_cbs_t *__hidden this, int32, int32, syntax_highlight_style);
void __cdecl ?set_sym_bpt_bpt_location_t__QEAAXPEBD_K_Z(bpt_location_t *__hidden this, const char *_symbol, uval_t _offset);
void __cdecl ?set_sym_bpt_bpt_t__QEAAXPEBD_K_Z(bpt_t *__hidden this, const char *sym, uval_t o);
tinfo_code_t __cdecl ?set_symbol_type_tinfo_t__QEAA?AW4tinfo_code_t__PEAUtil_t__PEBDH_Z(tinfo_t *__hidden this, til_t *til, const char *name, int ntf_flags);
void __cdecl ?set_target_sel_fixup_data_t__QEAAXXZ(fixup_data_t *__hidden this);
bool __cdecl ?set_text_value_form_actions_t__QEAA_NHPEBUtextctrl_info_t___Z(form_actions_t *__hidden this, int field_id, const textctrl_info_t *val);
void __cdecl ?set_ti_initialized_printop_t__QEAAX_N_Z(printop_t *__hidden this, bool v);
bool __cdecl ?set_trace_action_bpt_t__QEAA_N_NH_Z(bpt_t *__hidden this, bool enable, int trace_types);
void __cdecl ?set_type_fixup_data_t__QEAAXG_Z(fixup_data_t *__hidden this, fixup_type_t type_);
void __cdecl ?set_type_refinfo_t__QEAAXE_Z(refinfo_t *__hidden this, reftype_t rt);
void __cdecl ?set_type_and_flags_fixup_data_t__QEAAXGI_Z(fixup_data_t *__hidden this, fixup_type_t type_, uint32 flags_);
bool __cdecl ?set_uint64_value_form_actions_t__QEAA_NHPEB_K_Z(form_actions_t *__hidden this, int field_id, const uint64 *val);
void __cdecl ?set_unaligned_udt_member_t__QEAAXXZ(udt_member_t *__hidden this);
void __cdecl ?set_unavailable_regval_t__QEAAXXZ(regval_t *__hidden this);
bool __cdecl ?set_unsigned_value_form_actions_t__QEAA_NHPEB_K_Z(form_actions_t *__hidden this, int field_id, const uval_t *val);
void __cdecl ?set_unused_fixup_data_t__QEAAXXZ(fixup_data_t *__hidden this);
void __cdecl ?set_userdata_linearray_t__QEAAXPEAX_Z(linearray_t *__hidden this, void *userd);
void __cdecl ?set_val_lex_value_t__QEAAX_J_N_Z(lex_value_t *__hidden this, int64 v, bool _is_unsigned);
void __cdecl ?set_vftable_udt_member_t__QEAAXXZ(udt_member_t *__hidden this);
void __cdecl ?set_vftable_udt_type_data_t__QEAAXXZ(udt_type_data_t *__hidden this);
void __cdecl ?set_virtbase_udt_member_t__QEAAXXZ(udt_member_t *__hidden this);
void __cdecl ?set_visible_segm_segment_t__QEAAX_N_Z(segment_t *__hidden this, bool visible);
void __cdecl ?set_visited_graph_node_visitor_t__QEAAXH_Z(graph_node_visitor_t *__hidden this, int n);
void __cdecl ?set_volatile_tinfo_t__QEAAXXZ(tinfo_t *__hidden this);
void __cdecl ?set_vtable_element_size_switch_info_t__QEAAXH_Z(switch_info_t *__hidden this, int size);
void __cdecl ?set_x_coords_abstract_graph_t__IEAAXAEBV?$qvector_Urow_info_t____AEBVnode_set_t__H_Z(abstract_graph_t *__hidden this, const graph_row_info_t *gri, const node_set_t *selfrefs, int first_added_node);
bool __cdecl ?setblob_netnode__QEAA_NPEBX_K1E_Z(netnode *__hidden this, const void *buf, size_t size, nodeidx_t _start, uchar tag);
bool __cdecl ?setblob_ea_netnode__QEAA_NPEBX_K1E_Z(netnode *__hidden this, const void *buf, size_t size, ea_t ea, uchar tag);
void __cdecl ?setup_outctx_outctx_base_t__UEAAXPEBDH_Z(outctx_base_t *__hidden this, const char *prefix, int makeline_flags);
void __cdecl ?setup_outctx_outctx_t__UEAAXPEBDH_Z(outctx_t *__hidden this, const char *prefix, int flags);
ssize_t ?setup_til_processor_t__SA_JXZ(void);
void __cdecl ?shift_down_bitrange_t__QEAAXI_Z(bitrange_t *__hidden this, uint cnt);
void __cdecl ?shift_left_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?shift_right_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?shift_up_bitrange_t__QEAAXI_Z(bitrange_t *__hidden this, uint cnt);
bool __cdecl ?should_display_predicate_t__UEAA_NPEBUtil_t__PEBDPEBE2_Z(predicate_t *__hidden this, const til_t *til, const char *name, const type_t *type, const p_list *fields);
bool __cdecl ?should_ignore_micro_ignore_micro_t__QEBA_N_K_Z(const ignore_micro_t *__hidden this, ea_t ea);
bool __cdecl ?should_rename_trigger_edit_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?should_restore_geometry_chooser_base_t__QEBA_NXZ(const chooser_base_t *__hidden this);
bool __cdecl ?should_skip_altadjust_visitor_t__UEAA_N_K_Z(altadjust_visitor_t *__hidden this, nodeidx_t ea);
bool __cdecl ?show_field_form_actions_t__UEAA_NH_N_Z(form_actions_t *__hidden this, int field_id, bool display);
bool __cdecl ?show_segaddr_hexplace_gen_t__UEBA_NXZ(const hexplace_gen_t *__hidden this);
bool __cdecl ?show_text_hexplace_gen_t__UEBA_NXZ(const hexplace_gen_t *__hidden this);
bool __cdecl ?shown_op_t__QEBA_NXZ(const op_t *__hidden this);
void __cdecl ?shrink_to_fit_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAXXZ(std::basic_string<char> *__hidden this);
void __cdecl ?shrink_to_fit_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAXXZ(std::basic_string<char16_t> *__hidden this);
void __cdecl ?shrink_to_fit_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAXXZ(std::basic_string<char32_t> *__hidden this);
void __cdecl ?shrink_to_fit_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAXXZ(std::basic_string<wchar_t> *__hidden this);
char ?signaling_NaN_?$numeric_limits_C_std__SACXZ(void);
char ?signaling_NaN_?$numeric_limits_D_std__SADXZ(void);
unsigned __int8 ?signaling_NaN_?$numeric_limits_E_std__SAEXZ(void);
__int16 ?signaling_NaN_?$numeric_limits_F_std__SAFXZ(void);
unsigned __int16 ?signaling_NaN_?$numeric_limits_G_std__SAGXZ(void);
int ?signaling_NaN_?$numeric_limits_H_std__SAHXZ(void);
unsigned int ?signaling_NaN_?$numeric_limits_I_std__SAIXZ(void);
__int32 ?signaling_NaN_?$numeric_limits_J_std__SAJXZ(void);
unsigned __int32 ?signaling_NaN_?$numeric_limits_K_std__SAKXZ(void);
float ?signaling_NaN_?$numeric_limits_M_std__SAMXZ(void);
double ?signaling_NaN_?$numeric_limits_N_std__SANXZ(void);
long double ?signaling_NaN_?$numeric_limits_O_std__SAOXZ(void);
__int64 ?signaling_NaN_?$numeric_limits__J_std__SA_JXZ(void);
unsigned __int64 ?signaling_NaN_?$numeric_limits__K_std__SA_KXZ(void);
bool ?signaling_NaN_?$numeric_limits__N_std__SA_NXZ(void);
__int16 ?signaling_NaN_?$numeric_limits__S_std__SA_SXZ(void);
__int32 ?signaling_NaN_?$numeric_limits__U_std__SA_UXZ(void);
__int16 ?signaling_NaN_?$numeric_limits__W_std__SA_WXZ(void);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::size_type __cdecl ?size_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA_KXZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::size_type __cdecl ?size_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA_KXZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::size_type __cdecl ?size_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA_KXZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::size_type __cdecl ?size_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA_KXZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::size_type __cdecl ?size_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA_KXZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
size_t __cdecl ?size_?$_qstring_D__QEBA_KXZ(const _qstring<char> *__hidden this);
size_t __cdecl ?size_?$_qstring_E__QEBA_KXZ(const _qstring<unsigned char> *__hidden this);
size_t __cdecl ?size_?$_qstring__W__QEBA_KXZ(const _qstring<wchar_t> *__hidden this);
std::basic_string<char>::size_type __cdecl ?size_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA_KXZ(const std::basic_string<char> *__hidden this);
std::basic_string<char16_t>::size_type __cdecl ?size_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA_KXZ(const std::basic_string<char16_t> *__hidden this);
std::basic_string<char32_t>::size_type __cdecl ?size_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA_KXZ(const std::basic_string<char32_t> *__hidden this);
std::basic_string<wchar_t>::size_type __cdecl ?size_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA_KXZ(const std::basic_string<wchar_t> *__hidden this);
size_t __cdecl ?size_?$initializer_list_D_std__QEBA_KXZ(const std::initializer_list<char> *__hidden this);
size_t __cdecl ?size_?$initializer_list_H_std__QEBA_KXZ(const std::initializer_list<int> *__hidden this);
size_t __cdecl ?size_?$initializer_list_U?$pair_$$CBHH_std___std__QEBA_KXZ(const std::initializer_list<std::pair<const int, int>> *__hidden this);
size_t __cdecl ?size_?$initializer_list_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std__QEBA_KXZ(const std::initializer_list<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>> *__hidden this);
size_t __cdecl ?size_?$initializer_list_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std__QEBA_KXZ(const std::initializer_list<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>> *__hidden this);
size_t __cdecl ?size_?$initializer_list_U?$pair_$$CB_K_K_std___std__QEBA_KXZ(const std::initializer_list<std::pair<const unsigned long long, unsigned long long>> *__hidden this);
size_t __cdecl ?size_?$initializer_list__S_std__QEBA_KXZ(const std::initializer_list<char16_t> *__hidden this);
size_t __cdecl ?size_?$initializer_list__U_std__QEBA_KXZ(const std::initializer_list<char32_t> *__hidden this);
size_t __cdecl ?size_?$initializer_list__W_std__QEBA_KXZ(const std::initializer_list<wchar_t> *__hidden this);
size_t __cdecl ?size_?$qlist_PEAVui_request_t____QEBA_KXZ(const qlist<ui_request_t *> *__hidden this);
size_t __cdecl ?size_?$qvector_D__QEBA_KXZ(const qvector<char> *__hidden this);
size_t __cdecl ?size_?$qvector_E__QEBA_KXZ(const qvector<unsigned char> *__hidden this);
size_t __cdecl ?size_?$qvector_H__QEBA_KXZ(const qvector<int> *__hidden this);
size_t __cdecl ?size_?$qvector_I__QEBA_KXZ(const qvector<unsigned int> *__hidden this);
size_t __cdecl ?size_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEBA_KXZ(const qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
size_t __cdecl ?size_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEBA_KXZ(const qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
size_t __cdecl ?size_?$qvector_PEAUbpt_t____QEBA_KXZ(const qvector<bpt_t *> *__hidden this);
size_t __cdecl ?size_?$qvector_PEAUextlang_t____QEBA_KXZ(const qvector<extlang_t *> *__hidden this);
size_t __cdecl ?size_?$qvector_PEAUline_rendering_output_entry_t____QEBA_KXZ(const qvector<line_rendering_output_entry_t *> *__hidden this);
size_t __cdecl ?size_?$qvector_PEAVsnapshot_t____QEBA_KXZ(const qvector<snapshot_t *> *__hidden this);
size_t __cdecl ?size_?$qvector_PEBD__QEBA_KXZ(const qvector<const char *> *__hidden this);
size_t __cdecl ?size_?$qvector_PEBUbpt_t____QEBA_KXZ(const qvector<const bpt_t *> *__hidden this);
size_t __cdecl ?size_?$qvector_PEBVrangeset_t____QEBA_KXZ(const qvector<const rangeset_t *> *__hidden this);
size_t __cdecl ?size_?$qvector_PEBVtwinline_t____QEBA_KXZ(const qvector<const twinline_t *> *__hidden this);
size_t __cdecl ?size_?$qvector_Uargpart_t____QEBA_KXZ(const qvector<argpart_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ubpt_t____QEBA_KXZ(const qvector<bpt_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ubptaddrs_t____QEBA_KXZ(const qvector<bptaddrs_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ucall_stack_info_t____QEBA_KXZ(const qvector<call_stack_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ucatch_t____QEBA_KXZ(const qvector<catch_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ucfgopt_set_t____QEBA_KXZ(const qvector<cfgopt_set_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uchannel_redir_t____QEBA_KXZ(const qvector<channel_redir_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ucliopt_t____QEBA_KXZ(const qvector<cliopt_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ucompiled_binpat_t____QEBA_KXZ(const qvector<compiled_binpat_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Udebug_event_t____QEBA_KXZ(const qvector<debug_event_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Udirentry_t____QEBA_KXZ(const qvector<direntry_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Udirtree_cursor_t____QEBA_KXZ(const qvector<dirtree_cursor_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uea_name_t____QEBA_KXZ(const qvector<ea_name_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uedge_t____QEBA_KXZ(const qvector<edge_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uenum_member_t____QEBA_KXZ(const qvector<enum_member_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uexception_info_t____QEBA_KXZ(const qvector<exception_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ufixup_info_t____QEBA_KXZ(const qvector<fixup_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ufuncarg_t____QEBA_KXZ(const qvector<funcarg_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ugroup_crinfo_t____QEBA_KXZ(const qvector<group_crinfo_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uidc_global_t____QEBA_KXZ(const qvector<idc_global_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uidp_desc_t____QEBA_KXZ(const qvector<idp_desc_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uidp_name_t____QEBA_KXZ(const qvector<idp_name_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uioport_bit_t____QEBA_KXZ(const qvector<ioport_bit_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uioport_t____QEBA_KXZ(const qvector<ioport_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ujvalue_t____QEBA_KXZ(const qvector<jvalue_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEBA_KXZ(const qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ukvp_t____QEBA_KXZ(const qvector<kvp_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ulochist_entry_t____QEBA_KXZ(const qvector<lochist_entry_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ulowcnd_t____QEBA_KXZ(const qvector<lowcnd_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Umemory_info_t____QEBA_KXZ(const qvector<memory_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Umemreg_info_t____QEBA_KXZ(const qvector<memreg_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Umodinfo_t____QEBA_KXZ(const qvector<modinfo_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Umovbpt_info_t____QEBA_KXZ(const qvector<movbpt_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEBA_KXZ(const qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEBA_KXZ(const qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Upoint_t____QEBA_KXZ(const qvector<point_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uprocess_info_t____QEBA_KXZ(const qvector<process_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uqbasic_block_t____QEBA_KXZ(const qvector<qbasic_block_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Urange_t____QEBA_KXZ(const qvector<range_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Urect_t____QEBA_KXZ(const qvector<rect_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Urefinfo_desc_t____QEBA_KXZ(const qvector<refinfo_desc_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ureg_access_t____QEBA_KXZ(const qvector<reg_access_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ureg_info_t____QEBA_KXZ(const qvector<reg_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uregister_info_t____QEBA_KXZ(const qvector<register_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uregobj_t____QEBA_KXZ(const qvector<regobj_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uregval_t____QEBA_KXZ(const qvector<regval_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Urow_info_t____QEBA_KXZ(const qvector<row_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uscattered_segm_t____QEBA_KXZ(const qvector<scattered_segm_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Usegm_move_info_t____QEBA_KXZ(const qvector<segm_move_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uselection_item_t____QEBA_KXZ(const qvector<selection_item_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Usimd_info_t____QEBA_KXZ(const qvector<simd_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Usimpleline_t____QEBA_KXZ(const qvector<simpleline_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Ustkpnt_t____QEBA_KXZ(const qvector<stkpnt_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Utev_info_reg_t____QEBA_KXZ(const qvector<tev_info_reg_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Utev_info_t____QEBA_KXZ(const qvector<tev_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Utev_reg_value_t____QEBA_KXZ(const qvector<tev_reg_value_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uthread_name_t____QEBA_KXZ(const qvector<thread_name_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Utoken_t____QEBA_KXZ(const qvector<token_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Utype_attr_t____QEBA_KXZ(const qvector<type_attr_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uudt_member_t____QEBA_KXZ(const qvector<udt_member_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uupdate_bpt_info_t____QEBA_KXZ(const qvector<update_bpt_info_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Uxreflist_entry_t____QEBA_KXZ(const qvector<xreflist_entry_t> *__hidden this);
size_t __cdecl ?size_?$qvector_V?$_qstring_D____QEBA_KXZ(const qvector<_qstring<char>> *__hidden this);
size_t __cdecl ?size_?$qvector_V?$_qstring_E____QEBA_KXZ(const qvector<_qstring<unsigned char>> *__hidden this);
size_t __cdecl ?size_?$qvector_V?$_qstring__W____QEBA_KXZ(const qvector<_qstring<wchar_t>> *__hidden this);
size_t __cdecl ?size_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEBA_KXZ(const qvector<qrefcnt_t<source_item_t>> *__hidden this);
size_t __cdecl ?size_?$qvector_V?$qvector_H____QEBA_KXZ(const qvector<qvector<int>> *__hidden this);
size_t __cdecl ?size_?$qvector_V?$qvector_PEBD____QEBA_KXZ(const qvector<qvector<const char *>> *__hidden this);
size_t __cdecl ?size_?$qvector_V?$qvector_PEBVtwinline_t______QEBA_KXZ(const qvector<qvector<const twinline_t *>> *__hidden this);
size_t __cdecl ?size_?$qvector_V?$qvector__J____QEBA_KXZ(const qvector<qvector<long long>> *__hidden this);
size_t __cdecl ?size_?$qvector_Vargloc_t____QEBA_KXZ(const qvector<argloc_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Vintmap_t____QEBA_KXZ(const qvector<intmap_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Vnode_set_t____QEBA_KXZ(const qvector<node_set_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Vop_t____QEBA_KXZ(const qvector<op_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Vrangeset_t____QEBA_KXZ(const qvector<rangeset_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Vsync_source_t____QEBA_KXZ(const qvector<sync_source_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Vtinfo_t____QEBA_KXZ(const qvector<tinfo_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Vtryblk_t____QEBA_KXZ(const qvector<tryblk_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Vtwinline_t____QEBA_KXZ(const qvector<twinline_t> *__hidden this);
size_t __cdecl ?size_?$qvector_Vvalstr_t____QEBA_KXZ(const qvector<valstr_t> *__hidden this);
size_t __cdecl ?size_?$qvector_W4movbpt_code_t____QEBA_KXZ(const qvector<movbpt_code_t> *__hidden this);
size_t __cdecl ?size_?$qvector__J__QEBA_KXZ(const qvector<long long> *__hidden this);
size_t __cdecl ?size_?$qvector__K__QEBA_KXZ(const qvector<unsigned long long> *__hidden this);
size_t __cdecl ?size_?$qvector__N__QEBA_KXZ(const qvector<bool> *__hidden this);
size_t __cdecl ?size_?$qvector__W__QEBA_KXZ(const qvector<wchar_t> *__hidden this);
uint32 __cdecl ?size_bookmarks_t__SAIAEBUlochist_entry_t__PEAX_Z(const lochist_entry_t *e, void *ud);
int __cdecl ?size_gdl_graph_t__UEBAHXZ(const gdl_graph_t *__hidden this);
uint32 __cdecl ?size_lochist_t__QEBAIXZ(const lochist_t *__hidden this);
size_t __cdecl ?size_memory_deserializer_t__QEBA_KXZ(const memory_deserializer_t *__hidden this);
int __cdecl ?size_mutable_graph_t__UEBAHXZ(const mutable_graph_t *__hidden this);
size_t __cdecl ?size_node_ordering_t__QEBA_KXZ(const node_ordering_t *__hidden this);
int __cdecl ?size_qflow_chart_t__UEBAHXZ(const qflow_chart_t *__hidden this);
asize_t __cdecl ?size_range_t__QEBA_KXZ(const range_t *__hidden this);
size_t __cdecl ?size_regobj_t__QEBA_KXZ(const regobj_t *__hidden this);
size_t __cdecl ?sizeof_ldbl_processor_t__QEBA_KXZ(const processor_t *__hidden this);
cref_t __cdecl ?skip_block_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____QEAA?AW4cref_t__XZ(backward_flow_iterator_t<no_regs_t, simple_bfi_t> *__hidden this);
size_t __cdecl ?sort_layer_nodes_abstract_graph_t__AEBA_KAEBUrow_info_t__AEBVintmap_t__AEAU2_AEAV3__N_Z(const abstract_graph_t *__hidden this, const row_info_t *r1, const intmap_t *lpi1, row_info_t *r2, intmap_t *lpi2, bool ispred);
void __cdecl ?split_?$_qstring_D__QEBAXPEAV?$qvector_V?$_qstring_D____PEBDI_Z(const _qstring<char> *__hidden this, qvector<_qstring<char>> *out, char *sep, uint32 flags);
void __cdecl ?split_?$_qstring_E__QEBAXPEAV?$qvector_V?$_qstring_E____PEBEI_Z(const _qstring<unsigned char> *__hidden this, qvector<_qstring<unsigned char>> *out, unsigned __int8 *sep, uint32 flags);
void __cdecl ?split_?$_qstring__W__QEBAXPEAV?$qvector_V?$_qstring__W____PEB_WI_Z(const _qstring<wchar_t> *__hidden this, qvector<_qstring<wchar_t>> *out, __int16 *sep, uint32 flags);
_qstring<char> *?sprnt_?$_qstring_D__QEAAAEAV1_PEBDZZ(_qstring<char> *__hidden this, const char *format, ...);
_qstring<unsigned char> *?sprnt_?$_qstring_E__QEAAAEAV1_PEBDZZ(_qstring<unsigned char> *__hidden this, const char *format, ...);
_qstring<wchar_t> *?sprnt_?$_qstring__W__QEAAAEAV1_PEBDZZ(_qstring<wchar_t> *__hidden this, const char *format, ...);
bool __cdecl ?stack_view_outctx_base_t__QEBA_NXZ(const outctx_base_t *__hidden this);
bool __cdecl ?start_netnode__QEAA_NXZ(netnode *__hidden this);
drc_t __cdecl ?start_process_debugger_t__QEAA?AW4drc_t__PEBD00I0IPEAV?$_qstring_D___Z(debugger_t *__hidden this, const char *path, const char *args, const char *startdir, uint32 dbg_proc_flags, const char *input_path, uint32 input_file_crc32, qstring *errbuf);
void __cdecl ?state_?$fpos_U_Mbstatet___std__QEAAXU_Mbstatet___Z(std::fpos<_Mbstatet> *__hidden this, _Mbstatet _State);
_Mbstatet __cdecl ?state_?$fpos_U_Mbstatet___std__QEBA?AU_Mbstatet__XZ(const std::fpos<_Mbstatet> *__hidden this);
sval_t __cdecl ?stkoff_argloc_t__QEBA_JXZ(const argloc_t *__hidden this);
bool __cdecl ?stkup_processor_t__QEBA_NXZ(const processor_t *__hidden this);
ssize_t __cdecl ?str2reg_processor_t__SA_JPEBD_Z(const char *regname);
const char *__cdecl ?str_jvalue_t__QEBAPEBDXZ(const jvalue_t *__hidden this);
void __cdecl ?sub_TPointDouble__QEAAXAEBU1__Z(TPointDouble *__hidden this, const TPointDouble *r);
bool __cdecl ?sub_bitrange_t__QEAA_NAEBV1__Z(bitrange_t *__hidden this, const bitrange_t *r);
void __cdecl ?sub_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?sub_node_set_t__QEAAXAEBV1__Z(node_set_t *__hidden this, const node_set_t *r);
void __cdecl ?sub_node_set_t__QEAAXH_Z(node_set_t *__hidden this, int node);
point_t *__cdecl ?sub_point_t__QEAAAEAU1_AEBU1__Z(point_t *__hidden this, const point_t *r);
bool __cdecl ?sub_rangeset_t__QEAA_NAEBUrange_t___Z(rangeset_t *__hidden this, const range_t *range);
bool __cdecl ?sub_rangeset_t__QEAA_NAEBV1__Z(rangeset_t *__hidden this, const rangeset_t *aset);
bool __cdecl ?sub_rangeset_t__QEAA_N_K_Z(rangeset_t *__hidden this, ea_t ea);
void __cdecl ?sub_screen_graph_selection_t__QEAAXAEBU1__Z(screen_graph_selection_t *__hidden this, const screen_graph_selection_t *s);
_qstring<char> __cdecl ?substr_?$_qstring_D__QEBA?AV1__K0_Z(const _qstring<char> *__hidden this, size_t pos, size_t n);
_qstring<unsigned char> __cdecl ?substr_?$_qstring_E__QEBA?AV1__K0_Z(const _qstring<unsigned char> *__hidden this, size_t pos, size_t n);
_qstring<wchar_t> __cdecl ?substr_?$_qstring__W__QEBA?AV1__K0_Z(const _qstring<wchar_t> *__hidden this, size_t pos, size_t n);
std::basic_string<char> __cdecl ?substr_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEBA?AV12__K0_Z(const std::basic_string<char> *__hidden this, const std::basic_string<char>::size_type _Off, const std::basic_string<char>::size_type _Count);
std::basic_string<char16_t> __cdecl ?substr_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEBA?AV12__K0_Z(const std::basic_string<char16_t> *__hidden this, const std::basic_string<char16_t>::size_type _Off, const std::basic_string<char16_t>::size_type _Count);
std::basic_string<char32_t> __cdecl ?substr_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEBA?AV12__K0_Z(const std::basic_string<char32_t> *__hidden this, const std::basic_string<char32_t>::size_type _Off, const std::basic_string<char32_t>::size_type _Count);
std::basic_string<wchar_t> __cdecl ?substr_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEBA?AV12__K0_Z(const std::basic_string<wchar_t> *__hidden this, const std::basic_string<wchar_t>::size_type _Off, const std::basic_string<wchar_t>::size_type _Count);
bool __cdecl ?succ_func_item_iterator_t__QEAA_NP6A_NIPEAX_Z0_Z(func_item_iterator_t *__hidden this, testf_t *func, void *ud);
int __cdecl ?succ_gdl_graph_t__UEBAHHH_Z(const gdl_graph_t *__hidden this, int node, int i);
int __cdecl ?succ_mutable_graph_t__UEBAHHH_Z(const mutable_graph_t *__hidden this, int b, int i);
int __cdecl ?succ_qflow_chart_t__UEBAHHH_Z(const qflow_chart_t *__hidden this, int node, int i);
bool __cdecl ?succ_code_func_item_iterator_t__QEAA_NXZ(func_item_iterator_t *__hidden this);
const intvec_t *__cdecl ?succset_mutable_graph_t__QEBAAEBV?$qvector_H__H_Z(const mutable_graph_t *__hidden this, int b);
bool __cdecl ?supdel_netnode__QEAA_NXZ(netnode *__hidden this);
bool __cdecl ?supdel_netnode__QEAA_N_KE_Z(netnode *__hidden this, nodeidx_t alt, uchar tag);
bool __cdecl ?supdel_all_netnode__QEAA_NE_Z(netnode *__hidden this, uchar tag);
bool __cdecl ?supdel_ea_netnode__QEAA_N_KE_Z(netnode *__hidden this, ea_t ea, uchar tag);
bool __cdecl ?supdel_idx8_netnode__QEAA_NEE_Z(netnode *__hidden this, uchar alt, uchar tag);
int __cdecl ?supdel_range_netnode__QEAAH_K0E_Z(netnode *__hidden this, nodeidx_t idx1, nodeidx_t idx2, uchar tag);
int __cdecl ?supdel_range_idx8_netnode__QEAAHEEE_Z(netnode *__hidden this, uchar idx1, uchar idx2, uchar tag);
nodeidx_t __cdecl ?supfirst_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?supfirst_idx8_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?suplast_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?suplast_idx8_netnode__QEBA_KE_Z(const netnode *__hidden this, uchar tag);
nodeidx_t __cdecl ?supnext_netnode__QEBA_K_KE_Z(const netnode *__hidden this, nodeidx_t cur, uchar tag);
nodeidx_t __cdecl ?supnext_idx8_netnode__QEBA_KEE_Z(const netnode *__hidden this, uchar alt, uchar tag);
bool __cdecl ?supports_calcrel_processor_t__QEBA_NXZ(const processor_t *__hidden this);
bool __cdecl ?supports_debthread_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?supports_lowcnds_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?supports_macros_processor_t__QEBA_NXZ(const processor_t *__hidden this);
nodeidx_t __cdecl ?supprev_netnode__QEBA_K_KE_Z(const netnode *__hidden this, nodeidx_t cur, uchar tag);
nodeidx_t __cdecl ?supprev_idx8_netnode__QEBA_KEE_Z(const netnode *__hidden this, uchar alt, uchar tag);
bool __cdecl ?supset_netnode__QEAA_N_KPEBX0E_Z(netnode *__hidden this, nodeidx_t alt, const void *value, size_t length, uchar tag);
bool __cdecl ?supset_ea_netnode__QEAA_N_KPEBX0E_Z(netnode *__hidden this, ea_t ea, const void *value, size_t length, uchar tag);
bool __cdecl ?supset_idx8_netnode__QEAA_NEPEBX_KE_Z(netnode *__hidden this, uchar alt, const void *value, size_t length, uchar tag);
size_t __cdecl ?supshift_netnode__QEAA_K_K00E_Z(netnode *__hidden this, nodeidx_t from, nodeidx_t to, nodeidx_t size, uchar tag);
ssize_t __cdecl ?supstr_netnode__QEBA_JPEAV?$_qstring_D___KE_Z(const netnode *__hidden this, qstring *buf, nodeidx_t alt, uchar tag);
ssize_t __cdecl ?supstr_netnode__QEBA_J_KPEAD0E_Z(const netnode *__hidden this, nodeidx_t alt, char *buf, size_t bufsize, uchar tag);
ssize_t __cdecl ?supstr_ea_netnode__QEBA_JPEAV?$_qstring_D___KE_Z(const netnode *__hidden this, qstring *buf, ea_t ea, uchar tag);
ssize_t __cdecl ?supstr_ea_netnode__QEBA_J_KPEAD0E_Z(const netnode *__hidden this, ea_t ea, char *buf, size_t bufsize, uchar tag);
ssize_t __cdecl ?supstr_idx8_netnode__QEBA_JEPEAD_KE_Z(const netnode *__hidden this, uchar alt, char *buf, size_t bufsize, uchar tag);
ssize_t __cdecl ?supstr_idx8_netnode__QEBA_JPEAV?$_qstring_D__EE_Z(const netnode *__hidden this, qstring *buf, uchar alt, uchar tag);
ssize_t __cdecl ?supval_netnode__QEBA_J_KPEAX0E_Z(const netnode *__hidden this, nodeidx_t alt, void *buf, size_t bufsize, uchar tag);
ssize_t __cdecl ?supval_ea_netnode__QEBA_J_KPEAX0E_Z(const netnode *__hidden this, ea_t ea, void *buf, size_t bufsize, uchar tag);
ssize_t __cdecl ?supval_idx8_netnode__QEBA_JEPEAX_KE_Z(const netnode *__hidden this, uchar alt, void *buf, size_t bufsize, uchar tag);
void __cdecl ?suspended_debugger_t__QEAAX_NPEAV?$qvector_Uthread_name_t_____Z(debugger_t *__hidden this, bool dlls_added, thread_name_vec_t *thr_names);
void __cdecl ?swap_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAAXAEAV12__Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *_Right);
void __cdecl ?swap_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAAXAEAV12__Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *_Right);
void __cdecl ?swap_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAAXAEAV12__Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *_Right);
void __cdecl ?swap_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAAXAEAV12__Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *_Right);
void __cdecl ?swap_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAAXAEAV12__Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *_Right);
void __cdecl ?swap_?$_qstring_D__QEAAXAEAV1__Z(_qstring<char> *__hidden this, _qstring<char> *r);
void __cdecl ?swap_?$_qstring_E__QEAAXAEAV1__Z(_qstring<unsigned char> *__hidden this, _qstring<unsigned char> *r);
void __cdecl ?swap_?$_qstring__W__QEAAXAEAV1__Z(_qstring<wchar_t> *__hidden this, _qstring<wchar_t> *r);
void __cdecl ?swap_?$basic_string_DU?$char_traits_D_std__V?$allocator_D_2__std__QEAAXAEAV12__Z(std::basic_string<char> *__hidden this, std::basic_string<char> *_Right);
void __cdecl ?swap_?$basic_string__SU?$char_traits__S_std__V?$allocator__S_2__std__QEAAXAEAV12__Z(std::basic_string<char16_t> *__hidden this, std::basic_string<char16_t> *_Right);
void __cdecl ?swap_?$basic_string__UU?$char_traits__U_std__V?$allocator__U_2__std__QEAAXAEAV12__Z(std::basic_string<char32_t> *__hidden this, std::basic_string<char32_t> *_Right);
void __cdecl ?swap_?$basic_string__WU?$char_traits__W_std__V?$allocator__W_2__std__QEAAXAEAV12__Z(std::basic_string<wchar_t> *__hidden this, std::basic_string<wchar_t> *_Right);
void __cdecl ?swap_?$map_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2__std__QEAAXAEAV12__Z(std::map<int, int> *__hidden this, std::map<int, int> *_Right);
void __cdecl ?swap_?$map_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4__std__QEAAXAEAV12__Z(std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::map<_qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Right);
void __cdecl ?swap_?$map__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4__std__QEAAXAEAV12__Z(std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::map<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Right);
void __cdecl ?swap_?$map__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2__std__QEAAXAEAV12__Z(std::map<unsigned long long, unsigned long long> *__hidden this, std::map<unsigned long long, unsigned long long> *_Right);
void __cdecl ?swap_?$pair_$$CBHH_std__QEAAXAEAU12__Z(std::pair<const int, int> *__hidden this, std::pair<const int, int> *_Right);
void __cdecl ?swap_?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std__QEAAXAEAU12__Z(std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *__hidden this, std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>> *_Right);
void __cdecl ?swap_?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std__QEAAXAEAU12__Z(std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *__hidden this, std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t> *_Right);
void __cdecl ?swap_?$pair_$$CB_K_K_std__QEAAXAEAU12__Z(std::pair<const unsigned long long, unsigned long long> *__hidden this, std::pair<const unsigned long long, unsigned long long> *_Right);
void __cdecl ?swap_?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___std__V12__std__QEAAXAEAU12__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *__hidden this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>> *_Right);
void __cdecl ?swap_?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__V12__std__QEAAXAEAU12__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *_Right);
void __cdecl ?swap_?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__V12__std__QEAAXAEAU12__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *_Right);
void __cdecl ?swap_?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__V12__std__QEAAXAEAU12__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *_Right);
void __cdecl ?swap_?$pair_V?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__V12__std__QEAAXAEAU12__Z(std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *_Right);
void __cdecl ?swap_?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___std__V12__std__QEAAXAEAU12__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *__hidden this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int, int>>>>> *_Right);
void __cdecl ?swap_?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___std__V12__std__QEAAXAEAU12__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *__hidden this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>>>> *_Right);
void __cdecl ?swap_?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___std__V12__std__QEAAXAEAU12__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *__hidden this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>>>> *_Right);
void __cdecl ?swap_?$pair_V?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___std__V12__std__QEAAXAEAU12__Z(std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *__hidden this, std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>, std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const unsigned long long, unsigned long long>>>>> *_Right);
void __cdecl ?swap_?$qlist_PEAVui_request_t____QEAAXAEAV1__Z(qlist<ui_request_t *> *__hidden this, qlist<ui_request_t *> *x);
void __cdecl ?swap_?$qvector_D__QEAAXAEAV1__Z(qvector<char> *__hidden this, qvector<char> *r);
void __cdecl ?swap_?$qvector_E__QEAAXAEAV1__Z(qvector<unsigned char> *__hidden this, qvector<unsigned char> *r);
void __cdecl ?swap_?$qvector_H__QEAAXAEAV1__Z(qvector<int> *__hidden this, qvector<int> *r);
void __cdecl ?swap_?$qvector_I__QEAAXAEAV1__Z(qvector<unsigned int> *__hidden this, qvector<unsigned int> *r);
void __cdecl ?swap_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAXAEAV1__Z(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this, qvector<long long (*)(syntax_highlight_style *, const char *)> *r);
void __cdecl ?swap_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAXAEAV1__Z(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this, qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *r);
void __cdecl ?swap_?$qvector_PEAUbpt_t____QEAAXAEAV1__Z(qvector<bpt_t *> *__hidden this, qvector<bpt_t *> *r);
void __cdecl ?swap_?$qvector_PEAUextlang_t____QEAAXAEAV1__Z(qvector<extlang_t *> *__hidden this, qvector<extlang_t *> *r);
void __cdecl ?swap_?$qvector_PEAUline_rendering_output_entry_t____QEAAXAEAV1__Z(qvector<line_rendering_output_entry_t *> *__hidden this, qvector<line_rendering_output_entry_t *> *r);
void __cdecl ?swap_?$qvector_PEAVsnapshot_t____QEAAXAEAV1__Z(qvector<snapshot_t *> *__hidden this, qvector<snapshot_t *> *r);
void __cdecl ?swap_?$qvector_PEBD__QEAAXAEAV1__Z(qvector<const char *> *__hidden this, qvector<const char *> *r);
void __cdecl ?swap_?$qvector_PEBUbpt_t____QEAAXAEAV1__Z(qvector<const bpt_t *> *__hidden this, qvector<const bpt_t *> *r);
void __cdecl ?swap_?$qvector_PEBVrangeset_t____QEAAXAEAV1__Z(qvector<const rangeset_t *> *__hidden this, qvector<const rangeset_t *> *r);
void __cdecl ?swap_?$qvector_PEBVtwinline_t____QEAAXAEAV1__Z(qvector<const twinline_t *> *__hidden this, qvector<const twinline_t *> *r);
void __cdecl ?swap_?$qvector_Uargpart_t____QEAAXAEAV1__Z(qvector<argpart_t> *__hidden this, qvector<argpart_t> *r);
void __cdecl ?swap_?$qvector_Ubpt_t____QEAAXAEAV1__Z(qvector<bpt_t> *__hidden this, qvector<bpt_t> *r);
void __cdecl ?swap_?$qvector_Ubptaddrs_t____QEAAXAEAV1__Z(qvector<bptaddrs_t> *__hidden this, qvector<bptaddrs_t> *r);
void __cdecl ?swap_?$qvector_Ucall_stack_info_t____QEAAXAEAV1__Z(qvector<call_stack_info_t> *__hidden this, qvector<call_stack_info_t> *r);
void __cdecl ?swap_?$qvector_Ucatch_t____QEAAXAEAV1__Z(qvector<catch_t> *__hidden this, qvector<catch_t> *r);
void __cdecl ?swap_?$qvector_Ucfgopt_set_t____QEAAXAEAV1__Z(qvector<cfgopt_set_t> *__hidden this, qvector<cfgopt_set_t> *r);
void __cdecl ?swap_?$qvector_Uchannel_redir_t____QEAAXAEAV1__Z(qvector<channel_redir_t> *__hidden this, qvector<channel_redir_t> *r);
void __cdecl ?swap_?$qvector_Ucliopt_t____QEAAXAEAV1__Z(qvector<cliopt_t> *__hidden this, qvector<cliopt_t> *r);
void __cdecl ?swap_?$qvector_Ucompiled_binpat_t____QEAAXAEAV1__Z(qvector<compiled_binpat_t> *__hidden this, qvector<compiled_binpat_t> *r);
void __cdecl ?swap_?$qvector_Udebug_event_t____QEAAXAEAV1__Z(qvector<debug_event_t> *__hidden this, qvector<debug_event_t> *r);
void __cdecl ?swap_?$qvector_Udirentry_t____QEAAXAEAV1__Z(qvector<direntry_t> *__hidden this, qvector<direntry_t> *r);
void __cdecl ?swap_?$qvector_Udirtree_cursor_t____QEAAXAEAV1__Z(qvector<dirtree_cursor_t> *__hidden this, qvector<dirtree_cursor_t> *r);
void __cdecl ?swap_?$qvector_Uea_name_t____QEAAXAEAV1__Z(qvector<ea_name_t> *__hidden this, qvector<ea_name_t> *r);
void __cdecl ?swap_?$qvector_Uedge_t____QEAAXAEAV1__Z(qvector<edge_t> *__hidden this, qvector<edge_t> *r);
void __cdecl ?swap_?$qvector_Uenum_member_t____QEAAXAEAV1__Z(qvector<enum_member_t> *__hidden this, qvector<enum_member_t> *r);
void __cdecl ?swap_?$qvector_Uexception_info_t____QEAAXAEAV1__Z(qvector<exception_info_t> *__hidden this, qvector<exception_info_t> *r);
void __cdecl ?swap_?$qvector_Ufixup_info_t____QEAAXAEAV1__Z(qvector<fixup_info_t> *__hidden this, qvector<fixup_info_t> *r);
void __cdecl ?swap_?$qvector_Ufuncarg_t____QEAAXAEAV1__Z(qvector<funcarg_t> *__hidden this, qvector<funcarg_t> *r);
void __cdecl ?swap_?$qvector_Ugroup_crinfo_t____QEAAXAEAV1__Z(qvector<group_crinfo_t> *__hidden this, qvector<group_crinfo_t> *r);
void __cdecl ?swap_?$qvector_Uidc_global_t____QEAAXAEAV1__Z(qvector<idc_global_t> *__hidden this, qvector<idc_global_t> *r);
void __cdecl ?swap_?$qvector_Uidp_desc_t____QEAAXAEAV1__Z(qvector<idp_desc_t> *__hidden this, qvector<idp_desc_t> *r);
void __cdecl ?swap_?$qvector_Uidp_name_t____QEAAXAEAV1__Z(qvector<idp_name_t> *__hidden this, qvector<idp_name_t> *r);
void __cdecl ?swap_?$qvector_Uioport_bit_t____QEAAXAEAV1__Z(qvector<ioport_bit_t> *__hidden this, qvector<ioport_bit_t> *r);
void __cdecl ?swap_?$qvector_Uioport_t____QEAAXAEAV1__Z(qvector<ioport_t> *__hidden this, qvector<ioport_t> *r);
void __cdecl ?swap_?$qvector_Ujvalue_t____QEAAXAEAV1__Z(qvector<jvalue_t> *__hidden this, qvector<jvalue_t> *r);
void __cdecl ?swap_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAXAEAV1__Z(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this, qvector<ida_syntax_highlighter_t::keywords_style_t> *r);
void __cdecl ?swap_?$qvector_Ukvp_t____QEAAXAEAV1__Z(qvector<kvp_t> *__hidden this, qvector<kvp_t> *r);
void __cdecl ?swap_?$qvector_Ulochist_entry_t____QEAAXAEAV1__Z(qvector<lochist_entry_t> *__hidden this, qvector<lochist_entry_t> *r);
void __cdecl ?swap_?$qvector_Ulowcnd_t____QEAAXAEAV1__Z(qvector<lowcnd_t> *__hidden this, qvector<lowcnd_t> *r);
void __cdecl ?swap_?$qvector_Umemory_info_t____QEAAXAEAV1__Z(qvector<memory_info_t> *__hidden this, qvector<memory_info_t> *r);
void __cdecl ?swap_?$qvector_Umemreg_info_t____QEAAXAEAV1__Z(qvector<memreg_info_t> *__hidden this, qvector<memreg_info_t> *r);
void __cdecl ?swap_?$qvector_Umodinfo_t____QEAAXAEAV1__Z(qvector<modinfo_t> *__hidden this, qvector<modinfo_t> *r);
void __cdecl ?swap_?$qvector_Umovbpt_info_t____QEAAXAEAV1__Z(qvector<movbpt_info_t> *__hidden this, qvector<movbpt_info_t> *r);
void __cdecl ?swap_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAXAEAV1__Z(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this, qvector<ida_syntax_highlighter_t::multicmt_t> *r);
void __cdecl ?swap_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAXAEAV1__Z(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this, qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *r);
void __cdecl ?swap_?$qvector_Upoint_t____QEAAXAEAV1__Z(qvector<point_t> *__hidden this, qvector<point_t> *r);
void __cdecl ?swap_?$qvector_Uprocess_info_t____QEAAXAEAV1__Z(qvector<process_info_t> *__hidden this, qvector<process_info_t> *r);
void __cdecl ?swap_?$qvector_Uqbasic_block_t____QEAAXAEAV1__Z(qvector<qbasic_block_t> *__hidden this, qvector<qbasic_block_t> *r);
void __cdecl ?swap_?$qvector_Urange_t____QEAAXAEAV1__Z(qvector<range_t> *__hidden this, qvector<range_t> *r);
void __cdecl ?swap_?$qvector_Urect_t____QEAAXAEAV1__Z(qvector<rect_t> *__hidden this, qvector<rect_t> *r);
void __cdecl ?swap_?$qvector_Urefinfo_desc_t____QEAAXAEAV1__Z(qvector<refinfo_desc_t> *__hidden this, qvector<refinfo_desc_t> *r);
void __cdecl ?swap_?$qvector_Ureg_access_t____QEAAXAEAV1__Z(qvector<reg_access_t> *__hidden this, qvector<reg_access_t> *r);
void __cdecl ?swap_?$qvector_Ureg_info_t____QEAAXAEAV1__Z(qvector<reg_info_t> *__hidden this, qvector<reg_info_t> *r);
void __cdecl ?swap_?$qvector_Uregister_info_t____QEAAXAEAV1__Z(qvector<register_info_t> *__hidden this, qvector<register_info_t> *r);
void __cdecl ?swap_?$qvector_Uregobj_t____QEAAXAEAV1__Z(qvector<regobj_t> *__hidden this, qvector<regobj_t> *r);
void __cdecl ?swap_?$qvector_Uregval_t____QEAAXAEAV1__Z(qvector<regval_t> *__hidden this, qvector<regval_t> *r);
void __cdecl ?swap_?$qvector_Urow_info_t____QEAAXAEAV1__Z(qvector<row_info_t> *__hidden this, qvector<row_info_t> *r);
void __cdecl ?swap_?$qvector_Uscattered_segm_t____QEAAXAEAV1__Z(qvector<scattered_segm_t> *__hidden this, qvector<scattered_segm_t> *r);
void __cdecl ?swap_?$qvector_Usegm_move_info_t____QEAAXAEAV1__Z(qvector<segm_move_info_t> *__hidden this, qvector<segm_move_info_t> *r);
void __cdecl ?swap_?$qvector_Uselection_item_t____QEAAXAEAV1__Z(qvector<selection_item_t> *__hidden this, qvector<selection_item_t> *r);
void __cdecl ?swap_?$qvector_Usimd_info_t____QEAAXAEAV1__Z(qvector<simd_info_t> *__hidden this, qvector<simd_info_t> *r);
void __cdecl ?swap_?$qvector_Usimpleline_t____QEAAXAEAV1__Z(qvector<simpleline_t> *__hidden this, qvector<simpleline_t> *r);
void __cdecl ?swap_?$qvector_Ustkpnt_t____QEAAXAEAV1__Z(qvector<stkpnt_t> *__hidden this, qvector<stkpnt_t> *r);
void __cdecl ?swap_?$qvector_Utev_info_reg_t____QEAAXAEAV1__Z(qvector<tev_info_reg_t> *__hidden this, qvector<tev_info_reg_t> *r);
void __cdecl ?swap_?$qvector_Utev_info_t____QEAAXAEAV1__Z(qvector<tev_info_t> *__hidden this, qvector<tev_info_t> *r);
void __cdecl ?swap_?$qvector_Utev_reg_value_t____QEAAXAEAV1__Z(qvector<tev_reg_value_t> *__hidden this, qvector<tev_reg_value_t> *r);
void __cdecl ?swap_?$qvector_Uthread_name_t____QEAAXAEAV1__Z(qvector<thread_name_t> *__hidden this, qvector<thread_name_t> *r);
void __cdecl ?swap_?$qvector_Utoken_t____QEAAXAEAV1__Z(qvector<token_t> *__hidden this, qvector<token_t> *r);
void __cdecl ?swap_?$qvector_Utype_attr_t____QEAAXAEAV1__Z(qvector<type_attr_t> *__hidden this, qvector<type_attr_t> *r);
void __cdecl ?swap_?$qvector_Uudt_member_t____QEAAXAEAV1__Z(qvector<udt_member_t> *__hidden this, qvector<udt_member_t> *r);
void __cdecl ?swap_?$qvector_Uupdate_bpt_info_t____QEAAXAEAV1__Z(qvector<update_bpt_info_t> *__hidden this, qvector<update_bpt_info_t> *r);
void __cdecl ?swap_?$qvector_Uxreflist_entry_t____QEAAXAEAV1__Z(qvector<xreflist_entry_t> *__hidden this, qvector<xreflist_entry_t> *r);
void __cdecl ?swap_?$qvector_V?$_qstring_D____QEAAXAEAV1__Z(qvector<_qstring<char>> *__hidden this, qvector<_qstring<char>> *r);
void __cdecl ?swap_?$qvector_V?$_qstring_E____QEAAXAEAV1__Z(qvector<_qstring<unsigned char>> *__hidden this, qvector<_qstring<unsigned char>> *r);
void __cdecl ?swap_?$qvector_V?$_qstring__W____QEAAXAEAV1__Z(qvector<_qstring<wchar_t>> *__hidden this, qvector<_qstring<wchar_t>> *r);
void __cdecl ?swap_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAXAEAV1__Z(qvector<qrefcnt_t<source_item_t>> *__hidden this, qvector<qrefcnt_t<source_item_t>> *r);
void __cdecl ?swap_?$qvector_V?$qvector_H____QEAAXAEAV1__Z(qvector<qvector<int>> *__hidden this, qvector<qvector<int>> *r);
void __cdecl ?swap_?$qvector_V?$qvector_PEBD____QEAAXAEAV1__Z(qvector<qvector<const char *>> *__hidden this, qvector<qvector<const char *>> *r);
void __cdecl ?swap_?$qvector_V?$qvector_PEBVtwinline_t______QEAAXAEAV1__Z(qvector<qvector<const twinline_t *>> *__hidden this, qvector<qvector<const twinline_t *>> *r);
void __cdecl ?swap_?$qvector_V?$qvector__J____QEAAXAEAV1__Z(qvector<qvector<long long>> *__hidden this, qvector<qvector<long long>> *r);
void __cdecl ?swap_?$qvector_Vargloc_t____QEAAXAEAV1__Z(qvector<argloc_t> *__hidden this, qvector<argloc_t> *r);
void __cdecl ?swap_?$qvector_Vintmap_t____QEAAXAEAV1__Z(qvector<intmap_t> *__hidden this, qvector<intmap_t> *r);
void __cdecl ?swap_?$qvector_Vnode_set_t____QEAAXAEAV1__Z(qvector<node_set_t> *__hidden this, qvector<node_set_t> *r);
void __cdecl ?swap_?$qvector_Vop_t____QEAAXAEAV1__Z(qvector<op_t> *__hidden this, qvector<op_t> *r);
void __cdecl ?swap_?$qvector_Vrangeset_t____QEAAXAEAV1__Z(qvector<rangeset_t> *__hidden this, qvector<rangeset_t> *r);
void __cdecl ?swap_?$qvector_Vsync_source_t____QEAAXAEAV1__Z(qvector<sync_source_t> *__hidden this, qvector<sync_source_t> *r);
void __cdecl ?swap_?$qvector_Vtinfo_t____QEAAXAEAV1__Z(qvector<tinfo_t> *__hidden this, qvector<tinfo_t> *r);
void __cdecl ?swap_?$qvector_Vtryblk_t____QEAAXAEAV1__Z(qvector<tryblk_t> *__hidden this, qvector<tryblk_t> *r);
void __cdecl ?swap_?$qvector_Vtwinline_t____QEAAXAEAV1__Z(qvector<twinline_t> *__hidden this, qvector<twinline_t> *r);
void __cdecl ?swap_?$qvector_Vvalstr_t____QEAAXAEAV1__Z(qvector<valstr_t> *__hidden this, qvector<valstr_t> *r);
void __cdecl ?swap_?$qvector_W4movbpt_code_t____QEAAXAEAV1__Z(qvector<movbpt_code_t> *__hidden this, qvector<movbpt_code_t> *r);
void __cdecl ?swap_?$qvector__J__QEAAXAEAV1__Z(qvector<long long> *__hidden this, qvector<long long> *r);
void __cdecl ?swap_?$qvector__K__QEAAXAEAV1__Z(qvector<unsigned long long> *__hidden this, qvector<unsigned long long> *r);
void __cdecl ?swap_?$qvector__N__QEAAXAEAV1__Z(qvector<bool> *__hidden this, qvector<bool> *r);
void __cdecl ?swap_?$qvector__W__QEAAXAEAV1__Z(qvector<wchar_t> *__hidden this, qvector<wchar_t> *r);
void __cdecl ?swap_?$set_HU?$less_H_std__V?$allocator_H_2__std__QEAAXAEAV12__Z(std::set<int> *__hidden this, std::set<int> *_Right);
void __cdecl ?swap_?$tuple_$$V_std__QEAAXAEAV12__Z(std::tuple<> *__hidden this, std::tuple<> *);
void __cdecl ?swap_argloc_t__QEAAXAEAV1__Z(argloc_t *__hidden this, argloc_t *r);
void __cdecl ?swap_argpart_t__QEAAXAEAU1__Z(argpart_t *__hidden this, argpart_t *r);
void __cdecl ?swap_array_type_data_t__QEAAXAEAU1__Z(array_type_data_t *__hidden this, array_type_data_t *r);
void __cdecl ?swap_bitfield_type_data_t__QEAAXAEAU1__Z(bitfield_type_data_t *__hidden this, bitfield_type_data_t *r);
void __cdecl ?swap_enum_member_t__QEAAXAEAU1__Z(enum_member_t *__hidden this, enum_member_t *r);
void __cdecl ?swap_enum_type_data_t__QEAAXAEAU1__Z(enum_type_data_t *__hidden this, enum_type_data_t *r);
void __cdecl ?swap_func_type_data_t__QEAAXAEAU1__Z(func_type_data_t *__hidden this, func_type_data_t *r);
void __cdecl ?swap_idc_value_t__QEAAXAEAV1__Z(idc_value_t *__hidden this, idc_value_t *v);
void __cdecl ?swap_jvalue_t__QEAAXAEAU1__Z(jvalue_t *__hidden this, jvalue_t *r);
void __cdecl ?swap_lines_rendering_output_t__QEAAXAEAU1__Z(lines_rendering_output_t *__hidden this, lines_rendering_output_t *r);
void __cdecl ?swap_ptr_type_data_t__QEAAXAEAU1__Z(ptr_type_data_t *__hidden this, ptr_type_data_t *r);
void __cdecl ?swap_rangeset_t__QEAAXAEAV1__Z(rangeset_t *__hidden this, rangeset_t *r);
void __cdecl ?swap_regarg_t__QEAAXAEAU1__Z(regarg_t *__hidden this, regarg_t *r);
void __cdecl ?swap_regval_t__QEAAXAEAU1__Z(regval_t *__hidden this, regval_t *r);
void __cdecl ?swap_regvar_t__QEAAXAEAU1__Z(regvar_t *__hidden this, regvar_t *r);
void __cdecl ?swap_tinfo_t__QEAAXAEAV1__Z(tinfo_t *__hidden this, tinfo_t *r);
void __cdecl ?swap_typedef_type_data_t__QEAAXAEAU1__Z(typedef_type_data_t *__hidden this, typedef_type_data_t *r);
void __cdecl ?swap_udt_member_t__QEAAXAEAU1__Z(udt_member_t *__hidden this, udt_member_t *r);
void __cdecl ?swap_udt_type_data_t__QEAAXAEAU1__Z(udt_type_data_t *__hidden this, udt_type_data_t *r);
void __cdecl ?swap_valinfo_t__QEAAXAEAU1__Z(valinfo_t *__hidden this, valinfo_t *r);
const char *__cdecl ?symbol_bpt_location_t__QEBAPEBDXZ(const bpt_location_t *__hidden this);
ssize_t ?term_processor_t__SA_JXZ(void);
bool __cdecl ?term_debugger_debugger_t__QEAA_NXZ(debugger_t *__hidden this);
void __cdecl ?term_ignore_micro_ignore_micro_t__QEAAXXZ(ignore_micro_t *__hidden this);
int __cdecl ?term_outctx_outctx_base_t__UEAAHPEBD_Z(outctx_base_t *__hidden this, const char *prefix);
bool __cdecl ?test_bit_bytevec_t__QEBA_N_K_Z(const bytevec_t *__hidden this, size_t bit);
drc_t __cdecl ?thread_continue_debugger_t__QEAA?AW4drc_t__HPEAV?$_qstring_D___Z(debugger_t *__hidden this, thid_t tid, qstring *errbuf);
drc_t __cdecl ?thread_get_sreg_base_debugger_t__QEAA?AW4drc_t__PEA_KHHPEAV?$_qstring_D___Z(debugger_t *__hidden this, ea_t *answer, thid_t tid, int sreg_value, qstring *errbuf);
drc_t __cdecl ?thread_suspend_debugger_t__QEAA?AW4drc_t__HPEAV?$_qstring_D___Z(debugger_t *__hidden this, thid_t tid, qstring *errbuf);
bool __cdecl ?ti_processor_t__QEBA_NXZ(const processor_t *__hidden this);
fpvalue_error_t __cdecl ?to_10bytes_fpvalue_t__QEBA?AW4fpvalue_error_t__PEAX_Z(const fpvalue_t *__hidden this, void *fpval);
fpvalue_error_t __cdecl ?to_12bytes_fpvalue_t__QEBA?AW4fpvalue_error_t__PEAX_Z(const fpvalue_t *__hidden this, void *fpval);
char __cdecl ?to_char_type_?$_Char_traits_DH_std__SADAEBH_Z(const std::_Char_traits<char, int>::int_type *_Meta);
unsigned __int16 __cdecl ?to_char_type_?$_Char_traits_GG_std__SAGAEBG_Z(const std::_Char_traits<unsigned short, unsigned short>::int_type *_Meta);
__int16 __cdecl ?to_char_type_?$_Char_traits__SG_std__SA_SAEBG_Z(const std::_Char_traits<char16_t, unsigned short>::int_type *_Meta);
__int32 __cdecl ?to_char_type_?$_Char_traits__UI_std__SA_UAEBI_Z(const std::_Char_traits<char32_t, unsigned int>::int_type *_Meta);
__int16 __cdecl ?to_char_type_?$_Char_traits__WG_std__SA_WAEBG_Z(const std::_Char_traits<wchar_t, unsigned short>::int_type *_Meta);
char __cdecl ?to_char_type_?$_Narrow_char_traits_DH_std__SADAEBH_Z(const std::_Narrow_char_traits<char, int>::int_type *_Meta);
unsigned __int16 __cdecl ?to_char_type_?$_WChar_traits_G_std__SAGAEBG_Z(const std::_WChar_traits<_Elem>::int_type *_Meta);
__int16 __cdecl ?to_char_type_?$_WChar_traits__S_std__SA_SAEBG_Z(const std::_WChar_traits<_Elem>::int_type *_Meta);
__int16 __cdecl ?to_char_type_?$_WChar_traits__W_std__SA_WAEBG_Z(const std::_WChar_traits<_Elem>::int_type *_Meta);
fpvalue_error_t __cdecl ?to_double_fpvalue_t__QEBA?AW4fpvalue_error_t__PEAN_Z(const fpvalue_t *__hidden this, double *fpval);
fpvalue_error_t __cdecl ?to_float_fpvalue_t__QEBA?AW4fpvalue_error_t__PEAM_Z(const fpvalue_t *__hidden this, float *fpval);
fpvalue_error_t __cdecl ?to_half_fpvalue_t__QEBA?AW4fpvalue_error_t__PEAG_Z(const fpvalue_t *__hidden this, uint16 *fpval);
fpvalue_error_t __cdecl ?to_int64_fpvalue_t__QEBA?AW4fpvalue_error_t__PEA_J_N_Z(const fpvalue_t *__hidden this, int64 *out, bool round);
std::_Char_traits<char, int>::int_type __cdecl ?to_int_type_?$_Char_traits_DH_std__SAHAEBD_Z(char *_Ch);
std::_Char_traits<unsigned short, unsigned short>::int_type __cdecl ?to_int_type_?$_Char_traits_GG_std__SAGAEBG_Z(unsigned __int16 *_Ch);
std::_Char_traits<char16_t, unsigned short>::int_type __cdecl ?to_int_type_?$_Char_traits__SG_std__SAGAEB_S_Z(__int16 *_Ch);
std::_Char_traits<char32_t, unsigned int>::int_type __cdecl ?to_int_type_?$_Char_traits__UI_std__SAIAEB_U_Z(__int32 *_Ch);
std::_Char_traits<wchar_t, unsigned short>::int_type __cdecl ?to_int_type_?$_Char_traits__WG_std__SAGAEB_W_Z(__int16 *_Ch);
std::_Narrow_char_traits<char, int>::int_type __cdecl ?to_int_type_?$_Narrow_char_traits_DH_std__SAHAEBD_Z(char *_Ch);
std::_WChar_traits<unsigned short>::int_type __cdecl ?to_int_type_?$_WChar_traits_G_std__SAGAEBG_Z(unsigned __int16 *_Ch);
std::_WChar_traits<char16_t>::int_type __cdecl ?to_int_type_?$_WChar_traits__S_std__SAGAEB_S_Z(__int16 *_Ch);
std::_WChar_traits<wchar_t>::int_type __cdecl ?to_int_type_?$_WChar_traits__W_std__SAGAEB_W_Z(__int16 *_Ch);
void __cdecl ?to_str_fpvalue_t__QEBAXPEAD_KI_Z(const fpvalue_t *__hidden this, char *buf, size_t bufsize, uint mode);
fpvalue_error_t __cdecl ?to_sval_fpvalue_t__QEBA?AW4fpvalue_error_t__PEA_J_N_Z(const fpvalue_t *__hidden this, sval_t *out, bool round);
fpvalue_error_t __cdecl ?to_uint64_fpvalue_t__QEBA?AW4fpvalue_error_t__PEA_K_N_Z(const fpvalue_t *__hidden this, uint64 *out, bool round);
ea_t __cdecl ?toea_enumplace_t__UEBA_KXZ(const enumplace_t *__hidden this);
ea_t __cdecl ?toea_hexplace_t__UEBA_KXZ(const hexplace_t *__hidden this);
ea_t __cdecl ?toea_idaplace_t__UEBA_KXZ(const idaplace_t *__hidden this);
ea_t __cdecl ?toea_place_t__UEBA_KXZ(const place_t *__hidden this);
ea_t __cdecl ?toea_simpleline_place_t__UEBA_KXZ(const simpleline_place_t *__hidden this);
ea_t __cdecl ?toea_structplace_t__UEBA_KXZ(const structplace_t *__hidden this);
void __cdecl ?tohex_bytevec_t__QEBAXPEAV?$_qstring_D___Z(const bytevec_t *__hidden this, qstring *out);
token_t *__cdecl ?top_?$qstack_Utoken_t____QEAAAEAUtoken_t__XZ(qstack<token_t> *__hidden this);
token_t *__cdecl ?top_?$qstack_Utoken_t____QEBAAEBUtoken_t__XZ(const qstack<token_t> *__hidden this);
point_t __cdecl ?topleft_rect_t__QEBA?AUpoint_t__XZ(const rect_t *__hidden this);
bool __cdecl ?toright_edge_segment_t__QEBA_NXZ(const edge_segment_t *__hidden this);
uval_t __cdecl ?touval_enumplace_t__UEBA_KPEAX_Z(const enumplace_t *__hidden this, void *ud);
uval_t __cdecl ?touval_hexplace_t__UEBA_KPEAX_Z(const hexplace_t *__hidden this, void *ud);
uval_t __cdecl ?touval_idaplace_t__UEBA_KPEAX_Z(const idaplace_t *__hidden this, void *ud);
uval_t __cdecl ?touval_place_t__UEBA_KPEAX_Z(const place_t *__hidden this, void *ud);
uval_t __cdecl ?touval_simpleline_place_t__UEBA_KPEAX_Z(const simpleline_place_t *__hidden this, void *ud);
uval_t __cdecl ?touval_structplace_t__UEBA_KPEAX_Z(const structplace_t *__hidden this, void *ud);
void __cdecl ?track_jump_pattern_t__QEAAXHHE_Z(jump_pattern_t *__hidden this, int reg, int r_i, op_dtype_t dtype);
bool __cdecl ?track_value_until_address_jump_pattern_t__QEAA_NPEAVop_t___K_Z(jump_pattern_t *__hidden this, op_t *op, ea_t ea);
bool __cdecl ?track_value_until_address_impl_jump_pattern_t__IEAA_NPEAVop_t___K_Z(jump_pattern_t *__hidden this, op_t *op, ea_t ea);
void __cdecl ?trackop_jump_pattern_t__QEAAXAEBVop_t__H_Z(jump_pattern_t *__hidden this, const op_t *op, int r_i);
ssize_t __cdecl ?traverse_dirtree_t__QEBA_JAEAUdirtree_visitor_t___Z(const dirtree_t *__hidden this, dirtree_visitor_t *v);
ssize_t __cdecl ?treat_hindering_item_processor_t__SA_J_KI00_Z(ea_t hindering_item_ea, flags_t new_item_flags, ea_t new_item_ea, asize_t new_item_length);
void __cdecl ?tree_layout_abstract_graph_t__IEAAXAEAVedge_typer_t__AEBVnode_set_t___Z(abstract_graph_t *__hidden this, edge_typer_t *et, const node_set_t *entries);
_qstring<char> *__cdecl ?trim2_?$_qstring_D__QEAAAEAV1_D_Z(_qstring<char> *__hidden this, char blank);
_qstring<unsigned char> *__cdecl ?trim2_?$_qstring_E__QEAAAEAV1_E_Z(_qstring<unsigned char> *__hidden this, unsigned __int8 blank);
_qstring<wchar_t> *__cdecl ?trim2_?$_qstring__W__QEAAAEAV1__W_Z(_qstring<wchar_t> *__hidden this, __int16 blank);
void __cdecl ?truncate_?$qvector_D__QEAAXXZ(qvector<char> *__hidden this);
void __cdecl ?truncate_?$qvector_E__QEAAXXZ(qvector<unsigned char> *__hidden this);
void __cdecl ?truncate_?$qvector_H__QEAAXXZ(qvector<int> *__hidden this);
void __cdecl ?truncate_?$qvector_I__QEAAXXZ(qvector<unsigned int> *__hidden this);
void __cdecl ?truncate_?$qvector_P6A_JPEAW4syntax_highlight_style__PEBD_Z__QEAAXXZ(qvector<long long (*)(syntax_highlight_style *, const char *)> *__hidden this);
void __cdecl ?truncate_?$qvector_P6A_NPEAW4syntax_highlight_style__AEBV?$_qstring_D___Z__QEAAXXZ(qvector<bool (*)(syntax_highlight_style *, const _qstring<char> &)> *__hidden this);
void __cdecl ?truncate_?$qvector_PEAUbpt_t____QEAAXXZ(qvector<bpt_t *> *__hidden this);
void __cdecl ?truncate_?$qvector_PEAUextlang_t____QEAAXXZ(qvector<extlang_t *> *__hidden this);
void __cdecl ?truncate_?$qvector_PEAUline_rendering_output_entry_t____QEAAXXZ(qvector<line_rendering_output_entry_t *> *__hidden this);
void __cdecl ?truncate_?$qvector_PEAVsnapshot_t____QEAAXXZ(qvector<snapshot_t *> *__hidden this);
void __cdecl ?truncate_?$qvector_PEBD__QEAAXXZ(qvector<const char *> *__hidden this);
void __cdecl ?truncate_?$qvector_PEBUbpt_t____QEAAXXZ(qvector<const bpt_t *> *__hidden this);
void __cdecl ?truncate_?$qvector_PEBVrangeset_t____QEAAXXZ(qvector<const rangeset_t *> *__hidden this);
void __cdecl ?truncate_?$qvector_PEBVtwinline_t____QEAAXXZ(qvector<const twinline_t *> *__hidden this);
void __cdecl ?truncate_?$qvector_Uargpart_t____QEAAXXZ(qvector<argpart_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ubpt_t____QEAAXXZ(qvector<bpt_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ubptaddrs_t____QEAAXXZ(qvector<bptaddrs_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ucall_stack_info_t____QEAAXXZ(qvector<call_stack_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ucatch_t____QEAAXXZ(qvector<catch_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ucfgopt_set_t____QEAAXXZ(qvector<cfgopt_set_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uchannel_redir_t____QEAAXXZ(qvector<channel_redir_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ucliopt_t____QEAAXXZ(qvector<cliopt_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ucompiled_binpat_t____QEAAXXZ(qvector<compiled_binpat_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Udebug_event_t____QEAAXXZ(qvector<debug_event_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Udirentry_t____QEAAXXZ(qvector<direntry_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Udirtree_cursor_t____QEAAXXZ(qvector<dirtree_cursor_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uea_name_t____QEAAXXZ(qvector<ea_name_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uedge_t____QEAAXXZ(qvector<edge_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uenum_member_t____QEAAXXZ(qvector<enum_member_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uexception_info_t____QEAAXXZ(qvector<exception_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ufixup_info_t____QEAAXXZ(qvector<fixup_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ufuncarg_t____QEAAXXZ(qvector<funcarg_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ugroup_crinfo_t____QEAAXXZ(qvector<group_crinfo_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uidc_global_t____QEAAXXZ(qvector<idc_global_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uidp_desc_t____QEAAXXZ(qvector<idp_desc_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uidp_name_t____QEAAXXZ(qvector<idp_name_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uioport_bit_t____QEAAXXZ(qvector<ioport_bit_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uioport_t____QEAAXXZ(qvector<ioport_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ujvalue_t____QEAAXXZ(qvector<jvalue_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ukeywords_style_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::keywords_style_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ukvp_t____QEAAXXZ(qvector<kvp_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ulochist_entry_t____QEAAXXZ(qvector<lochist_entry_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ulowcnd_t____QEAAXXZ(qvector<lowcnd_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Umemory_info_t____QEAAXXZ(qvector<memory_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Umemreg_info_t____QEAAXXZ(qvector<memreg_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Umodinfo_t____QEAAXXZ(qvector<modinfo_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Umovbpt_info_t____QEAAXXZ(qvector<movbpt_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Umulticmt_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::multicmt_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uplain_char_ptr_t_ida_syntax_highlighter_t____QEAAXXZ(qvector<ida_syntax_highlighter_t::plain_char_ptr_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Upoint_t____QEAAXXZ(qvector<point_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uprocess_info_t____QEAAXXZ(qvector<process_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uqbasic_block_t____QEAAXXZ(qvector<qbasic_block_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Urange_t____QEAAXXZ(qvector<range_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Urect_t____QEAAXXZ(qvector<rect_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Urefinfo_desc_t____QEAAXXZ(qvector<refinfo_desc_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ureg_access_t____QEAAXXZ(qvector<reg_access_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ureg_info_t____QEAAXXZ(qvector<reg_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uregister_info_t____QEAAXXZ(qvector<register_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uregobj_t____QEAAXXZ(qvector<regobj_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uregval_t____QEAAXXZ(qvector<regval_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Urow_info_t____QEAAXXZ(qvector<row_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uscattered_segm_t____QEAAXXZ(qvector<scattered_segm_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Usegm_move_info_t____QEAAXXZ(qvector<segm_move_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uselection_item_t____QEAAXXZ(qvector<selection_item_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Usimd_info_t____QEAAXXZ(qvector<simd_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Usimpleline_t____QEAAXXZ(qvector<simpleline_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Ustkpnt_t____QEAAXXZ(qvector<stkpnt_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Utev_info_reg_t____QEAAXXZ(qvector<tev_info_reg_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Utev_info_t____QEAAXXZ(qvector<tev_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Utev_reg_value_t____QEAAXXZ(qvector<tev_reg_value_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uthread_name_t____QEAAXXZ(qvector<thread_name_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Utoken_t____QEAAXXZ(qvector<token_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Utype_attr_t____QEAAXXZ(qvector<type_attr_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uudt_member_t____QEAAXXZ(qvector<udt_member_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uupdate_bpt_info_t____QEAAXXZ(qvector<update_bpt_info_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Uxreflist_entry_t____QEAAXXZ(qvector<xreflist_entry_t> *__hidden this);
void __cdecl ?truncate_?$qvector_V?$_qstring_D____QEAAXXZ(qvector<_qstring<char>> *__hidden this);
void __cdecl ?truncate_?$qvector_V?$_qstring_E____QEAAXXZ(qvector<_qstring<unsigned char>> *__hidden this);
void __cdecl ?truncate_?$qvector_V?$_qstring__W____QEAAXXZ(qvector<_qstring<wchar_t>> *__hidden this);
void __cdecl ?truncate_?$qvector_V?$qrefcnt_t_Vsource_item_t______QEAAXXZ(qvector<qrefcnt_t<source_item_t>> *__hidden this);
void __cdecl ?truncate_?$qvector_V?$qvector_H____QEAAXXZ(qvector<qvector<int>> *__hidden this);
void __cdecl ?truncate_?$qvector_V?$qvector_PEBD____QEAAXXZ(qvector<qvector<const char *>> *__hidden this);
void __cdecl ?truncate_?$qvector_V?$qvector_PEBVtwinline_t______QEAAXXZ(qvector<qvector<const twinline_t *>> *__hidden this);
void __cdecl ?truncate_?$qvector_V?$qvector__J____QEAAXXZ(qvector<qvector<long long>> *__hidden this);
void __cdecl ?truncate_?$qvector_Vargloc_t____QEAAXXZ(qvector<argloc_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Vintmap_t____QEAAXXZ(qvector<intmap_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Vnode_set_t____QEAAXXZ(qvector<node_set_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Vop_t____QEAAXXZ(qvector<op_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Vrangeset_t____QEAAXXZ(qvector<rangeset_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Vsync_source_t____QEAAXXZ(qvector<sync_source_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Vtinfo_t____QEAAXXZ(qvector<tinfo_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Vtryblk_t____QEAAXXZ(qvector<tryblk_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Vtwinline_t____QEAAXXZ(qvector<twinline_t> *__hidden this);
void __cdecl ?truncate_?$qvector_Vvalstr_t____QEAAXXZ(qvector<valstr_t> *__hidden this);
void __cdecl ?truncate_?$qvector_W4movbpt_code_t____QEAAXXZ(qvector<movbpt_code_t> *__hidden this);
void __cdecl ?truncate_?$qvector__J__QEAAXXZ(qvector<long long> *__hidden this);
void __cdecl ?truncate_?$qvector__K__QEAAXXZ(qvector<unsigned long long> *__hidden this);
void __cdecl ?truncate_?$qvector__N__QEAAXXZ(qvector<bool> *__hidden this);
void __cdecl ?truncate_?$qvector__W__QEAAXXZ(qvector<wchar_t> *__hidden this);
void __cdecl ?try_move_down_abstract_graph_t__AEBAXAEAV?$qvector_H__HH_Z(const abstract_graph_t *__hidden this, intvec_t *tops, int n, int row_height);
bpt_loctype_t __cdecl ?type_bpt_location_t__QEBA?AW4bpt_loctype_t__XZ(const bpt_location_t *__hidden this);
int __cdecl ?type_cfgopt_t__QEBAHXZ(const cfgopt_t *__hidden this);
jtype_t __cdecl ?type_jvalue_t__QEBA?AW4jtype_t__XZ(const jvalue_t *__hidden this);
reftype_t __cdecl ?type_refinfo_t__QEBAEXZ(const refinfo_t *__hidden this);
const uchar *__cdecl ?u_str_idc_value_t__QEBAPEBEXZ(const idc_value_t *__hidden this);
void __cdecl ?unary_minus_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?unary_not_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
void __cdecl ?unary_plus_lex_value_t__QEAAXAEBU1__Z(lex_value_t *__hidden this, const lex_value_t *v);
ssize_t __cdecl ?undefine_processor_t__SA_J_K_Z(ea_t ea);
bool __cdecl ?unimem_member_t__QEBA_NXZ(const member_t *__hidden this);
dterr_t __cdecl ?unlink_dirtree_t__QEAA?AW4dterr_t__PEBD_Z(dirtree_t *__hidden this, const char *path);
dterr_t __cdecl ?unlink_dirtree_t__QEAA?AW4dterr_t___K_Z(dirtree_t *__hidden this, inode_t inode);
void __cdecl ?unlink_inode_dirspec_t__UEAAX_K_Z(dirspec_t *__hidden this, inode_t inode);
void __cdecl ?unpack_memory_deserializer_t__QEAAXPEAV?$_qstring_D___Z(memory_deserializer_t *__hidden this, qstring *out);
const void *__cdecl ?unpack_buf_memory_deserializer_t__QEAAPEBXXZ(memory_deserializer_t *__hidden this);
const void *__cdecl ?unpack_buf_inplace_memory_deserializer_t__QEAAPEBXXZ(memory_deserializer_t *__hidden this);
bool __cdecl ?unpack_bytevec_memory_deserializer_t__QEAA_NPEAVbytevec_t___Z(memory_deserializer_t *__hidden this, bytevec_t *out);
uint8 __cdecl ?unpack_db_memory_deserializer_t__QEAAEXZ(memory_deserializer_t *__hidden this);
uint32 __cdecl ?unpack_dd_memory_deserializer_t__QEAAIXZ(memory_deserializer_t *__hidden this);
uint64 __cdecl ?unpack_dq_memory_deserializer_t__QEAA_KXZ(memory_deserializer_t *__hidden this);
char *__cdecl ?unpack_ds_memory_deserializer_t__QEAAPEAD_N_Z(memory_deserializer_t *__hidden this, bool empty_null);
bool __cdecl ?unpack_ds_to_buf_memory_deserializer_t__QEAA_NPEAD_K_Z(memory_deserializer_t *__hidden this, char *buf, size_t bufsize);
uint16 __cdecl ?unpack_dw_memory_deserializer_t__QEAAGXZ(memory_deserializer_t *__hidden this);
ea64_t __cdecl ?unpack_ea64_memory_deserializer_t__QEAA_KXZ(memory_deserializer_t *__hidden this);
ea_t __cdecl ?unpack_ea_memory_deserializer_t__QEAA_KXZ(memory_deserializer_t *__hidden this);
void __cdecl ?unpack_eavec_memory_deserializer_t__QEAAXPEAV?$qvector__K___K_Z(memory_deserializer_t *__hidden this, eavec_t *vec, ea_t ea);
const void *__cdecl ?unpack_obj_memory_deserializer_t__QEAAPEBXPEAX_K_Z(memory_deserializer_t *__hidden this, void *obj, size_t objsize);
const void *__cdecl ?unpack_obj_inplace_memory_deserializer_t__QEAAPEBX_K_Z(memory_deserializer_t *__hidden this, size_t objsize);
const char *__cdecl ?unpack_str_memory_deserializer_t__QEAAPEBDXZ(memory_deserializer_t *__hidden this);
bool __cdecl ?unpack_str_memory_deserializer_t__QEAA_NPEAV?$_qstring_D___Z(memory_deserializer_t *__hidden this, qstring *out);
void __cdecl ?unsync_struc_t__QEAAXXZ(struc_t *__hidden this);
const qstring *__cdecl ?up_linearray_t__QEAAPEBV?$_qstring_D__XZ(linearray_t *__hidden this);
action_state_t __cdecl ?update_action_handler_t__UEAA?AW4action_state_t__PEAUaction_ctx_base_t___Z(action_handler_t *__hidden this, action_update_ctx_t *ctx);
bool __cdecl ?update_segment_t__QEAA_NXZ(segment_t *__hidden this);
drc_t __cdecl ?update_bpts_debugger_t__QEAA?AW4drc_t__PEAHPEAUupdate_bpt_info_t__HHPEAV?$_qstring_D___Z(debugger_t *__hidden this, int *nbpts, update_bpt_info_t *bpts, int nadd, int ndel, qstring *errbuf);
drc_t __cdecl ?update_call_stack_debugger_t__QEAA?AW4drc_t__HPEAUcall_stack_t___Z(debugger_t *__hidden this, thid_t tid, call_stack_t *trace);
ssize_t __cdecl ?update_call_stack_processor_t__SA_JPEAUcall_stack_t__HP6AAEBUregval_t__PEBDPEBU3__ZAEBU3__Z(call_stack_t *stack, int tid, processor_t::regval_getter_t *_getreg, const regval_t *regvalues);
void __cdecl ?update_length_valstr_t__AEAAXH_Z(valstr_t *__hidden this, int ptvf);
drc_t __cdecl ?update_lowcnds_debugger_t__QEAA?AW4drc_t__PEAHPEBUlowcnd_t__HPEAV?$_qstring_D___Z(debugger_t *__hidden this, int *nupdated, const lowcnd_t *lowcnds, int nlowcnds, qstring *errbuf);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::iterator __cdecl ?upper_bound_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_AEBH_Z(std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::const_iterator __cdecl ?upper_bound_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBHH_std___std___std___2_AEBH_Z(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::iterator __cdecl ?upper_bound_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_AEBV?$_qstring_D___Z(std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::const_iterator __cdecl ?upper_bound_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___std___std___2_AEBV?$_qstring_D___Z(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::iterator __cdecl ?upper_bound_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_AEB_K_Z(std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::const_iterator __cdecl ?upper_bound_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___std___std___2_AEB_K_Z(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::iterator __cdecl ?upper_bound_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEAA?AV?$_Tree_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_AEB_K_Z(std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::const_iterator __cdecl ?upper_bound_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_U?$pair_$$CB_K_K_std___std___std___2_AEB_K_Z(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this, const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::key_type *_Keyval);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::iterator __cdecl ?upper_bound_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEAA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_AEBH_Z(std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type *_Keyval);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::const_iterator __cdecl ?upper_bound_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AV?$_Tree_const_iterator_V?$_Tree_val_U?$_Tree_simple_types_H_std___std___2_AEBH_Z(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this, const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::key_type *_Keyval);
rangeset_t::const_iterator __cdecl ?upper_bound_rangeset_t__QEBAPEBUrange_t___K_Z(const rangeset_t *__hidden this, ea_t ea);
void __cdecl ?usage_cliopts_t__QEBAX_N_Z(const cliopts_t *__hidden this, bool is_error);
bool __cdecl ?use32_processor_t__QEBA_NXZ(const processor_t *__hidden this);
bool __cdecl ?use64_processor_t__QEBA_NXZ(const processor_t *__hidden this);
void __cdecl ?use_arg_tinfos_argtinfo_helper_t__QEAAX_KPEAUfunc_type_data_t__PEAV?$qvector_Ufuncarg_t_____Z(argtinfo_helper_t *__hidden this, ea_t caller, func_type_data_t *fti, funcargvec_t *rargs);
ssize_t __cdecl ?use_arg_types_processor_t__SA_J_KPEAUfunc_type_data_t__PEAX_Z(ea_t ea, func_type_data_t *fti, void *rargs);
bool __cdecl ?use_mappings_processor_t__QEBA_NXZ(const processor_t *__hidden this);
bool __cdecl ?use_memregs_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
ssize_t __cdecl ?use_regarg_type_processor_t__SA_JPEAH_KPEAX_Z(int *idx, ea_t ea, void *rargs);
bool __cdecl ?use_sregs_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
bool __cdecl ?use_std_table_switch_info_t__QEBA_NXZ(const switch_info_t *__hidden this);
ssize_t __cdecl ?use_stkarg_type_processor_t__SA_J_KAEBUfuncarg_t___Z(ea_t ea, const funcarg_t *arg);
bool __cdecl ?use_tbyte_processor_t__QEBA_NXZ(const processor_t *__hidden this);
void *__cdecl ?userdata_linearray_t__QEBAPEAXXZ(const linearray_t *__hidden this);
bool __cdecl ?valid_direntry_t__QEBA_NXZ(const direntry_t *__hidden this);
bool __cdecl ?valid_dirtree_cursor_t__QEBA_NXZ(const dirtree_cursor_t *__hidden this);
bool __cdecl ?valid_exec_request_t__QEBA_NXZ(const exec_request_t *__hidden this);
bool __cdecl ?valid_bg_color_node_info_t__QEBA_NXZ(const node_info_t *__hidden this);
bool __cdecl ?valid_ea_node_info_t__QEBA_NXZ(const node_info_t *__hidden this);
bool __cdecl ?valid_flags_node_info_t__QEBA_NXZ(const node_info_t *__hidden this);
bool __cdecl ?valid_frame_color_node_info_t__QEBA_NXZ(const node_info_t *__hidden this);
bool __cdecl ?valid_text_node_info_t__QEBA_NXZ(const node_info_t *__hidden this);
ssize_t __cdecl ?validate_flirt_func_processor_t__SA_J_KPEBD_Z(ea_t start_ea, const char *funcname);
ssize_t __cdecl ?valobj_netnode__QEBA_JPEAX_K_Z(const netnode *__hidden this, void *buf, size_t bufsize);
ssize_t __cdecl ?valstr_netnode__QEBA_JPEAD_K_Z(const netnode *__hidden this, char *buf, size_t bufsize);
ssize_t __cdecl ?valstr_netnode__QEBA_JPEAV?$_qstring_D___Z(const netnode *__hidden this, qstring *buf);
std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>>::value_compare __cdecl ?value_comp_?$_Tree_V?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__std___std__QEBA?AVvalue_compare_?$_Tmap_traits_HHU?$less_H_std__V?$allocator_U?$pair_$$CBHH_std___2_$0A__2_XZ(const std::_Tree<std::_Tmap_traits<int, int, std::less<int>, std::allocator<std::pair<const int, int>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>>::value_compare __cdecl ?value_comp_?$_Tree_V?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__std___std__QEBA?AVvalue_compare_?$_Tmap_traits_V?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t____U?$less_V?$_qstring_D___std__V?$allocator_U?$pair_$$CBV?$_qstring_D__V?$qrefcnt_t_Vrefcnted_regex_t_____std___4_$0A__2_XZ(const std::_Tree<std::_Tmap_traits<_qstring<char>, qrefcnt_t<refcnted_regex_t>, std::less<_qstring<char>>, std::allocator<std::pair<const _qstring<char>, qrefcnt_t<refcnted_regex_t>>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>>::value_compare __cdecl ?value_comp_?$_Tree_V?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__std___std__QEBA?AVvalue_compare_?$_Tmap_traits__KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t____U?$less__K_std__V?$allocator_U?$pair_$$CB_KUstate_t_?$backward_flow_iterator_t_Uno_regs_t__Usimple_bfi_t_____std___4_$0A__2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, backward_flow_iterator_t<no_regs_t, simple_bfi_t>::state_t>>, false>> *__hidden this);
std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>>::value_compare __cdecl ?value_comp_?$_Tree_V?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__std___std__QEBA?AVvalue_compare_?$_Tmap_traits__K_KU?$less__K_std__V?$allocator_U?$pair_$$CB_K_K_std___2_$0A__2_XZ(const std::_Tree<std::_Tmap_traits<unsigned long long, unsigned long long, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>, false>> *__hidden this);
std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>>::value_compare __cdecl ?value_comp_?$_Tree_V?$_Tset_traits_HU?$less_H_std__V?$allocator_H_2_$0A__std___std__QEBA?AU?$less_H_2_XZ(const std::_Tree<std::_Tset_traits<int, std::less<int>, std::allocator<int>, false>> *__hidden this);
bool __cdecl ?value_exists_netnode__QEBA_NXZ(const netnode *__hidden this);
bool __cdecl ?vbool_jvalue_t__QEBA_NXZ(const jvalue_t *__hidden this);
bool __cdecl ?verify_rangeset_t__AEBA_NXZ(const rangeset_t *__hidden this);
ssize_t __cdecl ?verify_noreturn_processor_t__SA_JPEAVfunc_t___Z(func_t *pfn);
ssize_t __cdecl ?verify_sp_processor_t__SA_JPEAVfunc_t___Z(func_t *pfn);
ssize_t __cdecl ?vgrcall_abstract_graph_t__QEAA_JHPEAD_Z(abstract_graph_t *__hidden this, int code, va_list va);
bool __cdecl ?virtual_threads_debugger_t__QEBA_NXZ(const debugger_t *__hidden this);
ssize_t __cdecl ?visit_dirtree_visitor_t__UEAA_JAEBUdirtree_cursor_t__AEBUdirentry_t___Z(dirtree_visitor_t *__hidden this, const dirtree_cursor_t *c, const direntry_t *de);
int __cdecl ?visit_bpt_bpt_visitor_t__UEAAHPEBUbpt_t___Z(bpt_visitor_t *__hidden this, const bpt_t *bpt);
int __cdecl ?visit_edge_graph_visitor_t__MEAAHUedge_t__PEAUedge_info_t___Z(graph_visitor_t *__hidden this, edge_t e, edge_info_t *ei);
int __cdecl ?visit_enum_member_enum_member_visitor_t__UEAAH_K0_Z(enum_member_visitor_t *__hidden this, const_t cid, uval_t value);
ssize_t __cdecl ?visit_extlang_extlang_visitor_t__UEAA_JPEAUextlang_t___Z(extlang_visitor_t *__hidden this, extlang_t *extlang);
int __cdecl ?visit_field_struct_field_visitor_t__UEAAHPEAVstruc_t__PEAVmember_t___Z(struct_field_visitor_t *__hidden this, struc_t *sptr, member_t *mptr);
int __cdecl ?visit_file_file_enumerator_t__UEAAHPEBD_Z(file_enumerator_t *__hidden this, const char *file);
int __cdecl ?visit_location_aloc_visitor_t__UEAAHAEAVargloc_t__HH_Z(aloc_visitor_t *__hidden this, argloc_t *v, int off, int size);
int __cdecl ?visit_location_const_aloc_visitor_t__UEAAHAEBVargloc_t__HH_Z(const_aloc_visitor_t *__hidden this, const argloc_t *v, int off, int size);
int __cdecl ?visit_node_graph_node_visitor_t__UEAAHH_Z(graph_node_visitor_t *__hidden this, int);
int __cdecl ?visit_node_graph_visitor_t__MEAAHHAEAUrect_t___Z(graph_visitor_t *__hidden this, int n, rect_t *r);
int __cdecl ?visit_nodes_abstract_graph_t__IEBAHHAEAVgraph_node_visitor_t___Z(const abstract_graph_t *__hidden this, int node, graph_node_visitor_t *gv);
int __cdecl ?visit_paths_abstract_graph_t__IEBAHHAEAUgraph_path_visitor_t___Z(const abstract_graph_t *__hidden this, int node, graph_path_visitor_t *gv);
int __cdecl ?visit_type_tinfo_visitor_t__UEAAHPEAUtype_mods_t__AEBVtinfo_t__PEBD2_Z(tinfo_visitor_t *__hidden this, type_mods_t *out, const tinfo_t *tif, const char *name, const char *cmt);
_qstring<char> *__cdecl ?vsprnt_?$_qstring_D__QEAAAEAV1_PEBDPEAD_Z(_qstring<char> *__hidden this, const char *format, va_list va);
_qstring<unsigned char> *__cdecl ?vsprnt_?$_qstring_E__QEAAAEAV1_PEBDPEAD_Z(_qstring<unsigned char> *__hidden this, const char *format, va_list va);
_qstring<wchar_t> *__cdecl ?vsprnt_?$_qstring__W__QEAAAEAV1_PEBDPEAD_Z(_qstring<wchar_t> *__hidden this, const char *format, va_list va);
int __cdecl ?walk_backward_graph_path_visitor_t__UEAAHH_Z(graph_path_visitor_t *__hidden this, int);
int __cdecl ?walk_forward_graph_path_visitor_t__UEAAHH_Z(graph_path_visitor_t *__hidden this, int);
bool __cdecl ?was_created_fixup_data_t__QEBA_NXZ(const fixup_data_t *__hidden this);
const char *__cdecl ?what_exception_std__UEBAPEBDXZ(const std::exception *__hidden this);
int __cdecl ?width_rect_t__QEBAHXZ(const rect_t *__hidden this);
uint64 __cdecl ?write_bitfield_value_tinfo_t__QEBA_K_K0H_Z(const tinfo_t *__hidden this, uint64 dst, uint64 v, int bitoff);
ssize_t __cdecl ?write_file_debugger_t__QEAA_JH_JPEBX_KPEAV?$_qstring_D___Z(debugger_t *__hidden this, int fn, int64 off, const void *buf, size_t size, qstring *errbuf);
drc_t __cdecl ?write_memory_debugger_t__QEAA?AW4drc_t__PEA_K_KPEBX1PEAV?$_qstring_D___Z(debugger_t *__hidden this, size_t *nbytes, ea_t ea, const void *buffer, size_t size, qstring *errbuf);
drc_t __cdecl ?write_register_debugger_t__QEAA?AW4drc_t__HHPEBUregval_t__PEAV?$_qstring_D___Z(debugger_t *__hidden this, thid_t tid, int regidx, const regval_t *value, qstring *errbuf);
action_attr_t AA_CHECKABLE;
action_attr_t AA_CHECKED;
action_attr_t AA_ICON;
action_attr_t AA_LABEL;
action_attr_t AA_NONE;
action_attr_t AA_SHORTCUT;
action_attr_t AA_STATE;
action_attr_t AA_TOOLTIP;
action_attr_t AA_VISIBILITY;
chooser_base_t::cbres_t ALL_CHANGED;
argreg_policy_t ARGREGS_BY_SLOTS;
argreg_policy_t ARGREGS_FP_CONSUME_GP;
argreg_policy_t ARGREGS_GP_ONLY;
argreg_policy_t ARGREGS_INDEPENDENT;
argreg_policy_t ARGREGS_MIPS_O32;
argreg_policy_t ARGREGS_POLICY_UNDEFINED;
action_state_t AST_DISABLE;
action_state_t AST_DISABLE_ALWAYS;
action_state_t AST_DISABLE_FOR_IDB;
action_state_t AST_DISABLE_FOR_WIDGET;
action_state_t AST_ENABLE;
action_state_t AST_ENABLE_ALWAYS;
action_state_t AST_ENABLE_FOR_IDB;
action_state_t AST_ENABLE_FOR_WIDGET;
hexplace_gen_t::byte_kind_t BK_INVALIDADDR;
hexplace_gen_t::byte_kind_t BK_NOVALUE;
hexplace_gen_t::byte_kind_t BK_VALID;
bpt_loctype_t BPLT_ABS;
bpt_loctype_t BPLT_REL;
bpt_loctype_t BPLT_SRC;
bpt_loctype_t BPLT_SYM;
event_id_t BREAKPOINT;
cb_id CB_CLOSE;
cb_id CB_DESTROYING;
cb_id CB_INIT;
cb_id CB_INVISIBLE;
cb_id CB_YES;
custom_viewer_handler_id_t CDVH_LINES_ALIGNMENT;
custom_viewer_handler_id_t CDVH_LINES_CLICK;
custom_viewer_handler_id_t CDVH_LINES_DBLCLICK;
custom_viewer_handler_id_t CDVH_LINES_DRAWICON;
custom_viewer_handler_id_t CDVH_LINES_ICONMARGIN;
custom_viewer_handler_id_t CDVH_LINES_LINENUM;
custom_viewer_handler_id_t CDVH_LINES_POPUP;
custom_viewer_handler_id_t CDVH_LINES_RADIX;
custom_viewer_handler_id_t CDVH_SRCVIEW;
custom_viewer_handler_id_t CDVH_USERDATA;
custom_viewer_handler_id_t CVH_CLICK;
custom_viewer_handler_id_t CVH_CLOSE;
custom_viewer_handler_id_t CVH_CURPOS;
custom_viewer_handler_id_t CVH_DBLCLICK;
custom_viewer_handler_id_t CVH_HELP;
custom_viewer_handler_id_t CVH_KEYDOWN;
custom_viewer_handler_id_t CVH_MOUSEMOVE;
custom_viewer_handler_id_t CVH_POPUP;
custom_viewer_handler_id_t CVH_QT_AWARE;
custom_viewer_handler_id_t CVH_USERDATA;
debug_name_how_t DEBNAME_EXACT;
debug_name_how_t DEBNAME_LOWER;
debug_name_how_t DEBNAME_NICE;
debug_name_how_t DEBNAME_UPPER;
dbg_event_code_t DEC_ERROR;
dbg_event_code_t DEC_NOTASK;
dbg_event_code_t DEC_TIMEOUT;
dirtree_id_t DIRTREE_BPTS;
dirtree_id_t DIRTREE_END;
dirtree_id_t DIRTREE_ENUMS;
dirtree_id_t DIRTREE_ENUMS_BOOKMARKS;
dirtree_id_t DIRTREE_FUNCS;
dirtree_id_t DIRTREE_IDAPLACE_BOOKMARKS;
dirtree_id_t DIRTREE_IMPORTS;
dirtree_id_t DIRTREE_LOCAL_TYPES;
dirtree_id_t DIRTREE_NAMES;
dirtree_id_t DIRTREE_STRUCTS;
dirtree_id_t DIRTREE_STRUCTS_BOOKMARKS;
demreq_type_t DQT_COMPILER;
demreq_type_t DQT_FULL;
demreq_type_t DQT_NAME_TYPE;
demreq_type_t DQT_NPURGED_2;
demreq_type_t DQT_NPURGED_4;
demreq_type_t DQT_NPURGED_8;
drc_t DRC_CRC;
drc_t DRC_ERROR;
drc_t DRC_EVENTS;
drc_t DRC_FAILED;
drc_t DRC_IDBSEG;
drc_t DRC_NETERR;
drc_t DRC_NOCHG;
drc_t DRC_NOFILE;
drc_t DRC_NONE;
drc_t DRC_NOPROC;
drc_t DRC_OK;
dterr_t DTE_ALREADY_EXISTS;
dterr_t DTE_BAD_PATH;
dterr_t DTE_CANT_RENAME;
dterr_t DTE_LAST;
dterr_t DTE_MAX_DIR;
dterr_t DTE_NOT_DIRECTORY;
dterr_t DTE_NOT_EMPTY;
dterr_t DTE_NOT_FOUND;
dterr_t DTE_OK;
dterr_t DTE_OWN_CHILD;
$7014156F94AE1B7FC5F5E3560392A8C4 DTN_DISPLAY_NAME;
$7014156F94AE1B7FC5F5E3560392A8C4 DTN_FULL_NAME;
event_id_t EXCEPTION;
find_extlang_kind_t FIND_EXTLANG_BY_EXT;
find_extlang_kind_t FIND_EXTLANG_BY_IDX;
find_extlang_kind_t FIND_EXTLANG_BY_NAME;
format_functype_t FMTFUNC_PRINTF;
format_functype_t FMTFUNC_SCANF;
format_functype_t FMTFUNC_STRFMON;
format_functype_t FMTFUNC_STRFTIME;
frame_part_t FPC_ARGS;
frame_part_t FPC_LVARS;
frame_part_t FPC_RETADDR;
frame_part_t FPC_SAVREGS;
fpvalue_kind_t FPV_BADARG;
fpvalue_kind_t FPV_NAN;
fpvalue_kind_t FPV_NINF;
fpvalue_kind_t FPV_NORM;
fpvalue_kind_t FPV_PINF;
gdecode_t GDE_ERROR;
gdecode_t GDE_MANY_EVENTS;
gdecode_t GDE_NO_EVENT;
gdecode_t GDE_ONE_EVENT;
gtd_func_t GTD_CALC_ARGLOCS;
gtd_udt_t GTD_CALC_LAYOUT;
gtd_udt_t GTD_DEL_BITFLDS;
gtd_func_t GTD_NO_ARGLOCS;
gtd_udt_t GTD_NO_LAYOUT;
gts_code_t GTS_BASECLASS;
gts_code_t GTS_NESTED;
syntax_highlight_style HF_COMMENT;
syntax_highlight_style HF_DEFAULT;
syntax_highlight_style HF_KEYWORD1;
syntax_highlight_style HF_KEYWORD2;
syntax_highlight_style HF_KEYWORD3;
syntax_highlight_style HF_MAX;
syntax_highlight_style HF_NUMBER;
syntax_highlight_style HF_PREPROC;
syntax_highlight_style HF_STRING;
hook_type_t HT_DBG;
hook_type_t HT_DEV;
hook_type_t HT_GRAPH;
hook_type_t HT_IDB;
hook_type_t HT_IDD;
hook_type_t HT_IDP;
hook_type_t HT_LAST;
hook_type_t HT_OUTPUT;
hook_type_t HT_UI;
hook_type_t HT_VIEW;
event_id_t INFORMATION;
inftag_t INF_ABIBITS;
inftag_t INF_ABINAME;
inftag_t INF_AF;
inftag_t INF_AF2;
inftag_t INF_APPCALL_OPTIONS;
inftag_t INF_APPTYPE;
inftag_t INF_ARCHIVE_PATH;
inftag_t INF_ASMTYPE;
inftag_t INF_BASEADDR;
inftag_t INF_BIN_PREFIX_SIZE;
inftag_t INF_CC;
inftag_t INF_CC_CM;
inftag_t INF_CC_DEFALIGN;
inftag_t INF_CC_ID;
inftag_t INF_CC_SIZE_B;
inftag_t INF_CC_SIZE_E;
inftag_t INF_CC_SIZE_I;
inftag_t INF_CC_SIZE_L;
inftag_t INF_CC_SIZE_LDBL;
inftag_t INF_CC_SIZE_LL;
inftag_t INF_CC_SIZE_S;
inftag_t INF_CMTFLG;
inftag_t INF_CMT_INDENT;
inftag_t INF_CRC32;
inftag_t INF_CTIME;
inftag_t INF_C_MACROS;
inftag_t INF_DATABASE_CHANGE_COUNT;
inftag_t INF_DATATYPES;
inftag_t INF_DBG_BINPATHS;
inftag_t INF_DEMNAMES;
inftag_t INF_DUALOP_GRAPH;
inftag_t INF_DUALOP_TEXT;
inftag_t INF_ELAPSED;
inftag_t INF_FILETYPE;
inftag_t INF_FILE_FORMAT_NAME;
inftag_t INF_FSIZE;
inftag_t INF_GENFLAGS;
inftag_t INF_GROUPS;
inftag_t INF_HIGHOFF;
inftag_t INF_H_PATH;
inftag_t INF_IDA_VERSION;
inftag_t INF_IDSNODE;
inftag_t INF_IMAGEBASE;
inftag_t INF_INCLUDE;
inftag_t INF_INDENT;
inftag_t INF_INITIAL_VERSION;
inftag_t INF_INPUT_FILE_PATH;
inftag_t INF_LAST;
inftag_t INF_LENXREF;
inftag_t INF_LFLAGS;
inftag_t INF_LIMITER;
inftag_t INF_LISTNAMES;
inftag_t INF_LONG_DEMNAMES;
inftag_t INF_LOWOFF;
inftag_t INF_MAIN;
inftag_t INF_MARGIN;
inftag_t INF_MAXREF;
inftag_t INF_MAX_AUTONAME_LEN;
inftag_t INF_MAX_EA;
inftag_t INF_MD5;
inftag_t INF_MIN_EA;
inftag_t INF_NAMETYPE;
inftag_t INF_NETDELTA;
inftag_t INF_NOPENS;
inftag_t INF_NOTEPAD;
inftag_t INF_OMAX_EA;
inftag_t INF_OMIN_EA;
inftag_t INF_OSTYPE;
inftag_t INF_OUTFILEENC;
inftag_t INF_OUTFLAGS;
inftag_t INF_PREFFLAG;
inftag_t INF_PRIVRANGE;
inftag_t INF_PRIVRANGE_END_EA;
inftag_t INF_PRIVRANGE_START_EA;
inftag_t INF_PROBLEMS;
inftag_t INF_PROCNAME;
inftag_t INF_REFCMTNUM;
inftag_t INF_SELECTORS;
inftag_t INF_SHA256;
inftag_t INF_SHORT_DEMNAMES;
inftag_t INF_SPECSEGS;
inftag_t INF_SRCDBG_PATHS;
inftag_t INF_SRCDBG_UNDESIRED;
inftag_t INF_START_CS;
inftag_t INF_START_EA;
inftag_t INF_START_IP;
inftag_t INF_START_SP;
inftag_t INF_START_SS;
inftag_t INF_STRLIT_BREAK;
inftag_t INF_STRLIT_FLAGS;
inftag_t INF_STRLIT_PREF;
inftag_t INF_STRLIT_SERNUM;
inftag_t INF_STRLIT_ZEROES;
inftag_t INF_STRTYPE;
inftag_t INF_STR_ENCODINGS;
inftag_t INF_TYPE_XREFNUM;
inftag_t INF_VERSION;
inftag_t INF_XREFFLAG;
inftag_t INF_XREFNUM;
jtype_t JT_ARR;
jtype_t JT_BOOL;
$94D4D585A38CDA12BD4A7F760DAFD340 JT_CALL;
$94D4D585A38CDA12BD4A7F760DAFD340 JT_NONE;
jtype_t JT_NUM;
jtype_t JT_OBJ;
jtype_t JT_STR;
$94D4D585A38CDA12BD4A7F760DAFD340 JT_SWITCH;
jtype_t JT_UNKNOWN;
lecvt_code_t LECVT_CANCELED;
lecvt_code_t LECVT_ERROR;
lecvt_code_t LECVT_OK;
event_id_t LIB_LOADED;
event_id_t LIB_UNLOADED;
linput_type_t LINPUT_GENERIC;
linput_type_t LINPUT_LOCAL;
linput_type_t LINPUT_NONE;
linput_type_t LINPUT_PROCMEM;
linput_type_t LINPUT_RFILE;
linput_close_code_t LOC_CLOSE;
linput_close_code_t LOC_KEEP;
linput_close_code_t LOC_UNMAKE;
movbpt_code_t MOVBPT_BAD_TYPE;
movbpt_code_t MOVBPT_DEST_BUSY;
movbpt_code_t MOVBPT_NOT_FOUND;
movbpt_code_t MOVBPT_OK;
chooser_base_t::cbres_t NOTHING_CHANGED;
access_type_t NO_ACCESS;
event_id_t NO_EVENT;
ofile_type_t OFILE_ASM;
ofile_type_t OFILE_DIF;
ofile_type_t OFILE_EXE;
ofile_type_t OFILE_IDC;
ofile_type_t OFILE_LST;
ofile_type_t OFILE_MAP;
path_type_t PATH_TYPE_CMD;
path_type_t PATH_TYPE_ID0;
path_type_t PATH_TYPE_IDB;
event_id_t PROCESS_ATTACHED;
event_id_t PROCESS_DETACHED;
event_id_t PROCESS_EXITED;
event_id_t PROCESS_STARTED;
event_id_t PROCESS_SUSPENDED;
$A32948CF266C727D9CC1D79F2B35CC28 QMOVE_CROSS_FS;
$A32948CF266C727D9CC1D79F2B35CC28 QMOVE_OVERWRITE;
$A32948CF266C727D9CC1D79F2B35CC28 QMOVE_OVR_RO;
range_kind_t RANGE_KIND_FUNC;
range_kind_t RANGE_KIND_HIDDEN_RANGE;
range_kind_t RANGE_KIND_SEGMENT;
range_kind_t RANGE_KIND_UNKNOWN;
access_type_t READ_ACCESS;
fpvalue_error_t REAL_ERROR_BADDATA;
fpvalue_error_t REAL_ERROR_BADSTR;
fpvalue_error_t REAL_ERROR_FORMAT;
fpvalue_error_t REAL_ERROR_FPOVER;
fpvalue_error_t REAL_ERROR_INTOVER;
fpvalue_error_t REAL_ERROR_OK;
fpvalue_error_t REAL_ERROR_RANGE;
fpvalue_error_t REAL_ERROR_ZERODIV;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_ASSERT;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_BADBR;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_BADPAT;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_BADRPT;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_EBRACE;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_EBRACK;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_ECOLLATE;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_ECTYPE;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_EESCAPE;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_EMPTY;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_EPAREN;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_ERANGE;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_ESIZE;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_ESPACE;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_ESUBREG;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_INVARG;
$C7C212E52085C0E483DB7F2B4EDAB218 REG_NOMATCH;
resume_mode_t RESMOD_HANDLE;
resume_mode_t RESMOD_INTO;
resume_mode_t RESMOD_MAX;
resume_mode_t RESMOD_NONE;
resume_mode_t RESMOD_OUT;
resume_mode_t RESMOD_OVER;
resume_mode_t RESMOD_SRCINTO;
resume_mode_t RESMOD_SRCOUT;
resume_mode_t RESMOD_SRCOVER;
resume_mode_t RESMOD_USER;
access_type_t RW_ACCESS;
save_reg_values_t SAVE_ALL_VALUES;
save_reg_values_t SAVE_DIFF;
save_reg_values_t SAVE_NONE;
chooser_base_t::cbres_t SELECTION_CHANGED;
setproc_level_t SETPROC_IDB;
setproc_level_t SETPROC_LOADER;
setproc_level_t SETPROC_LOADER_NON_FATAL;
setproc_level_t SETPROC_USER;
smt_code_t SMT_ARRAY;
smt_code_t SMT_BADARG;
smt_code_t SMT_FAILED;
smt_code_t SMT_KEEP;
smt_code_t SMT_NOCOMPAT;
smt_code_t SMT_OK;
smt_code_t SMT_OVERLAP;
smt_code_t SMT_SIZE;
smt_code_t SMT_WORSE;
src_item_kind_t SRCIT_EXPR;
src_item_kind_t SRCIT_FUNC;
src_item_kind_t SRCIT_LOCVAR;
src_item_kind_t SRCIT_MODULE;
src_item_kind_t SRCIT_NONE;
src_item_kind_t SRCIT_STMT;
src_item_kind_t SRCIT_STTVAR;
event_id_t STEP;
stock_type_id_t STI_ACCHAR;
stock_type_id_t STI_ACHAR;
stock_type_id_t STI_ACUCHAR;
stock_type_id_t STI_AEABI_LCMP;
stock_type_id_t STI_AEABI_MEMCLR;
stock_type_id_t STI_AEABI_MEMCPY;
stock_type_id_t STI_AEABI_MEMSET;
stock_type_id_t STI_AEABI_ULCMP;
stock_type_id_t STI_AUCHAR;
stock_type_id_t STI_COMPLEX128;
stock_type_id_t STI_COMPLEX64;
stock_type_id_t STI_DONT_USE;
stock_type_id_t STI_FDELOP;
stock_type_id_t STI_FPURGING;
stock_type_id_t STI_LAST;
stock_type_id_t STI_MSGSEND;
stock_type_id_t STI_PBYTE;
stock_type_id_t STI_PCCHAR;
stock_type_id_t STI_PCHAR;
stock_type_id_t STI_PCUCHAR;
stock_type_id_t STI_PCVOID;
stock_type_id_t STI_PINT;
stock_type_id_t STI_PPVOID;
stock_type_id_t STI_PUCHAR;
stock_type_id_t STI_PUINT;
stock_type_id_t STI_PVOID;
stock_type_id_t STI_RTC_CHECK_2;
stock_type_id_t STI_RTC_CHECK_4;
stock_type_id_t STI_RTC_CHECK_8;
stock_type_id_t STI_SIZE_T;
stock_type_id_t STI_SSIZE_T;
struc_error_t STRUC_ERROR_MEMBER_NAME;
struc_error_t STRUC_ERROR_MEMBER_NESTED;
struc_error_t STRUC_ERROR_MEMBER_OFFSET;
struc_error_t STRUC_ERROR_MEMBER_OK;
struc_error_t STRUC_ERROR_MEMBER_SIZE;
struc_error_t STRUC_ERROR_MEMBER_STRUCT;
struc_error_t STRUC_ERROR_MEMBER_TINFO;
struc_error_t STRUC_ERROR_MEMBER_UNIVAR;
struc_error_t STRUC_ERROR_MEMBER_VARLAST;
storage_type_t STT_CUR;
storage_type_t STT_DBG;
storage_type_t STT_MM;
storage_type_t STT_VA;
tcc_place_type_t TCCPT_ENUMPLACE;
tcc_place_type_t TCCPT_IDAPLACE;
tcc_place_type_t TCCPT_INVALID;
tcc_place_type_t TCCPT_PLACE;
tcc_place_type_t TCCPT_SIMPLELINE_PLACE;
tcc_place_type_t TCCPT_STRUCTPLACE;
tcc_renderer_type_t TCCRT_FLAT;
tcc_renderer_type_t TCCRT_GRAPH;
tcc_renderer_type_t TCCRT_INVALID;
tcc_renderer_type_t TCCRT_PROXIMITY;
tty_control_t TCT_NOT_OWNER;
tty_control_t TCT_OWNER;
tty_control_t TCT_UNKNOWN;
tinfo_code_t TERR_BADSYNC;
tinfo_code_t TERR_OK;
tinfo_code_t TERR_SAVE;
tinfo_code_t TERR_SERIALIZE;
tinfo_code_t TERR_WRONGNAME;
event_id_t THREAD_EXITED;
event_id_t THREAD_STARTED;
event_id_t TRACE_FULL;
ucdr_kind_t UCDR_MANGLED;
ucdr_kind_t UCDR_NAME;
ucdr_kind_t UCDR_STRLIT;
ucdr_kind_t UCDR_TYPE;
update_type_t UTP_ENUM;
update_type_t UTP_STRUCT;
vme_button_t VME_LEFT_BUTTON;
vme_button_t VME_MID_BUTTON;
vme_button_t VME_RIGHT_BUTTON;
vme_button_t VME_UNKNOWN;
nametype_t VNT_IDENT;
nametype_t VNT_STRLIT;
nametype_t VNT_TYPE;
nametype_t VNT_UDTMEM;
nametype_t VNT_VISIBLE;
access_type_t WRITE_ACCESS;
void __noreturn Err(help_t format, ...);
std::_Invoker_strategy Functor;
double HUGE;
void Info(help_t format, ...);
std::_Tree_child _Left;
void __cdecl MD5Final(uchar digest[16], MD5Context *context);
void __cdecl MD5Init(MD5Context *context);
void __cdecl MD5Transform(uint32 buf[4], const uint32 in[16]);
void __cdecl MD5Update(MD5Context *context, const void *buf, size_t len);
int Message(help_t format, ...);
std::_Uninitialized Noinit;
plugin_t PLUGIN;
std::_Invoker_strategy _Pmd_object;
std::_Invoker_strategy _Pmd_pointer;
std::_Invoker_strategy _Pmd_refwrap;
std::_Invoker_strategy _Pmf_object;
std::_Invoker_strategy _Pmf_pointer;
std::_Invoker_strategy _Pmf_refwrap;
std::_Tree_child Right;
std::_Tree_child _Unused;
void Warn(help_t format, ...);
void __cdecl _Adjust_manually_vector_aligned(void **_Ptr, size_t *_Bytes);
unsigned __int8 __cdecl _BitScanForward(unsigned __int32 *_Index, unsigned __int32 _Mask);
unsigned __int8 __cdecl _BitScanForward64(unsigned __int32 *_Index, unsigned __int64 _Mask);
unsigned __int8 __cdecl _BitScanReverse(unsigned __int32 *_Index, unsigned __int32 _Mask);
unsigned __int8 __cdecl _BitScanReverse64(unsigned __int32 *_Index, unsigned __int64 _Mask);
size_t __cdecl _Convert_size(const size_t _Len);
const _float_const _Denorm_C;
const _float_const _Eps_C;
void __cdecl __noreturn _Exit(int _Code);
const _float_const _FDenorm_C;
const _float_const _FEps_C;
const _float_const _FInf_C;
const _float_const _FNan_C;
const _float_const _FRteps_C;
const _float_const _FSnan_C;
const float _FXbig_C;
const float _FZero_C;
size_t __cdecl _Fnv1a_append_bytes(size_t _Val, const unsigned __int8 *const _First, const size_t _Count);
const double _HUGE;
const _float_const _Hugeval_C;
ISA_AVAILABILITY _ISA_AVAILABLE_ARMNT;
ISA_AVAILABILITY __ISA_AVAILABLE_AVX;
ISA_AVAILABILITY __ISA_AVAILABLE_AVX2;
ISA_AVAILABILITY __ISA_AVAILABLE_AVX512;
ISA_AVAILABILITY __ISA_AVAILABLE_ENFSTRG;
ISA_AVAILABILITY __ISA_AVAILABLE_NEON;
ISA_AVAILABILITY __ISA_AVAILABLE_NEON_ARM64;
ISA_AVAILABILITY __ISA_AVAILABLE_SSE2;
ISA_AVAILABILITY __ISA_AVAILABLE_SSE42;
ISA_AVAILABILITY _ISA_AVAILABLE_X86;
std::_Distance_unknown __cdecl _Idl_dist_add(std::_Distance_unknown, std::_Distance_unknown);
const _float_const _Inf_C;
__int32 __cdecl _InterlockedAnd(__int32 *_Value, __int32 _Mask);
__int16 __cdecl _InterlockedAnd16(__int16 *_Value, __int16 _Mask);
__int64 __cdecl _InterlockedAnd64(__int64 *_Value, __int64 _Mask);
char __cdecl _InterlockedAnd8(char *_Value, char _Mask);
__int32 __cdecl _InterlockedCompareExchange(__int32 *_Destination, __int32 _Exchange, __int32 _Comparand);
unsigned __int8 __cdecl _InterlockedCompareExchange128(__int64 *_Destination, __int64 _ExchangeHigh, __int64 _ExchangeLow, __int64 *_ComparandResult);
__int16 __cdecl _InterlockedCompareExchange16(__int16 *_Destination, __int16 _Exchange, __int16 _Comparand);
__int64 __cdecl _InterlockedCompareExchange64(__int64 *_Destination, __int64 _Exchange, __int64 _Comparand);
char __cdecl _InterlockedCompareExchange8(char *_Destination, char _Exchange, char _Comparand);
__int32 __cdecl _InterlockedDecrement(__int32 *_Addend);
__int16 __cdecl _InterlockedDecrement16(__int16 *_Addend);
__int64 __cdecl _InterlockedDecrement64(__int64 *_Addend);
__int32 __cdecl _InterlockedExchange(__int32 *_Target, __int32 _Value);
__int16 __cdecl _InterlockedExchange16(__int16 *_Target, __int16 _Value);
__int64 __cdecl _InterlockedExchange64(__int64 *_Target, __int64 _Value);
char __cdecl _InterlockedExchange8(char *_Target, char _Value);
__int32 __cdecl _InterlockedExchangeAdd(__int32 *_Addend, __int32 _Value);
__int16 __cdecl _InterlockedExchangeAdd16(__int16 *_Addend, __int16 _Value);
__int64 __cdecl _InterlockedExchangeAdd64(__int64 *_Addend, __int64 _Value);
char __cdecl _InterlockedExchangeAdd8(char *_Addend, char _Value);
__int32 __cdecl _InterlockedIncrement(__int32 *_Addend);
__int16 __cdecl _InterlockedIncrement16(__int16 *_Addend);
__int64 __cdecl _InterlockedIncrement64(__int64 *_Addend);
__int32 __cdecl _InterlockedOr(__int32 *_Value, __int32 _Mask);
__int16 __cdecl _InterlockedOr16(__int16 *_Value, __int16 _Mask);
__int64 __cdecl _InterlockedOr64(__int64 *_Value, __int64 _Mask);
char __cdecl _InterlockedOr8(char *_Value, char _Mask);
__int32 __cdecl _InterlockedXor(__int32 *_Value, __int32 _Mask);
__int16 __cdecl _InterlockedXor16(__int16 *_Value, __int16 _Mask);
__int64 __cdecl _InterlockedXor64(__int64 *_Value, __int64 _Mask);
char __cdecl _InterlockedXor8(char *_Value, char _Mask);
bool __cdecl _Is_pow_2(const size_t _Value);
const _float_const _LDenorm_C;
const _float_const _LEps_C;
const _float_const _LInf_C;
const _float_const _LNan_C;
const _float_const _LRteps_C;
const _float_const _LSnan_C;
const long double _LXbig_C;
const long double _LZero_C;
size_t __cdecl _MallocaComputeSize(size_t _Size);
void *__cdecl _MarkAllocaS(void *_Ptr, unsigned int _Marker);
const _float_const _Nan_C;
void _ReadWriteBarrier(void);
const _float_const _Rteps_C;
const _float_const _Snan_C;
void _Throw_bad_array_new_length(void);
void _Throw_tree_length_error(void);
void _XGetLastError(void);
void _Xbad_alloc(void);
const double _Xbig_C;
void __cdecl _Xinvalid_argument(const char *);
void _Xlen_string(void);
void __cdecl _Xlength_error(const char *);
void __cdecl _Xout_of_range(const char *);
void __cdecl _Xoverflow_error(const char *);
void __cdecl _Xruntime_error(const char *);
const double _Zero_C;
void __cdecl __ExceptionPtrAssign(void *, const void *);
bool __cdecl __ExceptionPtrCompare(const void *, const void *);
void __cdecl __ExceptionPtrCopy(void *, const void *);
void __cdecl __ExceptionPtrCopyException(void *, const void *, const void *);
void __cdecl __ExceptionPtrCreate(void *);
void __cdecl __ExceptionPtrCurrentException(void *);
void __cdecl __ExceptionPtrDestroy(void *);
void __cdecl __ExceptionPtrRethrow(const void *);
void __cdecl __ExceptionPtrSwap(void *, void *);
bool __cdecl __ExceptionPtrToBool(const void *);
int ___mb_cur_max_func(void);
int __cdecl ___mb_cur_max_l_func(_locale_t _Locale);
__crt_locale_data_public *__cdecl __acrt_get_locale_data_prefix(const void *const _LocalePointers);
FILE *__cdecl __acrt_iob_func(unsigned int _Ix);
int __cdecl __acrt_locale_get_ctype_array_value(const unsigned __int16 *const _Locale_pctype_array, const int _Char_value, const int _Mask);
int __cdecl __ascii_iswalpha(const int _C);
int __cdecl __ascii_iswdigit(const int _C);
int __cdecl __ascii_tolower(const int _C);
int __cdecl __ascii_toupper(const int _C);
int __cdecl __ascii_towlower(const int _C);
int __cdecl __ascii_towupper(const int _C);
void *__builtin_assume_aligned(const void *, size_t, ...);
double __cdecl __ceil(double);
float __cdecl __ceilf(float);
int __cdecl __conio_common_vcwprintf(unsigned __int64 _Options, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __conio_common_vcwprintf_p(unsigned __int64 _Options, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __conio_common_vcwprintf_s(unsigned __int64 _Options, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __conio_common_vcwscanf(unsigned __int64 _Options, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
double __cdecl __copysign(double, double);
float __cdecl __copysignf(float, float);
int *__daylight(void);
unsigned __int32 *__doserrno(void);
__int32 *__dstbias(void);
double __cdecl __floor(double);
float __cdecl __floorf(float);
int __fpe_flt_rounds(void);
int *__fpecode(void);
int __isa_available;
int __cdecl __isascii(int _C);
int __cdecl __iscsym(int _C);
int __cdecl __iscsymf(int _C);
__int16 __cdecl __iso_volatile_load16(const __int16 *);
int __cdecl __iso_volatile_load32(const int *);
__int64 __cdecl __iso_volatile_load64(const __int64 *);
char __cdecl __iso_volatile_load8(const char *);
void __cdecl __iso_volatile_store16(__int16 *, __int16);
void __cdecl __iso_volatile_store32(int *, int);
void __cdecl __iso_volatile_store64(__int64 *, __int64);
void __cdecl __iso_volatile_store8(char *, char);
int __cdecl __iswcsym(wint_t _C);
int __cdecl __iswcsymf(wint_t _C);
unsigned __int64 *__local_stdio_printf_options(void);
unsigned __int64 *__local_stdio_scanf_options(void);
unsigned int __cdecl __lzcnt(unsigned int);
unsigned __int16 __cdecl __lzcnt16(unsigned __int16);
unsigned __int64 __cdecl __lzcnt64(unsigned __int64);
int *__p___argc(void);
char ***__p___argv(void);
__int16 ***__p___wargv(void);
int *__p__commode(void);
char ***__p__environ(void);
int *__p__fmode(void);
char **__p__pgmptr(void);
__int16 ***__p__wenviron(void);
__int16 **__p__wpgmptr(void);
const unsigned __int16 *__pctype_func(void);
unsigned int __cdecl __popcnt(unsigned int);
unsigned __int16 __cdecl __popcnt16(unsigned __int16);
unsigned __int64 __cdecl __popcnt64(unsigned __int64);
const wctype_t *__pwctype_func(void);
void __cdecl __noreturn __report_gsfailure(uintptr_t _StackCookie);
double __cdecl __round(double);
float __cdecl __roundf(float);
void __cdecl __security_check_cookie(uintptr_t _StackCookie);
uintptr_t __security_cookie;
void __security_init_cookie(void);
unsigned __int64 __cdecl __shiftright128(unsigned __int64 _LowPart, unsigned __int64 _HighPart, unsigned __int8 _Shift);
unsigned int __cdecl __signbitvalue(double);
unsigned int __cdecl __signbitvaluef(float);
void __cdecl __std_exception_copy(const __std_exception_data *_From, __std_exception_data *_To);
void __cdecl __std_exception_destroy(__std_exception_data *_Data);
void __cdecl __std_reverse_copy_trivially_copyable_1(const void *_First, const void *_Last, void *_Dest);
void __cdecl __std_reverse_copy_trivially_copyable_2(const void *_First, const void *_Last, void *_Dest);
void __cdecl __std_reverse_copy_trivially_copyable_4(const void *_First, const void *_Last, void *_Dest);
void __cdecl __std_reverse_copy_trivially_copyable_8(const void *_First, const void *_Last, void *_Dest);
void __cdecl __std_reverse_trivially_swappable_1(void *_First, void *_Last);
void __cdecl __std_reverse_trivially_swappable_2(void *_First, void *_Last);
void __cdecl __std_reverse_trivially_swappable_4(void *_First, void *_Last);
void __cdecl __std_reverse_trivially_swappable_8(void *_First, void *_Last);
void __cdecl __std_swap_ranges_trivially_swappable_noalias(void *_First1, void *_Last1, void *_First2);
int __cdecl __stdio_common_vfprintf(unsigned __int64 _Options, FILE *_Stream, const char *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vfprintf_p(unsigned __int64 _Options, FILE *_Stream, const char *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vfprintf_s(unsigned __int64 _Options, FILE *_Stream, const char *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vfscanf(unsigned __int64 _Options, FILE *_Stream, const char *_Format, _locale_t _Locale, va_list _Arglist);
int __cdecl __stdio_common_vfwprintf(unsigned __int64 _Options, FILE *_Stream, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vfwprintf_p(unsigned __int64 _Options, FILE *_Stream, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vfwprintf_s(unsigned __int64 _Options, FILE *_Stream, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vfwscanf(unsigned __int64 _Options, FILE *_Stream, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vsnprintf_s(unsigned __int64 _Options, char *_Buffer, size_t _BufferCount, size_t _MaxCount, const char *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vsnwprintf_s(unsigned __int64 _Options, __int16 *_Buffer, size_t _BufferCount, size_t _MaxCount, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vsprintf(unsigned __int64 _Options, char *_Buffer, size_t _BufferCount, const char *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vsprintf_p(unsigned __int64 _Options, char *_Buffer, size_t _BufferCount, const char *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vsprintf_s(unsigned __int64 _Options, char *_Buffer, size_t _BufferCount, const char *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vsscanf(unsigned __int64 _Options, const char *_Buffer, size_t _BufferCount, const char *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vswprintf(unsigned __int64 _Options, __int16 *_Buffer, size_t _BufferCount, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vswprintf_p(unsigned __int64 _Options, __int16 *_Buffer, size_t _BufferCount, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vswprintf_s(unsigned __int64 _Options, __int16 *_Buffer, size_t _BufferCount, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
int __cdecl __stdio_common_vswscanf(unsigned __int64 _Options, const __int16 *_Buffer, size_t _BufferCount, const __int16 *_Format, _locale_t _Locale, va_list _ArgList);
size_t __cdecl __strncnt(const char *_String, size_t _Count);
int __swprintf_l(__int16 *_Buffer, const __int16 *_Format, _locale_t _Locale, ...);
char **__sys_errlist(void);
int *__sys_nerr(void);
uintptr_t __threadhandle(void);
unsigned __int32 __threadid(void);
__int32 *__timezone(void);
int __cdecl __toascii(int _C);
double __cdecl __trunc(double);
float __cdecl __truncf(float);
char **__tzname(void);
bool __uncaught_exception(void);
int __uncaught_exceptions(void);
void __va_start(va_list *, ...);
int __cdecl __vswprintf_l(__int16 *_Buffer, const __int16 *_Format, _locale_t _Locale, va_list _Args);
__int16 *__cdecl __wcserror(const __int16 *_String);
errno_t __cdecl __wcserror_s(__int16 *_Buffer, size_t _SizeInWords, const __int16 *_ErrorMessage);
__int64 __cdecl _abs64(__int64 _Number);
int __cdecl _access(const char *_FileName, int _AccessMode);
errno_t __cdecl _access_s(const char *_FileName, int _AccessMode);
void __cdecl _aligned_free(void *_Block);
void *__cdecl _aligned_malloc(size_t _Size, size_t _Alignment);
size_t __cdecl _aligned_msize(void *_Block, size_t _Alignment, size_t _Offset);
void *__cdecl _aligned_offset_malloc(size_t _Size, size_t _Alignment, size_t _Offset);
void *__cdecl _aligned_offset_realloc(void *_Block, size_t _Size, size_t _Alignment, size_t _Offset);
void *__cdecl _aligned_offset_recalloc(void *_Block, size_t _Count, size_t _Size, size_t _Alignment, size_t _Offset);
void *__cdecl _aligned_realloc(void *_Block, size_t _Size, size_t _Alignment);
void *__cdecl _aligned_recalloc(void *_Block, size_t _Count, size_t _Size, size_t _Alignment);
void *__cdecl _alloca(size_t _Size);
int __cdecl _atodbl(_CRT_DOUBLE *_Result, char *_String);
int __cdecl _atodbl_l(_CRT_DOUBLE *_Result, char *_String, _locale_t _Locale);
double __cdecl _atof_l(const char *_String, _locale_t _Locale);
int __cdecl _atoflt(_CRT_FLOAT *_Result, const char *_String);
int __cdecl _atoflt_l(_CRT_FLOAT *_Result, const char *_String, _locale_t _Locale);
__int64 __cdecl _atoi64(const char *_String);
__int64 __cdecl _atoi64_l(const char *_String, _locale_t _Locale);
int __cdecl _atoi_l(const char *_String, _locale_t _Locale);
__int32 __cdecl _atol_l(const char *_String, _locale_t _Locale);
int __cdecl _atoldbl(_LDOUBLE *_Result, char *_String);
int __cdecl _atoldbl_l(_LDOUBLE *_Result, char *_String, _locale_t _Locale);
__int64 __cdecl _atoll_l(const char *_String, _locale_t _Locale);
void __cdecl _beep(unsigned int _Frequency, unsigned int _Duration);
unsigned __int8 __cdecl _bittest(const __int32 *, __int32);
unsigned __int64 __cdecl _byteswap_uint64(unsigned __int64 _Number);
unsigned __int32 __cdecl _byteswap_ulong(unsigned __int32 _Number);
unsigned __int16 __cdecl _byteswap_ushort(unsigned __int16 _Number);
double __cdecl _cabs(_complex _Complex_value);
int __cdecl _callnewh(size_t _Size);
void *__cdecl _calloc_base(size_t _Count, size_t _Size);
errno_t __cdecl _cgetws_s(__int16 *_Buffer, size_t _BufferCount, size_t *_SizeRead);
int __cdecl _chdir(const char *_Path);
int __cdecl _chdrive(int _Drive);
double __cdecl _chgsign(double _X);
float __cdecl _chgsignf(float _X);
long double __cdecl _chgsignl(long double _X);
int __cdecl _chmod(const char *_FileName, int _Mode);
int __cdecl _chsize(int _FileHandle, __int32 _Size);
errno_t __cdecl _chsize_s(int _FileHandle, __int64 _Size);
int __cdecl _chvalidchk_l(const int _C, const int _Mask, const _locale_t _Locale);
unsigned int _clearfp(void);
int __cdecl _close(int _FileHandle);
int __cdecl _commit(int _FileHandle);
unsigned int __cdecl _control87(unsigned int _NewValue, unsigned int _Mask);
unsigned int __cdecl _controlfp(unsigned int _NewValue, unsigned int _Mask);
errno_t __cdecl _controlfp_s(unsigned int *_CurrentState, unsigned int _NewValue, unsigned int _Mask);
double __cdecl _copysign(double _Number, double _Sign);
float __cdecl _copysignf(float _Number, float _Sign);
long double __cdecl _copysignl(long double _Number, long double _Sign);
int __cdecl _cputws(const __int16 *_Buffer);
int __cdecl _creat(const char *_FileName, int _PermissionMode);
char *__cdecl _ctime32(const __time32_t *_Time);
errno_t __cdecl _ctime32_s(char *_Buffer, size_t _SizeInBytes, const __time32_t *_Time);
char *__cdecl _ctime64(const __time64_t *_Time);
errno_t __cdecl _ctime64_s(char *_Buffer, size_t _SizeInBytes, const __time64_t *_Time);
int __cdecl _cvt_dtoi_sat(double a);
int __cdecl _cvt_dtoi_sent(double a);
__int64 __cdecl _cvt_dtoll_sat(double a);
__int64 __cdecl _cvt_dtoll_sent(double a);
unsigned int __cdecl _cvt_dtoui_sat(double a);
unsigned int __cdecl _cvt_dtoui_sent(double a);
unsigned __int64 __cdecl _cvt_dtoull_sat(double a);
unsigned __int64 __cdecl _cvt_dtoull_sent(double a);
int __cdecl _cvt_ftoi_sat(float a);
int __cdecl _cvt_ftoi_sent(float a);
__int64 __cdecl _cvt_ftoll_sat(float a);
__int64 __cdecl _cvt_ftoll_sent(float a);
unsigned int __cdecl _cvt_ftoui_sat(float a);
unsigned int __cdecl _cvt_ftoui_sent(float a);
unsigned __int64 __cdecl _cvt_ftoull_sat(float a);
unsigned __int64 __cdecl _cvt_ftoull_sent(float a);
int _cwprintf(const __int16 *const _Format, ...);
int _cwprintf_l(const __int16 *const _Format, const _locale_t _Locale, ...);
int _cwprintf_p(const __int16 *const _Format, ...);
int _cwprintf_p_l(const __int16 *const _Format, const _locale_t _Locale, ...);
int _cwprintf_s(const __int16 *const _Format, ...);
int _cwprintf_s_l(const __int16 *const _Format, const _locale_t _Locale, ...);
int _cwscanf(const __int16 *const _Format, ...);
int _cwscanf_l(const __int16 *const _Format, const _locale_t _Locale, ...);
int _cwscanf_s(const __int16 *const _Format, ...);
int _cwscanf_s_l(const __int16 *const _Format, const _locale_t _Locale, ...);
__int16 __cdecl _d_int(double *_Px, __int16 _Xexp);
__int16 __cdecl _dclass(double _X);
__int16 __cdecl _dexp(double *_Px, double _Y, __int32 _Eoff);
double __cdecl _difftime32(__time32_t _Time1, __time32_t _Time2);
double __cdecl _difftime64(__time64_t _Time1, __time64_t _Time2);
double __cdecl _dlog(double _X, int _Baseflag);
__int16 __cdecl _dnorm(unsigned __int16 *_Ps);
int __cdecl _dpcomp(double _X, double _Y);
double __cdecl _dpoly(double _X, const double *_Tab, int _N);
__int16 __cdecl _dscale(double *_Px, __int32 _Lexp);
int __cdecl _dsign(double _X);
double __cdecl _dsin(double _X, unsigned int _Qoff);
__int16 __cdecl _dtest(double *_Px);
__int16 __cdecl _dunscale(__int16 *_Pex, double *_Px);
int __cdecl _dup(int _FileHandle);
int __cdecl _dup2(int _FileHandleSrc, int _FileHandleDst);
errno_t __cdecl _dupenv_s(char **_Buffer, size_t *_BufferCount, const char *_VarName);
char *__cdecl _ecvt(double _Value, int _DigitCount, int *_PtDec, int *_PtSign);
errno_t __cdecl _ecvt_s(char *_Buffer, size_t _BufferCount, double _Value, int _DigitCount, int *_PtDec, int *_PtSign);
int __cdecl _eof(int _FileHandle);
int *_errno(void);
void __cdecl __noreturn _exit(int _Code);
void *__cdecl _expand(void *_Block, size_t _Size);
int __cdecl _fclose_nolock(FILE *_Stream);
int _fcloseall(void);
char *__cdecl _fcvt(double _Value, int _FractionalDigitCount, int *_PtDec, int *_PtSign);
errno_t __cdecl _fcvt_s(char *_Buffer, size_t _BufferCount, double _Value, int _FractionalDigitCount, int *_PtDec, int *_PtSign);
__int16 __cdecl _fd_int(float *_Px, __int16 _Xexp);
__int16 __cdecl _fdclass(float _X);
__int16 __cdecl _fdexp(float *_Px, float _Y, __int32 _Eoff);
float __cdecl _fdlog(float _X, int _Baseflag);
__int16 __cdecl _fdnorm(unsigned __int16 *_Ps);
FILE *__cdecl _fdopen(int _FileHandle, const char *_Mode);
int __cdecl _fdpcomp(float _X, float _Y);
float __cdecl _fdpoly(float _X, const float *_Tab, int _N);
__int16 __cdecl _fdscale(float *_Px, __int32 _Lexp);
int __cdecl _fdsign(float _X);
float __cdecl _fdsin(float _X, unsigned int _Qoff);
__int16 __cdecl _fdtest(float *_Px);
__int16 __cdecl _fdunscale(__int16 *_Pex, float *_Px);
int __cdecl _fflush_nolock(FILE *_Stream);
int __cdecl _fgetc_nolock(FILE *_Stream);
int _fgetchar(void);
wint_t __cdecl _fgetwc_nolock(FILE *_Stream);
wint_t _fgetwchar(void);
__int32 __cdecl _filelength(int _FileHandle);
__int64 __cdecl _filelengthi64(int _FileHandle);
int __cdecl _fileno(FILE *_Stream);
int __cdecl _findclose(intptr_t _FindHandle);
intptr_t __cdecl _findfirst32(const char *_FileName, _finddata32_t *_FindData);
intptr_t __cdecl _findfirst32i64(const char *_FileName, _finddata32i64_t *_FindData);
intptr_t __cdecl _findfirst64(const char *_FileName, __finddata64_t *_FindData);
intptr_t __cdecl _findfirst64i32(const char *_FileName, _finddata64i32_t *_FindData);
int __cdecl _findnext32(intptr_t _FindHandle, _finddata32_t *_FindData);
int __cdecl _findnext32i64(intptr_t _FindHandle, _finddata32i64_t *_FindData);
int __cdecl _findnext64(intptr_t _FindHandle, __finddata64_t *_FindData);
int __cdecl _findnext64i32(intptr_t _FindHandle, _finddata64i32_t *_FindData);
int __cdecl _finite(double _X);
int __cdecl _finitef(float _X);
int _flushall(void);
int __cdecl _fpclass(double _X);
int __cdecl _fpclassf(float _X);
int __cdecl _fpcomp(long double _X, long double _Y);
void __cdecl _fperrraise(int _Except);
void _fpreset(void);
int _fprintf_l(FILE *const _Stream, const char *const _Format, const _locale_t _Locale, ...);
int _fprintf_p(FILE *const _Stream, const char *const _Format, ...);
int _fprintf_p_l(FILE *const _Stream, const char *const _Format, const _locale_t _Locale, ...);
int _fprintf_s_l(FILE *const _Stream, const char *const _Format, const _locale_t _Locale, ...);
int __cdecl _fputc_nolock(int _Character, FILE *_Stream);
int __cdecl _fputchar(int _Character);
wint_t __cdecl _fputwc_nolock(__int16 _Character, FILE *_Stream);
wint_t __cdecl _fputwchar(__int16 _Character);
size_t __cdecl _fread_nolock(void *_Buffer, size_t _ElementSize, size_t _ElementCount, FILE *_Stream);
size_t __cdecl _fread_nolock_s(void *_Buffer, size_t _BufferSize, size_t _ElementSize, size_t _ElementCount, FILE *_Stream);
void __cdecl _free_base(void *_Block);
void __cdecl _freea(void *_Memory);
int _fscanf_l(FILE *const _Stream, const char *const _Format, const _locale_t _Locale, ...);
int _fscanf_s_l(FILE *const _Stream, const char *const _Format, const _locale_t _Locale, ...);
int __cdecl _fseek_nolock(FILE *_Stream, __int32 _Offset, int _Origin);
int __cdecl _fseeki64(FILE *_Stream, __int64 _Offset, int _Origin);
int __cdecl _fseeki64_nolock(FILE *_Stream, __int64 _Offset, int _Origin);
FILE *__cdecl _fsopen(const char *_FileName, const char *_Mode, int _ShFlag);
int __cdecl _fstat32(int _FileHandle, _stat32 *_Stat);
int __cdecl _fstat32i64(int _FileHandle, _stat32i64 *_Stat);
int __cdecl _fstat64(int _FileHandle, _stat64 *_Stat);
int __cdecl _fstat64i32(int _FileHandle, _stat64i32 *_Stat);
__int32 __cdecl _ftell_nolock(FILE *_Stream);
__int64 __cdecl _ftelli64(FILE *_Stream);
__int64 __cdecl _ftelli64_nolock(FILE *_Stream);
char *__cdecl _fullpath(char *_Buffer, const char *_Path, size_t _BufferCount);
int _fwprintf_l(FILE *const _Stream, const __int16 *const _Format, const _locale_t _Locale, ...);
int _fwprintf_p(FILE *const _Stream, const __int16 *const _Format, ...);
int _fwprintf_p_l(FILE *const _Stream, const __int16 *const _Format, const _locale_t _Locale, ...);
int _fwprintf_s_l(FILE *const _Stream, const __int16 *const _Format, const _locale_t _Locale, ...);
size_t __cdecl _fwrite_nolock(const void *_Buffer, size_t _ElementSize, size_t _ElementCount, FILE *_Stream);
int _fwscanf_l(FILE *const _Stream, const __int16 *const _Format, const _locale_t _Locale, ...);
int _fwscanf_s_l(FILE *const _Stream, const __int16 *const _Format, const _locale_t _Locale, ...);
char *__cdecl _gcvt(double _Value, int _DigitCount, char *_Buffer);
errno_t __cdecl _gcvt_s(char *_Buffer, size_t _BufferCount, double _Value, int _DigitCount);
int _get_FMA3_enable(void);
errno_t __cdecl _get_daylight(int *_Daylight);
errno_t __cdecl _get_doserrno(unsigned __int32 *_Value);
errno_t __cdecl _get_dstbias(__int32 *_DaylightSavingsBias);
errno_t __cdecl _get_errno(int *_Value);
errno_t __cdecl _get_fmode(int *_PMode);
intptr_t _get_heap_handle(void);
_invalid_parameter_handler _get_invalid_parameter_handler(void);
intptr_t __cdecl _get_osfhandle(int _FileHandle);
errno_t __cdecl _get_pgmptr(char **_Value);
int _get_printf_count_output(void);
_purecall_handler _get_purecall_handler(void);
errno_t __cdecl _get_stream_buffer_pointers(FILE *_Stream, char ***_Base, char ***_Pointer, int **_Count);
terminate_handler _get_terminate(void);
_invalid_parameter_handler _get_thread_local_invalid_parameter_handler(void);
errno_t __cdecl _get_timezone(__int32 *_TimeZone);
errno_t __cdecl _get_tzname(size_t *_ReturnValue, char *_Buffer, size_t _SizeInBytes, int _Index);
unexpected_handler _get_unexpected(void);
errno_t __cdecl _get_wpgmptr(__int16 **_Value);
int __cdecl _getc_nolock(FILE *_Stream);
char *__cdecl _getcwd(char *_DstBuf, int _SizeInBytes);
char *__cdecl _getdcwd(int _Drive, char *_DstBuf, int _SizeInBytes);
unsigned int __cdecl _getdiskfree(unsigned int _Drive, _diskfree_t *_DiskFree);
int _getdrive(void);
unsigned __int32 _getdrives(void);
int _getmaxstdio(void);
unsigned int __cdecl _getsystime(tm *_Tm);
int __cdecl _getw(FILE *_Stream);
wint_t __cdecl _getwc_nolock(FILE *_Stream);
wint_t _getwch(void);
wint_t _getwch_nolock(void);
wint_t _getwche(void);
wint_t _getwche_nolock(void);
__int16 *__cdecl _getws_s(__int16 *_Buffer, size_t _BufferCount);
tm *__cdecl _gmtime32(const __time32_t *_Time);
errno_t __cdecl _gmtime32_s(tm *_Tm, const __time32_t *_Time);
tm *__cdecl _gmtime64(const __time64_t *_Time);
errno_t __cdecl _gmtime64_s(tm *_Tm, const __time64_t *_Time);
int _heapchk(void);
int _heapmin(void);
int __cdecl _heapwalk(_HEAPINFO *_EntryInfo);
double __cdecl _hypot(double _X, double _Y);
float __cdecl _hypotf(float _X, float _Y);
long double __cdecl _hypotl(long double _X, long double _Y);
char *__cdecl _i64toa(__int64 _Value, char *_Buffer, int _Radix);
errno_t __cdecl _i64toa_s(__int64 _Value, char *_Buffer, size_t _BufferCount, int _Radix);
__int16 *__cdecl _i64tow(__int64 _Value, __int16 *_Buffer, int _Radix);
errno_t __cdecl _i64tow_s(__int64 _Value, __int16 *_Buffer, size_t _BufferCount, int _Radix);
__int64 __cdecl _interlockedand64(__int64 *_Value, __int64 _Mask);
unsigned __int8 __cdecl _interlockedbittestandset(__int32 *, __int32);
__int64 __cdecl _interlockeddecrement64(__int64 *_Addend);
__int64 __cdecl _interlockedexchange64(__int64 *_Target, __int64 _Value);
__int64 __cdecl _interlockedexchangeadd64(__int64 *_Addend, __int64 _Value);
__int64 __cdecl _interlockedincrement64(__int64 *_Addend);
__int64 __cdecl _interlockedor64(__int64 *_Value, __int64 _Mask);
__int64 __cdecl _interlockedxor64(__int64 *_Value, __int64 _Mask);
void _invalid_parameter_noinfo(void);
void __noreturn _invalid_parameter_noinfo_noreturn(void);
void __cdecl __noreturn _invoke_watson(const __int16 *_Expression, const __int16 *_FunctionName, const __int16 *_FileName, unsigned int _LineNo, uintptr_t _Reserved);
int __cdecl _is_exception_typeof(const type_info *_Type, _EXCEPTION_POINTERS *_ExceptionPtr);
int __cdecl _isalnum_l(int _C, _locale_t _Locale);
int __cdecl _isalpha_l(int _C, _locale_t _Locale);
int __cdecl _isatty(int _FileHandle);
int __cdecl _isblank_l(int _C, _locale_t _Locale);
int __cdecl _ischartype_l(const int _C, const int _Mask, const _locale_t _Locale);
int __cdecl _iscntrl_l(int _C, _locale_t _Locale);
int __cdecl _isctype(int _C, int _Type);
int __cdecl _isctype_l(int _C, int _Type, _locale_t _Locale);
int __cdecl _isdigit_l(int _C, _locale_t _Locale);
int __cdecl _isgraph_l(int _C, _locale_t _Locale);
int __cdecl _isleadbyte_l(int _C, _locale_t _Locale);
int __cdecl _islower_l(int _C, _locale_t _Locale);
int __cdecl _isnan(double _X);
int __cdecl _isnanf(float _X);
int __cdecl _isprint_l(int _C, _locale_t _Locale);
int __cdecl _ispunct_l(int _C, _locale_t _Locale);
int __cdecl _isspace_l(int _C, _locale_t _Locale);
int __cdecl _isupper_l(int _C, _locale_t _Locale);
int __cdecl _iswalnum_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswalpha_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswblank_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswcntrl_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswcsym_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswcsymf_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswctype_l(wint_t _C, wctype_t _Type, _locale_t _Locale);
int __cdecl _iswdigit_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswgraph_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswlower_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswprint_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswpunct_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswspace_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswupper_l(wint_t _C, _locale_t _Locale);
int __cdecl _iswxdigit_l(wint_t _C, _locale_t _Locale);
int __cdecl _isxdigit_l(int _C, _locale_t _Locale);
char *__cdecl _itoa(int _Value, char *_Buffer, int _Radix);
errno_t __cdecl _itoa_s(int _Value, char *_Buffer, size_t _BufferCount, int _Radix);
__int16 *__cdecl _itow(int _Value, __int16 *_Buffer, int _Radix);
errno_t __cdecl _itow_s(int _Value, __int16 *_Buffer, size_t _BufferCount, int _Radix);
double __cdecl _j0(double _X);
double __cdecl _j1(double _X);
double __cdecl _jn(int _X, double _Y);
__int16 __cdecl _ld_int(long double *_Px, __int16 _Xexp);
__int16 __cdecl _ldclass(long double _X);
__int16 __cdecl _ldexp(long double *_Px, long double _Y, __int32 _Eoff);
long double __cdecl _ldlog(long double _X, int _Baseflag);
int __cdecl _ldpcomp(long double _X, long double _Y);
long double __cdecl _ldpoly(long double _X, const long double *_Tab, int _N);
__int16 __cdecl _ldscale(long double *_Px, __int32 _Lexp);
int __cdecl _ldsign(long double _X);
long double __cdecl _ldsin(long double _X, unsigned int _Qoff);
__int16 __cdecl _ldtest(long double *_Px);
__int16 __cdecl _ldunscale(__int16 *_Pex, long double *_Px);
void *__cdecl _lfind(const void *_Key, const void *_Base, unsigned int *_NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
void *__cdecl _lfind_s(const void *_Key, const void *_Base, unsigned int *_NumOfElements, size_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void *_Context);
int __cdecl _load_core_module(idadll_t *dllmem, const char *file, const char *entry);
tm *__cdecl _localtime32(const __time32_t *_Time);
errno_t __cdecl _localtime32_s(tm *_Tm, const __time32_t *_Time);
tm *__cdecl _localtime64(const __time64_t *_Time);
errno_t __cdecl _localtime64_s(tm *_Tm, const __time64_t *_Time);
void __cdecl _lock_file(FILE *_Stream);
int __cdecl _locking(int _FileHandle, int _LockMode, __int32 _NumOfBytes);
double __cdecl _logb(double _X);
float __cdecl _logbf(float _X);
unsigned __int32 __cdecl _lrotl(unsigned __int32 _Value, int _Shift);
unsigned __int32 __cdecl _lrotr(unsigned __int32 _Value, int _Shift);
void *__cdecl _lsearch(const void *_Key, void *_Base, unsigned int *_NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
void *__cdecl _lsearch_s(const void *_Key, void *_Base, unsigned int *_NumOfElements, size_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void *_Context);
__int32 __cdecl _lseek(int _FileHandle, __int32 _Offset, int _Origin);
__int64 __cdecl _lseeki64(int _FileHandle, __int64 _Offset, int _Origin);
char *__cdecl _ltoa(__int32 _Value, char *_Buffer, int _Radix);
errno_t __cdecl _ltoa_s(__int32 _Value, char *_Buffer, size_t _BufferCount, int _Radix);
__int16 *__cdecl _ltow(__int32 _Value, __int16 *_Buffer, int _Radix);
errno_t __cdecl _ltow_s(__int32 _Value, __int16 *_Buffer, size_t _BufferCount, int _Radix);
void __cdecl _makepath(char *_Buffer, const char *_Drive, const char *_Dir, const char *_Filename, const char *_Ext);
errno_t __cdecl _makepath_s(char *_Buffer, size_t _BufferCount, const char *_Drive, const char *_Dir, const char *_Filename, const char *_Ext);
void *__cdecl _malloc_base(size_t _Size);
int __cdecl _matherr(_exception *_Except);
int __cdecl _mblen_l(const char *_Ch, size_t _MaxCount, _locale_t _Locale);
size_t __cdecl _mbstowcs_l(__int16 *_Dest, const char *_Source, size_t _MaxCount, _locale_t _Locale);
errno_t __cdecl _mbstowcs_s_l(size_t *_PtNumOfCharConverted, __int16 *_DstBuf, size_t _SizeInWords, const char *_SrcBuf, size_t _MaxCount, _locale_t _Locale);
size_t __cdecl _mbstrlen(const char *_String);
size_t __cdecl _mbstrlen_l(const char *_String, _locale_t _Locale);
size_t __cdecl _mbstrnlen(const char *_String, size_t _MaxCount);
size_t __cdecl _mbstrnlen_l(const char *_String, size_t _MaxCount, _locale_t _Locale);
int __cdecl _mbtowc_l(__int16 *_DstCh, const char *_SrcCh, size_t _SrcSizeInBytes, _locale_t _Locale);
void *__cdecl _memccpy(void *_Dst, const void *_Src, int _Val, size_t _MaxCount);
int __cdecl _memicmp(const void *_Buf1, const void *_Buf2, size_t _Size);
int __cdecl _memicmp_l(const void *_Buf1, const void *_Buf2, size_t _Size, _locale_t _Locale);
int __cdecl _mkdir(const char *_Path);
__time32_t __cdecl _mkgmtime32(tm *_Tm);
__time64_t __cdecl _mkgmtime64(tm *_Tm);
char *__cdecl _mktemp(char *_TemplateName);
errno_t __cdecl _mktemp_s(char *_TemplateName, size_t _Size);
__time32_t __cdecl _mktime32(tm *_Tm);
__time64_t __cdecl _mktime64(tm *_Tm);
void _mm_pause(void);
size_t __cdecl _msize(void *_Block);
size_t __cdecl _msize_base(void *_Block);
double __cdecl _nextafter(double _X, double _Y);
float __cdecl _nextafterf(float _X, float _Y);
_onexit_t __cdecl _onexit(_onexit_t _Func);
int __cdecl _open(const char *const _FileName, const int _OFlag, const int _PMode);
int __cdecl _open_osfhandle(intptr_t _OSFileHandle, int _Flags);
int __cdecl _pclose(FILE *_Stream);
int __cdecl _pipe(int *_PtHandles, unsigned int _PipeSize, int _TextMode);
FILE *__cdecl _popen(const char *_Command, const char *_Mode);
int _printf_l(const char *const _Format, const _locale_t _Locale, ...);
int _printf_p(const char *const _Format, ...);
int _printf_p_l(const char *const _Format, const _locale_t _Locale, ...);
int _printf_s_l(const char *const _Format, const _locale_t _Locale, ...);
int __cdecl _putc_nolock(int _Character, FILE *_Stream);
int __cdecl _putenv(const char *_EnvString);
errno_t __cdecl _putenv_s(const char *_Name, const char *_Value);
int __cdecl _putw(int _Word, FILE *_Stream);
wint_t __cdecl _putwc_nolock(__int16 _Character, FILE *_Stream);
wint_t __cdecl _putwch(__int16 _Character);
wint_t __cdecl _putwch_nolock(__int16 _Character);
int __cdecl _putws(const __int16 *_Buffer);
int __cdecl _read(int _FileHandle, void *_DstBuf, unsigned int _MaxCharCount);
void *__cdecl _realloc_base(void *_Block, size_t _Size);
void *__cdecl _recalloc(void *_Block, size_t _Count, size_t _Size);
void *__cdecl _recalloc_base(void *_Block, size_t _Count, size_t _Size);
int _resetstkoflw(void);
int __cdecl _rmdir(const char *_Path);
int _rmtmp(void);
unsigned int __cdecl _rotl(unsigned int _Value, int _Shift);
unsigned __int64 __cdecl _rotl64(unsigned __int64 _Value, int _Shift);
unsigned int __cdecl _rotr(unsigned int _Value, int _Shift);
unsigned __int64 __cdecl _rotr64(unsigned __int64 _Value, int _Shift);
double __cdecl _scalb(double _X, __int32 _Y);
float __cdecl _scalbf(float _X, __int32 _Y);
int _scanf_l(const char *const _Format, const _locale_t _Locale, ...);
int _scanf_s_l(const char *const _Format, const _locale_t _Locale, ...);
int _scprintf(const char *const _Format, ...);
int _scprintf_l(const char *const _Format, const _locale_t _Locale, ...);
int _scprintf_p(const char *const _Format, ...);
int _scprintf_p_l(const char *const _Format, const _locale_t _Locale, ...);
int _scwprintf(const __int16 *const _Format, ...);
int _scwprintf_l(const __int16 *const _Format, const _locale_t _Locale, ...);
int _scwprintf_p(const __int16 *const _Format, ...);
int _scwprintf_p_l(const __int16 *const _Format, const _locale_t _Locale, ...);
void __cdecl _searchenv(const char *_Filename, const char *_VarName, char *_Buffer);
errno_t __cdecl _searchenv_s(const char *_Filename, const char *_VarName, char *_Buffer, size_t _BufferCount);
int __cdecl _set_FMA3_enable(int _Flag);
unsigned int __cdecl _set_abort_behavior(unsigned int _Flags, unsigned int _Mask);
void __cdecl _set_controlfp(unsigned int _NewValue, unsigned int _Mask);
errno_t __cdecl _set_doserrno(unsigned __int32 _Value);
errno_t __cdecl _set_errno(int _Value);
int __cdecl _set_error_mode(int _Mode);
errno_t __cdecl _set_fmode(int _Mode);
_invalid_parameter_handler __cdecl _set_invalid_parameter_handler(_invalid_parameter_handler _Handler);
int __cdecl _set_printf_count_output(int _Value);
_purecall_handler __cdecl _set_purecall_handler(_purecall_handler _Handler);
_se_translator_function __cdecl _set_se_translator(_se_translator_function _NewSETranslator);
_invalid_parameter_handler __cdecl _set_thread_local_invalid_parameter_handler(_invalid_parameter_handler _Handler);
void __cdecl _seterrormode(int _Mode);
int __cdecl _setmaxstdio(int _Maximum);
int __cdecl _setmode(int _FileHandle, int _Mode);
unsigned int __cdecl _setsystime(tm *_Tm, unsigned int _Milliseconds);
void __cdecl _sleep(unsigned __int32 _Duration);
int _snprintf(char *_Buffer, size_t _BufferCount, const char *_Format, ...);
int _snprintf_c(char *const _Buffer, const size_t _BufferCount, const char *const _Format, ...);
int _snprintf_c_l(char *const _Buffer, const size_t _BufferCount, const char *const _Format, const _locale_t _Locale, ...);
int _snprintf_l(char *const _Buffer, const size_t _BufferCount, const char *const _Format, const _locale_t _Locale, ...);
int _snprintf_s(char *const _Buffer, const size_t _BufferCount, const size_t _MaxCount, const char *const _Format, ...);
int _snprintf_s_l(char *const _Buffer, const size_t _BufferCount, const size_t _MaxCount, const char *const _Format, const _locale_t _Locale, ...);
int _snscanf(const char *const _Buffer, const size_t _BufferCount, const char *const _Format, ...);
int _snscanf_l(const char *const _Buffer, const size_t _BufferCount, const char *const _Format, const _locale_t _Locale, ...);
int _snscanf_s(const char *const _Buffer, const size_t _BufferCount, const char *const _Format, ...);
int _snscanf_s_l(const char *const _Buffer, const size_t _BufferCount, const char *const _Format, const _locale_t _Locale, ...);
int _snwprintf(__int16 *_Buffer, size_t _BufferCount, const __int16 *_Format, ...);
int _snwprintf_l(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, ...);
int _snwprintf_s(__int16 *const _Buffer, const size_t _BufferCount, const size_t _MaxCount, const __int16 *const _Format, ...);
int _snwprintf_s_l(__int16 *const _Buffer, const size_t _BufferCount, const size_t _MaxCount, const __int16 *const _Format, const _locale_t _Locale, ...);
int _snwscanf(const __int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, ...);
int _snwscanf_l(const __int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, ...);
int _snwscanf_s(const __int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, ...);
int _snwscanf_s_l(const __int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, ...);
int __cdecl _sopen(const char *const _FileName, const int _OFlag, const int _ShFlag, const int _PMode);
errno_t __cdecl _sopen_dispatch(const char *_FileName, int _OFlag, int _ShFlag, int _PMode, int *_PFileHandle, int _BSecure);
errno_t __cdecl _sopen_s(int *_FileHandle, const char *_FileName, int _OpenFlag, int _ShareFlag, int _PermissionMode);
errno_t __cdecl _sopen_s_nolock(int *_FileHandle, const char *_FileName, int _OpenFlag, int _ShareFlag, int _PermissionMode);
void __cdecl _splitpath(const char *_FullPath, char *_Drive, char *_Dir, char *_Filename, char *_Ext);
errno_t __cdecl _splitpath_s(const char *_FullPath, char *_Drive, size_t _DriveCount, char *_Dir, size_t _DirCount, char *_Filename, size_t _FilenameCount, char *_Ext, size_t _ExtCount);
int _sprintf_l(char *const _Buffer, const char *const _Format, const _locale_t _Locale, ...);
int _sprintf_p(char *const _Buffer, const size_t _BufferCount, const char *const _Format, ...);
int _sprintf_p_l(char *const _Buffer, const size_t _BufferCount, const char *const _Format, const _locale_t _Locale, ...);
int _sprintf_s_l(char *const _Buffer, const size_t _BufferCount, const char *const _Format, const _locale_t _Locale, ...);
int _sscanf_l(const char *const _Buffer, const char *const _Format, const _locale_t _Locale, ...);
int _sscanf_s_l(const char *const _Buffer, const char *const _Format, const _locale_t _Locale, ...);
int __cdecl _stat32(const char *_FileName, _stat32 *_Stat);
int __cdecl _stat32i64(const char *_FileName, _stat32i64 *_Stat);
int __cdecl _stat64(const char *_FileName, _stat64 *_Stat);
int __cdecl _stat64i32(const char *_FileName, _stat64i32 *_Stat);
unsigned int _statusfp(void);
int __cdecl _strcmpi(const char *_String1, const char *_String2);
int __cdecl _strcoll_l(const char *_String1, const char *_String2, _locale_t _Locale);
char *__cdecl _strdate(char *_Buffer);
errno_t __cdecl _strdate_s(char *_Buffer, size_t _SizeInBytes);
char *__cdecl _strdup(const char *_Source);
char *__cdecl _strerror(const char *_ErrorMessage);
errno_t __cdecl _strerror_s(char *_Buffer, size_t _SizeInBytes, const char *_ErrorMessage);
size_t __cdecl _strftime_l(char *_Buffer, size_t _MaxSize, const char *_Format, const tm *_Tm, _locale_t _Locale);
int __cdecl _stricmp(const char *_String1, const char *_String2);
int __cdecl _stricmp_l(const char *_String1, const char *_String2, _locale_t _Locale);
int __cdecl _stricoll(const char *_String1, const char *_String2);
int __cdecl _stricoll_l(const char *_String1, const char *_String2, _locale_t _Locale);
char *__cdecl _strlwr(char *_String);
char *__cdecl _strlwr_l(char *_String, _locale_t _Locale);
errno_t __cdecl _strlwr_s(char *_String, size_t _Size);
errno_t __cdecl _strlwr_s_l(char *_String, size_t _Size, _locale_t _Locale);
int __cdecl _strncoll(const char *_String1, const char *_String2, size_t _MaxCount);
int __cdecl _strncoll_l(const char *_String1, const char *_String2, size_t _MaxCount, _locale_t _Locale);
int __cdecl _strnicmp(const char *_String1, const char *_String2, size_t _MaxCount);
int __cdecl _strnicmp_l(const char *_String1, const char *_String2, size_t _MaxCount, _locale_t _Locale);
int __cdecl _strnicoll(const char *_String1, const char *_String2, size_t _MaxCount);
int __cdecl _strnicoll_l(const char *_String1, const char *_String2, size_t _MaxCount, _locale_t _Locale);
char *__cdecl _strnset(char *_Destination, int _Value, size_t _Count);
errno_t __cdecl _strnset_s(char *_String, size_t _SizeInBytes, int _Value, size_t _MaxCount);
char *__cdecl _strrev(char *_Str);
char *__cdecl _strset(char *_Destination, int _Value);
errno_t __cdecl _strset_s(char *_Destination, size_t _DestinationSize, int _Value);
char *__cdecl _strtime(char *_Buffer);
errno_t __cdecl _strtime_s(char *_Buffer, size_t _SizeInBytes);
double __cdecl _strtod_l(const char *_String, char **_EndPtr, _locale_t _Locale);
float __cdecl _strtof_l(const char *_String, char **_EndPtr, _locale_t _Locale);
__int64 __cdecl _strtoi64(const char *_String, char **_EndPtr, int _Radix);
__int64 __cdecl _strtoi64_l(const char *_String, char **_EndPtr, int _Radix, _locale_t _Locale);
__int32 __cdecl _strtol_l(const char *_String, char **_EndPtr, int _Radix, _locale_t _Locale);
long double __cdecl _strtold_l(const char *_String, char **_EndPtr, _locale_t _Locale);
__int64 __cdecl _strtoll_l(const char *_String, char **_EndPtr, int _Radix, _locale_t _Locale);
unsigned __int64 __cdecl _strtoui64(const char *_String, char **_EndPtr, int _Radix);
unsigned __int64 __cdecl _strtoui64_l(const char *_String, char **_EndPtr, int _Radix, _locale_t _Locale);
unsigned __int32 __cdecl _strtoul_l(const char *_String, char **_EndPtr, int _Radix, _locale_t _Locale);
unsigned __int64 __cdecl _strtoull_l(const char *_String, char **_EndPtr, int _Radix, _locale_t _Locale);
char *__cdecl _strupr(char *_String);
char *__cdecl _strupr_l(char *_String, _locale_t _Locale);
errno_t __cdecl _strupr_s(char *_String, size_t _Size);
errno_t __cdecl _strupr_s_l(char *_String, size_t _Size, _locale_t _Locale);
size_t __cdecl _strxfrm_l(char *_Destination, const char *_Source, size_t _MaxCount, _locale_t _Locale);
void __cdecl _swab(char *_Buf1, char *_Buf2, int _SizeInBytes);
int _swprintf(__int16 *_Buffer, const __int16 *_Format, ...);
int _swprintf_c(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, ...);
int _swprintf_c_l(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, ...);
int _swprintf_l(__int16 *const _Buffer, const __int16 *const _Format, const _locale_t _Locale, ...);
int _swprintf_p(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, ...);
int _swprintf_p_l(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, ...);
int _swprintf_s_l(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, ...);
int _swscanf_l(const __int16 *const _Buffer, const __int16 *const _Format, _locale_t _Locale, ...);
int _swscanf_s_l(const __int16 *const _Buffer, const __int16 *const _Format, const _locale_t _Locale, ...);
__int32 __cdecl _tell(int _FileHandle);
__int64 __cdecl _telli64(int _FileHandle);
char *__cdecl _tempnam(const char *_DirectoryName, const char *_FilePrefix);
__time32_t __cdecl _time32(__time32_t *_Time);
__time64_t __cdecl _time64(__time64_t *_Time);
int __cdecl _timespec32_get(_timespec32 *_Ts, int _Base);
int __cdecl _timespec64_get(_timespec64 *_Ts, int _Base);
int __cdecl _tolower(int _C);
int __cdecl _tolower_l(int _C, _locale_t _Locale);
int __cdecl _toupper(int _C);
int __cdecl _toupper_l(int _C, _locale_t _Locale);
wint_t __cdecl _towlower_l(wint_t _C, _locale_t _Locale);
wint_t __cdecl _towupper_l(wint_t _C, _locale_t _Locale);
void _tzset(void);
char *__cdecl _ui64toa(unsigned __int64 _Value, char *_Buffer, int _Radix);
errno_t __cdecl _ui64toa_s(unsigned __int64 _Value, char *_Buffer, size_t _BufferCount, int _Radix);
__int16 *__cdecl _ui64tow(unsigned __int64 _Value, __int16 *_Buffer, int _Radix);
errno_t __cdecl _ui64tow_s(unsigned __int64 _Value, __int16 *_Buffer, size_t _BufferCount, int _Radix);
char *__cdecl _ultoa(unsigned __int32 _Value, char *_Buffer, int _Radix);
errno_t __cdecl _ultoa_s(unsigned __int32 _Value, char *_Buffer, size_t _BufferCount, int _Radix);
__int16 *__cdecl _ultow(unsigned __int32 _Value, __int16 *_Buffer, int _Radix);
errno_t __cdecl _ultow_s(unsigned __int32 _Value, __int16 *_Buffer, size_t _BufferCount, int _Radix);
int __cdecl _umask(int _Mode);
errno_t __cdecl _umask_s(int _NewMode, int *_OldMode);
unsigned __int64 __cdecl _umul128(unsigned __int64 _Multiplier, unsigned __int64 _Multiplicand, unsigned __int64 *_HighProduct);
int __cdecl _ungetc_nolock(int _Character, FILE *_Stream);
wint_t __cdecl _ungetwc_nolock(wint_t _Character, FILE *_Stream);
wint_t __cdecl _ungetwch(wint_t _Character);
wint_t __cdecl _ungetwch_nolock(wint_t _Character);
int __cdecl _unlink(const char *_FileName);
void __cdecl _unlock_file(FILE *_Stream);
int __cdecl _vcwprintf(const __int16 *const _Format, va_list _ArgList);
int __cdecl _vcwprintf_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vcwprintf_p(const __int16 *const _Format, va_list _ArgList);
int __cdecl _vcwprintf_p_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vcwprintf_s(const __int16 *const _Format, va_list _ArgList);
int __cdecl _vcwprintf_s_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vcwscanf(const __int16 *const _Format, va_list _ArgList);
int __cdecl _vcwscanf_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vcwscanf_s(const __int16 *const _Format, va_list _ArgList);
int __cdecl _vcwscanf_s_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vfprintf_l(FILE *const _Stream, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vfprintf_p(FILE *const _Stream, const char *const _Format, va_list _ArgList);
int __cdecl _vfprintf_p_l(FILE *const _Stream, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vfprintf_s_l(FILE *const _Stream, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vfscanf_l(FILE *const _Stream, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vfscanf_s_l(FILE *const _Stream, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vfwprintf_l(FILE *const _Stream, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vfwprintf_p(FILE *const _Stream, const __int16 *const _Format, va_list _ArgList);
int __cdecl _vfwprintf_p_l(FILE *const _Stream, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vfwprintf_s_l(FILE *const _Stream, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vfwscanf_l(FILE *const _Stream, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vfwscanf_s_l(FILE *const _Stream, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vprintf_l(const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vprintf_p(const char *const _Format, va_list _ArgList);
int __cdecl _vprintf_p_l(const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vprintf_s_l(const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vscanf_l(const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vscanf_s_l(const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vscprintf(const char *const _Format, va_list _ArgList);
int __cdecl _vscprintf_l(const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vscprintf_p(const char *const _Format, va_list _ArgList);
int __cdecl _vscprintf_p_l(const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vscwprintf(const __int16 *const _Format, va_list _ArgList);
int __cdecl _vscwprintf_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vscwprintf_p(const __int16 *const _Format, va_list _ArgList);
int __cdecl _vscwprintf_p_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsnprintf(char *_Buffer, size_t _BufferCount, const char *_Format, va_list _Args);
int __cdecl _vsnprintf_c(char *const _Buffer, const size_t _BufferCount, const char *const _Format, va_list _ArgList);
int __cdecl _vsnprintf_c_l(char *const _Buffer, const size_t _BufferCount, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsnprintf_l(char *const _Buffer, const size_t _BufferCount, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsnprintf_s(char *const _Buffer, const size_t _BufferCount, const size_t _MaxCount, const char *const _Format, va_list _ArgList);
int __cdecl _vsnprintf_s_l(char *const _Buffer, const size_t _BufferCount, const size_t _MaxCount, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsnwprintf(__int16 *_Buffer, size_t _BufferCount, const __int16 *_Format, va_list _ArgList);
int __cdecl _vsnwprintf_l(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsnwprintf_s(__int16 *const _Buffer, const size_t _BufferCount, const size_t _MaxCount, const __int16 *const _Format, va_list _ArgList);
int __cdecl _vsnwprintf_s_l(__int16 *const _Buffer, const size_t _BufferCount, const size_t _MaxCount, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsnwscanf_l(const __int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsnwscanf_s_l(const __int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsprintf_l(char *const _Buffer, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsprintf_p(char *const _Buffer, const size_t _BufferCount, const char *const _Format, va_list _ArgList);
int __cdecl _vsprintf_p_l(char *const _Buffer, const size_t _BufferCount, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsprintf_s_l(char *const _Buffer, const size_t _BufferCount, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsscanf_l(const char *const _Buffer, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vsscanf_s_l(const char *const _Buffer, const char *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vswprintf(__int16 *_Buffer, const __int16 *_Format, va_list _Args);
int __cdecl _vswprintf_c(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, va_list _ArgList);
int __cdecl _vswprintf_c_l(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vswprintf_l(__int16 *const _Buffer, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vswprintf_p(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, va_list _ArgList);
int __cdecl _vswprintf_p_l(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vswprintf_s_l(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vswscanf_l(const __int16 *const _Buffer, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vswscanf_s_l(const __int16 *const _Buffer, const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vwprintf_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vwprintf_p(const __int16 *const _Format, va_list _ArgList);
int __cdecl _vwprintf_p_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vwprintf_s_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vwscanf_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _vwscanf_s_l(const __int16 *const _Format, const _locale_t _Locale, va_list _ArgList);
int __cdecl _waccess(const __int16 *_FileName, int _AccessMode);
errno_t __cdecl _waccess_s(const __int16 *_FileName, int _AccessMode);
__int16 *__cdecl _wasctime(const tm *_Tm);
errno_t __cdecl _wasctime_s(__int16 *_Buffer, size_t _SizeInWords, const tm *_Tm);
void __cdecl _wassert(const __int16 *_Message, const __int16 *_File, unsigned int _Line);
int __cdecl _wchdir(const __int16 *_Path);
int __cdecl _wchmod(const __int16 *_FileName, int _Mode);
int __cdecl _wcreat(const __int16 *_FileName, int _PermissionMode);
_locale_t __cdecl _wcreate_locale(int _Category, const __int16 *_Locale);
int __cdecl _wcscoll_l(const __int16 *_String1, const __int16 *_String2, _locale_t _Locale);
__int16 *__cdecl _wcsdup(const __int16 *_String);
__int16 *__cdecl _wcserror(int _ErrorNumber);
errno_t __cdecl _wcserror_s(__int16 *_Buffer, size_t _SizeInWords, int _ErrorNumber);
size_t __cdecl _wcsftime_l(__int16 *_Buffer, size_t _SizeInWords, const __int16 *_Format, const tm *_Tm, _locale_t _Locale);
int __cdecl _wcsicmp(const __int16 *_String1, const __int16 *_String2);
int __cdecl _wcsicmp_l(const __int16 *_String1, const __int16 *_String2, _locale_t _Locale);
int __cdecl _wcsicoll(const __int16 *_String1, const __int16 *_String2);
int __cdecl _wcsicoll_l(const __int16 *_String1, const __int16 *_String2, _locale_t _Locale);
__int16 *__cdecl _wcslwr(__int16 *_String);
__int16 *__cdecl _wcslwr_l(__int16 *_String, _locale_t _Locale);
errno_t __cdecl _wcslwr_s(__int16 *_String, size_t _SizeInWords);
errno_t __cdecl _wcslwr_s_l(__int16 *_String, size_t _SizeInWords, _locale_t _Locale);
int __cdecl _wcsncoll(const __int16 *_String1, const __int16 *_String2, size_t _MaxCount);
int __cdecl _wcsncoll_l(const __int16 *_String1, const __int16 *_String2, size_t _MaxCount, _locale_t _Locale);
int __cdecl _wcsnicmp(const __int16 *_String1, const __int16 *_String2, size_t _MaxCount);
int __cdecl _wcsnicmp_l(const __int16 *_String1, const __int16 *_String2, size_t _MaxCount, _locale_t _Locale);
int __cdecl _wcsnicoll(const __int16 *_String1, const __int16 *_String2, size_t _MaxCount);
int __cdecl _wcsnicoll_l(const __int16 *_String1, const __int16 *_String2, size_t _MaxCount, _locale_t _Locale);
__int16 *__cdecl _wcsnset(__int16 *_String, __int16 _Value, size_t _MaxCount);
errno_t __cdecl _wcsnset_s(__int16 *_Destination, size_t _SizeInWords, __int16 _Value, size_t _MaxCount);
__int16 *__cdecl _wcsrev(__int16 *_String);
__int16 *__cdecl _wcsset(__int16 *_String, __int16 _Value);
errno_t __cdecl _wcsset_s(__int16 *_Destination, size_t _SizeInWords, __int16 _Value);
double __cdecl _wcstod_l(const __int16 *_String, __int16 **_EndPtr, _locale_t _Locale);
float __cdecl _wcstof_l(const __int16 *_String, __int16 **_EndPtr, _locale_t _Locale);
__int64 __cdecl _wcstoi64(const __int16 *_String, __int16 **_EndPtr, int _Radix);
__int64 __cdecl _wcstoi64_l(const __int16 *_String, __int16 **_EndPtr, int _Radix, _locale_t _Locale);
__int32 __cdecl _wcstol_l(const __int16 *_String, __int16 **_EndPtr, int _Radix, _locale_t _Locale);
long double __cdecl _wcstold_l(const __int16 *_String, __int16 **_EndPtr, _locale_t _Locale);
__int64 __cdecl _wcstoll_l(const __int16 *_String, __int16 **_EndPtr, int _Radix, _locale_t _Locale);
size_t __cdecl _wcstombs_l(char *_Dest, const __int16 *_Source, size_t _MaxCount, _locale_t _Locale);
errno_t __cdecl _wcstombs_s_l(size_t *_PtNumOfCharConverted, char *_Dst, size_t _DstSizeInBytes, const __int16 *_Src, size_t _MaxCountInBytes, _locale_t _Locale);
unsigned __int64 __cdecl _wcstoui64(const __int16 *_String, __int16 **_EndPtr, int _Radix);
unsigned __int64 __cdecl _wcstoui64_l(const __int16 *_String, __int16 **_EndPtr, int _Radix, _locale_t _Locale);
unsigned __int32 __cdecl _wcstoul_l(const __int16 *_String, __int16 **_EndPtr, int _Radix, _locale_t _Locale);
unsigned __int64 __cdecl _wcstoull_l(const __int16 *_String, __int16 **_EndPtr, int _Radix, _locale_t _Locale);
__int16 *__cdecl _wcsupr(__int16 *_String);
__int16 *__cdecl _wcsupr_l(__int16 *_String, _locale_t _Locale);
errno_t __cdecl _wcsupr_s(__int16 *_String, size_t _Size);
errno_t __cdecl _wcsupr_s_l(__int16 *_String, size_t _Size, _locale_t _Locale);
size_t __cdecl _wcsxfrm_l(__int16 *_Destination, const __int16 *_Source, size_t _MaxCount, _locale_t _Locale);
__int16 *__cdecl _wctime32(const __time32_t *_Time);
errno_t __cdecl _wctime32_s(__int16 *_Buffer, size_t _SizeInWords, const __time32_t *_Time);
__int16 *__cdecl _wctime64(const __time64_t *_Time);
errno_t __cdecl _wctime64_s(__int16 *_Buffer, size_t _SizeInWords, const __time64_t *_Time);
int __cdecl _wctomb_l(char *_MbCh, __int16 _WCh, _locale_t _Locale);
errno_t __cdecl _wctomb_s_l(int *_SizeConverted, char *_MbCh, size_t _SizeInBytes, __int16 _WCh, _locale_t _Locale);
errno_t __cdecl _wdupenv_s(__int16 **_Buffer, size_t *_BufferCount, const __int16 *_VarName);
intptr_t _wexecl(const __int16 *_FileName, const __int16 *_ArgList, ...);
intptr_t _wexecle(const __int16 *_FileName, const __int16 *_ArgList, ...);
intptr_t _wexeclp(const __int16 *_FileName, const __int16 *_ArgList, ...);
intptr_t _wexeclpe(const __int16 *_FileName, const __int16 *_ArgList, ...);
intptr_t __cdecl _wexecv(const __int16 *_FileName, const __int16 *const *_ArgList);
intptr_t __cdecl _wexecve(const __int16 *_FileName, const __int16 *const *_ArgList, const __int16 *const *_Env);
intptr_t __cdecl _wexecvp(const __int16 *_FileName, const __int16 *const *_ArgList);
intptr_t __cdecl _wexecvpe(const __int16 *_FileName, const __int16 *const *_ArgList, const __int16 *const *_Env);
FILE *__cdecl _wfdopen(int _FileHandle, const __int16 *_Mode);
intptr_t __cdecl _wfindfirst32(const __int16 *_FileName, _wfinddata32_t *_FindData);
intptr_t __cdecl _wfindfirst32i64(const __int16 *_FileName, _wfinddata32i64_t *_FindData);
intptr_t __cdecl _wfindfirst64(const __int16 *_FileName, _wfinddata64_t *_FindData);
intptr_t __cdecl _wfindfirst64i32(const __int16 *_FileName, _wfinddata64i32_t *_FindData);
int __cdecl _wfindnext32(intptr_t _FindHandle, _wfinddata32_t *_FindData);
int __cdecl _wfindnext32i64(intptr_t _FindHandle, _wfinddata32i64_t *_FindData);
int __cdecl _wfindnext64(intptr_t _FindHandle, _wfinddata64_t *_FindData);
int __cdecl _wfindnext64i32(intptr_t _FindHandle, _wfinddata64i32_t *_FindData);
FILE *__cdecl _wfopen(const __int16 *_FileName, const __int16 *_Mode);
errno_t __cdecl _wfopen_s(FILE **_Stream, const __int16 *_FileName, const __int16 *_Mode);
FILE *__cdecl _wfreopen(const __int16 *_FileName, const __int16 *_Mode, FILE *_OldStream);
errno_t __cdecl _wfreopen_s(FILE **_Stream, const __int16 *_FileName, const __int16 *_Mode, FILE *_OldStream);
FILE *__cdecl _wfsopen(const __int16 *_FileName, const __int16 *_Mode, int _ShFlag);
__int16 *__cdecl _wfullpath(__int16 *_Buffer, const __int16 *_Path, size_t _BufferCount);
__int16 *__cdecl _wgetcwd(__int16 *_DstBuf, int _SizeInWords);
__int16 *__cdecl _wgetdcwd(int _Drive, __int16 *_DstBuf, int _SizeInWords);
__int16 *__cdecl _wgetenv(const __int16 *_VarName);
errno_t __cdecl _wgetenv_s(size_t *_RequiredCount, __int16 *_Buffer, size_t _BufferCount, const __int16 *_VarName);
void __cdecl _wmakepath(__int16 *_Buffer, const __int16 *_Drive, const __int16 *_Dir, const __int16 *_Filename, const __int16 *_Ext);
errno_t __cdecl _wmakepath_s(__int16 *_Buffer, size_t _BufferCount, const __int16 *_Drive, const __int16 *_Dir, const __int16 *_Filename, const __int16 *_Ext);
int __cdecl _wmkdir(const __int16 *_Path);
__int16 *__cdecl _wmktemp(__int16 *_TemplateName);
errno_t __cdecl _wmktemp_s(__int16 *_TemplateName, size_t _SizeInWords);
int __cdecl _wopen(const __int16 *_FileName, int _OFlag, int _PMode);
void __cdecl _wperror(const __int16 *_ErrorMessage);
FILE *__cdecl _wpopen(const __int16 *_Command, const __int16 *_Mode);
int _wprintf_l(const __int16 *const _Format, const _locale_t _Locale, ...);
int _wprintf_p(const __int16 *const _Format, ...);
int _wprintf_p_l(const __int16 *const _Format, const _locale_t _Locale, ...);
int _wprintf_s_l(const __int16 *const _Format, const _locale_t _Locale, ...);
int __cdecl _wputenv(const __int16 *_EnvString);
errno_t __cdecl _wputenv_s(const __int16 *_Name, const __int16 *_Value);
int __cdecl _wremove(const __int16 *_FileName);
int __cdecl _wrename(const __int16 *_OldFileName, const __int16 *_NewFileName);
int __cdecl _write(int _FileHandle, const void *_Buf, unsigned int _MaxCharCount);
int __cdecl _wrmdir(const __int16 *_Path);
int _wscanf_l(const __int16 *const _Format, const _locale_t _Locale, ...);
int _wscanf_s_l(const __int16 *const _Format, const _locale_t _Locale, ...);
void __cdecl _wsearchenv(const __int16 *_Filename, const __int16 *_VarName, __int16 *_ResultPath);
errno_t __cdecl _wsearchenv_s(const __int16 *_Filename, const __int16 *_VarName, __int16 *_Buffer, size_t _BufferCount);
__int16 *__cdecl _wsetlocale(int _Category, const __int16 *_Locale);
int __cdecl _wsopen(const __int16 *_FileName, int _OFlag, int _ShFlag, int _PMode);
errno_t __cdecl _wsopen_dispatch(const __int16 *_FileName, int _OFlag, int _ShFlag, int _PMode, int *_PFileHandle, int _BSecure);
errno_t __cdecl _wsopen_s(int *_FileHandle, const __int16 *_FileName, int _OpenFlag, int _ShareFlag, int _PermissionFlag);
intptr_t _wspawnl(int _Mode, const __int16 *_FileName, const __int16 *_ArgList, ...);
intptr_t _wspawnle(int _Mode, const __int16 *_FileName, const __int16 *_ArgList, ...);
intptr_t _wspawnlp(int _Mode, const __int16 *_FileName, const __int16 *_ArgList, ...);
intptr_t _wspawnlpe(int _Mode, const __int16 *_FileName, const __int16 *_ArgList, ...);
intptr_t __cdecl _wspawnv(int _Mode, const __int16 *_FileName, const __int16 *const *_ArgList);
intptr_t __cdecl _wspawnve(int _Mode, const __int16 *_FileName, const __int16 *const *_ArgList, const __int16 *const *_Env);
intptr_t __cdecl _wspawnvp(int _Mode, const __int16 *_FileName, const __int16 *const *_ArgList);
intptr_t __cdecl _wspawnvpe(int _Mode, const __int16 *_FileName, const __int16 *const *_ArgList, const __int16 *const *_Env);
void __cdecl _wsplitpath(const __int16 *_FullPath, __int16 *_Drive, __int16 *_Dir, __int16 *_Filename, __int16 *_Ext);
errno_t __cdecl _wsplitpath_s(const __int16 *_FullPath, __int16 *_Drive, size_t _DriveCount, __int16 *_Dir, size_t _DirCount, __int16 *_Filename, size_t _FilenameCount, __int16 *_Ext, size_t _ExtCount);
int __cdecl _wstat32(const __int16 *_FileName, _stat32 *_Stat);
int __cdecl _wstat32i64(const __int16 *_FileName, _stat32i64 *_Stat);
int __cdecl _wstat64(const __int16 *_FileName, _stat64 *_Stat);
int __cdecl _wstat64i32(const __int16 *_FileName, _stat64i32 *_Stat);
__int16 *__cdecl _wstrdate(__int16 *_Buffer);
errno_t __cdecl _wstrdate_s(__int16 *_Buffer, size_t _SizeInWords);
__int16 *__cdecl _wstrtime(__int16 *_Buffer);
errno_t __cdecl _wstrtime_s(__int16 *_Buffer, size_t _SizeInWords);
int __cdecl _wsystem(const __int16 *_Command);
__int16 *__cdecl _wtempnam(const __int16 *_Directory, const __int16 *_FilePrefix);
__int16 *__cdecl _wtmpnam(__int16 *_Buffer);
errno_t __cdecl _wtmpnam_s(__int16 *_Buffer, size_t _BufferCount);
double __cdecl _wtof(const __int16 *_String);
double __cdecl _wtof_l(const __int16 *_String, _locale_t _Locale);
int __cdecl _wtoi(const __int16 *_String);
__int64 __cdecl _wtoi64(const __int16 *_String);
__int64 __cdecl _wtoi64_l(const __int16 *_String, _locale_t _Locale);
int __cdecl _wtoi_l(const __int16 *_String, _locale_t _Locale);
__int32 __cdecl _wtol(const __int16 *_String);
__int32 __cdecl _wtol_l(const __int16 *_String, _locale_t _Locale);
__int64 __cdecl _wtoll(const __int16 *_String);
__int64 __cdecl _wtoll_l(const __int16 *_String, _locale_t _Locale);
int __cdecl _wunlink(const __int16 *_FileName);
double __cdecl _y0(double _X);
double __cdecl _y1(double _X);
double __cdecl _yn(int _X, double _Y);
void __noreturn abort(void);
long double __cdecl abs(long double _Xx);
int __cdecl access(const char *_FileName, int _AccessMode);
double __cdecl acos(double _X);
float __cdecl acosf(float _X);
double __cdecl acosh(double _X);
float __cdecl acoshf(float _X);
long double __cdecl acoshl(long double _X);
long double __cdecl acosl(long double _X);
bool __cdecl acp_utf8(qstring *out, const char *in);
void __cdecl activate_widget(TWidget *widget, bool take_focus);
bool __cdecl add_auto_stkpnt(func_t *pfn, ea_t ea, sval_t delta);
int __cdecl add_base_tils(qstring *errbuf, til_t *ti, const char *tildir, const char *bases, bool gen_events);
bool __cdecl add_bpt(const bpt_t *bpt);
void __cdecl add_byte(ea_t ea, uint32 value);
bool __cdecl add_cref(ea_t from, ea_t to, cref_t type);
bool __cdecl add_dref(ea_t from, ea_t to, dref_t type);
void __cdecl add_dword(ea_t ea, uint64 value);
int __cdecl add_encoding(const char *encname);
bool __cdecl add_entry(uval_t ord, ea_t ea, const char *name, bool makecode, int flags);
enum_t __cdecl add_enum(size_t idx, const char *name, flags_t flag);
int __cdecl add_enum_member(enum_t id, const char *name, uval_t value, bmask_t bmask);
bool add_extra_cmt(ea_t ea, bool isprev, const char *format, ...);
bool add_extra_line(ea_t ea, bool isprev, const char *format, ...);
bool __cdecl add_frame(func_t *pfn, sval_t frsize, ushort frregs, asize_t argsize);
bool __cdecl add_func(ea_t ea1, ea_t ea2);
bool __cdecl add_func_ex(func_t *pfn);
bool __cdecl add_hidden_range(ea_t ea1, ea_t ea2, const char *description, const char *header, const char *footer, bgcolor_t color);
idc_class_t *__cdecl add_idc_class(const char *name, const idc_class_t *super);
bool __cdecl add_idc_func(const ext_idcfunc_t *func);
idc_value_t *__cdecl add_idc_gvar(const char *name);
int __cdecl add_idc_hotkey(const char *hotkey, const char *idcfunc);
bool __cdecl add_mapping(ea_t from, ea_t to, asize_t size);
void __cdecl add_path_mapping(const char *src, const char *dst);
bool add_pgm_cmt(const char *format, ...);
void __cdecl add_qword(ea_t ea, uint64 value);
ea_t __cdecl add_refinfo_dref(const insn_t *insn, ea_t from, const refinfo_t *ri, adiff_t opval, dref_t type, int opoff);
void __cdecl add_regarg(func_t *pfn, int reg, const tinfo_t *tif, const char *name);
int __cdecl add_regvar(func_t *pfn, ea_t ea1, ea_t ea2, const char *canon, const char *user, const char *cmt);
bool __cdecl add_segm(ea_t para, ea_t start, ea_t end, const char *name, const char *sclass, int flags);
bool __cdecl add_segm_ex(segment_t *s, const char *name, const char *sclass, int flags);
bool __cdecl add_segment_translation(ea_t segstart, ea_t mappedseg);
bool __cdecl add_sourcefile(ea_t ea1, ea_t ea2, const char *filename);
char *__cdecl add_spaces(char *str, size_t bufsize, ssize_t len);
bool __cdecl add_stkvar(const insn_t *insn, const op_t *x, sval_t v, int flags);
tid_t __cdecl add_struc(uval_t idx, const char *name, bool is_union);
struc_error_t __cdecl add_struc_member(struc_t *sptr, const char *fieldname, ea_t offset, flags_t flag, const opinfo_t *mt, asize_t nbytes);
int __cdecl add_til(const char *name, int flags);
int __cdecl add_tryblk(const tryblk_t *tb);
bool __cdecl add_user_stkpnt(ea_t ea, sval_t delta);
bool __cdecl add_virt_module(const modinfo_t *mod);
void __cdecl add_word(ea_t ea, uint64 value);
int addon_count(void);
ea_t __cdecl adjust_visea(ea_t ea);
ea_t __cdecl align_down_to_stack(ea_t newea);
flags_t align_flag(void);
void __cdecl align_size(size_t *cur_tot_size, size_t elem_size, size_t algn);
sval_t __cdecl align_stkarg_up(sval_t spoff, const tinfo_t *tif, int slotsize, cm_t cc);
ea_t __cdecl align_up_to_stack(ea_t ea1, ea_t ea2);
uint32 __cdecl alloc_type_ordinal(til_t *ti);
uint32 __cdecl alloc_type_ordinals(til_t *ti, int qty);
sel_t __cdecl allocate_selector(ea_t segbase);
void analyzer_options(void);
bool __cdecl append_abi_opts(const char *abi_opts, bool user_level);
bool __cdecl append_argloc(qtype *out, const argloc_t *vloc);
bool __cdecl append_cmt(ea_t ea, const char *str, bool rptble);
void __cdecl append_disp(qstring *buf, adiff_t disp, bool tag);
bool __cdecl append_func_tail(func_t *pfn, ea_t ea1, ea_t ea2);
void __cdecl append_regval(bytevec_t *s, const regval_t *value);
int append_snprintf(char *buf, const char *end, const char *format, ...);
flags_t __cdecl append_struct_fields(qstring *out, adiff_t *disp, int n, const tid_t *path, int plen, flags_t flags, adiff_t delta, bool appzero);
bool __cdecl append_tinfo_covered(rangeset_t *out, uint32 typid, uint64 offset);
bool __cdecl append_to_flowchart(qflow_chart_t *, ea_t, ea_t);
bool __cdecl apply_callee_tinfo(ea_t caller, const tinfo_t *tif);
bool __cdecl apply_cdecl(til_t *til, ea_t ea, const char *decl, int flags);
bool __cdecl apply_fixup(ea_t item_ea, ea_t fixup_ea, int n, bool is_macro);
int __cdecl apply_idasgn_to(const char *signame, ea_t ea, bool is_startup);
bool __cdecl apply_named_type(ea_t ea, const char *name);
bool __cdecl apply_once_tinfo_and_name(ea_t dea, const tinfo_t *tif, const char *name);
bool __cdecl apply_startup_sig(ea_t ea, const char *startup);
bool __cdecl apply_tinfo(ea_t ea, const tinfo_t *tif, uint32 flags);
bool __cdecl apply_tinfo_to_stkarg(const insn_t *insn, const op_t *x, uval_t v, const tinfo_t *tif, const char *name);
int __cdecl asc_to_r50(ushort *r, const char *p, int k);
char *__cdecl asctime(const tm *_Tm);
errno_t __cdecl asctime_s(char *_Buffer, size_t _SizeInBytes, const tm *_Tm);
fpvalue_error_t __cdecl asctoreal(const char **sss, fpvalue_t *out);
asm_t ash;
double __cdecl asin(double _X);
float __cdecl asinf(float _X);
double __cdecl asinh(double _X);
float __cdecl asinhf(float _X);
long double __cdecl asinhl(long double _X);
long double __cdecl asinl(long double _X);
bool ask_addr(ea_t *addr, const char *format, ...);
int ask_buttons(const char *Yes, const char *No, const char *Cancel, int deflt, const char *format, ...);
char *ask_file(bool for_saving, const char *defval, const char *format, ...);
void ask_for_feedback(const char *format, ...);
int ask_form(const char *form, ...);
bool ask_ident(qstring *str, const char *format, ...);
bool ask_long(sval_t *value, const char *format, ...);
bool ask_seg(sel_t *sel, const char *format, ...);
bool ask_str(qstring *str, int hist, const char *format, ...);
bool ask_text(qstring *answer, size_t max_size, const char *defval, const char *format, ...);
int ask_yn(int deflt, help_t format, ...);
int __cdecl at_quick_exit(void (*)(void));
double __cdecl atan(double _X);
double __cdecl atan2(double _Y, double _X);
float __cdecl atan2f(float _Y, float _X);
long double __cdecl atan2l(long double _Y, long double _X);
float __cdecl atanf(float _X);
double __cdecl atanh(double _X);
float __cdecl atanhf(float _X);
long double __cdecl atanhl(long double _X);
long double __cdecl atanl(long double _X);
int __cdecl atexit(void (*)(void));
bool __cdecl atob32(uint32 *x, const char *str);
bool __cdecl atob64(uint64 *x, const char *str);
bool __cdecl atoea(ea_t *pea, const char *str);
double __cdecl atof(const char *_String);
int __cdecl atoi(const char *_String);
__int32 __cdecl atol(const char *_String);
__int64 __cdecl atoll(const char *_String);
int __cdecl atos(sel_t *seg, const char *str);
bool __cdecl attach_action_to_menu(const char *menupath, const char *name, int flags);
bool __cdecl attach_action_to_popup(TWidget *widget, TPopupMenu *popup_handle, const char *name, const char *popuppath, int flags);
bool __cdecl attach_action_to_toolbar(const char *toolbar_name, const char *name);
bool __cdecl attach_custom_data_format(int dtid, int dfid);
bool __cdecl attach_dynamic_action_to_popup(TWidget *widget, TPopupMenu *popup_handle, const action_desc_t *desc, const char *popuppath, int flags, qstring *buf);
int __cdecl attach_process(pid_t pid, int event_id);
void __cdecl auto_apply_tail(ea_t tail_ea, ea_t parent_ea);
void __cdecl auto_apply_type(ea_t caller, ea_t callee);
void __cdecl auto_cancel(ea_t ea1, ea_t ea2);
ea_t __cdecl auto_get(atype_t *type, ea_t lowEA, ea_t highEA);
bool auto_is_ok(void);
void __cdecl auto_make_code(ea_t ea);
void __cdecl auto_make_proc(ea_t ea);
bool __cdecl auto_make_step(ea_t ea1, ea_t ea2);
void __cdecl auto_mark(ea_t ea, atype_t type);
void __cdecl auto_mark_range(ea_t start, ea_t end, atype_t type);
int __cdecl auto_recreate_insn(ea_t ea);
void __cdecl auto_unmark(ea_t start, ea_t end, atype_t type);
bool auto_wait(void);
ssize_t __cdecl auto_wait_range(ea_t ea1, ea_t ea2);
size_t __cdecl b2a32(char *buf, size_t bufsize, uint32 x, int nbytes, int radix);
size_t __cdecl b2a64(char *buf, size_t bufsize, uint64 x, int nbytes, int radix);
size_t __cdecl b2a_width(int nbytes, int radix);
fpvalue_error_t __cdecl b_realcvt(void *m, fpvalue_t *out, uint16 swt);
char __cdecl back_char(const char **p);
bool __cdecl banner(int dont_use_wait);
int __cdecl base2file(FILE *fp, int64 pos, ea_t ea1, ea_t ea2);
bool __cdecl base64_decode(bytevec_t *output, const char *input, size_t size);
bool __cdecl base64_encode(qstring *output, const void *input, size_t size);
bool batch;
void __cdecl beep(beep_t beep_type);
void __cdecl begin_type_updating(update_type_t utp);
flags_t bin_flag(void);
ea_t __cdecl bin_search(ea_t, ea_t, const uchar *, const uchar *, size_t, int, int);
ea_t __cdecl bin_search2(ea_t start_ea, ea_t end_ea, const uchar *image, const uchar *mask, size_t len, int flags);
ea_t __cdecl bin_search3(size_t *out_matched_idx, ea_t start_ea, ea_t end_ea, const compiled_binpat_vec_t *data, int flags);
int __cdecl bitcount(uint64 x);
bool __cdecl bitrange_t_extract_using_bitrange(const bitrange_t *bm, void *dst, size_t dst_size, const void *src, size_t src_size, bool is_mf);
bool __cdecl bitrange_t_inject_using_bitrange(const bitrange_t *bm, void *dst, size_t dst_size, const void *src, size_t src_size, bool is_mf);
bool __cdecl bookmarks_t_erase(const lochist_entry_t *, uint32, void *);
uint32 __cdecl bookmarks_t_find_index(const lochist_entry_t *, void *);
bool __cdecl bookmarks_t_get(lochist_entry_t *, qstring *, uint32 *, void *);
bool __cdecl bookmarks_t_get_desc(qstring *, const lochist_entry_t *, uint32, void *);
dirtree_id_t __cdecl bookmarks_t_get_dirtree_id(const lochist_entry_t *, void *);
uint32 __cdecl bookmarks_t_mark(const lochist_entry_t *, uint32, const char *, const char *, void *);
bool __cdecl bookmarks_t_set_desc(qstring, const lochist_entry_t *, uint32, void *);
uint32 __cdecl bookmarks_t_size(const lochist_entry_t *, void *);
void bring_debugger_to_front(void);
void *__cdecl bsearch(const void *_Key, const void *_Base, size_t _NumOfElements, size_t _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
void *__cdecl bsearch_s(const void *_Key, const void *_Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void *_Context);
size_t __cdecl btoa128(char *buf, size_t bufsize, uint128 x, int radix);
size_t __cdecl btoa32(char *buf, size_t bufsize, uint32 x, int radix);
size_t __cdecl btoa64(char *buf, size_t bufsize, uint64 x, int radix);
size_t __cdecl btoa_width(int nbytes, flags_t flag, int n);
wint_t __cdecl btowc(int _Ch);
void __cdecl build_anon_type_name(qstring *buf, const type_t *type, const p_list *fields);
load_info_t *__cdecl build_loaders_list(linput_t *li, const char *filename);
bool __cdecl build_snapshot_tree(snapshot_t *root);
ssize_t __cdecl build_stkvar_name(qstring *buf, const func_t *pfn, sval_t v);
void __cdecl build_stkvar_xrefs(xreflist_t *out, func_t *pfn, const member_t *mptr);
void build_strlist(void);
flags_t byte_flag(void);
int __cdecl bytesize(ea_t ea);
ea_t __cdecl calc_basevalue(ea_t target, ea_t base);
bgcolor_t __cdecl calc_bg_color(ea_t ea);
ssize_t __cdecl calc_c_cpp_name(qstring *out, const char *name, const tinfo_t *type, int ccn_flags);
uint32 __cdecl calc_crc32(uint32 crc, const void *buf, size_t len);
ea_t __cdecl calc_dataseg(const insn_t *insn, int n, int rgnum);
int __cdecl calc_def_align(ea_t ea, int mina, int maxa);
int calc_default_idaplace_flags(void);
flags_t __cdecl calc_dflags(flags_t f, bool force);
double __cdecl calc_dist(point_t p, point_t q);
uint32 __cdecl calc_file_crc32(linput_t *fp);
int __cdecl calc_fixup_size(fixup_type_t type);
asize_t __cdecl calc_func_size(func_t *pfn);
int __cdecl calc_gtn_flags(ea_t from, ea_t ea);
int __cdecl calc_idasgn_state(int n);
int __cdecl calc_max_align(ea_t endea);
ea_t __cdecl calc_max_item_end(ea_t ea, int how);
int __cdecl calc_min_align(asize_t length);
int __cdecl calc_number_of_children(const argloc_t *loc, const tinfo_t *tif, bool dont_deref_ptr);
ea_t __cdecl calc_offset_base(ea_t ea, int n);
color_t __cdecl calc_prefix_color(ea_t ea);
ea_t __cdecl calc_probable_base_by_value(ea_t ea, uval_t off);
bool __cdecl calc_reference_data(ea_t *target, ea_t *base, ea_t from, const refinfo_t *ri, adiff_t opval);
ea_t __cdecl calc_stkvar_struc_offset(func_t *pfn, const insn_t *insn, int n);
bool __cdecl calc_switch_cases(casevec_t *casevec, eavec_t *targets, ea_t insn_ea, const switch_info_t *si);
ea_t __cdecl calc_target(ea_t from, ea_t ea, int n, adiff_t opval);
ea_t __cdecl calc_thunk_func_target(func_t *pfn, ea_t *fptr);
bool __cdecl calc_tinfo_gaps(rangeset_t *out, uint32 typid);
bool __cdecl call_idc_func(idc_value_t *result, const char *fname, const idc_value_t args[], size_t argsnum, qstring *errbuf, idc_resolver_t *resolver);
int __cdecl call_system(const char *command);
void *__cdecl calloc(size_t _Count, size_t _Size);
callui_t (*callui)(ui_notification_t, ...);
ea_t __cdecl can_be_off32(ea_t ea);
bool __cdecl can_decode(ea_t ea);
bool __cdecl can_define_item(ea_t ea, asize_t length, flags_t flags);
bool __cdecl cancel_exec_request(int req_id);
int __cdecl cancel_thread_exec_requests(qthread_t tid);
double __cdecl cbrt(double _X);
float __cdecl cbrtf(float _X);
long double __cdecl cbrtl(long double _X);
double __cdecl ceil(double _X);
float __cdecl ceilf(float _X);
long double __cdecl ceill(long double _X);
const char *__cdecl cfgopt_t__apply(const cfgopt_t *_this, int vtype, const void *vdata);
const char *__cdecl cfgopt_t__apply2(const cfgopt_t *_this, int vtype, const void *vdata, void *obj);
const char *__cdecl cfgopt_t__apply3(const cfgopt_t *_this, lexer_t *lx, int vtype, const void *vdata, void *obj);
int __cdecl change_bptlocs(const movbpt_infos_t *movinfo, movbpt_codes_t *codes, bool del_hindering_bpts);
bool __cdecl change_codepage(qstring *out, const char *in, int incp, int outcp);
int __cdecl change_segment_status(segment_t *s, bool is_deb_segm);
error_t __cdecl change_storage_type(ea_t start_ea, ea_t end_ea, storage_type_t stt);
flags_t char_flag(void);
int __cdecl chdir(const char *_Path);
int __cdecl check_bpt(ea_t ea);
int __cdecl check_flat_jump_table(switch_info_t *si, ea_t jump_ea, int is_pattern_res);
bool __cdecl check_for_table_jump(switch_info_t *si, const insn_t *insn, is_pattern_t *const patterns[], size_t qty, table_checker_t *check_table, const char *name);
int __cdecl check_process_exit(void *handle, int *exit_code, int msecs);
void __cdecl check_spoiled_jpt(const jump_pattern_t *_this, tracked_regs_t *_regs);
int __cdecl chmod(const char *_FileName, int _AccessMode);
ssize_t __cdecl choose(chooser_base_t *ch, const void *def_item);
ea_t __cdecl choose_entry(const char *title);
enum_t __cdecl choose_enum(const char *title, enum_t default_id);
enum_t __cdecl choose_enum_by_value(const char *title, enum_t default_id, uint64 value, int nbytes, uchar *serial);
func_t *__cdecl choose_func(const char *title, ea_t default_ea);
char *choose_idasgn(void);
bool __cdecl choose_ioport_device(qstring *_device, const char *file, const char *(__cdecl *parse_params)(qstring *, const char *));
bool __cdecl choose_ioport_device2(qstring *_device, const char *file, choose_ioport_parser_t *parse_params);
uint32 __cdecl choose_local_tinfo(const til_t *ti, const char *title, local_tinfo_predicate_t *func, uint32 def_ord, void *ud);
uint32 __cdecl choose_local_tinfo_and_delta(int32 *delta, const til_t *ti, const char *title, local_tinfo_predicate_t *func, uint32 def_ord, void *ud);
ea_t __cdecl choose_name(const char *title);
bool __cdecl choose_named_type(til_symbol_t *out_sym, const til_t *root_til, const char *title, int ntf_flags, predicate_t *predicate);
segment_t *__cdecl choose_segm(const char *title, ea_t default_ea);
sreg_range_t *__cdecl choose_srcp(const char *title);
ea_t __cdecl choose_stkvar_xref(func_t *pfn, member_t *mptr);
struc_t *__cdecl choose_struc(const char *title);
int __cdecl choose_struc_path(const char *title, tid_t strid, uval_t offset, adiff_t delta, bool appzero, tid_t *path);
bool __cdecl choose_til(qstring *buf);
bool __cdecl choose_trace_file(qstring *buf);
ea_t __cdecl choose_xref(ea_t to);
int __cdecl chsize(int _FileHandle, __int32 _Size);
asize_t __cdecl chunk_size(ea_t ea);
ea_t __cdecl chunk_start(ea_t ea);
error_t __cdecl cleanup_appcall(thid_t tid);
void __cdecl cleanup_argloc(argloc_t *vloc);
bool __cdecl cleanup_name(qstring *out, ea_t ea, const char *name, uint32 flags);
void __cdecl clear_all_bits(uchar *bitmap, size_t nbits);
void __cdecl clear_bit(uchar *bitmap, size_t bit);
void __cdecl clear_bits(uchar *bitmap, size_t low, size_t high);
void __cdecl clear_refresh_request(uint64 mask);
void clear_requests_queue(void);
void clear_strlist(void);
void __cdecl clear_tinfo_t(tinfo_t *_this);
void clear_trace(void);
void __cdecl clearerr(FILE *_Stream);
errno_t __cdecl clearerr_s(FILE *_Stream);
void __cdecl cliopts_t_add(cliopts_t *, const cliopt_t *, size_t);
void __cdecl cliopts_t_apply(cliopts_t *, int, const char *[], void *);
const cliopt_t *__cdecl cliopts_t_find_long(const cliopts_t *, const char *);
const cliopt_t *__cdecl cliopts_t_find_short(const cliopts_t *, char);
void __cdecl __noreturn cliopts_t_usage(const cliopts_t *, bool);
clock_t clock(void);
int __cdecl close(int _FileHandle);
bool __cdecl close_chooser(const char *title);
void __cdecl close_linput(linput_t *li);
void __cdecl close_widget(TWidget *widget, int options);
const char *closing_comment(void);
void __cdecl clr__bnot0(ea_t ea);
void __cdecl clr__bnot1(ea_t ea);
void __cdecl clr__invsign0(ea_t ea);
void __cdecl clr__invsign1(ea_t ea);
void __cdecl clr_abits(ea_t ea, aflags_t bits);
void __cdecl clr_align_flow(ea_t ea);
void clr_cancelled(void);
void __cdecl clr_colored_item(ea_t ea);
void __cdecl clr_database_flag(uint32 dbfl);
void __cdecl clr_fixed_spd(ea_t ea);
void __cdecl clr_has_lname(ea_t ea);
void __cdecl clr_has_ti(ea_t ea);
void __cdecl clr_has_ti0(ea_t ea);
void __cdecl clr_has_ti1(ea_t ea);
void __cdecl clr_ignore_micro(ea_t ea);
void __cdecl clr_libitem(ea_t ea);
bool __cdecl clr_lzero(ea_t ea, int n);
void __cdecl clr_lzero0(ea_t ea);
void __cdecl clr_lzero1(ea_t ea);
void *__cdecl clr_module_data(int data_id);
void __cdecl clr_node_info(graph_id_t gid, int node, uint32 flags);
void __cdecl clr_noret(ea_t ea);
void __cdecl clr_notcode(ea_t ea);
void __cdecl clr_notproc(ea_t ea);
bool __cdecl clr_op_type(ea_t ea, int n);
void __cdecl clr_retfp(ea_t ea);
void __cdecl clr_terse_struc(ea_t ea);
void __cdecl clr_tilcmt(ea_t ea);
void __cdecl clr_usemodsp(ea_t ea);
void __cdecl clr_usersp(ea_t ea);
void __cdecl clr_userti(ea_t ea);
void __cdecl clr_zstroff(ea_t ea);
flags_t code_flag(void);
void __cdecl code_highlight_block(void *context, highlighter_cbs_t *highlighter_cbs, const qstring *text);
bool __cdecl collect_stack_trace(thid_t tid, call_stack_t *trace);
void __cdecl combine_regs_jpt(jump_pattern_t *_this, tracked_regs_t *dst, const tracked_regs_t *src, ea_t ea);
int __cdecl compact_numbered_types(til_t *ti, uint32 min_ord, intvec_t *p_ordmap, int flags);
bool __cdecl compact_til(til_t *ti);
int __cdecl compare_arglocs(const argloc_t *a, const argloc_t *b);
bool __cdecl compare_tinfo(uint32 t1, uint32 t2, int tcflags);
bool __cdecl compile_idc_file(const char *file, qstring *errbuf, int cpl_flags);
bool __cdecl compile_idc_snippet(const char *func, const char *text, qstring *errbuf, idc_resolver_t *resolver, bool only_safe_funcs);
bool __cdecl compile_idc_text(const char *line, qstring *errbuf, idc_resolver_t *resolver, bool only_safe_funcs);
bool __cdecl construct_macro(insn_t *insn, bool enable, bool (__cdecl *build_macro)(insn_t *, bool));
bool __cdecl construct_macro2(macro_constructor_t *_this, insn_t *insn, bool enable);
bool __cdecl contains(uval_t off1, asize_t s1, uval_t off);
bool __cdecl contains_fixups(ea_t ea, asize_t size);
bool continue_process(void);
ssize_t __cdecl convert_encoding(bytevec_t *out, const char *fromcode, const char *tocode, const bytevec_t *indata, int flags);
int __cdecl convert_pt_flags_to_hti(int pt_flags);
void __cdecl copy_argloc(argloc_t *dst, const argloc_t *src);
void __cdecl copy_debug_event(debug_event_t *ev, const debug_event_t *r);
error_t __cdecl copy_idcv(idc_value_t *dst, const idc_value_t *src);
uint32 __cdecl copy_named_type(til_t *dsttil, const til_t *srctil, const char *name);
void __cdecl copy_sreg_ranges(int dst_rg, int src_rg, bool map_selector);
void __cdecl copy_tinfo_t(tinfo_t *_this, const tinfo_t *r);
double __cdecl copysign(double _Number, double _Sign);
float __cdecl copysignf(float _Number, float _Sign);
long double __cdecl copysignl(long double _Number, long double _Sign);
ea_t __cdecl correct_address(ea_t ea, ea_t from, ea_t to, ea_t size, bool skip_check);
double __cdecl cos(double _X);
float __cdecl cosf(float _X);
double __cdecl cosh(double _X);
float __cdecl coshf(float _X);
long double __cdecl coshl(long double _X);
long double __cdecl cosl(long double _X);
int __cdecl creat(const char *_FileName, int _PermissionMode);
bool __cdecl create_16bit_data(ea_t ea, asize_t length);
bool __cdecl create_32bit_data(ea_t ea, asize_t length);
bool __cdecl create_align(ea_t ea, asize_t length, int alignment);
bool __cdecl create_byte(ea_t ea, asize_t length, bool force);
linput_t *__cdecl create_bytearray_linput(const uchar *start, size_t size);
TWidget *__cdecl create_code_viewer(TWidget *custview, int flags, TWidget *parent);
bool __cdecl create_custdata(ea_t ea, asize_t length, int dtid, int fid, bool force);
TWidget *__cdecl create_custom_viewer(const char *title, const place_t *minplace, const place_t *maxplace, const place_t *curplace, const renderer_info_t *rinfo, void *ud, const custom_viewer_handlers_t *cvhandlers, void *cvhandlers_ud, TWidget *parent);
bool __cdecl create_data(ea_t ea, flags_t dataflag, asize_t size, tid_t tid);
dirtree_impl_t *__cdecl create_dirtree(dirtree_t *dt, dirspec_t *ds);
mutable_graph_t *__cdecl create_disasm_graph(const rangevec_t *ranges);
bool __cdecl create_double(ea_t ea, asize_t length, bool force);
bool __cdecl create_dword(ea_t ea, asize_t length, bool force);
TWidget *__cdecl create_empty_widget(const char *title, int icon);
encoder_t *__cdecl create_encoding_helper(int encidx, encoder_t::notify_recerr_t nr);
void create_filename_cmt(void);
bool __cdecl create_float(ea_t ea, asize_t length, bool force);
linput_t *__cdecl create_generic_linput(generic_linput_t *gl);
graph_viewer_t *__cdecl create_graph_viewer(const char *title, uval_t id, hook_cb_t *callback, void *ud, int title_height, TWidget *parent);
bool __cdecl create_idcv_ref(idc_value_t *ref, const idc_value_t *v);
int __cdecl create_insn(ea_t ea, insn_t *out);
lexer_t *__cdecl create_lexer(const char *const *keys, size_t size, void *ud);
linput_t *__cdecl create_memory_linput(ea_t start, asize_t size);
bool __cdecl create_menu(const char *name, const char *label, const char *menupath);
bool __cdecl create_multirange_qflow_chart(qflow_chart_t *, const rangevec_t *);
mutable_graph_t *__cdecl create_mutable_graph(uval_t id);
ssize_t __cdecl create_numbered_type_name(qstring *buf, int32 ord);
outctx_base_t *__cdecl create_outctx(ea_t ea, flags_t F, int suspop);
bool __cdecl create_oword(ea_t ea, asize_t length, bool force);
bool __cdecl create_packed_real(ea_t ea, asize_t length, bool force);
void __cdecl create_qflow_chart(qflow_chart_t *);
bool __cdecl create_qword(ea_t ea, asize_t length, bool force);
source_view_t *__cdecl create_source_viewer(TWidget **out_ccv, TWidget *parent, TWidget *custview, source_file_ptr sf, strvec_t *lines, int lnnum, int colnum, int flags);
bool __cdecl create_strlit(ea_t start, size_t len, int32 strtype);
bool __cdecl create_struct(ea_t ea, asize_t length, tid_t tid, bool force);
bool __cdecl create_switch_table(ea_t insn_ea, const switch_info_t *si);
void __cdecl create_switch_xrefs(ea_t insn_ea, const switch_info_t *si);
bool __cdecl create_tbyte(ea_t ea, asize_t length, bool force);
bool __cdecl create_tinfo(tinfo_t *_this, type_t bt, type_t bt2, void *ptr);
bool __cdecl create_toolbar(const char *name, const char *label, const char *before, int flags);
user_graph_place_t *__cdecl create_user_graph_place(int node, int lnnum);
bool __cdecl create_word(ea_t ea, asize_t length, bool force);
bool __cdecl create_xrefs_from(ea_t ea);
bool __cdecl create_yword(ea_t ea, asize_t length, bool force);
linput_t *__cdecl create_zip_linput(linput_t *in, ssize_t insize, linput_close_code_t loc);
bool __cdecl create_zword(ea_t ea, asize_t length, bool force);
std::exception_ptr current_exception(void);
flags_t cust_flag(void);
flags_t custfmt_flag(void);
bool __cdecl custom_viewer_jump(TWidget *v, const lochist_entry_t *loc, uint32 flags);
debugger_t *dbg;
bool __cdecl dbg_add_bpt_tev(thid_t tid, ea_t ea, ea_t bp);
void __cdecl dbg_add_call_tev(thid_t tid, ea_t caller, ea_t callee);
void __cdecl dbg_add_debug_event(debug_event_t *event);
bool __cdecl dbg_add_insn_tev(thid_t tid, ea_t ea, save_reg_values_t save);
bool __cdecl dbg_add_many_tevs(tevinforeg_vec_t *new_tevs);
void __cdecl dbg_add_ret_tev(thid_t tid, ea_t ret_insn, ea_t return_to);
void __cdecl dbg_add_tev(tev_type_t type, thid_t tid, ea_t address);
void __cdecl dbg_add_thread(thid_t tid);
error_t __cdecl dbg_appcall(idc_value_t *retval, ea_t func_ea, thid_t tid, const tinfo_t *ptif, idc_value_t *argv, size_t argnum);
drc_t __cdecl dbg_bin_search(ea_t *out, ea_t start_ea, ea_t end_ea, const compiled_binpat_vec_t *data, int srch_flags, qstring *errbuf);
bool dbg_can_query(void);
void __cdecl dbg_del_thread(thid_t tid);
ssize_t __cdecl dbg_get_input_path(char *buf, size_t bufsize);
int __cdecl dd_size(uchar first_byte);
uint32 debug;
flags_t dec_flag(void);
int __cdecl decode_insn(insn_t *out, ea_t ea);
ea_t __cdecl decode_preceding_insn(insn_t *out, ea_t ea, bool *p_farref);
ea_t __cdecl decode_prev_insn(insn_t *out, ea_t ea);
bool __cdecl decorate_name(qstring *out, const char *name, bool mangle, cm_t cc, const tinfo_t *type);
error_t __cdecl deep_copy_idcv(idc_value_t *dst, const idc_value_t *src);
comp_t default_compiler(void);
const char *__cdecl define_exception(uint code, const char *name, const char *desc, int flags);
bool __cdecl define_stkvar(func_t *pfn, const char *name, sval_t off, flags_t flags, const opinfo_t *ti, asize_t nbytes);
void __cdecl del_absbase(ea_t ea);
void __cdecl del_aflags(ea_t ea);
void __cdecl del_alignment(ea_t ea);
void __cdecl del_array_parameters(ea_t ea);
bool __cdecl del_bpt(const bpt_location_t *bptloc);
bool __cdecl del_bptgrp(const char *name);
bool __cdecl del_cref(ea_t from, ea_t to, bool expand);
void __cdecl del_custom_data_type_ids(ea_t ea);
void __cdecl del_debug_names(ea_t ea1, ea_t ea2);
void __cdecl del_dref(ea_t from, ea_t to);
bool __cdecl del_encoding(int idx);
void __cdecl del_enum(enum_t id);
bool __cdecl del_enum_member(enum_t id, uval_t value, uchar serial, bmask_t bmask);
void __cdecl del_extra_cmt(ea_t ea, int what);
void __cdecl del_fixup(ea_t source);
bool __cdecl del_frame(func_t *pfn);
bool __cdecl del_func(ea_t ea);
bool __cdecl del_global_name(ea_t ea);
bool __cdecl del_hidden_range(ea_t ea);
int __cdecl del_idasgn(int n);
bool __cdecl del_idc_func(const char *name);
bool __cdecl del_idc_hotkey(const char *hotkey);
error_t __cdecl del_idcv_attr(idc_value_t *obj, const char *attr);
void __cdecl del_ind_purged(ea_t ea);
bool __cdecl del_item_color(ea_t ea);
bool __cdecl del_items(ea_t ea, int flags, asize_t nbytes, may_destroy_cb_t *may_destroy);
bool __cdecl del_local_name(ea_t ea);
void __cdecl del_mapping(ea_t ea);
bool __cdecl del_member_tinfo(struc_t *sptr, member_t *mptr);
bool __cdecl del_named_type(til_t *ti, const char *name, int ntf_flags);
void __cdecl del_node_info(graph_id_t gid, int node);
bool __cdecl del_numbered_type(til_t *ti, uint32 ordinal);
void __cdecl del_op_tinfo(ea_t ea, int n);
void __cdecl del_qatexit(void (*func)(void));
bool __cdecl del_refinfo(ea_t ea, int n);
int __cdecl del_regvar(func_t *pfn, ea_t ea1, ea_t ea2, const char *canon);
bool __cdecl del_segm(ea_t ea, int flags);
void __cdecl del_segment_translations(ea_t segstart);
void __cdecl del_selector(sel_t selector);
void __cdecl del_source_linnum(ea_t ea);
bool __cdecl del_sourcefile(ea_t ea);
bool __cdecl del_sreg_range(ea_t ea, int rg);
bool __cdecl del_stkpnt(func_t *pfn, ea_t ea);
void __cdecl del_str_type(ea_t ea);
bool __cdecl del_struc(struc_t *sptr);
bool __cdecl del_struc_member(struc_t *sptr, ea_t offset);
int __cdecl del_struc_members(struc_t *sptr, ea_t off1, ea_t off2);
void __cdecl del_switch_info(ea_t ea);
void __cdecl del_switch_parent(ea_t ea);
bool __cdecl del_til(const char *name);
void __cdecl del_tinfo(ea_t ea);
bool __cdecl del_tinfo_attr(tinfo_t *tif, const qstring *key, bool make_copy);
void __cdecl del_tryblks(const range_t *range);
void __cdecl del_value(ea_t ea);
bool __cdecl del_vftable_ea(uint32 ordinal);
bool __cdecl del_virt_module(const ea_t base);
void __cdecl del_xrefpos(ea_t ea);
void __cdecl delete_all_xrefs_from(ea_t ea, bool expand);
void __cdecl delete_dirtree(dirtree_impl_t *d);
void __cdecl delete_extra_cmts(ea_t ea, int what);
void delete_imports(void);
bool __cdecl delete_menu(const char *name);
void __cdecl delete_mutable_graph(mutable_graph_t *g);
void __cdecl delete_switch_table(ea_t jump_ea, const switch_info_t *si);
bool __cdecl delete_toolbar(const char *name);
int __cdecl delete_unreferenced_stkvars(func_t *pfn);
#error _delete_wrong_frame_info: failed to print!
int __cdecl delete_wrong_stkvar_ops(func_t *pfn);
bool __cdecl delinf(inftag_t tag);
int32 __cdecl demangle(char *, uint, const char *, uint32);
qstring __cdecl demangle_name(const char *name, uint32 disable_mask, demreq_type_t demreq);
idc_value_t *__cdecl deref_idcv(idc_value_t *v, int vref_flags);
bool __cdecl deref_ptr(ea_t *ptr_ea, const tinfo_t *tif, ea_t *closure_obj);
void __cdecl deserialize_dynamic_register_set(dynamic_register_set_t *idaregs, memory_deserializer_t *mmdsr);
bool __cdecl deserialize_tinfo(tinfo_t *tif, const til_t *til, const type_t **ptype, const p_list **pfields, const p_list **pfldcmts);
void __cdecl destroy_custom_viewer(TWidget *custom_viewer);
void __cdecl destroy_lexer(lexer_t *lx);
bool __cdecl detach_action_from_menu(const char *menupath, const char *name);
bool __cdecl detach_action_from_popup(TWidget *widget, const char *name);
bool __cdecl detach_action_from_toolbar(const char *toolbar_name, const char *name);
bool __cdecl detach_custom_data_format(int dtid, int dfid);
bool detach_process(void);
int32 __cdecl detect_compiler_using_demangler(const char *name);
void determine_rtl(void);
bool __cdecl diff_trace_file(const char *filename);
dterr_t __cdecl dirtree_change_rank(dirtree_impl_t *d, const char *path, ssize_t rank_delta);
dterr_t __cdecl dirtree_chdir(dirtree_impl_t *d, const char *path);
const char *__cdecl dirtree_errstr(dterr_t err);
dterr_t __cdecl dirtree_find_entry(dirtree_cursor_t *out, const dirtree_t *_dt, const direntry_t *_de);
bool __cdecl dirtree_findfirst(dirtree_impl_t *d, dirtree_iterator_t *ff, const char *pattern);
bool __cdecl dirtree_findnext(dirtree_impl_t *d, dirtree_iterator_t *ff);
bool __cdecl dirtree_get_abspath_by_cursor(qstring *out, const dirtree_impl_t *d, const dirtree_cursor_t *cursor);
bool __cdecl dirtree_get_abspath_by_relpath(qstring *out, const dirtree_impl_t *d, const char *relpath);
ssize_t __cdecl dirtree_get_dir_size(dirtree_impl_t *d, diridx_t diridx);
void __cdecl dirtree_get_entry_attrs(qstring *out, const dirtree_impl_t *d, const direntry_t *de);
bool __cdecl dirtree_get_entry_name(qstring *out, const dirtree_impl_t *d, const direntry_t *de, uint32 name_flags);
const char *__cdecl dirtree_get_id(const dirtree_impl_t *d);
const char *__cdecl dirtree_get_nodename(const dirtree_impl_t *d);
void __cdecl dirtree_get_parent_cursor(dirtree_cursor_t *out, const dirtree_impl_t *d, const dirtree_cursor_t *cursor);
ssize_t __cdecl dirtree_get_rank(const dirtree_impl_t *d, diridx_t diridx, const direntry_t *de);
void __cdecl dirtree_getcwd(qstring *out, const dirtree_impl_t *d);
dterr_t __cdecl dirtree_link(dirtree_impl_t *d, const char *path, bool do_link);
dterr_t __cdecl dirtree_link_inode(dirtree_impl_t *d, inode_t inode, bool do_link);
dterr_t __cdecl dirtree_mkdir(dirtree_impl_t *d, const char *path);
dterr_t __cdecl dirtree_rename(dirtree_impl_t *d, const char *from, const char *to);
void __cdecl dirtree_resolve_cursor(direntry_t *de, const dirtree_impl_t *d, const dirtree_cursor_t *cursor);
void __cdecl dirtree_resolve_path(direntry_t *de, const dirtree_impl_t *d, const char *path);
dterr_t __cdecl dirtree_rmdir(dirtree_impl_t *d, const char *path);
void __cdecl dirtree_set_id(dirtree_impl_t *d, const char *nm);
void __cdecl dirtree_set_nodename(dirtree_impl_t *d, const char *nm);
ssize_t __cdecl dirtree_traverse(dirtree_impl_t *d, dirtree_visitor_t *v);
bool disable_bblk_trace(void);
bool __cdecl disable_bpt(const bpt_location_t *bptloc);
error_t __cdecl disable_flags(ea_t start_ea, ea_t end_ea);
bool disable_func_trace(void);
bool disable_insn_trace(void);
bool disable_step_trace(void);
bool display_copyright_warning(void);
int __cdecl display_gdl(const char *fname);
void __cdecl display_widget(TWidget *widget, uint32 options, const char *dest_ctrl);
lldiv_t __cdecl div(const __int64 _A1, const __int64 _A2);
flags_t double_flag(void);
int __cdecl ds_packed_size(const char *s);
const char *__cdecl dstr_tinfo(const tinfo_t *tif);
ea_t __cdecl dummy_name_ea(const char *name);
bool __cdecl dump_func_type_data(qstring *out, const func_type_data_t *fti, int praloc_bits);
int __cdecl dup(int _FileHandle);
int __cdecl dup2(int _FileHandleSrc, int _FileHandleDst);
int __cdecl dw_size(uchar first_byte);
flags_t dword_flag(void);
nodeidx_t __cdecl ea2node(ea_t ea);
bool __cdecl ea2str(qstring *out, ea_t ea);
bool __cdecl ea_viewer_history_push_and_jump(TWidget *v, ea_t ea, int x, int y, int lnnum);
fpvalue_error_t __cdecl eadd(const fpvalue_t *a, const fpvalue_t *b, fpvalue_t *zout, bool subflg);
void __cdecl echsize(FILE *fp, uint64 size);
void __cdecl ecleaz(eNI x);
void __cdecl eclose(FILE *fp);
int __cdecl ecmp(const fpvalue_t *a, const fpvalue_t *b);
FILE *__cdecl ecreate(const char *file);
char *__cdecl ecvt(double _Value, int _DigitCount, int *_PtDec, int *_PtSign);
void edit_manual_regions(void);
fpvalue_error_t __cdecl ediv(const fpvalue_t *a, const fpvalue_t *b, fpvalue_t *zout);
fpvalue_error_t __cdecl eetol(sval_t *out, const fpvalue_t *a, bool roundflg);
fpvalue_error_t __cdecl eetol64(int64 *out, const fpvalue_t *a, bool roundflg);
fpvalue_error_t __cdecl eetol64u(uint64 *out, const fpvalue_t *a, bool roundflg);
fpvalue_error_t __cdecl eldexp(const fpvalue_t *a, int32 pwr2, fpvalue_t *zout);
void __cdecl eltoe(sval_t l, fpvalue_t *vout);
void __cdecl eltoe64(int64 l, fpvalue_t *vout);
void __cdecl eltoe64u(uint64 l, fpvalue_t *vout);
bool __cdecl emdnorm(eNI s, bool lost, bool subflg, int32 exp, int rndbase);
void __cdecl emovi(const fpvalue_t *a, eNI vout);
void __cdecl emovo(const eNI a, fpvalue_t *vout);
fpvalue_error_t __cdecl emul(const fpvalue_t *a, const fpvalue_t *b, fpvalue_t *zout);
bool __cdecl enable_auto(bool enable);
bool __cdecl enable_bblk_trace(bool enable);
bool __cdecl enable_bpt(const bpt_location_t *bptloc, bool enable);
int __cdecl enable_bptgrp(const char *bptgrp_name, bool enable);
bool __cdecl enable_chooser_item_attrs(const char *chooser_caption, bool enable);
error_t __cdecl enable_flags(ea_t start_ea, ea_t end_ea, storage_type_t stt);
bool __cdecl enable_func_trace(bool enable);
bool __cdecl enable_insn_trace(bool enable);
void __cdecl enable_manual_regions(bool enable);
bool __cdecl enable_numbered_types(til_t *ti, bool enable);
bool __cdecl enable_step_trace(int enable);
const char *__cdecl encoding_from_strtype(int32 strtype);
void __cdecl end_type_updating(update_type_t utp);
flags_t enum_flag(void);
int __cdecl enum_import_names(int mod_index, import_enum_cb_t *callback, void *param);
int __cdecl enumerate_files(char *answer, size_t answer_size, const char *path, const char *fname, int (__cdecl *func)(const char *, void *), void *ud);
int __cdecl enumerate_files2(char *answer, size_t answer_size, const char *path, const char *fname, file_enumerator_t *fv);
ea_t __cdecl enumerate_segments_with_selector(sel_t selector, ea_t (__cdecl *func)(segment_t *, void *), void *ud);
int __cdecl enumerate_selectors(int (__cdecl *func)(sel_t, ea_t));
void __cdecl enumplace_t__adjust(enumplace_t *, void *);
bool __cdecl enumplace_t__beginning(const enumplace_t *, void *);
place_t *__cdecl enumplace_t__clone(const enumplace_t *);
int __cdecl enumplace_t__compare(const enumplace_t *, const place_t *);
int __cdecl enumplace_t__compare2(const enumplace_t *, const place_t *, void *);
void __cdecl enumplace_t__copyfrom(enumplace_t *, const place_t *);
bool __cdecl enumplace_t__deserialize(enumplace_t *, const uchar **, const uchar *);
bool __cdecl enumplace_t__ending(const enumplace_t *, void *);
place_t *__cdecl enumplace_t__enter(const enumplace_t *, uint32 *);
int __cdecl enumplace_t__generate(const enumplace_t *, qstrvec_t *, int *, color_t *, bgcolor_t *, void *, int);
int __cdecl enumplace_t__id(const enumplace_t *);
void __cdecl enumplace_t__leave(const enumplace_t *, uint32);
place_t *__cdecl enumplace_t__makeplace(const enumplace_t *, void *, uval_t, int);
const char *__cdecl enumplace_t__name(const enumplace_t *);
bool __cdecl enumplace_t__next(enumplace_t *, void *);
bool __cdecl enumplace_t__prev(enumplace_t *, void *);
void __cdecl enumplace_t__print(const enumplace_t *, qstring *, void *);
bool __cdecl enumplace_t__rebase(enumplace_t *, const segm_move_infos_t *);
void __cdecl enumplace_t__serialize(const enumplace_t *, bytevec_t *out);
ea_t __cdecl enumplace_t__toea(const enumplace_t *);
uval_t __cdecl enumplace_t__touval(const enumplace_t *, void *);
int __cdecl eof(int _FileHandle);
bool __cdecl equal_bytes(ea_t ea, const uchar *image, const uchar *mask, size_t len, int bin_search_flags);
void __cdecl eread(FILE *fp, void *buf, size_t size);
double __cdecl erf(double _X);
double __cdecl erfc(double _X);
float __cdecl erfcf(float _X);
long double __cdecl erfcl(long double _X);
float __cdecl erff(float _X);
long double __cdecl erfl(long double _X);
void __noreturn error(const char *format, ...);
int errorexit;
void __cdecl eseek(FILE *fp, int64 pos);
int __cdecl eshift(eNI x, int sc);
bool __cdecl eval_expr(idc_value_t *rv, ea_t where, const char *line, qstring *errbuf);
bool __cdecl eval_expr_long(uval_t *res, ea_t where, const char *line, qstring *errbuf);
bool __cdecl eval_idc_expr(idc_value_t *rv, ea_t where, const char *buf, qstring *errbuf);
bool __cdecl eval_idc_snippet(idc_value_t *result, const char *line, qstring *errbuf, idc_resolver_t *resolver);
void __cdecl ewrite(FILE *fp, const void *buf, size_t size);
bool __cdecl exec_idc_script(idc_value_t *result, const char *path, const char *func, const idc_value_t args[], size_t argsnum, qstring *errbuf);
bool __cdecl exec_system_script(const char *file, bool complain_if_no_file);
int __cdecl execute_sync(exec_request_t *req, int reqf);
int execute_ui_requests(ui_request_t *req, ...);
bool __cdecl exist_bpt(ea_t ea);
bool __cdecl exists_fixup(ea_t source);
void __cdecl __noreturn exit(int _Code);
bool exit_process(void);
double __cdecl exp(double _X);
double __cdecl exp2(double _X);
float __cdecl exp2f(float _X);
long double __cdecl exp2l(long double _X);
char **__cdecl expand_argv(int *p_argc, int argc, const char *const argv[]);
bool __cdecl expand_struc(struc_t *sptr, ea_t offset, adiff_t delta, bool recalc);
float __cdecl expf(float _X);
long double __cdecl expl(long double _X);
double __cdecl expm1(double _X);
float __cdecl expm1f(float _X);
long double __cdecl expm1l(long double _X);
uint64 __cdecl extend_sign(uint64 v, int nbytes, bool sign_extend);
bool __cdecl extract_argloc(argloc_t *vloc, const type_t **ptype, bool forbid_stkoff);
bool __cdecl extract_module_from_archive(char *filename, size_t bufsize, char **temp_file_ptr, bool is_remote);
ssize_t __cdecl extract_name(qstring *out, const char *line, int x);
bool __cdecl f_any(flags_t, void *);
bool __cdecl f_has_cmt(flags_t f, void *);
bool __cdecl f_has_dummy_name(flags_t f, void *);
bool __cdecl f_has_extra_cmts(flags_t f, void *);
bool __cdecl f_has_name(flags_t f, void *);
bool __cdecl f_has_user_name(flags_t F, void *);
bool __cdecl f_has_xref(flags_t f, void *);
bool __cdecl f_is_align(flags_t F, void *);
bool __cdecl f_is_byte(flags_t F, void *);
bool __cdecl f_is_code(flags_t F, void *);
bool __cdecl f_is_custom(flags_t F, void *);
bool __cdecl f_is_data(flags_t F, void *);
bool __cdecl f_is_double(flags_t F, void *);
bool __cdecl f_is_dword(flags_t F, void *);
bool __cdecl f_is_float(flags_t F, void *);
bool __cdecl f_is_head(flags_t F, void *);
bool __cdecl f_is_not_tail(flags_t F, void *);
bool __cdecl f_is_oword(flags_t F, void *);
bool __cdecl f_is_pack_real(flags_t F, void *);
bool __cdecl f_is_qword(flags_t F, void *);
bool __cdecl f_is_strlit(flags_t F, void *);
bool __cdecl f_is_struct(flags_t F, void *);
bool __cdecl f_is_tail(flags_t F, void *);
bool __cdecl f_is_tbyte(flags_t F, void *);
bool __cdecl f_is_word(flags_t F, void *);
bool __cdecl f_is_yword(flags_t F, void *);
double __cdecl fabs(double _X);
float __cdecl fabsf(float _X);
long double __cdecl fabsl(long double _X);
fc_block_type_t __cdecl fc_calc_block_type(const qflow_chart_t *, size_t);
int __cdecl fclose(FILE *_Stream);
int fcloseall(void);
char *__cdecl fcvt(double _Value, int _FractionalDigitCount, int *_PtDec, int *_PtSign);
double __cdecl fdim(double _X, double _Y);
float __cdecl fdimf(float _X, float _Y);
long double __cdecl fdiml(long double _X, long double _Y);
FILE *__cdecl fdopen(int _FileHandle, const char *_Format);
int __cdecl feof(FILE *_Stream);
int __cdecl ferror(FILE *_Stream);
int __cdecl fflush(FILE *_Stream);
int __cdecl fgetc(FILE *_Stream);
int fgetchar(void);
int __cdecl fgetpos(FILE *_Stream, fpos_t *_Position);
char *__cdecl fgets(char *_Buffer, int _MaxCount, FILE *_Stream);
wint_t __cdecl fgetwc(FILE *_Stream);
__int16 *__cdecl fgetws(__int16 *_Buffer, int _BufferCount, FILE *_Stream);
int __cdecl file2base(linput_t *li, int64 pos, ea_t ea1, ea_t ea2, int patchable);
__int32 __cdecl filelength(int _FileHandle);
int __cdecl fileno(FILE *_Stream);
ea_t __cdecl find_binary(ea_t, ea_t, const char *, int, int);
bool __cdecl find_bpt(const bpt_location_t *bptloc, bpt_t *bpt);
ea_t __cdecl find_byte(ea_t sEA, asize_t size, uchar value, int bin_search_flags);
ea_t __cdecl find_byter(ea_t sEA, asize_t size, uchar value, int bin_search_flags);
ea_t __cdecl find_code(ea_t ea, int sflag);
int __cdecl find_custom_data_format(const char *name);
int __cdecl find_custom_data_type(const char *name);
fixup_type_t __cdecl find_custom_fixup(const char *name);
int __cdecl find_custom_refinfo(const char *name);
ea_t __cdecl find_data(ea_t ea, int sflag);
ea_t __cdecl find_defined(ea_t ea, int sflag);
ea_t __cdecl find_defjump_from_table(ea_t jump_ea, const switch_info_t *si);
ea_t __cdecl find_error(ea_t ea, int sflag, int *opnum);
void *__cdecl find_extlang(const void *str, find_extlang_kind_t kind);
extlang_object_t __cdecl find_extlang_by_ext(const char *ext);
extlang_object_t __cdecl find_extlang_by_index(size_t idx);
extlang_object_t __cdecl find_extlang_by_name(const char *name);
sel_t find_free_selector(void);
int __cdecl find_func_bounds(func_t *nfn, int flags);
idc_class_t *__cdecl find_idc_class(const char *name);
bool __cdecl find_idc_func(qstring *out, const char *prefix, int n);
idc_value_t *__cdecl find_idc_gvar(const char *name);
ea_t __cdecl find_imm(ea_t ea, int sflag, uval_t search_value, int *opnum);
const ioport_t *__cdecl find_ioport(const ioports_t *ports, ea_t address);
const ioport_bit_t *__cdecl find_ioport_bit(const ioports_t *ports, ea_t address, size_t bit);
bool __cdecl find_jtable_size(switch_info_t *si);
ea_t __cdecl find_not_func(ea_t ea, int sflag);
ea_t __cdecl find_notype(ea_t ea, int sflag, int *opnum);
plugin_t *__cdecl find_plugin(const char *name, bool load_if_needed);
ea_t __cdecl find_reg_access(reg_access_t *out, ea_t start_ea, ea_t end_ea, const char *regname, int sflag);
regvar_t *__cdecl find_regvar(func_t *pfn, ea_t ea, const char *canon);
sel_t __cdecl find_selector(ea_t base);
ea_t __cdecl find_suspop(ea_t ea, int sflag, int *opnum);
ea_t __cdecl find_syseh(ea_t ea);
ea_t __cdecl find_text(ea_t start_ea, int y, int x, const char *ustr, int sflag);
int __cdecl find_tinfo_udt_member(udt_member_t *udm, uint32 typid, int strmem_flags);
ea_t __cdecl find_unknown(ea_t ea, int sflag);
TWidget *__cdecl find_widget(const char *caption);
const char *__cdecl first_idcv_attr(const idc_value_t *obj);
const char *__cdecl first_named_type(const til_t *ti, int ntf_flags);
flags_t float_flag(void);
double __cdecl floor(double _X);
float __cdecl floorf(float _X);
long double __cdecl floorl(long double _X);
flags_t flt_flag(void);
int flush_buffers(void);
int flushall(void);
double __cdecl fma(double _X, double _Y, double _Z);
float __cdecl fmaf(float _X, float _Y, float _Z);
long double __cdecl fmal(long double _X, long double _Y, long double _Z);
double __cdecl fmax(double _X, double _Y);
float __cdecl fmaxf(float _X, float _Y);
long double __cdecl fmaxl(long double _X, long double _Y);
double __cdecl fmin(double _X, double _Y);
float __cdecl fminf(float _X, float _Y);
long double __cdecl fminl(long double _X, long double _Y);
double __cdecl fmod(double _X, double _Y);
float __cdecl fmodf(float _X, float _Y);
long double __cdecl fmodl(long double _X, long double _Y);
FILE *__cdecl fopen(const char *_FileName, const char *_Mode);
FILE *__cdecl fopenA(const char *file);
FILE *__cdecl fopenM(const char *file);
FILE *__cdecl fopenRB(const char *file);
FILE *__cdecl fopenRT(const char *file);
FILE *__cdecl fopenWB(const char *file);
FILE *__cdecl fopenWT(const char *file);
errno_t __cdecl fopen_s(FILE **_Stream, const char *_FileName, const char *_Mode);
int __cdecl for_all_arglocs(aloc_visitor_t *vv, argloc_t *vloc, int size, int off);
int __cdecl for_all_const_arglocs(const_aloc_visitor_t *vv, const argloc_t *vloc, int size, int off);
int __cdecl for_all_enum_members(enum_t id, enum_member_visitor_t *cv);
ssize_t __cdecl for_all_extlangs(extlang_visitor_t *ev, bool select);
bool __cdecl force_name(ea_t ea, const char *name, int flags);
bool __cdecl forget_problem(problist_id_t type, ea_t ea);
size_t __cdecl format_c_number(char *buf, size_t bufsize, uint128 value, int size, int pcn);
bool __cdecl format_cdata(qstrvec_t *outvec, const idc_value_t *idc_value, const tinfo_t *tif, valstr_t *vtree, const format_data_info_t *fdi);
bool __cdecl format_charlit(qstring *out, const uchar **ptr, size_t size, uint32 flags, int encidx);
int __cdecl fpclassify(long double _X);
void fpreset(void);
int fprintf(FILE *const _Stream, const char *const _Format, ...);
int fprintf_s(FILE *const _Stream, const char *const _Format, ...);
int __cdecl fputc(int _Character, FILE *_Stream);
int __cdecl fputchar(int _Ch);
int __cdecl fputs(const char *_Buffer, FILE *_Stream);
wint_t __cdecl fputwc(__int16 _Character, FILE *_Stream);
int __cdecl fputws(const __int16 *_Buffer, FILE *_Stream);
ea_t __cdecl frame_off_args(const func_t *pfn);
ea_t __cdecl frame_off_lvars(const func_t *pfn);
ea_t __cdecl frame_off_retaddr(const func_t *pfn);
ea_t __cdecl frame_off_savregs(const func_t *pfn);
size_t __cdecl fread(void *_Buffer, size_t _ElementSize, size_t _ElementCount, FILE *_Stream);
int __cdecl fread2bytes(FILE *fp, uint16 *res, bool mostfirst);
int __cdecl fread4bytes(FILE *fp, uint32 *res, bool mostfirst);
int __cdecl fread8bytes(FILE *fp, ulonglong *res, bool mostfirst);
size_t __cdecl fread_s(void *_Buffer, size_t _BufferSize, size_t _ElementSize, size_t _ElementCount, FILE *_Stream);
int __cdecl freadbytes(FILE *fp, void *res, int size, int mostfirst);
void __cdecl free(void *_Block);
void __cdecl free_argv(int argc, char **argv);
ea_t __cdecl free_chunk(ea_t bottom, asize_t size, int32 step);
void __cdecl free_custom_icon(int icon_id);
void __cdecl free_debug_event(debug_event_t *ev);
void __cdecl free_dll(idadll_t *dllmem);
void __cdecl free_idcv(idc_value_t *v);
void __cdecl free_loaders_list(load_info_t *list);
void __cdecl free_regarg(regarg_t *v);
void __cdecl free_regvar(regvar_t *v);
void __cdecl free_til(til_t *ti);
FILE *__cdecl freopen(const char *_FileName, const char *_Mode, FILE *_Stream);
errno_t __cdecl freopen_s(FILE **_Stream, const char *_FileName, const char *_Mode, FILE *_OldStream);
double __cdecl frexp(double _X, int *_Y);
float __cdecl frexpf(float _X, int *_Y);
long double __cdecl frexpl(long double _X, int *_Y);
int fscanf(FILE *const _Stream, const char *const _Format, ...);
int fscanf_s(FILE *const _Stream, const char *const _Format, ...);
int __cdecl fseek(FILE *_Stream, __int32 _Offset, int _Origin);
int __cdecl fsetpos(FILE *_Stream, const fpos_t *_Position);
__int32 __cdecl ftell(FILE *_Stream);
bool __cdecl func_contains(func_t *pfn, ea_t ea);
bool __cdecl func_does_return(ea_t callee);
bool __cdecl func_has_stkframe_hole(ea_t ea, const func_type_data_t *fti);
bool __cdecl func_item_iterator_decode_preceding_insn(func_item_iterator_t *fii, eavec_t *visited, bool *p_farref, insn_t *out);
bool __cdecl func_item_iterator_decode_prev_insn(func_item_iterator_t *fii, insn_t *out);
bool __cdecl func_item_iterator_next(func_item_iterator_t *fii, testf_t *testf, void *ud);
bool __cdecl func_item_iterator_prev(func_item_iterator_t *fii, testf_t *testf, void *ud);
bool __cdecl func_item_iterator_succ(func_item_iterator_t *fii, testf_t *testf, void *ud);
bool __cdecl func_parent_iterator_set(func_parent_iterator_t *fpi, func_t *pfn);
bool __cdecl func_tail_iterator_set(func_tail_iterator_t *fti, func_t *pfn, ea_t ea);
bool __cdecl func_tail_iterator_set_ea(func_tail_iterator_t *fti, ea_t ea);
int __cdecl fwide(FILE *_F, int _M);
int fwprintf(FILE *const _Stream, const __int16 *const _Format, ...);
int fwprintf_s(FILE *const _Stream, const __int16 *const _Format, ...);
size_t __cdecl fwrite(const void *_Buffer, size_t _ElementSize, size_t _ElementCount, FILE *_Stream);
int __cdecl fwrite2bytes(FILE *fp, const uint16 *res, bool mostfirst);
int __cdecl fwrite4bytes(FILE *fp, const uint32 *res, bool mostfirst);
int __cdecl fwrite8bytes(FILE *fp, const ulonglong *res, bool mostfirst);
int __cdecl fwritebytes(FILE *fp, const void *l, int size, int mostfirst);
int fwscanf(FILE *const _Stream, const __int16 *const _Format, ...);
int fwscanf_s(FILE *const _Stream, const __int16 *const _Format, ...);
bool gcc_layout(void);
char *__cdecl gcvt(double _Value, int _DigitCount, char *_DstBuf);
bool __cdecl gen_complex_call_chart(const char *filename, const char *dont_use_wait, const char *title, ea_t ea1, ea_t ea2, int flags, int32 recursion_depth);
bool __cdecl gen_decorate_name(qstring *out, const char *name, bool mangle, cm_t cc, const tinfo_t *type);
void __cdecl gen_disasm_text(text_t *text, ea_t ea1, ea_t ea2, bool truncate_lines);
int __cdecl gen_exe_file(FILE *fp);
int __cdecl gen_file(ofile_type_t otype, FILE *fp, ea_t ea1, ea_t ea2, int flags);
void __cdecl gen_fix_fixups(ea_t from, ea_t to, asize_t size);
bool __cdecl gen_flow_graph(const char *filename, const char *title, func_t *pfn, ea_t ea1, ea_t ea2, int gflags);
void __cdecl gen_gdl(const gdl_graph_t *g, const char *fname);
void gen_idb_event(idb_event::event_code_t code, ...);
bool __cdecl gen_rand_buf(void *buffer, size_t bufsz);
bool __cdecl gen_simple_call_chart(const char *filename, const char *dont_use_wait, const char *title, int gflags);
void __cdecl gen_use_arg_tinfos(ea_t caller, func_type_data_t *fti, funcargvec_t *rargs, set_op_tinfo_t *set_optype, is_stkarg_load_t *is_stkarg_load, has_delay_slot_t *has_delay_slot);
void __cdecl gen_use_arg_tinfos2(argtinfo_helper_t *_this, ea_t caller, func_type_data_t *fti, funcargvec_t *rargs);
bool __cdecl generate_disasm_line(qstring *buf, ea_t ea, int flags);
int __cdecl generate_disassembly(qstrvec_t *out, int *lnnum, ea_t ea, int maxsize, bool as_stack);
uint32 __cdecl get_16bit(ea_t ea);
uint32 __cdecl get_32bit(ea_t ea);
uint64 __cdecl get_64bit(ea_t ea);
uchar __cdecl get_8bit(ea_t *ea, uint32 *v, int *nbit);
ssize_t __cdecl get_abi_name(qstring *out);
ea_t __cdecl get_absbase(ea_t ea);
bool __cdecl get_action_checkable(const char *name, bool *checkable);
bool __cdecl get_action_checked(const char *name, bool *checked);
bool __cdecl get_action_icon(const char *name, int *icon);
bool __cdecl get_action_label(qstring *label, const char *name);
bool __cdecl get_action_shortcut(qstring *shortcut, const char *name);
bool __cdecl get_action_state(const char *name, action_state_t *state);
bool __cdecl get_action_tooltip(qstring *tooltip, const char *name);
bool __cdecl get_action_visibility(const char *name, bool *visibility);
TWidget *get_active_modal_widget(void);
bool __cdecl get_addon_info(const char *id, addon_info_t *info);
bool __cdecl get_addon_info_idx(int index, addon_info_t *info);
aflags_t __cdecl get_aflags(ea_t ea);
uint32 __cdecl get_alias_target(const til_t *ti, uint32 ordinal);
uint32 __cdecl get_alignment(ea_t ea);
ssize_t __cdecl get_archive_path(qstring *out);
bool __cdecl get_arg_addrs(eavec_t *out, ea_t caller);
int __cdecl get_arg_align(const tinfo_t *tif, int slotsize, cm_t cc);
ssize_t __cdecl get_array_parameters(array_parameters_t *out, ea_t ea);
asm_t *get_ash(void);
ssize_t __cdecl get_asm_inc_file(qstring *buf);
bool __cdecl get_auto_display(auto_display_t *auto_display);
atype_t get_auto_state(void);
type_t __cdecl get_base_type(type_t t);
filetype_t __cdecl get_basic_file_type(linput_t *li);
int get_bblk_trace_options(void);
member_t *__cdecl get_best_fit_member(const struc_t *sptr, asize_t offset);
ssize_t __cdecl get_bmask_cmt(qstring *buf, enum_t id, bmask_t bmask, bool repeatable);
ssize_t __cdecl get_bmask_name(qstring *out, enum_t id, bmask_t bmask);
bool __cdecl get_bpt(ea_t ea, bpt_t *bpt);
bool __cdecl get_bpt_group(qstring *grp_name, const bpt_location_t *bptloc);
int get_bpt_qty(void);
ea_t __cdecl get_bpt_tev_ea(int n);
const char *__cdecl get_bptloc_string(int i);
uchar __cdecl get_byte(ea_t ea);
ssize_t __cdecl get_bytes(void *buf, ssize_t size, ea_t ea, int gmb_flags, void *mask);
ssize_t __cdecl get_c_header_path(qstring *buf);
ssize_t __cdecl get_c_macros(qstring *buf);
ea_t __cdecl get_call_tev_callee(int n);
cm_t __cdecl get_cc(cm_t cm);
bool __cdecl get_chooser_data(qstrvec_t *out, const char *chooser_caption, int n);
void *__cdecl get_chooser_obj(const char *chooser_caption);
ssize_t __cdecl get_cmt(qstring *buf, ea_t ea, bool rptble);
qstring __cdecl get_colored_demangled_name(ea_t ea, int32 inhibitor, int demform, int gtn_flags);
qstring __cdecl get_colored_long_name(ea_t ea, int gtn_flags);
qstring __cdecl get_colored_name(ea_t ea, int gtn_flags);
qstring __cdecl get_colored_short_name(ea_t ea, int gtn_flags);
comp_t __cdecl get_comp(comp_t comp);
const char *__cdecl get_compiler_abbr(comp_t id);
const char *__cdecl get_compiler_name(comp_t id);
void __cdecl get_compilers(compvec_t *ids, qstrvec_t *names, qstrvec_t *abbrs);
bool __cdecl get_cp_validity(ucdr_kind_t kind, wchar32_t cp, wchar32_t endcp);
const char *get_curline(void);
void *get_current_extlang(void);
int get_current_idasgn(void);
bool __cdecl get_current_source_file(qstring *out);
int get_current_source_line(void);
thid_t get_current_thread(void);
TWidget *get_current_viewer(void);
TWidget *get_current_widget(void);
bool __cdecl get_cursor(int *x, int *y);
const data_format_t *__cdecl get_custom_data_format(int dfid);
int __cdecl get_custom_data_formats(intvec_t *out, int dtid);
const data_type_t *__cdecl get_custom_data_type(int dtid);
int __cdecl get_custom_data_type_ids(custom_data_type_ids_t *cdis, ea_t ea);
int __cdecl get_custom_data_types(intvec_t *out, asize_t min_size, asize_t max_size);
const custom_refinfo_handler_t *__cdecl get_custom_refinfo(int crid);
const custom_refinfo_handler_t *__cdecl get_custom_refinfo_handler(const refinfo_t *ri);
const char *__cdecl get_custom_viewer_curline(TWidget *custom_viewer, bool mouse);
bool __cdecl get_custom_viewer_location(lochist_entry_t *out, TWidget *custom_viewer, bool mouse);
place_t *__cdecl get_custom_viewer_place(TWidget *custom_viewer, bool mouse, int *x, int *y);
int __cdecl get_custom_viewer_place_xcoord(TWidget *custom_viewer, const place_t *pline, const place_t *pitem);
asize_t __cdecl get_data_elsize(ea_t ea, flags_t F, const opinfo_t *ti);
bool __cdecl get_data_value(uval_t *v, ea_t ea, asize_t size);
uchar __cdecl get_db_byte(ea_t ea);
ssize_t get_dbctx_id(void);
size_t get_dbctx_qty(void);
bool __cdecl get_dbg_byte(uint32 *x, ea_t ea);
int __cdecl get_dbg_memory_info(meminfo_vec_t *ranges);
bool __cdecl get_dbg_reg_info(const char *regname, register_info_t *ri);
const debug_event_t *get_debug_event(void);
ssize_t __cdecl get_debug_name(qstring *out, ea_t *ea_ptr, debug_name_how_t how);
ea_t __cdecl get_debug_name_ea(const char *name);
void __cdecl get_debug_names(ea_name_vec_t *names, ea_t ea1, ea_t ea2);
const char *get_debugger_event_cond(void);
size_t __cdecl get_debugger_plugins(const dbg_info_t **array);
size_t get_default_align(void);
int __cdecl get_default_encoding_idx(int bpu);
int get_default_radix(void);
reftype_t __cdecl get_default_reftype(ea_t ea);
qstring __cdecl get_demangled_name(ea_t ea, int32 inhibitor, int demform, int gtn_flags);
uint64 get_dirty_infos(void);
op_dtype_t __cdecl get_dtype_by_size(asize_t size);
flags_t __cdecl get_dtype_flag(op_dtype_t dtype);
size_t __cdecl get_dtype_size(op_dtype_t dtype);
uint32 __cdecl get_dword(ea_t ea);
ssize_t __cdecl get_ea_name(qstring *out, ea_t ea, int gtn_flags, getname_info_t *gtni);
bool __cdecl get_ea_viewer_history_info(int *nback, int *nfwd, TWidget *v);
cm_t __cdecl get_effective_cc(cm_t cm);
sval_t __cdecl get_effective_spd(func_t *pfn, ea_t ea);
size_t get_elapsed_secs(void);
const char *get_elf_debug_file_directory(void);
int __cdecl get_encoding_bpu(int idx);
int __cdecl get_encoding_bpu_by_name(const char *encname);
const char *__cdecl get_encoding_name(int idx);
int get_encoding_qty(void);
ea_t __cdecl get_entry(uval_t ord);
ssize_t __cdecl get_entry_forwarder(qstring *buf, uval_t ord);
ssize_t __cdecl get_entry_name(qstring *buf, uval_t ord);
uval_t __cdecl get_entry_ordinal(size_t idx);
size_t get_entry_qty(void);
enum_t __cdecl get_enum(const char *name);
ssize_t __cdecl get_enum_cmt(qstring *buf, enum_t id, bool repeatable);
flags_t __cdecl get_enum_flag(enum_t id);
enum_t __cdecl get_enum_id(uchar *serial, ea_t ea, int n);
uval_t __cdecl get_enum_idx(enum_t id);
const_t __cdecl get_enum_member(enum_t id, uval_t value, int serial, bmask_t mask);
bmask_t __cdecl get_enum_member_bmask(const_t id);
const_t __cdecl get_enum_member_by_name(const char *name);
ssize_t __cdecl get_enum_member_cmt(qstring *buf, const_t id, bool repeatable);
enum_t __cdecl get_enum_member_enum(const_t id);
bool __cdecl get_enum_member_expr(qstring *buf, const tinfo_t *tif, int serial, uint64 value);
ssize_t __cdecl get_enum_member_name(qstring *out, const_t id);
uchar __cdecl get_enum_member_serial(const_t cid);
uval_t __cdecl get_enum_member_value(const_t id);
qstring __cdecl get_enum_name(tid_t id, int flags);
ssize_t __cdecl get_enum_name2(qstring *out, enum_t id, int flags);
size_t get_enum_qty(void);
size_t __cdecl get_enum_size(enum_t id);
int32 __cdecl get_enum_type_ordinal(enum_t id);
size_t __cdecl get_enum_width(enum_t id);
char *__cdecl get_errdesc(const char *header, error_t _qerrno);
size_t __cdecl get_error_data(int n);
const char *__cdecl get_error_string(int n);
extlang_object_t get_extlang(void);
ssize_t __cdecl get_extra_cmt(qstring *buf, ea_t ea, int what);
func_t *__cdecl get_fchunk(ea_t ea);
int __cdecl get_fchunk_num(ea_t ea);
size_t get_fchunk_qty(void);
const char *__cdecl get_file_ext(const char *file);
size_t __cdecl get_file_type_name(char *buf, size_t bufsize);
ea_t __cdecl get_fileregion_ea(int64 offset);
int64 __cdecl get_fileregion_offset(ea_t ea);
bmask_t __cdecl get_first_bmask(enum_t id);
ea_t __cdecl get_first_cref_from(ea_t from);
ea_t __cdecl get_first_cref_to(ea_t to);
ea_t __cdecl get_first_dref_from(ea_t from);
ea_t __cdecl get_first_dref_to(ea_t to);
uval_t __cdecl get_first_enum_member(enum_t id, bmask_t bmask);
ea_t __cdecl get_first_fcref_from(ea_t from);
ea_t __cdecl get_first_fcref_to(ea_t to);
ea_t get_first_fixup_ea(void);
int __cdecl get_first_free_extra_cmtidx(ea_t ea, int start);
hidden_range_t *get_first_hidden_range(void);
bool __cdecl get_first_module(modinfo_t *modinfo);
segment_t *get_first_seg(void);
const_t __cdecl get_first_serial_enum_member(uchar *out_serial, enum_t id, uval_t value, bmask_t bmask);
uval_t get_first_struc_idx(void);
bool __cdecl get_fixup(fixup_data_t *fd, ea_t source);
const char *__cdecl get_fixup_desc(qstring *buf, ea_t source, const fixup_data_t *fd);
const fixup_handler_t *__cdecl get_fixup_handler(fixup_type_t type);
uval_t __cdecl get_fixup_value(ea_t ea, fixup_type_t type);
bool __cdecl get_fixups(fixups_t *out, ea_t ea, asize_t size);
flags_t __cdecl get_flags(ea_t ea);
flags_t __cdecl get_flags_by_size(size_t size);
flags_t __cdecl get_flags_ex(ea_t ea, int how);
ssize_t __cdecl get_forced_operand(qstring *buf, ea_t ea, int n);
fpvalue_kind_t __cdecl get_fpvalue_kind(const fpvalue_t *a, uint16 reserved);
struc_t *__cdecl get_frame(ea_t ea);
void __cdecl get_frame_part(range_t *range, const func_t *pfn, frame_part_t part);
int __cdecl get_frame_retsize(const func_t *pfn);
asize_t __cdecl get_frame_size(const func_t *pfn);
uint64 __cdecl get_free_disk_space(const char *path);
asize_t __cdecl get_full_data_elsize(ea_t ea, flags_t F, const opinfo_t *ti);
flags_t __cdecl get_full_flags(ea_t ea);
type_t __cdecl get_full_type(type_t t);
func_t *__cdecl get_func(ea_t ea);
int __cdecl get_func_bitness(const func_t *pfn);
int __cdecl get_func_bits(const func_t *pfn);
ea_t __cdecl get_func_by_frame(tid_t frame_id);
int __cdecl get_func_bytes(const func_t *pfn);
int __cdecl get_func_chunknum(func_t *pfn, ea_t ea);
ssize_t __cdecl get_func_cmt(qstring *buf, const func_t *pfn, bool repeatable);
ssize_t __cdecl get_func_name(qstring *out, ea_t ea);
int __cdecl get_func_num(ea_t ea);
size_t get_func_qty(void);
ea_t __cdecl get_func_ranges(rangeset_t *ranges, func_t *pfn);
int get_func_trace_options(void);
bool __cdecl get_global_var(srcinfo_provider_t *prov, ea_t ea, const char *name, source_item_ptr *out);
ea_t get_gotea(void);
graph_viewer_t *__cdecl get_graph_viewer(TWidget *parent);
sel_t __cdecl get_group_selector(sel_t grpsel);
ssize_t __cdecl get_grp_bpts(bpt_vec_t *bpts, const char *grp_name);
ssize_t __cdecl get_hex_string(char *buf, size_t bufsize, const uchar *bytes, size_t len);
hexdsp_t *get_hexdsp(void);
ea_t __cdecl get_hexdump_ea(int hexdump_num);
hidden_range_t *__cdecl get_hidden_range(ea_t ea);
int __cdecl get_hidden_range_num(ea_t ea);
int get_hidden_range_qty(void);
bool __cdecl get_highlight(qstring *out_str, TWidget *viewer, uint32 *out_flags, uint32 flags);
ssize_t __cdecl get_ida_notepad_text(qstring *out);
int __cdecl get_ida_subdirs(qstrvec_t *dirs, const char *subdir, int flags);
bool __cdecl get_idainfo_by_type(size_t *out_size, flags_t *out_flags, opinfo_t *out_mt, const tinfo_t *tif, size_t *out_alsize);
int32 __cdecl get_idasgn_desc(qstring *signame, qstring *optlibs, int n);
idasgn_t *__cdecl get_idasgn_header_by_short_name(const char *name);
int get_idasgn_qty(void);
ssize_t __cdecl get_idasgn_title(qstring *buf, const char *name);
const til_t *get_idati(void);
time_t get_idb_ctime(void);
size_t get_idb_nopens(void);
char *__cdecl get_idc_filename(char *buf, size_t bufsize, const char *file);
error_t __cdecl get_idcv_attr(idc_value_t *res, const idc_value_t *obj, const char *attr, bool may_use_getattr);
error_t __cdecl get_idcv_class_name(qstring *out, const idc_value_t *obj);
error_t __cdecl get_idcv_slice(idc_value_t *res, const idc_value_t *v, uval_t i1, uval_t i2, int flags);
const idp_descs_t *get_idp_descs(void);
char *__cdecl get_idp_name(char *buf, size_t bufsize);
bool __cdecl get_idptype_and_data(int *vtype, const void **vdata, const idc_value_t *v);
netnode get_ids_modnode(void);
char __cdecl get_ignore_micro(ea_t ea);
ea_t get_imagebase(void);
size_t __cdecl get_immvals(uval_t *out, ea_t ea, int n, flags_t F, insn_t *cache);
bool __cdecl get_import_module_name(qstring *buf, int mod_index);
uint get_import_module_qty(void);
ea_t __cdecl get_ind_purged(ea_t ea);
ssize_t __cdecl get_initial_ida_version(qstring *out);
ushort get_initial_idb_version(void);
member_t *__cdecl get_innermost_member(struc_t **sptr, asize_t *offset);
ssize_t __cdecl get_input_file_path(char *buf, size_t bufsize);
bool __cdecl get_insn_tev_reg_mem(int n, memreg_infos_t *memmap);
bool __cdecl get_insn_tev_reg_result(int n, const char *regname, uint64 *ival);
bool __cdecl get_insn_tev_reg_val(int n, const char *regname, uint64 *ival);
int get_insn_trace_options(void);
bool __cdecl get_ip_val(ea_t *out);
bgcolor_t __cdecl get_item_color(ea_t ea);
ea_t __cdecl get_item_end(ea_t ea);
flags_t __cdecl get_item_flag(ea_t from, int n, ea_t ea, bool appzero);
ea_t __cdecl get_item_head(ea_t ea);
asize_t __cdecl get_item_size(ea_t ea);
ea_t __cdecl get_jtable_target(ea_t jump_ea, const switch_info_t *si, int i);
ssize_t __cdecl get_kernel_version(char *buf, size_t bufsize);
ushort __cdecl get_key_code(const char *keyname);
bmask_t __cdecl get_last_bmask(enum_t id);
uval_t __cdecl get_last_enum_member(enum_t id, bmask_t bmask);
hidden_range_t *get_last_hidden_range(void);
int get_last_pfxlen(void);
segment_t *get_last_seg(void);
const_t __cdecl get_last_serial_enum_member(uchar *out_serial, enum_t id, uval_t value, bmask_t bmask);
uval_t get_last_struc_idx(void);
linput_type_t __cdecl get_linput_type(linput_t *li);
ssize_t __cdecl get_loader_format_name(qstring *out);
ssize_t __cdecl get_loader_name(char *buf, size_t bufsize);
char *__cdecl get_loader_name_from_dll(char *dllname);
bool __cdecl get_local_var(srcinfo_provider_t *prov, ea_t ea, const char *name, source_item_ptr *out);
bool __cdecl get_local_vars(srcinfo_provider_t *prov, ea_t ea, source_items_t *out);
qstring __cdecl get_long_name(ea_t ea, int gtn_flags);
int get_lookback(void);
mangled_name_type_t __cdecl get_mangled_name_type(const char *name);
ssize_t __cdecl get_manual_insn(qstring *buf, ea_t ea);
void __cdecl get_manual_regions(meminfo_vec_t *ranges);
bool __cdecl get_mapping(ea_t *from, ea_t *to, asize_t *size, size_t n);
size_t get_mappings_qty(void);
ea_t __cdecl get_max_offset(struc_t *sptr);
size_t __cdecl get_max_strlit_length(ea_t ea, int32 strtype, int options);
member_t *__cdecl get_member(const struc_t *sptr, asize_t offset);
member_t *__cdecl get_member_by_fullname(struc_t **sptr_place, const char *fullname);
member_t *__cdecl get_member_by_id(tid_t mid, struc_t **sptr_place);
member_t *__cdecl get_member_by_name(const struc_t *sptr, const char *membername);
ssize_t __cdecl get_member_cmt(qstring *buf, tid_t mid, bool repeatable);
ssize_t __cdecl get_member_fullname(qstring *out, tid_t mid);
tid_t __cdecl get_member_id(const struc_t *sptr, asize_t offset);
qstring __cdecl get_member_name(tid_t mid);
asize_t __cdecl get_member_size(const member_t *mptr);
struc_t *__cdecl get_member_struc(const char *fullname);
bool __cdecl get_member_tinfo(tinfo_t *tif, const member_t *mptr);
ea_t __cdecl get_min_spd_ea(func_t *pfn);
void *__cdecl get_module_data(int data_id);
bool __cdecl get_module_info(ea_t ea, modinfo_t *modinfo);
qstring __cdecl get_name(ea_t ea, int gtn_flags);
ea_t __cdecl get_name_base_ea(ea_t from, ea_t to);
color_t __cdecl get_name_color(ea_t from, ea_t ea);
ea_t __cdecl get_name_ea(ea_t from, const char *name);
ssize_t __cdecl get_name_expr(qstring *out, ea_t from, int n, ea_t ea, uval_t off, int flags);
int __cdecl get_name_value(uval_t *value, ea_t from, const char *name);
int __cdecl get_named_type(const til_t *ti, const char *name, int ntf_flags, const type_t **type, const p_list **fields, const char **cmt, const p_list **fieldcmts, sclass_t *sclass, uint32 *value);
int __cdecl get_named_type64(const til_t *ti, const char *name, int ntf_flags, const type_t **type, const p_list **fields, const char **cmt, const p_list **fieldcmts, sclass_t *sclass, uint64 *value);
ea_t __cdecl get_navband_ea(int pixel);
int __cdecl get_navband_pixel(bool *out_is_vertical, ea_t ea);
std::new_handler get_new_handler(void);
bmask_t __cdecl get_next_bmask(enum_t id, bmask_t bmask);
ea_t __cdecl get_next_cref_from(ea_t from, ea_t current);
ea_t __cdecl get_next_cref_to(ea_t to, ea_t current);
ea_t __cdecl get_next_dref_from(ea_t from, ea_t current);
ea_t __cdecl get_next_dref_to(ea_t to, ea_t current);
uval_t __cdecl get_next_enum_member(enum_t id, uval_t value, bmask_t bmask);
func_t *__cdecl get_next_fchunk(ea_t ea);
ea_t __cdecl get_next_fcref_from(ea_t from, ea_t current);
ea_t __cdecl get_next_fcref_to(ea_t to, ea_t current);
ea_t __cdecl get_next_fixup_ea(ea_t ea);
func_t *__cdecl get_next_func(ea_t ea);
ea_t __cdecl get_next_func_addr(func_t *pfn, ea_t ea);
hidden_range_t *__cdecl get_next_hidden_range(ea_t ea);
ssize_t __cdecl get_next_member_idx(const struc_t *sptr, asize_t off);
bool __cdecl get_next_module(modinfo_t *modinfo);
segment_t *__cdecl get_next_seg(ea_t ea);
const_t __cdecl get_next_serial_enum_member(uchar *in_out_serial, const_t first_cid);
uval_t __cdecl get_next_struc_idx(uval_t idx);
ssize_t __cdecl get_nice_colored_name(qstring *buf, ea_t ea, int flags);
ea_t __cdecl get_nlist_ea(size_t idx);
size_t __cdecl get_nlist_idx(ea_t ea);
const char *__cdecl get_nlist_name(size_t idx);
size_t get_nlist_size(void);
bool __cdecl get_node_info(node_info_t *out, graph_id_t gid, int node);
uint64 get_nsec_stamp(void);
bool __cdecl get_numbered_type(const til_t *ti, uint32 ordinal, const type_t **type, const p_list **fields, const char **cmt, const p_list **fieldcmts, sclass_t *sclass);
const char *__cdecl get_numbered_type_name(const til_t *ti, uint32 ordinal);
uchar __cdecl get_octet(ea_t *ea, uint64 *v, int *nbit);
ea_t __cdecl get_offbase(ea_t ea, int n);
int __cdecl get_offset_expr(qstring *buf, ea_t ea, int n, const refinfo_t *ri, ea_t from, adiff_t offset, int getn_flags);
int __cdecl get_offset_expression(qstring *buf, ea_t ea, int n, ea_t from, adiff_t offset, int getn_flags);
bool __cdecl get_op_tinfo(tinfo_t *tif, ea_t ea, int n);
opinfo_t *__cdecl get_opinfo(opinfo_t *buf, ea_t ea, int n, flags_t flags);
int get_opnum(void);
flags_t __cdecl get_optype_flags0(flags_t F);
flags_t __cdecl get_optype_flags1(flags_t F);
bool __cdecl get_or_guess_member_tinfo(tinfo_t *tif, const member_t *mptr);
int __cdecl get_ordinal_from_idb_type(const char *name, const type_t *type);
uint32 __cdecl get_ordinal_qty(const til_t *ti);
uint64 __cdecl get_original_byte(ea_t ea);
uint64 __cdecl get_original_dword(ea_t ea);
uint64 __cdecl get_original_qword(ea_t ea);
uint64 __cdecl get_original_word(ea_t ea);
int get_outfile_encoding_idx(void);
bool __cdecl get_output_curline(qstring *buf, bool mouse);
bool __cdecl get_output_cursor(int *x, int *y);
bool __cdecl get_output_selected_text(qstring *buf);
const char *__cdecl get_path(path_type_t pt);
processor_t *get_ph(void);
const place_t *__cdecl get_place_class(int *out_flags, int *out_sdk_version, int id);
int __cdecl get_place_class_id(const char *name);
const place_t *__cdecl get_place_class_template(int id);
const char *__cdecl get_plugin_options(const char *plugin);
plugin_info_t *get_plugins(void);
ssize_t __cdecl get_predef_insn_cmt(qstring *buf, const insn_t *ins);
bmask_t __cdecl get_prev_bmask(enum_t id, bmask_t bmask);
uval_t __cdecl get_prev_enum_member(enum_t id, uval_t value, bmask_t bmask);
func_t *__cdecl get_prev_fchunk(ea_t ea);
ea_t __cdecl get_prev_fixup_ea(ea_t ea);
func_t *__cdecl get_prev_func(ea_t ea);
ea_t __cdecl get_prev_func_addr(func_t *pfn, ea_t ea);
hidden_range_t *__cdecl get_prev_hidden_range(ea_t ea);
ssize_t __cdecl get_prev_member_idx(const struc_t *sptr, asize_t off);
segment_t *__cdecl get_prev_seg(ea_t ea);
const_t __cdecl get_prev_serial_enum_member(uchar *in_out_serial, const_t first_cid);
bool __cdecl get_prev_sreg_range(sreg_range_t *out, ea_t ea, int rg);
uval_t __cdecl get_prev_struc_idx(uval_t idx);
size_t __cdecl get_printable_immvals(uval_t *out, ea_t ea, int n, flags_t F, insn_t *cache);
ea_t __cdecl get_problem(problist_id_t type, ea_t lowea);
ssize_t __cdecl get_problem_desc(qstring *buf, problist_id_t t, ea_t ea);
const char *__cdecl get_problem_name(problist_id_t type, bool longname);
void __cdecl get_process_options(qstring *path, qstring *args, qstring *sdir, qstring *host, qstring *pass, int *port);
int get_process_state(void);
ssize_t __cdecl get_processes(procinfo_vec_t *proclist);
error_t get_qerrno(void);
uint64 __cdecl get_qword(ea_t ea);
int __cdecl get_radix(flags_t F, int n);
bool __cdecl get_refinfo(refinfo_t *ri, ea_t ea, int n);
void __cdecl get_refinfo_descs(refinfo_desc_vec_t *descs);
reftype_t __cdecl get_reftype_by_size(size_t size);
ssize_t __cdecl get_reg_name(qstring *buf, int reg, size_t width, int reghi);
bool __cdecl get_reg_val(const char *regname, uint64 *ival);
int __cdecl get_reg_vals(thid_t tid, int clsmask, regval_t *values);
void __cdecl get_registered_actions(qstrvec_t *out);
ea_t __cdecl get_ret_tev_return(int n);
ssize_t __cdecl get_root_filename(char *buf, size_t bufsize);
dbg_notification_t get_running_notification(void);
ui_notification_t get_running_request(void);
type_t __cdecl get_scalar_bt(int size);
ea_t get_screen_ea(void);
uint32 __cdecl get_secs(qtime64_t t);
ea_t __cdecl get_segm_base(const segment_t *s);
segment_t *__cdecl get_segm_by_name(const char *name);
segment_t *__cdecl get_segm_by_sel(sel_t selector);
ssize_t __cdecl get_segm_class(qstring *buf, const segment_t *s);
ssize_t __cdecl get_segm_expr(qstring *buf, ea_t from, sel_t sel);
ssize_t __cdecl get_segm_name(qstring *buf, const segment_t *s, int flags);
int __cdecl get_segm_num(ea_t ea);
ea_t __cdecl get_segm_para(const segment_t *s);
int get_segm_qty(void);
const char *__cdecl get_segment_alignment(uchar align);
ssize_t __cdecl get_segment_cmt(qstring *buf, const segment_t *s, bool repeatable);
const char *__cdecl get_segment_combination(uchar comb);
ssize_t __cdecl get_segment_translations(eavec_t *transmap, ea_t segstart);
size_t get_selector_qty(void);
qstring __cdecl get_short_name(ea_t ea, int gtn_flags);
uval_t __cdecl get_source_linnum(ea_t ea);
const char *__cdecl get_sourcefile(ea_t ea, range_t *bounds);
sval_t __cdecl get_sp_delta(func_t *pfn, ea_t ea);
bool __cdecl get_sp_val(ea_t *out);
sval_t __cdecl get_spd(func_t *pfn, ea_t ea);
bool __cdecl get_special_folder(char *buf, size_t bufsize, int csidl);
int __cdecl get_spoiled_reg(const insn_t *insn, const uint32 *regs, size_t n);
struc_t *__cdecl get_sptr(const member_t *mptr);
ssize_t __cdecl get_srcdbg_paths(qstring *out);
ssize_t __cdecl get_srcdbg_undesired_paths(qstring *out);
srcinfo_provider_t *__cdecl get_srcinfo_provider(const char *name);
sel_t __cdecl get_sreg(ea_t ea, int rg);
bool __cdecl get_sreg_range(sreg_range_t *out, ea_t ea, int rg);
int __cdecl get_sreg_range_num(ea_t ea, int rg);
size_t __cdecl get_sreg_ranges_qty(int rg);
dirtree_t *__cdecl get_std_dirtree(dirtree_id_t id);
int get_step_trace_options(void);
member_t *__cdecl get_stkvar(sval_t *actval, const insn_t *insn, const op_t *x, sval_t v);
bool __cdecl get_stock_tinfo(tinfo_t *tif, stock_type_id_t id);
uchar __cdecl get_str_encoding_idx(int32 strtype);
char __cdecl get_str_term1(int32 strtype);
char __cdecl get_str_term2(int32 strtype);
uint32 __cdecl get_str_type(ea_t ea);
uchar __cdecl get_str_type_code(int32 strtype);
size_t __cdecl get_str_type_prefix_length(int32 strtype);
tid_t __cdecl get_strid(ea_t ea);
bool __cdecl get_strlist_item(string_info_t *si, size_t n);
const strwinsetup_t *get_strlist_options(void);
size_t get_strlist_qty(void);
ssize_t __cdecl get_strlit_contents(qstring *utf8, ea_t ea, size_t len, int32 type, size_t *maxcps, int flags);
int __cdecl get_stroff_path(tid_t *path, adiff_t *delta, ea_t ea, int n);
int __cdecl get_strtype_bpu(int32 strtype);
struc_t *__cdecl get_struc(tid_t id);
tid_t __cdecl get_struc_by_idx(uval_t idx);
ssize_t __cdecl get_struc_cmt(qstring *buf, tid_t id, bool repeatable);
ea_t __cdecl get_struc_first_offset(const struc_t *sptr);
tid_t __cdecl get_struc_id(const char *name);
uval_t __cdecl get_struc_idx(tid_t id);
ea_t __cdecl get_struc_last_offset(const struc_t *sptr);
qstring __cdecl get_struc_name(tid_t id, int flags);
ea_t __cdecl get_struc_next_offset(const struc_t *sptr, ea_t offset);
ea_t __cdecl get_struc_prev_offset(const struc_t *sptr, ea_t offset);
size_t get_struc_qty(void);
asize_t __cdecl get_struc_size(tid_t id);
int __cdecl get_struct_operand(adiff_t *disp, adiff_t *delta, tid_t *path, ea_t ea, int n);
ssize_t __cdecl get_switch_info(switch_info_t *out, ea_t ea);
ea_t __cdecl get_switch_parent(ea_t ea);
const synced_group_t *__cdecl get_synced_group(const TWidget *w);
int __cdecl get_tab_size(const char *path);
terminate_handler get_terminate(void);
ea_t __cdecl get_tev_ea(int n);
bool __cdecl get_tev_event(int n, debug_event_t *d);
bool __cdecl get_tev_info(int n, tev_info_t *tev_info);
bool __cdecl get_tev_memory_info(int n, meminfo_vec_t *mi);
int get_tev_qty(void);
int __cdecl get_tev_tid(int n);
int __cdecl get_tev_type(int n);
int get_thread_qty(void);
bool __cdecl get_tinfo(tinfo_t *tif, ea_t ea);
bool __cdecl get_tinfo_attr(uint32 typid, const qstring *key, bytevec_t *bv, bool all_attrs);
bool __cdecl get_tinfo_attrs(uint32 typid, type_attrs_t *tav, bool include_ref_attrs);
bool __cdecl get_tinfo_details(uint32 typid, type_t bt2, void *buf);
size_t __cdecl get_tinfo_pdata(void *outptr, uint32 typid, int what);
size_t __cdecl get_tinfo_property(uint32 typid, int gta_prop);
size_t __cdecl get_tinfo_size(uint32 *p_effalign, uint32 typid, int gts_code);
bool __cdecl get_token(token_t *t, lexer_t *lx, tokenstack_t *buf);
ea_t get_trace_base_address(void);
void __cdecl get_trace_dynamic_register_set(dynamic_register_set_t *idaregs);
bool __cdecl get_trace_file_desc(qstring *buf, const char *filename);
const char *get_trace_platform(void);
size_t __cdecl get_tryblks(tryblks_t *tbv, const range_t *range);
type_t __cdecl get_type_flags(type_t t);
int32 __cdecl get_type_ordinal(const til_t *ti, const char *name);
unexpected_handler get_unexpected(void);
uint32 __cdecl get_usecs(qtime64_t t);
const char *get_user_idadir(void);
bool __cdecl get_user_input_event(input_event_t *out);
void __cdecl get_user_strlist_options(strwinsetup_t *out);
wchar32_t __cdecl get_utf8_char(const char **pptr);
ea_t __cdecl get_vftable_ea(uint32 ordinal);
uint32 __cdecl get_vftable_ordinal(ea_t vftable_ea);
tcc_renderer_type_t __cdecl get_view_renderer_type(TWidget *v);
mutable_graph_t *__cdecl get_viewer_graph(graph_viewer_t *gv);
tcc_place_type_t __cdecl get_viewer_place_type(TWidget *viewer);
void *__cdecl get_viewer_user_data(TWidget *viewer);
qstring __cdecl get_visible_name(ea_t ea, int gtn_flags);
ssize_t __cdecl get_visible_segm_name(qstring *buf, const segment_t *s);
uint64 __cdecl get_wide_byte(ea_t ea);
uint64 __cdecl get_wide_dword(ea_t ea);
uint64 __cdecl get_wide_word(ea_t ea);
bool __cdecl get_widget_title(qstring *buf, TWidget *widget);
twidget_type_t __cdecl get_widget_type(TWidget *widget);
void *__cdecl get_window_id(const char *name);
ushort __cdecl get_word(ea_t ea);
ssize_t __cdecl get_xrefpos(xrefpos_t *out, ea_t ea);
bool __cdecl get_zero_ranges(rangeset_t *zranges, const range_t *range);
int __cdecl getc(FILE *_Stream);
int getchar(void);
char *__cdecl getcwd(char *_DstBuf, int _SizeInBytes);
char *__cdecl getenv(const char *_VarName);
errno_t __cdecl getenv_s(size_t *_RequiredCount, char *_Buffer, rsize_t _BufferCount, const char *_VarName);
size_t __cdecl getinf(inftag_t tag);
ssize_t __cdecl getinf_buf(inftag_t tag, void *buf, size_t bufsize);
bool __cdecl getinf_flag(inftag_t tag, uint32 flag);
ssize_t __cdecl getinf_str(qstring *buf, inftag_t tag);
bool __cdecl getn_bpt(int n, bpt_t *bpt);
enum_t __cdecl getn_enum(size_t idx);
func_t *__cdecl getn_fchunk(int n);
func_t *__cdecl getn_func(size_t n);
hidden_range_t *__cdecl getn_hidden_range(int n);
bool __cdecl getn_selector(sel_t *sel, ea_t *base, int n);
bool __cdecl getn_sreg_range(sreg_range_t *out, int rg, int n);
thid_t __cdecl getn_thread(int n);
const char *__cdecl getn_thread_name(int n);
netnode __cdecl getnode(ea_t ea);
segment_t *__cdecl getnseg(int n);
char *__cdecl gets_s(char *_Buffer, rsize_t _Size);
segment_t *__cdecl getseg(ea_t ea);
char *__cdecl getsysfile(char *buf, size_t bufsize, const char *filename, const char *subdir);
int __cdecl getw(FILE *_Stream);
wint_t __cdecl getwc(FILE *_Stream);
wint_t getwchar(void);
bool graph_trace(void);
ssize_t grentry(graph_notification_t event_code, ...);
cm_t __cdecl guess_func_cc(const func_type_data_t *fti, int npurged, int cc_flags);
int __cdecl guess_tinfo(tinfo_t *tif, tid_t id);
int __cdecl h2ti(til_t *ti, lexer_t *lx, const char *input, int flags, h2ti_type_cb *type_cb, h2ti_type_cb *var_cb, printer_t *print_cb, void *_cb_data, abs_t _isabs);
int __cdecl handle_debug_event(const debug_event_t *ev, int rqflags);
bool __cdecl handle_fixups_in_macro(refinfo_t *ri, ea_t ea, fixup_type_t other, uint32 macro_reft_and_flags);
bool __cdecl has_aflag_linnum(aflags_t flags);
bool __cdecl has_aflag_lname(aflags_t flags);
bool __cdecl has_aflag_ti(aflags_t flags);
bool __cdecl has_aflag_ti0(aflags_t flags);
bool __cdecl has_aflag_ti1(aflags_t flags);
bool __cdecl has_any_name(flags_t F);
bool __cdecl has_auto_name(flags_t F);
bool __cdecl has_cf_chg(uint32 feature, uint opnum);
bool __cdecl has_cf_use(uint32 feature, uint opnum);
bool __cdecl has_cmt(flags_t F);
bool __cdecl has_dummy_name(flags_t F);
bool __cdecl has_external_refs(func_t *pfn, ea_t ea);
bool __cdecl has_extra_cmts(flags_t F);
bool __cdecl has_file_ext(const char *file);
bool __cdecl has_immd(flags_t F);
bool __cdecl has_insn_feature(int icode, uint32 bit);
bool __cdecl has_lname(ea_t ea);
bool __cdecl has_name(flags_t F);
bool __cdecl has_regvar(func_t *pfn, ea_t ea);
bool __cdecl has_ti(ea_t ea);
bool __cdecl has_ti0(ea_t ea);
bool __cdecl has_ti1(ea_t ea);
bool __cdecl has_user_name(flags_t F);
bool __cdecl has_value(flags_t F);
bool __cdecl has_xref(flags_t F);
bool __cdecl have_set_options(const debugger_t *_dbg);
flags_t hex_flag(void);
void __cdecl hexplace_t__adjust(hexplace_t *, void *);
bool __cdecl hexplace_t__beginning(const hexplace_t *, void *);
place_t *__cdecl hexplace_t__clone(const hexplace_t *);
int __cdecl hexplace_t__compare(const hexplace_t *, const place_t *);
int __cdecl hexplace_t__compare2(const hexplace_t *, const place_t *, void *);
void __cdecl hexplace_t__copyfrom(hexplace_t *, const place_t *);
bool __cdecl hexplace_t__deserialize(hexplace_t *, const uchar **, const uchar *);
size_t __cdecl hexplace_t__ea2str(char *buf, size_t bufsize, const hexplace_gen_t *hg, ea_t ea);
bool __cdecl hexplace_t__ending(const hexplace_t *, void *);
place_t *__cdecl hexplace_t__enter(const hexplace_t *, uint32 *);
int __cdecl hexplace_t__generate(const hexplace_t *, qstrvec_t *, int *, color_t *, bgcolor_t *, void *, int);
int __cdecl hexplace_t__id(const hexplace_t *);
void __cdecl hexplace_t__leave(const hexplace_t *, uint32);
place_t *__cdecl hexplace_t__makeplace(const hexplace_t *, void *, uval_t, int);
const char *__cdecl hexplace_t__name(const hexplace_t *);
bool __cdecl hexplace_t__next(hexplace_t *, void *);
void __cdecl hexplace_t__out_one_item(const hexplace_t *_this, outctx_base_t *ctx, const hexplace_gen_t *hg, int itemno, color_t *color, color_t patch_or_edit);
bool __cdecl hexplace_t__prev(hexplace_t *, void *);
void __cdecl hexplace_t__print(const hexplace_t *, qstring *, void *);
bool __cdecl hexplace_t__rebase(hexplace_t *, const segm_move_infos_t *);
void __cdecl hexplace_t__serialize(const hexplace_t *, bytevec_t *out);
ea_t __cdecl hexplace_t__toea(const hexplace_t *);
uval_t __cdecl hexplace_t__touval(const hexplace_t *, void *);
int hide_all_bpts(void);
void __cdecl hide_border(ea_t ea);
void __cdecl hide_item(ea_t ea);
void __cdecl hide_name(ea_t ea);
void hide_wait_box(void);
int32 __cdecl high(const longlong *x);
bool __cdecl hook_event_listener(hook_type_t hook_type, event_listener_t *cb, const void *owner, int hkcb_flags);
bool __cdecl hook_to_notification_point(hook_type_t hook_type, hook_cb_t *cb, void *user_data);
double __cdecl hypot(double _X, double _Y);
float __cdecl hypotf(float _X, float _Y);
long double __cdecl hypotl(long double _X, long double _Y);
void __cdecl ida_checkmem(const char *file, int line);
int ida_deb(const char *format, ...);
const char *__cdecl idadir(const char *subdir);
void __cdecl idaplace_t__adjust(idaplace_t *, void *);
bool __cdecl idaplace_t__beginning(const idaplace_t *, void *);
place_t *__cdecl idaplace_t__clone(const idaplace_t *);
int __cdecl idaplace_t__compare(const idaplace_t *, const place_t *);
int __cdecl idaplace_t__compare2(const idaplace_t *, const place_t *, void *);
void __cdecl idaplace_t__copyfrom(idaplace_t *, const place_t *);
bool __cdecl idaplace_t__deserialize(idaplace_t *, const uchar **, const uchar *);
bool __cdecl idaplace_t__ending(const idaplace_t *, void *);
place_t *__cdecl idaplace_t__enter(const idaplace_t *, uint32 *);
int __cdecl idaplace_t__generate(const idaplace_t *, qstrvec_t *, int *, color_t *, bgcolor_t *, void *, int);
int __cdecl idaplace_t__id(const idaplace_t *);
void __cdecl idaplace_t__leave(const idaplace_t *, uint32);
place_t *__cdecl idaplace_t__makeplace(const idaplace_t *, void *, uval_t, int);
const char *__cdecl idaplace_t__name(const idaplace_t *);
bool __cdecl idaplace_t__next(idaplace_t *, void *);
bool __cdecl idaplace_t__prev(idaplace_t *, void *);
void __cdecl idaplace_t__print(const idaplace_t *, qstring *, void *);
bool __cdecl idaplace_t__rebase(idaplace_t *, const segm_move_infos_t *);
void __cdecl idaplace_t__serialize(const idaplace_t *, bytevec_t *out);
ea_t __cdecl idaplace_t__toea(const idaplace_t *);
uval_t __cdecl idaplace_t__touval(const idaplace_t *, void *);
bool __cdecl idb_utf8(qstring *out, const char *in, int nsyms, int flags);
error_t __cdecl idcv_float(idc_value_t *v);
error_t __cdecl idcv_int64(idc_value_t *v);
error_t __cdecl idcv_long(idc_value_t *v);
error_t __cdecl idcv_num(idc_value_t *v);
error_t __cdecl idcv_object(idc_value_t *v, const idc_class_t *icls);
error_t __cdecl idcv_string(idc_value_t *v);
const fpvalue_t ieee_e32;
const fpvalue_t ieee_eeul;
const fpvalue_t ieee_elog2;
const fpvalue_t ieee_eone;
const fpvalue_t ieee_eoneopi;
const fpvalue_t ieee_epi;
const fpvalue_t ieee_esqrt2;
const fpvalue_t ieee_etwo;
const fpvalue_t ieee_ezero;
fpvalue_error_t __cdecl ieee_realcvt(void *m, fpvalue_t *out, uint16 swt);
netnode ignore_micro;
int __cdecl ilogb(double _X);
int __cdecl ilogbf(float _X);
int __cdecl ilogbl(long double _X);
void __cdecl import_module(const char *module, const char *windir, uval_t modnode, importer_t *importer, const char *ostype);
tid_t __cdecl import_type(const til_t *til, int idx, const char *name, int flags);
bool __cdecl includes(uval_t off1, asize_t s1, uval_t off2, asize_t s2);
idainfo inf;
bool inf_abi_set_by_user(void);
bool inf_allow_non_matched_ops(void);
bool inf_allow_sigmulti(void);
bool inf_append_sigcmt(void);
bool __cdecl inf_big_arg_align(cm_t cc);
bool inf_check_manual_ops(void);
bool inf_check_unicode_strlits(void);
bool inf_coagulate_code(void);
bool inf_coagulate_data(void);
bool inf_compress_idb(void);
bool inf_create_all_xrefs(void);
bool inf_create_func_from_call(void);
bool inf_create_func_from_ptr(void);
bool inf_create_func_tails(void);
bool inf_create_jump_tables(void);
bool inf_create_off_on_dref(void);
bool inf_create_off_using_fixup(void);
bool inf_create_strlit_on_xref(void);
bool inf_data_offset(void);
bool inf_dbg_no_store_path(void);
bool inf_decode_fpp(void);
bool inf_del_no_xref_insns(void);
bool inf_final_pass(void);
bool inf_full_sp_ana(void);
bool inf_gen_assume(void);
bool inf_gen_lzero(void);
bool inf_gen_null(void);
bool inf_gen_org(void);
bool inf_gen_tryblks(void);
uint32 inf_get_abibits(void);
uint32 inf_get_af(void);
uint32 inf_get_af2(void);
ushort inf_get_af2_low(void);
ushort inf_get_af_high(void);
ushort inf_get_af_low(void);
uint inf_get_app_bitness(void);
uint32 inf_get_appcall_options(void);
ushort inf_get_apptype(void);
uchar inf_get_asmtype(void);
uval_t inf_get_baseaddr(void);
__int16 inf_get_bin_prefix_size(void);
bool __cdecl inf_get_cc(compiler_info_t *out);
cm_t inf_get_cc_cm(void);
uchar inf_get_cc_defalign(void);
comp_t inf_get_cc_id(void);
uchar inf_get_cc_size_b(void);
uchar inf_get_cc_size_e(void);
uchar inf_get_cc_size_i(void);
uchar inf_get_cc_size_l(void);
uchar inf_get_cc_size_ldbl(void);
uchar inf_get_cc_size_ll(void);
uchar inf_get_cc_size_s(void);
uchar inf_get_cmt_indent(void);
uchar inf_get_cmtflg(void);
uint32 inf_get_database_change_count(void);
uval_t inf_get_datatypes(void);
uchar inf_get_demname_form(void);
uchar inf_get_demnames(void);
filetype_t inf_get_filetype(void);
ushort inf_get_genflags(void);
ea_t inf_get_highoff(void);
uchar inf_get_indent(void);
ushort inf_get_lenxref(void);
uint32 inf_get_lflags(void);
uchar inf_get_limiter(void);
uchar inf_get_listnames(void);
uint32 inf_get_long_demnames(void);
ea_t inf_get_lowoff(void);
ea_t inf_get_main(void);
ushort inf_get_margin(void);
ushort inf_get_max_autoname_len(void);
ea_t inf_get_max_ea(void);
uval_t inf_get_maxref(void);
ea_t inf_get_min_ea(void);
char inf_get_nametype(void);
sval_t inf_get_netdelta(void);
ea_t inf_get_omax_ea(void);
ea_t inf_get_omin_ea(void);
ushort inf_get_ostype(void);
uint32 inf_get_outflags(void);
int inf_get_pack_mode(void);
uchar inf_get_prefflag(void);
range_t inf_get_privrange(void);
ea_t inf_get_privrange_end_ea(void);
ea_t inf_get_privrange_start_ea(void);
qstring inf_get_procname(void);
uchar inf_get_refcmtnum(void);
uint32 inf_get_short_demnames(void);
uchar inf_get_specsegs(void);
sel_t inf_get_start_cs(void);
ea_t inf_get_start_ea(void);
ea_t inf_get_start_ip(void);
ea_t inf_get_start_sp(void);
sel_t inf_get_start_ss(void);
uchar inf_get_strlit_break(void);
uchar inf_get_strlit_flags(void);
qstring inf_get_strlit_pref(void);
uval_t inf_get_strlit_sernum(void);
char inf_get_strlit_zeroes(void);
int32 inf_get_strtype(void);
uchar inf_get_type_xrefnum(void);
ushort inf_get_version(void);
uchar inf_get_xrefflag(void);
uchar inf_get_xrefnum(void);
bool inf_guess_func_type(void);
bool inf_handle_eh(void);
bool inf_handle_rtti(void);
bool inf_hide_comments(void);
bool inf_hide_libfuncs(void);
bool inf_huge_arg_align(void);
void __cdecl inf_inc_database_change_count(int cnt);
bool inf_is_16bit(void);
bool inf_is_32bit_exactly(void);
bool inf_is_32bit_or_higher(void);
bool inf_is_64bit(void);
bool inf_is_auto_enabled(void);
bool inf_is_be(void);
bool inf_is_dll(void);
bool inf_is_flat_off32(void);
bool inf_is_graph_view(void);
bool inf_is_hard_float(void);
bool inf_is_kernel_mode(void);
bool inf_is_limiter_empty(void);
bool inf_is_limiter_thick(void);
bool inf_is_limiter_thin(void);
bool inf_is_mem_aligned4(void);
bool inf_is_snapshot(void);
bool inf_is_wide_high_byte_first(void);
bool inf_like_binary(void);
bool inf_line_pref_with_seg(void);
bool inf_loading_idc(void);
bool inf_macros_enabled(void);
bool inf_map_stkargs(void);
bool inf_mark_code(void);
bool inf_no_store_user_info(void);
bool inf_noflow_to_data(void);
bool inf_noret_ana(void);
bool inf_op_offset(void);
bool inf_pack_idb(void);
bool __cdecl inf_pack_stkargs(cm_t cc);
uval_t __cdecl inf_postinc_strlit_sernum(uval_t cnt);
bool inf_prefix_show_funcoff(void);
bool inf_prefix_show_segaddr(void);
bool inf_prefix_show_stack(void);
bool inf_prefix_truncate_opcode_bytes(void);
bool inf_propagate_regargs(void);
bool inf_propagate_stkargs(void);
bool inf_readonly_idb(void);
bool inf_rename_jumpfunc(void);
bool inf_rename_nullsub(void);
bool __cdecl inf_set_32bit(bool _v);
bool __cdecl inf_set_64bit(bool _v);
bool __cdecl inf_set_abi_set_by_user(bool _v);
bool __cdecl inf_set_abibits(uint32 _v);
bool __cdecl inf_set_af(uint32 _v);
bool __cdecl inf_set_af2(uint32 _v);
void __cdecl inf_set_af2_low(ushort saf);
void __cdecl inf_set_af_high(ushort saf2);
void __cdecl inf_set_af_low(ushort saf);
bool __cdecl inf_set_allow_non_matched_ops(bool _v);
bool __cdecl inf_set_allow_sigmulti(bool _v);
bool __cdecl inf_set_appcall_options(uint32 _v);
bool __cdecl inf_set_append_sigcmt(bool _v);
bool __cdecl inf_set_apptype(ushort _v);
bool __cdecl inf_set_asmtype(uchar _v);
bool __cdecl inf_set_auto_enabled(bool _v);
bool __cdecl inf_set_baseaddr(uval_t _v);
bool __cdecl inf_set_be(bool _v);
bool __cdecl inf_set_big_arg_align(bool _v);
bool __cdecl inf_set_bin_prefix_size(__int16 _v);
bool __cdecl inf_set_cc(const compiler_info_t *_v);
bool __cdecl inf_set_cc_cm(cm_t _v);
bool __cdecl inf_set_cc_defalign(uchar _v);
bool __cdecl inf_set_cc_id(comp_t _v);
bool __cdecl inf_set_cc_size_b(uchar _v);
bool __cdecl inf_set_cc_size_e(uchar _v);
bool __cdecl inf_set_cc_size_i(uchar _v);
bool __cdecl inf_set_cc_size_l(uchar _v);
bool __cdecl inf_set_cc_size_ldbl(uchar _v);
bool __cdecl inf_set_cc_size_ll(uchar _v);
bool __cdecl inf_set_cc_size_s(uchar _v);
bool __cdecl inf_set_check_manual_ops(bool _v);
bool __cdecl inf_set_check_unicode_strlits(bool _v);
bool __cdecl inf_set_cmt_indent(uchar _v);
bool __cdecl inf_set_cmtflg(uchar _v);
bool __cdecl inf_set_coagulate_code(bool _v);
bool __cdecl inf_set_coagulate_data(bool _v);
bool __cdecl inf_set_compress_idb(bool _v);
bool __cdecl inf_set_create_all_xrefs(bool _v);
bool __cdecl inf_set_create_func_from_call(bool _v);
bool __cdecl inf_set_create_func_from_ptr(bool _v);
bool __cdecl inf_set_create_func_tails(bool _v);
bool __cdecl inf_set_create_jump_tables(bool _v);
bool __cdecl inf_set_create_off_on_dref(bool _v);
bool __cdecl inf_set_create_off_using_fixup(bool _v);
bool __cdecl inf_set_create_strlit_on_xref(bool _v);
bool __cdecl inf_set_data_offset(bool _v);
bool __cdecl inf_set_database_change_count(uint32 _v);
bool __cdecl inf_set_datatypes(uval_t _v);
bool __cdecl inf_set_dbg_no_store_path(bool _v);
bool __cdecl inf_set_decode_fpp(bool _v);
bool __cdecl inf_set_del_no_xref_insns(bool _v);
bool __cdecl inf_set_demnames(uchar _v);
bool __cdecl inf_set_dll(bool _v);
bool __cdecl inf_set_filetype(filetype_t _v);
bool __cdecl inf_set_final_pass(bool _v);
bool __cdecl inf_set_flat_off32(bool _v);
bool __cdecl inf_set_full_sp_ana(bool _v);
bool __cdecl inf_set_gen_assume(bool _v);
bool __cdecl inf_set_gen_lzero(bool _v);
bool __cdecl inf_set_gen_null(bool _v);
bool __cdecl inf_set_gen_org(bool _v);
bool __cdecl inf_set_gen_tryblks(bool _v);
bool __cdecl inf_set_genflags(ushort _v);
bool __cdecl inf_set_graph_view(bool _v);
bool __cdecl inf_set_guess_func_type(bool _v);
bool __cdecl inf_set_handle_eh(bool _v);
bool __cdecl inf_set_handle_rtti(bool _v);
bool __cdecl inf_set_hard_float(bool _v);
bool __cdecl inf_set_hide_comments(bool _v);
bool __cdecl inf_set_hide_libfuncs(bool _v);
bool __cdecl inf_set_highoff(ea_t _v);
bool __cdecl inf_set_huge_arg_align(bool _v);
bool __cdecl inf_set_indent(uchar _v);
bool __cdecl inf_set_kernel_mode(bool _v);
bool __cdecl inf_set_lenxref(ushort _v);
bool __cdecl inf_set_lflags(uint32 _v);
bool __cdecl inf_set_limiter(uchar _v);
bool __cdecl inf_set_limiter_empty(bool _v);
bool __cdecl inf_set_limiter_thick(bool _v);
bool __cdecl inf_set_limiter_thin(bool _v);
bool __cdecl inf_set_line_pref_with_seg(bool _v);
bool __cdecl inf_set_listnames(uchar _v);
bool __cdecl inf_set_loading_idc(bool _v);
bool __cdecl inf_set_long_demnames(uint32 _v);
bool __cdecl inf_set_lowoff(ea_t _v);
bool __cdecl inf_set_macros_enabled(bool _v);
bool __cdecl inf_set_main(ea_t _v);
bool __cdecl inf_set_map_stkargs(bool _v);
bool __cdecl inf_set_margin(ushort _v);
bool __cdecl inf_set_mark_code(bool _v);
bool __cdecl inf_set_max_autoname_len(ushort _v);
bool __cdecl inf_set_max_ea(ea_t _v);
bool __cdecl inf_set_maxref(uval_t _v);
bool __cdecl inf_set_mem_aligned4(bool _v);
bool __cdecl inf_set_min_ea(ea_t _v);
bool __cdecl inf_set_nametype(char _v);
bool __cdecl inf_set_netdelta(sval_t _v);
bool __cdecl inf_set_no_store_user_info(bool _v);
bool __cdecl inf_set_noflow_to_data(bool _v);
bool __cdecl inf_set_noret_ana(bool _v);
bool __cdecl inf_set_omax_ea(ea_t _v);
bool __cdecl inf_set_omin_ea(ea_t _v);
bool __cdecl inf_set_op_offset(bool _v);
bool __cdecl inf_set_ostype(ushort _v);
bool __cdecl inf_set_outflags(uint32 _v);
bool __cdecl inf_set_pack_idb(bool _v);
int __cdecl inf_set_pack_mode(int pack_mode);
bool __cdecl inf_set_pack_stkargs(bool _v);
bool __cdecl inf_set_prefflag(uchar _v);
bool __cdecl inf_set_prefix_show_funcoff(bool _v);
bool __cdecl inf_set_prefix_show_segaddr(bool _v);
bool __cdecl inf_set_prefix_show_stack(bool _v);
bool __cdecl inf_set_prefix_truncate_opcode_bytes(bool _v);
bool __cdecl inf_set_privrange(const range_t *_v);
bool __cdecl inf_set_privrange_end_ea(ea_t _v);
bool __cdecl inf_set_privrange_start_ea(ea_t _v);
bool __cdecl inf_set_procname(const char *_v, size_t len);
bool __cdecl inf_set_propagate_regargs(bool _v);
bool __cdecl inf_set_propagate_stkargs(bool _v);
bool __cdecl inf_set_readonly_idb(bool _v);
bool __cdecl inf_set_refcmtnum(uchar _v);
bool __cdecl inf_set_rename_jumpfunc(bool _v);
bool __cdecl inf_set_rename_nullsub(bool _v);
bool __cdecl inf_set_short_demnames(uint32 _v);
bool __cdecl inf_set_should_create_stkvars(bool _v);
bool __cdecl inf_set_should_trace_sp(bool _v);
bool __cdecl inf_set_show_all_comments(bool _v);
bool __cdecl inf_set_show_auto(bool _v);
bool __cdecl inf_set_show_hidden_funcs(bool _v);
bool __cdecl inf_set_show_hidden_insns(bool _v);
bool __cdecl inf_set_show_hidden_segms(bool _v);
bool __cdecl inf_set_show_line_pref(bool _v);
bool __cdecl inf_set_show_repeatables(bool _v);
bool __cdecl inf_set_show_src_linnum(bool _v);
bool __cdecl inf_set_show_void(bool _v);
bool __cdecl inf_set_show_xref_fncoff(bool _v);
bool __cdecl inf_set_show_xref_seg(bool _v);
bool __cdecl inf_set_show_xref_tmarks(bool _v);
bool __cdecl inf_set_show_xref_val(bool _v);
bool __cdecl inf_set_snapshot(bool _v);
bool __cdecl inf_set_specsegs(uchar _v);
bool __cdecl inf_set_stack_ldbl(bool _v);
bool __cdecl inf_set_stack_varargs(bool _v);
bool __cdecl inf_set_start_cs(sel_t _v);
bool __cdecl inf_set_start_ea(ea_t _v);
bool __cdecl inf_set_start_ip(ea_t _v);
bool __cdecl inf_set_start_sp(ea_t _v);
bool __cdecl inf_set_start_ss(sel_t _v);
bool __cdecl inf_set_strlit_autocmt(bool _v);
bool __cdecl inf_set_strlit_break(uchar _v);
bool __cdecl inf_set_strlit_flags(uchar _v);
bool __cdecl inf_set_strlit_name_bit(bool _v);
bool __cdecl inf_set_strlit_names(bool _v);
bool __cdecl inf_set_strlit_pref(const char *_v, size_t len);
bool __cdecl inf_set_strlit_savecase(bool _v);
bool __cdecl inf_set_strlit_serial_names(bool _v);
bool __cdecl inf_set_strlit_sernum(uval_t _v);
bool __cdecl inf_set_strlit_zeroes(char _v);
bool __cdecl inf_set_strtype(int32 _v);
bool __cdecl inf_set_trace_flow(bool _v);
bool __cdecl inf_set_truncate_on_del(bool _v);
bool __cdecl inf_set_type_xrefnum(uchar _v);
bool __cdecl inf_set_unicode_strlits(bool _v);
bool __cdecl inf_set_use_allasm(bool _v);
bool __cdecl inf_set_use_flirt(bool _v);
bool __cdecl inf_set_use_gcc_layout(bool _v);
bool __cdecl inf_set_version(ushort _v);
bool __cdecl inf_set_wide_high_byte_first(bool _v);
bool __cdecl inf_set_xrefflag(uchar _v);
bool __cdecl inf_set_xrefnum(uchar _v);
bool inf_should_create_stkvars(void);
bool inf_should_trace_sp(void);
bool inf_show_all_comments(void);
bool inf_show_auto(void);
bool inf_show_hidden_funcs(void);
bool inf_show_hidden_insns(void);
bool inf_show_hidden_segms(void);
bool inf_show_line_pref(void);
bool inf_show_repeatables(void);
bool inf_show_src_linnum(void);
bool inf_show_void(void);
bool inf_show_xref_fncoff(void);
bool inf_show_xref_seg(void);
bool inf_show_xref_tmarks(void);
bool inf_show_xref_val(void);
bool inf_stack_ldbl(void);
bool inf_stack_varargs(void);
bool inf_strlit_autocmt(void);
bool inf_strlit_name_bit(void);
bool inf_strlit_names(void);
bool inf_strlit_savecase(void);
bool inf_strlit_serial_names(void);
bool inf_test_mode(void);
bool inf_trace_flow(void);
bool inf_truncate_on_del(void);
bool inf_unicode_strlits(void);
bool inf_use_allasm(void);
bool inf_use_flirt(void);
bool inf_use_gcc_layout(void);
void info(const char *format, ...);
int __cdecl init_database(int argc, const char *const *argv, int *newfile);
void init_ignore_micro(void);
void __cdecl init_plugins(int flag);
void __cdecl insn_add_cref(const insn_t *insn, ea_t to, int opoff, cref_t type);
void __cdecl insn_add_dref(const insn_t *insn, ea_t to, int opoff, dref_t type);
ea_t __cdecl insn_add_off_drefs(const insn_t *insn, const op_t *x, dref_t type, int outf);
bool __cdecl insn_create_op_data(const insn_t *insn, ea_t ea, int opoff, op_dtype_t dtype);
bool __cdecl insn_create_stkvar(const insn_t *insn, const op_t *x, adiff_t v, int flags);
void __cdecl install_command_interpreter(const cli_t *cp);
int __cdecl install_custom_argloc(const custloc_desc_t *custloc);
ssize_t __cdecl install_extlang(extlang_t *el);
bool __cdecl install_user_defined_prefix(size_t prefix_len, user_defined_prefix_t *udp, const void *owner);
int __cdecl internal_cleanup_appcall(thid_t tid);
int __cdecl internal_get_sreg_base(ea_t *answer, thid_t tid, int sreg_value);
int __cdecl internal_ioctl(int fn, const void *buf, size_t size, void **poutbuf, ssize_t *poutsize);
int __cdecl internal_register_place_class(const place_t *tmplate, int flags, const plugin_t *owner, int sdk_version);
void __cdecl __noreturn interr(int code);
bool interr_should_throw;
int __cdecl invalidate_dbg_state(int dbginv);
void invalidate_dbgmem_config(void);
void __cdecl invalidate_dbgmem_contents(ea_t ea, asize_t size);
bool __cdecl invalidate_sp_analysis(ea_t ea);
ssize_t __cdecl invoke_callbacks(hook_type_t hook_type, int notification_code, va_list va);
bool __cdecl invoke_plugin(plugin_info_t *ptr);
bool __cdecl is__bnot0(ea_t ea);
bool __cdecl is__bnot1(ea_t ea);
bool __cdecl is__invsign0(ea_t ea);
bool __cdecl is__invsign1(ea_t ea);
bool __cdecl is_action_enabled(action_state_t s);
bool __cdecl is_aflag__bnot0(aflags_t flags);
bool __cdecl is_aflag__bnot1(aflags_t flags);
bool __cdecl is_aflag__invsign0(aflags_t flags);
bool __cdecl is_aflag__invsign1(aflags_t flags);
bool __cdecl is_aflag_align_flow(aflags_t flags);
bool __cdecl is_aflag_colored_item(aflags_t flags);
bool __cdecl is_aflag_data_guessed_by_hexrays(aflags_t flags);
bool __cdecl is_aflag_fixed_spd(aflags_t flags);
bool __cdecl is_aflag_func_guessed_by_hexrays(aflags_t flags);
bool __cdecl is_aflag_hidden_border(aflags_t flags);
bool __cdecl is_aflag_hidden_item(aflags_t flags);
bool __cdecl is_aflag_libitem(aflags_t flags);
bool __cdecl is_aflag_lzero0(aflags_t flags);
bool __cdecl is_aflag_lzero1(aflags_t flags);
bool __cdecl is_aflag_manual_insn(aflags_t flags);
bool __cdecl is_aflag_noret(aflags_t flags);
bool __cdecl is_aflag_notcode(aflags_t flags);
bool __cdecl is_aflag_notproc(aflags_t flags);
bool __cdecl is_aflag_public_name(aflags_t flags);
bool __cdecl is_aflag_retfp(aflags_t flags);
bool __cdecl is_aflag_terse_struc(aflags_t flags);
bool __cdecl is_aflag_tilcmt(aflags_t flags);
bool __cdecl is_aflag_type_determined_by_hexrays(aflags_t flags);
bool __cdecl is_aflag_type_guessed_by_hexrays(aflags_t flags);
bool __cdecl is_aflag_type_guessed_by_ida(aflags_t flags);
bool __cdecl is_aflag_usersp(aflags_t flags);
bool __cdecl is_aflag_userti(aflags_t flags);
bool __cdecl is_aflag_weak_name(aflags_t flags);
bool __cdecl is_aflag_zstroff(aflags_t flags);
bool __cdecl is_align(flags_t F);
bool __cdecl is_align_flow(ea_t ea);
int __cdecl is_align_insn(ea_t ea);
bool __cdecl is_anonymous_member_name(const char *name);
bool __cdecl is_attached_custom_data_format(int dtid, int dfid);
bool is_auto_enabled(void);
bool __cdecl is_autosync(const char *name, const tinfo_t *tif);
bool __cdecl is_basic_block_end(const insn_t *insn, bool call_insn_stops_block);
bool is_bblk_trace_enabled(void);
bool __cdecl is_bf(enum_t id);
bool __cdecl is_bnot(ea_t ea, flags_t F, int n);
bool __cdecl is_byte(flags_t F);
bool __cdecl is_call_insn(const insn_t *insn);
bool __cdecl is_char(flags_t F, int n);
bool __cdecl is_char0(flags_t F);
bool __cdecl is_char1(flags_t F);
bool __cdecl is_chooser_widget(twidget_type_t t);
bool __cdecl is_code(flags_t F);
bool __cdecl is_code_far(cm_t cm);
bool __cdecl is_colored_item(ea_t ea);
comp_t __cdecl is_comp_unsure(comp_t comp);
tty_control_t __cdecl is_control_tty(int fd);
bool __cdecl is_cp_graphical(wchar32_t cp);
bool __cdecl is_custfmt(flags_t F, int n);
bool __cdecl is_custfmt0(flags_t F);
bool __cdecl is_custfmt1(flags_t F);
bool __cdecl is_custom(flags_t F);
bool __cdecl is_data(flags_t F);
bool __cdecl is_data_far(cm_t cm);
bool __cdecl is_data_guessed_by_hexrays(ea_t ea);
bool __cdecl is_database_ext(const char *ext);
bool __cdecl is_database_flag(uint32 dbfl);
bool is_debugger_busy(void);
bool __cdecl is_debugger_memory(ea_t ea);
bool is_debugger_on(void);
bool __cdecl is_debugger_segm(ea_t ea);
bool __cdecl is_defarg(flags_t F, int n);
bool __cdecl is_defarg0(flags_t F);
bool __cdecl is_defarg1(flags_t F);
bool __cdecl is_double(flags_t F);
bool __cdecl is_dummy_member_name(const char *name);
bool __cdecl is_dword(flags_t F);
bool __cdecl is_ea_tryblks(ea_t ea, uint32 flags);
bool __cdecl is_enum(flags_t F, int n);
bool __cdecl is_enum0(flags_t F);
bool __cdecl is_enum1(flags_t F);
bool __cdecl is_enum_fromtil(enum_t id);
bool __cdecl is_enum_hidden(enum_t id);
bool __cdecl is_ephemeral_segm(ea_t ea);
bool __cdecl is_epilog_insn(ea_t ea);
bool __cdecl is_filetype_like_binary(filetype_t ft);
bool __cdecl is_finally_visible_func(func_t *pfn);
bool __cdecl is_finally_visible_item(ea_t ea);
bool __cdecl is_finally_visible_segm(segment_t *s);
bool __cdecl is_first_visea(ea_t ea);
bool __cdecl is_fixed_spd(ea_t ea);
bool __cdecl is_fixup_custom(fixup_type_t type);
bool __cdecl is_float(flags_t F);
bool __cdecl is_float0(flags_t F);
bool __cdecl is_float1(flags_t F);
bool __cdecl is_floating_dtype(op_dtype_t dtype);
bool __cdecl is_flow(flags_t F);
bool __cdecl is_fltnum(flags_t F, int n);
bool __cdecl is_forced_operand(ea_t ea, int n);
bool __cdecl is_func(flags_t F);
bool __cdecl is_func_entry(const func_t *pfn);
bool __cdecl is_func_guessed_by_hexrays(ea_t ea);
bool __cdecl is_func_locked(const func_t *pfn);
bool __cdecl is_func_tail(const func_t *pfn);
bool is_func_trace_enabled(void);
bool is_gcc(void);
bool is_gcc32(void);
bool is_gcc64(void);
bool __cdecl is_ghost_enum(enum_t id);
bool __cdecl is_golang_cc(cm_t cc);
bool __cdecl is_head(flags_t F);
bool __cdecl is_hidden_border(ea_t ea);
bool __cdecl is_hidden_item(ea_t ea);
bool is_ida_kernel;
bool is_idaq(void);
bool __cdecl is_idaview(TWidget *v);
bool __cdecl is_ident(const char *name);
bool __cdecl is_ident_cp(wchar32_t cp);
bool __cdecl is_in_nlist(ea_t ea);
bool __cdecl is_indirect_jump_insn(const insn_t *insn);
bool is_insn_trace_enabled(void);
bool __cdecl is_invsign(ea_t ea, flags_t F, int n);
bool __cdecl is_last_visea(ea_t ea);
bool __cdecl is_lead_surrogate(wchar32_t wch);
bool __cdecl is_libitem(ea_t ea);
bool __cdecl is_loaded(ea_t ea);
bool __cdecl is_lzero(ea_t ea, int n);
bool __cdecl is_lzero0(ea_t ea);
bool __cdecl is_lzero1(ea_t ea);
bool is_main_thread(void);
bool __cdecl is_manual(flags_t F, int n);
bool __cdecl is_manual_insn(ea_t ea);
bool __cdecl is_mapped(ea_t ea);
bool __cdecl is_member_id(tid_t mid);
bool is_miniidb(void);
bool is_msg_inited(void);
bool __cdecl is_name_defined_locally(func_t *pfn, const char *name, ignore_name_def_t ignore_name_def, ea_t ea1, ea_t ea2);
bool __cdecl is_noret(ea_t ea);
bool __cdecl is_noret_block(fc_block_type_t btype);
bool __cdecl is_not_tail(flags_t F);
bool __cdecl is_notcode(ea_t ea);
bool __cdecl is_notproc(ea_t ea);
bool __cdecl is_numop(flags_t F, int n);
bool __cdecl is_numop0(flags_t F);
bool __cdecl is_numop1(flags_t F);
bool __cdecl is_off(flags_t F, int n);
bool __cdecl is_off0(flags_t F);
bool __cdecl is_off1(flags_t F);
bool __cdecl is_one_bit_mask(bmask_t mask);
bool __cdecl is_ordinal_name(const char *name, uint32 *ord);
bool __cdecl is_oword(flags_t F);
bool __cdecl is_pack_real(flags_t F);
bool __cdecl is_pascal(int32 strtype);
bool __cdecl is_place_class_ea_capable(int id);
bool __cdecl is_problem_present(problist_id_t t, ea_t ea);
bool __cdecl is_prolog_insn(ea_t ea);
bool __cdecl is_public_name(ea_t ea);
bool __cdecl is_purging_cc(cm_t cm);
bool __cdecl is_qword(flags_t F);
bool __cdecl is_refresh_requested(uint64 mask);
bool __cdecl is_reftype_target_optional(reftype_t type);
bool __cdecl is_reg_custom(const char *regname);
bool __cdecl is_reg_float(const char *regname);
bool __cdecl is_reg_integer(const char *regname);
bool is_request_running(void);
bool __cdecl is_restype_enum(const til_t *til, const type_t *type);
bool __cdecl is_restype_struct(const til_t *til, const type_t *type);
bool __cdecl is_restype_struni(const til_t *til, const type_t *type);
bool __cdecl is_restype_void(const til_t *til, const type_t *type);
bool __cdecl is_ret_block(fc_block_type_t btype);
bool __cdecl is_ret_insn(const insn_t *insn, bool strict);
bool __cdecl is_retfp(ea_t ea);
bool __cdecl is_same_data_type(flags_t F1, flags_t F2);
bool __cdecl is_same_func(ea_t ea1, ea_t ea2);
bool __cdecl is_sdacl_byte(type_t t);
bool __cdecl is_seg(flags_t F, int n);
bool __cdecl is_seg0(flags_t F);
bool __cdecl is_seg1(flags_t F);
bool __cdecl is_segm_locked(const segment_t *segm);
bool __cdecl is_spec_ea(ea_t ea);
bool __cdecl is_spec_segm(uchar seg_type);
bool __cdecl is_special_member(tid_t id);
bool is_step_trace_enabled(void);
bool __cdecl is_stkvar(flags_t F, int n);
bool __cdecl is_stkvar0(flags_t F);
bool __cdecl is_stkvar1(flags_t F);
bool __cdecl is_strlit(flags_t F);
bool __cdecl is_strlit_cp(wchar32_t cp, const rangeset_crefvec_t *specific_ranges);
bool __cdecl is_stroff(flags_t F, int n);
bool __cdecl is_stroff0(flags_t F);
bool __cdecl is_stroff1(flags_t F);
bool __cdecl is_struct(flags_t F);
bool __cdecl is_suspop(ea_t ea, flags_t F, int n);
bool __cdecl is_switch_insn(ea_t ea);
bool __cdecl is_tah_byte(type_t t);
bool __cdecl is_tail(flags_t F);
bool __cdecl is_tail_surrogate(wchar32_t wch);
bool __cdecl is_tbyte(flags_t F);
bool is_temp_database(void);
bool __cdecl is_terse_struc(ea_t ea);
bool __cdecl is_tilcmt(ea_t ea);
bool is_trusted_idb(void);
bool __cdecl is_type_arithmetic(type_t t);
bool __cdecl is_type_array(type_t t);
bool __cdecl is_type_bitfld(type_t t);
bool __cdecl is_type_bool(type_t t);
bool __cdecl is_type_char(type_t t);
bool __cdecl is_type_complex(type_t t);
bool __cdecl is_type_const(type_t t);
bool __cdecl is_type_determined_by_hexrays(ea_t ea);
bool __cdecl is_type_double(type_t t);
bool __cdecl is_type_enum(type_t t);
bool __cdecl is_type_ext_arithmetic(type_t t);
bool __cdecl is_type_ext_integral(type_t t);
bool __cdecl is_type_float(type_t t);
bool __cdecl is_type_floating(type_t t);
bool __cdecl is_type_func(type_t t);
bool __cdecl is_type_guessed_by_hexrays(ea_t ea);
bool __cdecl is_type_guessed_by_ida(ea_t ea);
bool __cdecl is_type_int(type_t bt);
bool __cdecl is_type_int128(type_t t);
bool __cdecl is_type_int16(type_t t);
bool __cdecl is_type_int32(type_t t);
bool __cdecl is_type_int64(type_t t);
bool __cdecl is_type_integral(type_t t);
bool __cdecl is_type_ldouble(type_t t);
bool __cdecl is_type_paf(type_t t);
bool __cdecl is_type_partial(type_t t);
bool __cdecl is_type_ptr(type_t t);
bool __cdecl is_type_ptr_or_array(type_t t);
bool __cdecl is_type_struct(type_t t);
bool __cdecl is_type_struni(type_t t);
bool __cdecl is_type_sue(type_t t);
bool __cdecl is_type_tbyte(type_t t);
bool __cdecl is_type_typedef(type_t t);
bool __cdecl is_type_uchar(type_t t);
bool __cdecl is_type_uint(type_t t);
bool __cdecl is_type_uint128(type_t t);
bool __cdecl is_type_uint16(type_t t);
bool __cdecl is_type_uint32(type_t t);
bool __cdecl is_type_uint64(type_t t);
bool __cdecl is_type_union(type_t t);
bool __cdecl is_type_unknown(type_t t);
bool __cdecl is_type_void(type_t t);
bool __cdecl is_type_volatile(type_t t);
bool __cdecl is_typeid_last(type_t t);
bool __cdecl is_uname(const char *name);
bool __cdecl is_union(tid_t id);
bool __cdecl is_unknown(flags_t F);
bool __cdecl is_user_cc(cm_t cm);
bool __cdecl is_usersp(ea_t ea);
bool __cdecl is_userti(ea_t ea);
bool __cdecl is_valid_cp(wchar32_t cp, nametype_t kind, void *data);
bool __cdecl is_valid_trace_file(const char *filename);
bool __cdecl is_valid_typename(const char *name);
bool __cdecl is_valid_utf8(const char *in);
bool __cdecl is_vararg_cc(cm_t cm);
bool __cdecl is_varmember(const member_t *mptr);
int __cdecl is_varsize_item(ea_t ea, flags_t F, const opinfo_t *ti, asize_t *itemsize);
bool __cdecl is_varstr(tid_t id);
bool __cdecl is_visible_cp(wchar32_t cp);
bool __cdecl is_visible_finally(ea_t ea);
bool __cdecl is_visible_func(func_t *pfn);
bool __cdecl is_visible_item(ea_t ea);
bool __cdecl is_visible_segm(segment_t *s);
int __cdecl is_wctype(wint_t _C, wctype_t _Type);
bool __cdecl is_weak_name(ea_t ea);
bool __cdecl is_word(flags_t F);
bool __cdecl is_yword(flags_t F);
bool __cdecl is_zstroff(ea_t ea);
bool __cdecl is_zword(flags_t F);
int __cdecl isalnum(int _C);
int __cdecl isalpha(int _C);
int __cdecl isatty(int _FileHandle);
int __cdecl isblank(int _C);
int __cdecl iscntrl(int _C);
int __cdecl isdigit(int _C);
int __cdecl isgraph(int _C);
int __cdecl isleadbyte(int _C);
int __cdecl islower(int _C);
int __cdecl isprint(int _C);
int __cdecl ispunct(int _C);
int __cdecl isspace(int _C);
int __cdecl isupper(int _C);
int __cdecl iswalnum(wint_t _C);
int __cdecl iswalpha(wint_t _C);
int __cdecl iswascii(wint_t _C);
int __cdecl iswblank(wint_t _C);
int __cdecl iswcntrl(wint_t _C);
int __cdecl iswctype(wint_t _C, wctype_t _Type);
int __cdecl iswdigit(wint_t _C);
int __cdecl iswgraph(wint_t _C);
int __cdecl iswlower(wint_t _C);
int __cdecl iswprint(wint_t _C);
int __cdecl iswpunct(wint_t _C);
int __cdecl iswspace(wint_t _C);
int __cdecl iswupper(wint_t _C);
int __cdecl iswxdigit(wint_t _C);
int __cdecl isxdigit(int _C);
void __cdecl iterate_func_chunks(func_t *pfn, void (__cdecl *func)(ea_t, ea_t, void *), void *ud, bool include_parents);
const char *__cdecl itext(help_t msg_id);
char *__cdecl itoa(int _Value, char *_Buffer, int _Radix);
double __cdecl j0(double _X);
double __cdecl j1(double _X);
double __cdecl jn(int _X, double _Y);
bool __cdecl jumpto(TWidget *custom_viewer, place_t *place, int x, int y);
void __cdecl jvalue_t_clear(jvalue_t *);
void __cdecl jvalue_t_copy(jvalue_t *, const jvalue_t *);
int __cdecl l_compare(const place_t *t1, const place_t *t2);
int __cdecl l_compare2(const place_t *t1, const place_t *t2, void *ud);
fpvalue_error_t __cdecl l_realcvt(void *m, fpvalue_t *out, uint16 swt);
__int32 __cdecl labs(__int32 _X);
uval_t __cdecl last(uval_t off, asize_t s);
const char *__cdecl last_idcv_attr(const idc_value_t *obj);
void *__cdecl launch_process(const launch_process_params_t *lpp, qstring *errbuf);
double __cdecl ldexp(double _X, int _Y);
float __cdecl ldexpf(float _X, int _Y);
long double __cdecl ldexpl(long double _X, int _Y);
ldiv_t __cdecl ldiv(__int32 _Numerator, __int32 _Denominator);
bool __cdecl leading_zero_important(ea_t ea, int n);
bool legacy_idb;
error_t __cdecl lex_define_macro(lexer_t *lx, const char *macro, const char *body, int nargs, bool isfunc);
#error _lex_enum_macros: failed to print!
const char *__cdecl lex_get_file_line(lexer_t *lx, int32 *linenum, const char **lineptr, int level);
error_t __cdecl lex_get_token(lexer_t *lx, token_t *t);
error_t __cdecl lex_get_token2(lexer_t *lx, token_t *t, int32 *p_lnnum);
error_t __cdecl lex_init_file(lexer_t *lx, const char *file);
error_t __cdecl lex_init_string(lexer_t *lx, const char *line, void *macros);
const char *__cdecl lex_print_token(qstring *buf, const token_t *t);
int __cdecl lex_set_options(lexer_t *lx, int options);
void __cdecl lex_term_file(lexer_t *lx, bool del_macros);
void __cdecl lex_undefine_macro(lexer_t *lx, const char *macro);
int __cdecl lexcompare_tinfo(uint32 t1, uint32 t2, int);
void *__cdecl lfind(const void *_Key, const void *_Base, unsigned int *_NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
double __cdecl lgamma(double _X);
float __cdecl lgammaf(float _X);
long double __cdecl lgammal(long double _X);
bool __cdecl linearray_t_beginning(const linearray_t *);
void __cdecl linearray_t_ctr(linearray_t *, void *ud);
const qstring *__cdecl linearray_t_down(linearray_t *);
void __cdecl linearray_t_dtr(linearray_t *);
bool __cdecl linearray_t_ending(const linearray_t *);
int __cdecl linearray_t_set_place(linearray_t *, const place_t *new_at);
const qstring *__cdecl linearray_t_up(linearray_t *);
size_t __cdecl list_bptgrps(qstrvec_t *bptgrps);
__int64 __cdecl llabs(__int64 _X);
lldiv_t __cdecl lldiv(__int64 _Numerator, __int64 _Denominator);
longlong __cdecl llong_scan(const char *buf, int radix, const char **end);
__int64 __cdecl llrint(double _X);
__int64 __cdecl llrintf(float _X);
__int64 __cdecl llrintl(long double _X);
__int64 __cdecl llround(double _X);
__int64 __cdecl llroundf(float _X);
__int64 __cdecl llroundl(long double _X);
bool __cdecl load_and_run_plugin(const char *name, size_t arg);
bool __cdecl load_binary_file(const char *filename, linput_t *li, ushort _neflags, int64 fileoff, ea_t basepara, ea_t binoff, uint64 nbytes);
bool __cdecl load_core_module(idadll_t *dllmem, const char *file, const char *entry);
void __cdecl load_core_module_or_die(idadll_t *dllmem, const char *file, const char *entry);
int __cdecl load_custom_icon(const void *ptr, unsigned int len, const char *format);
bool __cdecl load_dbg_dbginfo(const char *path, linput_t *li, ea_t base, bool verbose);
bool __cdecl load_debugger(const char *dbgname, bool use_remote);
bool __cdecl load_dirtree(dirtree_impl_t *d);
int __cdecl load_ids_module(char *fname);
bool __cdecl load_nonbinary_file(const char *filename, linput_t *li, const char *sysdlldir, ushort _neflags, load_info_t *loader);
plugin_t *__cdecl load_plugin(const char *name);
til_t *__cdecl load_til(const char *name, qstring *errbuf, const char *tildir);
til_t *__cdecl load_til_header(const char *tildir, const char *name, qstring *errbuf);
bool __cdecl load_trace_file(qstring *buf, const char *filename);
void __noreturn loader_failure(const char *format, ...);
bool __cdecl lochist_entry_t_deserialize(lochist_entry_t *, const uchar **, const uchar *const, const place_t *);
void __cdecl lochist_entry_t_serialize(bytevec_t *, const lochist_entry_t *);
bool __cdecl lochist_t_back(lochist_t *, uint32 cnt, bool try_to_unhide);
void __cdecl lochist_t_clear(lochist_t *);
uint32 __cdecl lochist_t_current_index(const lochist_t *);
void __cdecl lochist_t_deregister_live(lochist_t *);
bool __cdecl lochist_t_fwd(lochist_t *, uint32 cnt, bool try_to_unhide);
bool __cdecl lochist_t_get(lochist_entry_t *, const lochist_t *, uint32);
const lochist_entry_t *__cdecl lochist_t_get_current(const lochist_t *);
bool __cdecl lochist_t_init(lochist_t *, const char *, const place_t *, void *, uint32);
void __cdecl lochist_t_jump(lochist_t *, bool try_to_unhide, const lochist_entry_t *e);
void __cdecl lochist_t_register_live(lochist_t *);
void __cdecl lochist_t_save(const lochist_t *);
bool __cdecl lochist_t_seek(lochist_t *, uint32 index, bool try_to_unhide, bool apply_cur);
void __cdecl lochist_t_set(lochist_t *, uint32, const lochist_entry_t *);
uint32 __cdecl lochist_t_size(const lochist_t *);
void lock_dbgmem_config(void);
void __cdecl lock_func_range(const func_t *pfn, bool lock);
void __cdecl lock_segm(const segment_t *segm, bool lock);
int __cdecl locking(int _FileHandle, int _LockMode, __int32 _NumOfBytes);
double __cdecl log(double _X);
double __cdecl log10(double _X);
float __cdecl log10f(float _X);
long double __cdecl log10l(long double _X);
double __cdecl log1p(double _X);
float __cdecl log1pf(float _X);
long double __cdecl log1pl(long double _X);
double __cdecl log2(double _X);
int __cdecl log2ceil(uint64 d64);
float __cdecl log2f(float _X);
int __cdecl log2floor(uint64 d64);
long double __cdecl log2l(long double _X);
double __cdecl logb(double _X);
float __cdecl logbf(float _X);
long double __cdecl logbl(long double _X);
float __cdecl logf(float _X);
long double __cdecl logl(long double _X);
ushort __cdecl lookup_key_code(int key, int shift, bool is_qt);
lochist_entry_cvt2_t *__cdecl lookup_loc_converter2(const char *p1, const char *p2);
uint32 __cdecl low(const longlong *x);
int __cdecl lower_type(til_t *til, tinfo_t *tif, const char *name, lowertype_helper_t *_helper);
void __cdecl lread(linput_t *li, void *buf, size_t size);
int __cdecl lread2bytes(linput_t *li, uint16 *res, bool mf);
int __cdecl lread4bytes(linput_t *li, uint32 *res, bool mf);
int __cdecl lread8bytes(linput_t *li, uint64 *res, bool mf);
int __cdecl lreadbytes(linput_t *li, void *buf, size_t size, bool mf);
__int32 __cdecl lrint(double _X);
__int32 __cdecl lrintf(float _X);
__int32 __cdecl lrintl(long double _X);
__int32 __cdecl lround(double _X);
__int32 __cdecl lroundf(float _X);
__int32 __cdecl lroundl(long double _X);
void *__cdecl lsearch(const void *_Key, void *_Base, unsigned int *_NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
__int32 __cdecl lseek(int _FileHandle, __int32 _Offset, int _Origin);
char *__cdecl ltoa(__int32 _Value, char *_Buffer, int _Radix);
char *__cdecl make_file_ext(char *buf, size_t bufsize, const char *file, const char *ext);
int128 __cdecl make_int128(ulonglong ll, longlong hh);
linput_t *__cdecl make_linput(FILE *fp);
longlong __cdecl make_longlong(uint32 ll, int32 hh);
bool __cdecl make_name_auto(ea_t ea);
void __cdecl make_name_non_public(ea_t ea);
void __cdecl make_name_non_weak(ea_t ea);
void __cdecl make_name_public(ea_t ea);
bool __cdecl make_name_user(ea_t ea);
void __cdecl make_name_weak(ea_t ea);
qtime64_t __cdecl make_qtime64(uint32 secs, int32 usecs);
int32 __cdecl make_str_type(uchar type_code, int encoding_idx, uchar term1, uchar term2);
uint128 __cdecl make_uint128(ulonglong ll, longlong hh);
ulonglong __cdecl make_ulonglong(uint32 ll, int32 hh);
void *__cdecl malloc(size_t _Size);
ea_t __cdecl map_code_ea(const insn_t *insn, const op_t *op);
ea_t __cdecl map_data_ea(const insn_t *insn, const op_t *op);
ea_t __cdecl map_ea(const insn_t *insn, ea_t addr, int opnum, bool iscode);
void mark_all_eaviews_for_refresh(void);
void __cdecl mark_epilog_insn(ea_t ea);
void __cdecl mark_prolog_insn(ea_t ea);
void __cdecl mark_range_for_refresh(ea_t ea, asize_t size);
void __cdecl mark_switch_insn(ea_t ea);
void __cdecl mark_switch_insns_jpt(const jump_pattern_t *_this, int last, int);
bool __cdecl match_jpt(jump_pattern_t *_this);
unsigned __int64 *__cdecl max(unsigned __int64 *_Left, unsigned __int64 *_Right);
int max_history_files;
bool may_create_stkvars(void);
bool may_trace_sp(void);
int __cdecl mblen(const char *_Ch, size_t _MaxCount);
size_t __cdecl mbrlen(const char *_Ch, size_t _SizeInBytes, mbstate_t *_State);
size_t __cdecl mbrtowc(__int16 *_DstCh, const char *_SrcCh, size_t _SizeInBytes, mbstate_t *_State);
int __cdecl mbsinit(const mbstate_t *_P);
size_t __cdecl mbsrtowcs(__int16 *_Dest, const char **_PSrc, size_t _Count, mbstate_t *_State);
errno_t __cdecl mbsrtowcs_s(size_t *_Retval, __int16 *_Dst, size_t _Size, const char **_PSrc, size_t _N, mbstate_t *_State);
size_t __cdecl mbstowcs(__int16 *_Dest, const char *_Source, size_t _MaxCount);
errno_t __cdecl mbstowcs_s(size_t *_PtNumOfCharConverted, __int16 *_DstBuf, size_t _SizeInWords, const char *_SrcBuf, size_t _MaxCount);
int __cdecl mbtowc(__int16 *_DstCh, const char *_SrcCh, size_t _SrcSizeInBytes);
int __cdecl mem2base(const void *memptr, ea_t ea1, ea_t ea2, int64 fpos);
void *__cdecl memccpy(void *_Dst, const void *_Src, int _Val, size_t _Size);
void *__cdecl memchr(void *_Pv, int _C, size_t _N);
int __cdecl memcmp(const void *_Buf1, const void *_Buf2, size_t _Size);
void *__cdecl memcpy(void *_Dst, const void *_Src, size_t _Size);
int __cdecl memicmp(const void *_Buf1, const void *_Buf2, size_t _Size);
void *__cdecl memmove(void *_Dst, const void *_Src, size_t _Size);
void *__cdecl memrev(void *buf, ssize_t size);
void *__cdecl memset(void *_Dst, int _Val, size_t _Size);
unsigned __int64 *__cdecl min(unsigned __int64 *_Left, unsigned __int64 *_Right);
int __cdecl mkdir(const char *_Path);
char *__cdecl mktemp(char *_TemplateName);
double __cdecl modf(double _X, double *_Y);
float __cdecl modff(float _X, float *_Y);
long double __cdecl modfl(long double _X, long double *_Y);
error_t __cdecl move_idcv(idc_value_t *dst, idc_value_t *src);
int __cdecl move_segm(segment_t *s, ea_t to, int flags);
bool __cdecl move_segm_start(ea_t ea, ea_t newstart, int mode);
int msg(const char *format, ...);
void msg_clear(void);
void __cdecl msg_get_lines(qstrvec_t *out, int count);
bool __cdecl msg_save(qstring *path);
bool __cdecl name_requires_qualifier(qstring *out, uint32 typid, const char *name, uint64 offset);
double __cdecl nan(const char *_X);
float __cdecl nanf(const char *_X);
long double __cdecl nanl(const char *_X);
int __cdecl nbits(ea_t ea);
double __cdecl nearbyint(double _X);
float __cdecl nearbyintf(float _X);
long double __cdecl nearbyintl(long double _X);
void __cdecl netnode_altadjust(nodeidx_t num, nodeidx_t from, nodeidx_t to, nodeidx_t size, bool (__cdecl *should_skip)(nodeidx_t));
void __cdecl netnode_altadjust2(nodeidx_t num, nodeidx_t from, nodeidx_t to, nodeidx_t size, altadjust_visitor_t *av);
size_t __cdecl netnode_altshift(nodeidx_t num, nodeidx_t from, nodeidx_t to, nodeidx_t size, int tag);
nodeidx_t __cdecl netnode_altval(nodeidx_t num, nodeidx_t alt, int tag);
nodeidx_t __cdecl netnode_altval_idx8(nodeidx_t num, uchar alt, int tag);
size_t __cdecl netnode_blobsize(nodeidx_t num, nodeidx_t start, int tag);
size_t __cdecl netnode_charshift(nodeidx_t num, nodeidx_t from, nodeidx_t to, nodeidx_t size, int tag);
uchar __cdecl netnode_charval(nodeidx_t num, nodeidx_t alt, int tag);
uchar __cdecl netnode_charval_idx8(nodeidx_t num, uchar alt, int tag);
bool __cdecl netnode_check(netnode *, const char *name, size_t namlen, bool create);
size_t __cdecl netnode_copy(nodeidx_t num, nodeidx_t count, nodeidx_t target, bool move);
int __cdecl netnode_delblob(nodeidx_t num, nodeidx_t start, int tag);
bool __cdecl netnode_delvalue(nodeidx_t num);
bool __cdecl netnode_end(netnode *);
bool __cdecl netnode_exist(const netnode *n);
ssize_t __cdecl netnode_get_name(nodeidx_t num, qstring *out);
void *__cdecl netnode_getblob(nodeidx_t num, void *buf, size_t *bufsize, nodeidx_t start, int tag);
bool __cdecl netnode_hashdel(nodeidx_t num, const char *idx, int tag);
ssize_t __cdecl netnode_hashfirst(nodeidx_t num, char *buf, size_t bufsize, int tag);
ssize_t __cdecl netnode_hashlast(nodeidx_t num, char *buf, size_t bufsize, int tag);
ssize_t __cdecl netnode_hashnext(nodeidx_t num, const char *idx, char *buf, size_t bufsize, int tag);
ssize_t __cdecl netnode_hashprev(nodeidx_t num, const char *idx, char *buf, size_t bufsize, int tag);
bool __cdecl netnode_hashset(nodeidx_t num, const char *idx, const void *value, size_t length, int tag);
ssize_t __cdecl netnode_hashstr(nodeidx_t num, const char *idx, char *buf, size_t bufsize, int tag);
ssize_t __cdecl netnode_hashval(nodeidx_t num, const char *idx, void *buf, size_t bufsize, int tag);
nodeidx_t __cdecl netnode_hashval_long(nodeidx_t num, const char *idx, int tag);
bool netnode_inited(void);
bool netnode_is_available(void);
void __cdecl netnode_kill(netnode *);
nodeidx_t __cdecl netnode_lower_bound(nodeidx_t num, nodeidx_t cur, int tag);
nodeidx_t __cdecl netnode_lower_bound_idx8(nodeidx_t num, uchar alt, int tag);
bool __cdecl netnode_next(netnode *);
bool __cdecl netnode_prev(netnode *);
ssize_t __cdecl netnode_qgetblob(nodeidx_t num, bytevec_t *buf, size_t elsize, nodeidx_t start, int tag);
ssize_t __cdecl netnode_qhashfirst(nodeidx_t num, qstring *buf, int tag);
ssize_t __cdecl netnode_qhashlast(nodeidx_t num, qstring *buf, int tag);
ssize_t __cdecl netnode_qhashnext(nodeidx_t num, qstring *buf, const char *idx, int tag);
ssize_t __cdecl netnode_qhashprev(nodeidx_t num, qstring *buf, const char *idx, int tag);
ssize_t __cdecl netnode_qhashstr(nodeidx_t num, qstring *buf, const char *idx, int tag);
ssize_t __cdecl netnode_qsupstr(nodeidx_t num, qstring *buf, nodeidx_t alt, int tag);
ssize_t __cdecl netnode_qsupstr_idx8(nodeidx_t num, qstring *buf, uchar alt, int tag);
ssize_t __cdecl netnode_qvalstr(nodeidx_t num, qstring *buf);
bool __cdecl netnode_rename(nodeidx_t num, const char *newname, size_t namlen);
bool __cdecl netnode_set(nodeidx_t num, const void *value, size_t length);
bool __cdecl netnode_setblob(nodeidx_t num, const void *buf, size_t size, nodeidx_t start, int tag);
bool __cdecl netnode_start(netnode *);
bool __cdecl netnode_supdel(nodeidx_t num, nodeidx_t alt, int tag);
bool __cdecl netnode_supdel_all(nodeidx_t num, int tag);
bool __cdecl netnode_supdel_idx8(nodeidx_t num, uchar alt, int tag);
int __cdecl netnode_supdel_range(nodeidx_t num, nodeidx_t idx1, nodeidx_t idx2, int tag);
int __cdecl netnode_supdel_range_idx8(nodeidx_t num, nodeidx_t idx1, nodeidx_t idx2, int tag);
nodeidx_t __cdecl netnode_supfirst(nodeidx_t num, int tag);
nodeidx_t __cdecl netnode_supfirst_idx8(nodeidx_t num, int tag);
nodeidx_t __cdecl netnode_suplast(nodeidx_t num, int tag);
nodeidx_t __cdecl netnode_suplast_idx8(nodeidx_t num, int tag);
nodeidx_t __cdecl netnode_supnext(nodeidx_t num, nodeidx_t cur, int tag);
nodeidx_t __cdecl netnode_supnext_idx8(nodeidx_t num, uchar alt, int tag);
nodeidx_t __cdecl netnode_supprev(nodeidx_t num, nodeidx_t cur, int tag);
nodeidx_t __cdecl netnode_supprev_idx8(nodeidx_t num, uchar alt, int tag);
bool __cdecl netnode_supset(nodeidx_t num, nodeidx_t alt, const void *value, size_t length, int tag);
bool __cdecl netnode_supset_idx8(nodeidx_t num, uchar alt, const void *value, size_t length, int tag);
size_t __cdecl netnode_supshift(nodeidx_t num, nodeidx_t from, nodeidx_t to, nodeidx_t size, int tag);
ssize_t __cdecl netnode_supstr(nodeidx_t num, nodeidx_t alt, char *buf, size_t bufsize, int tag);
ssize_t __cdecl netnode_supstr_idx8(nodeidx_t num, uchar alt, char *buf, size_t bufsize, int tag);
ssize_t __cdecl netnode_supval(nodeidx_t num, nodeidx_t alt, void *buf, size_t bufsize, int tag);
ssize_t __cdecl netnode_supval_idx8(nodeidx_t num, uchar alt, void *buf, size_t bufsize, int tag);
ssize_t __cdecl netnode_valobj(nodeidx_t num, void *buf, size_t bufsize);
ssize_t __cdecl netnode_valstr(nodeidx_t num, char *buf, size_t bufsize);
til_t *__cdecl new_til(const char *name, const char *desc);
ea_t __cdecl next_addr(ea_t ea);
ea_t __cdecl next_chunk(ea_t ea);
ea_t __cdecl next_head(ea_t ea, ea_t maxea);
const char *__cdecl next_idcv_attr(const idc_value_t *obj, const char *attr);
ea_t __cdecl next_inited(ea_t ea, ea_t maxea);
ea_t __cdecl next_marked_insn(ea_t ea);
const char *__cdecl next_named_type(const til_t *ti, const char *name, int ntf_flags);
ea_t __cdecl next_not_tail(ea_t ea);
ea_t __cdecl next_that(ea_t ea, ea_t maxea, testf_t *testf, void *ud);
ea_t __cdecl next_unknown(ea_t ea, ea_t maxea);
ea_t __cdecl next_visea(ea_t ea);
double __cdecl nextafter(double _X, double _Y);
float __cdecl nextafterf(float _X, float _Y);
long double __cdecl nextafterl(long double _X, long double _Y);
double __cdecl nexttoward(double _X, long double _Y);
float __cdecl nexttowardf(float _X, long double _Y);
long double __cdecl nexttowardl(long double _X, long double _Y);
ea_t __cdecl node2ea(nodeidx_t ndx);
node_iterator *__cdecl node_iterator_goup(node_iterator *);
void __noreturn nomem(const char *format, ...);
const std::nothrow_t nothrow;
void __cdecl notify_dirtree(dirtree_impl_t *d, bool added, inode_t inode);
int nowarn_qsnprintf(char *buf, size_t size, const char *format, ...);
flags_t num_flag(void);
size_t __cdecl numop2str(char *buf, size_t bufsize, ea_t ea, int n, uint64 x, int nbytes, int radix);
flags_t oct_flag(void);
flags_t off_flag(void);
_onexit_t __cdecl onexit(_onexit_t _Func);
bool __cdecl op_adds_xrefs(flags_t F, int n);
bool __cdecl op_bin(ea_t ea, int n);
bool __cdecl op_chr(ea_t ea, int n);
bool __cdecl op_custfmt(ea_t ea, int n, int fid);
bool __cdecl op_dec(ea_t ea, int n);
bool __cdecl op_enum(ea_t ea, int n, enum_t id, uchar serial);
bool __cdecl op_flt(ea_t ea, int n);
bool __cdecl op_hex(ea_t ea, int n);
bool __cdecl op_num(ea_t ea, int n);
bool __cdecl op_oct(ea_t ea, int n);
bool __cdecl op_offset(ea_t ea, int n, uint32 type_and_flags, ea_t target, ea_t base, adiff_t tdelta);
bool __cdecl op_offset_ex(ea_t ea, int n, const refinfo_t *ri);
bool __cdecl op_plain_offset(ea_t ea, int n, ea_t base);
bool __cdecl op_seg(ea_t ea, int n);
bool __cdecl op_stkvar(ea_t ea, int n);
bool __cdecl op_stroff(const insn_t *insn, int n, const tid_t *path, int path_len, adiff_t delta);
int open(const char *_FileName, int _OpenFlag, ...);
FILE *__cdecl openM(const char *file);
FILE *__cdecl openR(const char *file);
FILE *__cdecl openRT(const char *file);
TWidget *__cdecl open_bookmarks_window(TWidget *w);
TWidget *__cdecl open_bpts_window(ea_t ea);
TWidget *__cdecl open_calls_window(ea_t ea);
TWidget *__cdecl open_disasm_window(const char *window_title, const rangevec_t *ranges);
TWidget *__cdecl open_enums_window(tid_t const_id);
TWidget *__cdecl open_exports_window(ea_t ea);
TWidget *open_form(const char *form, uint32 flags, ...);
TWidget *__cdecl open_frame_window(func_t *pfn, uval_t offset);
TWidget *__cdecl open_funcs_window(ea_t ea);
TWidget *__cdecl open_hexdump_window(const char *window_title);
TWidget *__cdecl open_imports_window(ea_t ea);
linput_t *__cdecl open_linput(const char *file, bool remote);
TWidget *__cdecl open_loctypes_window(int ordinal);
TWidget *open_modules_window(void);
TWidget *__cdecl open_names_window(ea_t ea);
TWidget *__cdecl open_navband_window(ea_t ea, int zoom);
TWidget *open_notepad_window(void);
TWidget *__cdecl open_problems_window(ea_t ea);
TWidget *__cdecl open_segments_window(ea_t ea);
TWidget *__cdecl open_segregs_window(ea_t ea);
TWidget *open_selectors_window(void);
TWidget *open_signatures_window(void);
TWidget *open_stack_window(void);
TWidget *__cdecl open_strings_window(ea_t ea, ea_t selstart, ea_t selend);
TWidget *__cdecl open_structs_window(tid_t id, uval_t offset);
TWidget *open_threads_window(void);
TWidget *open_tils_window(void);
TWidget *open_trace_window(void);
void __cdecl open_url(const char *url);
TWidget *__cdecl open_xrefs_window(ea_t ea);
void __cdecl operator delete(void *_Block, int _BlockUse, const char *_FileName, int _LineNumber);
void __cdecl operator delete[](void *_Block, int _BlockUse, const char *_FileName, int _LineNumber);
void *__cdecl operator new(size_t _Size, int _BlockUse, const char *_FileName, int _LineNumber);
void *__cdecl operator new[](size_t _Size, int _BlockUse, const char *_FileName, int _LineNumber);
std::u32string __cdecl operator""s(const __int32 *_Str, size_t _Len);
uint128 __cdecl operator&(const uint128 *x, const uint128 *y);
uint128 __cdecl operator+(const uint128 *x, const uint128 *y);
uint128 __cdecl operator-(const uint128 *x);
bool __cdecl operator<(const bytevec_t *v1, const bytevec_t *v2);
uint128 __cdecl operator^(const uint128 *x, const uint128 *y);
uint128 __cdecl operator|(const uint128 *x, const uint128 *y);
bool __cdecl optimize_argloc(argloc_t *vloc, int size, const rangeset_t *gaps);
bool __cdecl overlap(uval_t off1, asize_t s1, uval_t off2, asize_t s2);
flags_t oword_flag(void);
uchar *__cdecl pack_db(uchar *ptr, uchar *end, uchar x);
uchar *__cdecl pack_dd(uchar *ptr, uchar *end, uint32 x);
uchar *__cdecl pack_dq(uchar *ptr, uchar *end, uint64 x);
uchar *__cdecl pack_ds(uchar *ptr, uchar *end, const char *x, size_t len);
uchar *__cdecl pack_dw(uchar *ptr, uchar *end, uint16 x);
uchar *__cdecl pack_ea(uchar *ptr, uchar *end, ea_t ea);
error_t __cdecl pack_idcobj_to_bv(const idc_value_t *obj, const tinfo_t *tif, relobj_t *bytes, void *objoff, int pio_flags);
error_t __cdecl pack_idcobj_to_idb(const idc_value_t *obj, const tinfo_t *tif, ea_t ea, int pio_flags);
flags_t packreal_flag(void);
bool __cdecl parse_binpat_str(compiled_binpat_vec_t *out, ea_t ea, const char *in, int radix, int strlits_encoding, qstring *errbuf);
size_t __cdecl parse_command_line(qstrvec_t *args, channel_redirs_t *redirs, const char *cmdline, int flags);
bool __cdecl parse_config_value(idc_value_t *out, lexer_t *lx, const token_t *value);
bool __cdecl parse_dbgopts(instant_dbgopts_t *ido, const char *r_switch);
bool __cdecl parse_decl(tinfo_t *tif, qstring *out, til_t *til, const char *decl, int flags);
int __cdecl parse_decls(til_t *til, const char *input, printer_t *printer, int hti_flags);
error_t __cdecl parse_json(jvalue_t *out, lexer_t *lx, tokenstack_t *ungot_tokens);
error_t __cdecl parse_json_string(jvalue_t *out, const char *s);
bool __cdecl parse_reg_name(reg_info_t *ri, const char *regname);
bool __cdecl patch_byte(ea_t ea, uint64 x);
void __cdecl patch_bytes(ea_t ea, const void *buf, size_t size);
bool __cdecl patch_dword(ea_t ea, uint64 x);
bool __cdecl patch_fixup_value(ea_t ea, const fixup_data_t *fd);
bool __cdecl patch_qword(ea_t ea, uint64 x);
bool __cdecl patch_word(ea_t ea, uint64 x);
ea_t __cdecl peek_auto_queue(ea_t low_ea, atype_t type);
void __cdecl perror(const char *_ErrorMessage);
processor_t ph;
bool __cdecl place_t__deserialize(place_t *_this, const uchar **pptr, const uchar *end);
void __cdecl place_t__serialize(const place_t *_this, bytevec_t *out);
int __cdecl plan_and_wait(ea_t ea1, ea_t ea2, bool final_pass);
void __cdecl plan_ea(ea_t ea);
void __cdecl plan_range(ea_t sEA, ea_t eEA);
int __cdecl plan_to_apply_idasgn(const char *fname);
double __cdecl pow(double _X, double _Y);
float __cdecl powf(float _X, float _Y);
long double __cdecl powl(long double _X, long double _Y);
ea_t __cdecl prev_addr(ea_t ea);
ea_t __cdecl prev_chunk(ea_t ea);
ea_t __cdecl prev_head(ea_t ea, ea_t minea);
const char *__cdecl prev_idcv_attr(const idc_value_t *obj, const char *attr);
ea_t __cdecl prev_inited(ea_t ea, ea_t minea);
ea_t __cdecl prev_not_tail(ea_t ea);
ea_t __cdecl prev_that(ea_t ea, ea_t minea, testf_t *testf, void *ud);
ea_t __cdecl prev_unknown(ea_t ea, ea_t minea);
bool __cdecl prev_utf8_char(wchar32_t *out_cp, const char **p, const char *begin);
ea_t __cdecl prev_visea(ea_t ea);
size_t __cdecl print_argloc(char *buf, size_t bufsize, const argloc_t *vloc, int size, int vflags);
int __cdecl print_cdata(text_sink_t *printer, const idc_value_t *idc_value, const tinfo_t *tif, const format_data_info_t *fdi);
bool __cdecl print_charlit(char *buf, const void *ptr, int size);
int __cdecl print_decls(text_sink_t *printer, til_t *til, const ordvec_t *ordinals, uint32 flags);
bool __cdecl print_fpval(char *buf, size_t bufsize, const void *v, int size);
bool __cdecl print_idcv(qstring *out, const idc_value_t *v, const char *name, int indent);
bool __cdecl print_insn_mnem(qstring *out, ea_t ea);
bool __cdecl print_operand(qstring *out, ea_t ea, int n, int getn_flags, printop_t *newtype);
bool __cdecl print_strlit_type(qstring *out, int32 strtype, qstring *out_tooltip, int flags);
bool __cdecl print_tinfo(qstring *result, const char *prefix, int indent, int cmtindent, int flags, const tinfo_t *tif, const char *name, const char *cmt);
bool __cdecl print_type(qstring *out, ea_t ea, int prtype_flags);
int printf(const char *const _Format, ...);
int printf_s(const char *const _Format, ...);
int __cdecl process_archive(qstring *temp_file, linput_t *li, qstring *module_name, ushort *neflags, const char *defmember, const load_info_t *loader, qstring *errbuf);
bool __cdecl process_ui_action(const char *name, int flags, void *param);
int __cdecl process_zip_linput(linput_t *li, int (__cdecl *callback)(void *, int64, int, uint64, uint64, uint32, const char *), void *ud);
int __cdecl process_zipfile(const char *zipfile, int (__cdecl *callback)(void *, int64, int, uint64, uint64, uint32, const char *), void *ud);
int __cdecl process_zipfile_entry(const char *zipfile, const char *entry, int (__cdecl *callback)(void *, int64, int, uint64, uint64, uint32, const char *), void *ud, bool case_sensitive);
bool __cdecl put_byte(ea_t ea, uint64 x);
void __cdecl put_bytes(ea_t ea, const void *buf, size_t size);
bool __cdecl put_dbg_byte(ea_t ea, uint32 x);
void __cdecl put_dword(ea_t ea, uint64 x);
void __cdecl put_qword(ea_t ea, uint64 x);
ssize_t __cdecl put_utf8_char(char *out, wchar32_t cp);
void __cdecl put_word(ea_t ea, uint64 x);
int __cdecl putc(int _Character, FILE *_Stream);
int __cdecl putchar(int _Character);
int __cdecl putenv(const char *_EnvString);
int __cdecl puts(const char *_Buffer);
int __cdecl putw(int _Ch, FILE *_Stream);
wint_t __cdecl putwc(__int16 _Character, FILE *_Stream);
wint_t __cdecl putwchar(__int16 _Character);
int __cdecl qaccess(const char *fname, int mode);
void *__cdecl qalloc(size_t size);
void *__cdecl qalloc_or_throw(size_t size);
void __cdecl qatexit(void (*func)(void));
int64 __cdecl qatoll(const char *nptr);
char *__cdecl qbasename(char *path);
void *__cdecl qcalloc(size_t nitems, size_t itemsize);
int __cdecl qchdir(const char *path);
int __cdecl qchsize(int h, uint64 fsize);
ssize_t __cdecl qcleanline(qstring *buf, char cmt_char, uint32 flags);
int __cdecl qclose(int h);
void qcontrol_tty(void);
int __cdecl qcopyfile(const char *from, const char *to, bool overwrite, bool (__cdecl *cb)(uint64, uint64, void *), void *ud, int flags);
int __cdecl qcreate(const char *file, int stat);
bool __cdecl qctime(char *buf, size_t bufsize, qtime32_t t);
bool __cdecl qctime_utc(char *buf, size_t bufsize, qtime32_t t);
void qdetach_tty(void);
bool __cdecl qdirname(char *buf, size_t bufsize, const char *path);
int __cdecl qdup(int h);
int qeprintf(const char *format, ...);
int __cdecl qerrcode(int new_code);
const char *__cdecl qerrstr(int code);
void __cdecl __noreturn qexit(int code);
int __cdecl qfclose(FILE *fp);
int __cdecl qfgetc(FILE *fp);
char *__cdecl qfgets(char *s, size_t len, FILE *fp);
bool __cdecl qfileexist(const char *file);
uint64 __cdecl qfilelength(int h);
uint64 __cdecl qfilesize(const char *fname);
void __cdecl qfindclose(qffblk64_t *blk);
int __cdecl qfindfirst(const char *pattern, qffblk64_t *blk, int attr);
int __cdecl qfindnext(qffblk64_t *blk);
int __cdecl qflush(FILE *fp);
FILE *__cdecl qfopen(const char *file, const char *mode);
int qfprintf(FILE *fp, const char *format, ...);
int __cdecl qfputc(int chr, FILE *fp);
int __cdecl qfputs(const char *s, FILE *fp);
ssize_t __cdecl qfread(FILE *fp, void *buf, size_t n);
void __cdecl qfree(void *alloc);
int qfscanf(FILE *fp, const char *format, ...);
int __cdecl qfseek(FILE *fp, int64 offset, int whence);
uint64 __cdecl qfsize(FILE *fp);
int __cdecl qfstat(int fd, qstatbuf *buf);
int __cdecl qfsync(int h);
int64 __cdecl qftell(FILE *fp);
ssize_t __cdecl qfwrite(FILE *fp, const void *buf, size_t n);
void __cdecl qgetcwd(char *buf, size_t bufsize);
bool __cdecl qgetenv(const char *varname, qstring *buf);
ssize_t __cdecl qgetline(qstring *buf, FILE *fp);
char *__cdecl qgets(char *line, size_t linesize);
bool __cdecl qgmtime(tm *_tm, qtime32_t t);
bool __cdecl qgmtime64(tm *_tm, qtime64_t t);
bool __cdecl qisabspath(const char *file);
bool __cdecl qisalnum(char c);
bool __cdecl qisalpha(char c);
bool __cdecl qisascii(char c);
bool __cdecl qisdigit(char c);
bool __cdecl qisdir(const char *file);
bool __cdecl qislower(char c);
bool __cdecl qisprint(char c);
bool __cdecl qispunct(char c);
bool __cdecl qisspace(char c);
bool __cdecl qisupper(char c);
bool __cdecl qisxdigit(char c);
FILE *__cdecl qlfile(linput_t *li);
int __cdecl qlgetc(linput_t *li);
char *__cdecl qlgets(char *s, size_t len, linput_t *li);
char *__cdecl qlgetz(linput_t *li, int64 fpos, char *buf, size_t bufsize);
bool __cdecl qlocaltime(tm *_tm, qtime32_t t);
bool __cdecl qlocaltime64(tm *_tm, qtime64_t t);
ssize_t __cdecl qlread(linput_t *li, void *buf, size_t size);
int64 __cdecl qlseek(linput_t *li, int64 pos, int whence);
int64 __cdecl qlsize(linput_t *li);
int64 __cdecl qltell(linput_t *li);
char *__cdecl qmake_full_path(char *dst, size_t dstsize, const char *src);
char *__cdecl qmakefile(char *buf, size_t bufsize, const char *base, const char *ext);
char *qmakepath(char *buf, size_t bufsize, const char *s1, ...);
int __cdecl qmkdir(const char *file, int mode);
int __cdecl qmove(const char *oldfname, const char *newfname, uint32 flags);
qmutex_t qmutex_create(void);
bool __cdecl qmutex_free(qmutex_t m);
bool __cdecl qmutex_lock(qmutex_t m);
bool __cdecl qmutex_unlock(qmutex_t m);
int __cdecl qopen(const char *file, int mode);
int __cdecl qopen_shared(const char *file, int mode, int share_mode);
void qperror(const char *format, ...);
int __cdecl qpipe_close(qhandle_t handle);
int __cdecl qpipe_create(qhandle_t handles[2]);
ssize_t __cdecl qpipe_read(qhandle_t handle, void *buf, size_t size);
ssize_t __cdecl qpipe_write(qhandle_t handle, const void *buf, size_t size);
int qprintf(const char *format, ...);
int __cdecl qread(int h, void *buf, size_t n);
void *__cdecl qrealloc(void *alloc, size_t newsize);
void *__cdecl qrealloc_or_throw(void *ptr, size_t size);
int __cdecl qregcomp(regex_t *preg, const char *pattern, int cflags);
size_t __cdecl qregerror(int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size);
int __cdecl qregexec(const regex_t *preg, const char *str, size_t nmatch, regmatch_t pmatch[], int eflags);
void __cdecl qregfree(regex_t *preg);
int __cdecl qrename(const char *oldfname, const char *newfname);
int __cdecl qrmdir(const char *file);
int64 __cdecl qseek(int h, int64 offset, int whence);
qsemaphore_t __cdecl qsem_create(const char *name, int init_count);
bool __cdecl qsem_free(qsemaphore_t sem);
bool __cdecl qsem_post(qsemaphore_t sem);
bool __cdecl qsem_wait(qsemaphore_t sem, int timeout_ms);
bool __cdecl qsetenv(const char *varname, const char *value);
void __cdecl qsleep(int milliseconds);
int qsnprintf(char *buffer, size_t n, const char *format, ...);
void __cdecl qsort(void *_Base, size_t _NumOfElements, size_t _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
void __cdecl qsort_s(void *_Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void *_Context);
char *__cdecl qsplitfile(char *file, char **base, char **ext);
int qsscanf(const char *input, const char *format, ...);
int __cdecl qstat(const char *path, qstatbuf *buf);
char *__cdecl qstpncpy(char *dst, const char *src, size_t dstsize);
void __cdecl qstr2user(qstring *dst, const qstring *src);
wchar16_t *__cdecl qstrchr(wchar16_t *s1, wchar16_t c);
int __cdecl qstrcmp(const wchar16_t *s1, const wchar16_t *s2);
char *__cdecl qstrdup(const char *string);
const char *__cdecl qstrerror(error_t _qerrno);
size_t __cdecl qstrftime(char *buf, size_t bufsize, const char *format, qtime32_t t);
size_t __cdecl qstrftime64(char *buf, size_t bufsize, const char *format, qtime64_t t);
size_t __cdecl qstrlen(const wchar16_t *s);
char *__cdecl qstrlwr(char *str);
char *__cdecl qstrncat(char *dst, const char *src, size_t dstsize);
char *__cdecl qstrncpy(char *dst, const char *src, size_t dstsize);
wchar16_t *__cdecl qstrrchr(wchar16_t *s1, wchar16_t c);
const uchar *__cdecl qstrstr(const uchar *s1, const uchar *s2);
char *__cdecl qstrtok(char *s, const char *delim, char **save_ptr);
char *__cdecl qstrupr(char *str);
int64 __cdecl qtell(int h);
qthread_t __cdecl qthread_create(qthread_cb_t *thread_cb, void *ud);
bool __cdecl qthread_equal(qthread_t q1, qthread_t q2);
void __cdecl qthread_free(qthread_t q);
bool __cdecl qthread_join(qthread_t q);
bool __cdecl qthread_kill(qthread_t q);
bool __cdecl qthread_same(qthread_t q);
qthread_t qthread_self(void);
qtime64_t qtime64(void);
qtime32_t __cdecl qtimegm(const tm *ptm);
FILE *qtmpfile(void);
char *__cdecl qtmpnam(char *buf, size_t bufsize);
int __cdecl qtolower(char c);
int __cdecl qtoupper(char c);
void __cdecl __noreturn quick_exit(int _Code);
int __cdecl qunlink(const char *fname);
bool __cdecl quote_cmdline_arg(qstring *arg);
size_t __cdecl qustrlen(const char *utf8);
bool __cdecl qustrncpy(char *dst, const char *utf8, size_t dstsize);
void *__cdecl qvector_reserve(void *vec, void *old, size_t cnt, size_t elsize);
int __cdecl qveprintf(const char *format, va_list va);
int __cdecl qvfprintf(FILE *fp, const char *format, va_list va);
int __cdecl qvfscanf(FILE *fp, const char *format, va_list va);
int __cdecl qvprintf(const char *format, va_list va);
int __cdecl qvsnprintf(char *buffer, size_t n, const char *format, va_list va);
int __cdecl qvsscanf(const char *input, const char *format, va_list va);
int __cdecl qwait_for_handles(int *idx, const qhandle_t *handles, int n, uint32 write_bitmask, int timeout_ms);
int __cdecl qwait_timed(int *status, int child, int flags, int timeout_ms);
flags_t qword_flag(void);
int __cdecl qwrite(int h, const void *buf, size_t n);
int __cdecl r50_to_asc(char *p, const ushort *r, int k);
int rand(void);
void (__cdecl *range_marker)(ea_t, asize_t);
size_t __cdecl range_t_print(const range_t *, char *buf, size_t bufsize);
bool __cdecl rangeset_t_add(rangeset_t *, const range_t *range);
bool __cdecl rangeset_t_add2(rangeset_t *, const rangeset_t *aset);
bool __cdecl rangeset_t_contains(const rangeset_t *, const rangeset_t *aset);
const range_t *__cdecl rangeset_t_find_range(const rangeset_t *, ea_t ea);
bool __cdecl rangeset_t_has_common(const rangeset_t *, const range_t *range, bool strict);
bool __cdecl rangeset_t_has_common2(const rangeset_t *, const rangeset_t *aset);
bool __cdecl rangeset_t_intersect(rangeset_t *, const rangeset_t *aset);
qvector<range_t>::const_iterator __cdecl rangeset_t_lower_bound(const rangeset_t *, ea_t ea);
ea_t __cdecl rangeset_t_next_addr(const rangeset_t *, ea_t ea);
ea_t __cdecl rangeset_t_next_range(const rangeset_t *, ea_t ea);
ea_t __cdecl rangeset_t_prev_addr(const rangeset_t *, ea_t ea);
ea_t __cdecl rangeset_t_prev_range(const rangeset_t *, ea_t ea);
size_t __cdecl rangeset_t_print(const rangeset_t *, char *buf, size_t bufsize);
bool __cdecl rangeset_t_sub(rangeset_t *, const range_t *range);
bool __cdecl rangeset_t_sub2(rangeset_t *, const rangeset_t *aset);
void __cdecl rangeset_t_swap(rangeset_t *, rangeset_t *r);
qvector<range_t>::const_iterator __cdecl rangeset_t_upper_bound(const rangeset_t *, ea_t ea);
int __cdecl read(int _FileHandle, void *_DstBuf, unsigned int _MaxCharCount);
int __cdecl read2bytes(int h, uint16 *res, bool mf);
bool __cdecl read_config(const char *input, bool is_file, const cfgopt_t opts[], size_t nopts, cfgopt_handler_t *defhdlr, const char *const *defines, size_t ndefines);
bool __cdecl read_config2(const char *input, bool is_file, const cfgopt_t opts[], size_t nopts, cfgopt_handler_t *defhdlr, const char *const *defines, size_t ndefines, void *obj);
bool __cdecl read_config_file(const char *filename, const cfgopt_t opts[], size_t nopts, cfgopt_handler_t *defhdlr, const char *const *defines, size_t ndefines);
bool __cdecl read_config_file2(const char *filename, const cfgopt_t opts[], size_t nopts, cfgopt_handler_t *defhdlr, const char *const *defines, size_t ndefines, void *obj);
bool __cdecl read_config_string(const char *string, const cfgopt_t opts[], size_t nopts, cfgopt_handler_t *defhdlr, const char *const *defines, size_t ndefines);
ssize_t __cdecl read_dbg_memory(ea_t ea, void *buffer, size_t size);
ssize_t __cdecl read_ioports(ioports_t *ports, qstring *device, const char *file, const char *(__cdecl *callback)(const ioports_t *, const char *));
ssize_t __cdecl read_ioports2(ioports_t *ports, qstring *device, const char *file, ioports_fallback_t *callback);
bool __cdecl read_range_selection(TWidget *v, ea_t *ea1, ea_t *ea2);
void __cdecl read_regargs(func_t *pfn);
bool __cdecl read_selection(TWidget *v, twinpos_t *p1, twinpos_t *p2);
int __cdecl read_struc_path(tid_t *path, adiff_t *delta, ea_t ea, int idx);
uint64 __cdecl read_tinfo_bitfield_value(uint32 typid, uint64 v, int bitoff);
int __cdecl readbytes(int h, uint32 *res, int size, bool mf);
fpvalue_error_t __cdecl realcvt(void *m, fpvalue_t *out, uint16 swt);
void *__cdecl realloc(void *_Block, size_t _Size);
void __cdecl realtoasc(char *buf, size_t bufsize, const fpvalue_t *x, uint mode);
void __cdecl reanalyze_callers(ea_t ea, bool noret);
void __cdecl reanalyze_function(func_t *pfn, ea_t ea1, ea_t ea2, bool analyze_parents);
bool __cdecl reanalyze_noret_flag(ea_t ea);
int __cdecl rebase_program(adiff_t delta, int flags);
void rebuild_nlist(void);
bool __cdecl recalc_spd(ea_t cur_ea);
bool __cdecl refresh_chooser(const char *title);
void __cdecl refresh_custom_viewer(TWidget *custom_viewer);
void refresh_idaview(void);
void refresh_idaview_anyway(void);
void __cdecl refresh_navband(bool force);
void __cdecl refresh_viewer(graph_viewer_t *gv);
bool __cdecl reg_bin_op(const char *name, bool save, void *data, size_t datalen, const char *subkey, int mode);
bool __cdecl reg_data_type(regval_type_t *out, const char *name, const char *subkey);
bool __cdecl reg_delete(const char *name, const char *subkey);
bool __cdecl reg_delete_subkey(const char *name);
bool __cdecl reg_delete_tree(const char *name);
bool __cdecl reg_exists(const char *name, const char *subkey);
void reg_flush(void);
void reg_history_size_truncate(void);
int __cdecl reg_int_op(const char *name, bool save, int value, const char *subkey);
void reg_load(void);
bool __cdecl reg_read_binary(const char *name, bytevec_t *data, const char *subkey);
bool __cdecl reg_read_binary_part(const char *name, void *data, size_t datalen, const char *subkey);
bool __cdecl reg_read_bool(const char *name, bool defval, const char *subkey);
int __cdecl reg_read_int(const char *name, int defval, const char *subkey);
bool __cdecl reg_read_string(qstring *utf8, const char *name, const char *subkey);
void __cdecl reg_read_strlist(qstrvec_t *list, const char *subkey);
bool __cdecl reg_str_get(qstring *buf, const char *name, const char *subkey);
void __cdecl reg_str_set(const char *name, const char *subkey, const char *buf);
bool __cdecl reg_subkey_children(qstrvec_t *out, const char *name, bool subkeys);
bool __cdecl reg_subkey_exists(const char *name);
bool __cdecl reg_subkey_subkeys(qstrvec_t *out, const char *name);
bool __cdecl reg_subkey_values(qstrvec_t *out, const char *name);
void __cdecl reg_update_filestrlist(const char *subkey, const char *add, size_t maxrecs, const char *rem);
void __cdecl reg_update_history(const char *addfile, const char *removefile);
void __cdecl reg_update_strlist(const char *subkey, const char *add, size_t maxrecs, const char *rem, bool ignorecase);
void __cdecl reg_write_binary(const char *name, const void *data, size_t datalen, const char *subkey);
void __cdecl reg_write_bool(const char *name, int value, const char *subkey);
void __cdecl reg_write_int(const char *name, int value, const char *subkey);
void __cdecl reg_write_string(const char *name, const char *utf8, const char *subkey);
int __cdecl regcomp(regex_t *preg, const char *pattern, int cflags);
size_t __cdecl regerror(int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size);
int __cdecl regex_match(const char *str, const char *pattern, bool sense_case);
int __cdecl regexec(const regex_t *preg, const char *str, size_t nmatch, regmatch_t pmatch[], int eflags);
void __cdecl regfree(regex_t *preg);
void __cdecl regget_history(qstrvec_t *list);
bool __cdecl register_action(const action_desc_t *desc);
int __cdecl register_addon(const addon_info_t *info);
bool __cdecl register_and_attach_to_menu(const char *menupath, const char *name, const char *label, const char *shortcut, int flags, action_handler_t *handler, void *owner, int action_desc_t_flags);
bool __cdecl register_cfgopts(const cfgopt_t opts[], size_t nopts, config_changed_cb_t cb, void *obj);
int __cdecl register_custom_data_format(const data_format_t *dtform);
int __cdecl register_custom_data_type(const data_type_t *dtinfo);
fixup_type_t __cdecl register_custom_fixup(const fixup_handler_t *cfh);
int __cdecl register_custom_refinfo(const custom_refinfo_handler_t *crh);
void __cdecl register_loc_converter2(const char *p1, const char *p2, lochist_entry_cvt2_t *cvt);
int __cdecl register_place_class(const place_t *tmplate, int flags, const plugin_t *owner);
bool __cdecl register_post_event_visitor(hook_type_t hook_type, post_event_visitor_t *visitor, const plugmod_t *owner);
bool __cdecl register_srcinfo_provider(srcinfo_provider_t *sp);
qtimer_t __cdecl register_timer(int interval_ms, int (__cdecl *callback)(void *), void *ud);
const char regkey_history[];
bool __cdecl reload_file(const char *file, bool is_remote);
void __cdecl reloc_value(void *value, int size, adiff_t delta, bool mf);
bool __cdecl relocate_relobj(relobj_t *_relobj, ea_t ea, bool mf);
double __cdecl remainder(double _X, double _Y);
float __cdecl remainderf(float _X, float _Y);
long double __cdecl remainderl(long double _X, long double _Y);
void __cdecl remember_problem(problist_id_t type, ea_t ea, const char *msg);
int __cdecl remove(const char *_FileName);
bool __cdecl remove_abi_opts(const char *abi_opts, bool user_level);
void __cdecl remove_command_interpreter(const cli_t *cp);
bool __cdecl remove_custom_argloc(int idx);
void __cdecl remove_event_listener(event_listener_t *cb);
bool __cdecl remove_extlang(extlang_t *el);
bool __cdecl remove_func_tail(func_t *pfn, ea_t tail_ea);
tinfo_t __cdecl remove_pointer(const tinfo_t *tif);
bool __cdecl remove_tinfo_pointer(tinfo_t *tif, const char **pname, const til_t *til);
double __cdecl remquo(double _X, double _Y, int *_Z);
float __cdecl remquof(float _X, float _Y, int *_Z);
long double __cdecl remquol(long double _X, long double _Y, int *_Z);
int __cdecl rename(const char *_OldFilename, const char *_NewFilename);
bool __cdecl rename_bptgrp(const char *old_name, const char *new_name);
bool __cdecl rename_encoding(int idx, const char *encname);
bool __cdecl rename_entry(uval_t ord, const char *name, int flags);
int __cdecl rename_regvar(func_t *pfn, regvar_t *v, const char *user);
void reorder_dummy_names(void);
void __cdecl repaint_custom_viewer(TWidget *custom_viewer);
int __cdecl replace_ordinal_typerefs(til_t *til, tinfo_t *tif);
bool __cdecl replace_tabs(qstring *out, const char *str, int tabsize);
void replace_wait_box(const char *format, ...);
bool __cdecl request_add_bpt(const bpt_t *bpt);
int __cdecl request_attach_process(pid_t pid, int event_id);
void request_clear_trace(void);
bool request_continue_process(void);
bool __cdecl request_del_bpt(const bpt_location_t *bptloc);
bool request_detach_process(void);
bool request_disable_bblk_trace(void);
bool __cdecl request_disable_bpt(const bpt_location_t *bptloc);
bool request_disable_func_trace(void);
bool request_disable_insn_trace(void);
bool request_disable_step_trace(void);
bool __cdecl request_enable_bblk_trace(bool enable);
bool __cdecl request_enable_bpt(const bpt_location_t *bptloc, bool enable);
bool __cdecl request_enable_func_trace(bool enable);
bool __cdecl request_enable_insn_trace(bool enable);
bool __cdecl request_enable_step_trace(int enable);
bool request_exit_process(void);
void __cdecl request_refresh(uint64 mask, bool cnd);
int __cdecl request_resume_thread(thid_t tid);
bool __cdecl request_run_to(ea_t ea, pid_t pid, thid_t tid);
bool __cdecl request_select_thread(thid_t tid);
void __cdecl request_set_bblk_trace_options(int options);
void __cdecl request_set_func_trace_options(int options);
void __cdecl request_set_insn_trace_options(int options);
bool __cdecl request_set_reg_val(const char *regname, const regval_t *regval);
bool __cdecl request_set_resume_mode(thid_t tid, resume_mode_t mode);
void __cdecl request_set_step_trace_options(int options);
int __cdecl request_start_process(const char *path, const char *args, const char *sdir);
bool request_step_into(void);
bool request_step_over(void);
bool request_step_until_ret(void);
bool request_suspend_process(void);
int __cdecl request_suspend_thread(thid_t tid);
bool __cdecl requires_color_esc(char c);
void __cdecl reset_dirtree(dirtree_impl_t *d);
const type_t *__cdecl resolve_typedef(const til_t *til, const type_t *type);
bool __cdecl restore_database_snapshot(const snapshot_t *ss, ss_restore_cb_t *cb, void *ud);
int __cdecl resume_thread(thid_t tid);
void __cdecl rethrow_exception(std::exception_ptr _Ptr);
const custloc_desc_t *__cdecl retrieve_custom_argloc(int idx);
excvec_t *retrieve_exceptions(void);
uint32 retrieve_input_file_crc32(void);
bool __cdecl retrieve_input_file_md5(uchar hash[16]);
bool __cdecl retrieve_input_file_sha256(uchar hash[32]);
size_t retrieve_input_file_size(void);
opinfo_t *__cdecl retrieve_member_info(opinfo_t *buf, const member_t *mptr);
bool __cdecl revert_byte(ea_t ea);
void __cdecl revert_ida_decisions(ea_t ea1, ea_t ea2);
void __cdecl rewind(FILE *_Stream);
double __cdecl rint(double _X);
float __cdecl rintf(float _X);
long double __cdecl rintl(long double _X);
int __cdecl rmdir(const char *_Path);
int rmtmp(void);
netnode root_node;
uval_t __cdecl rotate_left(uval_t x, int count, size_t bits, size_t offset);
double __cdecl round(double _X);
uint32 __cdecl round_down_power2(uint32 x);
uint32 __cdecl round_up_power2(uint32 x);
float __cdecl roundf(float _X);
long double __cdecl roundl(long double _X);
bool __cdecl run_plugin(const plugin_t *ptr, size_t arg);
bool run_requests(void);
bool __cdecl run_to(ea_t ea, pid_t pid, thid_t tid);
bool __cdecl same_value_jpt(jump_pattern_t *_this, const op_t *op, int r_i);
bool __cdecl sanitize_file_name(char *name, size_t namesize);
bool __cdecl save_database(const char *outfile, uint32 flags, const snapshot_t *root, const snapshot_t *attr);
bool __cdecl save_dirtree(dirtree_impl_t *d);
void save_signatures(void);
void __cdecl save_struc(struc_t *sptr, bool may_update_ltypes);
void save_structs(void);
tinfo_code_t __cdecl save_tinfo(tinfo_t *tif, til_t *til, size_t ord, const char *name, int ntf_flags);
bool __cdecl save_trace_file(const char *filename, const char *description);
double __cdecl scalbln(double _X, __int32 _Y);
float __cdecl scalblnf(float _X, __int32 _Y);
long double __cdecl scalblnl(long double _X, __int32 _Y);
double __cdecl scalbn(double _X, int _Y);
float __cdecl scalbnf(float _X, int _Y);
long double __cdecl scalbnl(long double _X, int _Y);
int scanf(const char *const _Format, ...);
int scanf_s(const char *const _Format, ...);
uint32 __cdecl score_tinfo(const tinfo_t *tif);
int __cdecl search(void *ud, place_t *start, const place_t *end, int *startx, const char *str, int sflag);
bool __cdecl search_down(int sflag);
bool __cdecl search_path(char *buf, size_t bufsize, const char *file, bool search_cwd);
flags_t seg_flag(void);
adiff_t __cdecl segm_adjust_diff(const segment_t *s, adiff_t delta);
ea_t __cdecl segm_adjust_ea(const segment_t *s, ea_t ea);
uchar __cdecl segtype(ea_t ea);
ea_t __cdecl sel2ea(sel_t selector);
ea_t __cdecl sel2para(sel_t selector);
bool __cdecl select_extlang(extlang_t *el);
bool __cdecl select_thread(thid_t tid);
void __cdecl serialize_dynamic_register_set(bytevec_t *buf, dynamic_register_set_t *idaregs);
bool __cdecl serialize_json(qstring *out, const jobj_t *o, uint32 flags);
bool __cdecl serialize_tinfo(qtype *type, qtype *fields, qtype *fldcmts, const tinfo_t *tif, int sudt_flags);
void __cdecl set__bnot0(ea_t ea);
void __cdecl set__bnot1(ea_t ea);
void __cdecl set__invsign0(ea_t ea);
void __cdecl set__invsign1(ea_t ea);
bool __cdecl set_abi_name(const char *abiname, bool user_level);
void __cdecl set_abits(ea_t ea, aflags_t bits);
void __cdecl set_absbase(ea_t ea, ea_t x);
void __cdecl set_aflags(ea_t ea, aflags_t flags);
void __cdecl set_align_flow(ea_t ea);
void __cdecl set_alignment(ea_t ea, uint32 x);
void __cdecl set_all_bits(uchar *bitmap, size_t nbits);
bool __cdecl set_archive_path(const char *file);
void __cdecl set_array_parameters(ea_t ea, const array_parameters_t *in);
bool __cdecl set_asm_inc_file(const char *file);
atype_t __cdecl set_auto_state(atype_t new_state);
void __cdecl set_bblk_trace_options(int options);
void __cdecl set_bit(uchar *bitmap, size_t bit);
void __cdecl set_bits(uchar *bitmap, size_t low, size_t high);
bool __cdecl set_bmask_cmt(enum_t id, bmask_t bmask, const char *cmt, bool repeatable);
bool __cdecl set_bmask_name(enum_t id, bmask_t bmask, const char *name);
bool __cdecl set_bpt_group(bpt_t *bpt, const char *grp_name);
bool __cdecl set_bptloc_group(const bpt_location_t *bptloc, const char *grp_name);
int __cdecl set_bptloc_string(const char *s);
void __cdecl set_c_header_path(const char *incdir);
void __cdecl set_c_macros(const char *macros);
void set_cancelled(void);
bool __cdecl set_cmt(ea_t ea, const char *comm, bool rptble);
void *__cdecl set_code_viewer_handler(TWidget *code_viewer, custom_viewer_handler_id_t handler_id, void *handler_or_data);
bool __cdecl set_code_viewer_is_source(TWidget *code_viewer);
void __cdecl set_code_viewer_line_handlers(TWidget *code_viewer, code_viewer_lines_click_t *click_handler, code_viewer_lines_click_t *popup_handler, code_viewer_lines_click_t *dblclick_handler, code_viewer_lines_icon_t *drawicon_handler, code_viewer_lines_linenum_t *linenum_handler);
bool __cdecl set_code_viewer_lines_alignment(TWidget *code_viewer, int align);
bool __cdecl set_code_viewer_lines_icon_margin(TWidget *code_viewer, int margin);
bool __cdecl set_code_viewer_lines_radix(TWidget *code_viewer, int radix);
bool __cdecl set_code_viewer_user_data(TWidget *code_viewer, void *ud);
void __cdecl set_colored_item(ea_t ea);
bool __cdecl set_compiler(const compiler_info_t *cc, int flags, const char *abiname);
bool __cdecl set_compiler_id(comp_t id, const char *abiname);
bool __cdecl set_compiler_string(const char *compstr, bool user_level);
void __cdecl set_cp_validity(ucdr_kind_t kind, wchar32_t cp, wchar32_t endcp, bool valid);
void __cdecl set_custom_data_type_ids(ea_t ea, const custom_data_type_ids_t *cdis);
void *__cdecl set_custom_viewer_handler(TWidget *custom_viewer, custom_viewer_handler_id_t handler_id, void *handler_or_data);
void __cdecl set_custom_viewer_handlers(TWidget *custom_viewer, const custom_viewer_handlers_t *cvh, void *cvh_ud);
bool __cdecl set_custom_viewer_qt_aware(TWidget *custom_viewer);
void __cdecl set_custom_viewer_range(TWidget *custom_viewer, const place_t *minplace, const place_t *maxplace);
void __cdecl set_data_guessed_by_hexrays(ea_t ea);
void __cdecl set_database_flag(uint32 dbfl, bool cnd);
const char *__cdecl set_dbg_default_options(const char *keyword, int value_type, const void *value);
const char *__cdecl set_dbg_options(const char *keyword, int pri, int value_type, const void *value);
void __cdecl set_dbgmem_source(range_t *(__cdecl *dbg_get_memory_config)(int *), int (__cdecl *memory_read)(ea_t, void *, int), int (__cdecl *memory_write)(ea_t, const void *, int));
void __cdecl set_debug_event_code(debug_event_t *ev, event_id_t id);
bool __cdecl set_debug_name(ea_t ea, const char *name);
int __cdecl set_debug_names(const ea_t *addrs, const char *const *names, int qty);
void __cdecl set_debugger_event_cond(const char *evcond);
uint __cdecl set_debugger_options(uint options);
void __cdecl set_default_dataseg(sel_t ds_sel);
bool __cdecl set_default_encoding_idx(int bpu, int idx);
bool __cdecl set_default_sreg_value(segment_t *sg, int rg, sel_t value);
bool __cdecl set_dock_pos(const char *src_ctrl, const char *dest_ctrl, int orient, int left, int top, int right, int bottom);
bool __cdecl set_dummy_name(ea_t from, ea_t ea);
bool __cdecl set_entry_forwarder(uval_t ord, const char *name, int flags);
bool __cdecl set_enum_bf(enum_t id, bool bf);
bool __cdecl set_enum_cmt(enum_t id, const char *cmt, bool repeatable);
bool __cdecl set_enum_flag(enum_t id, flags_t flag);
bool __cdecl set_enum_fromtil(enum_t id, bool fromtil);
bool __cdecl set_enum_ghost(enum_t id, bool ghost);
bool __cdecl set_enum_hidden(enum_t id, bool hidden);
bool __cdecl set_enum_idx(enum_t id, size_t idx);
bool __cdecl set_enum_member_cmt(const_t id, const char *cmt, bool repeatable);
bool __cdecl set_enum_member_name(const_t id, const char *name);
bool __cdecl set_enum_name(enum_t id, const char *name);
void __cdecl set_enum_type_ordinal(enum_t id, int32 ord);
bool __cdecl set_enum_width(enum_t id, int width);
void __cdecl set_errno(int code);
void __cdecl set_error_data(int n, size_t data);
void __cdecl set_error_string(int n, const char *str);
char *__cdecl set_file_ext(char *outbuf, size_t bufsize, const char *file, const char *ext);
void __cdecl set_fixed_spd(ea_t ea);
void __cdecl set_fixup(ea_t source, const fixup_data_t *fd);
bool __cdecl set_forced_operand(ea_t ea, int n, const char *op);
bool __cdecl set_frame_size(func_t *pfn, asize_t frsize, ushort frregs, asize_t argsize);
bool __cdecl set_func_cmt(const func_t *pfn, const char *cmt, bool repeatable);
bool __cdecl set_func_end(ea_t ea, ea_t newend);
void __cdecl set_func_guessed_by_hexrays(ea_t ea);
int __cdecl set_func_name_if_jumpfunc(func_t *pfn, const char *oldname);
int __cdecl set_func_start(ea_t ea, ea_t newstart);
void __cdecl set_func_trace_options(int options);
void __cdecl set_gotea(ea_t gotea);
int __cdecl set_group_selector(sel_t grp, sel_t sel);
void __cdecl set_has_lname(ea_t ea);
void __cdecl set_has_ti(ea_t ea);
void __cdecl set_has_ti0(ea_t ea);
void __cdecl set_has_ti1(ea_t ea);
bool __cdecl set_header_path(const char *path, bool add);
void __cdecl set_hexdsp(hexdsp_t hrdsp);
bool __cdecl set_highlight(TWidget *viewer, const char *str, int flags);
void __cdecl set_highlight_trace_options(bool hilight, bgcolor_t color, bgcolor_t diff);
void __cdecl set_ida_notepad_text(const char *text, size_t size);
idastate_t __cdecl set_ida_state(idastate_t st);
const char *__cdecl set_idc_dtor(idc_class_t *icls, const char *fullfuncname);
const char *__cdecl set_idc_getattr(idc_class_t *icls, const char *fullfuncname);
bool __cdecl set_idc_method(idc_class_t *icls, const char *fullfuncname);
const char *__cdecl set_idc_setattr(idc_class_t *icls, const char *fullfuncname);
error_t __cdecl set_idcv_attr(idc_value_t *obj, const char *attr, const idc_value_t *value, bool may_use_setattr);
error_t __cdecl set_idcv_slice(idc_value_t *v, uval_t i1, uval_t i2, const idc_value_t *in, int flags);
void __cdecl set_ids_modnode(netnode id);
void __cdecl set_ignore_micro(ea_t ea, uchar im_type);
void __cdecl set_imagebase(ea_t base);
bool __cdecl set_immd(ea_t ea);
void __cdecl set_import_name(uval_t modnode, ea_t ea, const char *name);
void __cdecl set_import_ordinal(uval_t modnode, ea_t ea, uval_t ord);
void __cdecl set_ind_purged(ea_t ea, ea_t x);
void __cdecl set_insn_trace_options(int options);
const char *__cdecl set_int_dbg_options(const char *keyword, int32 value);
void __cdecl set_item_color(ea_t ea, bgcolor_t color);
void __cdecl set_libitem(ea_t ea);
void __cdecl set_loader_format_name(const char *name);
bool __cdecl set_lzero(ea_t ea, int n);
void __cdecl set_lzero0(ea_t ea);
void __cdecl set_lzero1(ea_t ea);
void __cdecl set_manual_insn(ea_t ea, const char *manual_insn);
void __cdecl set_manual_regions(const meminfo_vec_t *ranges);
bool __cdecl set_member_cmt(member_t *mptr, const char *cmt, bool repeatable);
bool __cdecl set_member_name(struc_t *sptr, ea_t offset, const char *name);
smt_code_t __cdecl set_member_tinfo(struc_t *sptr, member_t *mptr, uval_t memoff, const tinfo_t *tif, int flags);
bool __cdecl set_member_type(struc_t *sptr, ea_t offset, flags_t flag, const opinfo_t *mt, asize_t nbytes);
void *__cdecl set_module_data(int *data_id, void *data_ptr);
bool __cdecl set_moved_jpt(const jump_pattern_t *_this, const op_t *dst, const op_t *src, tracked_regs_t *_regs, op_dtype_t real_dst_dtype, op_dtype_t real_src_dtype);
bool __cdecl set_name(ea_t ea, const char *name, int flags);
void __cdecl set_nav_colorizer(nav_colorizer_t **out_was_func, void **out_was_ud, nav_colorizer_t *func, void *ud);
std::new_handler __cdecl set_new_handler(std::new_handler);
void __cdecl set_node_info(graph_id_t gid, int node, const node_info_t *ni, uint32 flags);
void __cdecl set_noret(ea_t ea);
bool __cdecl set_noret_insn(ea_t insn_ea, bool noret);
void __cdecl set_notcode(ea_t ea);
void __cdecl set_notproc(ea_t ea);
tinfo_code_t __cdecl set_numbered_type(til_t *ti, uint32 ordinal, int ntf_flags, const char *name, const type_t *type, const p_list *fields, const char *cmt, const p_list *fldcmts, const sclass_t *sclass);
bool __cdecl set_op_tinfo(ea_t ea, int n, const tinfo_t *tif);
bool __cdecl set_op_type(ea_t ea, flags_t type, int n);
bool __cdecl set_opinfo(ea_t ea, int n, flags_t flag, const opinfo_t *ti, bool suppress_events);
bool __cdecl set_outfile_encoding_idx(int idx);
void __cdecl set_path(path_type_t pt, const char *path);
void __cdecl set_process_options(const char *path, const char *args, const char *sdir, const char *host, const char *pass, int port);
int __cdecl set_process_state(int newstate, thid_t *p_thid, int dbginv);
bool __cdecl set_processor_type(const char *procname, setproc_level_t level);
bool __cdecl set_purged(ea_t ea, int nbytes, bool override_old_value);
error_t __cdecl set_qerrno(error_t code);
bool __cdecl set_refinfo(ea_t ea, int n, reftype_t type, ea_t target, ea_t base, adiff_t tdelta);
bool __cdecl set_refinfo_ex(ea_t ea, int n, const refinfo_t *ri);
int __cdecl set_reg_val(thid_t tid, int regidx, const regval_t *value);
int __cdecl set_regvar_cmt(func_t *pfn, regvar_t *v, const char *cmt);
void __cdecl set_remote_debugger(const char *host, const char *pass, int port);
bool __cdecl set_resume_mode(thid_t tid, resume_mode_t mode);
void __cdecl set_retfp(ea_t ea);
void __cdecl set_root_filename(const char *file);
bool __cdecl set_segm_addressing(segment_t *s, size_t bitness);
bool __cdecl set_segm_base(segment_t *s, ea_t newbase);
int __cdecl set_segm_class(segment_t *s, const char *sclass, int flags);
bool __cdecl set_segm_end(ea_t ea, ea_t newend, int flags);
int __cdecl set_segm_name(segment_t *s, const char *name, int flags);
bool __cdecl set_segm_start(ea_t ea, ea_t newstart, int flags);
void __cdecl set_segment_cmt(const segment_t *s, const char *cmt, bool repeatable);
bool __cdecl set_segment_translations(ea_t segstart, const eavec_t *transmap);
int __cdecl set_selector(sel_t selector, ea_t paragraph);
void __cdecl set_source_linnum(ea_t ea, uval_t lnnum);
void __cdecl set_srcdbg_paths(const char *paths);
void __cdecl set_srcdbg_undesired_paths(const char *paths);
void __cdecl set_sreg_at_next_code(ea_t ea1, ea_t ea2, int rg, sel_t value);
void __cdecl set_step_trace_options(int options);
int32 __cdecl set_str_encoding_idx(int32 strtype, int encoding_idx);
void __cdecl set_str_type(ea_t ea, uint32 x);
bool __cdecl set_struc_align(struc_t *sptr, int shift);
bool __cdecl set_struc_cmt(tid_t id, const char *cmt, bool repeatable);
void __cdecl set_struc_hidden(struc_t *sptr, bool is_hidden);
bool __cdecl set_struc_idx(const struc_t *sptr, uval_t idx);
void __cdecl set_struc_listed(struc_t *sptr, bool is_listed);
bool __cdecl set_struc_name(tid_t id, const char *name);
void __cdecl set_switch_info(ea_t ea, const switch_info_t *in);
void __cdecl set_switch_parent(ea_t ea, ea_t x);
bool __cdecl set_tail_owner(func_t *fnt, ea_t func_start);
bool __cdecl set_target_assembler(int asmnum);
terminate_handler __cdecl set_terminate(terminate_handler _NewTerminateHandler);
void __cdecl set_terse_struc(ea_t ea);
void __cdecl set_tilcmt(ea_t ea);
bool __cdecl set_tinfo(ea_t ea, const tinfo_t *tif);
bool __cdecl set_tinfo_attr(tinfo_t *tif, const type_attr_t *ta, bool may_overwrite);
bool __cdecl set_tinfo_attrs(tinfo_t *tif, type_attrs_t *ta);
size_t __cdecl set_tinfo_property(tinfo_t *tif, int sta_prop, size_t x);
void __cdecl set_trace_base_address(ea_t ea);
void __cdecl set_trace_dynamic_register_set(dynamic_register_set_t *idaregs);
bool __cdecl set_trace_file_desc(const char *filename, const char *description);
void __cdecl set_trace_platform(const char *platform);
bool __cdecl set_trace_size(int size);
bool __cdecl set_type_alias(til_t *ti, uint32 src_ordinal, uint32 dst_ordinal);
void __cdecl set_type_determined_by_hexrays(ea_t ea);
void __cdecl set_type_guessed_by_ida(ea_t ea);
unexpected_handler __cdecl set_unexpected(unexpected_handler _NewUnexpectedHandler);
void __cdecl set_usemodsp(ea_t ea);
void __cdecl set_user_defined_prefix(size_t width, void (__cdecl *get_user_defined_prefix)(qstring *, ea_t, int, int, const char *));
void __cdecl set_usersp(ea_t ea);
void __cdecl set_userti(ea_t ea);
bool __cdecl set_vftable_ea(uint32 ordinal, ea_t vftable_ea);
void __cdecl set_view_renderer_type(TWidget *v, tcc_renderer_type_t rt);
void __cdecl set_viewer_graph(graph_viewer_t *gv, mutable_graph_t *g);
void __cdecl set_visible_func(func_t *pfn, bool visible);
void __cdecl set_visible_item(ea_t ea, bool visible);
void __cdecl set_visible_segm(segment_t *s, bool visible);
void __cdecl set_xrefpos(ea_t ea, const xrefpos_t *in);
void __cdecl set_zstroff(ea_t ea);
void __cdecl setbuf(FILE *_Stream, char *_Buffer);
bool __cdecl setinf(inftag_t tag, ssize_t value);
bool __cdecl setinf_buf(inftag_t tag, const void *buf, size_t bufsize);
bool __cdecl setinf_flag(inftag_t tag, uint32 flag, bool value);
int __cdecl setmode(int _FileHandle, int _Mode);
void __cdecl setup_graph_subsystem(const char *_grapher, bgcolor_t (__cdecl *get_graph_color)(int));
void __cdecl setup_lowcnd_regfuncs(idc_func_t *getreg, idc_func_t *setreg);
void setup_range_marker(void);
sel_t __cdecl setup_selector(ea_t segbase);
int __cdecl setvbuf(FILE *_Stream, char *_Buffer, int _Mode, size_t _Size);
bool __cdecl should_ignore_micro(ea_t ea);
void __cdecl show_addr(ea_t ea);
void __cdecl show_auto(ea_t ea, atype_t type);
void show_hex(const void *dataptr, size_t len, const char *format, ...);
void show_hex_file(linput_t *li, int64 pos, size_t count, const char *format, ...);
void __cdecl show_name(ea_t ea);
void show_wait_box(const char *format, ...);
void __cdecl show_wait_box_v(const char *format, va_list va);
bool __cdecl signbit(long double _X);
void __cdecl simpleline_place_t__adjust(simpleline_place_t *, void *);
bool __cdecl simpleline_place_t__beginning(const simpleline_place_t *, void *);
place_t *__cdecl simpleline_place_t__clone(const simpleline_place_t *);
int __cdecl simpleline_place_t__compare(const simpleline_place_t *, const place_t *);
int __cdecl simpleline_place_t__compare2(const simpleline_place_t *, const place_t *, void *);
void __cdecl simpleline_place_t__copyfrom(simpleline_place_t *, const place_t *);
bool __cdecl simpleline_place_t__deserialize(simpleline_place_t *, const uchar **, const uchar *);
bool __cdecl simpleline_place_t__ending(const simpleline_place_t *, void *);
place_t *__cdecl simpleline_place_t__enter(const simpleline_place_t *, uint32 *);
int __cdecl simpleline_place_t__generate(const simpleline_place_t *, qstrvec_t *, int *, color_t *, bgcolor_t *, void *, int);
int __cdecl simpleline_place_t__id(const simpleline_place_t *);
void __cdecl simpleline_place_t__leave(const simpleline_place_t *, uint32);
place_t *__cdecl simpleline_place_t__makeplace(const simpleline_place_t *, void *, uval_t, int);
const char *__cdecl simpleline_place_t__name(const simpleline_place_t *);
bool __cdecl simpleline_place_t__next(simpleline_place_t *, void *);
bool __cdecl simpleline_place_t__prev(simpleline_place_t *, void *);
void __cdecl simpleline_place_t__print(const simpleline_place_t *, qstring *, void *);
bool __cdecl simpleline_place_t__rebase(simpleline_place_t *, const segm_move_infos_t *);
void __cdecl simpleline_place_t__serialize(const simpleline_place_t *, bytevec_t *out);
ea_t __cdecl simpleline_place_t__toea(const simpleline_place_t *);
uval_t __cdecl simpleline_place_t__touval(const simpleline_place_t *, void *);
double __cdecl sin(double _X);
float __cdecl sinf(float _X);
double __cdecl sinh(double _X);
float __cdecl sinhf(float _X);
long double __cdecl sinhl(long double _X);
long double __cdecl sinl(long double _X);
char *__cdecl skip_spaces(char *ptr);
size_t __cdecl skip_utf8(const char **putf8, size_t n);
int snprintf(char *const _Buffer, const size_t _BufferCount, const char *const _Format, ...);
sval_t __cdecl soff_to_fpoff(func_t *pfn, uval_t soff);
int sopen(const char *_FileName, int _OpenFlag, int _ShareFlag, ...);
bool __cdecl sort_til(til_t *ti);
bool __cdecl split_sreg_range(ea_t ea, int rg, sel_t v, uchar tag, bool silent);
int sprintf(char *_Buffer, const char *_Format, ...);
int sprintf_s(char *const _Buffer, const size_t _BufferCount, const char *const _Format, ...);
double __cdecl sqrt(double _X);
float __cdecl sqrtf(float _X);
long double __cdecl sqrtl(long double _X);
void __cdecl srand(unsigned int _Seed);
bool srcdbg_request_step_into(void);
bool srcdbg_request_step_over(void);
bool srcdbg_request_step_until_ret(void);
bool srcdbg_step_into(void);
bool srcdbg_step_over(void);
bool srcdbg_step_until_ret(void);
int sscanf(const char *const _Buffer, const char *const _Format, ...);
int sscanf_s(const char *const _Buffer, const char *const _Format, ...);
int __cdecl start_process(const char *path, const char *args, const char *sdir);
void __cdecl std_out_segm_footer(outctx_t *ctx, segment_t *seg);
bool step_into(void);
bool step_over(void);
bool step_until_ret(void);
flags_t stkvar_flag(void);
size_t __cdecl stoa(qstring *buf, ea_t from, sel_t seg);
double __cdecl stod(const std::wstring *_Str, size_t *_Idx);
float __cdecl stof(const std::wstring *_Str, size_t *_Idx);
int __cdecl stoi(const std::wstring *_Str, size_t *_Idx, int _Base);
__int32 __cdecl stol(const std::wstring *_Str, size_t *_Idx, int _Base);
long double __cdecl stold(const std::wstring *_Str, size_t *_Idx);
__int64 __cdecl stoll(const std::wstring *_Str, size_t *_Idx, int _Base);
bool store_exceptions(void);
bool __cdecl store_til(til_t *ti, const char *tildir, const char *name);
unsigned __int32 __cdecl stoul(const std::wstring *_Str, size_t *_Idx, int _Base);
unsigned __int64 __cdecl stoull(const std::wstring *_Str, size_t *_Idx, int _Base);
bool __cdecl str2ea(ea_t *ea_ptr, const char *str, ea_t screen_ea);
bool __cdecl str2ea_ex(ea_t *ea_ptr, const char *str, ea_t screen_ea, int flags);
int __cdecl str2reg(const char *p);
char *__cdecl str2user(char *dst, const char *src, size_t dstsize);
const char *__cdecl strarray(const strarray_t *array, size_t array_size, int code);
char *__cdecl strcat(char *_Destination, const char *_Source);
errno_t __cdecl strcat_s(char *_Destination, rsize_t _SizeInBytes, const char *_Source);
char *__cdecl strchr(char *const _String, const int _Ch);
int __cdecl strcmp(const char *_Str1, const char *_Str2);
int __cdecl strcmpi(const char *_String1, const char *_String2);
int __cdecl strcoll(const char *_String1, const char *_String2);
char *__cdecl strcpy(char *_Destination, const char *_Source);
errno_t __cdecl strcpy_s(char *_Destination, rsize_t _SizeInBytes, const char *_Source);
size_t __cdecl strcspn(const char *_Str, const char *_Control);
char *__cdecl strdup(const char *_String);
char *__cdecl strerror(int _ErrorMessage);
errno_t __cdecl strerror_s(char *_Buffer, size_t _SizeInBytes, int _ErrorNumber);
size_t __cdecl strftime(char *_Buffer, size_t _SizeInBytes, const char *_Format, const tm *_Tm);
int __cdecl stricmp(const char *_String1, const char *_String2);
char *__cdecl stristr(char *s1, const char *s2);
size_t __cdecl strlen(const char *_Str);
flags_t strlit_flag(void);
char *__cdecl strlwr(char *_String);
char *__cdecl strncat(char *_Destination, const char *_Source, size_t _Count);
errno_t __cdecl strncat_s(char *_Destination, rsize_t _SizeInBytes, const char *_Source, rsize_t _MaxCount);
int __cdecl strncmp(const char *_Str1, const char *_Str2, size_t _MaxCount);
char *__cdecl strncpy(char *_Destination, const char *_Source, size_t _Count);
errno_t __cdecl strncpy_s(char *_Destination, rsize_t _SizeInBytes, const char *_Source, rsize_t _MaxCount);
int __cdecl strnicmp(const char *_String1, const char *_String2, size_t _MaxCount);
size_t __cdecl strnlen(const char *_String, size_t _MaxCount);
char *__cdecl strnset(char *_String, int _Value, size_t _MaxCount);
bool __cdecl stroff_as_size(int plen, const struc_t *sptr, asize_t value);
flags_t stroff_flag(void);
char *__cdecl strpbrk(char *const _String, const char *const _Control);
char *__cdecl strrchr(char *const _String, const int _Ch);
char *__cdecl strrev(char *_String);
char *__cdecl strrpl(char *str, int char1, int char2);
char *__cdecl strset(char *_String, int _Value);
size_t __cdecl strspn(const char *_Str, const char *_Control);
char *__cdecl strstr(char *const _String, const char *const _SubString);
double __cdecl strtod(const char *_String, char **_EndPtr);
float __cdecl strtof(const char *_String, char **_EndPtr);
char *__cdecl strtok(char *_String, const char *_Delimiter);
char *__cdecl strtok_s(char *_String, const char *_Delimiter, char **_Context);
__int32 __cdecl strtol(const char *_String, char **_EndPtr, int _Radix);
long double __cdecl strtold(const char *_String, char **_EndPtr);
__int64 __cdecl strtoll(const char *_String, char **_EndPtr, int _Radix);
unsigned __int32 __cdecl strtoul(const char *_String, char **_EndPtr, int _Radix);
unsigned __int64 __cdecl strtoull(const char *_String, char **_EndPtr, int _Radix);
flags_t stru_flag(void);
void __cdecl structplace_t__adjust(structplace_t *, void *);
bool __cdecl structplace_t__beginning(const structplace_t *, void *);
place_t *__cdecl structplace_t__clone(const structplace_t *);
int __cdecl structplace_t__compare(const structplace_t *, const place_t *);
int __cdecl structplace_t__compare2(const structplace_t *, const place_t *, void *);
void __cdecl structplace_t__copyfrom(structplace_t *, const place_t *);
bool __cdecl structplace_t__deserialize(structplace_t *, const uchar **, const uchar *);
bool __cdecl structplace_t__ending(const structplace_t *, void *);
place_t *__cdecl structplace_t__enter(const structplace_t *, uint32 *);
int __cdecl structplace_t__generate(const structplace_t *, qstrvec_t *, int *, color_t *, bgcolor_t *, void *, int);
int __cdecl structplace_t__id(const structplace_t *);
void __cdecl structplace_t__leave(const structplace_t *, uint32);
place_t *__cdecl structplace_t__makeplace(const structplace_t *, void *, uval_t, int);
const char *__cdecl structplace_t__name(const structplace_t *);
bool __cdecl structplace_t__next(structplace_t *, void *);
bool __cdecl structplace_t__prev(structplace_t *, void *);
void __cdecl structplace_t__print(const structplace_t *, qstring *, void *);
bool __cdecl structplace_t__rebase(structplace_t *, const segm_move_infos_t *);
void __cdecl structplace_t__serialize(const structplace_t *, bytevec_t *out);
ea_t __cdecl structplace_t__toea(const structplace_t *);
uval_t __cdecl structplace_t__touval(const structplace_t *, void *);
char *__cdecl strupr(char *_String);
size_t __cdecl strxfrm(char *_Destination, const char *_Source, size_t _MaxCount);
bool suspend_process(void);
int __cdecl suspend_thread(thid_t tid);
void __cdecl swab(char *_Buf1, char *_Buf2, int _SizeInBytes);
void swap(void);
void __cdecl swap128(uint128 *x);
ushort __cdecl swap16(ushort x);
uint32 __cdecl swap32(uint32 x);
longlong __cdecl swap64(longlong x);
void __cdecl swap_idcvs(idc_value_t *v1, idc_value_t *v2);
void __cdecl swap_value(void *dst, const void *src, int size);
dbctx_t *__cdecl switch_dbctx(size_t idx);
void switch_to_golang(void);
int swprintf(__int16 *const _Buffer, const __int16 *const _Format, ...);
int swprintf_s(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, ...);
int swscanf(const __int16 *const _Buffer, const __int16 *const _Format, ...);
int swscanf_s(const __int16 *const _Buffer, const __int16 *const _Format, ...);
bool __cdecl sync_sources(const sync_source_t *what, const sync_source_t *with, bool sync);
int __cdecl system(const char *_Command);
void __cdecl tag_addr(qstring *buf, ea_t ea, bool ins);
const char *__cdecl tag_advance(const char *line, int cnt);
ssize_t __cdecl tag_remove(qstring *buf, int init_level);
const char *__cdecl tag_skipcode(const char *line);
const char *__cdecl tag_skipcodes(const char *line);
ssize_t __cdecl tag_strlen(const char *line);
const char *__cdecl tail(const char *str);
bool __cdecl take_database_snapshot(snapshot_t *ss, qstring *err_msg);
bool __cdecl take_memory_snapshot(bool only_loader_segs);
double __cdecl tan(double _X);
float __cdecl tanf(float _X);
double __cdecl tanh(double _X);
float __cdecl tanhf(float _X);
long double __cdecl tanhl(long double _X);
long double __cdecl tanl(long double _X);
flags_t tbyte_flag(void);
__int32 __cdecl tell(int _FileHandle);
char *__cdecl tempnam(const char *_Directory, const char *_FilePrefix);
void term_database(void);
void term_ignore_micro(void);
void __cdecl term_plugins(int flag);
int __cdecl term_process(void *handle);
void __noreturn terminate(void);
bool __cdecl test_bit(const uchar *bitmap, size_t bit);
double __cdecl tgamma(double _X);
float __cdecl tgammaf(float _X);
long double __cdecl tgammal(long double _X);
error_t __cdecl throw_idc_exception(idc_value_t *r, const char *desc);
FILE *tmpfile(void);
errno_t __cdecl tmpfile_s(FILE **_Stream);
char *__cdecl tmpnam(char *_Buffer);
errno_t __cdecl tmpnam_s(char *_Buffer, rsize_t _Size);
ea_t __cdecl to_ea(sel_t reg_cs, uval_t reg_ip);
std::string __cdecl to_string(long double _Val);
std::wstring __cdecl to_wstring(long double _Val);
bool __cdecl toggle_bnot(ea_t ea, int n);
bool __cdecl toggle_lzero(ea_t ea, int n);
bool __cdecl toggle_sign(ea_t ea, int n);
int __cdecl tolower(int _C);
int __cdecl toupper(int _C);
wint_t __cdecl towlower(wint_t _C);
wint_t __cdecl towupper(wint_t _C);
bool __cdecl track_value_until_address_jpt(jump_pattern_t *_this, op_t *op, ea_t ea);
char *__cdecl trim(char *str);
void __cdecl trim_jtable(switch_info_t *si, ea_t jump_ea, bool ignore_refs);
double __cdecl trunc(double _X);
float __cdecl truncf(float _X);
long double __cdecl truncl(long double _X);
int __cdecl try_to_add_libfunc(ea_t ea);
void tzset(void);
bool __cdecl ui_load_new_file(qstring *temp_file, qstring *filename, linput_t **pli, ushort neflags, load_info_t **ploaders);
bool __cdecl ui_run_debugger(const char *dbgopts, const char *exename, int argc, const char *const *argv);
char *__cdecl ultoa(unsigned __int32 _Value, char *_Buffer, int _Radix);
int __cdecl umask(int _Mode);
bool uncaught_exception(void);
int uncaught_exceptions(void);
bool under_debugger;
void __noreturn unexpected(void);
void __cdecl unget_token(const token_t *t, tokenstack_t *buf);
int __cdecl ungetc(int _Character, FILE *_Stream);
wint_t __cdecl ungetwc(wint_t _Character, FILE *_Stream);
void __cdecl unhide_border(ea_t ea);
void __cdecl unhide_item(ea_t ea);
bool __cdecl unhook_event_listener(hook_type_t hook_type, event_listener_t *cb);
int __cdecl unhook_from_notification_point(hook_type_t hook_type, hook_cb_t *cb, void *user_data);
int __cdecl unlink(const char *_FileName);
void unlock_dbgmem_config(void);
void __cdecl unmake_linput(linput_t *li);
void unmark_selection(void);
void *__cdecl unpack_buf(const uchar **pptr, const uchar *end);
const void *__cdecl unpack_buf_inplace(const uchar **pptr, const uchar *end);
bool __cdecl unpack_bytevec(bytevec_t *out, const uchar **pptr, const uchar *end);
uchar __cdecl unpack_db(const uchar **pptr, const uchar *end);
uint32 __cdecl unpack_dd(const uchar **pptr, const uchar *end);
uint64 __cdecl unpack_dq(const uchar **pptr, const uchar *end);
char *__cdecl unpack_ds(const uchar **pptr, const uchar *end, bool empty_null);
bool __cdecl unpack_ds_to_buf(char *dst, size_t dstsize, const uchar **pptr, const uchar *end);
ushort __cdecl unpack_dw(const uchar **pptr, const uchar *end);
ea_t __cdecl unpack_ea(const uchar **ptr, const uchar *end);
ea64_t __cdecl unpack_ea64(const uchar **ptr, const uchar *end);
void __cdecl unpack_eavec(eavec_t *vec, ea_t ea, const uchar **ptr, const uchar *end);
error_t __cdecl unpack_idcobj_from_bv(idc_value_t *obj, const tinfo_t *tif, const bytevec_t *bytes, int pio_flags);
error_t __cdecl unpack_idcobj_from_idb(idc_value_t *obj, const tinfo_t *tif, ea_t ea, const bytevec_t *off0, int pio_flags);
bool __cdecl unpack_memory(void *buf, size_t size, const uchar **pptr, const uchar *end);
void *__cdecl unpack_obj(void *destbuf, size_t destsize, const uchar **pptr, const uchar *end);
const void *__cdecl unpack_obj_inplace(const uchar **pptr, const uchar *end, size_t objsize);
void __cdecl unpack_regvals(regval_t *values, int n, const uchar *regmap, memory_deserializer_t *mmdsr);
bool __cdecl unpack_str(qstring *out, const uchar **pptr, const uchar *end);
bool __cdecl unpack_xleb128(void *res, int nbits, bool is_signed, const uchar **pptr, const uchar *end);
bool __cdecl unregister_action(const char *name);
bool __cdecl unregister_custom_data_format(int dfid);
bool __cdecl unregister_custom_data_type(int dtid);
bool __cdecl unregister_custom_fixup(fixup_type_t type);
bool __cdecl unregister_custom_refinfo(int crid);
bool __cdecl unregister_post_event_visitor(hook_type_t hook_type, post_event_visitor_t *visitor);
bool __cdecl unregister_srcinfo_provider(srcinfo_provider_t *sp);
bool __cdecl unregister_timer(qtimer_t t);
void __cdecl upd_abits(ea_t ea, aflags_t clr_bits, aflags_t set_bits);
bool __cdecl update_action_checkable(const char *name, bool checkable);
bool __cdecl update_action_checked(const char *name, bool checked);
bool __cdecl update_action_icon(const char *name, int icon);
bool __cdecl update_action_label(const char *name, const char *label);
bool __cdecl update_action_shortcut(const char *name, const char *shortcut);
bool __cdecl update_action_state(const char *name, action_state_t state);
bool __cdecl update_action_tooltip(const char *name, const char *tooltip);
bool __cdecl update_action_visibility(const char *name, bool visible);
bool __cdecl update_bpt(const bpt_t *bpt);
void __cdecl update_extra_cmt(ea_t ea, int what, const char *str);
bool __cdecl update_fpd(func_t *pfn, asize_t fpd);
bool __cdecl update_func(func_t *pfn);
bool __cdecl update_hidden_range(const hidden_range_t *ha);
bool __cdecl update_segm(segment_t *s);
bool __cdecl update_snapshot_attributes(const char *filename, const snapshot_t *root, const snapshot_t *attr, int uf);
bool use_golang_cc(void);
ea_t __cdecl use_mapping(ea_t ea);
int __cdecl user2bin(uchar *, uchar *, ea_t, const char *, int, bool);
void __cdecl user2qstr(qstring *dst, const qstring *src);
char *__cdecl user2str(char *dst, const char *src, size_t dstsize);
bool user_cancelled(void);
bool __cdecl uses_aflag_modsp(aflags_t flags);
bool __cdecl uses_modsp(ea_t ea);
wchar32_t __cdecl utf16_surrogates_to_cp(wchar16_t lead_surrogate, wchar16_t tail_surrogate);
bool __cdecl utf16_utf8(qstring *out, const wchar16_t *in, int nsyms);
bool __cdecl utf8_utf16(qwstring *out, const char *in, int nsyms);
wchar16_t __cdecl utf8_wchar16(uchar b0, uchar b1, uchar b2);
wchar32_t __cdecl utf8_wchar32(uchar b0, uchar b1, uchar b2, uchar b3);
bool __cdecl vadd_extra_line(ea_t ea, int vel_flags, const char *format, va_list va);
int validate_idb_names(void);
int __cdecl validate_idb_names2(bool do_repair);
bool __cdecl validate_name(qstring *name, nametype_t type, int flags);
int __cdecl vask_buttons(const char *Yes, const char *No, const char *Cancel, int deflt, const char *format, va_list va);
char *__cdecl vask_file(bool for_saving, const char *defval, const char *format, va_list va);
int __cdecl vask_form(const char *format, va_list va);
bool __cdecl vask_str(qstring *str, int hist, const char *format, va_list va);
bool __cdecl vask_text(qstring *answer, size_t max_size, const char *defval, const char *format, va_list va);
int __cdecl vask_yn(int deflt, help_t format, va_list va);
int __cdecl verify_argloc(const argloc_t *vloc, int size, const rangeset_t *gaps);
int __cdecl verify_tinfo(uint32 typid);
void __cdecl __noreturn verror(const char *format, va_list va);
int __cdecl vfprintf(FILE *const _Stream, const char *const _Format, va_list _ArgList);
int __cdecl vfprintf_s(FILE *const _Stream, const char *const _Format, va_list _ArgList);
int __cdecl vfscanf(FILE *const _Stream, const char *const _Format, va_list _ArgList);
int __cdecl vfscanf_s(FILE *const _Stream, const char *const _Format, va_list _ArgList);
int __cdecl vfwprintf(FILE *const _Stream, const __int16 *const _Format, va_list _ArgList);
int __cdecl vfwprintf_s(FILE *const _Stream, const __int16 *const _Format, va_list _ArgList);
int __cdecl vfwscanf(FILE *const _Stream, const __int16 *const _Format, va_list _ArgList);
int __cdecl vfwscanf_s(FILE *const _Stream, const __int16 *const _Format, va_list _ArgList);
bool __cdecl viewer_attach_menu_item(graph_viewer_t *g, const char *name);
void __cdecl viewer_center_on(graph_viewer_t *gv, int node);
bool __cdecl viewer_create_groups(graph_viewer_t *gv, intvec_t *out_group_nodes, const groups_crinfos_t *gi);
void __cdecl viewer_del_node_info(graph_viewer_t *gv, int n);
bool __cdecl viewer_delete_groups(graph_viewer_t *gv, const intvec_t *groups, int new_current);
void __cdecl viewer_fit_window(graph_viewer_t *gv);
int __cdecl viewer_get_curnode(graph_viewer_t *gv);
bool __cdecl viewer_get_gli(graph_location_info_t *out, graph_viewer_t *gv, uint32 flags);
bool __cdecl viewer_get_node_info(graph_viewer_t *gv, node_info_t *out, int n);
bool __cdecl viewer_get_selection(graph_viewer_t *gv, screen_graph_selection_t *sgs);
void __cdecl viewer_set_gli(graph_viewer_t *gv, const graph_location_info_t *gli, uint32 flags);
bool __cdecl viewer_set_groups_visibility(graph_viewer_t *gv, const intvec_t *groups, bool expand, int new_current);
void __cdecl viewer_set_node_info(graph_viewer_t *gv, int n, const node_info_t *ni, uint32 flags);
int __cdecl viewer_set_titlebar_height(graph_viewer_t *gv, int height);
void __cdecl vinfo(const char *format, va_list va);
int __cdecl visit_patched_bytes(ea_t ea1, ea_t ea2, int (__cdecl *cb)(ea_t, int64, uint64, uint64, void *), void *ud);
int __cdecl visit_snapshot_tree(snapshot_t *root, int (__cdecl *callback)(snapshot_t *, void *), void *ud);
flags_t __cdecl visit_stroff_fields(struct_field_visitor_t *sfv, const tid_t *path, int plen, adiff_t *disp, bool appzero);
int __cdecl visit_subtypes(tinfo_visitor_t *visitor, type_mods_t *out, const tinfo_t *tif, const char *name, const char *cmt);
void __cdecl __noreturn vloader_failure(const char *format, va_list va);
int __cdecl vmsg(const char *format, va_list va);
void __cdecl __noreturn vnomem(const char *format, va_list va);
TWidget *__cdecl vopen_form(const char *format, uint32 flags, va_list va);
int __cdecl vprintf(const char *const _Format, va_list _ArgList);
int __cdecl vprintf_s(const char *const _Format, va_list _ArgList);
char *__cdecl vqmakepath(char *buf, size_t bufsize, const char *s1, va_list);
void __cdecl vqperror(const char *format, va_list va);
int __cdecl vscanf(const char *const _Format, va_list _ArgList);
int __cdecl vscanf_s(const char *const _Format, va_list _ArgList);
void __cdecl vshow_hex(const void *dataptr, size_t len, const char *format, va_list va);
void __cdecl vshow_hex_file(linput_t *li, int64 pos, size_t count, const char *format, va_list va);
int __cdecl vsnprintf(char *const _Buffer, const size_t _BufferCount, const char *const _Format, va_list _ArgList);
int __cdecl vsnprintf_s(char *const _Buffer, const size_t _BufferCount, const size_t _MaxCount, const char *const _Format, va_list _ArgList);
int __cdecl vsprintf(char *_Buffer, const char *_Format, va_list _Args);
int __cdecl vsprintf_s(char *const _Buffer, const size_t _BufferCount, const char *const _Format, va_list _ArgList);
int __cdecl vsscanf(const char *const _Buffer, const char *const _Format, va_list _ArgList);
int __cdecl vsscanf_s(const char *const _Buffer, const char *const _Format, va_list _ArgList);
int __cdecl vswprintf(__int16 *const _Buffer, const __int16 *const _Format, va_list _ArgList);
int __cdecl vswprintf_s(__int16 *const _Buffer, const size_t _BufferCount, const __int16 *const _Format, va_list _ArgList);
int __cdecl vswscanf(const __int16 *_Buffer, const __int16 *_Format, va_list _ArgList);
int __cdecl vswscanf_s(const __int16 *const _Buffer, const __int16 *const _Format, va_list _ArgList);
void __cdecl vwarning(const char *format, va_list va);
int __cdecl vwprintf(const __int16 *const _Format, va_list _ArgList);
int __cdecl vwprintf_s(const __int16 *const _Format, va_list _ArgList);
int __cdecl vwscanf(const __int16 *const _Format, va_list _ArgList);
int __cdecl vwscanf_s(const __int16 *const _Format, va_list _ArgList);
dbg_event_code_t __cdecl wait_for_next_event(int wfne, int timeout);
void warning(const char *format, ...);
bool __cdecl was_ida_decision(ea_t ea);
size_t __cdecl wcrtomb(char *_Dest, __int16 _Source, mbstate_t *_State);
errno_t __cdecl wcrtomb_s(size_t *_Retval, char *_Dst, size_t _SizeInBytes, __int16 _Ch, mbstate_t *_State);
__int16 *__cdecl wcscat(__int16 *_Destination, const __int16 *_Source);
errno_t __cdecl wcscat_s(__int16 *_Destination, rsize_t _SizeInWords, const __int16 *_Source);
__int16 *__cdecl wcschr(__int16 *_String, __int16 _C);
int __cdecl wcscmp(const __int16 *_String1, const __int16 *_String2);
int __cdecl wcscoll(const __int16 *_String1, const __int16 *_String2);
__int16 *__cdecl wcscpy(__int16 *_Destination, const __int16 *_Source);
errno_t __cdecl wcscpy_s(__int16 *_Destination, rsize_t _SizeInWords, const __int16 *_Source);
size_t __cdecl wcscspn(const __int16 *_String, const __int16 *_Control);
__int16 *__cdecl wcsdup(const __int16 *_String);
size_t __cdecl wcsftime(__int16 *_Buffer, size_t _SizeInWords, const __int16 *_Format, const tm *_Tm);
int __cdecl wcsicmp(const __int16 *_String1, const __int16 *_String2);
int __cdecl wcsicoll(const __int16 *_String1, const __int16 *_String2);
size_t __cdecl wcslen(const __int16 *_String);
__int16 *__cdecl wcslwr(__int16 *_String);
__int16 *__cdecl wcsncat(__int16 *_Destination, const __int16 *_Source, size_t _Count);
errno_t __cdecl wcsncat_s(__int16 *_Destination, rsize_t _SizeInWords, const __int16 *_Source, rsize_t _MaxCount);
int __cdecl wcsncmp(const __int16 *_String1, const __int16 *_String2, size_t _MaxCount);
__int16 *__cdecl wcsncpy(__int16 *_Destination, const __int16 *_Source, size_t _Count);
errno_t __cdecl wcsncpy_s(__int16 *_Destination, rsize_t _SizeInWords, const __int16 *_Source, rsize_t _MaxCount);
int __cdecl wcsnicmp(const __int16 *_String1, const __int16 *_String2, size_t _MaxCount);
size_t __cdecl wcsnlen(const __int16 *_Source, size_t _MaxCount);
__int16 *__cdecl wcsnset(__int16 *_String, __int16 _Value, size_t _MaxCount);
__int16 *__cdecl wcspbrk(__int16 *_String, const __int16 *_Control);
__int16 *__cdecl wcsrchr(__int16 *_String, __int16 _C);
__int16 *__cdecl wcsrev(__int16 *_String);
size_t __cdecl wcsrtombs(char *_Dest, const __int16 **_PSource, size_t _Count, mbstate_t *_State);
errno_t __cdecl wcsrtombs_s(size_t *_Retval, char *_Dst, size_t _SizeInBytes, const __int16 **_Src, size_t _Size, mbstate_t *_State);
__int16 *__cdecl wcsset(__int16 *_String, __int16 _Value);
size_t __cdecl wcsspn(const __int16 *_String, const __int16 *_Control);
__int16 *__cdecl wcsstr(__int16 *_String, const __int16 *_SubStr);
double __cdecl wcstod(const __int16 *_String, __int16 **_EndPtr);
float __cdecl wcstof(const __int16 *_String, __int16 **_EndPtr);
__int16 *__cdecl wcstok(__int16 *_String, const __int16 *_Delimiter);
__int16 *__cdecl wcstok_s(__int16 *_String, const __int16 *_Delimiter, __int16 **_Context);
__int32 __cdecl wcstol(const __int16 *_String, __int16 **_EndPtr, int _Radix);
long double __cdecl wcstold(const __int16 *_String, __int16 **_EndPtr);
__int64 __cdecl wcstoll(const __int16 *_String, __int16 **_EndPtr, int _Radix);
size_t __cdecl wcstombs(char *_Dest, const __int16 *_Source, size_t _MaxCount);
errno_t __cdecl wcstombs_s(size_t *_PtNumOfCharConverted, char *_Dst, size_t _DstSizeInBytes, const __int16 *_Src, size_t _MaxCountInBytes);
unsigned __int32 __cdecl wcstoul(const __int16 *_String, __int16 **_EndPtr, int _Radix);
unsigned __int64 __cdecl wcstoull(const __int16 *_String, __int16 **_EndPtr, int _Radix);
__int16 *__cdecl wcsupr(__int16 *_String);
size_t __cdecl wcsxfrm(__int16 *_Destination, const __int16 *_Source, size_t _MaxCount);
int __cdecl wctob(wint_t _WCh);
int __cdecl wctomb(char *_MbCh, __int16 _WCh);
errno_t __cdecl wctomb_s(int *_SizeConverted, char *_MbCh, rsize_t _SizeInBytes, __int16 _WCh);
bool __cdecl wildcard_match(const char *name, const char *pattern);
char *__cdecl winerr(int code);
__int16 *__cdecl wmemchr(__int16 *_S, __int16 _C, size_t _N);
int __cdecl wmemcmp(const __int16 *_S1, const __int16 *_S2, size_t _N);
__int16 *__cdecl wmemcpy(__int16 *_S1, const __int16 *_S2, size_t _N);
errno_t __cdecl wmemcpy_s(__int16 *_S1, rsize_t _N1, const __int16 *_S2, rsize_t _N);
__int16 *__cdecl wmemmove(__int16 *_S1, const __int16 *_S2, size_t _N);
errno_t __cdecl wmemmove_s(__int16 *_S1, rsize_t _N1, const __int16 *_S2, rsize_t _N);
__int16 *__cdecl wmemset(__int16 *_S, __int16 _C, size_t _N);
flags_t word_flag(void);
int wprintf(const __int16 *const _Format, ...);
int wprintf_s(const __int16 *const _Format, ...);
int __cdecl write(int _FileHandle, const void *_Buf, unsigned int _MaxCharCount);
ssize_t __cdecl write_dbg_memory(ea_t ea, const void *buffer, size_t size);
void __cdecl write_struc_path(ea_t ea, int idx, const tid_t *path, int plen, adiff_t delta);
uint64 __cdecl write_tinfo_bitfield_value(uint32 typid, uint64 dst, uint64 v, int bitoff);
int __cdecl writebytes(int h, uint32 l, int size, bool mf);
int wscanf(const __int16 *const _Format, ...);
int wscanf_s(const __int16 *const _Format, ...);
bool __cdecl xrefblk_t_first_from(xrefblk_t *, ea_t from, int flags);
bool __cdecl xrefblk_t_first_to(xrefblk_t *, ea_t to, int flags);
bool __cdecl xrefblk_t_next_from(xrefblk_t *);
bool __cdecl xrefblk_t_next_to(xrefblk_t *);
char __cdecl xrefchar(char xrtype);
double __cdecl y0(double _X);
double __cdecl y1(double _X);
double __cdecl yn(int _X, double _Y);
flags_t yword_flag(void);
int __cdecl zip_deflate(void *ud, ssize_t (__cdecl *file_reader)(void *, void *, size_t), ssize_t (__cdecl *file_writer)(void *, const void *, size_t));
int __cdecl zip_inflate(void *ud, ssize_t (__cdecl *file_reader)(void *, void *, size_t), ssize_t (__cdecl *file_writer)(void *, const void *, size_t));
flags_t zword_flag(void);
abs_t abs_no;
abs_t abs_unk;
abs_t abs_yes;
idb_event::event_code_t adding_segm;
idb_event::event_code_t allsegs_moved;
idb_event::event_code_t auto_empty;
idb_event::event_code_t auto_empty_finally;
beep_t beep_default;
idb_event::event_code_t bookmark_changed;
idb_event::event_code_t byte_patched;
idb_event::event_code_t callee_addr_changed;
idb_event::event_code_t changing_cmt;
idb_event::event_code_t changing_enum_bf;
idb_event::event_code_t changing_enum_cmt;
idb_event::event_code_t changing_op_ti;
idb_event::event_code_t changing_op_type;
idb_event::event_code_t changing_range_cmt;
idb_event::event_code_t changing_segm_class;
idb_event::event_code_t changing_segm_end;
idb_event::event_code_t changing_segm_name;
idb_event::event_code_t changing_segm_start;
idb_event::event_code_t changing_struc_align;
idb_event::event_code_t changing_struc_cmt;
idb_event::event_code_t changing_struc_member;
idb_event::event_code_t changing_ti;
choose_type_t chtype_entry;
choose_type_t chtype_enum;
choose_type_t chtype_enum_by_value;
choose_type_t chtype_enum_by_value_and_size;
choose_type_t chtype_func;
choose_type_t chtype_generic;
choose_type_t chtype_idasgn;
choose_type_t chtype_idatil;
choose_type_t chtype_name;
choose_type_t chtype_segm;
choose_type_t chtype_srcp;
choose_type_t chtype_stkvar_xref;
choose_type_t chtype_strpath;
choose_type_t chtype_struc;
choose_type_t chtype_xref;
idb_event::event_code_t closebase;
idb_event::event_code_t cmt_changed;
idb_event::event_code_t compiler_changed;
dbg_notification_t dbg_bpt;
dbg_notification_t dbg_bpt_changed;
dbg_notification_t dbg_exception;
dbg_notification_t dbg_finished_loading_bpts;
dbg_notification_t dbg_information;
dbg_notification_t dbg_last;
dbg_notification_t dbg_library_load;
dbg_notification_t dbg_library_unload;
dbg_notification_t dbg_null;
dbg_notification_t dbg_process_attach;
dbg_notification_t dbg_process_detach;
dbg_notification_t dbg_process_exit;
dbg_notification_t dbg_process_start;
dbg_notification_t dbg_request_error;
dbg_notification_t dbg_run_to;
dbg_notification_t dbg_started_loading_bpts;
dbg_notification_t dbg_step_into;
dbg_notification_t dbg_step_over;
dbg_notification_t dbg_step_until_ret;
dbg_notification_t dbg_suspend_process;
dbg_notification_t dbg_thread_exit;
dbg_notification_t dbg_thread_start;
dbg_notification_t dbg_trace;
form_actions_t::dlgbtn_t dbt_cancel;
form_actions_t::dlgbtn_t dbt_no;
form_actions_t::dlgbtn_t dbt_yes;
idb_event::event_code_t deleting_enum;
idb_event::event_code_t deleting_enum_member;
idb_event::event_code_t deleting_func;
idb_event::event_code_t deleting_func_tail;
idb_event::event_code_t deleting_segm;
idb_event::event_code_t deleting_struc;
idb_event::event_code_t deleting_struc_member;
idb_event::event_code_t deleting_tryblks;
std::float_denorm_style denorm_absent;
std::float_denorm_style denorm_indeterminate;
std::float_denorm_style denorm_present;
idb_event::event_code_t destroyed_items;
idb_event::event_code_t determined_main;
idb_event::event_code_t dirtree_link;
idb_event::event_code_t dirtree_mkdir;
idb_event::event_code_t dirtree_move;
idb_event::event_code_t dirtree_rank;
idb_event::event_code_t dirtree_rmdir;
idb_event::event_code_t dirtree_rminode;
idb_event::event_code_t dirtree_segm_moved;
hexplace_gen_t::data_kind_t dk_addr_names;
hexplace_gen_t::data_kind_t dk_addr_text;
hexplace_gen_t::data_kind_t dk_float;
hexplace_gen_t::data_kind_t dk_int;
dref_t dr_I;
dref_t dr_O;
dref_t dr_R;
dref_t dr_S;
dref_t dr_T;
dref_t dr_U;
dref_t dr_W;
edge_type_t edge_back;
edge_type_t edge_cross;
edge_type_t edge_error;
edge_type_t edge_forward;
edge_type_t edge_subgraph;
edge_type_t edge_tree;
idb_event::event_code_t enum_bf_changed;
idb_event::event_code_t enum_cmt_changed;
idb_event::event_code_t enum_created;
idb_event::event_code_t enum_deleted;
idb_event::event_code_t enum_flag_changed;
idb_event::event_code_t enum_member_created;
idb_event::event_code_t enum_member_deleted;
idb_event::event_code_t enum_ordinal_changed;
idb_event::event_code_t enum_renamed;
idb_event::event_code_t enum_width_changed;
processor_t::event_t ev_add_cref;
processor_t::event_t ev_add_dref;
processor_t::event_t ev_adjust_argloc;
processor_t::event_t ev_adjust_libfunc_ea;
processor_t::event_t ev_adjust_refinfo;
processor_t::event_t ev_ana_insn;
processor_t::event_t ev_analyze_prolog;
debugger_t::event_t ev_appcall;
processor_t::event_t ev_arch_changed;
processor_t::event_t ev_arg_addrs_ready;
processor_t::event_t ev_asm_installed;
processor_t::event_t ev_assemble;
debugger_t::event_t ev_attach_process;
processor_t::event_t ev_auto_queue_empty;
debugger_t::event_t ev_bin_search;
processor_t::event_t ev_broadcast;
processor_t::event_t ev_calc_arglocs;
processor_t::event_t ev_calc_cdecl_purged_bytes;
processor_t::event_t ev_calc_next_eas;
processor_t::event_t ev_calc_purged_bytes;
processor_t::event_t ev_calc_retloc;
processor_t::event_t ev_calc_spdelta;
processor_t::event_t ev_calc_step_over;
processor_t::event_t ev_calc_switch_cases;
processor_t::event_t ev_calc_varglocs;
processor_t::event_t ev_calcrel;
processor_t::event_t ev_can_have_type;
debugger_t::event_t ev_check_bpt;
processor_t::event_t ev_clean_tbit;
debugger_t::event_t ev_cleanup_appcall;
debugger_t::event_t ev_close_file;
processor_t::event_t ev_cmp_operands;
processor_t::event_t ev_coagulate;
processor_t::event_t ev_coagulate_dref;
processor_t::event_t ev_create_flat_group;
processor_t::event_t ev_create_func_frame;
processor_t::event_t ev_create_merge_handlers;
processor_t::event_t ev_create_switch_xrefs;
processor_t::event_t ev_creating_segm;
debugger_t::event_t ev_dbg_enable_trace;
processor_t::event_t ev_decorate_name;
processor_t::event_t ev_del_cref;
processor_t::event_t ev_del_dref;
processor_t::event_t ev_delay_slot_insn;
processor_t::event_t ev_demangle_name;
debugger_t::event_t ev_detach_process;
processor_t::event_t ev_emu_insn;
processor_t::event_t ev_endbinary;
processor_t::event_t ev_ending_undo;
processor_t::event_t ev_equal_reglocs;
debugger_t::event_t ev_eval_lowcnd;
debugger_t::event_t ev_exit_process;
processor_t::event_t ev_extract_address;
processor_t::event_t ev_find_op_value;
processor_t::event_t ev_find_reg_value;
processor_t::event_t ev_func_bounds;
processor_t::event_t ev_gen_asm_or_lst;
processor_t::event_t ev_gen_map_file;
processor_t::event_t ev_gen_regvar_def;
processor_t::event_t ev_gen_src_file_lnnum;
processor_t::event_t ev_gen_stkvar_def;
processor_t::event_t ev_get_abi_info;
processor_t::event_t ev_get_autocmt;
processor_t::event_t ev_get_bg_color;
processor_t::event_t ev_get_cc_regs;
processor_t::event_t ev_get_code16_mode;
processor_t::event_t ev_get_dbr_opnum;
debugger_t::event_t ev_get_debapp_attrs;
debugger_t::event_t ev_get_debmod_extensions;
debugger_t::event_t ev_get_debug_event;
processor_t::event_t ev_get_default_enum_size;
processor_t::event_t ev_get_frame_retsize;
processor_t::event_t ev_get_idd_opinfo;
processor_t::event_t ev_get_macro_insn_head;
debugger_t::event_t ev_get_memory_info;
processor_t::event_t ev_get_operand_string;
debugger_t::event_t ev_get_processes;
processor_t::event_t ev_get_procmod;
processor_t::event_t ev_get_reg_accesses;
processor_t::event_t ev_get_reg_info;
processor_t::event_t ev_get_reg_name;
processor_t::event_t ev_get_simd_types;
debugger_t::event_t ev_get_srcinfo_path;
processor_t::event_t ev_get_stkarg_area_info;
processor_t::event_t ev_get_stkvar_scale_factor;
processor_t::event_t ev_getreg;
processor_t::event_t ev_init;
debugger_t::event_t ev_init_debugger;
processor_t::event_t ev_insn_reads_tbit;
processor_t::event_t ev_is_align_insn;
processor_t::event_t ev_is_alloca_probe;
processor_t::event_t ev_is_basic_block_end;
processor_t::event_t ev_is_call_insn;
processor_t::event_t ev_is_cond_insn;
processor_t::event_t ev_is_control_flow_guard;
processor_t::event_t ev_is_far_jump;
processor_t::event_t ev_is_indirect_jump;
processor_t::event_t ev_is_insn_table_jump;
processor_t::event_t ev_is_jump_func;
processor_t::event_t ev_is_ret_insn;
processor_t::event_t ev_is_sane_insn;
processor_t::event_t ev_is_sp_based;
processor_t::event_t ev_is_switch;
debugger_t::event_t ev_is_tracing_enabled;
processor_t::event_t ev_last_cb_before_debugger;
processor_t::event_t ev_last_cb_before_loader;
processor_t::event_t ev_last_cb_before_type_callbacks;
processor_t::event_t ev_loader;
processor_t::event_t ev_loader_elf_machine;
processor_t::event_t ev_lower_func_type;
debugger_t::event_t ev_map_address;
processor_t::event_t ev_max_ptr_size;
processor_t::event_t ev_may_be_func;
processor_t::event_t ev_may_show_sreg;
processor_t::event_t ev_moving_segm;
processor_t::event_t ev_newasm;
processor_t::event_t ev_newbinary;
processor_t::event_t ev_newfile;
processor_t::event_t ev_newprc;
processor_t::event_t ev_next_exec_insn;
processor_t::event_t ev_obsolete1;
processor_t::event_t ev_obsolete2;
processor_t::event_t ev_oldfile;
debugger_t::event_t ev_open_file;
processor_t::event_t ev_out_assumes;
processor_t::event_t ev_out_data;
processor_t::event_t ev_out_footer;
processor_t::event_t ev_out_header;
processor_t::event_t ev_out_insn;
processor_t::event_t ev_out_label;
processor_t::event_t ev_out_mnem;
processor_t::event_t ev_out_operand;
processor_t::event_t ev_out_segend;
processor_t::event_t ev_out_segstart;
processor_t::event_t ev_out_special_item;
processor_t::event_t ev_privrange_changed;
debugger_t::event_t ev_read_file;
debugger_t::event_t ev_read_memory;
debugger_t::event_t ev_read_registers;
processor_t::event_t ev_realcvt;
debugger_t::event_t ev_rebase_if_required_to;
processor_t::event_t ev_rename;
processor_t::event_t ev_replaying_undo;
debugger_t::event_t ev_request_pause;
debugger_t::event_t ev_resume;
debugger_t::event_t ev_rexec;
debugger_t::event_t ev_send_ioctl;
processor_t::event_t ev_set_code16_mode;
debugger_t::event_t ev_set_exception_info;
processor_t::event_t ev_set_idp_options;
processor_t::event_t ev_set_proc_options;
debugger_t::event_t ev_set_resume_mode;
processor_t::event_t ev_setup_til;
debugger_t::event_t ev_start_process;
processor_t::event_t ev_str2reg;
debugger_t::event_t ev_suspended;
processor_t::event_t ev_term;
debugger_t::event_t ev_term_debugger;
debugger_t::event_t ev_thread_continue;
debugger_t::event_t ev_thread_get_sreg_base;
debugger_t::event_t ev_thread_suspend;
processor_t::event_t ev_treat_hindering_item;
processor_t::event_t ev_undefine;
debugger_t::event_t ev_update_bpts;
debugger_t::event_t ev_update_call_stack;
debugger_t::event_t ev_update_lowcnds;
processor_t::event_t ev_use_arg_types;
processor_t::event_t ev_use_regarg_type;
processor_t::event_t ev_use_stkarg_type;
processor_t::event_t ev_validate_flirt_func;
processor_t::event_t ev_verify_noreturn;
processor_t::event_t ev_verify_sp;
debugger_t::event_t ev_write_file;
debugger_t::event_t ev_write_memory;
debugger_t::event_t ev_write_register;
idb_event::event_code_t expanding_struc;
idb_event::event_code_t extlang_changed;
idb_event::event_code_t extra_cmt_changed;
filetype_t f_AIXAR;
filetype_t f_AOUT;
filetype_t f_AR;
filetype_t f_BIN;
filetype_t f_COFF;
filetype_t f_COM;
filetype_t f_COM_old;
filetype_t f_DRV;
filetype_t f_ELF;
filetype_t f_EXE;
filetype_t f_EXE_old;
filetype_t f_HEX;
filetype_t f_LE;
filetype_t f_LOADER;
filetype_t f_LX;
filetype_t f_MACHO;
filetype_t f_MEX;
filetype_t f_NLM;
filetype_t f_OMF;
filetype_t f_OMFLIB;
filetype_t f_PE;
filetype_t f_PRC;
filetype_t f_PSXOBJ;
filetype_t f_SREC;
filetype_t f_W32RUN;
filetype_t f_WIN;
filetype_t f_ZIP;
fc_block_type_t fcb_cndret;
fc_block_type_t fcb_enoret;
fc_block_type_t fcb_error;
fc_block_type_t fcb_extern;
fc_block_type_t fcb_indjump;
fc_block_type_t fcb_noret;
fc_block_type_t fcb_normal;
fc_block_type_t fcb_ret;
cref_t fl_CF;
cref_t fl_CN;
cref_t fl_F;
cref_t fl_JF;
cref_t fl_JN;
cref_t fl_U;
cref_t fl_USobsolete;
idb_event::event_code_t flow_chart_created;
idb_event::event_code_t frame_deleted;
idb_event::event_code_t func_added;
idb_event::event_code_t func_deleted;
idb_event::event_code_t func_noret_changed;
idb_event::event_code_t func_tail_appended;
idb_event::event_code_t func_tail_deleted;
idb_event::event_code_t func_updated;
graph_item_type_t git_edge;
graph_item_type_t git_elp;
graph_item_type_t git_node;
graph_item_type_t git_none;
graph_item_type_t git_text;
graph_item_type_t git_tool;
graph_notification_t grcode_attach_menu_item;
graph_notification_t grcode_calculating_layout;
graph_notification_t grcode_center_on;
graph_notification_t grcode_change_group_visibility;
graph_notification_t grcode_changed_graph;
graph_notification_t grcode_clear;
graph_notification_t grcode_clicked;
graph_notification_t grcode_create_circle_layout;
graph_notification_t grcode_create_digraph_layout;
graph_notification_t grcode_create_disasm_graph1;
graph_notification_t grcode_create_disasm_graph2;
graph_notification_t grcode_create_graph_viewer;
graph_notification_t grcode_create_group;
graph_notification_t grcode_create_mutable_graph;
graph_notification_t grcode_create_tree_layout;
graph_notification_t grcode_create_user_graph_place;
graph_notification_t grcode_creating_group;
graph_notification_t grcode_dblclicked;
graph_notification_t grcode_del_custom_layout;
graph_notification_t grcode_del_node_info;
graph_notification_t grcode_delete_group;
graph_notification_t grcode_delete_mutable_graph;
graph_notification_t grcode_deleting_group;
graph_notification_t grcode_destroyed;
graph_notification_t grcode_edge_infos_wrapper_clear;
graph_notification_t grcode_edge_infos_wrapper_copy;
graph_notification_t grcode_empty;
graph_notification_t grcode_find_subgraph_node;
graph_notification_t grcode_fit_window;
graph_notification_t grcode_get_curnode;
graph_notification_t grcode_get_custom_layout;
graph_notification_t grcode_get_gli;
graph_notification_t grcode_get_graph_groups;
graph_notification_t grcode_get_graph_viewer;
graph_notification_t grcode_get_node_info;
graph_notification_t grcode_get_node_representative;
graph_notification_t grcode_get_selection;
graph_notification_t grcode_get_viewer_graph;
graph_notification_t grcode_gotfocus;
graph_notification_t grcode_group_visibility;
graph_notification_t grcode_is_visible_node;
graph_notification_t grcode_layout_calculated;
graph_notification_t grcode_lostfocus;
graph_notification_t grcode_node_qty;
graph_notification_t grcode_nrect;
graph_notification_t grcode_refresh_viewer;
graph_notification_t grcode_reserved;
graph_notification_t grcode_reserved2;
graph_notification_t grcode_set_custom_layout;
graph_notification_t grcode_set_edge;
graph_notification_t grcode_set_gli;
graph_notification_t grcode_set_graph_groups;
graph_notification_t grcode_set_node_info;
graph_notification_t grcode_set_titlebar_height;
graph_notification_t grcode_set_viewer_graph;
graph_notification_t grcode_user_draw;
graph_notification_t grcode_user_hint;
graph_notification_t grcode_user_refresh;
graph_notification_t grcode_user_size;
graph_notification_t grcode_user_text;
graph_notification_t grcode_user_title;
graph_notification_t grcode_viewer_create_groups;
graph_notification_t grcode_viewer_create_groups_vec;
graph_notification_t grcode_viewer_delete_groups;
graph_notification_t grcode_viewer_delete_groups_vec;
graph_notification_t grcode_viewer_groups_visibility;
graph_notification_t grcode_viewer_groups_visibility_vec;
idb_event::event_code_t idasgn_loaded;
input_event_kind_t iek_key_press;
input_event_kind_t iek_key_release;
input_event_kind_t iek_mouse_button_press;
input_event_kind_t iek_mouse_button_release;
input_event_kind_t iek_mouse_wheel;
input_event_kind_t iek_shortcut;
input_event_kind_t iek_unknown;
hexplace_gen_t::int_format_t if_hex;
hexplace_gen_t::int_format_t if_signed;
hexplace_gen_t::int_format_t if_unsigned;
idb_event::event_code_t item_color_changed;
idb_event::event_code_t kernel_config_loaded;
locchange_reason_t lcr_auto_switch;
locchange_reason_t lcr_goto;
locchange_reason_t lcr_internal;
locchange_reason_t lcr_jump;
locchange_reason_t lcr_navigate;
locchange_reason_t lcr_scroll;
locchange_reason_t lcr_unknown;
locchange_reason_t lcr_user_switch;
idb_event::event_code_t loader_finished;
idb_event::event_code_t local_types_changed;
idb_event::event_code_t make_code;
idb_event::event_code_t make_data;
mbox_kind_t mbox_error;
mbox_kind_t mbox_feedback;
mbox_kind_t mbox_filestruct;
mbox_kind_t mbox_hide;
mbox_kind_t mbox_info;
mbox_kind_t mbox_internal;
mbox_kind_t mbox_nomem;
mbox_kind_t mbox_readerror;
mbox_kind_t mbox_replace;
mbox_kind_t mbox_wait;
mbox_kind_t mbox_warning;
mbox_kind_t mbox_writeerror;
std::memory_order memory_order_acq_rel;
std::memory_order memory_order_acquire;
std::memory_order memory_order_consume;
std::memory_order memory_order_relaxed;
std::memory_order memory_order_release;
std::memory_order memory_order_seq_cst;
msg_notification_t msg_activated;
msg_notification_t msg_click;
msg_notification_t msg_closed;
msg_notification_t msg_dblclick;
msg_notification_t msg_deactivated;
msg_notification_t msg_keydown;
navaddr_type_t nat_auto;
navaddr_type_t nat_cod;
navaddr_type_t nat_cur;
navaddr_type_t nat_dat;
navaddr_type_t nat_err;
navaddr_type_t nat_ext;
navaddr_type_t nat_fun;
navaddr_type_t nat_gap;
navaddr_type_t nat_hlo;
navaddr_type_t nat_last;
navaddr_type_t nat_lib;
navaddr_type_t nat_lum;
navaddr_type_t nat_und;
encoder_t::notify_recerr_t nr_none;
encoder_t::notify_recerr_t nr_once;
idb_event::event_code_t op_ti_changed;
idb_event::event_code_t op_type_changed;
idb_event::event_code_t range_cmt_changed;
regval_type_t reg_binary;
regval_type_t reg_dword;
regval_type_t reg_sz;
regval_type_t reg_unknown;
idb_event::event_code_t renamed;
idb_event::event_code_t renaming_enum;
idb_event::event_code_t renaming_struc;
idb_event::event_code_t renaming_struc_member;
std::float_round_style round_indeterminate;
std::float_round_style round_to_nearest;
std::float_round_style round_toward_infinity;
std::float_round_style round_toward_neg_infinity;
std::float_round_style round_toward_zero;
idb_event::event_code_t savebase;
sclass_t sc_auto;
sclass_t sc_ext;
sclass_t sc_friend;
sclass_t sc_reg;
sclass_t sc_stat;
sclass_t sc_type;
sclass_t sc_unk;
sclass_t sc_virt;
idb_event::event_code_t segm_added;
idb_event::event_code_t segm_attrs_updated;
idb_event::event_code_t segm_class_changed;
idb_event::event_code_t segm_deleted;
idb_event::event_code_t segm_end_changed;
idb_event::event_code_t segm_moved;
idb_event::event_code_t segm_name_changed;
idb_event::event_code_t segm_start_changed;
idb_event::event_code_t set_func_end;
idb_event::event_code_t set_func_start;
idb_event::event_code_t sgr_changed;
idb_event::event_code_t sgr_deleted;
idb_event::event_code_t stkpnts_changed;
idb_event::event_code_t struc_align_changed;
idb_event::event_code_t struc_cmt_changed;
idb_event::event_code_t struc_created;
idb_event::event_code_t struc_deleted;
idb_event::event_code_t struc_expanded;
idb_event::event_code_t struc_member_changed;
idb_event::event_code_t struc_member_created;
idb_event::event_code_t struc_member_deleted;
idb_event::event_code_t struc_member_renamed;
idb_event::event_code_t struc_renamed;
idb_event::event_code_t tail_owner_changed;
tev_type_t tev_bpt;
tev_type_t tev_call;
tev_type_t tev_event;
tev_type_t tev_insn;
tev_type_t tev_max;
tev_type_t tev_mem;
tev_type_t tev_none;
tev_type_t tev_ret;
idb_event::event_code_t thunk_func_created;
idb_event::event_code_t ti_changed;
idb_event::event_code_t tryblks_updated;
ui_notification_t ui_activate_widget;
ui_notification_t ui_add_idckey;
ui_notification_t ui_addons;
ui_notification_t ui_analyzer_options;
ui_notification_t ui_ask_addr;
ui_notification_t ui_ask_buttons;
ui_notification_t ui_ask_file;
ui_notification_t ui_ask_form;
ui_notification_t ui_ask_long;
ui_notification_t ui_ask_seg;
ui_notification_t ui_ask_str;
ui_notification_t ui_ask_text;
ui_notification_t ui_attach_action_to_menu;
ui_notification_t ui_attach_action_to_popup;
ui_notification_t ui_attach_action_to_toolbar;
ui_notification_t ui_attach_dynamic_action_to_popup;
ui_notification_t ui_banner;
ui_notification_t ui_beep;
ui_notification_t ui_broadcast;
ui_notification_t ui_cancel_exec_request;
ui_notification_t ui_cancel_thread_exec_requests;
ui_notification_t ui_choose;
ui_notification_t ui_choose_bookmark;
ui_notification_t ui_chooser_default_enter;
ui_notification_t ui_close_chooser;
ui_notification_t ui_close_widget;
ui_notification_t ui_clr_cancelled;
ui_notification_t ui_copywarn;
ui_notification_t ui_create_code_viewer;
ui_notification_t ui_create_custom_viewer;
ui_notification_t ui_create_desktop_widget;
ui_notification_t ui_create_empty_widget;
ui_notification_t ui_create_menu;
ui_notification_t ui_create_source_viewer;
ui_notification_t ui_create_toolbar;
ui_notification_t ui_current_widget_changed;
ui_notification_t ui_custom_viewer_jump;
ui_notification_t ui_custom_viewer_set_userdata;
ui_notification_t ui_database_closed;
ui_notification_t ui_database_inited;
ui_notification_t ui_dbg_add_bpt;
ui_notification_t ui_dbg_add_bpt_tev;
ui_notification_t ui_dbg_add_call_tev;
ui_notification_t ui_dbg_add_debug_event;
ui_notification_t ui_dbg_add_insn_tev;
ui_notification_t ui_dbg_add_many_tevs;
ui_notification_t ui_dbg_add_oldbpt;
ui_notification_t ui_dbg_add_path_mapping;
ui_notification_t ui_dbg_add_ret_tev;
ui_notification_t ui_dbg_add_tev;
ui_notification_t ui_dbg_add_thread;
ui_notification_t ui_dbg_add_vmod;
ui_notification_t ui_dbg_attach_process;
ui_notification_t ui_dbg_begin;
ui_notification_t ui_dbg_bin_search;
ui_notification_t ui_dbg_bring_to_front;
ui_notification_t ui_dbg_change_bptlocs;
ui_notification_t ui_dbg_check_bpt;
ui_notification_t ui_dbg_choose_trace_file;
ui_notification_t ui_dbg_clear_requests_queue;
ui_notification_t ui_dbg_clear_trace;
ui_notification_t ui_dbg_collect_stack_trace;
ui_notification_t ui_dbg_compare_bpt_locs;
ui_notification_t ui_dbg_continue_process;
ui_notification_t ui_dbg_define_exception;
ui_notification_t ui_dbg_del_bpt;
ui_notification_t ui_dbg_del_bptgrp;
ui_notification_t ui_dbg_del_oldbpt;
ui_notification_t ui_dbg_del_thread;
ui_notification_t ui_dbg_del_vmod;
ui_notification_t ui_dbg_detach_process;
ui_notification_t ui_dbg_diff_trace_file;
ui_notification_t ui_dbg_edit_manual_regions;
ui_notification_t ui_dbg_enable_bblk_trace;
ui_notification_t ui_dbg_enable_bpt;
ui_notification_t ui_dbg_enable_bptgrp;
ui_notification_t ui_dbg_enable_func_trace;
ui_notification_t ui_dbg_enable_insn_trace;
ui_notification_t ui_dbg_enable_manual_regions;
ui_notification_t ui_dbg_enable_oldbpt;
ui_notification_t ui_dbg_enable_step_trace;
ui_notification_t ui_dbg_end;
ui_notification_t ui_dbg_exit_process;
ui_notification_t ui_dbg_find_bpt;
ui_notification_t ui_dbg_for_all_bpts;
ui_notification_t ui_dbg_get_bblk_trace_options;
ui_notification_t ui_dbg_get_bpt;
ui_notification_t ui_dbg_get_bpt_group;
ui_notification_t ui_dbg_get_bpt_qty;
ui_notification_t ui_dbg_get_bpt_tev_ea;
ui_notification_t ui_dbg_get_bptloc_string;
ui_notification_t ui_dbg_get_call_tev_callee;
ui_notification_t ui_dbg_get_current_source_file;
ui_notification_t ui_dbg_get_current_source_line;
ui_notification_t ui_dbg_get_current_thread;
ui_notification_t ui_dbg_get_debug_event;
ui_notification_t ui_dbg_get_event_cond;
ui_notification_t ui_dbg_get_first_module;
ui_notification_t ui_dbg_get_func_trace_options;
ui_notification_t ui_dbg_get_global_var;
ui_notification_t ui_dbg_get_grp_bpts;
ui_notification_t ui_dbg_get_insn_tev_reg_mem;
ui_notification_t ui_dbg_get_insn_tev_reg_result;
ui_notification_t ui_dbg_get_insn_tev_reg_result_i;
ui_notification_t ui_dbg_get_insn_tev_reg_val;
ui_notification_t ui_dbg_get_insn_tev_reg_val_i;
ui_notification_t ui_dbg_get_insn_trace_options;
ui_notification_t ui_dbg_get_ip_val;
ui_notification_t ui_dbg_get_local_var;
ui_notification_t ui_dbg_get_local_vars;
ui_notification_t ui_dbg_get_manual_regions;
ui_notification_t ui_dbg_get_memory_info;
ui_notification_t ui_dbg_get_module_info;
ui_notification_t ui_dbg_get_next_module;
ui_notification_t ui_dbg_get_process_options;
ui_notification_t ui_dbg_get_process_state;
ui_notification_t ui_dbg_get_processes;
ui_notification_t ui_dbg_get_reg_info;
ui_notification_t ui_dbg_get_reg_val;
ui_notification_t ui_dbg_get_reg_val_i;
ui_notification_t ui_dbg_get_reg_value_type;
ui_notification_t ui_dbg_get_ret_tev_return;
ui_notification_t ui_dbg_get_running_notification;
ui_notification_t ui_dbg_get_running_request;
ui_notification_t ui_dbg_get_sp_val;
ui_notification_t ui_dbg_get_srcinfo_provider;
ui_notification_t ui_dbg_get_step_trace_options;
ui_notification_t ui_dbg_get_tev_ea;
ui_notification_t ui_dbg_get_tev_event;
ui_notification_t ui_dbg_get_tev_info;
ui_notification_t ui_dbg_get_tev_memory_info;
ui_notification_t ui_dbg_get_tev_qty;
ui_notification_t ui_dbg_get_tev_tid;
ui_notification_t ui_dbg_get_tev_type;
ui_notification_t ui_dbg_get_thread_qty;
ui_notification_t ui_dbg_get_trace_base_address;
ui_notification_t ui_dbg_get_trace_dynamic_register_set;
ui_notification_t ui_dbg_get_trace_file_desc;
ui_notification_t ui_dbg_get_trace_platform;
ui_notification_t ui_dbg_getn_bpt;
ui_notification_t ui_dbg_getn_thread;
ui_notification_t ui_dbg_getn_thread_name;
ui_notification_t ui_dbg_graph_trace;
ui_notification_t ui_dbg_handle_debug_event;
ui_notification_t ui_dbg_hide_all_bpts;
ui_notification_t ui_dbg_internal_appcall;
ui_notification_t ui_dbg_internal_cleanup_appcall;
ui_notification_t ui_dbg_internal_get_elang;
ui_notification_t ui_dbg_internal_get_sreg_base;
ui_notification_t ui_dbg_internal_ioctl;
ui_notification_t ui_dbg_internal_set_elang;
ui_notification_t ui_dbg_is_bblk_trace_enabled;
ui_notification_t ui_dbg_is_busy;
ui_notification_t ui_dbg_is_func_trace_enabled;
ui_notification_t ui_dbg_is_insn_trace_enabled;
ui_notification_t ui_dbg_is_step_trace_enabled;
ui_notification_t ui_dbg_is_valid_trace_file;
ui_notification_t ui_dbg_list_bptgrps;
ui_notification_t ui_dbg_load_dbg_dbginfo;
ui_notification_t ui_dbg_load_debugger;
ui_notification_t ui_dbg_load_trace_file;
ui_notification_t ui_dbg_map_source_file_path;
ui_notification_t ui_dbg_map_source_path;
ui_notification_t ui_dbg_modify_source_paths;
ui_notification_t ui_dbg_read_memory;
ui_notification_t ui_dbg_read_registers;
ui_notification_t ui_dbg_register_provider;
ui_notification_t ui_dbg_rename_bptgrp;
ui_notification_t ui_dbg_request_add_bpt;
ui_notification_t ui_dbg_request_add_oldbpt;
ui_notification_t ui_dbg_request_attach_process;
ui_notification_t ui_dbg_request_clear_trace;
ui_notification_t ui_dbg_request_continue_process;
ui_notification_t ui_dbg_request_del_bpt;
ui_notification_t ui_dbg_request_del_oldbpt;
ui_notification_t ui_dbg_request_detach_process;
ui_notification_t ui_dbg_request_enable_bblk_trace;
ui_notification_t ui_dbg_request_enable_bpt;
ui_notification_t ui_dbg_request_enable_func_trace;
ui_notification_t ui_dbg_request_enable_insn_trace;
ui_notification_t ui_dbg_request_enable_oldbpt;
ui_notification_t ui_dbg_request_enable_step_trace;
ui_notification_t ui_dbg_request_exit_process;
ui_notification_t ui_dbg_request_resume_thread;
ui_notification_t ui_dbg_request_run_to;
ui_notification_t ui_dbg_request_select_thread;
ui_notification_t ui_dbg_request_set_bblk_trace_options;
ui_notification_t ui_dbg_request_set_func_trace_options;
ui_notification_t ui_dbg_request_set_insn_trace_options;
ui_notification_t ui_dbg_request_set_reg_val;
ui_notification_t ui_dbg_request_set_resume_mode;
ui_notification_t ui_dbg_request_set_step_trace_options;
ui_notification_t ui_dbg_request_start_process;
ui_notification_t ui_dbg_request_step_into;
ui_notification_t ui_dbg_request_step_over;
ui_notification_t ui_dbg_request_step_until_ret;
ui_notification_t ui_dbg_request_suspend_process;
ui_notification_t ui_dbg_request_suspend_thread;
ui_notification_t ui_dbg_resume_thread;
ui_notification_t ui_dbg_retrieve_exceptions;
ui_notification_t ui_dbg_run_requests;
ui_notification_t ui_dbg_run_to;
ui_notification_t ui_dbg_save_trace_file;
ui_notification_t ui_dbg_select_thread;
ui_notification_t ui_dbg_set_bblk_trace_options;
ui_notification_t ui_dbg_set_bpt_group;
ui_notification_t ui_dbg_set_bptloc_group;
ui_notification_t ui_dbg_set_bptloc_string;
ui_notification_t ui_dbg_set_debugger_options;
ui_notification_t ui_dbg_set_event_cond;
ui_notification_t ui_dbg_set_func_trace_options;
ui_notification_t ui_dbg_set_highlight_trace_options;
ui_notification_t ui_dbg_set_insn_trace_options;
ui_notification_t ui_dbg_set_manual_regions;
ui_notification_t ui_dbg_set_process_options;
ui_notification_t ui_dbg_set_process_state;
ui_notification_t ui_dbg_set_reg_val;
ui_notification_t ui_dbg_set_reg_val_i;
ui_notification_t ui_dbg_set_remote_debugger;
ui_notification_t ui_dbg_set_resume_mode;
ui_notification_t ui_dbg_set_step_trace_options;
ui_notification_t ui_dbg_set_trace_base_address;
ui_notification_t ui_dbg_set_trace_dynamic_register_set;
ui_notification_t ui_dbg_set_trace_file_desc;
ui_notification_t ui_dbg_set_trace_platform;
ui_notification_t ui_dbg_set_trace_size;
ui_notification_t ui_dbg_srcdbg_request_step_into;
ui_notification_t ui_dbg_srcdbg_request_step_over;
ui_notification_t ui_dbg_srcdbg_request_step_until_ret;
ui_notification_t ui_dbg_srcdbg_step_into;
ui_notification_t ui_dbg_srcdbg_step_over;
ui_notification_t ui_dbg_srcdbg_step_until_ret;
ui_notification_t ui_dbg_start_process;
ui_notification_t ui_dbg_step_into;
ui_notification_t ui_dbg_step_over;
ui_notification_t ui_dbg_step_until_ret;
ui_notification_t ui_dbg_store_exceptions;
ui_notification_t ui_dbg_suspend_process;
ui_notification_t ui_dbg_suspend_thread;
ui_notification_t ui_dbg_unregister_provider;
ui_notification_t ui_dbg_update_bpt;
ui_notification_t ui_dbg_wait_for_next_event;
ui_notification_t ui_dbg_write_memory;
ui_notification_t ui_dbg_write_register;
ui_notification_t ui_debugger_menu_change;
ui_notification_t ui_delete_menu;
ui_notification_t ui_delete_toolbar;
ui_notification_t ui_desktop_applied;
ui_notification_t ui_destroy_custom_viewer;
ui_notification_t ui_destroying_plugmod;
ui_notification_t ui_destroying_procmod;
ui_notification_t ui_detach_action_from_menu;
ui_notification_t ui_detach_action_from_popup;
ui_notification_t ui_detach_action_from_toolbar;
ui_notification_t ui_display_widget;
ui_notification_t ui_ea_viewer_history_info;
ui_notification_t ui_ea_viewer_history_push_and_jump;
ui_notification_t ui_enable_chooser_item_attrs;
ui_notification_t ui_execute_sync;
ui_notification_t ui_execute_ui_requests;
ui_notification_t ui_execute_ui_requests_list;
ui_notification_t ui_find_widget;
ui_notification_t ui_finish_populating_widget_popup;
ui_notification_t ui_free_custom_icon;
ui_notification_t ui_gen_disasm_text;
ui_notification_t ui_gen_idanode_text;
ui_notification_t ui_genfile_callback;
ui_notification_t ui_get_action_attr;
ui_notification_t ui_get_active_modal_widget;
ui_notification_t ui_get_chooser_data;
ui_notification_t ui_get_chooser_item_attrs;
ui_notification_t ui_get_chooser_obj;
ui_notification_t ui_get_curline;
ui_notification_t ui_get_curplace;
ui_notification_t ui_get_current_viewer;
ui_notification_t ui_get_current_widget;
ui_notification_t ui_get_cursor;
ui_notification_t ui_get_custom_viewer_curline;
ui_notification_t ui_get_custom_viewer_hint;
ui_notification_t ui_get_custom_viewer_location;
ui_notification_t ui_get_custom_viewer_place_xcoord;
ui_notification_t ui_get_ea_hint;
ui_notification_t ui_get_highlight_2;
ui_notification_t ui_get_item_hint;
ui_notification_t ui_get_kernel_version;
ui_notification_t ui_get_key_code;
ui_notification_t ui_get_lines_rendering_info;
ui_notification_t ui_get_opnum;
ui_notification_t ui_get_output_curline;
ui_notification_t ui_get_output_cursor;
ui_notification_t ui_get_output_selected_text;
ui_notification_t ui_get_range_marker;
ui_notification_t ui_get_registered_actions;
ui_notification_t ui_get_renderer_type;
ui_notification_t ui_get_synced_group;
ui_notification_t ui_get_tab_size;
ui_notification_t ui_get_user_input_event;
ui_notification_t ui_get_viewer_place_type;
ui_notification_t ui_get_viewer_user_data;
ui_notification_t ui_get_widget_config;
ui_notification_t ui_get_widget_title;
ui_notification_t ui_get_widget_type;
ui_notification_t ui_get_window_id;
ui_notification_t ui_hexdumpea;
ui_notification_t ui_idcstart;
ui_notification_t ui_idcstop;
ui_notification_t ui_initing_database;
ui_notification_t ui_install_cli;
ui_notification_t ui_install_custom_datatype_menu;
ui_notification_t ui_install_custom_optype_menu;
ui_notification_t ui_is_idaq;
ui_notification_t ui_is_idaview;
ui_notification_t ui_is_msg_inited;
ui_notification_t ui_jump_in_custom_viewer;
ui_notification_t ui_jumpto;
ui_notification_t ui_last;
ui_notification_t ui_load_custom_icon;
ui_notification_t ui_load_custom_icon_file;
ui_notification_t ui_load_file;
ui_notification_t ui_lock_range_refresh;
ui_notification_t ui_lookup_key_code;
ui_notification_t ui_mbox;
ui_notification_t ui_msg;
ui_notification_t ui_msg_clear;
ui_notification_t ui_msg_get_lines;
ui_notification_t ui_msg_save;
ui_notification_t ui_navband_ea;
ui_notification_t ui_navband_pixel;
ui_notification_t ui_noabort;
ui_notification_t ui_null;
ui_notification_t ui_obsolete_dbg_save_bpts;
ui_notification_t ui_obsolete_del_idckey;
ui_notification_t ui_obsolete_display_widget;
ui_notification_t ui_obsolete_get_highlight;
ui_notification_t ui_obsolete_get_user_strlist_options;
ui_notification_t ui_obsolete_refresh_custom_code_viewer;
ui_notification_t ui_obsolete_set_nav_colorizer;
ui_notification_t ui_open_builtin;
ui_notification_t ui_open_form;
ui_notification_t ui_open_url;
ui_notification_t ui_plugin_loaded;
ui_notification_t ui_plugin_unloading;
ui_notification_t ui_populating_widget_popup;
ui_notification_t ui_postprocess_action;
ui_notification_t ui_preprocess_action;
ui_notification_t ui_process_action;
ui_notification_t ui_range;
ui_notification_t ui_read_range_selection;
ui_notification_t ui_read_selection;
ui_notification_t ui_ready_to_run;
ui_notification_t ui_refresh;
ui_notification_t ui_refresh_chooser;
ui_notification_t ui_refresh_choosers;
ui_notification_t ui_refresh_custom_viewer;
ui_notification_t ui_refresh_navband;
ui_notification_t ui_refreshmarked;
ui_notification_t ui_register_action;
ui_notification_t ui_register_timer;
ui_notification_t ui_repaint_qwidget;
ui_notification_t ui_restore_database_snapshot;
ui_notification_t ui_resume;
ui_notification_t ui_run_dbg;
ui_notification_t ui_saved;
ui_notification_t ui_saving;
ui_notification_t ui_screen_ea_changed;
ui_notification_t ui_screenea;
ui_notification_t ui_set_cancelled;
ui_notification_t ui_set_code_viewer_line_handlers;
ui_notification_t ui_set_custom_viewer_handler;
ui_notification_t ui_set_custom_viewer_handlers;
ui_notification_t ui_set_custom_viewer_mode;
ui_notification_t ui_set_custom_viewer_range;
ui_notification_t ui_set_dock_pos;
ui_notification_t ui_set_highlight;
ui_notification_t ui_set_mappings;
ui_notification_t ui_set_nav_colorizer;
ui_notification_t ui_set_renderer_type;
ui_notification_t ui_set_widget_config;
ui_notification_t ui_setidle;
ui_notification_t ui_setup_plugins_menu;
ui_notification_t ui_show_rename_dialog;
ui_notification_t ui_strchoose;
ui_notification_t ui_suspend;
ui_notification_t ui_sync_sources;
ui_notification_t ui_take_database_snapshot;
ui_notification_t ui_test_cancelled;
ui_notification_t ui_unlock_range_refresh;
ui_notification_t ui_unmarksel;
ui_notification_t ui_unrecognized_config_directive;
ui_notification_t ui_unregister_action;
ui_notification_t ui_unregister_timer;
ui_notification_t ui_update_action_attr;
ui_notification_t ui_update_file_history;
ui_notification_t ui_updated_actions;
ui_notification_t ui_updating_actions;
ui_notification_t ui_widget_closing;
ui_notification_t ui_widget_invisible;
ui_notification_t ui_widget_visible;
idb_event::event_code_t updating_tryblks;
idb_event::event_code_t upgraded;
view_notification_t view_activated;
view_notification_t view_click;
view_notification_t view_close;
view_notification_t view_created;
view_notification_t view_curpos;
view_notification_t view_dblclick;
view_notification_t view_deactivated;
view_notification_t view_keydown;
view_notification_t view_loc_changed;
view_notification_t view_mouse_moved;
view_notification_t view_mouse_over;
view_notification_t view_switched;
