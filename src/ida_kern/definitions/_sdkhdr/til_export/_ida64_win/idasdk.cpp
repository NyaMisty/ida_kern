#include "../common.h"

/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'win_64'
*/

struct std__exception_vtbl;
struct std__nested_exception_vtbl;
struct std___Iterator_base12;
struct std___Container_base12;
struct qrefcnt_obj_t_vtbl;
struct plugmod_t;
struct post_event_visitor_t_vtbl;
struct altadjust_visitor_t_vtbl;
struct stkpnt_t;
struct regvar_t;
struct regarg_t;
struct outctx_base_t_vtbl;
struct procmod_t;
struct event_listener_t_vtbl;
struct asm_t;
struct reg_access_t;
struct call_stack_info_t;
struct scattered_aloc_t;
struct argpart_t;
struct rrel_t;
struct funcarg_t;
struct reg_info_t;
struct regobj_t;
struct bytes_t;
struct instruc_t;
struct user_defined_prefix_t_vtbl;
struct encoder_t_vtbl;
struct file_enumerator_t_vtbl;
struct ioports_fallback_t_vtbl;
struct choose_ioport_parser_t_vtbl;
struct generic_linput_t_vtbl;
struct snapshot_t;
struct place_t;
struct place_t_vtbl;
struct hexplace_gen_t_vtbl;
struct chooser_base_t_vtbl;
struct exec_request_t_vtbl;
struct ui_request_t_vtbl;
struct action_handler_t_vtbl;
struct form_actions_t_vtbl;
struct macro_constructor_t_vtbl;
struct plugmod_t_vtbl;
struct bpt_visitor_t_vtbl;
struct srcinfo_provider_t_vtbl;
struct dirspec_t_vtbl;
struct dirtree_cursor_t;
struct dirtree_visitor_t_vtbl;
struct enum_member_visitor_t_vtbl;
struct highlighter_cbs_t_vtbl;
struct syntax_highlighter_t;
struct syntax_highlighter_t_vtbl;
struct extlang_visitor_t_vtbl;
struct idc_resolver_t_vtbl;
struct std___Tree_node_int__void__P_;
struct std___Tree_node_std__pair_const_int__int___void__P_;
struct gdl_graph_t_vtbl;
struct qbasic_block_t;
struct graph_node_visitor_t_vtbl;
struct graph_path_visitor_t_vtbl;
struct graph_visitor_t_vtbl;
struct ida_syntax_highlighter_t__keywords_style_t;
struct ida_syntax_highlighter_t__plain_char_ptr_t;
struct ida_syntax_highlighter_t__multicmt_t;
struct aloc_visitor_t_vtbl;
struct const_aloc_visitor_t_vtbl;
struct udt_member_t;
struct enum_member_t;
struct tinfo_visitor_t_vtbl;
struct argtinfo_helper_t_vtbl;
struct lowertype_helper_t_vtbl;
struct valstrs_t;
struct text_sink_t_vtbl;
struct predicate_t_vtbl;
struct jump_pattern_t_vtbl;
struct simple_bfi_t;
struct std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P_;
struct std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P_;
struct segm_move_info_t;
struct _EXCEPTION_RECORD;
struct _CONTEXT;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
struct _UNWIND_HISTORY_TABLE;
struct _RTL_CRITICAL_SECTION;
struct tagCREATESTRUCTA;
struct tagCREATESTRUCTW;
struct rpc_engine_t;
struct network_client_handler_t_vtbl;
struct client_handlers_list_t_vtbl;
struct std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P_;
struct base_dispatcher_t_vtbl;
struct rpc_packet_data_t_vtbl;
struct rpc_packet_type_desc_t;
struct rpc_engine_t_vtbl;
struct generic_client_t_vtbl;
struct jvalue_t;
struct kvp_t;
struct std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P_;
struct struct_field_visitor_t_vtbl;

/* 1 */
typedef unsigned __int64 uintptr_t;

/* 2 */
typedef char *va_list;

/* 3 */
typedef unsigned __int64 size_t;

/* 4 */
typedef __int64 ptrdiff_t;

/* 5 */
typedef __int64 intptr_t;

/* 6 */
typedef bool __vcrt_bool;

/* 7 */
typedef bool __crt_bool;

/* 8 */
typedef int errno_t;

/* 9 */
typedef unsigned __int16 wint_t;

/* 10 */
typedef unsigned __int16 wctype_t;

/* 11 */
typedef __int32 __time32_t;

/* 12 */
typedef __int64 __time64_t;

/* 13 */
#pragma pack(push, 8)
struct __crt_locale_data_public
{
  const unsigned __int16 *_locale_pctype;
  int _locale_mb_cur_max;
  unsigned int _locale_lc_codepage;
};
#pragma pack(pop)

/* 15 */
struct __crt_locale_data;

/* 16 */
struct __crt_multibyte_data;

/* 14 */
#pragma pack(push, 8)
struct __crt_locale_pointers
{
  __crt_locale_data *locinfo;
  __crt_multibyte_data *mbcinfo;
};
#pragma pack(pop)

/* 17 */
typedef __crt_locale_pointers *_locale_t;

/* 19 */
typedef _Mbstatet mbstate_t;

/* 18 */
//typedef mbstate_t _Mbstatet;

/* 20 */
typedef __time64_t time_t;

/* 21 */
typedef size_t rsize_t;

/* 22 */
typedef __int64 std__nullptr_t;

/* 23 */
typedef int (__cdecl *_CoreCrtSecureSearchSortCompareFunction)(void *, const void *, const void *);

/* 24 */
typedef int (__cdecl *_CoreCrtNonSecureSearchSortCompareFunction)(const void *, const void *);

/* 25 */
typedef int (*_onexit_t)(void);

/* 26 */
typedef void (*_purecall_handler)(void);

/* 27 */
typedef void (__cdecl *_invalid_parameter_handler)(const __int16 *, const __int16 *, const __int16 *, unsigned int, uintptr_t);

/* 28 */
#pragma pack(push, 8)
struct _div_t
{
  int quot;
  int rem;
};
#pragma pack(pop)

/* 29 */
typedef _div_t div_t;

/* 30 */
#pragma pack(push, 8)
struct _ldiv_t
{
  __int32 quot;
  __int32 rem;
};
#pragma pack(pop)

/* 31 */
typedef _ldiv_t ldiv_t;

/* 32 */
#pragma pack(push, 8)
struct _lldiv_t
{
  __int64 quot;
  __int64 rem;
};
#pragma pack(pop)

/* 33 */
typedef _lldiv_t lldiv_t;

/* 34 */
#pragma pack(push, 4)
struct _LDOUBLE
{
  unsigned __int8 ld[10];
};
#pragma pack(pop)

/* 35 */
#pragma pack(push, 8)
struct _CRT_DOUBLE
{
  double x;
};
#pragma pack(pop)

/* 36 */
#pragma pack(push, 8)
struct _CRT_FLOAT
{
  float f;
};
#pragma pack(pop)

/* 37 */
#pragma pack(push, 8)
struct _LONGDOUBLE
{
  long double x;
};
#pragma pack(pop)

/* 38 */
#pragma pack(push, 4)
struct _LDBL12
{
  unsigned __int8 ld12[12];
};
#pragma pack(pop)

/* 39 */
#pragma pack(push, 8)
struct _iobuf
{
  void *_Placeholder;
};
#pragma pack(pop)

/* 40 */
typedef _iobuf FILE;

/* 41 */
typedef __int64 fpos_t;

/* 42 */
#pragma pack(push, 8)
struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};
#pragma pack(pop)

/* 43 */
typedef __int32 clock_t;

/* 44 */
#pragma pack(push, 8)
struct _timespec32
{
  __time32_t tv_sec;
  __int32 tv_nsec;
};
#pragma pack(pop)

/* 45 */
#pragma pack(push, 8)
struct _timespec64
{
  __time64_t tv_sec;
  __int32 tv_nsec;
};
#pragma pack(pop)

/* 46 */
#pragma pack(push, 8)
struct timespec
{
  time_t tv_sec;
  __int32 tv_nsec;
};
#pragma pack(pop)

/* 47 */
#pragma pack(push, 8)
struct __cppobj std__nothrow_t
{
};
#pragma pack(pop)

/* 48 */
typedef void *_HFILE;

/* 49 */
typedef int (__cdecl *_CRT_REPORT_HOOK)(int, char *, int *);

/* 50 */
typedef int (__cdecl *_CRT_REPORT_HOOKW)(int, __int16 *, int *);

/* 51 */
typedef int (__cdecl *_CRT_ALLOC_HOOK)(int, void *, size_t, int, __int32, const unsigned __int8 *, int);

/* 52 */
typedef void (__cdecl *_CRT_DUMP_CLIENT)(void *, size_t);

/* 53 */
struct _CrtMemBlockHeader;

/* 54 */
#pragma pack(push, 8)
struct _CrtMemState
{
  _CrtMemBlockHeader *pBlockHeader;
  size_t lCounts[5];
  size_t lSizes[5];
  size_t lHighWaterCount;
  size_t lTotalCount;
};
#pragma pack(pop)

/* 55 */
enum std___Uninitialized : unsigned __int32
{
  _Noinit = 0x0,
};

/* 56 */
#pragma pack(push, 8)
struct __cppobj std___Lockit
{
  int _Locktype;
};
#pragma pack(pop)

/* 57 */
#pragma pack(push, 8)
struct __cppobj std___Init_locks
{
};
#pragma pack(pop)

/* 58 */
typedef char int8_t;

/* 59 */
typedef __int16 int16_t;

/* 60 */
typedef int int32_t;

/* 61 */
typedef __int64 int64_t;

/* 62 */
typedef unsigned __int8 uint8_t;

/* 63 */
typedef unsigned __int16 uint16_t;

/* 64 */
typedef unsigned int uint32_t;

/* 65 */
typedef unsigned __int64 uint64_t;

/* 66 */
typedef char int_least8_t;

/* 67 */
typedef __int16 int_least16_t;

/* 68 */
typedef int int_least32_t;

/* 69 */
typedef __int64 int_least64_t;

/* 70 */
typedef unsigned __int8 uint_least8_t;

/* 71 */
typedef unsigned __int16 uint_least16_t;

/* 72 */
typedef unsigned int uint_least32_t;

/* 73 */
typedef unsigned __int64 uint_least64_t;

/* 74 */
typedef char int_fast8_t;

/* 75 */
typedef int int_fast16_t;

/* 76 */
typedef int int_fast32_t;

/* 77 */
typedef __int64 int_fast64_t;

/* 78 */
typedef unsigned __int8 uint_fast8_t;

/* 79 */
typedef unsigned int uint_fast16_t;

/* 80 */
typedef unsigned int uint_fast32_t;

/* 81 */
typedef unsigned __int64 uint_fast64_t;

/* 82 */
typedef __int64 intmax_t;

/* 83 */
typedef unsigned __int64 uintmax_t;

/* 84 */
#pragma pack(push, 8)
struct __cppobj std__integral_constant_bool__true_
{
};
#pragma pack(pop)

/* 85 */
typedef bool std__integral_constant_bool__true___value_type;

/* 86 */
typedef std__integral_constant_bool__true_ std__true_type;

/* 87 */
#pragma pack(push, 8)
struct __cppobj std__integral_constant_bool__false_
{
};
#pragma pack(pop)

/* 88 */
typedef bool std__integral_constant_bool__false___value_type;

/* 89 */
typedef std__integral_constant_bool__false_ std__false_type;

/* 90 */
typedef double std__max_align_t;

/* 91 */
#pragma pack(push, 8)
struct _exception
{
  int type;
  char *name;
  double arg1;
  double arg2;
  double retval;
};
#pragma pack(pop)

/* 92 */
#pragma pack(push, 8)
struct _complex
{
  double x;
  double y;
};
#pragma pack(pop)

/* 93 */
typedef float float_t;

/* 94 */
typedef double double_t;

/* 95 */
#pragma pack(push, 8)
union _double_val
{
  unsigned __int16 _Sh[4];
  double _Val;
};
#pragma pack(pop)

/* 96 */
#pragma pack(push, 8)
union _float_val
{
  unsigned __int16 _Sh[2];
  float _Val;
};
#pragma pack(pop)

/* 97 */
#pragma pack(push, 8)
union _ldouble_val
{
  unsigned __int16 _Sh[4];
  long double _Val;
};
#pragma pack(pop)

/* 98 */
#pragma pack(push, 8)
union _float_const
{
  unsigned __int16 _Word[4];
  float _Float;
  double _Double;
  long double _Long_double;
};
#pragma pack(pop)

/* 99 */
#pragma pack(push, 8)
struct _Combined_type_float__double_
{
};
#pragma pack(pop)

/* 100 */
#pragma pack(push, 8)
struct _Combined_type_float__long_double_
{
};
#pragma pack(pop)

/* 101 */
#pragma pack(push, 8)
struct _Real_widened_float__float_
{
};
#pragma pack(pop)

/* 102 */
#pragma pack(push, 8)
struct _Real_widened_float__double_
{
};
#pragma pack(pop)

/* 103 */
#pragma pack(push, 8)
struct _Real_widened_double__float_
{
};
#pragma pack(pop)

/* 104 */
#pragma pack(push, 8)
struct _Real_widened_double__double_
{
};
#pragma pack(pop)

/* 105 */
#pragma pack(push, 8)
struct _Real_type_float_
{
};
#pragma pack(pop)

/* 106 */
#pragma pack(push, 8)
struct _Real_type_long_double_
{
};
#pragma pack(pop)

/* 107 */
#pragma pack(push, 8)
struct std__plus_void_
{
};
#pragma pack(pop)

/* 108 */
#pragma pack(push, 8)
struct std__minus_void_
{
};
#pragma pack(pop)

/* 109 */
#pragma pack(push, 8)
struct std__multiplies_void_
{
};
#pragma pack(pop)

/* 110 */
#pragma pack(push, 8)
struct std__equal_to_void_
{
};
#pragma pack(pop)

/* 111 */
#pragma pack(push, 8)
struct std__not_equal_to_void_
{
};
#pragma pack(pop)

/* 112 */
#pragma pack(push, 8)
struct std__greater_void_
{
};
#pragma pack(pop)

/* 113 */
#pragma pack(push, 8)
struct std__less_void_
{
};
#pragma pack(pop)

/* 114 */
#pragma pack(push, 8)
struct std__greater_equal_void_
{
};
#pragma pack(pop)

/* 115 */
#pragma pack(push, 8)
struct std__less_equal_void_
{
};
#pragma pack(pop)

/* 116 */
#pragma pack(push, 8)
struct std___Select_false_
{
};
#pragma pack(pop)

/* 117 */
#pragma pack(push, 8)
struct std___Make_signed2_1_
{
};
#pragma pack(pop)

/* 118 */
#pragma pack(push, 8)
struct std___Make_signed2_2_
{
};
#pragma pack(pop)

/* 119 */
#pragma pack(push, 8)
struct std___Make_signed2_4_
{
};
#pragma pack(pop)

/* 120 */
#pragma pack(push, 8)
struct std___Make_signed2_8_
{
};
#pragma pack(pop)

/* 121 */
#pragma pack(push, 8)
struct std___Make_unsigned2_1_
{
};
#pragma pack(pop)

/* 122 */
#pragma pack(push, 8)
struct std___Make_unsigned2_2_
{
};
#pragma pack(pop)

/* 123 */
#pragma pack(push, 8)
struct std___Make_unsigned2_4_
{
};
#pragma pack(pop)

/* 124 */
#pragma pack(push, 8)
struct std___Make_unsigned2_8_
{
};
#pragma pack(pop)

/* 126 */
#pragma pack(push, 8)
struct __cppobj std__integral_constant_unsigned_long_long__0_
{
};
#pragma pack(pop)

/* 125 */
#pragma pack(push, 8)
struct __cppobj std___Maximum__ : std__integral_constant_unsigned_long_long__0_
{
};
#pragma pack(pop)

/* 127 */
typedef unsigned __int64 std__integral_constant_unsigned_long_long__0___value_type;

/* 128 */
#pragma pack(push, 8)
struct std__common_type__
{
};
#pragma pack(pop)

/* 129 */
enum std___Invoker_strategy : unsigned __int32
{
  _Functor = 0x0,
  _Pmf_object = 0x1,
  _Pmf_refwrap = 0x2,
  _Pmf_pointer = 0x3,
  _Pmd_object = 0x4,
  _Pmd_refwrap = 0x5,
  _Pmd_pointer = 0x6,
};

/* 130 */
#pragma pack(push, 8)
struct std___Invoker_functor
{
};
#pragma pack(pop)

/* 131 */
#pragma pack(push, 8)
struct std___Invoker_pmf_object
{
};
#pragma pack(pop)

/* 132 */
#pragma pack(push, 8)
struct std___Invoker_pmf_refwrap
{
};
#pragma pack(pop)

/* 133 */
#pragma pack(push, 8)
struct std___Invoker_pmf_pointer
{
};
#pragma pack(pop)

/* 134 */
#pragma pack(push, 8)
struct std___Invoker_pmd_object
{
};
#pragma pack(pop)

/* 135 */
#pragma pack(push, 8)
struct std___Invoker_pmd_refwrap
{
};
#pragma pack(pop)

/* 136 */
#pragma pack(push, 8)
struct std___Invoker_pmd_pointer
{
};
#pragma pack(pop)

/* 137 */
#pragma pack(push, 8)
struct __cppobj std__hash_float_
{
};
#pragma pack(pop)

/* 138 */
#pragma pack(push, 8)
struct __cppobj std__hash_double_
{
};
#pragma pack(pop)

/* 139 */
#pragma pack(push, 8)
struct __cppobj std__hash_long_double_
{
};
#pragma pack(pop)

/* 140 */
#pragma pack(push, 8)
struct __cppobj std__hash_std__nullptr_t_
{
};
#pragma pack(pop)

/* 141 */
#pragma pack(push, 8)
struct std___Floating_type_traits_float_
{
};
#pragma pack(pop)

/* 142 */
#pragma pack(push, 8)
struct std___Floating_type_traits_double_
{
};
#pragma pack(pop)

/* 143 */
#pragma pack(push, 8)
struct __cppobj std___Floating_type_traits_long_double_ : std___Floating_type_traits_double_
{
};
#pragma pack(pop)

/* 144 */
#pragma pack(push, 8)
struct _heapinfo
{
  int *_pentry;
  size_t _size;
  int _useflag;
};
#pragma pack(pop)

/* 145 */
typedef _heapinfo _HEAPINFO;

/* 146 */
typedef void (*terminate_handler)(void);

/* 147 */
typedef void (*terminate_function)(void);

/* 148 */
typedef void (*unexpected_handler)(void);

/* 149 */
typedef void (*unexpected_function)(void);

/* 2411 */
typedef _EXCEPTION_RECORD EXCEPTION_RECORD;

/* 2412 */
typedef EXCEPTION_RECORD *PEXCEPTION_RECORD;

/* 2354 */
typedef _CONTEXT *PCONTEXT;

/* 150 */
struct _EXCEPTION_POINTERS
{
  PEXCEPTION_RECORD ExceptionRecord;
  PCONTEXT ContextRecord;
};

/* 151 */
typedef void (__cdecl *_se_translator_function)(unsigned int, _EXCEPTION_POINTERS *);

/* 152 */
struct type_info;

/* 153 */
#pragma pack(push, 8)
struct __std_exception_data
{
  const char *_What;
  bool _DoFree;
};
#pragma pack(pop)

/* 154 */
#pragma pack(push, 8)
struct __cppobj std__exception
{
  std__exception_vtbl *__vftable /*VFT*/;
  __std_exception_data _Data;
};
#pragma pack(pop)

/* 155 */
/*struct std__exception_vtbl
{
  void (__fastcall *_del_exception)(std__exception *__hidden this);
  const char *(__fastcall *what)(const std__exception *__hidden this);
};
*/

/* 156 */
#pragma pack(push, 8)
struct __cppobj std__bad_exception : std__exception
{
};
#pragma pack(pop)

/* 157 */
/*struct std__bad_exception_vtbl
{
  void (__fastcall *_del_bad_exception)(std__bad_exception *__hidden this);
  const char *(__fastcall *what)(const std__exception *__hidden this);
};
*/

/* 158 */
#pragma pack(push, 8)
struct __cppobj std__bad_alloc : std__exception
{
};
#pragma pack(pop)

/* 159 */
/*struct std__bad_alloc_vtbl
{
  void (__fastcall *_del_bad_alloc)(std__bad_alloc *__hidden this);
  const char *(__fastcall *what)(const std__exception *__hidden this);
};
*/

/* 160 */
#pragma pack(push, 8)
struct __cppobj std__bad_array_new_length : std__bad_alloc
{
};
#pragma pack(pop)

/* 161 */
/*struct std__bad_array_new_length_vtbl
{
  void (__fastcall *_del_bad_array_new_length)(std__bad_array_new_length *__hidden this);
  const char *(__fastcall *what)(const std__exception *__hidden this);
};
*/

/* 162 */
#pragma pack(push, 8)
struct __cppobj std__exception_ptr
{
  void *_Data1;
  void *_Data2;
};
#pragma pack(pop)

/* 163 */
#pragma pack(push, 8)
struct __cppobj std__nested_exception
{
  std__nested_exception_vtbl *__vftable /*VFT*/;
  std__exception_ptr _Exc;
};
#pragma pack(pop)

/* 164 */
/*struct std__nested_exception_vtbl
{
  void (__fastcall *_del_nested_exception)(std__nested_exception *__hidden this);
};
*/

/* 165 */
typedef void (*std__new_handler)(void);

/* 166 */
typedef unsigned __int32 _fsize_t;

/* 167 */
#pragma pack(push, 8)
struct _wfinddata32_t
{
  unsigned int attrib;
  __time32_t time_create;
  __time32_t time_access;
  __time32_t time_write;
  _fsize_t size;
  __int16 name[260];
};
#pragma pack(pop)

/* 168 */
#pragma pack(push, 8)
struct _wfinddata32i64_t
{
  unsigned int attrib;
  __time32_t time_create;
  __time32_t time_access;
  __time32_t time_write;
  __int64 size;
  __int16 name[260];
};
#pragma pack(pop)

/* 169 */
#pragma pack(push, 8)
struct _wfinddata64i32_t
{
  unsigned int attrib;
  __time64_t time_create;
  __time64_t time_access;
  __time64_t time_write;
  _fsize_t size;
  __int16 name[260];
};
#pragma pack(pop)

/* 170 */
#pragma pack(push, 8)
struct _wfinddata64_t
{
  unsigned int attrib;
  __time64_t time_create;
  __time64_t time_access;
  __time64_t time_write;
  __int64 size;
  __int16 name[260];
};
#pragma pack(pop)

/* 171 */
typedef unsigned __int16 _ino_t;

/* 172 */
typedef _ino_t ino_t;

/* 173 */
typedef unsigned int _dev_t;

/* 174 */
typedef _dev_t dev_t;

/* 175 */
typedef __int32 _off_t;

/* 176 */
typedef _off_t off_t;

/* 177 */
#pragma pack(push, 8)
struct _stat32
{
  _dev_t st_dev;
  _ino_t st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  _dev_t st_rdev;
  _off_t st_size;
  __time32_t st_atime;
  __time32_t st_mtime;
  __time32_t st_ctime;
};
#pragma pack(pop)

/* 178 */
#pragma pack(push, 8)
struct _stat32i64
{
  _dev_t st_dev;
  _ino_t st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  _dev_t st_rdev;
  __int64 st_size;
  __time32_t st_atime;
  __time32_t st_mtime;
  __time32_t st_ctime;
};
#pragma pack(pop)

/* 179 */
#pragma pack(push, 8)
struct _stat64i32
{
  _dev_t st_dev;
  _ino_t st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  _dev_t st_rdev;
  _off_t st_size;
  __time64_t st_atime;
  __time64_t st_mtime;
  __time64_t st_ctime;
};
#pragma pack(pop)

/* 180 */
#pragma pack(push, 8)
struct _stat64
{
  _dev_t st_dev;
  _ino_t st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  _dev_t st_rdev;
  __int64 st_size;
  __time64_t st_atime;
  __time64_t st_mtime;
  __time64_t st_ctime;
};
#pragma pack(pop)

/* 181 */
#pragma pack(push, 8)
struct stat
{
  _dev_t st_dev;
  _ino_t st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  _dev_t st_rdev;
  _off_t st_size;
  time_t st_atime;
  time_t st_mtime;
  time_t st_ctime;
};
#pragma pack(pop)

/* 182 */
typedef __int16 _Wint_t;

/* 183 */
typedef __int64 std__streamoff;

/* 184 */
typedef __int64 std__streamsize;

/* 185 */
#pragma pack(push, 8)
struct __cppobj std__fpos__Mbstatet_
{
  std__streamoff _Myoff;
  fpos_t _Fpos;
  _Mbstatet _Mystate;
};
#pragma pack(pop)

/* 186 */
typedef std__fpos__Mbstatet_ std__streampos;

/* 187 */
typedef std__streampos std__wstreampos;

/* 188 */
struct std__locale;

/* 327 */
#pragma pack(push, 8)
struct __cppobj std___Char_traits_char__int_
{
};
#pragma pack(pop)

/* 326 */
#pragma pack(push, 8)
struct __cppobj std___Narrow_char_traits_char__int_ : std___Char_traits_char__int_
{
};
#pragma pack(pop)

/* 189 */
#pragma pack(push, 8)
struct __cppobj std__char_traits_char_ : std___Narrow_char_traits_char__int_
{
};
#pragma pack(pop)

/* 310 */
#pragma pack(push, 8)
struct __cppobj std___Char_traits_char16_t__unsigned_short_
{
};
#pragma pack(pop)

/* 309 */
#pragma pack(push, 8)
struct __cppobj std___WChar_traits_char16_t_ : std___Char_traits_char16_t__unsigned_short_
{
};
#pragma pack(pop)

/* 190 */
#pragma pack(push, 8)
struct __cppobj std__char_traits_char16_t_ : std___WChar_traits_char16_t_
{
};
#pragma pack(pop)

/* 315 */
#pragma pack(push, 8)
struct __cppobj std___Char_traits_char32_t__unsigned_int_
{
};
#pragma pack(pop)

/* 191 */
#pragma pack(push, 8)
struct __cppobj std__char_traits_char32_t_ : std___Char_traits_char32_t__unsigned_int_
{
};
#pragma pack(pop)

/* 319 */
#pragma pack(push, 8)
struct __cppobj std___Char_traits_wchar_t__unsigned_short_
{
};
#pragma pack(pop)

/* 318 */
#pragma pack(push, 8)
struct __cppobj std___WChar_traits_wchar_t_ : std___Char_traits_wchar_t__unsigned_short_
{
};
#pragma pack(pop)

/* 192 */
#pragma pack(push, 8)
struct __cppobj std__char_traits_wchar_t_ : std___WChar_traits_wchar_t_
{
};
#pragma pack(pop)

/* 323 */
#pragma pack(push, 8)
struct __cppobj std___Char_traits_unsigned_short__unsigned_short_
{
};
#pragma pack(pop)

/* 322 */
#pragma pack(push, 8)
struct __cppobj std___WChar_traits_unsigned_short_ : std___Char_traits_unsigned_short__unsigned_short_
{
};
#pragma pack(pop)

/* 193 */
#pragma pack(push, 8)
struct __cppobj std__char_traits_unsigned_short_ : std___WChar_traits_unsigned_short_
{
};
#pragma pack(pop)

/* 194 */
struct std__ios_base;

/* 195 */
struct std__ios;

/* 196 */
typedef struct std__ios std__ios;

/* 197 */
struct std__streambuf;

/* 198 */
typedef struct std__streambuf std__streambuf;

/* 199 */
struct std__istream;

/* 200 */
typedef struct std__istream std__istream;

/* 201 */
struct std__ostream;

/* 202 */
typedef struct std__ostream std__ostream;

/* 203 */
struct std__iostream;

/* 204 */
typedef struct std__iostream std__iostream;

/* 205 */
struct std__stringbuf;

/* 206 */
typedef struct std__stringbuf std__stringbuf;

/* 207 */
struct std__istringstream;

/* 208 */
typedef struct std__istringstream std__istringstream;

/* 209 */
struct std__ostringstream;

/* 210 */
typedef struct std__ostringstream std__ostringstream;

/* 211 */
struct std__basic_stringstream_char_;

/* 212 */
typedef struct std__basic_stringstream_char_ std__stringstream;

/* 213 */
struct std__filebuf;

/* 214 */
typedef struct std__filebuf std__filebuf;

/* 215 */
struct std__ifstream;

/* 216 */
typedef struct std__ifstream std__ifstream;

/* 217 */
struct std__ofstream;

/* 218 */
typedef struct std__ofstream std__ofstream;

/* 219 */
struct std__fstream;

/* 220 */
typedef struct std__fstream std__fstream;

/* 221 */
struct std__wios;

/* 222 */
typedef struct std__wios std__wios;

/* 223 */
struct std__wstreambuf;

/* 224 */
typedef struct std__wstreambuf std__wstreambuf;

/* 225 */
struct std__wistream;

/* 226 */
typedef struct std__wistream std__wistream;

/* 227 */
struct std__wostream;

/* 228 */
typedef struct std__wostream std__wostream;

/* 229 */
struct std__wiostream;

/* 230 */
typedef struct std__wiostream std__wiostream;

/* 231 */
struct std__wstringbuf;

/* 232 */
typedef struct std__wstringbuf std__wstringbuf;

/* 233 */
struct std__wistringstream;

/* 234 */
typedef struct std__wistringstream std__wistringstream;

/* 235 */
struct std__wostringstream;

/* 236 */
typedef struct std__wostringstream std__wostringstream;

/* 237 */
struct std__basic_stringstream_wchar_t_;

/* 238 */
typedef struct std__basic_stringstream_wchar_t_ std__wstringstream;

/* 239 */
struct std__wfilebuf;

/* 240 */
typedef struct std__wfilebuf std__wfilebuf;

/* 241 */
struct std__wifstream;

/* 242 */
typedef struct std__wifstream std__wifstream;

/* 243 */
struct std__wofstream;

/* 244 */
typedef struct std__wofstream std__wofstream;

/* 245 */
struct std__wfstream;

/* 246 */
typedef struct std__wfstream std__wfstream;

/* 247 */
enum ISA_AVAILABILITY : unsigned __int32
{
  __ISA_AVAILABLE_X86 = 0x0,
  __ISA_AVAILABLE_SSE2 = 0x1,
  __ISA_AVAILABLE_SSE42 = 0x2,
  __ISA_AVAILABLE_AVX = 0x3,
  __ISA_AVAILABLE_ENFSTRG = 0x4,
  __ISA_AVAILABLE_AVX2 = 0x5,
  __ISA_AVAILABLE_AVX512 = 0x6,
  __ISA_AVAILABLE_ARMNT = 0x0,
  __ISA_AVAILABLE_NEON = 0x1,
  __ISA_AVAILABLE_NEON_ARM64 = 0x2,
};

/* 248 */
enum std__float_denorm_style : unsigned __int32
{
  denorm_indeterminate = 0xFFFFFFFF,
  denorm_absent = 0x0,
  denorm_present = 0x1,
};

/* 249 */
enum std__float_round_style : unsigned __int32
{
  round_indeterminate = 0xFFFFFFFF,
  round_toward_zero = 0x0,
  round_to_nearest = 0x1,
  round_toward_infinity = 0x2,
  round_toward_neg_infinity = 0x3,
};

/* 250 */
#pragma pack(push, 8)
struct std___Num_base
{
};
#pragma pack(pop)

/* 251 */
#pragma pack(push, 8)
struct __cppobj std___Num_int_base : std___Num_base
{
};
#pragma pack(pop)

/* 252 */
#pragma pack(push, 8)
struct __cppobj std___Num_float_base : std___Num_base
{
};
#pragma pack(pop)

/* 253 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_bool_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 254 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_char_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 255 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_signed_char_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 256 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_unsigned_char_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 257 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_char16_t_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 258 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_char32_t_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 259 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_wchar_t_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 260 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_short_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 261 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_int_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 262 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_long_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 263 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_long_long_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 264 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_unsigned_short_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 265 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_unsigned_int_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 266 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_unsigned_long_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 267 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_unsigned_long_long_ : std___Num_int_base
{
};
#pragma pack(pop)

/* 268 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_float_ : std___Num_float_base
{
};
#pragma pack(pop)

/* 269 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_double_ : std___Num_float_base
{
};
#pragma pack(pop)

/* 270 */
#pragma pack(push, 8)
struct __cppobj std__numeric_limits_long_double_ : std___Num_float_base
{
};
#pragma pack(pop)

/* 271 */
enum std__memory_order : unsigned __int32
{
  memory_order_relaxed = 0x0,
  memory_order_consume = 0x1,
  memory_order_acquire = 0x2,
  memory_order_release = 0x3,
  memory_order_acq_rel = 0x4,
  memory_order_seq_cst = 0x5,
};

/* 272 */
typedef unsigned __int32 std___Atomic_counter_t;

/* 273 */
#pragma pack(push, 8)
struct __cppobj std__piecewise_construct_t
{
};
#pragma pack(pop)

/* 274 */
#pragma pack(push, 8)
struct __cppobj std___Unused_parameter
{
};
#pragma pack(pop)

/* 275 */
typedef std___Unused_parameter std___Any_tag;

/* 276 */
#pragma pack(push, 8)
struct std__input_iterator_tag
{
};
#pragma pack(pop)

/* 277 */
#pragma pack(push, 8)
struct std__output_iterator_tag
{
};
#pragma pack(pop)

/* 278 */
#pragma pack(push, 8)
struct __cppobj std__forward_iterator_tag : std__input_iterator_tag
{
};
#pragma pack(pop)

/* 279 */
#pragma pack(push, 8)
struct __cppobj std__bidirectional_iterator_tag : std__forward_iterator_tag
{
};
#pragma pack(pop)

/* 280 */
#pragma pack(push, 8)
struct __cppobj std__random_access_iterator_tag : std__bidirectional_iterator_tag
{
};
#pragma pack(pop)

/* 281 */
#pragma pack(push, 8)
struct __cppobj std___Distance_unknown
{
};
#pragma pack(pop)

/* 282 */
#pragma pack(push, 8)
struct __cppobj std___Container_proxy
{
  const std___Container_base12 *_Mycont;
  std___Iterator_base12 *_Myfirstiter;
};
#pragma pack(pop)

/* 283 */
#pragma pack(push, 8)
struct __cppobj std___Iterator_base12
{
  std___Container_proxy *_Myproxy;
  std___Iterator_base12 *_Mynextiter;
};
#pragma pack(pop)

/* 284 */
#pragma pack(push, 8)
struct std___Default_sentinel
{
};
#pragma pack(pop)

/* 285 */
#pragma pack(push, 8)
struct std___False_copy_cat
{
};
#pragma pack(pop)

/* 286 */
#pragma pack(push, 8)
struct __cppobj std___Is_character_char_ : std__true_type
{
};
#pragma pack(pop)

/* 287 */
#pragma pack(push, 8)
struct __cppobj std___Is_character_signed_char_ : std__true_type
{
};
#pragma pack(pop)

/* 288 */
#pragma pack(push, 8)
struct __cppobj std___Is_character_unsigned_char_ : std__true_type
{
};
#pragma pack(pop)

/* 289 */
#pragma pack(push, 8)
struct __cppobj std___Is_character_or_bool_bool_ : std__true_type
{
};
#pragma pack(pop)

/* 290 */
#pragma pack(push, 8)
struct __cppobj std__allocator_arg_t
{
};
#pragma pack(pop)

/* 291 */
#pragma pack(push, 8)
struct __cppobj std___Nontrivial_dummy_type
{
};
#pragma pack(pop)

/* 292 */
#pragma pack(push, 8)
struct __cppobj std___Default_allocate_traits
{
};
#pragma pack(pop)

/* 293 */
#pragma pack(push, 8)
struct std___Equal_allocators
{
};
#pragma pack(pop)

/* 294 */
typedef std__true_type std___Propagate_allocators;

/* 295 */
typedef std__false_type std___No_propagate_allocators;

/* 296 */
#pragma pack(push, 8)
struct __cppobj std__allocator_void_
{
};
#pragma pack(pop)

/* 297 */
#pragma pack(push, 8)
struct std___Fake_allocator
{
};
#pragma pack(pop)

/* 298 */
#pragma pack(push, 8)
struct __cppobj std___Container_base0
{
};
#pragma pack(pop)

/* 299 */
#pragma pack(push, 8)
struct __cppobj std___Iterator_base0
{
};
#pragma pack(pop)

/* 300 */
#pragma pack(push, 8)
struct __cppobj std___Container_base12
{
  std___Container_proxy *_Myproxy;
};
#pragma pack(pop)

/* 301 */
typedef std___Container_base0 std___Container_base;

/* 302 */
typedef std___Iterator_base0 std___Iterator_base;

/* 303 */
#pragma pack(push, 8)
struct __cppobj std___Leave_proxy_unbound
{
};
#pragma pack(pop)

/* 304 */
#pragma pack(push, 8)
struct __cppobj std___Fake_proxy_ptr_impl
{
};
#pragma pack(pop)

/* 305 */
#pragma pack(push, 8)
struct __cppobj std___Basic_container_proxy_ptr12
{
  std___Container_proxy *_Ptr;
};
#pragma pack(pop)

/* 306 */
#pragma pack(push, 8)
struct __cppobj std___Zero_then_variadic_args_t
{
};
#pragma pack(pop)

/* 307 */
#pragma pack(push, 8)
struct __cppobj std___One_then_variadic_args_t
{
};
#pragma pack(pop)

/* 308 */
#pragma pack(push, 8)
struct __cppobj std___Move_allocator_tag
{
};
#pragma pack(pop)

/* 311 */
typedef unsigned __int16 std___Char_traits_char16_t__unsigned_short___int_type;

/* 312 */
typedef unsigned __int16 std___WChar_traits__Elem___int_type;

/* 313 */
typedef unsigned __int16 std___WChar_traits_char16_t___int_type;

/* 314 */
typedef std__streampos std__u16streampos;

/* 316 */
typedef unsigned int std___Char_traits_char32_t__unsigned_int___int_type;

/* 317 */
typedef std__streampos std__u32streampos;

/* 320 */
typedef unsigned __int16 std___Char_traits_wchar_t__unsigned_short___int_type;

/* 321 */
typedef unsigned __int16 std___WChar_traits_wchar_t___int_type;

/* 324 */
typedef unsigned __int16 std___Char_traits_unsigned_short__unsigned_short___int_type;

/* 325 */
typedef unsigned __int16 std___WChar_traits_unsigned_short___int_type;

/* 328 */
typedef int std___Char_traits_char__int___int_type;

/* 329 */
typedef int std___Narrow_char_traits_char__int___int_type;

/* 330 */
#pragma pack(push, 8)
struct __cppobj std___String_constructor_concat_tag
{
};
#pragma pack(pop)

/* 331 */
#pragma pack(push, 8)
struct __cppobj std___String_constructor_rvalue_allocator_tag
{
};
#pragma pack(pop)

/* 333 */
#pragma pack(push, 8)
struct __cppobj std__allocator_char_
{
};
#pragma pack(pop)

/* 339 */
typedef char std___Simple_types_char___value_type;

/* 343 */
typedef std___Simple_types_char___value_type std___String_val_std___Simple_types_char____value_type;

/* 351 */
typedef std___Simple_types_char___value_type *std___Simple_types_char___pointer;

/* 352 */
typedef std___Simple_types_char___pointer std___String_val_std___Simple_types_char____pointer;

/* 379 */
#pragma pack(push, 8)
union std___String_val_std___Simple_types_char_____Bxty
{
  std___String_val_std___Simple_types_char____value_type _Buf[16];
  std___String_val_std___Simple_types_char____pointer _Ptr;
  char _Alias[16];
};
#pragma pack(pop)

/* 377 */
typedef size_t std___Simple_types_char___size_type;

/* 378 */
typedef std___Simple_types_char___size_type std___String_val_std___Simple_types_char____size_type;

/* 376 */
#pragma pack(push, 8)
struct __cppobj std___String_val_std___Simple_types_char__ : std___Container_base
{
  std___String_val_std___Simple_types_char_____Bxty _Bx;
  std___String_val_std___Simple_types_char____size_type _Mysize;
  std___String_val_std___Simple_types_char____size_type _Myres;
};
#pragma pack(pop)

/* 383 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__allocator_char___std___String_val_std___Simple_types_char____true_ : std__allocator_char_
{
  std___String_val_std___Simple_types_char__ _Myval2;
};
#pragma pack(pop)

/* 332 */
#pragma pack(push, 8)
struct __cppobj std__string
{
  std___Compressed_pair_std__allocator_char___std___String_val_std___Simple_types_char____true_ _Mypair;
};
#pragma pack(pop)

/* 334 */
typedef size_t std___Default_allocator_traits_std__allocator_char____size_type;

/* 335 */
typedef std___Default_allocator_traits_std__allocator_char____size_type std__string__size_type;

/* 336 */
#pragma pack(push, 8)
struct __cppobj std__initializer_list_char_
{
  char *_First;
  char *_Last;
};
#pragma pack(pop)

/* 340 */
typedef const std___Simple_types_char___value_type *std___Simple_types_char___const_pointer;

/* 341 */
typedef std___Simple_types_char___const_pointer std___String_val_std___Simple_types_char____const_pointer;

/* 342 */
typedef std___String_val_std___Simple_types_char____const_pointer std___String_const_iterator_std___String_val_std___Simple_types_char_____pointer;

/* 338 */
#pragma pack(push, 8)
struct __cppobj std___String_const_iterator_std___String_val_std___Simple_types_char___ : std___Iterator_base
{
  std___String_const_iterator_std___String_val_std___Simple_types_char_____pointer _Ptr;
};
#pragma pack(pop)

/* 337 */
#pragma pack(push, 8)
struct __cppobj std___String_iterator_std___String_val_std___Simple_types_char___ : std___String_const_iterator_std___String_val_std___Simple_types_char___
{
};
#pragma pack(pop)

/* 344 */
typedef std___String_val_std___Simple_types_char____value_type std___String_const_iterator_std___String_val_std___Simple_types_char_____value_type;

/* 345 */
typedef const std___String_const_iterator_std___String_val_std___Simple_types_char_____value_type *std___String_const_iterator_std___String_val_std___Simple_types_char_____reference;

/* 346 */
typedef ptrdiff_t std___Simple_types_char___difference_type;

/* 347 */
typedef std___Simple_types_char___difference_type std___String_val_std___Simple_types_char____difference_type;

/* 348 */
typedef std___String_val_std___Simple_types_char____difference_type std___String_const_iterator_std___String_val_std___Simple_types_char_____difference_type;

/* 349 */
typedef std___String_val_std___Simple_types_char____value_type std___String_iterator_std___String_val_std___Simple_types_char_____value_type;

/* 350 */
typedef std___String_iterator_std___String_val_std___Simple_types_char_____value_type *std___String_iterator_std___String_val_std___Simple_types_char_____reference;

/* 353 */
typedef std___String_val_std___Simple_types_char____pointer std___String_iterator_std___String_val_std___Simple_types_char_____pointer;

/* 354 */
typedef std___String_val_std___Simple_types_char____difference_type std___String_iterator_std___String_val_std___Simple_types_char_____difference_type;

/* 355 */
typedef std___String_iterator_std___String_val_std___Simple_types_char___ std__string__iterator;

/* 356 */
typedef std___String_const_iterator_std___String_val_std___Simple_types_char___ std__string__const_iterator;

/* 357 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char____
{
  std___String_iterator_std___String_val_std___Simple_types_char___ current;
};
#pragma pack(pop)

/* 358 */
typedef char *std___Iter_ref_t_std___String_iterator_std___String_val_std___Simple_types_char____;

/* 359 */
typedef std___Iter_ref_t_std___String_iterator_std___String_val_std___Simple_types_char____ std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char______reference;

/* 360 */
typedef std___String_iterator_std___String_val_std___Simple_types_char_____pointer std___Iterator_traits_base_std___String_iterator_std___String_val_std___Simple_types_char______pointer;

/* 361 */
typedef std___Iterator_traits_base_std___String_iterator_std___String_val_std___Simple_types_char______pointer std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char______pointer;

/* 362 */
typedef __int64 std___Iter_diff_t_std___String_iterator_std___String_val_std___Simple_types_char____;

/* 363 */
typedef std___Iter_diff_t_std___String_iterator_std___String_val_std___Simple_types_char____ std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char______difference_type;

/* 364 */
typedef std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char____ std__string__reverse_iterator;

/* 365 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char____
{
  std___String_const_iterator_std___String_val_std___Simple_types_char___ current;
};
#pragma pack(pop)

/* 366 */
typedef const char *std___Iter_ref_t_std___String_const_iterator_std___String_val_std___Simple_types_char____;

/* 367 */
typedef std___Iter_ref_t_std___String_const_iterator_std___String_val_std___Simple_types_char____ std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char______reference;

/* 368 */
typedef std___String_const_iterator_std___String_val_std___Simple_types_char_____pointer std___Iterator_traits_base_std___String_const_iterator_std___String_val_std___Simple_types_char______pointer;

/* 369 */
typedef std___Iterator_traits_base_std___String_const_iterator_std___String_val_std___Simple_types_char______pointer std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char______pointer;

/* 370 */
typedef __int64 std___Iter_diff_t_std___String_const_iterator_std___String_val_std___Simple_types_char____;

/* 371 */
typedef std___Iter_diff_t_std___String_const_iterator_std___String_val_std___Simple_types_char____ std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char______difference_type;

/* 372 */
typedef std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char____ std__string__const_reverse_iterator;

/* 373 */
typedef char std__string__value_type;

/* 374 */
typedef std__string__value_type *std__string__reference;

/* 375 */
typedef const std__string__value_type *std__string__const_reference;

/* 380 */
typedef std___String_val_std___Simple_types_char__ std__string___Scary_val;

/* 381 */
typedef std__allocator_char_ std__string__allocator_type;

/* 382 */
typedef std__allocator_char_ std__string___Alty;

/* 384 */
typedef std__string std__string;

/* 386 */
#pragma pack(push, 8)
struct __cppobj std__allocator_wchar_t_
{
};
#pragma pack(pop)

/* 392 */
typedef __int16 std___Simple_types_wchar_t___value_type;

/* 396 */
typedef std___Simple_types_wchar_t___value_type std___String_val_std___Simple_types_wchar_t____value_type;

/* 404 */
typedef std___Simple_types_wchar_t___value_type *std___Simple_types_wchar_t___pointer;

/* 405 */
typedef std___Simple_types_wchar_t___pointer std___String_val_std___Simple_types_wchar_t____pointer;

/* 432 */
#pragma pack(push, 8)
union std___String_val_std___Simple_types_wchar_t_____Bxty
{
  std___String_val_std___Simple_types_wchar_t____value_type _Buf[8];
  std___String_val_std___Simple_types_wchar_t____pointer _Ptr;
  char _Alias[8];
};
#pragma pack(pop)

/* 430 */
typedef size_t std___Simple_types_wchar_t___size_type;

/* 431 */
typedef std___Simple_types_wchar_t___size_type std___String_val_std___Simple_types_wchar_t____size_type;

/* 429 */
#pragma pack(push, 8)
struct __cppobj std___String_val_std___Simple_types_wchar_t__ : std___Container_base
{
  std___String_val_std___Simple_types_wchar_t_____Bxty _Bx;
  std___String_val_std___Simple_types_wchar_t____size_type _Mysize;
  std___String_val_std___Simple_types_wchar_t____size_type _Myres;
};
#pragma pack(pop)

/* 436 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__allocator_wchar_t___std___String_val_std___Simple_types_wchar_t____true_ : std__allocator_wchar_t_
{
  std___String_val_std___Simple_types_wchar_t__ _Myval2;
};
#pragma pack(pop)

/* 385 */
#pragma pack(push, 8)
struct __cppobj std__wstring
{
  std___Compressed_pair_std__allocator_wchar_t___std___String_val_std___Simple_types_wchar_t____true_ _Mypair;
};
#pragma pack(pop)

/* 387 */
typedef size_t std___Default_allocator_traits_std__allocator_wchar_t____size_type;

/* 388 */
typedef std___Default_allocator_traits_std__allocator_wchar_t____size_type std__wstring__size_type;

/* 389 */
#pragma pack(push, 8)
struct __cppobj std__initializer_list_wchar_t_
{
  __int16 *_First;
  __int16 *_Last;
};
#pragma pack(pop)

/* 393 */
typedef const std___Simple_types_wchar_t___value_type *std___Simple_types_wchar_t___const_pointer;

/* 394 */
typedef std___Simple_types_wchar_t___const_pointer std___String_val_std___Simple_types_wchar_t____const_pointer;

/* 395 */
typedef std___String_val_std___Simple_types_wchar_t____const_pointer std___String_const_iterator_std___String_val_std___Simple_types_wchar_t_____pointer;

/* 391 */
#pragma pack(push, 8)
struct __cppobj std___String_const_iterator_std___String_val_std___Simple_types_wchar_t___ : std___Iterator_base
{
  std___String_const_iterator_std___String_val_std___Simple_types_wchar_t_____pointer _Ptr;
};
#pragma pack(pop)

/* 390 */
#pragma pack(push, 8)
struct __cppobj std___String_iterator_std___String_val_std___Simple_types_wchar_t___ : std___String_const_iterator_std___String_val_std___Simple_types_wchar_t___
{
};
#pragma pack(pop)

/* 397 */
typedef std___String_val_std___Simple_types_wchar_t____value_type std___String_const_iterator_std___String_val_std___Simple_types_wchar_t_____value_type;

/* 398 */
typedef const std___String_const_iterator_std___String_val_std___Simple_types_wchar_t_____value_type *std___String_const_iterator_std___String_val_std___Simple_types_wchar_t_____reference;

/* 399 */
typedef ptrdiff_t std___Simple_types_wchar_t___difference_type;

/* 400 */
typedef std___Simple_types_wchar_t___difference_type std___String_val_std___Simple_types_wchar_t____difference_type;

/* 401 */
typedef std___String_val_std___Simple_types_wchar_t____difference_type std___String_const_iterator_std___String_val_std___Simple_types_wchar_t_____difference_type;

/* 402 */
typedef std___String_val_std___Simple_types_wchar_t____value_type std___String_iterator_std___String_val_std___Simple_types_wchar_t_____value_type;

/* 403 */
typedef std___String_iterator_std___String_val_std___Simple_types_wchar_t_____value_type *std___String_iterator_std___String_val_std___Simple_types_wchar_t_____reference;

/* 406 */
typedef std___String_val_std___Simple_types_wchar_t____pointer std___String_iterator_std___String_val_std___Simple_types_wchar_t_____pointer;

/* 407 */
typedef std___String_val_std___Simple_types_wchar_t____difference_type std___String_iterator_std___String_val_std___Simple_types_wchar_t_____difference_type;

/* 408 */
typedef std___String_iterator_std___String_val_std___Simple_types_wchar_t___ std__wstring__iterator;

/* 409 */
typedef std___String_const_iterator_std___String_val_std___Simple_types_wchar_t___ std__wstring__const_iterator;

/* 410 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_wchar_t____
{
  std___String_iterator_std___String_val_std___Simple_types_wchar_t___ current;
};
#pragma pack(pop)

/* 411 */
typedef __int16 *std___Iter_ref_t_std___String_iterator_std___String_val_std___Simple_types_wchar_t____;

/* 412 */
typedef std___Iter_ref_t_std___String_iterator_std___String_val_std___Simple_types_wchar_t____ std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_wchar_t______reference;

/* 413 */
typedef std___String_iterator_std___String_val_std___Simple_types_wchar_t_____pointer std___Iterator_traits_base_std___String_iterator_std___String_val_std___Simple_types_wchar_t______pointer;

/* 414 */
typedef std___Iterator_traits_base_std___String_iterator_std___String_val_std___Simple_types_wchar_t______pointer std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_wchar_t______pointer;

/* 415 */
typedef __int64 std___Iter_diff_t_std___String_iterator_std___String_val_std___Simple_types_wchar_t____;

/* 416 */
typedef std___Iter_diff_t_std___String_iterator_std___String_val_std___Simple_types_wchar_t____ std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_wchar_t______difference_type;

/* 417 */
typedef std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_wchar_t____ std__wstring__reverse_iterator;

/* 418 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t____
{
  std___String_const_iterator_std___String_val_std___Simple_types_wchar_t___ current;
};
#pragma pack(pop)

/* 419 */
typedef const __int16 *std___Iter_ref_t_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t____;

/* 420 */
typedef std___Iter_ref_t_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t____ std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t______reference;

/* 421 */
typedef std___String_const_iterator_std___String_val_std___Simple_types_wchar_t_____pointer std___Iterator_traits_base_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t______pointer;

/* 422 */
typedef std___Iterator_traits_base_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t______pointer std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t______pointer;

/* 423 */
typedef __int64 std___Iter_diff_t_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t____;

/* 424 */
typedef std___Iter_diff_t_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t____ std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t______difference_type;

/* 425 */
typedef std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_wchar_t____ std__wstring__const_reverse_iterator;

/* 426 */
typedef __int16 std__wstring__value_type;

/* 427 */
typedef std__wstring__value_type *std__wstring__reference;

/* 428 */
typedef const std__wstring__value_type *std__wstring__const_reference;

/* 433 */
typedef std___String_val_std___Simple_types_wchar_t__ std__wstring___Scary_val;

/* 434 */
typedef std__allocator_wchar_t_ std__wstring__allocator_type;

/* 435 */
typedef std__allocator_wchar_t_ std__wstring___Alty;

/* 437 */
typedef std__wstring std__wstring;

/* 439 */
#pragma pack(push, 8)
struct __cppobj std__allocator_char16_t_
{
};
#pragma pack(pop)

/* 445 */
typedef __int16 std___Simple_types_char16_t___value_type;

/* 449 */
typedef std___Simple_types_char16_t___value_type std___String_val_std___Simple_types_char16_t____value_type;

/* 457 */
typedef std___Simple_types_char16_t___value_type *std___Simple_types_char16_t___pointer;

/* 458 */
typedef std___Simple_types_char16_t___pointer std___String_val_std___Simple_types_char16_t____pointer;

/* 485 */
#pragma pack(push, 8)
union std___String_val_std___Simple_types_char16_t_____Bxty
{
  std___String_val_std___Simple_types_char16_t____value_type _Buf[8];
  std___String_val_std___Simple_types_char16_t____pointer _Ptr;
  char _Alias[8];
};
#pragma pack(pop)

/* 483 */
typedef size_t std___Simple_types_char16_t___size_type;

/* 484 */
typedef std___Simple_types_char16_t___size_type std___String_val_std___Simple_types_char16_t____size_type;

/* 482 */
#pragma pack(push, 8)
struct __cppobj std___String_val_std___Simple_types_char16_t__ : std___Container_base
{
  std___String_val_std___Simple_types_char16_t_____Bxty _Bx;
  std___String_val_std___Simple_types_char16_t____size_type _Mysize;
  std___String_val_std___Simple_types_char16_t____size_type _Myres;
};
#pragma pack(pop)

/* 489 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__allocator_char16_t___std___String_val_std___Simple_types_char16_t____true_ : std__allocator_char16_t_
{
  std___String_val_std___Simple_types_char16_t__ _Myval2;
};
#pragma pack(pop)

/* 438 */
#pragma pack(push, 8)
struct __cppobj std__basic_string_char16_t_
{
  std___Compressed_pair_std__allocator_char16_t___std___String_val_std___Simple_types_char16_t____true_ _Mypair;
};
#pragma pack(pop)

/* 440 */
typedef size_t std___Default_allocator_traits_std__allocator_char16_t____size_type;

/* 441 */
typedef std___Default_allocator_traits_std__allocator_char16_t____size_type std__basic_string_char16_t___size_type;

/* 442 */
#pragma pack(push, 8)
struct __cppobj std__initializer_list_char16_t_
{
  __int16 *_First;
  __int16 *_Last;
};
#pragma pack(pop)

/* 446 */
typedef const std___Simple_types_char16_t___value_type *std___Simple_types_char16_t___const_pointer;

/* 447 */
typedef std___Simple_types_char16_t___const_pointer std___String_val_std___Simple_types_char16_t____const_pointer;

/* 448 */
typedef std___String_val_std___Simple_types_char16_t____const_pointer std___String_const_iterator_std___String_val_std___Simple_types_char16_t_____pointer;

/* 444 */
#pragma pack(push, 8)
struct __cppobj std___String_const_iterator_std___String_val_std___Simple_types_char16_t___ : std___Iterator_base
{
  std___String_const_iterator_std___String_val_std___Simple_types_char16_t_____pointer _Ptr;
};
#pragma pack(pop)

/* 443 */
#pragma pack(push, 8)
struct __cppobj std___String_iterator_std___String_val_std___Simple_types_char16_t___ : std___String_const_iterator_std___String_val_std___Simple_types_char16_t___
{
};
#pragma pack(pop)

/* 450 */
typedef std___String_val_std___Simple_types_char16_t____value_type std___String_const_iterator_std___String_val_std___Simple_types_char16_t_____value_type;

/* 451 */
typedef const std___String_const_iterator_std___String_val_std___Simple_types_char16_t_____value_type *std___String_const_iterator_std___String_val_std___Simple_types_char16_t_____reference;

/* 452 */
typedef ptrdiff_t std___Simple_types_char16_t___difference_type;

/* 453 */
typedef std___Simple_types_char16_t___difference_type std___String_val_std___Simple_types_char16_t____difference_type;

/* 454 */
typedef std___String_val_std___Simple_types_char16_t____difference_type std___String_const_iterator_std___String_val_std___Simple_types_char16_t_____difference_type;

/* 455 */
typedef std___String_val_std___Simple_types_char16_t____value_type std___String_iterator_std___String_val_std___Simple_types_char16_t_____value_type;

/* 456 */
typedef std___String_iterator_std___String_val_std___Simple_types_char16_t_____value_type *std___String_iterator_std___String_val_std___Simple_types_char16_t_____reference;

/* 459 */
typedef std___String_val_std___Simple_types_char16_t____pointer std___String_iterator_std___String_val_std___Simple_types_char16_t_____pointer;

/* 460 */
typedef std___String_val_std___Simple_types_char16_t____difference_type std___String_iterator_std___String_val_std___Simple_types_char16_t_____difference_type;

/* 461 */
typedef std___String_iterator_std___String_val_std___Simple_types_char16_t___ std__basic_string_char16_t___iterator;

/* 462 */
typedef std___String_const_iterator_std___String_val_std___Simple_types_char16_t___ std__basic_string_char16_t___const_iterator;

/* 463 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char16_t____
{
  std___String_iterator_std___String_val_std___Simple_types_char16_t___ current;
};
#pragma pack(pop)

/* 464 */
typedef __int16 *std___Iter_ref_t_std___String_iterator_std___String_val_std___Simple_types_char16_t____;

/* 465 */
typedef std___Iter_ref_t_std___String_iterator_std___String_val_std___Simple_types_char16_t____ std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char16_t______reference;

/* 466 */
typedef std___String_iterator_std___String_val_std___Simple_types_char16_t_____pointer std___Iterator_traits_base_std___String_iterator_std___String_val_std___Simple_types_char16_t______pointer;

/* 467 */
typedef std___Iterator_traits_base_std___String_iterator_std___String_val_std___Simple_types_char16_t______pointer std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char16_t______pointer;

/* 468 */
typedef __int64 std___Iter_diff_t_std___String_iterator_std___String_val_std___Simple_types_char16_t____;

/* 469 */
typedef std___Iter_diff_t_std___String_iterator_std___String_val_std___Simple_types_char16_t____ std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char16_t______difference_type;

/* 470 */
typedef std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char16_t____ std__basic_string_char16_t___reverse_iterator;

/* 471 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char16_t____
{
  std___String_const_iterator_std___String_val_std___Simple_types_char16_t___ current;
};
#pragma pack(pop)

/* 472 */
typedef const __int16 *std___Iter_ref_t_std___String_const_iterator_std___String_val_std___Simple_types_char16_t____;

/* 473 */
typedef std___Iter_ref_t_std___String_const_iterator_std___String_val_std___Simple_types_char16_t____ std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char16_t______reference;

/* 474 */
typedef std___String_const_iterator_std___String_val_std___Simple_types_char16_t_____pointer std___Iterator_traits_base_std___String_const_iterator_std___String_val_std___Simple_types_char16_t______pointer;

/* 475 */
typedef std___Iterator_traits_base_std___String_const_iterator_std___String_val_std___Simple_types_char16_t______pointer std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char16_t______pointer;

/* 476 */
typedef __int64 std___Iter_diff_t_std___String_const_iterator_std___String_val_std___Simple_types_char16_t____;

/* 477 */
typedef std___Iter_diff_t_std___String_const_iterator_std___String_val_std___Simple_types_char16_t____ std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char16_t______difference_type;

/* 478 */
typedef std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char16_t____ std__basic_string_char16_t___const_reverse_iterator;

/* 479 */
typedef __int16 std__basic_string_char16_t___value_type;

/* 480 */
typedef std__basic_string_char16_t___value_type *std__basic_string_char16_t___reference;

/* 481 */
typedef const std__basic_string_char16_t___value_type *std__basic_string_char16_t___const_reference;

/* 486 */
typedef std___String_val_std___Simple_types_char16_t__ std__basic_string_char16_t____Scary_val;

/* 487 */
typedef std__allocator_char16_t_ std__basic_string_char16_t___allocator_type;

/* 488 */
typedef std__allocator_char16_t_ std__basic_string_char16_t____Alty;

/* 490 */
typedef std__basic_string_char16_t_ std__u16string;

/* 492 */
#pragma pack(push, 8)
struct __cppobj std__allocator_char32_t_
{
};
#pragma pack(pop)

/* 498 */
typedef __int32 std___Simple_types_char32_t___value_type;

/* 502 */
typedef std___Simple_types_char32_t___value_type std___String_val_std___Simple_types_char32_t____value_type;

/* 510 */
typedef std___Simple_types_char32_t___value_type *std___Simple_types_char32_t___pointer;

/* 511 */
typedef std___Simple_types_char32_t___pointer std___String_val_std___Simple_types_char32_t____pointer;

/* 538 */
#pragma pack(push, 8)
union std___String_val_std___Simple_types_char32_t_____Bxty
{
  std___String_val_std___Simple_types_char32_t____value_type _Buf[4];
  std___String_val_std___Simple_types_char32_t____pointer _Ptr;
  char _Alias[4];
};
#pragma pack(pop)

/* 536 */
typedef size_t std___Simple_types_char32_t___size_type;

/* 537 */
typedef std___Simple_types_char32_t___size_type std___String_val_std___Simple_types_char32_t____size_type;

/* 535 */
#pragma pack(push, 8)
struct __cppobj std___String_val_std___Simple_types_char32_t__ : std___Container_base
{
  std___String_val_std___Simple_types_char32_t_____Bxty _Bx;
  std___String_val_std___Simple_types_char32_t____size_type _Mysize;
  std___String_val_std___Simple_types_char32_t____size_type _Myres;
};
#pragma pack(pop)

/* 542 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__allocator_char32_t___std___String_val_std___Simple_types_char32_t____true_ : std__allocator_char32_t_
{
  std___String_val_std___Simple_types_char32_t__ _Myval2;
};
#pragma pack(pop)

/* 491 */
#pragma pack(push, 8)
struct __cppobj std__basic_string_char32_t_
{
  std___Compressed_pair_std__allocator_char32_t___std___String_val_std___Simple_types_char32_t____true_ _Mypair;
};
#pragma pack(pop)

/* 493 */
typedef size_t std___Default_allocator_traits_std__allocator_char32_t____size_type;

/* 494 */
typedef std___Default_allocator_traits_std__allocator_char32_t____size_type std__basic_string_char32_t___size_type;

/* 495 */
#pragma pack(push, 8)
struct __cppobj std__initializer_list_char32_t_
{
  __int32 *_First;
  __int32 *_Last;
};
#pragma pack(pop)

/* 499 */
typedef const std___Simple_types_char32_t___value_type *std___Simple_types_char32_t___const_pointer;

/* 500 */
typedef std___Simple_types_char32_t___const_pointer std___String_val_std___Simple_types_char32_t____const_pointer;

/* 501 */
typedef std___String_val_std___Simple_types_char32_t____const_pointer std___String_const_iterator_std___String_val_std___Simple_types_char32_t_____pointer;

/* 497 */
#pragma pack(push, 8)
struct __cppobj std___String_const_iterator_std___String_val_std___Simple_types_char32_t___ : std___Iterator_base
{
  std___String_const_iterator_std___String_val_std___Simple_types_char32_t_____pointer _Ptr;
};
#pragma pack(pop)

/* 496 */
#pragma pack(push, 8)
struct __cppobj std___String_iterator_std___String_val_std___Simple_types_char32_t___ : std___String_const_iterator_std___String_val_std___Simple_types_char32_t___
{
};
#pragma pack(pop)

/* 503 */
typedef std___String_val_std___Simple_types_char32_t____value_type std___String_const_iterator_std___String_val_std___Simple_types_char32_t_____value_type;

/* 504 */
typedef const std___String_const_iterator_std___String_val_std___Simple_types_char32_t_____value_type *std___String_const_iterator_std___String_val_std___Simple_types_char32_t_____reference;

/* 505 */
typedef ptrdiff_t std___Simple_types_char32_t___difference_type;

/* 506 */
typedef std___Simple_types_char32_t___difference_type std___String_val_std___Simple_types_char32_t____difference_type;

/* 507 */
typedef std___String_val_std___Simple_types_char32_t____difference_type std___String_const_iterator_std___String_val_std___Simple_types_char32_t_____difference_type;

/* 508 */
typedef std___String_val_std___Simple_types_char32_t____value_type std___String_iterator_std___String_val_std___Simple_types_char32_t_____value_type;

/* 509 */
typedef std___String_iterator_std___String_val_std___Simple_types_char32_t_____value_type *std___String_iterator_std___String_val_std___Simple_types_char32_t_____reference;

/* 512 */
typedef std___String_val_std___Simple_types_char32_t____pointer std___String_iterator_std___String_val_std___Simple_types_char32_t_____pointer;

/* 513 */
typedef std___String_val_std___Simple_types_char32_t____difference_type std___String_iterator_std___String_val_std___Simple_types_char32_t_____difference_type;

/* 514 */
typedef std___String_iterator_std___String_val_std___Simple_types_char32_t___ std__basic_string_char32_t___iterator;

/* 515 */
typedef std___String_const_iterator_std___String_val_std___Simple_types_char32_t___ std__basic_string_char32_t___const_iterator;

/* 516 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char32_t____
{
  std___String_iterator_std___String_val_std___Simple_types_char32_t___ current;
};
#pragma pack(pop)

/* 517 */
typedef __int32 *std___Iter_ref_t_std___String_iterator_std___String_val_std___Simple_types_char32_t____;

/* 518 */
typedef std___Iter_ref_t_std___String_iterator_std___String_val_std___Simple_types_char32_t____ std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char32_t______reference;

/* 519 */
typedef std___String_iterator_std___String_val_std___Simple_types_char32_t_____pointer std___Iterator_traits_base_std___String_iterator_std___String_val_std___Simple_types_char32_t______pointer;

/* 520 */
typedef std___Iterator_traits_base_std___String_iterator_std___String_val_std___Simple_types_char32_t______pointer std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char32_t______pointer;

/* 521 */
typedef __int64 std___Iter_diff_t_std___String_iterator_std___String_val_std___Simple_types_char32_t____;

/* 522 */
typedef std___Iter_diff_t_std___String_iterator_std___String_val_std___Simple_types_char32_t____ std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char32_t______difference_type;

/* 523 */
typedef std__reverse_iterator_std___String_iterator_std___String_val_std___Simple_types_char32_t____ std__basic_string_char32_t___reverse_iterator;

/* 524 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char32_t____
{
  std___String_const_iterator_std___String_val_std___Simple_types_char32_t___ current;
};
#pragma pack(pop)

/* 525 */
typedef const __int32 *std___Iter_ref_t_std___String_const_iterator_std___String_val_std___Simple_types_char32_t____;

/* 526 */
typedef std___Iter_ref_t_std___String_const_iterator_std___String_val_std___Simple_types_char32_t____ std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char32_t______reference;

/* 527 */
typedef std___String_const_iterator_std___String_val_std___Simple_types_char32_t_____pointer std___Iterator_traits_base_std___String_const_iterator_std___String_val_std___Simple_types_char32_t______pointer;

/* 528 */
typedef std___Iterator_traits_base_std___String_const_iterator_std___String_val_std___Simple_types_char32_t______pointer std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char32_t______pointer;

/* 529 */
typedef __int64 std___Iter_diff_t_std___String_const_iterator_std___String_val_std___Simple_types_char32_t____;

/* 530 */
typedef std___Iter_diff_t_std___String_const_iterator_std___String_val_std___Simple_types_char32_t____ std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char32_t______difference_type;

/* 531 */
typedef std__reverse_iterator_std___String_const_iterator_std___String_val_std___Simple_types_char32_t____ std__basic_string_char32_t___const_reverse_iterator;

/* 532 */
typedef __int32 std__basic_string_char32_t___value_type;

/* 533 */
typedef std__basic_string_char32_t___value_type *std__basic_string_char32_t___reference;

/* 534 */
typedef const std__basic_string_char32_t___value_type *std__basic_string_char32_t___const_reference;

/* 539 */
typedef std___String_val_std___Simple_types_char32_t__ std__basic_string_char32_t____Scary_val;

/* 540 */
typedef std__allocator_char32_t_ std__basic_string_char32_t___allocator_type;

/* 541 */
typedef std__allocator_char32_t_ std__basic_string_char32_t____Alty;

/* 543 */
typedef std__basic_string_char32_t_ std__u32string;

/* 544 */
#pragma pack(push, 8)
struct _finddata32_t
{
  unsigned int attrib;
  __time32_t time_create;
  __time32_t time_access;
  __time32_t time_write;
  _fsize_t size;
  char name[260];
};
#pragma pack(pop)

/* 545 */
#pragma pack(push, 8)
struct _finddata32i64_t
{
  unsigned int attrib;
  __time32_t time_create;
  __time32_t time_access;
  __time32_t time_write;
  __int64 size;
  char name[260];
};
#pragma pack(pop)

/* 546 */
#pragma pack(push, 8)
struct _finddata64i32_t
{
  unsigned int attrib;
  __time64_t time_create;
  __time64_t time_access;
  __time64_t time_write;
  _fsize_t size;
  char name[260];
};
#pragma pack(pop)

/* 547 */
#pragma pack(push, 8)
struct __finddata64_t
{
  unsigned int attrib;
  __time64_t time_create;
  __time64_t time_access;
  __time64_t time_write;
  __int64 size;
  char name[260];
};
#pragma pack(pop)

/* 548 */
#pragma pack(push, 8)
struct _diskfree_t
{
  unsigned int total_clusters;
  unsigned int avail_clusters;
  unsigned int sectors_per_cluster;
  unsigned int bytes_per_sector;
};
#pragma pack(pop)

/* 549 */
enum std___Tree_child : unsigned __int32
{
  _Right = 0x0,
  _Left = 0x1,
  _Unused = 0x2,
};

/* 550 */
#pragma pack(push, 8)
struct std___Ignore
{
};
#pragma pack(pop)

/* 551 */
#pragma pack(push, 8)
struct __cppobj std___Exact_args_t
{
};
#pragma pack(pop)

/* 552 */
#pragma pack(push, 8)
struct __cppobj std___Unpack_tuple_t
{
};
#pragma pack(pop)

/* 553 */
#pragma pack(push, 8)
struct __cppobj std___Alloc_exact_args_t
{
};
#pragma pack(pop)

/* 554 */
#pragma pack(push, 8)
struct __cppobj std___Alloc_unpack_tuple_t
{
};
#pragma pack(pop)

/* 555 */
#pragma pack(push, 8)
struct __cppobj std__tuple__
{
};
#pragma pack(pop)

/* 556 */
#pragma pack(push, 8)
struct __cppobj std___Rand_urng_from_func
{
};
#pragma pack(pop)

/* 557 */
typedef unsigned int std___Rand_urng_from_func__result_type;

/* 558 */
typedef unsigned __int8 uchar;

/* 559 */
typedef unsigned __int16 ushort;

/* 560 */
typedef unsigned int uint;

/* 561 */
typedef char int8;

/* 562 */
typedef char sint8;

/* 563 */
typedef unsigned __int8 uint8;

/* 564 */
typedef __int16 int16;

/* 565 */
typedef unsigned __int16 uint16;

/* 566 */
typedef int int32;

/* 567 */
typedef unsigned int uint32;

/* 568 */
typedef unsigned __int64 ulonglong;

/* 569 */
typedef __int64 longlong;

/* 570 */
struct __cppobj uint128
{
  ulonglong l;
  ulonglong h;
};

/* 571 */
struct __cppobj int128
{
  ulonglong l;
  longlong h;
};

/* 572 */
typedef longlong int64;

/* 573 */
typedef ulonglong uint64;

/* 574 */
typedef __int16 wchar16_t;

/* 575 */
typedef uint32 wchar32_t;

/* 576 */
typedef ptrdiff_t ssize_t;

/* 577 */
typedef uint64 ea_t;

/* 578 */
typedef uint64 sel_t;

/* 579 */
typedef uint64 asize_t;

/* 580 */
typedef int64 adiff_t;

/* 581 */
typedef asize_t uval_t;

/* 582 */
typedef adiff_t sval_t;

/* 583 */
typedef uint64 ea64_t;

/* 584 */
typedef int error_t;

/* 585 */
typedef uint8 op_dtype_t;

/* 586 */
typedef uval_t inode_t;

/* 587 */
typedef size_t diffpos_t;

/* 588 */
typedef int32 qtime32_t;

/* 589 */
typedef uint64 qtime64_t;

/* 590 */
struct qstatbuf
{
  uint64 qst_dev;
  uint32 qst_ino;
  uint32 qst_mode;
  uint32 qst_nlink;
  uint32 qst_uid;
  uint32 qst_gid;
  uint64 qst_rdev;
  int64 qst_size;
  int32 qst_blksize;
  int32 qst_blocks;
  qtime64_t qst_atime;
  qtime64_t qst_mtime;
  qtime64_t qst_ctime;
};

/* 591 */
struct __cppobj interr_exc_t : std__exception
{
  int code;
};

/* 592 */
/*struct interr_exc_t_vtbl
{
  void (__fastcall *_del_interr_exc_t)(interr_exc_t *__hidden this);
  const char *(__fastcall *what)(const std__exception *__hidden this);
};
*/

/* 593 */
struct __cppobj qvector_unsigned_long_long_
{
  unsigned __int64 *array;
  size_t n;
  size_t alloc;
};

/* 594 */
typedef unsigned __int64 *qvector_unsigned_long_long___iterator;

/* 595 */
typedef unsigned __int64 *qvector_unsigned_long_long___const_iterator;

/* 596 */
typedef qvector_unsigned_long_long_ uvalvec_t;

/* 597 */
struct __cppobj qvector_long_long_
{
  __int64 *array;
  size_t n;
  size_t alloc;
};

/* 598 */
typedef __int64 *qvector_long_long___iterator;

/* 599 */
typedef __int64 *qvector_long_long___const_iterator;

/* 600 */
typedef qvector_long_long_ svalvec_t;

/* 601 */
typedef qvector_unsigned_long_long_ eavec_t;

/* 602 */
struct __cppobj qvector_int_
{
  int *array;
  size_t n;
  size_t alloc;
};

/* 603 */
typedef int *qvector_int___iterator;

/* 604 */
typedef int *qvector_int___const_iterator;

/* 605 */
typedef qvector_int_ intvec_t;

/* 606 */
struct __cppobj qvector_bool_
{
  bool *array;
  size_t n;
  size_t alloc;
};

/* 607 */
typedef bool *qvector_bool___iterator;

/* 608 */
typedef bool *qvector_bool___const_iterator;

/* 609 */
typedef qvector_bool_ boolvec_t;

/* 610 */
typedef qvector_unsigned_long_long_ sizevec_t;

/* 611 */
struct __cppobj qrefcnt_obj_t
{
  qrefcnt_obj_t_vtbl *__vftable /*VFT*/;
  int refcnt;
};

/* 612 */
/*struct qrefcnt_obj_t_vtbl
{
  void (__fastcall *release)(qrefcnt_obj_t *__hidden this);
};
*/

/* 619 */
struct __cppobj qvector_char_
{
  char *array;
  size_t n;
  size_t alloc;
};

/* 613 */
struct __cppobj _qstring_char_
{
  qvector_char_ body;
};

/* 614 */
typedef char *_qstring_char___iterator;

/* 615 */
typedef char *_qstring_char___const_iterator;

/* 616 */
struct __cppobj qvector__qstring_char__
{
  _qstring_char_ *array;
  size_t n;
  size_t alloc;
};

/* 617 */
typedef _qstring_char_ *qvector__qstring_char____iterator;

/* 618 */
typedef _qstring_char_ *qvector__qstring_char____const_iterator;

/* 620 */
typedef char *qvector_char___iterator;

/* 621 */
typedef char *qvector_char___const_iterator;

/* 622 */
typedef _qstring_char_ qstring;

/* 629 */
struct __cppobj qvector_unsigned_char_
{
  unsigned __int8 *array;
  size_t n;
  size_t alloc;
};

/* 623 */
struct __cppobj _qstring_unsigned_char_
{
  qvector_unsigned_char_ body;
};

/* 624 */
typedef unsigned __int8 *_qstring_unsigned_char___iterator;

/* 625 */
typedef unsigned __int8 *_qstring_unsigned_char___const_iterator;

/* 626 */
struct __cppobj qvector__qstring_unsigned_char__
{
  _qstring_unsigned_char_ *array;
  size_t n;
  size_t alloc;
};

/* 627 */
typedef _qstring_unsigned_char_ *qvector__qstring_unsigned_char____iterator;

/* 628 */
typedef _qstring_unsigned_char_ *qvector__qstring_unsigned_char____const_iterator;

/* 630 */
typedef unsigned __int8 *qvector_unsigned_char___iterator;

/* 631 */
typedef unsigned __int8 *qvector_unsigned_char___const_iterator;

/* 632 */
typedef _qstring_unsigned_char_ qtype;

/* 639 */
struct __cppobj qvector_wchar_t_
{
  __int16 *array;
  size_t n;
  size_t alloc;
};

/* 633 */
struct __cppobj _qstring_wchar_t_
{
  qvector_wchar_t_ body;
};

/* 634 */
typedef __int16 *_qstring_wchar_t___iterator;

/* 635 */
typedef __int16 *_qstring_wchar_t___const_iterator;

/* 636 */
struct __cppobj qvector__qstring_wchar_t__
{
  _qstring_wchar_t_ *array;
  size_t n;
  size_t alloc;
};

/* 637 */
typedef _qstring_wchar_t_ *qvector__qstring_wchar_t____iterator;

/* 638 */
typedef _qstring_wchar_t_ *qvector__qstring_wchar_t____const_iterator;

/* 640 */
typedef __int16 *qvector_wchar_t___iterator;

/* 641 */
typedef __int16 *qvector_wchar_t___const_iterator;

/* 642 */
typedef _qstring_wchar_t_ qwstring;

/* 643 */
typedef qvector__qstring_char__ qstrvec_t;

/* 644 */
typedef qvector__qstring_wchar_t__ qwstrvec_t;

/* 645 */
struct __cppobj bytevec_t : qvector_unsigned_char_
{
};

/* 646 */
struct __cppobj reloc_info_t : bytevec_t
{
};

/* 647 */
struct __cppobj relobj_t : bytevec_t
{
  ea_t base;
  reloc_info_t ri;
};

/* 648 */
struct __cppobj memory_deserializer_t
{
  const uchar *ptr;
  const uchar *end;
};

/* 649 */
typedef uint32 flags_t;

/* 650 */
typedef ea_t tid_t;

/* 651 */
typedef uint32 bgcolor_t;

/* 652 */
struct __cppobj channel_redir_t
{
  int fd;
  qstring file;
  int flags;
  int start;
  int length;
};

/* 653 */
struct __cppobj qvector_channel_redir_t_
{
  channel_redir_t *array;
  size_t n;
  size_t alloc;
};

/* 654 */
typedef channel_redir_t *qvector_channel_redir_t___iterator;

/* 655 */
typedef channel_redir_t *qvector_channel_redir_t___const_iterator;

/* 656 */
typedef qvector_channel_redir_t_ channel_redirs_t;

/* 657 */
typedef void __cdecl cliopt_handler_t(const char *, void *);

/* 658 */
typedef void __cdecl cliopt_poly_handler_t(int, const char **, void *);

/* 659 */
struct cliopt_t
{
  char shortname;
  const char *longname;
  const char *help;
  cliopt_handler_t *handler;
  int nargs;
};

/* 660 */
struct ida_movable_type_cliopt_t_
{
};

/* 662 */
struct __cppobj qvector_cliopt_t_
{
  cliopt_t *array;
  size_t n;
  size_t alloc;
};

/* 665 */
typedef int cliopts_t__usage_printer_t(const char *, ...);

/* 661 */
struct __cppobj cliopts_t : qvector_cliopt_t_
{
  qstring prog_name;
  qstring epilog;
  cliopts_t__usage_printer_t *printer;
};

/* 663 */
typedef cliopt_t *qvector_cliopt_t___iterator;

/* 664 */
typedef cliopt_t *qvector_cliopt_t___const_iterator;

/* 666 */
struct instant_dbgopts_t
{
  qstring debmod;
  qstring env;
  qstring host;
  qstring pass;
  int port;
  int pid;
  int event_id;
  bool attach;
};

/* 667 */
struct __cppobj launch_process_params_t
{
  size_t cb;
  int flags;
  const char *path;
  const char *args;
  ssize_t in_handle;
  ssize_t out_handle;
  ssize_t err_handle;
  char *env;
  const char *startdir;
  void *info;
};

/* 668 */
enum tty_control_t : unsigned __int32
{
  TCT_UNKNOWN = 0x0,
  TCT_OWNER = 0x1,
  TCT_NOT_OWNER = 0x2,
};

/* 669 */
typedef int __cdecl _B4F266B0568ADA5794EA29B6B9D8A3FE(void *);

/* 670 */
struct __qthread_t
{
};

/* 671 */
typedef __qthread_t *qthread_t;

/* 672 */
struct __qsemaphore_t
{
};

/* 673 */
typedef __qsemaphore_t *qsemaphore_t;

/* 674 */
struct __qmutex_t
{
};

/* 675 */
typedef __qmutex_t *qmutex_t;

/* 676 */
struct __cppobj qmutex_locker_t
{
  qmutex_t lock;
};

/* 677 */
typedef void *qhandle_t;

/* 678 */
struct __cppobj range_t
{
  ea_t start_ea;
  ea_t end_ea;
};

/* 679 */
struct ida_movable_type_range_t_
{
};

/* 680 */
struct __cppobj qvector_range_t_
{
  range_t *array;
  size_t n;
  size_t alloc;
};

/* 681 */
typedef range_t *qvector_range_t___iterator;

/* 682 */
typedef range_t *qvector_range_t___const_iterator;

/* 683 */
typedef qvector_range_t_ rangevec_base_t;

/* 684 */
struct __cppobj rangevec_t : rangevec_base_t
{
};

/* 685 */
enum range_kind_t : unsigned __int32
{
  RANGE_KIND_UNKNOWN = 0x0,
  RANGE_KIND_FUNC = 0x1,
  RANGE_KIND_SEGMENT = 0x2,
  RANGE_KIND_HIDDEN_RANGE = 0x3,
};

/* 686 */
struct __cppobj rangeset_t
{
  rangevec_t bag;
  const range_t *cache;
  int undo_code;
};

/* 687 */
typedef qvector_range_t___const_iterator rangeset_t__const_iterator;

/* 688 */
typedef qvector_range_t___iterator rangeset_t__iterator;

/* 689 */
struct ida_movable_type_rangeset_t_
{
};

/* 690 */
struct __cppobj qvector_rangeset_t_
{
  rangeset_t *array;
  size_t n;
  size_t alloc;
};

/* 691 */
typedef rangeset_t *qvector_rangeset_t___iterator;

/* 692 */
typedef rangeset_t *qvector_rangeset_t___const_iterator;

/* 693 */
typedef qvector_rangeset_t_ array_of_rangesets;

/* 694 */
struct __cppobj qvector_const_rangeset_t__P_
{
  const rangeset_t **array;
  size_t n;
  size_t alloc;
};

/* 695 */
typedef const rangeset_t **qvector_const_rangeset_t__P___iterator;

/* 696 */
typedef const rangeset_t **qvector_const_rangeset_t__P___const_iterator;

/* 697 */
typedef qvector_const_rangeset_t__P_ rangeset_crefvec_t;

/* 698 */
struct __cppobj plugin_t
{
  int version;
  int flags;
  plugmod_t *(*init)(void);
  void (*term)(void);
  bool (__cdecl *run)(size_t);
  const char *comment;
  const char *help;
  const char *wanted_name;
  const char *wanted_hotkey;
};

/* 699 */
struct __cppobj plugmod_t
{
  plugmod_t_vtbl *__vftable /*VFT*/;
  size_t owner;
  size_t reserved;
};

/* 700 */
enum filetype_t : unsigned __int32
{
  f_EXE_old = 0x0,
  f_COM_old = 0x1,
  f_BIN = 0x2,
  f_DRV = 0x3,
  f_WIN = 0x4,
  f_HEX = 0x5,
  f_MEX = 0x6,
  f_LX = 0x7,
  f_LE = 0x8,
  f_NLM = 0x9,
  f_COFF = 0xA,
  f_PE = 0xB,
  f_OMF = 0xC,
  f_SREC = 0xD,
  f_ZIP = 0xE,
  f_OMFLIB = 0xF,
  f_AR = 0x10,
  f_LOADER = 0x11,
  f_ELF = 0x12,
  f_W32RUN = 0x13,
  f_AOUT = 0x14,
  f_PRC = 0x15,
  f_EXE = 0x16,
  f_COM = 0x17,
  f_AIXAR = 0x18,
  f_MACHO = 0x19,
  f_PSXOBJ = 0x1A,
};

/* 701 */
typedef uchar comp_t;

/* 702 */
typedef uchar cm_t;

/* 703 */
struct compiler_info_t
{
  comp_t id;
  cm_t cm;
  uchar size_i;
  uchar size_b;
  uchar size_e;
  uchar defalign;
  uchar size_s;
  uchar size_l;
  uchar size_ll;
  uchar size_ldbl;
};

/* 704 */
enum storage_type_t : unsigned __int32
{
  STT_CUR = 0xFFFFFFFF,
  STT_VA = 0x0,
  STT_MM = 0x1,
  STT_DBG = 0x2,
};

/* 705 */
struct idainfo
{
  char tag[3];
  char zero;
  ushort version;
  char procname[16];
  ushort s_genflags;
  uint32 lflags;
  uint32 database_change_count;
  ushort filetype;
  ushort ostype;
  ushort apptype;
  uchar asmtype;
  uchar specsegs;
  uint32 af;
  uint32 af2;
  uval_t baseaddr;
  sel_t start_ss;
  sel_t start_cs;
  ea_t start_ip;
  ea_t start_ea;
  ea_t start_sp;
  ea_t main;
  ea_t min_ea;
  ea_t max_ea;
  ea_t omin_ea;
  ea_t omax_ea;
  ea_t lowoff;
  ea_t highoff;
  uval_t maxref;
  range_t privrange;
  sval_t netdelta;
  uchar xrefnum;
  uchar type_xrefnum;
  uchar refcmtnum;
  uchar s_xrefflag;
  ushort max_autoname_len;
  char nametype;
  uint32 short_demnames;
  uint32 long_demnames;
  uchar demnames;
  uchar listnames;
  uchar indent;
  uchar cmt_indent;
  ushort margin;
  ushort lenxref;
  uint32 outflags;
  uchar s_cmtflg;
  uchar s_limiter;
  __int16 bin_prefix_size;
  uchar s_prefflag;
  uchar strlit_flags;
  uchar strlit_break;
  char strlit_zeroes;
  int32 strtype;
  char strlit_pref[16];
  uval_t strlit_sernum;
  uval_t datatypes;
  compiler_info_t cc;
  uint32 abibits;
  uint32 appcall_options;
  uint32 padding;
};

/* 706 */
enum inftag_t : unsigned __int32
{
  INF_VERSION = 0x0,
  INF_PROCNAME = 0x1,
  INF_GENFLAGS = 0x2,
  INF_LFLAGS = 0x3,
  INF_DATABASE_CHANGE_COUNT = 0x4,
  INF_FILETYPE = 0x5,
  INF_OSTYPE = 0x6,
  INF_APPTYPE = 0x7,
  INF_ASMTYPE = 0x8,
  INF_SPECSEGS = 0x9,
  INF_AF = 0xA,
  INF_AF2 = 0xB,
  INF_BASEADDR = 0xC,
  INF_START_SS = 0xD,
  INF_START_CS = 0xE,
  INF_START_IP = 0xF,
  INF_START_EA = 0x10,
  INF_START_SP = 0x11,
  INF_MAIN = 0x12,
  INF_MIN_EA = 0x13,
  INF_MAX_EA = 0x14,
  INF_OMIN_EA = 0x15,
  INF_OMAX_EA = 0x16,
  INF_LOWOFF = 0x17,
  INF_HIGHOFF = 0x18,
  INF_MAXREF = 0x19,
  INF_PRIVRANGE = 0x1A,
  INF_PRIVRANGE_START_EA = 0x1B,
  INF_PRIVRANGE_END_EA = 0x1C,
  INF_NETDELTA = 0x1D,
  INF_XREFNUM = 0x1E,
  INF_TYPE_XREFNUM = 0x1F,
  INF_REFCMTNUM = 0x20,
  INF_XREFFLAG = 0x21,
  INF_MAX_AUTONAME_LEN = 0x22,
  INF_NAMETYPE = 0x23,
  INF_SHORT_DEMNAMES = 0x24,
  INF_LONG_DEMNAMES = 0x25,
  INF_DEMNAMES = 0x26,
  INF_LISTNAMES = 0x27,
  INF_INDENT = 0x28,
  INF_CMT_INDENT = 0x29,
  INF_MARGIN = 0x2A,
  INF_LENXREF = 0x2B,
  INF_OUTFLAGS = 0x2C,
  INF_CMTFLG = 0x2D,
  INF_LIMITER = 0x2E,
  INF_BIN_PREFIX_SIZE = 0x2F,
  INF_PREFFLAG = 0x30,
  INF_STRLIT_FLAGS = 0x31,
  INF_STRLIT_BREAK = 0x32,
  INF_STRLIT_ZEROES = 0x33,
  INF_STRTYPE = 0x34,
  INF_STRLIT_PREF = 0x35,
  INF_STRLIT_SERNUM = 0x36,
  INF_DATATYPES = 0x37,
  INF_CC = 0x38,
  INF_CC_ID = 0x39,
  INF_CC_CM = 0x3A,
  INF_CC_SIZE_I = 0x3B,
  INF_CC_SIZE_B = 0x3C,
  INF_CC_SIZE_E = 0x3D,
  INF_CC_DEFALIGN = 0x3E,
  INF_CC_SIZE_S = 0x3F,
  INF_CC_SIZE_L = 0x40,
  INF_CC_SIZE_LL = 0x41,
  INF_CC_SIZE_LDBL = 0x42,
  INF_ABIBITS = 0x43,
  INF_APPCALL_OPTIONS = 0x44,
  INF_FILE_FORMAT_NAME = 0x45,
  INF_GROUPS = 0x46,
  INF_H_PATH = 0x47,
  INF_C_MACROS = 0x48,
  INF_INCLUDE = 0x49,
  INF_DUALOP_GRAPH = 0x4A,
  INF_DUALOP_TEXT = 0x4B,
  INF_MD5 = 0x4C,
  INF_IDA_VERSION = 0x4D,
  INF_STR_ENCODINGS = 0x4E,
  INF_DBG_BINPATHS = 0x4F,
  INF_SHA256 = 0x50,
  INF_ABINAME = 0x51,
  INF_ARCHIVE_PATH = 0x52,
  INF_PROBLEMS = 0x53,
  INF_SELECTORS = 0x54,
  INF_NOTEPAD = 0x55,
  INF_SRCDBG_PATHS = 0x56,
  INF_SRCDBG_UNDESIRED = 0x57,
  INF_INITIAL_VERSION = 0x58,
  INF_CTIME = 0x59,
  INF_ELAPSED = 0x5A,
  INF_NOPENS = 0x5B,
  INF_CRC32 = 0x5C,
  INF_IMAGEBASE = 0x5D,
  INF_IDSNODE = 0x5E,
  INF_FSIZE = 0x5F,
  INF_OUTFILEENC = 0x60,
  INF_INPUT_FILE_PATH = 0x61,
  INF_LAST = 0x62,
};

/* 707 */
typedef ssize_t __cdecl _EBA1F6A8D2DCA7438A99E71F042CF31F(void *, int, va_list);

/* 708 */
enum hook_type_t : unsigned __int32
{
  HT_IDP = 0x0,
  HT_UI = 0x1,
  HT_DBG = 0x2,
  HT_IDB = 0x3,
  HT_DEV = 0x4,
  HT_VIEW = 0x5,
  HT_OUTPUT = 0x6,
  HT_GRAPH = 0x7,
  HT_IDD = 0x8,
  HT_LAST = 0x9,
};

/* 709 */
struct __cppobj post_event_visitor_t
{
  post_event_visitor_t_vtbl *__vftable /*VFT*/;
};

/* 710 */
/*struct post_event_visitor_t_vtbl
{
  ssize_t (__fastcall *handle_post_event)(post_event_visitor_t *__hidden this, ssize_t code, int notification_code, va_list va);
  void (__fastcall *_del_post_event_visitor_t)(post_event_visitor_t *__hidden this);
};
*/

/* 711 */
struct dbctx_t;

/* 712 */
typedef int atype_t;

/* 713 */
typedef int idastate_t;

/* 714 */
struct auto_display_t
{
  atype_t type;
  ea_t ea;
  idastate_t state;
};

/* 715 */
struct __cppobj bitrange_t
{
  uint16 offset;
  uint16 nbits;
};

/* 716 */
typedef uint64 nodeidx_t;

/* 717 */
struct __cppobj altadjust_visitor_t
{
  altadjust_visitor_t_vtbl *__vftable /*VFT*/;
};

/* 718 */
/*struct altadjust_visitor_t_vtbl
{
  bool (__fastcall *should_skip)(altadjust_visitor_t *__hidden this, nodeidx_t ea);
};
*/

/* 719 */
struct __cppobj netnode
{
  nodeidx_t netnodenumber;
};

/* 720 */
struct linput_t;

/* 721 */
struct __cppobj xrefpos_t
{
  ea_t ea;
  uchar type;
};

/* 722 */
typedef flags_t aflags_t;

/* 723 */
struct array_parameters_t
{
  int32 flags;
  int32 lineitems;
  int32 alignment;
};

/* 725 */
union switch_info_t___C5DE5EF0754122DC92472705FC220635
{
  ea_t values;
  uval_t lowcase;
};

/* 724 */
struct __cppobj switch_info_t
{
  uint32 flags;
  ushort ncases;
  ea_t jumps;
  union
  {
    ea_t values;
    uval_t lowcase;
  };
  ea_t defjump;
  ea_t startea;
  int jcases;
  sval_t ind_lowcase;
  ea_t elbase;
  int regnum;
  op_dtype_t regdtype;
  uval_t custom;
  int version;
  ea_t expr_ea;
  eavec_t marks;
};

/* 726 */
struct __cppobj custom_data_type_ids_t
{
  int16 dtid;
  int16 fids[8];
};

/* 727 */
typedef uchar reftype_t;

/* 728 */
struct __cppobj refinfo_t
{
  ea_t target;
  ea_t base;
  adiff_t tdelta;
  uint32 flags;
};

/* 729 */
struct __cppobj custom_refinfo_handler_t
{
  int32 cbsize;
  const char *name;
  const char *desc;
  int props;
  int (__cdecl *gen_expr)(qstring *, qstring *, ea_t, int, const refinfo_t *, ea_t, adiff_t *, ea_t *, ea_t *, int);
  bool (__cdecl *calc_reference_data)(ea_t *, ea_t *, ea_t, const refinfo_t *, adiff_t);
  void (__cdecl *get_format)(qstring *);
};

/* 730 */
struct refinfo_desc_t
{
  uint32 type;
  const char *name;
  const char *desc;
};

/* 731 */
struct ida_movable_type_refinfo_desc_t_
{
};

/* 732 */
struct __cppobj qvector_refinfo_desc_t_
{
  refinfo_desc_t *array;
  size_t n;
  size_t alloc;
};

/* 733 */
typedef refinfo_desc_t *qvector_refinfo_desc_t___iterator;

/* 734 */
typedef refinfo_desc_t *qvector_refinfo_desc_t___const_iterator;

/* 735 */
typedef qvector_refinfo_desc_t_ refinfo_desc_vec_t;

/* 736 */
struct __cppobj strpath_t
{
  int len;
  tid_t ids[32];
  adiff_t delta;
};

/* 737 */
struct __cppobj enum_const_t
{
  tid_t tid;
  uchar serial;
};

/* 738 */
union opinfo_t
{
  refinfo_t ri;
  tid_t tid;
  strpath_t path;
  int32 strtype;
  enum_const_t ec;
  custom_data_type_ids_t cd;
};

/* 739 */
struct __cppobj printop_t
{
  flags_t flags;
  opinfo_t ti;
  uchar features;
  int suspop;
  aflags_t aflags;
};

/* 740 */
typedef uchar type_t;

/* 741 */
typedef uchar p_list;

/* 742 */
struct __cppobj tinfo_t
{
  uint32 typid;
};

/* 743 */
typedef int __cdecl _9F179BD796548CF53E626457CEE0248F(ea_t, const char *, uval_t, void *);

/* 744 */
typedef uchar color_t;

/* 745 */
struct __cppobj user_defined_prefix_t
{
  user_defined_prefix_t_vtbl *__vftable /*VFT*/;
};

/* 840 */
union insn_t___9E84824C699BAE5425C4537D9D91097B
{
  uint32 auxpref;
  uint16 auxpref_u16[2];
  uint8 auxpref_u8[4];
};

/* 752 */
typedef uchar optype_t;

/* 753 */
union op_t___355AB7214167B95D8B5C7B6316BAAD36
{
  uint16 reg;
  uint16 phrase;
};

/* 754 */
struct _C9A2842D7E4A03835E8DE2C0C76BEBF2
{
  uint16 low;
  uint16 high;
};

/* 755 */
union op_t___D19208C9BED479775D09B0229B31B2BF
{
  uval_t value;
  _C9A2842D7E4A03835E8DE2C0C76BEBF2 value_shorts;
};

/* 756 */
union op_t___45BD1DDA02ACF400568455B314CE2DFE
{
  ea_t addr;
  _C9A2842D7E4A03835E8DE2C0C76BEBF2 addr_shorts;
};

/* 757 */
union op_t___B5B57D01B492307C249AAF11037C7C50
{
  ea_t specval;
  _C9A2842D7E4A03835E8DE2C0C76BEBF2 specval_shorts;
};

/* 751 */
struct __cppobj op_t
{
  uchar n;
  optype_t type;
  char offb;
  char offo;
  uchar flags;
  op_dtype_t dtype;
  union
  {
    uint16 reg;
    uint16 phrase;
  };
  union
  {
    uval_t value;
    _C9A2842D7E4A03835E8DE2C0C76BEBF2 value_shorts;
  };
  union
  {
    ea_t addr;
    _C9A2842D7E4A03835E8DE2C0C76BEBF2 addr_shorts;
  };
  union
  {
    ea_t specval;
    _C9A2842D7E4A03835E8DE2C0C76BEBF2 specval_shorts;
  };
  char specflag1;
  char specflag2;
  char specflag3;
  char specflag4;
};

/* 746 */
struct __cppobj insn_t
{
  ea_t cs;
  ea_t ip;
  ea_t ea;
  uint16 itype;
  uint16 size;
  union
  {
    uint32 auxpref;
    uint16 auxpref_u16[2];
    uint8 auxpref_u8[4];
  };
  char segpref;
  char insnpref;
  int16 flags;
  op_t ops[8];
};

/* 747 */
struct __cppobj processor_t
{
  int32 version;
  int32 id;
  uint32 flag;
  uint32 flag2;
  int32 cnbits;
  int32 dnbits;
  const char *const *psnames;
  const char *const *plnames;
  const asm_t *const *assemblers;
  ssize_t (__cdecl *_notify)(void *, int, va_list);
  const char *const *reg_names;
  int32 regs_num;
  int32 reg_first_sreg;
  int32 reg_last_sreg;
  int32 segreg_size;
  int32 reg_code_sreg;
  int32 reg_data_sreg;
  const bytes_t *codestart;
  const bytes_t *retcodes;
  int32 instruc_start;
  int32 instruc_end;
  const instruc_t *instruc;
  size_t tbyte_size;
  char real_width[4];
  int32 icode_return;
  void *unused_slot;
};

/* 748 */
enum processor_t__event_t : unsigned __int32
{
  ev_init = 0x0,
  ev_term = 0x1,
  ev_newprc = 0x2,
  ev_newasm = 0x3,
  ev_newfile = 0x4,
  ev_oldfile = 0x5,
  ev_newbinary = 0x6,
  ev_endbinary = 0x7,
  ev_set_idp_options = 0x8,
  ev_set_proc_options = 0x9,
  ev_ana_insn = 0xA,
  ev_emu_insn = 0xB,
  ev_out_header = 0xC,
  ev_out_footer = 0xD,
  ev_out_segstart = 0xE,
  ev_out_segend = 0xF,
  ev_out_assumes = 0x10,
  ev_out_insn = 0x11,
  ev_out_mnem = 0x12,
  ev_out_operand = 0x13,
  ev_out_data = 0x14,
  ev_out_label = 0x15,
  ev_out_special_item = 0x16,
  ev_gen_stkvar_def = 0x17,
  ev_gen_regvar_def = 0x18,
  ev_gen_src_file_lnnum = 0x19,
  ev_creating_segm = 0x1A,
  ev_moving_segm = 0x1B,
  ev_coagulate = 0x1C,
  ev_undefine = 0x1D,
  ev_treat_hindering_item = 0x1E,
  ev_rename = 0x1F,
  ev_is_far_jump = 0x20,
  ev_is_sane_insn = 0x21,
  ev_is_cond_insn = 0x22,
  ev_is_call_insn = 0x23,
  ev_is_ret_insn = 0x24,
  ev_may_be_func = 0x25,
  ev_is_basic_block_end = 0x26,
  ev_is_indirect_jump = 0x27,
  ev_is_insn_table_jump = 0x28,
  ev_is_switch = 0x29,
  ev_calc_switch_cases = 0x2A,
  ev_create_switch_xrefs = 0x2B,
  ev_is_align_insn = 0x2C,
  ev_is_alloca_probe = 0x2D,
  ev_delay_slot_insn = 0x2E,
  ev_is_sp_based = 0x2F,
  ev_can_have_type = 0x30,
  ev_cmp_operands = 0x31,
  ev_adjust_refinfo = 0x32,
  ev_get_operand_string = 0x33,
  ev_get_reg_name = 0x34,
  ev_str2reg = 0x35,
  ev_get_autocmt = 0x36,
  ev_get_bg_color = 0x37,
  ev_is_jump_func = 0x38,
  ev_func_bounds = 0x39,
  ev_verify_sp = 0x3A,
  ev_verify_noreturn = 0x3B,
  ev_create_func_frame = 0x3C,
  ev_get_frame_retsize = 0x3D,
  ev_get_stkvar_scale_factor = 0x3E,
  ev_demangle_name = 0x3F,
  ev_add_cref = 0x40,
  ev_add_dref = 0x41,
  ev_del_cref = 0x42,
  ev_del_dref = 0x43,
  ev_coagulate_dref = 0x44,
  ev_may_show_sreg = 0x45,
  ev_loader_elf_machine = 0x46,
  ev_auto_queue_empty = 0x47,
  ev_validate_flirt_func = 0x48,
  ev_adjust_libfunc_ea = 0x49,
  ev_assemble = 0x4A,
  ev_extract_address = 0x4B,
  ev_realcvt = 0x4C,
  ev_gen_asm_or_lst = 0x4D,
  ev_gen_map_file = 0x4E,
  ev_create_flat_group = 0x4F,
  ev_getreg = 0x50,
  ev_analyze_prolog = 0x51,
  ev_calc_spdelta = 0x52,
  ev_calcrel = 0x53,
  ev_find_reg_value = 0x54,
  ev_find_op_value = 0x55,
  ev_replaying_undo = 0x56,
  ev_ending_undo = 0x57,
  ev_set_code16_mode = 0x58,
  ev_get_code16_mode = 0x59,
  ev_get_procmod = 0x5A,
  ev_asm_installed = 0x5B,
  ev_get_reg_accesses = 0x5C,
  ev_is_control_flow_guard = 0x5D,
  ev_broadcast = 0x5E,
  ev_create_merge_handlers = 0x5F,
  ev_privrange_changed = 0x60,
  ev_last_cb_before_debugger = 0x61,
  ev_next_exec_insn = 0x3E8,
  ev_calc_step_over = 0x3E9,
  ev_calc_next_eas = 0x3EA,
  ev_get_macro_insn_head = 0x3EB,
  ev_get_dbr_opnum = 0x3EC,
  ev_insn_reads_tbit = 0x3ED,
  ev_clean_tbit = 0x3EE,
  ev_get_idd_opinfo = 0x3EF,
  ev_get_reg_info = 0x3F0,
  ev_last_cb_before_type_callbacks = 0x3F2,
  ev_setup_til = 0x7D0,
  ev_get_abi_info = 0x7D1,
  ev_max_ptr_size = 0x7D2,
  ev_get_default_enum_size = 0x7D3,
  ev_get_cc_regs = 0x7D4,
  ev_obsolete1 = 0x7D5,
  ev_obsolete2 = 0x7D6,
  ev_get_simd_types = 0x7D7,
  ev_calc_cdecl_purged_bytes = 0x7D8,
  ev_calc_purged_bytes = 0x7D9,
  ev_calc_retloc = 0x7DA,
  ev_calc_arglocs = 0x7DB,
  ev_calc_varglocs = 0x7DC,
  ev_adjust_argloc = 0x7DD,
  ev_lower_func_type = 0x7DE,
  ev_equal_reglocs = 0x7DF,
  ev_use_stkarg_type = 0x7E0,
  ev_use_regarg_type = 0x7E1,
  ev_use_arg_types = 0x7E2,
  ev_arg_addrs_ready = 0x7E3,
  ev_decorate_name = 0x7E4,
  ev_arch_changed = 0x7E5,
  ev_get_stkarg_area_info = 0x7E6,
  ev_last_cb_before_loader = 0x7E7,
  ev_loader = 0xBB8,
};

/* 749 */
struct __cppobj segment_t : range_t
{
  uval_t name;
  uval_t sclass;
  uval_t orgbase;
  uchar align;
  uchar comb;
  uchar perm;
  uchar bitness;
  ushort flags;
  sel_t sel;
  sel_t defsr[16];
  uchar type;
  bgcolor_t color;
};

/* 768 */
struct __cppobj outctx_base_t
{
  outctx_base_t_vtbl *__vftable /*VFT*/;
  ea_t insn_ea;
  qstring outbuf;
  ssize_t regname_idx;
  int suspop;
  flags_t F;
  uval_t *outvalues;
  int outvalue_getn_flags;
  void *user_data;
  void *kern_data;
  qstrvec_t *lnar;
  int lnar_maxsize;
  int default_lnnum;
  qstring line_prefix;
  ssize_t prefix_len;
  int ctxflags;
  int ind0;
  ea_t cmt_ea;
  qstring cmtbuf;
  const char *cmtptr;
  color_t cmtcolor;
};

/* 750 */
struct __cppobj outctx_t : outctx_base_t
{
  ea_t bin_ea;
  char bin_state;
  int gl_bpsize;
  int bin_width;
  insn_t insn;
  qstring curlabel;
  const printop_t *wif;
  procmod_t *procmod;
  processor_t *ph;
  asm_t *ash;
  uval_t saved_immvals[8];
};

/* 758 */
struct __cppobj member_t
{
  tid_t id;
  ea_t soff;
  ea_t eoff;
  flags_t flag;
  uint32 props;
};

/* 762 */
struct llabel_t;

/* 764 */
struct _65BAA48EEE7310C500857B0EADEF1038
{
  uval_t frame;
  asize_t frsize;
  ushort frregs;
  asize_t argsize;
  asize_t fpd;
  bgcolor_t color;
  uint32 pntqty;
  stkpnt_t *points;
  int regvarqty;
  regvar_t *regvars;
  int llabelqty;
  llabel_t *llabels;
  int regargqty;
  regarg_t *regargs;
  int tailqty;
  range_t *tails;
};

/* 765 */
struct _87937D864C1217F0C6EDE3E399C97469
{
  ea_t owner;
  int refqty;
  ea_t *referers;
};

/* 766 */
union func_t___190F1B51DAD89E14E2BE7DA9DE59BCBC
{
  struct
  {
    uval_t frame;
    asize_t frsize;
    ushort frregs;
    asize_t argsize;
    asize_t fpd;
    bgcolor_t color;
    uint32 pntqty;
    stkpnt_t *points;
    int regvarqty;
    regvar_t *regvars;
    int llabelqty;
    llabel_t *llabels;
    int regargqty;
    regarg_t *regargs;
    int tailqty;
    range_t *tails;
  };
  struct
  {
    ea_t owner;
    int refqty;
    ea_t *referers;
  };
};

/* 759 */
struct __cppobj func_t : range_t
{
  uint64 flags;
  union
  {
    struct
    {
      uval_t frame;
      asize_t frsize;
      ushort frregs;
      asize_t argsize;
      asize_t fpd;
      bgcolor_t color;
      uint32 pntqty;
      stkpnt_t *points;
      int regvarqty;
      regvar_t *regvars;
      int llabelqty;
      llabel_t *llabels;
      int regargqty;
      regarg_t *regargs;
      int tailqty;
      range_t *tails;
    };
    struct
    {
      ea_t owner;
      int refqty;
      ea_t *referers;
    };
  };
};

/* 760 */
struct __cppobj stkpnt_t
{
  ea_t ea;
  sval_t spd;
};

/* 761 */
struct __cppobj regvar_t : range_t
{
  char *canon;
  char *user;
  char *cmt;
};

/* 763 */
struct __cppobj regarg_t
{
  int reg;
  type_t *type;
  char *name;
};

/* 767 */
/*struct outctx_t_vtbl
{
  void (__fastcall *_del_outctx_t)(outctx_t *__hidden this);
  void (__fastcall *out_vprintf)(outctx_base_t *__hidden this, const char *format, va_list va);
  flags_t (__fastcall *out_value)(outctx_base_t *__hidden this, const op_t *x, int outf);
  void (__fastcall *out_symbol)(outctx_base_t *__hidden this, char c);
  void (__fastcall *out_chars)(outctx_base_t *__hidden this, char c, int n);
  void (__fastcall *add_spaces)(outctx_base_t *__hidden this, qstring *buf, ssize_t len);
  void (__fastcall *out_line)(outctx_base_t *__hidden this, const char *str, color_t color);
  void (__fastcall *out_tagon)(outctx_base_t *__hidden this, color_t tag);
  void (__fastcall *out_tagoff)(outctx_base_t *__hidden this, color_t tag);
  void (__fastcall *out_addr_tag)(outctx_base_t *__hidden this, ea_t ea);
  void (__fastcall *out_colored_register_line)(outctx_base_t *__hidden this, const char *str);
  void (__fastcall *out_char)(outctx_base_t *__hidden this, char c);
  void (__fastcall *out_btoa)(outctx_base_t *__hidden this, uval_t Word, char radix);
  void (__fastcall *out_long)(outctx_base_t *__hidden this, sval_t v, char radix);
  bool (__fastcall *out_name_expr)(outctx_base_t *__hidden this, const op_t *x, ea_t ea, adiff_t off);
  bool (__fastcall *flush_outbuf)(outctx_base_t *__hidden this, int indent);
  bool (__fastcall *flush_buf)(outctx_base_t *__hidden this, const char *buf, int indent);
  int (__fastcall *term_outctx)(outctx_base_t *__hidden this, const char *prefix);
  bool (__fastcall *gen_vprintf)(outctx_base_t *__hidden this, int indent, const char *format, va_list va);
  bool (__fastcall *gen_empty_line)(outctx_base_t *__hidden this);
  bool (__fastcall *gen_border_line)(outctx_base_t *__hidden this, bool solid);
  bool (__fastcall *gen_colored_cmt_line_v)(outctx_base_t *__hidden this, color_t color, const char *format, va_list va);
  bool (__fastcall *gen_block_cmt)(outctx_base_t *__hidden this, const char *cmt, color_t color);
  void (__fastcall *setup_outctx)(outctx_t *__hidden this, const char *prefix, int flags);
  ssize_t (__fastcall *retrieve_cmt)(outctx_t *__hidden this);
  ssize_t (__fastcall *retrieve_name)(outctx_t *__hidden this, qstring *, color_t *);
  bool (__fastcall *gen_xref_lines)(outctx_t *__hidden this);
  void (__fastcall *init_lines_array)(outctx_base_t *__hidden this, qstrvec_t *answers, int maxsize);
  member_t *(__fastcall *get_stkvar)(outctx_base_t *__hidden this, const op_t *, uval_t, sval_t *, int *);
  bool (__fastcall *flush_and_reinit)(outctx_base_t *__hidden this);
  void (__fastcall *append_user_prefix)(outctx_base_t *__hidden this, const char *, int);
  void (__fastcall *add_aux_prefix)(outctx_base_t *__hidden this, const char *, int);
  void (__fastcall *out_label_addr_tag)(outctx_base_t *__hidden this);
  void (__fastcall *out_aux_cmts)(outctx_base_t *__hidden this);
  void (__fastcall *out_mnem)(outctx_t *__hidden this, int width, const char *postfix);
  void (__fastcall *out_custom_mnem)(outctx_t *__hidden this, const char *mnem, int width, const char *postfix);
  void (__fastcall *out_mnemonic)(outctx_t *__hidden this);
  bool (__fastcall *out_one_operand)(outctx_t *__hidden this, int n);
  size_t (__fastcall *get_immvals)(outctx_t *__hidden this, uval_t *out, int i);
  void (__fastcall *out_immchar_cmts)(outctx_t *__hidden this);
  void (__fastcall *gen_func_header)(outctx_t *__hidden this, func_t *pfn);
  void (__fastcall *gen_func_footer)(outctx_t *__hidden this, const func_t *pfn);
  void (__fastcall *out_data)(outctx_t *__hidden this, bool analyze_only);
  bool (__fastcall *out_specea)(outctx_t *__hidden this, uchar segtype);
  void (__fastcall *gen_header_extra)(outctx_t *__hidden this);
  void (__fastcall *gen_header)(outctx_t *__hidden this, int flags, const char *proc_name, const char *proc_flavour);
};
*/

/* 769 */
/*struct outctx_base_t_vtbl
{
  void (__fastcall *_del_outctx_base_t)(outctx_base_t *__hidden this);
  void (__fastcall *out_vprintf)(outctx_base_t *__hidden this, const char *format, va_list va);
  flags_t (__fastcall *out_value)(outctx_base_t *__hidden this, const op_t *x, int outf);
  void (__fastcall *out_symbol)(outctx_base_t *__hidden this, char c);
  void (__fastcall *out_chars)(outctx_base_t *__hidden this, char c, int n);
  void (__fastcall *add_spaces)(outctx_base_t *__hidden this, qstring *buf, ssize_t len);
  void (__fastcall *out_line)(outctx_base_t *__hidden this, const char *str, color_t color);
  void (__fastcall *out_tagon)(outctx_base_t *__hidden this, color_t tag);
  void (__fastcall *out_tagoff)(outctx_base_t *__hidden this, color_t tag);
  void (__fastcall *out_addr_tag)(outctx_base_t *__hidden this, ea_t ea);
  void (__fastcall *out_colored_register_line)(outctx_base_t *__hidden this, const char *str);
  void (__fastcall *out_char)(outctx_base_t *__hidden this, char c);
  void (__fastcall *out_btoa)(outctx_base_t *__hidden this, uval_t Word, char radix);
  void (__fastcall *out_long)(outctx_base_t *__hidden this, sval_t v, char radix);
  bool (__fastcall *out_name_expr)(outctx_base_t *__hidden this, const op_t *x, ea_t ea, adiff_t off);
  bool (__fastcall *flush_outbuf)(outctx_base_t *__hidden this, int indent);
  bool (__fastcall *flush_buf)(outctx_base_t *__hidden this, const char *buf, int indent);
  int (__fastcall *term_outctx)(outctx_base_t *__hidden this, const char *prefix);
  bool (__fastcall *gen_vprintf)(outctx_base_t *__hidden this, int indent, const char *format, va_list va);
  bool (__fastcall *gen_empty_line)(outctx_base_t *__hidden this);
  bool (__fastcall *gen_border_line)(outctx_base_t *__hidden this, bool solid);
  bool (__fastcall *gen_colored_cmt_line_v)(outctx_base_t *__hidden this, color_t color, const char *format, va_list va);
  bool (__fastcall *gen_block_cmt)(outctx_base_t *__hidden this, const char *cmt, color_t color);
  void (__fastcall *setup_outctx)(outctx_base_t *__hidden this, const char *prefix, int makeline_flags);
  ssize_t (__fastcall *retrieve_cmt)(outctx_base_t *__hidden this);
  ssize_t (__fastcall *retrieve_name)(outctx_base_t *__hidden this, qstring *, color_t *);
  bool (__fastcall *gen_xref_lines)(outctx_base_t *__hidden this);
  void (__fastcall *init_lines_array)(outctx_base_t *__hidden this, qstrvec_t *answers, int maxsize);
  member_t *(__fastcall *get_stkvar)(outctx_base_t *__hidden this, const op_t *, uval_t, sval_t *, int *);
  bool (__fastcall *flush_and_reinit)(outctx_base_t *__hidden this);
  void (__fastcall *append_user_prefix)(outctx_base_t *__hidden this, const char *, int);
  void (__fastcall *add_aux_prefix)(outctx_base_t *__hidden this, const char *, int);
  void (__fastcall *out_label_addr_tag)(outctx_base_t *__hidden this);
  void (__fastcall *out_aux_cmts)(outctx_base_t *__hidden this);
};
*/

/* 772 */
struct __cppobj event_listener_t
{
  event_listener_t_vtbl *__vftable /*VFT*/;
  size_t listener_flags;
};

/* 774 */
struct __cppobj ignore_micro_t
{
  netnode ignore_micro;
};

/* 770 *//*
struct __cppobj procmod_t : event_listener_t__ignore_micro_t
{
  processor_t *ph;
  asm_t *ash;
  size_t procmod_flags;
  size_t reserved;
};
*/

/* 771 */
/*struct procmod_t_vtbl
{
  ssize_t (__fastcall *on_event)(event_listener_t *__hidden this, ssize_t code, va_list va);
  void (__fastcall *_del_procmod_t)(procmod_t *__hidden this);
};
*/

/* 773 */
/*struct event_listener_t_vtbl
{
  ssize_t (__fastcall *on_event)(event_listener_t *__hidden this, ssize_t code, va_list va);
  void (__fastcall *_del_event_listener_t)(event_listener_t *__hidden this);
};
*/

/* 776 */
typedef int help_t;

/* 775 */
struct asm_t
{
  uint32 flag;
  uint16 uflag;
  const char *name;
  help_t help;
  const char *const *header;
  const char *origin;
  const char *end;
  const char *cmnt;
  char ascsep;
  char accsep;
  const char *esccodes;
  const char *a_ascii;
  const char *a_byte;
  const char *a_word;
  const char *a_dword;
  const char *a_qword;
  const char *a_oword;
  const char *a_float;
  const char *a_double;
  const char *a_tbyte;
  const char *a_packreal;
  const char *a_dups;
  const char *a_bss;
  const char *a_equ;
  const char *a_seg;
  const char *a_curip;
  void (__cdecl *out_func_header)(outctx_t *, func_t *);
  void (__cdecl *out_func_footer)(outctx_t *, func_t *);
  const char *a_public;
  const char *a_weak;
  const char *a_extrn;
  const char *a_comdef;
  ssize_t (__cdecl *get_type_name)(qstring *, flags_t, ea_t);
  const char *a_align;
  char lbrace;
  char rbrace;
  const char *a_mod;
  const char *a_band;
  const char *a_bor;
  const char *a_xor;
  const char *a_bnot;
  const char *a_shl;
  const char *a_shr;
  const char *a_sizeof_fmt;
  uint32 flag2;
  const char *cmnt2;
  const char *low8;
  const char *high8;
  const char *low16;
  const char *high16;
  const char *a_include_fmt;
  const char *a_vstruc_fmt;
  const char *a_rva;
  const char *a_yword;
  const char *a_zword;
};

/* 777 */
struct proc_def_t;

/* 778 */
struct elf_loader_t;

/* 779 */
struct reader_t;

/* 781 */
struct __cppobj qvector_reg_access_t_
{
  reg_access_t *array;
  size_t n;
  size_t alloc;
};

/* 786 */
typedef qvector_reg_access_t_ reg_access_vec_t;

/* 780 */
struct __cppobj reg_accesses_t : reg_access_vec_t
{
};

/* 783 */
enum access_type_t : unsigned __int8
{
  NO_ACCESS = 0x0,
  WRITE_ACCESS = 0x1,
  READ_ACCESS = 0x2,
  RW_ACCESS = 0x3,
};

/* 782 */
struct __cppobj reg_access_t
{
  int regnum;
  bitrange_t range;
  access_type_t access_type;
  uchar opnum;
};

/* 784 */
typedef reg_access_t *qvector_reg_access_t___iterator;

/* 785 */
typedef reg_access_t *qvector_reg_access_t___const_iterator;

/* 787 */
enum cref_t : unsigned __int32
{
  fl_U = 0x0,
  fl_CF = 0x10,
  fl_CN = 0x11,
  fl_JF = 0x12,
  fl_JN = 0x13,
  fl_USobsolete = 0x14,
  fl_F = 0x15,
};

/* 788 */
enum dref_t : unsigned __int32
{
  dr_U = 0x0,
  dr_O = 0x1,
  dr_W = 0x2,
  dr_R = 0x3,
  dr_T = 0x4,
  dr_I = 0x5,
  dr_S = 0x6,
};

/* 789 */
struct idasgn_t;

/* 790 */
struct libfunc_t;

/* 791 */
enum fpvalue_error_t : unsigned __int32
{
  REAL_ERROR_OK = 0x0,
  REAL_ERROR_FORMAT = 0xFFFFFFFF,
  REAL_ERROR_RANGE = 0xFFFFFFFE,
  REAL_ERROR_BADDATA = 0xFFFFFFFD,
  REAL_ERROR_FPOVER = 0x1,
  REAL_ERROR_BADSTR = 0x2,
  REAL_ERROR_ZERODIV = 0x3,
  REAL_ERROR_INTOVER = 0x4,
};

/* 792 */
struct __cppobj fpvalue_t
{
  uint16 w[6];
};

/* 793 */
enum fpvalue_kind_t : unsigned __int32
{
  FPV_BADARG = 0x0,
  FPV_NORM = 0x1,
  FPV_NAN = 0x2,
  FPV_PINF = 0x3,
  FPV_NINF = 0x4,
};

/* 795 */
typedef uint16 fixup_type_t;

/* 794 */
struct __cppobj fixup_data_t
{
  fixup_type_t type;
  uint32 flags;
  uval_t base;
  sel_t sel;
  ea_t off;
  adiff_t displacement;
};

/* 796 */
struct __cppobj fixup_handler_t
{
  int32 cbsize;
  const char *name;
  uint32 props;
  uint8 size;
  uint8 width;
  uint8 shift;
  uint8 rsrv4;
  uint32 reftype;
  bool (__cdecl *apply)(const fixup_handler_t *, ea_t, ea_t, int, bool, const fixup_data_t *);
  uval_t (__cdecl *get_value)(const fixup_handler_t *, ea_t);
  bool (__cdecl *patch_value)(const fixup_handler_t *, ea_t, const fixup_data_t *);
};

/* 798 */
union regval_t___EEAEB4CADE21DABB4BB43158C5D5B2F9
{
  uint64 ival;
  fpvalue_t fval;
  uchar reserve[24];
};

/* 797 */
struct __cppobj regval_t
{
  int32 rvtype;
  union
  {
    uint64 ival;
    fpvalue_t fval;
    uchar reserve[24];
  };
};

/* 799 */
struct __cppobj idd_opinfo_t
{
  bool modified;
  ea_t ea;
  regval_t value;
  int debregidx;
  int value_size;
};

/* 801 */
struct __cppobj qvector_call_stack_info_t_
{
  call_stack_info_t *array;
  size_t n;
  size_t alloc;
};

/* 800 */
struct __cppobj call_stack_t : qvector_call_stack_info_t_
{
};

/* 802 */
struct __cppobj call_stack_info_t
{
  ea_t callea;
  ea_t funcea;
  ea_t fp;
  bool funcok;
};

/* 803 */
typedef call_stack_info_t *qvector_call_stack_info_t___iterator;

/* 804 */
typedef call_stack_info_t *qvector_call_stack_info_t___const_iterator;

/* 806 */
typedef int argloc_type_t;

/* 814 */
typedef size_t argloc_t__biggest_t;

/* 815 */
union argloc_t___6BE26F2DC3BD49B7B415E512C333AEE4
{
  sval_t sval;
  uint32 reginfo;
  rrel_t *rrel;
  scattered_aloc_t *dist;
  void *custom;
  argloc_t__biggest_t biggest;
};

/* 805 */
struct __cppobj argloc_t
{
  argloc_type_t type;
  union
  {
    sval_t sval;
    uint32 reginfo;
    rrel_t *rrel;
    scattered_aloc_t *dist;
    void *custom;
    argloc_t__biggest_t biggest;
  };
};

/* 808 */
struct __cppobj qvector_argpart_t_
{
  argpart_t *array;
  size_t n;
  size_t alloc;
};

/* 812 */
typedef qvector_argpart_t_ argpartvec_t;

/* 807 */
struct __cppobj scattered_aloc_t : argpartvec_t
{
};

/* 809 */
struct __cppobj argpart_t : argloc_t
{
  ushort off;
  ushort size;
};

/* 810 */
typedef argpart_t *qvector_argpart_t___iterator;

/* 811 */
typedef argpart_t *qvector_argpart_t___const_iterator;

/* 813 */
struct rrel_t
{
  sval_t off;
  int reg;
};

/* 817 */
struct __cppobj qvector_funcarg_t_
{
  funcarg_t *array;
  size_t n;
  size_t alloc;
};

/* 821 */
typedef qvector_funcarg_t_ funcargvec_t;

/* 822 */
struct __cppobj qvector_reg_info_t_
{
  reg_info_t *array;
  size_t n;
  size_t alloc;
};

/* 826 */
typedef qvector_reg_info_t_ reginfovec_t;

/* 816 */
struct __cppobj func_type_data_t : funcargvec_t
{
  int flags;
  tinfo_t rettype;
  argloc_t retloc;
  uval_t stkargs;
  reginfovec_t spoiled;
  cm_t cc;
};

/* 818 */
struct __cppobj funcarg_t
{
  argloc_t argloc;
  qstring name;
  qstring cmt;
  tinfo_t type;
  uint32 flags;
};

/* 819 */
typedef funcarg_t *qvector_funcarg_t___iterator;

/* 820 */
typedef funcarg_t *qvector_funcarg_t___const_iterator;

/* 823 */
struct __cppobj reg_info_t
{
  int reg;
  int size;
};

/* 824 */
typedef reg_info_t *qvector_reg_info_t___iterator;

/* 825 */
typedef reg_info_t *qvector_reg_info_t___const_iterator;

/* 828 */
struct __cppobj qvector_regobj_t_
{
  regobj_t *array;
  size_t n;
  size_t alloc;
};

/* 832 */
typedef qvector_regobj_t_ regobjvec_t;

/* 827 */
struct __cppobj regobjs_t : regobjvec_t
{
};

/* 829 */
struct __cppobj regobj_t
{
  int regidx;
  int relocate;
  bytevec_t value;
};

/* 830 */
typedef regobj_t *qvector_regobj_t___iterator;

/* 831 */
typedef regobj_t *qvector_regobj_t___const_iterator;

/* 833 */
struct stkarg_area_info_t
{
  size_t cb;
  sval_t stkarg_offset;
  sval_t shadow_size;
  sval_t linkage_area;
};

/* 835 */
enum argreg_policy_t : unsigned __int32
{
  ARGREGS_POLICY_UNDEFINED = 0x0,
  ARGREGS_GP_ONLY = 0x1,
  ARGREGS_INDEPENDENT = 0x2,
  ARGREGS_BY_SLOTS = 0x3,
  ARGREGS_FP_CONSUME_GP = 0x4,
  ARGREGS_MIPS_O32 = 0x5,
};

/* 834 */
struct __cppobj callregs_t
{
  argreg_policy_t policy;
  int nregs;
  intvec_t gpregs;
  intvec_t fpregs;
};

/* 836 */
struct __cppobj simd_info_t
{
  const char *name;
  tinfo_t tif;
  uint16 size;
  type_t memtype;
};

/* 837 */
struct merge_data_t;

/* 838 */
struct bytes_t
{
  uchar len;
  const uchar *bytes;
};

/* 839 */
struct instruc_t
{
  const char *name;
  uint32 feature;
};

/* 841 */
/*struct user_defined_prefix_t_vtbl
{
  void (__fastcall *_del_user_defined_prefix_t)(user_defined_prefix_t *__hidden this);
  void (__fastcall *get_user_defined_prefix)(user_defined_prefix_t *__hidden this, qstring *vout, ea_t ea, const insn_t *insn, int lnnum, int indent, const char *line);
};
*/

/* 842 */
struct __cppobj encoder_t
{
  encoder_t_vtbl *__vftable /*VFT*/;
};

/* 843 */
/*struct encoder_t_vtbl
{
  void (__fastcall *_del_encoder_t)(encoder_t *__hidden this);
  bool (__fastcall *get_bom)(const encoder_t *__hidden this, bytevec_t *out);
  bool (__fastcall *encode)(const encoder_t *__hidden this, qstring *s);
  bool (*print)(const encoder_t *__hidden this, FILE *out, const char *format, ...);
  bool (__fastcall *requires_binary_mode)(const encoder_t *__hidden this);
};
*/

/* 844 */
enum encoder_t__notify_recerr_t : unsigned __int32
{
  nr_none = 0x0,
  nr_once = 0x1,
};

/* 845 */
typedef int __cdecl _FFE4F2BE2353311DBA8192D1D977A912(FILE *);

/* 846 */
typedef int __cdecl _F5551018EF9FF3302B1F558B75822FB9(FILE *, const qstring *, bgcolor_t, bgcolor_t);

/* 847 */
typedef tid_t enum_t;

/* 848 */
typedef bool __cdecl _1E3911DAF3A698F9E9678E651B612671(flags_t, void *);

/* 849 */
typedef bool __cdecl _D65593A1337DD8579B558648E0CA47AC(ea_t);

/* 850 */
struct __cppobj data_type_t
{
  int cbsize;
  void *ud;
  int props;
  const char *name;
  const char *menu_name;
  const char *hotkey;
  const char *asm_keyword;
  asize_t value_size;
  bool (__cdecl *may_create_at)(void *, ea_t, size_t);
  asize_t (__cdecl *calc_item_size)(void *, ea_t, asize_t);
};

/* 851 */
struct __cppobj data_format_t
{
  int32 cbsize;
  void *ud;
  int props;
  const char *name;
  const char *menu_name;
  const char *hotkey;
  asize_t value_size;
  int32 text_width;
  bool (__cdecl *print)(void *, qstring *, const void *, asize_t, ea_t, int, int);
  bool (__cdecl *scan)(void *, bytevec_t *, const char *, ea_t, int, qstring *);
  void (__cdecl *analyze)(void *, ea_t, int);
};

/* 852 */
struct __cppobj compiled_binpat_t
{
  bytevec_t bytes;
  bytevec_t mask;
  rangevec_t strlits;
  int encidx;
};

/* 853 */
struct ida_movable_type_compiled_binpat_t_
{
};

/* 854 */
struct __cppobj qvector_compiled_binpat_t_
{
  compiled_binpat_t *array;
  size_t n;
  size_t alloc;
};

/* 855 */
typedef compiled_binpat_t *qvector_compiled_binpat_t___iterator;

/* 856 */
typedef compiled_binpat_t *qvector_compiled_binpat_t___const_iterator;

/* 857 */
typedef qvector_compiled_binpat_t_ compiled_binpat_vec_t;

/* 858 */
struct __cppobj hidden_range_t : range_t
{
  char *description;
  char *header;
  char *footer;
  bool visible;
  bgcolor_t color;
};

/* 859 */
struct __cppobj file_enumerator_t
{
  file_enumerator_t_vtbl *__vftable /*VFT*/;
};

/* 860 */
/*struct file_enumerator_t_vtbl
{
  int (__fastcall *visit_file)(file_enumerator_t *__hidden this, const char *file);
  void (__fastcall *_del_file_enumerator_t)(file_enumerator_t *__hidden this);
};
*/

/* 861 */
struct ioport_bit_t
{
  qstring name;
  qstring cmt;
};

/* 862 */
struct ida_movable_type_ioport_bit_t_
{
};

/* 863 */
struct __cppobj qvector_ioport_bit_t_
{
  ioport_bit_t *array;
  size_t n;
  size_t alloc;
};

/* 864 */
typedef ioport_bit_t *qvector_ioport_bit_t___iterator;

/* 865 */
typedef ioport_bit_t *qvector_ioport_bit_t___const_iterator;

/* 866 */
typedef qvector_ioport_bit_t_ ioport_bits_t;

/* 867 */
struct __cppobj ioport_t
{
  ea_t address;
  qstring name;
  qstring cmt;
  ioport_bits_t bits;
  void *userdata;
};

/* 868 */
struct ida_movable_type_ioport_t_
{
};

/* 869 */
struct __cppobj qvector_ioport_t_
{
  ioport_t *array;
  size_t n;
  size_t alloc;
};

/* 870 */
typedef ioport_t *qvector_ioport_t___iterator;

/* 871 */
typedef ioport_t *qvector_ioport_t___const_iterator;

/* 872 */
typedef qvector_ioport_t_ ioports_t;

/* 873 */
struct __cppobj ioports_fallback_t
{
  ioports_fallback_t_vtbl *__vftable /*VFT*/;
};

/* 874 */
/*struct ioports_fallback_t_vtbl
{
  bool (__fastcall *handle)(ioports_fallback_t *__hidden this, qstring *errbuf, const ioports_t *ports, const char *line);
};
*/

/* 875 */
struct __cppobj choose_ioport_parser_t
{
  choose_ioport_parser_t_vtbl *__vftable /*VFT*/;
};

/* 876 */
/*struct choose_ioport_parser_t_vtbl
{
  bool (__fastcall *parse)(choose_ioport_parser_t *__hidden this, qstring *param, const char *line);
};
*/

/* 877 */
enum linput_type_t : unsigned __int32
{
  LINPUT_NONE = 0x0,
  LINPUT_LOCAL = 0x1,
  LINPUT_RFILE = 0x2,
  LINPUT_PROCMEM = 0x3,
  LINPUT_GENERIC = 0x4,
};

/* 878 */
struct __cppobj generic_linput_t
{
  generic_linput_t_vtbl *__vftable /*VFT*/;
  uint64 filesize;
  uint32 blocksize;
};

/* 879 */
/*struct generic_linput_t_vtbl
{
  ssize_t (__fastcall *read)(generic_linput_t *__hidden this, int64 off, void *buffer, size_t nbytes);
  void (__fastcall *_del_generic_linput_t)(generic_linput_t *__hidden this);
};
*/

/* 880 */
struct __cppobj janitor_t_linput_t__P_
{
  linput_t **resource;
};

/* 881 */
typedef janitor_t_linput_t__P_ linput_janitor_t;

/* 882 */
struct __cppobj linput_buffer_t
{
  linput_t *li;
  int64 lsize;
};

/* 883 */
enum linput_close_code_t : unsigned __int32
{
  LOC_CLOSE = 0x0,
  LOC_UNMAKE = 0x1,
  LOC_KEEP = 0x2,
};

/* 884 */
typedef const char *__cdecl _C9E14A82B8291B557AC92E2F5A452CE5(const char *, int, const void *, bool);

/* 885 */
struct lexer_t;

/* 2014 */
typedef ushort lxtype;

/* 2015 */
union token_t___8299423771E115C2E8FEC5C7170C0424
{
  bool unicode;
  bool is_unsigned;
};

/* 2016 */
union token_t___3D5BEF5E36E80DC11FFAA595727647C4
{
  fpvalue_t fnum;
  int64 i64;
};

/* 886 */
struct __cppobj token_t
{
  qstring str;
  lxtype type;
  sval_t num;
  union
  {
    bool unicode;
    bool is_unsigned;
  };
  union
  {
    fpvalue_t fnum;
    int64 i64;
  };
};

/* 1298 */
struct idc_object_t;

/* 1299 */
union idc_value_t___B5D45BAF0C91A61557C5F5ABF5FB1D44
{
  sval_t num;
  fpvalue_t e;
  idc_object_t *obj;
  int funcidx;
  void *pvoid;
  int64 i64;
  uchar reserve[24];
};

/* 887 */
struct __cppobj idc_value_t
{
  char vtype;
  union
  {
    sval_t num;
    fpvalue_t e;
    idc_object_t *obj;
    int funcidx;
    void *pvoid;
    int64 i64;
    uchar reserve[24];
  };
};

/* 888 */
typedef const char *__cdecl _EF63A35B22AA948F6F3465FEB80D5317(lexer_t *, const token_t *, const token_t *);

/* 889 */
typedef const char *__cdecl _DA0AE4BD8D2DD7986E2E969647424E53(lexer_t *, const token_t *, const token_t *, int64, int64);

/* 890 */
typedef const char *__cdecl _5D571C3E1F56A75D00027C63749DCB4C(lexer_t *, const token_t *, const token_t *, int64, int64, void *);

/* 892 */
union cfgopt_t___E63BAB3383D3A85693CC29A7ABAAB8B7
{
  void *ptr;
  size_t mbroff;
  const char *(__cdecl *hnd)(lexer_t *, const token_t *, const token_t *);
  const char *(__cdecl *hnd2)(lexer_t *, const token_t *, const token_t *, int64, int64);
  const char *(__cdecl *hnd3)(lexer_t *, const token_t *, const token_t *, int64, int64, void *);
};

/* 893 */
struct __cppobj cfgopt_t__num_range_t
{
  int64 minval;
  int64 maxval;
};

/* 894 */
struct __cppobj cfgopt_t__params_t
{
  int64 p1;
  int64 p2;
};

/* 895 */
union cfgopt_t___520FE22CA735B42199839BFA51A95DC1
{
  size_t buf_size;
  cfgopt_t__num_range_t num_range;
  uint32 bit_flags;
  cfgopt_t__params_t params;
  void *mbroff_obj;
};

/* 891 */
struct __cppobj cfgopt_t
{
  const char *name;
  union
  {
    void *ptr;
    size_t mbroff;
    const char *(__cdecl *hnd)(lexer_t *, const token_t *, const token_t *);
    const char *(__cdecl *hnd2)(lexer_t *, const token_t *, const token_t *, int64, int64);
    const char *(__cdecl *hnd3)(lexer_t *, const token_t *, const token_t *, int64, int64, void *);
  };
  int flags;
  union
  {
    size_t buf_size;
    cfgopt_t__num_range_t num_range;
    uint32 bit_flags;
    cfgopt_t__params_t params;
    void *mbroff_obj;
  };
};

/* 896 */
typedef void __cdecl _620535340E4C71C89198F40493D5015B(const cfgopt_t *, int, const void *);

/* 897 */
struct cfgopt_set_t
{
  const cfgopt_t *opts;
  size_t nopts;
  void (__cdecl *cb)(const cfgopt_t *, int, const void *);
  void *obj;
};

/* 899 */
struct __cppobj qvector_cfgopt_set_t_
{
  cfgopt_set_t *array;
  size_t n;
  size_t alloc;
};

/* 898 */
struct __cppobj cfgopt_set_vec_t : qvector_cfgopt_set_t_
{
};

/* 900 */
typedef cfgopt_set_t *qvector_cfgopt_set_t___iterator;

/* 901 */
typedef cfgopt_set_t *qvector_cfgopt_set_t___const_iterator;

/* 902 */
enum _A32948CF266C727D9CC1D79F2B35CC28 : unsigned __int32
{
  QMOVE_CROSS_FS = 0x1,
  QMOVE_OVERWRITE = 0x2,
  QMOVE_OVR_RO = 0x4,
};

/* 903 */
struct __cppobj janitor_t__iobuf__P_
{
  _iobuf **resource;
};

/* 904 */
typedef janitor_t__iobuf__P_ file_janitor_t;

/* 905 */
typedef uint16 eNI[9];

/* 906 */
struct __cppobj lock_segment
{
  const segment_t *segm;
};

/* 907 */
struct ida_movable_type_regarg_t_
{
};

/* 908 */
struct ida_movable_type_func_t_
{
};

/* 909 */
struct __cppobj lock_func
{
  const func_t *pfn;
};

/* 910 */
struct __cppobj func_parent_iterator_t
{
  func_t *fnt;
  int idx;
};

/* 911 */
struct __cppobj func_tail_iterator_t
{
  func_t *pfn;
  int idx;
  range_t seglim;
};

/* 912 */
struct __cppobj func_item_iterator_t
{
  func_tail_iterator_t fti;
  ea_t ea;
};

/* 913 */
typedef uval_t bmask_t;

/* 914 */
struct location_t;

/* 1571 */
struct __cppobj graph_location_info_t
{
  double zoom;
  double orgx;
  double orgy;
};

/* 2065 */
struct __cppobj renderer_info_pos_t
{
  int node;
  __int16 cx;
  __int16 cy;
};

/* 2066 */
typedef renderer_info_pos_t renderer_info_t__pos_t;

/* 927 */
enum tcc_renderer_type_t : unsigned __int32
{
  TCCRT_INVALID = 0x0,
  TCCRT_FLAT = 0x1,
  TCCRT_GRAPH = 0x2,
  TCCRT_PROXIMITY = 0x3,
};

/* 917 */
struct __cppobj renderer_info_t
{
  graph_location_info_t gli;
  renderer_info_t__pos_t pos;
  tcc_renderer_type_t rtype;
};

/* 915 */
struct __cppobj lochist_entry_t
{
  renderer_info_t rinfo;
  place_t *plce;
};

/* 916 */
struct strwinsetup_t
{
  bytevec_t strtypes;
  sval_t minlen;
  uchar display_only_existing_strings;
  uchar only_7bit;
  uchar ignore_heads;
};

/* 2061 */
struct __cppobj qvector_segm_move_info_t_
{
  segm_move_info_t *array;
  size_t n;
  size_t alloc;
};

/* 2064 */
typedef qvector_segm_move_info_t_ segm_move_info_vec_t;

/* 918 */
struct __cppobj segm_move_infos_t : segm_move_info_vec_t
{
};

/* 919 */
struct __cppobj load_info_t
{
  load_info_t *next;
  qstring dllname;
  qstring ftypename;
  qstring processor;
  filetype_t ftype;
  uint32 loader_flags;
  uint32 lflags;
  int pri;
};

/* 920 */
enum mbox_kind_t : unsigned __int32
{
  mbox_internal = 0x0,
  mbox_info = 0x1,
  mbox_warning = 0x2,
  mbox_error = 0x3,
  mbox_nomem = 0x4,
  mbox_feedback = 0x5,
  mbox_readerror = 0x6,
  mbox_writeerror = 0x7,
  mbox_filestruct = 0x8,
  mbox_wait = 0x9,
  mbox_hide = 0xA,
  mbox_replace = 0xB,
};

/* 921 */
enum choose_type_t : unsigned __int32
{
  chtype_generic = 0x0,
  chtype_idasgn = 0x1,
  chtype_entry = 0x2,
  chtype_name = 0x3,
  chtype_stkvar_xref = 0x4,
  chtype_xref = 0x5,
  chtype_enum = 0x6,
  chtype_enum_by_value = 0x7,
  chtype_func = 0x8,
  chtype_segm = 0x9,
  chtype_struc = 0xA,
  chtype_strpath = 0xB,
  chtype_idatil = 0xC,
  chtype_enum_by_value_and_size = 0xD,
  chtype_srcp = 0xE,
};

/* 922 */
enum beep_t : unsigned __int32
{
  beep_default = 0x0,
};

/* 923 */
struct __cppobj sreg_range_t : range_t
{
  sel_t val;
  uchar tag;
};

/* 924 */
struct __cppobj struc_t
{
  tid_t id;
  uint32 memqty;
  member_t *members;
  ushort age;
  uint32 props;
  int32 ordinal;
};

/* 925 */
struct minsn_t;

/* 2052 */
struct __cppobj qvector_snapshot_t__P_
{
  snapshot_t **array;
  size_t n;
  size_t alloc;
};

/* 2055 */
typedef qvector_snapshot_t__P_ snapshots_t;

/* 926 */
struct __cppobj snapshot_t
{
  qtime64_t id;
  uint16 flags;
  char desc[128];
  char filename[260];
  snapshots_t children;
};

/* 928 */
enum tcc_place_type_t : unsigned __int32
{
  TCCPT_INVALID = 0x0,
  TCCPT_PLACE = 0x1,
  TCCPT_SIMPLELINE_PLACE = 0x2,
  TCCPT_IDAPLACE = 0x3,
  TCCPT_ENUMPLACE = 0x4,
  TCCPT_STRUCTPLACE = 0x5,
};

/* 929 */
enum vme_button_t : unsigned __int32
{
  VME_UNKNOWN = 0x0,
  VME_LEFT_BUTTON = 0x1,
  VME_RIGHT_BUTTON = 0x2,
  VME_MID_BUTTON = 0x3,
};

/* 930 */
union callui_t
{
  bool cnd;
  char i8;
  int i;
  __int16 i16;
  int32 i32;
  uchar u8;
  ushort u16;
  uint32 u32;
  char *cptr;
  void *vptr;
  ssize_t ssize;
  func_t *fptr;
  segment_t *segptr;
  struc_t *strptr;
  plugin_t *pluginptr;
  sreg_range_t *sraptr;
};

/* 931 */
enum ui_notification_t : unsigned __int32
{
  ui_null = 0x0,
  ui_range = 0x1,
  ui_refresh_choosers = 0x2,
  ui_idcstart = 0x3,
  ui_idcstop = 0x4,
  ui_suspend = 0x5,
  ui_resume = 0x6,
  ui_broadcast = 0x7,
  ui_read_selection = 0x8,
  ui_read_range_selection = 0x9,
  ui_unmarksel = 0xA,
  ui_screenea = 0xB,
  ui_saving = 0xC,
  ui_saved = 0xD,
  ui_refreshmarked = 0xE,
  ui_refresh = 0xF,
  ui_choose = 0x10,
  ui_close_chooser = 0x11,
  ui_banner = 0x12,
  ui_setidle = 0x13,
  ui_database_closed = 0x14,
  ui_beep = 0x15,
  ui_is_msg_inited = 0x16,
  ui_msg = 0x17,
  ui_mbox = 0x18,
  ui_clr_cancelled = 0x19,
  ui_set_cancelled = 0x1A,
  ui_test_cancelled = 0x1B,
  ui_ask_buttons = 0x1C,
  ui_ask_file = 0x1D,
  ui_ask_form = 0x1E,
  ui_ask_text = 0x1F,
  ui_ask_str = 0x20,
  ui_ask_addr = 0x21,
  ui_ask_seg = 0x22,
  ui_ask_long = 0x23,
  ui_add_idckey = 0x24,
  ui_obsolete_del_idckey = 0x25,
  ui_analyzer_options = 0x26,
  ui_load_file = 0x27,
  ui_run_dbg = 0x28,
  ui_get_cursor = 0x29,
  ui_get_curline = 0x2A,
  ui_copywarn = 0x2B,
  ui_noabort = 0x2C,
  ui_lock_range_refresh = 0x2D,
  ui_unlock_range_refresh = 0x2E,
  ui_genfile_callback = 0x2F,
  ui_open_url = 0x30,
  ui_hexdumpea = 0x31,
  ui_get_key_code = 0x32,
  ui_setup_plugins_menu = 0x33,
  ui_get_kernel_version = 0x34,
  ui_is_idaq = 0x35,
  ui_refresh_navband = 0x36,
  ui_debugger_menu_change = 0x37,
  ui_get_curplace = 0x38,
  ui_obsolete_display_widget = 0x39,
  ui_close_widget = 0x3A,
  ui_activate_widget = 0x3B,
  ui_find_widget = 0x3C,
  ui_get_current_widget = 0x3D,
  ui_widget_visible = 0x3E,
  ui_widget_closing = 0x3F,
  ui_widget_invisible = 0x40,
  ui_get_ea_hint = 0x41,
  ui_get_item_hint = 0x42,
  ui_refresh_custom_viewer = 0x43,
  ui_destroy_custom_viewer = 0x44,
  ui_jump_in_custom_viewer = 0x45,
  ui_get_custom_viewer_curline = 0x46,
  ui_get_current_viewer = 0x47,
  ui_is_idaview = 0x48,
  ui_get_custom_viewer_hint = 0x49,
  ui_set_custom_viewer_range = 0x4A,
  ui_database_inited = 0x4B,
  ui_ready_to_run = 0x4C,
  ui_set_custom_viewer_handler = 0x4D,
  ui_refresh_chooser = 0x4E,
  ui_open_builtin = 0x4F,
  ui_preprocess_action = 0x50,
  ui_postprocess_action = 0x51,
  ui_set_custom_viewer_mode = 0x52,
  ui_gen_disasm_text = 0x53,
  ui_gen_idanode_text = 0x54,
  ui_install_cli = 0x55,
  ui_execute_sync = 0x56,
  ui_get_chooser_obj = 0x57,
  ui_enable_chooser_item_attrs = 0x58,
  ui_get_chooser_item_attrs = 0x59,
  ui_set_dock_pos = 0x5A,
  ui_get_opnum = 0x5B,
  ui_install_custom_datatype_menu = 0x5C,
  ui_install_custom_optype_menu = 0x5D,
  ui_get_range_marker = 0x5E,
  ui_lookup_key_code = 0x5F,
  ui_load_custom_icon_file = 0x60,
  ui_load_custom_icon = 0x61,
  ui_free_custom_icon = 0x62,
  ui_process_action = 0x63,
  ui_create_code_viewer = 0x64,
  ui_addons = 0x65,
  ui_execute_ui_requests = 0x66,
  ui_execute_ui_requests_list = 0x67,
  ui_register_timer = 0x68,
  ui_unregister_timer = 0x69,
  ui_take_database_snapshot = 0x6A,
  ui_restore_database_snapshot = 0x6B,
  ui_set_code_viewer_line_handlers = 0x6C,
  ui_obsolete_refresh_custom_code_viewer = 0x6D,
  ui_create_source_viewer = 0x6E,
  ui_get_tab_size = 0x6F,
  ui_repaint_qwidget = 0x70,
  ui_custom_viewer_set_userdata = 0x71,
  ui_jumpto = 0x72,
  ui_cancel_exec_request = 0x73,
  ui_open_form = 0x74,
  ui_unrecognized_config_directive = 0x75,
  ui_get_output_cursor = 0x76,
  ui_get_output_curline = 0x77,
  ui_get_output_selected_text = 0x78,
  ui_get_renderer_type = 0x79,
  ui_set_renderer_type = 0x7A,
  ui_get_viewer_user_data = 0x7B,
  ui_get_viewer_place_type = 0x7C,
  ui_ea_viewer_history_push_and_jump = 0x7D,
  ui_ea_viewer_history_info = 0x7E,
  ui_register_action = 0x7F,
  ui_unregister_action = 0x80,
  ui_attach_action_to_menu = 0x81,
  ui_detach_action_from_menu = 0x82,
  ui_attach_action_to_popup = 0x83,
  ui_detach_action_from_popup = 0x84,
  ui_attach_dynamic_action_to_popup = 0x85,
  ui_attach_action_to_toolbar = 0x86,
  ui_detach_action_from_toolbar = 0x87,
  ui_updating_actions = 0x88,
  ui_updated_actions = 0x89,
  ui_populating_widget_popup = 0x8A,
  ui_finish_populating_widget_popup = 0x8B,
  ui_update_action_attr = 0x8C,
  ui_get_action_attr = 0x8D,
  ui_plugin_loaded = 0x8E,
  ui_plugin_unloading = 0x8F,
  ui_get_widget_type = 0x90,
  ui_current_widget_changed = 0x91,
  ui_get_widget_title = 0x92,
  ui_obsolete_get_user_strlist_options = 0x93,
  ui_create_custom_viewer = 0x94,
  ui_custom_viewer_jump = 0x95,
  ui_set_custom_viewer_handlers = 0x96,
  ui_get_registered_actions = 0x97,
  ui_create_toolbar = 0x98,
  ui_delete_toolbar = 0x99,
  ui_create_menu = 0x9A,
  ui_delete_menu = 0x9B,
  ui_obsolete_set_nav_colorizer = 0x9C,
  ui_get_chooser_data = 0x9D,
  ui_obsolete_get_highlight = 0x9E,
  ui_set_highlight = 0x9F,
  ui_set_mappings = 0xA0,
  ui_create_empty_widget = 0xA1,
  ui_msg_clear = 0xA2,
  ui_msg_save = 0xA3,
  ui_msg_get_lines = 0xA4,
  ui_chooser_default_enter = 0xA5,
  ui_screen_ea_changed = 0xA6,
  ui_get_active_modal_widget = 0xA7,
  ui_navband_pixel = 0xA8,
  ui_navband_ea = 0xA9,
  ui_get_window_id = 0xAA,
  ui_create_desktop_widget = 0xAB,
  ui_strchoose = 0xAC,
  ui_set_nav_colorizer = 0xAD,
  ui_display_widget = 0xAE,
  ui_get_lines_rendering_info = 0xAF,
  ui_sync_sources = 0xB0,
  ui_get_widget_config = 0xB1,
  ui_set_widget_config = 0xB2,
  ui_get_custom_viewer_location = 0xB3,
  ui_initing_database = 0xB4,
  ui_destroying_procmod = 0xB5,
  ui_destroying_plugmod = 0xB6,
  ui_update_file_history = 0xB7,
  ui_cancel_thread_exec_requests = 0xB8,
  ui_get_synced_group = 0xB9,
  ui_show_rename_dialog = 0xBA,
  ui_desktop_applied = 0xBB,
  ui_choose_bookmark = 0xBC,
  ui_get_custom_viewer_place_xcoord = 0xBD,
  ui_get_user_input_event = 0xBE,
  ui_get_highlight_2 = 0xBF,
  ui_last = 0xC0,
  ui_dbg_begin = 0x3E8,
  ui_dbg_run_requests = 0x3E8,
  ui_dbg_get_running_request = 0x3E9,
  ui_dbg_get_running_notification = 0x3EA,
  ui_dbg_clear_requests_queue = 0x3EB,
  ui_dbg_get_process_state = 0x3EC,
  ui_dbg_start_process = 0x3ED,
  ui_dbg_request_start_process = 0x3EE,
  ui_dbg_suspend_process = 0x3EF,
  ui_dbg_request_suspend_process = 0x3F0,
  ui_dbg_continue_process = 0x3F1,
  ui_dbg_request_continue_process = 0x3F2,
  ui_dbg_exit_process = 0x3F3,
  ui_dbg_request_exit_process = 0x3F4,
  ui_dbg_get_thread_qty = 0x3F5,
  ui_dbg_getn_thread = 0x3F6,
  ui_dbg_select_thread = 0x3F7,
  ui_dbg_request_select_thread = 0x3F8,
  ui_dbg_step_into = 0x3F9,
  ui_dbg_request_step_into = 0x3FA,
  ui_dbg_step_over = 0x3FB,
  ui_dbg_request_step_over = 0x3FC,
  ui_dbg_run_to = 0x3FD,
  ui_dbg_request_run_to = 0x3FE,
  ui_dbg_step_until_ret = 0x3FF,
  ui_dbg_request_step_until_ret = 0x400,
  ui_dbg_get_bpt_qty = 0x401,
  ui_dbg_add_oldbpt = 0x402,
  ui_dbg_request_add_oldbpt = 0x403,
  ui_dbg_del_oldbpt = 0x404,
  ui_dbg_request_del_oldbpt = 0x405,
  ui_dbg_enable_oldbpt = 0x406,
  ui_dbg_request_enable_oldbpt = 0x407,
  ui_dbg_set_trace_size = 0x408,
  ui_dbg_clear_trace = 0x409,
  ui_dbg_request_clear_trace = 0x40A,
  ui_dbg_is_step_trace_enabled = 0x40B,
  ui_dbg_enable_step_trace = 0x40C,
  ui_dbg_request_enable_step_trace = 0x40D,
  ui_dbg_get_step_trace_options = 0x40E,
  ui_dbg_set_step_trace_options = 0x40F,
  ui_dbg_request_set_step_trace_options = 0x410,
  ui_dbg_is_insn_trace_enabled = 0x411,
  ui_dbg_enable_insn_trace = 0x412,
  ui_dbg_request_enable_insn_trace = 0x413,
  ui_dbg_get_insn_trace_options = 0x414,
  ui_dbg_set_insn_trace_options = 0x415,
  ui_dbg_request_set_insn_trace_options = 0x416,
  ui_dbg_is_func_trace_enabled = 0x417,
  ui_dbg_enable_func_trace = 0x418,
  ui_dbg_request_enable_func_trace = 0x419,
  ui_dbg_get_func_trace_options = 0x41A,
  ui_dbg_set_func_trace_options = 0x41B,
  ui_dbg_request_set_func_trace_options = 0x41C,
  ui_dbg_get_tev_qty = 0x41D,
  ui_dbg_get_tev_info = 0x41E,
  ui_dbg_get_call_tev_callee = 0x41F,
  ui_dbg_get_ret_tev_return = 0x420,
  ui_dbg_get_bpt_tev_ea = 0x421,
  ui_dbg_get_reg_value_type = 0x422,
  ui_dbg_get_processes = 0x423,
  ui_dbg_attach_process = 0x424,
  ui_dbg_request_attach_process = 0x425,
  ui_dbg_detach_process = 0x426,
  ui_dbg_request_detach_process = 0x427,
  ui_dbg_get_first_module = 0x428,
  ui_dbg_get_next_module = 0x429,
  ui_dbg_bring_to_front = 0x42A,
  ui_dbg_get_current_thread = 0x42B,
  ui_dbg_wait_for_next_event = 0x42C,
  ui_dbg_get_debug_event = 0x42D,
  ui_dbg_set_debugger_options = 0x42E,
  ui_dbg_set_remote_debugger = 0x42F,
  ui_dbg_load_debugger = 0x430,
  ui_dbg_retrieve_exceptions = 0x431,
  ui_dbg_store_exceptions = 0x432,
  ui_dbg_define_exception = 0x433,
  ui_dbg_suspend_thread = 0x434,
  ui_dbg_request_suspend_thread = 0x435,
  ui_dbg_resume_thread = 0x436,
  ui_dbg_request_resume_thread = 0x437,
  ui_dbg_get_process_options = 0x438,
  ui_dbg_check_bpt = 0x439,
  ui_dbg_set_process_state = 0x43A,
  ui_dbg_get_manual_regions = 0x43B,
  ui_dbg_set_manual_regions = 0x43C,
  ui_dbg_enable_manual_regions = 0x43D,
  ui_dbg_set_process_options = 0x43E,
  ui_dbg_is_busy = 0x43F,
  ui_dbg_hide_all_bpts = 0x440,
  ui_dbg_edit_manual_regions = 0x441,
  ui_dbg_get_sp_val = 0x442,
  ui_dbg_get_ip_val = 0x443,
  ui_dbg_get_reg_val = 0x444,
  ui_dbg_set_reg_val = 0x445,
  ui_dbg_request_set_reg_val = 0x446,
  ui_dbg_get_insn_tev_reg_val = 0x447,
  ui_dbg_get_insn_tev_reg_result = 0x448,
  ui_dbg_register_provider = 0x449,
  ui_dbg_unregister_provider = 0x44A,
  ui_dbg_handle_debug_event = 0x44B,
  ui_dbg_add_vmod = 0x44C,
  ui_dbg_del_vmod = 0x44D,
  ui_dbg_compare_bpt_locs = 0x44E,
  ui_obsolete_dbg_save_bpts = 0x44F,
  ui_dbg_set_bptloc_string = 0x450,
  ui_dbg_get_bptloc_string = 0x451,
  ui_dbg_internal_appcall = 0x452,
  ui_dbg_internal_cleanup_appcall = 0x453,
  ui_dbg_internal_get_sreg_base = 0x454,
  ui_dbg_internal_ioctl = 0x455,
  ui_dbg_read_memory = 0x456,
  ui_dbg_write_memory = 0x457,
  ui_dbg_read_registers = 0x458,
  ui_dbg_write_register = 0x459,
  ui_dbg_get_memory_info = 0x45A,
  ui_dbg_get_event_cond = 0x45B,
  ui_dbg_set_event_cond = 0x45C,
  ui_dbg_enable_bpt = 0x45D,
  ui_dbg_request_enable_bpt = 0x45E,
  ui_dbg_del_bpt = 0x45F,
  ui_dbg_request_del_bpt = 0x460,
  ui_dbg_map_source_path = 0x461,
  ui_dbg_map_source_file_path = 0x462,
  ui_dbg_modify_source_paths = 0x463,
  ui_dbg_is_bblk_trace_enabled = 0x464,
  ui_dbg_enable_bblk_trace = 0x465,
  ui_dbg_request_enable_bblk_trace = 0x466,
  ui_dbg_get_bblk_trace_options = 0x467,
  ui_dbg_set_bblk_trace_options = 0x468,
  ui_dbg_request_set_bblk_trace_options = 0x469,
  ui_dbg_load_trace_file = 0x46A,
  ui_dbg_save_trace_file = 0x46B,
  ui_dbg_is_valid_trace_file = 0x46C,
  ui_dbg_set_trace_file_desc = 0x46D,
  ui_dbg_get_trace_file_desc = 0x46E,
  ui_dbg_choose_trace_file = 0x46F,
  ui_dbg_diff_trace_file = 0x470,
  ui_dbg_graph_trace = 0x471,
  ui_dbg_get_tev_memory_info = 0x472,
  ui_dbg_get_tev_event = 0x473,
  ui_dbg_get_insn_tev_reg_mem = 0x474,
  ui_dbg_getn_bpt = 0x475,
  ui_dbg_get_bpt = 0x476,
  ui_dbg_find_bpt = 0x477,
  ui_dbg_add_bpt = 0x478,
  ui_dbg_request_add_bpt = 0x479,
  ui_dbg_update_bpt = 0x47A,
  ui_dbg_for_all_bpts = 0x47B,
  ui_dbg_get_tev_ea = 0x47C,
  ui_dbg_get_tev_type = 0x47D,
  ui_dbg_get_tev_tid = 0x47E,
  ui_dbg_get_trace_base_address = 0x47F,
  ui_dbg_set_trace_base_address = 0x480,
  ui_dbg_add_tev = 0x481,
  ui_dbg_add_insn_tev = 0x482,
  ui_dbg_add_call_tev = 0x483,
  ui_dbg_add_ret_tev = 0x484,
  ui_dbg_add_bpt_tev = 0x485,
  ui_dbg_add_debug_event = 0x486,
  ui_dbg_add_thread = 0x487,
  ui_dbg_del_thread = 0x488,
  ui_dbg_add_many_tevs = 0x489,
  ui_dbg_set_bpt_group = 0x48A,
  ui_dbg_set_highlight_trace_options = 0x48B,
  ui_dbg_set_trace_platform = 0x48C,
  ui_dbg_get_trace_platform = 0x48D,
  ui_dbg_internal_get_elang = 0x48E,
  ui_dbg_internal_set_elang = 0x48F,
  ui_dbg_load_dbg_dbginfo = 0x490,
  ui_dbg_set_resume_mode = 0x491,
  ui_dbg_request_set_resume_mode = 0x492,
  ui_dbg_set_bptloc_group = 0x493,
  ui_dbg_list_bptgrps = 0x494,
  ui_dbg_rename_bptgrp = 0x495,
  ui_dbg_del_bptgrp = 0x496,
  ui_dbg_get_grp_bpts = 0x497,
  ui_dbg_get_bpt_group = 0x498,
  ui_dbg_change_bptlocs = 0x499,
  ui_dbg_collect_stack_trace = 0x49A,
  ui_dbg_get_module_info = 0x49B,
  ui_dbg_get_srcinfo_provider = 0x49C,
  ui_dbg_get_global_var = 0x49D,
  ui_dbg_get_local_var = 0x49E,
  ui_dbg_get_local_vars = 0x49F,
  ui_dbg_add_path_mapping = 0x4A0,
  ui_dbg_get_current_source_file = 0x4A1,
  ui_dbg_get_current_source_line = 0x4A2,
  ui_dbg_srcdbg_step_into = 0x4A3,
  ui_dbg_srcdbg_request_step_into = 0x4A4,
  ui_dbg_srcdbg_step_over = 0x4A5,
  ui_dbg_srcdbg_request_step_over = 0x4A6,
  ui_dbg_srcdbg_step_until_ret = 0x4A7,
  ui_dbg_srcdbg_request_step_until_ret = 0x4A8,
  ui_dbg_getn_thread_name = 0x4A9,
  ui_dbg_bin_search = 0x4AA,
  ui_dbg_get_insn_tev_reg_val_i = 0x4AB,
  ui_dbg_get_insn_tev_reg_result_i = 0x4AC,
  ui_dbg_get_reg_val_i = 0x4AD,
  ui_dbg_set_reg_val_i = 0x4AE,
  ui_dbg_get_reg_info = 0x4AF,
  ui_dbg_set_trace_dynamic_register_set = 0x4B0,
  ui_dbg_get_trace_dynamic_register_set = 0x4B1,
  ui_dbg_enable_bptgrp = 0x4B2,
  ui_dbg_end = 0x4B3,
};

/* 932 */
struct __cppobj place_t
{
  place_t_vtbl *__vftable /*VFT*/;
  int lnnum;
};

/* 933 */
/*struct place_t_vtbl
{
  void (__fastcall *print)(const place_t *__hidden this, qstring *vout, void *ud);
  uval_t (__fastcall *touval)(const place_t *__hidden this, void *ud);
  place_t *(__fastcall *clone)(const place_t *__hidden this);
  void (__fastcall *copyfrom)(place_t *__hidden this, const place_t *from);
  place_t *(__fastcall *makeplace)(const place_t *__hidden this, void *ud, uval_t x, int lnnum);
  int (__fastcall *compare)(const place_t *__hidden this, const place_t *t2);
  void (__fastcall *adjust)(place_t *__hidden this, void *ud);
  bool (__fastcall *prev)(place_t *__hidden this, void *ud);
  bool (__fastcall *next)(place_t *__hidden this, void *ud);
  bool (__fastcall *beginning)(const place_t *__hidden this, void *ud);
  bool (__fastcall *ending)(const place_t *__hidden this, void *ud);
  int (__fastcall *generate)(const place_t *__hidden this, qstrvec_t *out, int *out_deflnnum, color_t *out_pfx_color, bgcolor_t *out_bgcolor, void *ud, int maxsize);
  void (__fastcall *serialize)(const place_t *__hidden this, bytevec_t *out);
  bool (__fastcall *deserialize)(place_t *__hidden this, const uchar **pptr, const uchar *end);
  int (__fastcall *id)(const place_t *__hidden this);
  const char *(__fastcall *name)(const place_t *__hidden this);
  ea_t (__fastcall *toea)(const place_t *__hidden this);
  bool (__fastcall *rebase)(place_t *__hidden this, const segm_move_infos_t *);
  place_t *(__fastcall *enter)(const place_t *__hidden this, uint32 *);
  void (__fastcall *leave)(const place_t *__hidden this, uint32);
  int (__fastcall *compare2)(const place_t *__hidden this, const place_t *t2, void *);
};
*/

/* 934 */
struct __cppobj simpleline_place_t : place_t
{
  uint32 n;
};

/* 935 */
struct __cppobj simpleline_t
{
  qstring line;
  color_t color;
  bgcolor_t bgcolor;
};

/* 936 */
struct __cppobj qvector_simpleline_t_
{
  simpleline_t *array;
  size_t n;
  size_t alloc;
};

/* 937 */
typedef simpleline_t *qvector_simpleline_t___iterator;

/* 938 */
typedef simpleline_t *qvector_simpleline_t___const_iterator;

/* 939 */
typedef qvector_simpleline_t_ strvec_t;

/* 940 */
/*struct simpleline_place_t_vtbl
{
  void (__fastcall *print)(const simpleline_place_t *__hidden this, qstring *buf, void *ud);
  uval_t (__fastcall *touval)(const simpleline_place_t *__hidden this, void *ud);
  place_t *(__fastcall *clone)(const simpleline_place_t *__hidden this);
  void (__fastcall *copyfrom)(simpleline_place_t *__hidden this, const place_t *from);
  place_t *(__fastcall *makeplace)(const simpleline_place_t *__hidden this, void *ud, uval_t x, int _lnnum);
  int (__fastcall *compare)(const simpleline_place_t *__hidden this, const place_t *t2);
  void (__fastcall *adjust)(simpleline_place_t *__hidden this, void *ud);
  bool (__fastcall *prev)(simpleline_place_t *__hidden this, void *ud);
  bool (__fastcall *next)(simpleline_place_t *__hidden this, void *ud);
  bool (__fastcall *beginning)(const simpleline_place_t *__hidden this, void *ud);
  bool (__fastcall *ending)(const simpleline_place_t *__hidden this, void *ud);
  int (__fastcall *generate)(const simpleline_place_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);
  void (__fastcall *serialize)(const simpleline_place_t *__hidden this, bytevec_t *out);
  bool (__fastcall *deserialize)(simpleline_place_t *__hidden this, const uchar **pptr, const uchar *end);
  int (__fastcall *id)(const simpleline_place_t *__hidden this);
  const char *(__fastcall *name)(const simpleline_place_t *__hidden this);
  ea_t (__fastcall *toea)(const simpleline_place_t *__hidden this);
  bool (__fastcall *rebase)(simpleline_place_t *__hidden this, const segm_move_infos_t *infos);
  place_t *(__fastcall *enter)(const simpleline_place_t *__hidden this, uint32 *out_flags);
  void (__fastcall *leave)(const simpleline_place_t *__hidden this, uint32 flags);
  int (__fastcall *compare2)(const simpleline_place_t *__hidden this, const place_t *t2, void *ud);
};
*/

/* 941 */
struct __cppobj idaplace_t : place_t
{
  ea_t ea;
};

/* 942 */
/*struct idaplace_t_vtbl
{
  void (__fastcall *print)(const idaplace_t *__hidden this, qstring *buf, void *ud);
  uval_t (__fastcall *touval)(const idaplace_t *__hidden this, void *ud);
  place_t *(__fastcall *clone)(const idaplace_t *__hidden this);
  void (__fastcall *copyfrom)(idaplace_t *__hidden this, const place_t *from);
  place_t *(__fastcall *makeplace)(const idaplace_t *__hidden this, void *ud, uval_t x, int _lnnum);
  int (__fastcall *compare)(const idaplace_t *__hidden this, const place_t *t2);
  void (__fastcall *adjust)(idaplace_t *__hidden this, void *ud);
  bool (__fastcall *prev)(idaplace_t *__hidden this, void *ud);
  bool (__fastcall *next)(idaplace_t *__hidden this, void *ud);
  bool (__fastcall *beginning)(const idaplace_t *__hidden this, void *ud);
  bool (__fastcall *ending)(const idaplace_t *__hidden this, void *ud);
  int (__fastcall *generate)(const idaplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);
  void (__fastcall *serialize)(const idaplace_t *__hidden this, bytevec_t *out);
  bool (__fastcall *deserialize)(idaplace_t *__hidden this, const uchar **pptr, const uchar *end);
  int (__fastcall *id)(const idaplace_t *__hidden this);
  const char *(__fastcall *name)(const idaplace_t *__hidden this);
  ea_t (__fastcall *toea)(const idaplace_t *__hidden this);
  bool (__fastcall *rebase)(idaplace_t *__hidden this, const segm_move_infos_t *infos);
  place_t *(__fastcall *enter)(const idaplace_t *__hidden this, uint32 *out_flags);
  void (__fastcall *leave)(const idaplace_t *__hidden this, uint32 flags);
  int (__fastcall *compare2)(const idaplace_t *__hidden this, const place_t *t2, void *ud);
};
*/

/* 943 */
struct __cppobj enumplace_t : place_t
{
  size_t idx;
  bmask_t bmask;
  uval_t value;
  uchar serial;
};

/* 944 */
/*struct enumplace_t_vtbl
{
  void (__fastcall *print)(const enumplace_t *__hidden this, qstring *buf, void *ud);
  uval_t (__fastcall *touval)(const enumplace_t *__hidden this, void *ud);
  place_t *(__fastcall *clone)(const enumplace_t *__hidden this);
  void (__fastcall *copyfrom)(enumplace_t *__hidden this, const place_t *from);
  place_t *(__fastcall *makeplace)(const enumplace_t *__hidden this, void *ud, uval_t x, int _lnnum);
  int (__fastcall *compare)(const enumplace_t *__hidden this, const place_t *t2);
  void (__fastcall *adjust)(enumplace_t *__hidden this, void *ud);
  bool (__fastcall *prev)(enumplace_t *__hidden this, void *ud);
  bool (__fastcall *next)(enumplace_t *__hidden this, void *ud);
  bool (__fastcall *beginning)(const enumplace_t *__hidden this, void *ud);
  bool (__fastcall *ending)(const enumplace_t *__hidden this, void *ud);
  int (__fastcall *generate)(const enumplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);
  void (__fastcall *serialize)(const enumplace_t *__hidden this, bytevec_t *out);
  bool (__fastcall *deserialize)(enumplace_t *__hidden this, const uchar **pptr, const uchar *end);
  int (__fastcall *id)(const enumplace_t *__hidden this);
  const char *(__fastcall *name)(const enumplace_t *__hidden this);
  ea_t (__fastcall *toea)(const enumplace_t *__hidden this);
  bool (__fastcall *rebase)(enumplace_t *__hidden this, const segm_move_infos_t *infos);
  place_t *(__fastcall *enter)(const enumplace_t *__hidden this, uint32 *out_flags);
  void (__fastcall *leave)(const enumplace_t *__hidden this, uint32 flags);
  int (__fastcall *compare2)(const enumplace_t *__hidden this, const place_t *t2, void *ud);
};
*/

/* 945 */
struct __cppobj structplace_t : place_t
{
  uval_t idx;
  uval_t offset;
};

/* 946 */
/*struct structplace_t_vtbl
{
  void (__fastcall *print)(const structplace_t *__hidden this, qstring *buf, void *ud);
  uval_t (__fastcall *touval)(const structplace_t *__hidden this, void *ud);
  place_t *(__fastcall *clone)(const structplace_t *__hidden this);
  void (__fastcall *copyfrom)(structplace_t *__hidden this, const place_t *from);
  place_t *(__fastcall *makeplace)(const structplace_t *__hidden this, void *ud, uval_t x, int _lnnum);
  int (__fastcall *compare)(const structplace_t *__hidden this, const place_t *t2);
  void (__fastcall *adjust)(structplace_t *__hidden this, void *ud);
  bool (__fastcall *prev)(structplace_t *__hidden this, void *ud);
  bool (__fastcall *next)(structplace_t *__hidden this, void *ud);
  bool (__fastcall *beginning)(const structplace_t *__hidden this, void *ud);
  bool (__fastcall *ending)(const structplace_t *__hidden this, void *ud);
  int (__fastcall *generate)(const structplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);
  void (__fastcall *serialize)(const structplace_t *__hidden this, bytevec_t *out);
  bool (__fastcall *deserialize)(structplace_t *__hidden this, const uchar **pptr, const uchar *end);
  int (__fastcall *id)(const structplace_t *__hidden this);
  const char *(__fastcall *name)(const structplace_t *__hidden this);
  ea_t (__fastcall *toea)(const structplace_t *__hidden this);
  bool (__fastcall *rebase)(structplace_t *__hidden this, const segm_move_infos_t *infos);
  place_t *(__fastcall *enter)(const structplace_t *__hidden this, uint32 *out_flags);
  void (__fastcall *leave)(const structplace_t *__hidden this, uint32 flags);
  int (__fastcall *compare2)(const structplace_t *__hidden this, const place_t *t2, void *ud);
};
*/

/* 947 */
struct __cppobj hexplace_t : idaplace_t
{
  ea_t sol;
};

/* 948 */
struct __cppobj hexplace_gen_t
{
  hexplace_gen_t_vtbl *__vftable /*VFT*/;
};

/* 949 */
struct hexview_t;

/* 950 */
enum hexplace_gen_t__byte_kind_t : unsigned __int32
{
  BK_VALID = 0x0,
  BK_INVALIDADDR = 0x1,
  BK_NOVALUE = 0x2,
};

/* 951 */
enum hexplace_gen_t__data_kind_t : unsigned __int32
{
  dk_float = 0x0,
  dk_int = 0x1,
  dk_addr_names = 0x2,
  dk_addr_text = 0x3,
};

/* 952 */
enum hexplace_gen_t__int_format_t : unsigned __int32
{
  if_hex = 0x0,
  if_signed = 0x1,
  if_unsigned = 0x2,
};

/* 953 */
/*struct hexplace_gen_t_vtbl
{
  bool (__fastcall *is_editing)(const hexplace_gen_t *__hidden this);
  bool (__fastcall *is_editing_text)(const hexplace_gen_t *__hidden this);
  bool (__fastcall *is_curitem_changed)(const hexplace_gen_t *__hidden this);
  bool (__fastcall *is_edited_byte)(const hexplace_gen_t *__hidden this, ea_t ea, uint64 *out_value);
  hexplace_gen_t__byte_kind_t (__fastcall *get_byte_value)(const hexplace_gen_t *__hidden this, ea_t ea, uint64 *out_value, bool *out_edited);
  void (__fastcall *get_encoding)(const hexplace_gen_t *__hidden this, qstring *out);
  ea_t (__fastcall *get_cur_item_ea)(const hexplace_gen_t *__hidden this);
  void (__fastcall *get_cur_item_text)(const hexplace_gen_t *__hidden this, qstring *out);
  int (__fastcall *get_alignment)(const hexplace_gen_t *__hidden this);
  int (__fastcall *get_line_len)(const hexplace_gen_t *__hidden this, ea_t ea);
  int (__fastcall *get_items_per_line)(const hexplace_gen_t *__hidden this);
  int (__fastcall *get_bytes_per_item)(const hexplace_gen_t *__hidden this);
  int (__fastcall *get_item_width)(const hexplace_gen_t *__hidden this, ea_t ea);
  hexplace_gen_t__data_kind_t (__fastcall *get_data_kind)(const hexplace_gen_t *__hidden this);
  hexplace_gen_t__int_format_t (__fastcall *get_int_format)(const hexplace_gen_t *__hidden this);
  bool (__fastcall *has_central_separator)(const hexplace_gen_t *__hidden this);
  bool (__fastcall *show_text)(const hexplace_gen_t *__hidden this);
  bool (__fastcall *show_segaddr)(const hexplace_gen_t *__hidden this);
  int (__fastcall *get_bitness)(const hexplace_gen_t *__hidden this);
};
*/

/* 954 */
/*struct hexplace_t_vtbl
{
  void (__fastcall *print)(const hexplace_t *__hidden this, qstring *buf, void *ud);
  uval_t (__fastcall *touval)(const hexplace_t *__hidden this, void *ud);
  place_t *(__fastcall *clone)(const hexplace_t *__hidden this);
  void (__fastcall *copyfrom)(hexplace_t *__hidden this, const place_t *from);
  place_t *(__fastcall *makeplace)(const hexplace_t *__hidden this, void *ud, uval_t x, int _lnnum);
  int (__fastcall *compare)(const hexplace_t *__hidden this, const place_t *t2);
  void (__fastcall *adjust)(hexplace_t *__hidden this, void *ud);
  bool (__fastcall *prev)(hexplace_t *__hidden this, void *ud);
  bool (__fastcall *next)(hexplace_t *__hidden this, void *ud);
  bool (__fastcall *beginning)(const hexplace_t *__hidden this, void *ud);
  bool (__fastcall *ending)(const hexplace_t *__hidden this, void *ud);
  int (__fastcall *generate)(const hexplace_t *__hidden this, qstrvec_t *_out, int *_out_lnnum, color_t *_out_pfx_color, bgcolor_t *_out_bg_color, void *_ud, int _max);
  void (__fastcall *serialize)(const hexplace_t *__hidden this, bytevec_t *out);
  bool (__fastcall *deserialize)(hexplace_t *__hidden this, const uchar **pptr, const uchar *end);
  int (__fastcall *id)(const hexplace_t *__hidden this);
  const char *(__fastcall *name)(const hexplace_t *__hidden this);
  ea_t (__fastcall *toea)(const hexplace_t *__hidden this);
  bool (__fastcall *rebase)(hexplace_t *__hidden this, const segm_move_infos_t *infos);
  place_t *(__fastcall *enter)(const hexplace_t *__hidden this, uint32 *out_flags);
  void (__fastcall *leave)(const hexplace_t *__hidden this, uint32 flags);
  int (__fastcall *compare2)(const hexplace_t *__hidden this, const place_t *t2, void *ud);
};
*/

/* 955 */
struct TWidget;

/* 956 */
struct __cppobj sync_source_t
{
  uchar storage[16];
};

/* 957 */
struct ida_movable_type_sync_source_t_
{
};

/* 958 */
struct __cppobj qvector_sync_source_t_
{
  sync_source_t *array;
  size_t n;
  size_t alloc;
};

/* 959 */
typedef sync_source_t *qvector_sync_source_t___iterator;

/* 960 */
typedef sync_source_t *qvector_sync_source_t___const_iterator;

/* 961 */
typedef qvector_sync_source_t_ sync_source_vec_t;

/* 962 */
struct __cppobj synced_group_t : sync_source_vec_t
{
};

/* 963 */
enum lecvt_code_t : unsigned __int32
{
  LECVT_CANCELED = 0xFFFFFFFF,
  LECVT_ERROR = 0x0,
  LECVT_OK = 0x1,
};

/* 964 */
typedef lecvt_code_t __cdecl _22625691FD6E331CB9270B94477ECC85(lochist_entry_t *, const lochist_entry_t *, struct TWidget *, uint32);

/* 965 */
struct __cppobj twinpos_t
{
  place_t *at;
  int x;
};

/* 966 */
struct __cppobj twinline_t
{
  place_t *at;
  qstring line;
  color_t prefix_color;
  bgcolor_t bg_color;
  bool is_default;
};

/* 967 */
struct ida_movable_type_twinline_t_
{
};

/* 968 */
struct __cppobj qvector_twinline_t_
{
  twinline_t *array;
  size_t n;
  size_t alloc;
};

/* 969 */
typedef twinline_t *qvector_twinline_t___iterator;

/* 970 */
typedef twinline_t *qvector_twinline_t___const_iterator;

/* 971 */
typedef qvector_twinline_t_ text_t;

/* 972 */
struct __cppobj linearray_t
{
  qstrvec_t lines;
  place_t *at;
  void *ud;
  color_t prefix_color;
  bgcolor_t bg_color;
  qstring extra;
  int dlnnum;
};

/* 973 */
struct __cppobj qvector_const_twinline_t__P_
{
  const twinline_t **array;
  size_t n;
  size_t alloc;
};

/* 974 */
typedef const twinline_t **qvector_const_twinline_t__P___iterator;

/* 975 */
typedef const twinline_t **qvector_const_twinline_t__P___const_iterator;

/* 976 */
typedef qvector_const_twinline_t__P_ section_lines_refs_t;

/* 977 */
struct __cppobj qvector_qvector_const_twinline_t__P__
{
  qvector_const_twinline_t__P_ *array;
  size_t n;
  size_t alloc;
};

/* 978 */
typedef qvector_const_twinline_t__P_ *qvector_qvector_const_twinline_t__P____iterator;

/* 979 */
typedef qvector_const_twinline_t__P_ *qvector_qvector_const_twinline_t__P____const_iterator;

/* 980 */
typedef qvector_qvector_const_twinline_t__P__ sections_lines_refs_t;

/* 981 */
struct __cppobj lines_rendering_input_t
{
  int cb;
  sections_lines_refs_t sections_lines;
  const synced_group_t *sync_group;
};

/* 982 */
struct __cppobj line_rendering_output_entry_t
{
  const twinline_t *line;
  uint32 flags;
  bgcolor_t bg_color;
  int cpx;
  int nchars;
};

/* 983 */
struct ida_movable_type_line_rendering_output_entry_t_
{
};

/* 984 */
struct __cppobj qvector_line_rendering_output_entry_t__P_
{
  line_rendering_output_entry_t **array;
  size_t n;
  size_t alloc;
};

/* 985 */
typedef line_rendering_output_entry_t **qvector_line_rendering_output_entry_t__P___iterator;

/* 986 */
typedef line_rendering_output_entry_t **qvector_line_rendering_output_entry_t__P___const_iterator;

/* 987 */
typedef qvector_line_rendering_output_entry_t__P_ line_rendering_output_entries_refs_t;

/* 988 */
struct __cppobj lines_rendering_output_t
{
  line_rendering_output_entries_refs_t entries;
  uint32 flags;
};

/* 989 */
typedef int twidget_type_t;

/* 1289 */
struct dirtree_impl_t;

/* 990 */
struct __cppobj dirtree_t
{
  dirtree_impl_t *d;
};

/* 991 */
struct __cppobj chooser_item_attrs_t
{
  int cb;
  int flags;
  bgcolor_t color;
};

/* 992 */
struct __cppobj chooser_base_t
{
  chooser_base_t_vtbl *__vftable /*VFT*/;
  uint32 version;
  uint32 flags;
  int x0;
  int y0;
  int x1;
  int y1;
  int width;
  int height;
  const char *title;
  int columns;
  const int *widths;
  const char *const *header;
  int icon;
  qstring popup_names[4];
  int deflt_col;
};

/* 993 */
/*struct chooser_base_t_vtbl
{
  void (__fastcall *_del_chooser_base_t)(chooser_base_t *__hidden this);
  void *(__fastcall *get_chooser_obj)(chooser_base_t *__hidden this);
  const void *(__fastcall *get_obj_id)(const chooser_base_t *__hidden this, size_t *len);
  bool (__fastcall *init)(chooser_base_t *__hidden this);
  size_t (__fastcall *get_count)(const chooser_base_t *__hidden this);
  void (__fastcall *get_row)(const chooser_base_t *__hidden this, qstrvec_t *out, int *out_icon, chooser_item_attrs_t *out_attrs, size_t n);
  ea_t (__fastcall *get_ea)(const chooser_base_t *__hidden this, size_t);
  void (__fastcall *closed)(chooser_base_t *__hidden this);
};
*/

/* 994 */
struct __cppobj chooser_t : chooser_base_t
{
};

/* 996 */
enum chooser_base_t__cbres_t : unsigned __int32
{
  NOTHING_CHANGED = 0x0,
  ALL_CHANGED = 0x1,
  SELECTION_CHANGED = 0x2,
};

/* 995 */
struct __cppobj chooser_t__cbret_t
{
  ssize_t idx;
  chooser_base_t__cbres_t changed;
};

/* 997 */
/*struct chooser_t_vtbl
{
  void (__fastcall *_del_chooser_t)(chooser_t *__hidden this);
  void *(__fastcall *get_chooser_obj)(chooser_base_t *__hidden this);
  const void *(__fastcall *get_obj_id)(const chooser_base_t *__hidden this, size_t *len);
  bool (__fastcall *init)(chooser_base_t *__hidden this);
  size_t (__fastcall *get_count)(const chooser_base_t *__hidden this);
  void (__fastcall *get_row)(const chooser_base_t *__hidden this, qstrvec_t *out, int *out_icon, chooser_item_attrs_t *out_attrs, size_t n);
  ea_t (__fastcall *get_ea)(const chooser_base_t *__hidden this, size_t);
  void (__fastcall *closed)(chooser_base_t *__hidden this);
  ssize_t (__fastcall *get_item_index)(const chooser_t *__hidden this, const void *item_data);
  chooser_t__cbret_t (__fastcall *ins)(chooser_t *__hidden this, ssize_t);
  chooser_t__cbret_t (__fastcall *del)(chooser_t *__hidden this, size_t);
  chooser_t__cbret_t (__fastcall *edit)(chooser_t *__hidden this, size_t);
  chooser_t__cbret_t (__fastcall *enter)(chooser_t *__hidden this, size_t n);
  chooser_t__cbret_t (__fastcall *refresh)(chooser_t *__hidden this, ssize_t n);
  void (__fastcall *select)(const chooser_t *__hidden this, ssize_t);
  dirtree_t *(__fastcall *get_dirtree)(chooser_t *__hidden this);
  inode_t (__fastcall *index_to_inode)(const chooser_t *__hidden this, size_t);
  diffpos_t (__fastcall *index_to_diffpos)(const chooser_t *__hidden this, size_t);
};
*/

/* 998 */
struct __cppobj chooser_multi_t : chooser_base_t
{
};

/* 999 */
/*struct chooser_multi_t_vtbl
{
  void (__fastcall *_del_chooser_multi_t)(chooser_multi_t *__hidden this);
  void *(__fastcall *get_chooser_obj)(chooser_base_t *__hidden this);
  const void *(__fastcall *get_obj_id)(const chooser_base_t *__hidden this, size_t *len);
  bool (__fastcall *init)(chooser_base_t *__hidden this);
  size_t (__fastcall *get_count)(const chooser_base_t *__hidden this);
  void (__fastcall *get_row)(const chooser_base_t *__hidden this, qstrvec_t *out, int *out_icon, chooser_item_attrs_t *out_attrs, size_t n);
  ea_t (__fastcall *get_ea)(const chooser_base_t *__hidden this, size_t);
  void (__fastcall *closed)(chooser_base_t *__hidden this);
  void (__fastcall *get_item_index)(const chooser_multi_t *__hidden this, sizevec_t *sel, const void *item_data);
  chooser_base_t__cbres_t (__fastcall *ins)(chooser_multi_t *__hidden this, sizevec_t *);
  chooser_base_t__cbres_t (__fastcall *del)(chooser_multi_t *__hidden this, sizevec_t *);
  chooser_base_t__cbres_t (__fastcall *edit)(chooser_multi_t *__hidden this, sizevec_t *);
  chooser_base_t__cbres_t (__fastcall *enter)(chooser_multi_t *__hidden this, sizevec_t *sel);
  chooser_base_t__cbres_t (__fastcall *refresh)(chooser_multi_t *__hidden this, sizevec_t *);
  void (__fastcall *select)(const chooser_multi_t *__hidden this, const sizevec_t *);
  dirtree_t *(__fastcall *get_dirtree)(chooser_multi_t *__hidden this);
  inode_t (__fastcall *index_to_inode)(const chooser_multi_t *__hidden this, size_t);
  diffpos_t (__fastcall *index_to_diffpos)(const chooser_multi_t *__hidden this, size_t);
};
*/

/* 1000 */
struct __cppobj textctrl_info_t
{
  size_t cb;
  qstring text;
  uint16 flags;
  uint16 tabsize;
};

/* 1001 */
enum navaddr_type_t : unsigned __int32
{
  nat_lib = 0x0,
  nat_fun = 0x1,
  nat_cod = 0x2,
  nat_dat = 0x3,
  nat_und = 0x4,
  nat_ext = 0x5,
  nat_err = 0x6,
  nat_gap = 0x7,
  nat_cur = 0x8,
  nat_auto = 0x9,
  nat_lum = 0xA,
  nat_hlo = 0xB,
  nat_last = 0xC,
};

/* 1002 */
typedef uint32 __cdecl _348C6D6B4F9D7A80DE44C8FF011E20CA(ea_t, asize_t, void *);

/* 1003 */
enum custom_viewer_handler_id_t : unsigned __int32
{
  CVH_USERDATA = 0x0,
  CVH_KEYDOWN = 0x1,
  CVH_POPUP = 0x2,
  CVH_DBLCLICK = 0x3,
  CVH_CURPOS = 0x4,
  CVH_CLOSE = 0x5,
  CVH_CLICK = 0x6,
  CVH_QT_AWARE = 0x7,
  CVH_HELP = 0x8,
  CVH_MOUSEMOVE = 0x9,
  CDVH_USERDATA = 0x3E8,
  CDVH_SRCVIEW = 0x3E9,
  CDVH_LINES_CLICK = 0x3EA,
  CDVH_LINES_DBLCLICK = 0x3EB,
  CDVH_LINES_POPUP = 0x3EC,
  CDVH_LINES_DRAWICON = 0x3ED,
  CDVH_LINES_LINENUM = 0x3EE,
  CDVH_LINES_ICONMARGIN = 0x3EF,
  CDVH_LINES_RADIX = 0x3F0,
  CDVH_LINES_ALIGNMENT = 0x3F1,
};

/* 1004 */
typedef int input_event_modifiers_t;

/* 1005 */
typedef input_event_modifiers_t view_event_state_t;

/* 1006 */
enum msg_notification_t : unsigned __int32
{
  msg_activated = 0x0,
  msg_deactivated = 0x1,
  msg_click = 0x2,
  msg_dblclick = 0x3,
  msg_closed = 0x4,
  msg_keydown = 0x5,
};

/* 1007 */
struct __cppobj renderer_pos_info_t
{
  int node;
  __int16 cx;
  __int16 cy;
  __int16 sx;
};

/* 1529 */
struct __cppobj edge_t
{
  int src;
  int dst;
};

/* 1557 */
struct __cppobj edge_layout_point_t
{
  int pidx;
  edge_t e;
};

/* 1008 */
struct __cppobj selection_item_t
{
  bool is_node;
  int node;
  edge_layout_point_t elp;
};

/* 1009 */
union view_mouse_event_location_t
{
  ea_t ea;
  const selection_item_t *item;
};

/* 1011 */
typedef view_mouse_event_location_t view_mouse_event_t__location_t;

/* 1010 */
struct view_mouse_event_t
{
  tcc_renderer_type_t rtype;
  uint32 x;
  uint32 y;
  view_mouse_event_t__location_t location;
  view_event_state_t state;
  vme_button_t button;
  renderer_pos_info_t renderer_pos;
};

/* 1012 */
enum view_notification_t : unsigned __int32
{
  view_activated = 0x0,
  view_deactivated = 0x1,
  view_keydown = 0x2,
  view_click = 0x3,
  view_dblclick = 0x4,
  view_curpos = 0x5,
  view_created = 0x6,
  view_close = 0x7,
  view_switched = 0x8,
  view_mouse_over = 0x9,
  view_loc_changed = 0xA,
  view_mouse_moved = 0xB,
};

/* 1013 */
typedef bool __cdecl _653E9C544EBAD1C578F1C3EA01A7EA50(struct TWidget *, int, int, void *);

/* 1014 */
typedef void __cdecl _D8A63F76A72CA95C9ABF1913B4CBA647(struct TWidget *, void *);

/* 1015 */
typedef void __cdecl _35D9E31152E82F0DC4ACD195DE0FABB8(struct TWidget *, int, view_mouse_event_t *, void *);

/* 1016 */
typedef bool __cdecl _BC5D78B1122B948293185BB24923F2AB(struct TWidget *, int, void *);

/* 1017 */
typedef int __cdecl _5AB30559351E7209272A12F5E44EDFCF(struct TWidget *, void *);

/* 1018 */
typedef void __cdecl _23323E8D0E36F5183F546A73BEF3AA0F(struct TWidget *, lochist_entry_t *, void *);

/* 1019 */
typedef int __cdecl _9FAA1159FEB73E1F987165FCF7559316(struct TWidget *, const place_t *, const place_t *, void *);

/* 1020 */
enum locchange_reason_t : unsigned __int32
{
  lcr_unknown = 0x0,
  lcr_goto = 0x1,
  lcr_user_switch = 0x2,
  lcr_auto_switch = 0x3,
  lcr_jump = 0x4,
  lcr_navigate = 0x5,
  lcr_scroll = 0x6,
  lcr_internal = 0x7,
};

/* 1021 */
struct __cppobj locchange_md_t
{
  uchar cb;
  uchar r;
  uchar f;
  uchar reserved;
};

/* 1022 */
struct ida_movable_type_locchange_md_t_
{
};

/* 1023 */
typedef int __cdecl _07DD72C5C6FD4DF77ADB3AE4C3F346E8(struct TWidget *, const lochist_entry_t *, const locchange_md_t *, void *);

/* 1024 */
typedef void __cdecl _6CCEADC9C9AFEEC6AD966E8EE72B4AF1(struct TWidget *, const lochist_entry_t *, const lochist_entry_t *, const locchange_md_t *, void *);

/* 1025 */
typedef void __cdecl _FFCAA51FE472A9B5C2FD486DFC769AD3(struct TWidget *, const place_t *, int, int, void *);

/* 1026 */
typedef int __cdecl _52B47B3014E6D78C5675739022A393A4(struct TWidget *, const place_t *, int *, void *);

/* 1027 */
typedef bool __cdecl _59DFB1CB44B512208DC0D7E0FF4E723C(struct TWidget *, const place_t *, uval_t *, void *);

/* 1028 */
enum input_event_kind_t : unsigned __int32
{
  iek_unknown = 0x0,
  iek_shortcut = 0x1,
  iek_key_press = 0x2,
  iek_key_release = 0x3,
  iek_mouse_button_press = 0x4,
  iek_mouse_button_release = 0x5,
  iek_mouse_wheel = 0x6,
};

/* 1030 */
struct input_event_t__input_event_shortcut_data_t
{
  const char *action_name;
};

/* 1031 */
struct input_event_t__input_event_keyboard_data_t
{
  int key;
  char text[8];
};

/* 1032 */
struct input_event_t__input_event_mouse_data_t
{
  int x;
  int y;
  vme_button_t button;
};

/* 1033 */
union input_event_t___F3C8F5E9C7D26C2A8509C540BA2A20D8
{
  input_event_t__input_event_shortcut_data_t shortcut;
  input_event_t__input_event_keyboard_data_t keyboard;
  input_event_t__input_event_mouse_data_t mouse;
};

/* 1029 */
struct __cppobj input_event_t
{
  int cb;
  input_event_kind_t kind;
  input_event_modifiers_t modifiers;
  TWidget *target;
  void *source;
  union
  {
    input_event_t__input_event_shortcut_data_t shortcut;
    input_event_t__input_event_keyboard_data_t keyboard;
    input_event_t__input_event_mouse_data_t mouse;
  };
};

/* 1034 */
struct cli_t
{
  size_t size;
  int32 flags;
  const char *sname;
  const char *lname;
  const char *hint;
  bool (__cdecl *execute_line)(const char *);
  void *unused;
  bool (__cdecl *keydown)(qstring *, int *, int *, int *, int);
  bool (__cdecl *find_completions)(qstrvec_t *, int *, int *, const char *, int);
};

/* 1035 */
struct __cppobj exec_request_t
{
  exec_request_t_vtbl *__vftable /*VFT*/;
  int code;
  qsemaphore_t sem;
};

/* 1036 */
/*struct exec_request_t_vtbl
{
  int (__fastcall *execute)(exec_request_t *__hidden this);
  void (__fastcall *_del_exec_request_t)(exec_request_t *__hidden this);
};
*/

/* 1037 */
struct __cppobj ui_request_t
{
  ui_request_t_vtbl *__vftable /*VFT*/;
};

/* 1038 */
/*struct ui_request_t_vtbl
{
  bool (__fastcall *run)(ui_request_t *__hidden this);
  void (__fastcall *_del_ui_request_t)(ui_request_t *__hidden this);
};
*/

/* 1045 */
struct __cppobj qlist_ui_request_t__P___listnode_t
{
  qlist_ui_request_t__P___listnode_t *next;
  qlist_ui_request_t__P___listnode_t *prev;
};

/* 1040 */
struct __cppobj qlist_ui_request_t__P_
{
  qlist_ui_request_t__P___listnode_t node;
  size_t length;
};

/* 1039 */
struct __cppobj ui_requests_t : qlist_ui_request_t__P_
{
};

/* 1041 */
struct qlist_ui_request_t__P___iterator;

/* 1042 */
struct qlist_ui_request_t__P___const_iterator;

/* 1043 */
struct qlist_ui_request_t__P___reverse_iterator;

/* 1044 */
struct qlist_ui_request_t__P___const_reverse_iterator;

/* 1046 */
typedef void __cdecl _0F4B5B224EF598EAC96C9D985A235D75(const char *, void *);

/* 1560 */
struct __cppobj qvector_selection_item_t_
{
  selection_item_t *array;
  size_t n;
  size_t alloc;
};

/* 1563 */
typedef qvector_selection_item_t_ screen_graph_selection_base_t;

/* 1047 */
struct __cppobj screen_graph_selection_t : screen_graph_selection_base_t
{
};

/* 1283 */
struct __cppobj qvector_dirtree_cursor_t_
{
  dirtree_cursor_t *array;
  size_t n;
  size_t alloc;
};

/* 1286 */
typedef qvector_dirtree_cursor_t_ dirtree_cursor_vec_t;

/* 1048 */
struct __cppobj dirtree_selection_t : dirtree_cursor_vec_t
{
};

/* 1049 */
typedef uval_t const_t;

/* 1050 */
struct __cppobj action_ctx_base_cur_sel_t
{
  twinpos_t from;
  twinpos_t to;
};

/* 1051 */
union action_ctx_base_source_t
{
  chooser_base_t *chooser;
};

/* 1052 */
struct __cppobj action_ctx_base_t
{
  TWidget *widget;
  twidget_type_t widget_type;
  qstring widget_title;
  sizevec_t chooser_selection;
  const char *action;
  uint32 cur_flags;
  ea_t cur_ea;
  uval_t cur_value;
  func_t *cur_func;
  func_t *cur_fchunk;
  struc_t *cur_struc;
  member_t *cur_strmem;
  enum_t cur_enum;
  segment_t *cur_seg;
  action_ctx_base_cur_sel_t cur_sel;
  const char *regname;
  TWidget *focus;
  screen_graph_selection_t *graph_selection;
  const_t cur_enum_member;
  dirtree_selection_t *dirtree_selection;
  action_ctx_base_source_t source;
};

/* 1053 */
typedef action_ctx_base_t action_activation_ctx_t;

/* 1054 */
typedef action_ctx_base_t action_update_ctx_t;

/* 1055 */
enum action_state_t : unsigned __int32
{
  AST_ENABLE_ALWAYS = 0x0,
  AST_ENABLE_FOR_IDB = 0x1,
  AST_ENABLE_FOR_WIDGET = 0x2,
  AST_ENABLE = 0x3,
  AST_DISABLE_ALWAYS = 0x4,
  AST_DISABLE_FOR_IDB = 0x5,
  AST_DISABLE_FOR_WIDGET = 0x6,
  AST_DISABLE = 0x7,
};

/* 1056 */
struct __cppobj action_handler_t
{
  action_handler_t_vtbl *__vftable /*VFT*/;
  int flags;
};

/* 1057 */
/*struct action_handler_t_vtbl
{
  int (__fastcall *activate)(action_handler_t *__hidden this, action_activation_ctx_t *ctx);
  action_state_t (__fastcall *update)(action_handler_t *__hidden this, action_update_ctx_t *ctx);
  void (__fastcall *_del_action_handler_t)(action_handler_t *__hidden this);
};
*/

/* 1058 */
struct action_desc_t
{
  int cb;
  const char *name;
  const char *label;
  action_handler_t *handler;
  const void *owner;
  const char *shortcut;
  const char *tooltip;
  int icon;
  int flags;
};

/* 1059 */
enum action_attr_t : unsigned __int32
{
  AA_NONE = 0x0,
  AA_LABEL = 0x1,
  AA_SHORTCUT = 0x2,
  AA_TOOLTIP = 0x3,
  AA_ICON = 0x4,
  AA_STATE = 0x5,
  AA_CHECKABLE = 0x6,
  AA_CHECKED = 0x7,
  AA_VISIBILITY = 0x8,
};

/* 1060 */
struct __cppobj custom_viewer_handlers_t
{
  int cb;
  bool (__cdecl *keyboard)(TWidget *, int, int, void *);
  void (__cdecl *popup)(TWidget *, void *);
  void (__cdecl *mouse_moved)(TWidget *, int, view_mouse_event_t *, void *);
  bool (__cdecl *click)(TWidget *, int, void *);
  bool (__cdecl *dblclick)(TWidget *, int, void *);
  void (__cdecl *curpos)(TWidget *, void *);
  void (__cdecl *close)(TWidget *, void *);
  int (__cdecl *help)(TWidget *, void *);
  void (__cdecl *adjust_place)(TWidget *, lochist_entry_t *, void *);
  int (__cdecl *get_place_xcoord)(TWidget *, const place_t *, const place_t *, void *);
  void (__cdecl *location_changed)(TWidget *, const lochist_entry_t *, const lochist_entry_t *, const locchange_md_t *, void *);
  int (__cdecl *can_navigate)(TWidget *, const lochist_entry_t *, const locchange_md_t *, void *);
};

/* 1061 */
struct __qtimer_t
{
};

/* 1062 */
typedef __qtimer_t *qtimer_t;

/* 1063 */
struct TPopupMenu;

/* 1064 */
struct __cppobj range_marker_suspender_t
{
  void (__cdecl *backup)(ea_t, asize_t);
};

/* 1065 */
struct __cppobj form_actions_t
{
  form_actions_t_vtbl *__vftable /*VFT*/;
};

/* 1066 */
enum form_actions_t__dlgbtn_t : unsigned __int32
{
  dbt_yes = 0x0,
  dbt_cancel = 0x1,
  dbt_no = 0x2,
};

/* 1067 */
/*struct form_actions_t_vtbl
{
  bool (__fastcall *_get_field_value)(form_actions_t *__hidden this, int field_id, void *buf);
  bool (__fastcall *_set_field_value)(form_actions_t *__hidden this, int field_id, const void *buf);
  bool (__fastcall *enable_field)(form_actions_t *__hidden this, int field_id, bool enable);
  bool (__fastcall *show_field)(form_actions_t *__hidden this, int field_id, bool display);
  bool (__fastcall *move_field)(form_actions_t *__hidden this, int field_id, int x, int y, int w, int h);
  int (__fastcall *get_focused_field)(form_actions_t *__hidden this);
  bool (__fastcall *set_focused_field)(form_actions_t *__hidden this, int field_id);
  void (__fastcall *refresh_field)(form_actions_t *__hidden this, int field_id);
  void (__fastcall *close)(form_actions_t *__hidden this, int close_normally);
  void *(__fastcall *get_ud)(form_actions_t *__hidden this);
  bool (__fastcall *_get_str_field_value)(form_actions_t *__hidden this, int field_id, char *buf, const size_t bufsize);
  bool (__fastcall *enable_dialog_button)(form_actions_t *__hidden this, form_actions_t__dlgbtn_t btn, bool enabled);
  bool (__fastcall *is_dialog_button_enabled)(form_actions_t *__hidden this, form_actions_t__dlgbtn_t btn);
};
*/

/* 1068 */
typedef int __cdecl _D5FD35C4853277703E798CDE70CE5D9D(int, form_actions_t *);

/* 1069 */
struct __cppobj addon_info_t
{
  size_t cb;
  const char *id;
  const char *name;
  const char *producer;
  const char *version;
  const char *url;
  const char *freeform;
  const void *custom_data;
  size_t custom_size;
};

/* 1070 */
struct strarray_t
{
  int code;
  const char *text;
};

/* 1071 */
enum cb_id : unsigned __int32
{
  CB_INIT = 0xFFFFFFFF,
  CB_YES = 0xFFFFFFFE,
  CB_CLOSE = 0xFFFFFFFD,
  CB_INVISIBLE = 0xFFFFFFFC,
  CB_DESTROYING = 0xFFFFFFFB,
};

/* 1072 */
struct __cppobj xrefblk_t
{
  ea_t from;
  ea_t to;
  uchar iscode;
  uchar type;
  uchar user;
};

/* 1073 */
struct __cppobj qvector_qvector_long_long__
{
  qvector_long_long_ *array;
  size_t n;
  size_t alloc;
};

/* 1074 */
typedef qvector_long_long_ *qvector_qvector_long_long____iterator;

/* 1075 */
typedef qvector_long_long_ *qvector_qvector_long_long____const_iterator;

/* 1076 */
typedef qvector_qvector_long_long__ casevec_t;

/* 1078 */
struct value_u__dq_t
{
  uint32 low;
  uint32 high;
};

/* 1079 */
struct value_u__dt_t
{
  uint32 low;
  uint32 high;
  uint16 upper;
};

/* 1080 */
struct value_u__d128_t
{
  uint64 low;
  uint64 high;
};

/* 1077 */
union value_u
{
  uint8 v_char;
  uint16 v_short;
  uint32 v_long;
  uint64 v_int64;
  uval_t v_uval;
  value_u__dq_t _dq;
  value_u__dt_t dt;
  value_u__d128_t d128;
  uint8 byte16[16];
  uint32 dword3[3];
};

/* 1081 */
struct __cppobj macro_constructor_t
{
  macro_constructor_t_vtbl *__vftable /*VFT*/;
  size_t reserved;
};

/* 1082 */
/*struct macro_constructor_t_vtbl
{
  void (__fastcall *_del_macro_constructor_t)(macro_constructor_t *__hidden this);
  bool (__fastcall *build_macro)(macro_constructor_t *__hidden this, insn_t *insn, bool may_go_forward);
};
*/

/* 1333 */
struct __cppobj qvector_stkpnt_t_
{
  stkpnt_t *array;
  size_t n;
  size_t alloc;
};

/* 1083 */
struct __cppobj stkpnts_t : qvector_stkpnt_t_
{
};

/* 1084 */
struct __cppobj extlang_t
{
  size_t size;
  uint32 flags;
  int32 refcnt;
  const char *name;
  const char *fileext;
  syntax_highlighter_t *highlighter;
  bool (__cdecl *compile_expr)(const char *, ea_t, const char *, qstring *);
  bool (__cdecl *compile_file)(const char *, qstring *);
  bool (__cdecl *call_func)(idc_value_t *, const char *, const idc_value_t[], size_t, qstring *);
  bool (__cdecl *eval_expr)(idc_value_t *, ea_t, const char *, qstring *);
  bool (__cdecl *eval_snippet)(const char *, qstring *);
  bool (__cdecl *create_object)(idc_value_t *, const char *, const idc_value_t[], size_t, qstring *);
  bool (__cdecl *get_attr)(idc_value_t *, const idc_value_t *, const char *);
  bool (__cdecl *set_attr)(idc_value_t *, const char *, const idc_value_t *);
  bool (__cdecl *call_method)(idc_value_t *, const idc_value_t *, const char *, const idc_value_t[], size_t, qstring *);
  bool (__cdecl *load_procmod)(idc_value_t *, const char *, qstring *);
  bool (__cdecl *unload_procmod)(const char *, qstring *);
};

/* 1345 */
struct __cppobj gdl_graph_t
{
  gdl_graph_t_vtbl *__vftable /*VFT*/;
};

/* 1517 */
struct __cppobj cancellable_graph_t : gdl_graph_t
{
  bool cancelled;
  char padding[3];
};

/* 1521 */
struct __cppobj qvector_qbasic_block_t_
{
  qbasic_block_t *array;
  size_t n;
  size_t alloc;
};

/* 1524 */
typedef qvector_qbasic_block_t_ qflow_chart_t__blocks_t;

/* 1085 */
struct __cppobj qflow_chart_t : cancellable_graph_t
{
  qstring title;
  range_t bounds;
  func_t *pfn;
  int flags;
  qflow_chart_t__blocks_t blocks;
  int nproper;
};

/* 1086 */
typedef void *hexdsp_t(int, ...);

/* 1087 */
/*struct plugmod_t_vtbl
{
  bool (__fastcall *run)(plugmod_t *__hidden this, size_t arg);
  void (__fastcall *_del_plugmod_t)(plugmod_t *__hidden this);
};
*/

/* 1088 */
struct ida_movable_type_reg_info_t_
{
};

/* 1089 */
struct ida_movable_type_reg_access_t_
{
};

/* 1090 */
enum setproc_level_t : unsigned __int32
{
  SETPROC_IDB = 0x0,
  SETPROC_LOADER = 0x1,
  SETPROC_LOADER_NON_FATAL = 0x2,
  SETPROC_USER = 0x3,
};

/* 1091 */
enum idb_event__event_code_t : unsigned __int32
{
  closebase = 0x0,
  savebase = 0x1,
  upgraded = 0x2,
  auto_empty = 0x3,
  auto_empty_finally = 0x4,
  determined_main = 0x5,
  local_types_changed = 0x6,
  extlang_changed = 0x7,
  idasgn_loaded = 0x8,
  kernel_config_loaded = 0x9,
  loader_finished = 0xA,
  flow_chart_created = 0xB,
  compiler_changed = 0xC,
  changing_ti = 0xD,
  ti_changed = 0xE,
  changing_op_ti = 0xF,
  op_ti_changed = 0x10,
  changing_op_type = 0x11,
  op_type_changed = 0x12,
  enum_created = 0x13,
  deleting_enum = 0x14,
  enum_deleted = 0x15,
  renaming_enum = 0x16,
  enum_renamed = 0x17,
  changing_enum_bf = 0x18,
  enum_bf_changed = 0x19,
  changing_enum_cmt = 0x1A,
  enum_cmt_changed = 0x1B,
  enum_member_created = 0x1C,
  deleting_enum_member = 0x1D,
  enum_member_deleted = 0x1E,
  struc_created = 0x1F,
  deleting_struc = 0x20,
  struc_deleted = 0x21,
  changing_struc_align = 0x22,
  struc_align_changed = 0x23,
  renaming_struc = 0x24,
  struc_renamed = 0x25,
  expanding_struc = 0x26,
  struc_expanded = 0x27,
  struc_member_created = 0x28,
  deleting_struc_member = 0x29,
  struc_member_deleted = 0x2A,
  renaming_struc_member = 0x2B,
  struc_member_renamed = 0x2C,
  changing_struc_member = 0x2D,
  struc_member_changed = 0x2E,
  changing_struc_cmt = 0x2F,
  struc_cmt_changed = 0x30,
  segm_added = 0x31,
  deleting_segm = 0x32,
  segm_deleted = 0x33,
  changing_segm_start = 0x34,
  segm_start_changed = 0x35,
  changing_segm_end = 0x36,
  segm_end_changed = 0x37,
  changing_segm_name = 0x38,
  segm_name_changed = 0x39,
  changing_segm_class = 0x3A,
  segm_class_changed = 0x3B,
  segm_attrs_updated = 0x3C,
  segm_moved = 0x3D,
  allsegs_moved = 0x3E,
  func_added = 0x3F,
  func_updated = 0x40,
  set_func_start = 0x41,
  set_func_end = 0x42,
  deleting_func = 0x43,
  frame_deleted = 0x44,
  thunk_func_created = 0x45,
  func_tail_appended = 0x46,
  deleting_func_tail = 0x47,
  func_tail_deleted = 0x48,
  tail_owner_changed = 0x49,
  func_noret_changed = 0x4A,
  stkpnts_changed = 0x4B,
  updating_tryblks = 0x4C,
  tryblks_updated = 0x4D,
  deleting_tryblks = 0x4E,
  sgr_changed = 0x4F,
  make_code = 0x50,
  make_data = 0x51,
  destroyed_items = 0x52,
  renamed = 0x53,
  byte_patched = 0x54,
  changing_cmt = 0x55,
  cmt_changed = 0x56,
  changing_range_cmt = 0x57,
  range_cmt_changed = 0x58,
  extra_cmt_changed = 0x59,
  item_color_changed = 0x5A,
  callee_addr_changed = 0x5B,
  bookmark_changed = 0x5C,
  sgr_deleted = 0x5D,
  adding_segm = 0x5E,
  func_deleted = 0x5F,
  dirtree_mkdir = 0x60,
  dirtree_rmdir = 0x61,
  dirtree_link = 0x62,
  dirtree_move = 0x63,
  dirtree_rank = 0x64,
  dirtree_rminode = 0x65,
  dirtree_segm_moved = 0x66,
  enum_width_changed = 0x67,
  enum_flag_changed = 0x68,
  enum_ordinal_changed = 0x69,
};

/* 1092 */
typedef int pid_t;

/* 1093 */
typedef int thid_t;

/* 1094 */
struct process_info_t
{
  pid_t pid;
  qstring name;
};

/* 1095 */
struct ida_movable_type_process_info_t_
{
};

/* 1096 */
struct __cppobj qvector_process_info_t_
{
  process_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1097 */
typedef process_info_t *qvector_process_info_t___iterator;

/* 1098 */
typedef process_info_t *qvector_process_info_t___const_iterator;

/* 1099 */
typedef qvector_process_info_t_ procinfo_vec_t;

/* 1100 */
struct __cppobj debapp_attrs_t
{
  int32 cbsize;
  int addrsize;
  qstring platform;
  int is_be;
};

/* 1101 */
typedef unsigned __int8 register_class_t;

/* 1102 */
struct register_info_t
{
  const char *name;
  uint32 flags;
  register_class_t register_class;
  op_dtype_t dtype;
  const char *const *bit_strings;
  uval_t default_bit_strings_mask;
};

/* 1103 */
struct ida_movable_type_register_info_t_
{
};

/* 1104 */
struct __cppobj qvector_register_info_t_
{
  register_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1105 */
typedef register_info_t *qvector_register_info_t___iterator;

/* 1106 */
typedef register_info_t *qvector_register_info_t___const_iterator;

/* 1107 */
typedef qvector_register_info_t_ register_info_vec_t;

/* 1109 */
struct __cppobj qvector_const_char__P_
{
  const char **array;
  size_t n;
  size_t alloc;
};

/* 1112 */
typedef qvector_const_char__P_ dynamic_register_set_t__const_char_vec_t;

/* 1113 */
struct __cppobj qvector_qvector_const_char__P__
{
  qvector_const_char__P_ *array;
  size_t n;
  size_t alloc;
};

/* 1108 */
struct __cppobj dynamic_register_set_t
{
  register_info_vec_t ri_vec;
  qstrvec_t strvec;
  dynamic_register_set_t__const_char_vec_t classname_ptrs;
  qvector_qvector_const_char__P__ bit_strings_ptrs_vec;
};

/* 1110 */
typedef const char **qvector_const_char__P___iterator;

/* 1111 */
typedef const char **qvector_const_char__P___const_iterator;

/* 1114 */
typedef qvector_const_char__P_ *qvector_qvector_const_char__P____iterator;

/* 1115 */
typedef qvector_const_char__P_ *qvector_qvector_const_char__P____const_iterator;

/* 1116 */
struct __cppobj memory_info_t : range_t
{
  qstring name;
  qstring sclass;
  ea_t sbase;
  uchar bitness;
  uchar perm;
};

/* 1117 */
struct ida_movable_type_memory_info_t_
{
};

/* 1118 */
struct __cppobj qvector_memory_info_t_
{
  memory_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1119 */
typedef memory_info_t *qvector_memory_info_t___iterator;

/* 1120 */
typedef memory_info_t *qvector_memory_info_t___const_iterator;

/* 1121 */
typedef qvector_memory_info_t_ meminfo_vec_t;

/* 1122 */
struct __cppobj scattered_segm_t : range_t
{
  qstring name;
};

/* 1123 */
struct ida_movable_type_scattered_segm_t_
{
};

/* 1124 */
struct __cppobj qvector_scattered_segm_t_
{
  scattered_segm_t *array;
  size_t n;
  size_t alloc;
};

/* 1125 */
typedef scattered_segm_t *qvector_scattered_segm_t___iterator;

/* 1126 */
typedef scattered_segm_t *qvector_scattered_segm_t___const_iterator;

/* 1127 */
typedef qvector_scattered_segm_t_ scattered_image_t;

/* 1128 */
enum event_id_t : unsigned __int32
{
  NO_EVENT = 0x0,
  PROCESS_STARTED = 0x1,
  PROCESS_EXITED = 0x2,
  THREAD_STARTED = 0x4,
  THREAD_EXITED = 0x8,
  BREAKPOINT = 0x10,
  STEP = 0x20,
  EXCEPTION = 0x40,
  LIB_LOADED = 0x80,
  LIB_UNLOADED = 0x100,
  INFORMATION = 0x200,
  PROCESS_ATTACHED = 0x400,
  PROCESS_DETACHED = 0x800,
  PROCESS_SUSPENDED = 0x1000,
  TRACE_FULL = 0x2000,
};

/* 1129 */
struct __cppobj debug_event_t
{
  pid_t pid;
  thid_t tid;
  ea_t ea;
  bool handled;
  event_id_t _eid;
  char bytes[48];
};

/* 1130 */
struct modinfo_t
{
  qstring name;
  ea_t base;
  asize_t size;
  ea_t rebase_to;
};

/* 1131 */
struct ida_movable_type_modinfo_t_
{
};

/* 1132 */
struct __cppobj qvector_modinfo_t_
{
  modinfo_t *array;
  size_t n;
  size_t alloc;
};

/* 1133 */
typedef modinfo_t *qvector_modinfo_t___iterator;

/* 1134 */
typedef modinfo_t *qvector_modinfo_t___const_iterator;

/* 1135 */
typedef qvector_modinfo_t_ modinfovec_t;

/* 1136 */
struct __cppobj bptaddr_t
{
  ea_t hea;
  ea_t kea;
};

/* 1137 */
struct excinfo_t
{
  uint32 code;
  bool can_cont;
  ea_t ea;
  qstring info;
};

/* 1138 */
struct ida_movable_type_debug_event_t_
{
};

/* 1139 */
typedef int bpttype_t;

/* 1140 */
struct __cppobj exception_info_t
{
  uint code;
  uint32 flags;
  qstring name;
  qstring desc;
};

/* 1141 */
struct ida_movable_type_exception_info_t_
{
};

/* 1142 */
struct __cppobj qvector_exception_info_t_
{
  exception_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1143 */
typedef exception_info_t *qvector_exception_info_t___iterator;

/* 1144 */
typedef exception_info_t *qvector_exception_info_t___const_iterator;

/* 1145 */
typedef qvector_exception_info_t_ excvec_t;

/* 1146 */
struct ida_movable_type_regval_t_
{
};

/* 1147 */
struct __cppobj qvector_regval_t_
{
  regval_t *array;
  size_t n;
  size_t alloc;
};

/* 1148 */
typedef regval_t *qvector_regval_t___iterator;

/* 1149 */
typedef regval_t *qvector_regval_t___const_iterator;

/* 1150 */
typedef qvector_regval_t_ regvals_t;

/* 1151 */
struct ida_movable_type_call_stack_info_t_
{
};

/* 1152 */
enum gdecode_t : unsigned __int32
{
  GDE_ERROR = 0xFFFFFFFF,
  GDE_NO_EVENT = 0x0,
  GDE_ONE_EVENT = 0x1,
  GDE_MANY_EVENTS = 0x2,
};

/* 1153 */
struct __cppobj update_bpt_info_t
{
  ea_t ea;
  bytevec_t orgbytes;
  bpttype_t type;
  int size;
  uchar code;
  pid_t pid;
  thid_t tid;
};

/* 1154 */
struct ida_movable_type_update_bpt_info_t_
{
};

/* 1155 */
struct __cppobj qvector_update_bpt_info_t_
{
  update_bpt_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1156 */
typedef update_bpt_info_t *qvector_update_bpt_info_t___iterator;

/* 1157 */
typedef update_bpt_info_t *qvector_update_bpt_info_t___const_iterator;

/* 1158 */
typedef qvector_update_bpt_info_t_ update_bpt_vec_t;

/* 1159 */
struct lowcnd_t
{
  ea_t ea;
  qstring cndbody;
  bpttype_t type;
  bytevec_t orgbytes;
  insn_t cmd;
  bool compiled;
  int size;
};

/* 1160 */
struct __cppobj qvector_lowcnd_t_
{
  lowcnd_t *array;
  size_t n;
  size_t alloc;
};

/* 1161 */
typedef lowcnd_t *qvector_lowcnd_t___iterator;

/* 1162 */
typedef lowcnd_t *qvector_lowcnd_t___const_iterator;

/* 1163 */
typedef qvector_lowcnd_t_ lowcnd_vec_t;

/* 1164 */
struct thread_name_t
{
  thid_t tid;
  qstring name;
};

/* 1165 */
struct __cppobj qvector_thread_name_t_
{
  thread_name_t *array;
  size_t n;
  size_t alloc;
};

/* 1166 */
typedef thread_name_t *qvector_thread_name_t___iterator;

/* 1167 */
typedef thread_name_t *qvector_thread_name_t___const_iterator;

/* 1168 */
typedef qvector_thread_name_t_ thread_name_vec_t;

/* 1169 */
enum resume_mode_t : unsigned __int32
{
  RESMOD_NONE = 0x0,
  RESMOD_INTO = 0x1,
  RESMOD_OVER = 0x2,
  RESMOD_OUT = 0x3,
  RESMOD_SRCINTO = 0x4,
  RESMOD_SRCOVER = 0x5,
  RESMOD_SRCOUT = 0x6,
  RESMOD_USER = 0x7,
  RESMOD_HANDLE = 0x8,
  RESMOD_MAX = 0x9,
};

/* 1170 */
enum drc_t : unsigned __int32
{
  DRC_EVENTS = 0x3,
  DRC_CRC = 0x2,
  DRC_OK = 0x1,
  DRC_NONE = 0x0,
  DRC_FAILED = 0xFFFFFFFF,
  DRC_NETERR = 0xFFFFFFFE,
  DRC_NOFILE = 0xFFFFFFFD,
  DRC_IDBSEG = 0xFFFFFFFC,
  DRC_NOPROC = 0xFFFFFFFB,
  DRC_NOCHG = 0xFFFFFFFA,
  DRC_ERROR = 0xFFFFFFF9,
};

/* 1171 */
struct __cppobj debugger_t
{
  int version;
  const char *name;
  int id;
  const char *processor;
  uint32 flags;
  uint32 flags2;
  const char **regclasses;
  int default_regclasses;
  register_info_t *registers;
  int nregs;
  int memory_page_size;
  const uchar *bpt_bytes;
  uchar bpt_size;
  uchar filetype;
  ushort resume_modes;
  const char *(__cdecl *set_dbg_options)(const char *, int, int, const void *);
  ssize_t (__cdecl *callback)(void *, int, va_list);
};

/* 1172 */
enum debugger_t__event_t : unsigned __int32
{
  ev_init_debugger = 0x0,
  ev_term_debugger = 0x1,
  ev_get_processes = 0x2,
  ev_start_process = 0x3,
  ev_attach_process = 0x4,
  ev_detach_process = 0x5,
  ev_get_debapp_attrs = 0x6,
  ev_rebase_if_required_to = 0x7,
  ev_request_pause = 0x8,
  ev_exit_process = 0x9,
  ev_get_debug_event = 0xA,
  ev_resume = 0xB,
  ev_set_exception_info = 0xC,
  ev_suspended = 0xD,
  ev_thread_suspend = 0xE,
  ev_thread_continue = 0xF,
  ev_set_resume_mode = 0x10,
  ev_read_registers = 0x11,
  ev_write_register = 0x12,
  ev_thread_get_sreg_base = 0x13,
  ev_get_memory_info = 0x14,
  ev_read_memory = 0x15,
  ev_write_memory = 0x16,
  ev_check_bpt = 0x17,
  ev_update_bpts = 0x18,
  ev_update_lowcnds = 0x19,
  ev_open_file = 0x1A,
  ev_close_file = 0x1B,
  ev_read_file = 0x1C,
  ev_write_file = 0x1D,
  ev_map_address = 0x1E,
  ev_get_debmod_extensions = 0x1F,
  ev_update_call_stack = 0x20,
  ev_appcall = 0x21,
  ev_cleanup_appcall = 0x22,
  ev_eval_lowcnd = 0x23,
  ev_send_ioctl = 0x24,
  ev_dbg_enable_trace = 0x25,
  ev_is_tracing_enabled = 0x26,
  ev_rexec = 0x27,
  ev_get_srcinfo_path = 0x28,
  ev_bin_search = 0x29,
};

/* 1173 */
enum dbg_notification_t : unsigned __int32
{
  dbg_null = 0x0,
  dbg_process_start = 0x1,
  dbg_process_exit = 0x2,
  dbg_process_attach = 0x3,
  dbg_process_detach = 0x4,
  dbg_thread_start = 0x5,
  dbg_thread_exit = 0x6,
  dbg_library_load = 0x7,
  dbg_library_unload = 0x8,
  dbg_information = 0x9,
  dbg_exception = 0xA,
  dbg_suspend_process = 0xB,
  dbg_bpt = 0xC,
  dbg_trace = 0xD,
  dbg_request_error = 0xE,
  dbg_step_into = 0xF,
  dbg_step_over = 0x10,
  dbg_run_to = 0x11,
  dbg_step_until_ret = 0x12,
  dbg_bpt_changed = 0x13,
  dbg_started_loading_bpts = 0x14,
  dbg_finished_loading_bpts = 0x15,
  dbg_last = 0x16,
};

/* 1203 */
enum bpt_loctype_t : unsigned __int32
{
  BPLT_ABS = 0x0,
  BPLT_REL = 0x1,
  BPLT_SYM = 0x2,
  BPLT_SRC = 0x3,
};

/* 1175 */
struct __cppobj bpt_location_t
{
  ea_t info;
  int index;
  bpt_loctype_t loctype;
};

/* 1174 */
struct __cppobj bpt_t
{
  size_t cb;
  qstring cndbody;
  bpt_location_t loc;
  pid_t pid;
  thid_t tid;
  ea_t ea;
  bpttype_t type;
  int pass_count;
  uint32 flags;
  uint32 props;
  int size;
  int cndidx;
  inode_t bptid;
};

/* 1176 */
struct movbpt_info_t
{
  bpt_location_t from;
  bpt_location_t to;
};

/* 1177 */
struct __cppobj qvector_movbpt_info_t_
{
  movbpt_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1178 */
typedef movbpt_info_t *qvector_movbpt_info_t___iterator;

/* 1179 */
typedef movbpt_info_t *qvector_movbpt_info_t___const_iterator;

/* 1180 */
typedef qvector_movbpt_info_t_ movbpt_infos_t;

/* 1181 */
struct __cppobj qvector_const_bpt_t__P_
{
  const bpt_t **array;
  size_t n;
  size_t alloc;
};

/* 1182 */
typedef const bpt_t **qvector_const_bpt_t__P___iterator;

/* 1183 */
typedef const bpt_t **qvector_const_bpt_t__P___const_iterator;

/* 1184 */
typedef qvector_const_bpt_t__P_ bpt_constptr_vec_t;

/* 1185 */
struct __cppobj qvector_bpt_t__P_
{
  bpt_t **array;
  size_t n;
  size_t alloc;
};

/* 1186 */
typedef bpt_t **qvector_bpt_t__P___iterator;

/* 1187 */
typedef bpt_t **qvector_bpt_t__P___const_iterator;

/* 1188 */
typedef qvector_bpt_t__P_ bptptr_vec_t;

/* 1189 */
struct __cppobj qvector_bpt_t_
{
  bpt_t *array;
  size_t n;
  size_t alloc;
};

/* 1190 */
typedef bpt_t *qvector_bpt_t___iterator;

/* 1191 */
typedef bpt_t *qvector_bpt_t___const_iterator;

/* 1192 */
typedef qvector_bpt_t_ bpt_vec_t;

/* 1193 */
enum movbpt_code_t : unsigned __int32
{
  MOVBPT_OK = 0x0,
  MOVBPT_NOT_FOUND = 0x1,
  MOVBPT_DEST_BUSY = 0x2,
  MOVBPT_BAD_TYPE = 0x3,
};

/* 1194 */
struct __cppobj qvector_movbpt_code_t_
{
  movbpt_code_t *array;
  size_t n;
  size_t alloc;
};

/* 1195 */
typedef movbpt_code_t *qvector_movbpt_code_t___iterator;

/* 1196 */
typedef movbpt_code_t *qvector_movbpt_code_t___const_iterator;

/* 1197 */
typedef qvector_movbpt_code_t_ movbpt_codes_t;

/* 1198 */
struct __cppobj bptaddrs_t : eavec_t
{
  bpt_t *bpt;
};

/* 1199 */
struct __cppobj qvector_bptaddrs_t_
{
  bptaddrs_t *array;
  size_t n;
  size_t alloc;
};

/* 1200 */
typedef bptaddrs_t *qvector_bptaddrs_t___iterator;

/* 1201 */
typedef bptaddrs_t *qvector_bptaddrs_t___const_iterator;

/* 1202 */
typedef qvector_bptaddrs_t_ bpteas_t;

/* 1204 */
struct ida_movable_type_bpt_location_t_
{
};

/* 1205 */
struct ida_movable_type_bpt_t_
{
};

/* 1206 */
struct ida_movable_type_movbpt_info_t_
{
};

/* 1207 */
struct __cppobj bpt_visitor_t
{
  bpt_visitor_t_vtbl *__vftable /*VFT*/;
  range_t range;
  const char *name;
};

/* 1208 */
/*struct bpt_visitor_t_vtbl
{
  int (__fastcall *visit_bpt)(bpt_visitor_t *__hidden this, const bpt_t *bpt);
};
*/

/* 1209 */
enum tev_type_t : unsigned __int32
{
  tev_none = 0x0,
  tev_insn = 0x1,
  tev_call = 0x2,
  tev_ret = 0x3,
  tev_bpt = 0x4,
  tev_mem = 0x5,
  tev_event = 0x6,
  tev_max = 0x7,
};

/* 1210 */
struct __cppobj qvector_debug_event_t_
{
  debug_event_t *array;
  size_t n;
  size_t alloc;
};

/* 1211 */
typedef debug_event_t *qvector_debug_event_t___iterator;

/* 1212 */
typedef debug_event_t *qvector_debug_event_t___const_iterator;

/* 1213 */
typedef qvector_debug_event_t_ dbgevt_vec_t;

/* 1214 */
struct tev_info_t
{
  tev_type_t type;
  thid_t tid;
  ea_t ea;
};

/* 1215 */
struct __cppobj qvector_tev_info_t_
{
  tev_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1216 */
typedef tev_info_t *qvector_tev_info_t___iterator;

/* 1217 */
typedef tev_info_t *qvector_tev_info_t___const_iterator;

/* 1218 */
typedef qvector_tev_info_t_ tevinfo_vec_t;

/* 1219 */
struct memreg_info_t
{
  ea_t ea;
  bytevec_t bytes;
};

/* 1220 */
struct ida_movable_type_memreg_info_t_
{
};

/* 1221 */
struct __cppobj qvector_memreg_info_t_
{
  memreg_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1222 */
typedef memreg_info_t *qvector_memreg_info_t___iterator;

/* 1223 */
typedef memreg_info_t *qvector_memreg_info_t___const_iterator;

/* 1224 */
typedef qvector_memreg_info_t_ memreg_infos_t;

/* 1225 */
struct __cppobj tev_reg_value_t
{
  regval_t value;
  int reg_idx;
};

/* 1226 */
struct ida_movable_type_tev_reg_value_t_
{
};

/* 1227 */
struct __cppobj qvector_tev_reg_value_t_
{
  tev_reg_value_t *array;
  size_t n;
  size_t alloc;
};

/* 1228 */
typedef tev_reg_value_t *qvector_tev_reg_value_t___iterator;

/* 1229 */
typedef tev_reg_value_t *qvector_tev_reg_value_t___const_iterator;

/* 1230 */
typedef qvector_tev_reg_value_t_ tev_reg_values_t;

/* 1231 */
struct tev_info_reg_t
{
  tev_info_t info;
  tev_reg_values_t registers;
};

/* 1232 */
struct ida_movable_type_tev_info_reg_t_
{
};

/* 1233 */
struct __cppobj qvector_tev_info_reg_t_
{
  tev_info_reg_t *array;
  size_t n;
  size_t alloc;
};

/* 1234 */
typedef tev_info_reg_t *qvector_tev_info_reg_t___iterator;

/* 1235 */
typedef tev_info_reg_t *qvector_tev_info_reg_t___const_iterator;

/* 1236 */
typedef qvector_tev_info_reg_t_ tevinforeg_vec_t;

/* 1237 */
enum save_reg_values_t : unsigned __int32
{
  SAVE_ALL_VALUES = 0x0,
  SAVE_DIFF = 0x1,
  SAVE_NONE = 0x2,
};

/* 1238 */
enum dbg_event_code_t : unsigned __int32
{
  DEC_NOTASK = 0xFFFFFFFE,
  DEC_ERROR = 0xFFFFFFFF,
  DEC_TIMEOUT = 0x0,
};

/* 1239 */
struct __cppobj srcinfo_provider_t
{
  srcinfo_provider_t_vtbl *__vftable /*VFT*/;
  size_t cb;
  int flags;
  const char *name;
  const char *display_name;
};

/* 1240 */
struct __cppobj source_item_t : qrefcnt_obj_t
{
};

/* 1241 */
struct __cppobj qrefcnt_t_source_item_t_
{
  source_item_t *ptr;
};

/* 1242 */
typedef qrefcnt_t_source_item_t_ source_item_ptr;

/* 1243 */
struct __cppobj qiterator_qrefcnt_t_source_item_t__ : qrefcnt_obj_t
{
};

/* 1244 */
/*struct qiterator_qrefcnt_t_source_item_t___vtbl
{
  void (__fastcall *release)(qrefcnt_obj_t *__hidden this);
  bool (__fastcall *first)(qiterator_qrefcnt_t_source_item_t__ *__hidden this);
  bool (__fastcall *next)(qiterator_qrefcnt_t_source_item_t__ *__hidden this);
  qrefcnt_t_source_item_t_ (__fastcall *operator*)(qiterator_qrefcnt_t_source_item_t__ *__hidden this);
  qrefcnt_t_source_item_t_ (__fastcall *get)(qiterator_qrefcnt_t_source_item_t__ *__hidden this);
};
*/

/* 1245 */
typedef qiterator_qrefcnt_t_source_item_t__ _source_item_iterator;

/* 1246 */
struct __cppobj qrefcnt_t_qiterator_qrefcnt_t_source_item_t___
{
  qiterator_qrefcnt_t_source_item_t__ *ptr;
};

/* 1247 */
typedef qrefcnt_t_qiterator_qrefcnt_t_source_item_t___ source_item_iterator;

/* 1248 */
struct __cppobj qvector_qrefcnt_t_source_item_t__
{
  qrefcnt_t_source_item_t_ *array;
  size_t n;
  size_t alloc;
};

/* 1249 */
typedef qrefcnt_t_source_item_t_ *qvector_qrefcnt_t_source_item_t____iterator;

/* 1250 */
typedef qrefcnt_t_source_item_t_ *qvector_qrefcnt_t_source_item_t____const_iterator;

/* 1251 */
typedef qvector_qrefcnt_t_source_item_t__ source_items_t;

/* 1252 */
struct __cppobj eval_ctx_t
{
  int size_cb;
  ea_t ea;
};

/* 1253 */
struct __cppobj source_file_t : qrefcnt_obj_t
{
};

/* 1254 */
/*struct source_file_t_vtbl
{
  void (__fastcall *release)(source_file_t *__hidden this);
  srcinfo_provider_t *(__fastcall *get_provider)(const source_file_t *__hidden this);
  const char *(__fastcall *get_path)(source_file_t *__hidden this, qstring *errbuf);
  TWidget *(__fastcall *open_srcview)(source_file_t *__hidden this, strvec_t **strvec, TWidget **pview, int lnnum, int colnum);
  bool (__fastcall *read_file)(source_file_t *__hidden this, strvec_t *buf, qstring *errbuf);
};
*/

/* 1255 */
struct __cppobj qrefcnt_t_source_file_t_
{
  source_file_t *ptr;
};

/* 1256 */
typedef qrefcnt_t_source_file_t_ source_file_ptr;

/* 1257 */
struct __cppobj qiterator_qrefcnt_t_source_file_t__ : qrefcnt_obj_t
{
};

/* 1258 */
/*struct qiterator_qrefcnt_t_source_file_t___vtbl
{
  void (__fastcall *release)(qrefcnt_obj_t *__hidden this);
  bool (__fastcall *first)(qiterator_qrefcnt_t_source_file_t__ *__hidden this);
  bool (__fastcall *next)(qiterator_qrefcnt_t_source_file_t__ *__hidden this);
  qrefcnt_t_source_file_t_ (__fastcall *operator*)(qiterator_qrefcnt_t_source_file_t__ *__hidden this);
  qrefcnt_t_source_file_t_ (__fastcall *get)(qiterator_qrefcnt_t_source_file_t__ *__hidden this);
};
*/

/* 1259 */
typedef qiterator_qrefcnt_t_source_file_t__ _source_file_iterator;

/* 1260 */
struct __cppobj qrefcnt_t_qiterator_qrefcnt_t_source_file_t___
{
  qiterator_qrefcnt_t_source_file_t__ *ptr;
};

/* 1261 */
typedef qrefcnt_t_qiterator_qrefcnt_t_source_file_t___ source_file_iterator;

/* 1262 */
enum src_item_kind_t : unsigned __int32
{
  SRCIT_NONE = 0x0,
  SRCIT_MODULE = 0x1,
  SRCIT_FUNC = 0x2,
  SRCIT_STMT = 0x3,
  SRCIT_EXPR = 0x4,
  SRCIT_STTVAR = 0x5,
  SRCIT_LOCVAR = 0x6,
};

/* 1263 */
/*struct source_item_t_vtbl
{
  void (__fastcall *release)(source_item_t *__hidden this);
  source_file_iterator (__fastcall *get_source_files)(source_item_t *__hidden this);
  bool (__fastcall *get_name)(const source_item_t *__hidden this, qstring *buf);
  int (__fastcall *get_lnnum)(const source_item_t *__hidden this);
  int (__fastcall *get_end_lnnum)(const source_item_t *__hidden this);
  int (__fastcall *get_colnum)(const source_item_t *__hidden this);
  int (__fastcall *get_end_colnum)(const source_item_t *__hidden this);
  ea_t (__fastcall *get_ea)(const source_item_t *__hidden this);
  asize_t (__fastcall *get_size)(const source_item_t *__hidden this);
  bool (__fastcall *get_item_bounds)(const source_item_t *__hidden this, rangeset_t *set);
  source_item_ptr (__fastcall *get_parent)(const source_item_t *__hidden this, src_item_kind_t max_kind);
  source_item_iterator (__fastcall *create_children_iterator)(source_item_t *__hidden this);
  bool (__fastcall *get_hint)(const source_item_t *__hidden this, qstring *hint, const eval_ctx_t *ctx, int *nlines);
  bool (__fastcall *evaluate)(const source_item_t *__hidden this, const eval_ctx_t *ctx, idc_value_t *res, qstring *errbuf);
  bool (__fastcall *equals)(const source_item_t *__hidden this, const source_item_t *other);
  src_item_kind_t (__fastcall *get_item_kind)(const source_item_t *__hidden this, const eval_ctx_t *);
  srcinfo_provider_t *(__fastcall *get_provider)(const source_item_t *__hidden this);
  bool (__fastcall *get_location)(const source_item_t *__hidden this, argloc_t *, const eval_ctx_t *);
  bool (__fastcall *get_expr_tinfo)(const source_item_t *__hidden this, tinfo_t *tif);
};
*/

/* 1264 */
/*struct srcinfo_provider_t_vtbl
{
  bool (__fastcall *enable_provider)(srcinfo_provider_t *__hidden this, bool enable);
  const char *(__fastcall *set_options)(srcinfo_provider_t *__hidden this, const char *keyword, int value_type, const void *value);
  void (__fastcall *add_module)(srcinfo_provider_t *__hidden this, const char *path, ea_t base, asize_t size);
  void (__fastcall *del_module)(srcinfo_provider_t *__hidden this, ea_t base);
  void (__fastcall *get_ready)(srcinfo_provider_t *__hidden this);
  int (__fastcall *get_change_flags)(srcinfo_provider_t *__hidden this);
  source_item_iterator (__fastcall *find_source_items)(srcinfo_provider_t *__hidden this, source_file_t *sf, int lnnum, int colnum);
  source_item_iterator (__fastcall *find_source_items_0)(srcinfo_provider_t *__hidden this, ea_t ea, asize_t size, src_item_kind_t level, bool may_decompile);
  source_file_iterator (__fastcall *create_file_iterator)(srcinfo_provider_t *__hidden this, const char *filename);
  source_item_iterator (__fastcall *create_item_iterator)(srcinfo_provider_t *__hidden this, const source_file_t *sf);
  bool (__fastcall *apply_module_info)(srcinfo_provider_t *__hidden this, const char *);
  source_item_ptr (__fastcall *find_static_item)(srcinfo_provider_t *__hidden this, const char *name, ea_t ea);
};
*/

/* 1265 */
struct source_view_t;

/* 1266 */
typedef int32 __cdecl _221F7DF9B1AB1F591FA2F298ADACB592(char *, uint, const char *, uint32);

/* 1267 */
typedef int mangled_name_type_t;

/* 1268 */
typedef qvector_unsigned_long_long_ inodevec_t;

/* 1269 */
typedef uval_t diridx_t;

/* 1270 */
typedef qvector_unsigned_long_long_ dirvec_t;

/* 1271 */
typedef ea_t blob_idx_t;

/* 1272 */
#pragma pack(push, 1)
struct __cppobj direntry_t
{
  uval_t idx;
  bool isdir;
};
#pragma pack(pop)

/* 1273 */
struct ida_movable_type_direntry_t_
{
};

/* 1274 */
struct __cppobj qvector_direntry_t_
{
  direntry_t *array;
  size_t n;
  size_t alloc;
};

/* 1275 */
typedef direntry_t *qvector_direntry_t___iterator;

/* 1276 */
typedef direntry_t *qvector_direntry_t___const_iterator;

/* 1277 */
typedef qvector_direntry_t_ direntry_vec_t;

/* 1278 */
enum _7014156F94AE1B7FC5F5E3560392A8C4 : unsigned __int32
{
  DTN_FULL_NAME = 0x0,
  DTN_DISPLAY_NAME = 0x1,
};

/* 1279 */
struct __cppobj dirspec_t
{
  dirspec_t_vtbl *__vftable /*VFT*/;
  uint32 flags;
  qstring id;
};

/* 1280 */
/*struct dirspec_t_vtbl
{
  void (__fastcall *_del_dirspec_t)(dirspec_t *__hidden this);
  bool (__fastcall *get_name)(dirspec_t *__hidden this, qstring *out, inode_t inode, uint32 name_flags);
  inode_t (__fastcall *get_inode)(dirspec_t *__hidden this, const char *dirpath, const char *name);
  qstring (__fastcall *get_attrs)(const dirspec_t *__hidden this, inode_t inode);
  bool (__fastcall *rename_inode)(dirspec_t *__hidden this, inode_t inode, const char *newname);
  void (__fastcall *unlink_inode)(dirspec_t *__hidden this, inode_t inode);
};
*/

/* 1281 */
struct __cppobj dirtree_cursor_t
{
  diridx_t parent;
  size_t rank;
};

/* 1282 */
struct ida_movable_type_dirtree_cursor_t_
{
};

/* 1284 */
typedef dirtree_cursor_t *qvector_dirtree_cursor_t___iterator;

/* 1285 */
typedef dirtree_cursor_t *qvector_dirtree_cursor_t___const_iterator;

/* 1287 */
struct dirtree_iterator_t
{
  qstring pattern;
  dirtree_cursor_t cursor;
};

/* 1288 */
enum dterr_t : unsigned __int32
{
  DTE_OK = 0x0,
  DTE_ALREADY_EXISTS = 0x1,
  DTE_NOT_FOUND = 0x2,
  DTE_NOT_DIRECTORY = 0x3,
  DTE_NOT_EMPTY = 0x4,
  DTE_BAD_PATH = 0x5,
  DTE_CANT_RENAME = 0x6,
  DTE_OWN_CHILD = 0x7,
  DTE_MAX_DIR = 0x8,
  DTE_LAST = 0x9,
};

/* 1290 */
struct __cppobj dirtree_visitor_t
{
  dirtree_visitor_t_vtbl *__vftable /*VFT*/;
};

/* 1291 */
/*struct dirtree_visitor_t_vtbl
{
  ssize_t (__fastcall *visit)(dirtree_visitor_t *__hidden this, const dirtree_cursor_t *c, const direntry_t *de);
};
*/

/* 1292 */
enum dirtree_id_t : unsigned __int32
{
  DIRTREE_LOCAL_TYPES = 0x0,
  DIRTREE_STRUCTS = 0x1,
  DIRTREE_ENUMS = 0x2,
  DIRTREE_FUNCS = 0x3,
  DIRTREE_NAMES = 0x4,
  DIRTREE_IMPORTS = 0x5,
  DIRTREE_IDAPLACE_BOOKMARKS = 0x6,
  DIRTREE_STRUCTS_BOOKMARKS = 0x7,
  DIRTREE_ENUMS_BOOKMARKS = 0x8,
  DIRTREE_BPTS = 0x9,
  DIRTREE_END = 0xA,
};

/* 1293 */
struct __cppobj enum_member_visitor_t
{
  enum_member_visitor_t_vtbl *__vftable /*VFT*/;
};

/* 1294 */
/*struct enum_member_visitor_t_vtbl
{
  int (__fastcall *visit_enum_member)(enum_member_visitor_t *__hidden this, const_t cid, uval_t value);
};
*/

/* 1295 */
#pragma pack(push, 1)
struct __cppobj exehdr
{
  uint16 exe_ident;
  uint16 PartPag;
  uint16 PageCnt;
  uint16 ReloCnt;
  uint16 HdrSize;
  uint16 MinMem;
  uint16 MaxMem;
  uint16 ReloSS;
  uint16 ExeSP;
  uint16 ChkSum;
  uint16 ExeIP;
  uint16 ReloCS;
  uint16 TablOff;
  uint16 Overlay;
};
#pragma pack(pop)

/* 1296 */
#pragma pack(push, 1)
struct __cppobj exehdr_full : exehdr
{
  uint16 res[4];
  uint16 oemid;
  uint16 oeminfo;
  uint16 res2[10];
  uint32 lfanew;
};
#pragma pack(pop)

/* 1297 */
struct idc_class_t;

/* 1300 */
struct __cppobj idc_global_t
{
  qstring name;
  idc_value_t value;
};

/* 1301 */
struct __cppobj qvector_idc_global_t_
{
  idc_global_t *array;
  size_t n;
  size_t alloc;
};

/* 1302 */
typedef idc_global_t *qvector_idc_global_t___iterator;

/* 1303 */
typedef idc_global_t *qvector_idc_global_t___const_iterator;

/* 1304 */
typedef qvector_idc_global_t_ idc_vars_t;

/* 1305 */
typedef error_t __cdecl _1DAB1DE771FB1F3D524D5CA7A3A423C5(idc_value_t *, idc_value_t *);

/* 1306 */
struct ext_idcfunc_t
{
  const char *name;
  error_t (__cdecl *fptr)(idc_value_t *, idc_value_t *);
  const char *args;
  const idc_value_t *defvals;
  int ndefvals;
  int flags;
};

/* 1307 */
struct idcfuncs_t
{
  size_t qnty;
  ext_idcfunc_t *funcs;
  error_t (*startup)(void);
  error_t (*shutdown)(void);
  void (*init_idc)(void);
  void (*term_idc)(void);
  bool (*is_database_open)(void);
  size_t (__cdecl *ea2str)(char *, size_t, ea_t);
  bool (__cdecl *undeclared_variable_ok)(const char *);
  int get_unkvar;
  int set_unkvar;
  int exec_resolved_func;
  int calc_sizeof;
  int get_field_ea;
};

/* 1308 */
struct ida_movable_type_idc_value_t_
{
};

/* 1309 */
struct ida_movable_type_idc_global_t_
{
};

/* 1310 */
enum syntax_highlight_style : unsigned __int32
{
  HF_DEFAULT = 0x0,
  HF_KEYWORD1 = 0x1,
  HF_KEYWORD2 = 0x2,
  HF_KEYWORD3 = 0x3,
  HF_STRING = 0x4,
  HF_COMMENT = 0x5,
  HF_PREPROC = 0x6,
  HF_NUMBER = 0x7,
  HF_MAX = 0x8,
};

/* 1311 */
struct __cppobj highlighter_cbs_t
{
  highlighter_cbs_t_vtbl *__vftable /*VFT*/;
};

/* 1312 */
/*struct highlighter_cbs_t_vtbl
{
  void (__fastcall *_del_highlighter_cbs_t)(highlighter_cbs_t *__hidden this);
  void (__fastcall *set_style)(highlighter_cbs_t *__hidden this, int32, int32, syntax_highlight_style);
  int32 (__fastcall *prev_block_state)(highlighter_cbs_t *__hidden this);
  int32 (__fastcall *cur_block_state)(highlighter_cbs_t *__hidden this);
  void (__fastcall *set_block_state)(highlighter_cbs_t *__hidden this, int32);
};
*/

/* 1313 */
struct __cppobj syntax_highlighter_t
{
  syntax_highlighter_t_vtbl *__vftable /*VFT*/;
  void (__cdecl *highlight_block)(void *, highlighter_cbs_t *, const qstring *);
};

/* 1314 */
/*struct syntax_highlighter_t_vtbl
{
  void (__fastcall *_del_syntax_highlighter_t)(syntax_highlighter_t *__hidden this);
};
*/

/* 1315 */
struct __cppobj qvector_extlang_t__P_
{
  extlang_t **array;
  size_t n;
  size_t alloc;
};

/* 1316 */
typedef extlang_t **qvector_extlang_t__P___iterator;

/* 1317 */
typedef extlang_t **qvector_extlang_t__P___const_iterator;

/* 1318 */
typedef qvector_extlang_t__P_ extlangs_t;

/* 1319 */
struct __cppobj qrefcnt_t_extlang_t_
{
  extlang_t *ptr;
};

/* 1320 */
typedef qrefcnt_t_extlang_t_ extlang_object_t;

/* 1321 */
struct __cppobj extlang_visitor_t
{
  extlang_visitor_t_vtbl *__vftable /*VFT*/;
};

/* 1322 */
/*struct extlang_visitor_t_vtbl
{
  ssize_t (__fastcall *visit_extlang)(extlang_visitor_t *__hidden this, extlang_t *extlang);
};
*/

/* 1323 */
enum find_extlang_kind_t : unsigned __int32
{
  FIND_EXTLANG_BY_EXT = 0x0,
  FIND_EXTLANG_BY_NAME = 0x1,
  FIND_EXTLANG_BY_IDX = 0x2,
};

/* 1324 */
struct __cppobj idc_resolver_t
{
  idc_resolver_t_vtbl *__vftable /*VFT*/;
};

/* 1325 */
/*struct idc_resolver_t_vtbl
{
  uval_t (__fastcall *resolve_name)(idc_resolver_t *__hidden this, const char *name);
};
*/

/* 1326 */
struct fixup_info_t
{
  ea_t ea;
  fixup_data_t fd;
};

/* 1327 */
struct ida_movable_type_fixup_info_t_
{
};

/* 1328 */
struct __cppobj qvector_fixup_info_t_
{
  fixup_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1329 */
typedef fixup_info_t *qvector_fixup_info_t___iterator;

/* 1330 */
typedef fixup_info_t *qvector_fixup_info_t___const_iterator;

/* 1331 */
typedef qvector_fixup_info_t_ fixups_t;

/* 1332 */
struct ida_movable_type_stkpnt_t_
{
};

/* 1334 */
typedef stkpnt_t *qvector_stkpnt_t___iterator;

/* 1335 */
typedef stkpnt_t *qvector_stkpnt_t___const_iterator;

/* 1336 */
enum frame_part_t : unsigned __int32
{
  FPC_ARGS = 0x0,
  FPC_RETADDR = 0x1,
  FPC_SAVREGS = 0x2,
  FPC_LVARS = 0x3,
};

/* 1337 */
struct ida_movable_type_regvar_t_
{
};

/* 1338 */
struct __cppobj xreflist_entry_t
{
  ea_t ea;
  uchar opnum;
  uchar type;
};

/* 1339 */
struct ida_movable_type_xreflist_entry_t_
{
};

/* 1340 */
struct __cppobj qvector_xreflist_entry_t_
{
  xreflist_entry_t *array;
  size_t n;
  size_t alloc;
};

/* 1341 */
typedef xreflist_entry_t *qvector_xreflist_entry_t___iterator;

/* 1342 */
typedef xreflist_entry_t *qvector_xreflist_entry_t___const_iterator;

/* 1343 */
typedef qvector_xreflist_entry_t_ xreflist_t;

/* 1344 */
struct __cppobj node_iterator
{
  const gdl_graph_t *g;
  int i;
};

/* 1346 */
enum fc_block_type_t : unsigned __int32
{
  fcb_normal = 0x0,
  fcb_indjump = 0x1,
  fcb_ret = 0x2,
  fcb_cndret = 0x3,
  fcb_noret = 0x4,
  fcb_enoret = 0x5,
  fcb_extern = 0x6,
  fcb_error = 0x7,
};

/* 1350 */
#pragma pack(push, 8)
struct __cppobj std__less_int_
{
};
#pragma pack(pop)

/* 1408 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std___Tree_node_int__void__P__
{
};
#pragma pack(pop)

/* 1362 */
typedef std___Tree_node_int__void__P_ std___Tree_simple_types_int____Node;

/* 1363 */
typedef std___Tree_simple_types_int____Node *std___Tree_simple_types_int____Nodeptr;

/* 1364 */
typedef std___Tree_simple_types_int____Nodeptr std___Tree_val_std___Tree_simple_types_int_____Nodeptr;

/* 1369 */
typedef size_t std___Simple_types_int___size_type;

/* 1370 */
typedef std___Simple_types_int___size_type std___Tree_val_std___Tree_simple_types_int____size_type;

/* 1366 */
#pragma pack(push, 8)
struct __cppobj std___Tree_val_std___Tree_simple_types_int__ : std___Container_base
{
  std___Tree_val_std___Tree_simple_types_int_____Nodeptr _Myhead;
  std___Tree_val_std___Tree_simple_types_int____size_type _Mysize;
};
#pragma pack(pop)

/* 1412 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__allocator_std___Tree_node_int__void__P____std___Tree_val_std___Tree_simple_types_int____true_ : std__allocator_std___Tree_node_int__void__P__
{
  std___Tree_val_std___Tree_simple_types_int__ _Myval2;
};
#pragma pack(pop)

/* 1411 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__less_int___std___Compressed_pair_std__allocator_std___Tree_node_int__void__P____std___Tree_val_std___Tree_simple_types_int____true___true_ : std__less_int_
{
  std___Compressed_pair_std__allocator_std___Tree_node_int__void__P____std___Tree_val_std___Tree_simple_types_int____true_ _Myval2;
};
#pragma pack(pop)

/* 1349 */
#pragma pack(push, 8)
struct __cppobj std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false__
{
  std___Compressed_pair_std__less_int___std___Compressed_pair_std__allocator_std___Tree_node_int__void__P____std___Tree_val_std___Tree_simple_types_int____true___true_ _Mypair;
};
#pragma pack(pop)

/* 1348 */
#pragma pack(push, 8)
struct __cppobj std__set_int_ : std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false__
{
};
#pragma pack(pop)

/* 1347 */
struct __cppobj intset_t : std__set_int_
{
};

/* 1351 */
typedef std__less_int_ std___Tset_traits_int__std__less_int___std__allocator_int___false___key_compare;

/* 1352 */
typedef std___Tset_traits_int__std__less_int___std__allocator_int___false___key_compare std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____key_compare;

/* 1353 */
#pragma pack(push, 8)
struct __cppobj std__allocator_int_
{
};
#pragma pack(pop)

/* 1354 */
typedef std__allocator_int_ std___Tset_traits_int__std__less_int___std__allocator_int___false___allocator_type;

/* 1355 */
typedef std___Tset_traits_int__std__less_int___std__allocator_int___false___allocator_type std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____allocator_type;

/* 1365 */
typedef std___Tree_val_std___Tree_simple_types_int_____Nodeptr std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int______Nodeptr;

/* 1357 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int___ : std___Iterator_base0
{
  std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int______Nodeptr _Ptr;
};
#pragma pack(pop)

/* 1356 */
#pragma pack(push, 8)
struct __cppobj std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int___ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int___
{
};
#pragma pack(pop)

/* 1359 */
typedef std___Tree_node_int__void__P_ *std___Rebind_pointer_t_void__P__std___Tree_node_int__void__P__;

/* 1360 */
typedef std___Rebind_pointer_t_void__P__std___Tree_node_int__void__P__ std___Tree_node_int__void__P____Nodeptr;

/* 1361 */
typedef int std___Tree_node_int__void__P___value_type;

/* 1358 */
#pragma pack(push, 8)
struct __cppobj std___Tree_node_int__void__P_
{
  std___Tree_node_int__void__P____Nodeptr _Left;
  std___Tree_node_int__void__P____Nodeptr _Parent;
  std___Tree_node_int__void__P____Nodeptr _Right;
  char _Color;
  char _Isnil;
  std___Tree_node_int__void__P___value_type _Myval;
};
#pragma pack(pop)

/* 1367 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int___ std___Tree_val_std___Tree_simple_types_int_____Unchecked_const_iterator;

/* 1368 */
#pragma pack(push, 8)
struct std___Tree_id_std___Tree_node_int__void__P___P_
{
  std___Tree_node_int__void__P_ *_Parent;
  std___Tree_child _Child;
};
#pragma pack(pop)

/* 1371 */
typedef int std___Simple_types_int___value_type;

/* 1372 */
typedef std___Simple_types_int___value_type std___Tree_val_std___Tree_simple_types_int____value_type;

/* 1373 */
typedef std___Tree_val_std___Tree_simple_types_int____value_type std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int_____value_type;

/* 1374 */
typedef const std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int_____value_type *std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int_____reference;

/* 1375 */
typedef const std___Simple_types_int___value_type *std___Simple_types_int___const_pointer;

/* 1376 */
typedef std___Simple_types_int___const_pointer std___Tree_val_std___Tree_simple_types_int____const_pointer;

/* 1377 */
typedef std___Tree_val_std___Tree_simple_types_int____const_pointer std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int_____pointer;

/* 1378 */
typedef std___Tree_val_std___Tree_simple_types_int____value_type std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int_____value_type;

/* 1379 */
typedef const std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int_____value_type *std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int_____reference;

/* 1380 */
typedef std___Tree_val_std___Tree_simple_types_int____const_pointer std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int_____pointer;

/* 1381 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int___ std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____iterator;

/* 1382 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int___ std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____const_iterator;

/* 1383 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int___ std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false_____Unchecked_iterator;

/* 1384 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_int___ std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false_____Unchecked_const_iterator;

/* 1385 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int____
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int___ current;
};
#pragma pack(pop)

/* 1386 */
typedef const int *std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int____;

/* 1387 */
typedef std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int____ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int______reference;

/* 1388 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int_____pointer std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int______pointer;

/* 1389 */
typedef std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int______pointer std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int______pointer;

/* 1390 */
typedef __int64 std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int____;

/* 1391 */
typedef std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int____ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int______difference_type;

/* 1392 */
typedef std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int____ std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____reverse_iterator;

/* 1393 */
typedef std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int____ std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____const_reverse_iterator;

/* 1394 */
typedef size_t std___Default_allocator_traits_std__allocator_int____size_type;

/* 1395 */
typedef std___Default_allocator_traits_std__allocator_int____size_type std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____size_type;

/* 1396 */
typedef std___Tset_traits_int__std__less_int___std__allocator_int___false___key_compare std___Tset_traits_int__std__less_int___std__allocator_int___false___value_compare;

/* 1397 */
typedef std___Tset_traits_int__std__less_int___std__allocator_int___false___value_compare std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____value_compare;

/* 1398 */
typedef int std___Tset_traits_int__std__less_int___std__allocator_int___false___value_type;

/* 1399 */
typedef std___Tset_traits_int__std__less_int___std__allocator_int___false___value_type std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____value_type;

/* 1400 */
#pragma pack(push, 8)
struct __cppobj std__initializer_list_int_
{
  int *_First;
  int *_Last;
};
#pragma pack(pop)

/* 1401 */
typedef std___Tree_node_int__void__P_ std__allocator_std___Tree_node_int__void__P____value_type;

/* 1402 */
typedef std__allocator_std___Tree_node_int__void__P____value_type std___Default_allocator_traits_std__allocator_std___Tree_node_int__void__P_____value_type;

/* 1403 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_int__void__P_____value_type *std___Default_allocator_traits_std__allocator_std___Tree_node_int__void__P_____pointer;

/* 1404 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_int__void__P_____pointer std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false_____Nodeptr;

/* 1405 */
typedef int std___Tset_traits_int__std__less_int___std__allocator_int___false___key_type;

/* 1406 */
typedef std___Tset_traits_int__std__less_int___std__allocator_int___false___key_type std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____key_type;

/* 1407 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int_____std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int____
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int___ first;
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_int___ second;
};
#pragma pack(pop)

/* 1409 */
typedef std__allocator_std___Tree_node_int__void__P__ std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false_____Alnode;

/* 1410 */
typedef std___Tree_val_std___Tree_simple_types_int__ std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false_____Scary_val;

/* 1413 */
typedef std___Tree_std___Tset_traits_int__std__less_int___std__allocator_int___false____allocator_type std__set_int___allocator_type;

/* 1414 */
typedef std__less_int_ std__set_int___key_compare;

/* 1415 */
struct __cppobj qvector_qvector_int__
{
  qvector_int_ *array;
  size_t n;
  size_t alloc;
};

/* 1416 */
typedef qvector_int_ *qvector_qvector_int____iterator;

/* 1417 */
typedef qvector_int_ *qvector_qvector_int____const_iterator;

/* 1418 */
typedef qvector_qvector_int__ array_of_intvec_t;

/* 1498 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std___Tree_node_std__pair_const_int__int___void__P__
{
};
#pragma pack(pop)

/* 1435 */
typedef std___Tree_node_std__pair_const_int__int___void__P_ std___Tree_simple_types_std__pair_const_int__int_____Node;

/* 1436 */
typedef std___Tree_simple_types_std__pair_const_int__int_____Node *std___Tree_simple_types_std__pair_const_int__int_____Nodeptr;

/* 1437 */
typedef std___Tree_simple_types_std__pair_const_int__int_____Nodeptr std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______Nodeptr;

/* 1442 */
typedef size_t std___Simple_types_std__pair_const_int__int____size_type;

/* 1443 */
typedef std___Simple_types_std__pair_const_int__int____size_type std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____size_type;

/* 1439 */
#pragma pack(push, 8)
struct __cppobj std___Tree_val_std___Tree_simple_types_std__pair_const_int__int___ : std___Container_base
{
  std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______Nodeptr _Myhead;
  std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____size_type _Mysize;
};
#pragma pack(pop)

/* 1502 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_int__int___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____true_ : std__allocator_std___Tree_node_std__pair_const_int__int___void__P__
{
  std___Tree_val_std___Tree_simple_types_std__pair_const_int__int___ _Myval2;
};
#pragma pack(pop)

/* 1501 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__less_int___std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_int__int___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____true___true_ : std__less_int_
{
  std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_int__int___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____true_ _Myval2;
};
#pragma pack(pop)

/* 1421 */
#pragma pack(push, 8)
struct __cppobj std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false__
{
  std___Compressed_pair_std__less_int___std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_int__int___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____true___true_ _Mypair;
};
#pragma pack(pop)

/* 1420 */
#pragma pack(push, 8)
struct __cppobj std__map_int__int_ : std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false__
{
};
#pragma pack(pop)

/* 1419 */
struct __cppobj intmap_t : std__map_int__int_
{
};

/* 1422 */
typedef std__less_int_ std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false___key_compare;

/* 1423 */
typedef std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false___key_compare std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____key_compare;

/* 1424 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std__pair_const_int__int__
{
};
#pragma pack(pop)

/* 1425 */
#pragma pack(push, 8)
struct __cppobj std__pair_const_int__int_
{
  const int first;
  int second;
};
#pragma pack(pop)

/* 1426 */
typedef std__allocator_std__pair_const_int__int__ std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false___allocator_type;

/* 1427 */
typedef std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false___allocator_type std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____allocator_type;

/* 1438 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______Nodeptr std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______Nodeptr;

/* 1430 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ : std___Iterator_base0
{
  std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______Nodeptr _Ptr;
};
#pragma pack(pop)

/* 1429 */
#pragma pack(push, 8)
struct __cppobj std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____
{
};
#pragma pack(pop)

/* 1428 */
#pragma pack(push, 8)
struct __cppobj std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ : std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____
{
};
#pragma pack(pop)

/* 1432 */
typedef std___Tree_node_std__pair_const_int__int___void__P_ *std___Rebind_pointer_t_void__P__std___Tree_node_std__pair_const_int__int___void__P__;

/* 1433 */
typedef std___Rebind_pointer_t_void__P__std___Tree_node_std__pair_const_int__int___void__P__ std___Tree_node_std__pair_const_int__int___void__P____Nodeptr;

/* 1434 */
typedef std__pair_const_int__int_ std___Tree_node_std__pair_const_int__int___void__P___value_type;

/* 1431 */
#pragma pack(push, 8)
struct __cppobj std___Tree_node_std__pair_const_int__int___void__P_
{
  std___Tree_node_std__pair_const_int__int___void__P____Nodeptr _Left;
  std___Tree_node_std__pair_const_int__int___void__P____Nodeptr _Parent;
  std___Tree_node_std__pair_const_int__int___void__P____Nodeptr _Right;
  char _Color;
  char _Isnil;
  std___Tree_node_std__pair_const_int__int___void__P___value_type _Myval;
};
#pragma pack(pop)

/* 1440 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______Unchecked_const_iterator;

/* 1441 */
#pragma pack(push, 8)
struct std___Tree_id_std___Tree_node_std__pair_const_int__int___void__P___P_
{
  std___Tree_node_std__pair_const_int__int___void__P_ *_Parent;
  std___Tree_child _Child;
};
#pragma pack(pop)

/* 1444 */
typedef std__pair_const_int__int_ std___Simple_types_std__pair_const_int__int____value_type;

/* 1445 */
typedef std___Simple_types_std__pair_const_int__int____value_type std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____value_type;

/* 1446 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____value_type std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______value_type;

/* 1447 */
typedef const std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______value_type *std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______reference;

/* 1448 */
typedef const std___Simple_types_std__pair_const_int__int____value_type *std___Simple_types_std__pair_const_int__int____const_pointer;

/* 1449 */
typedef std___Simple_types_std__pair_const_int__int____const_pointer std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____const_pointer;

/* 1450 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____const_pointer std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______pointer;

/* 1451 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____value_type std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______value_type;

/* 1452 */
typedef const std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______value_type *std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______reference;

/* 1453 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____const_pointer std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______pointer;

/* 1454 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____value_type std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______value_type;

/* 1455 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______value_type *std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______reference;

/* 1456 */
typedef std___Simple_types_std__pair_const_int__int____value_type *std___Simple_types_std__pair_const_int__int____pointer;

/* 1457 */
typedef std___Simple_types_std__pair_const_int__int____pointer std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____pointer;

/* 1458 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____pointer std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______pointer;

/* 1459 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____
{
};
#pragma pack(pop)

/* 1460 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____value_type std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______value_type;

/* 1461 */
typedef std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______value_type *std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______reference;

/* 1462 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____pointer std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______pointer;

/* 1463 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____iterator;

/* 1464 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____const_iterator;

/* 1465 */
typedef std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false_____Unchecked_iterator;

/* 1466 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false_____Unchecked_const_iterator;

/* 1467 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____
{
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ current;
};
#pragma pack(pop)

/* 1468 */
typedef std__pair_const_int__int_ *std___Iter_ref_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____;

/* 1469 */
typedef std___Iter_ref_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____ std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______reference;

/* 1470 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______pointer std___Iterator_traits_base_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______pointer;

/* 1471 */
typedef std___Iterator_traits_base_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______pointer std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______pointer;

/* 1472 */
typedef __int64 std___Iter_diff_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____;

/* 1473 */
typedef std___Iter_diff_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____ std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______difference_type;

/* 1474 */
typedef std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____ std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____reverse_iterator;

/* 1475 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ current;
};
#pragma pack(pop)

/* 1476 */
typedef const std__pair_const_int__int_ *std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____;

/* 1477 */
typedef std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______reference;

/* 1478 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______pointer std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______pointer;

/* 1479 */
typedef std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______pointer std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______pointer;

/* 1480 */
typedef __int64 std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____;

/* 1481 */
typedef std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_______difference_type;

/* 1482 */
typedef std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____ std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____const_reverse_iterator;

/* 1483 */
typedef size_t std___Default_allocator_traits_std__allocator_std__pair_const_int__int_____size_type;

/* 1484 */
typedef std___Default_allocator_traits_std__allocator_std__pair_const_int__int_____size_type std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____size_type;

/* 1485 */
struct std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false___value_compare;

/* 1486 */
typedef struct std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false___value_compare std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____value_compare;

/* 1487 */
typedef std__pair_const_int__int_ std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false___value_type;

/* 1488 */
typedef std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false___value_type std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____value_type;

/* 1489 */
#pragma pack(push, 8)
struct __cppobj std__initializer_list_std__pair_const_int__int__
{
  std__pair_const_int__int_ *_First;
  std__pair_const_int__int_ *_Last;
};
#pragma pack(pop)

/* 1490 */
typedef std___Tree_node_std__pair_const_int__int___void__P_ std__allocator_std___Tree_node_std__pair_const_int__int___void__P____value_type;

/* 1491 */
typedef std__allocator_std___Tree_node_std__pair_const_int__int___void__P____value_type std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_int__int___void__P_____value_type;

/* 1492 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_int__int___void__P_____value_type *std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_int__int___void__P_____pointer;

/* 1493 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_int__int___void__P_____pointer std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false_____Nodeptr;

/* 1494 */
typedef int std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false___key_type;

/* 1495 */
typedef std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false___key_type std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____key_type;

/* 1496 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____
{
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ first;
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ second;
};
#pragma pack(pop)

/* 1497 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int______std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int_____
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ first;
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_int__int____ second;
};
#pragma pack(pop)

/* 1499 */
typedef std__allocator_std___Tree_node_std__pair_const_int__int___void__P__ std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false_____Alnode;

/* 1500 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_int__int___ std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false_____Scary_val;

/* 1503 */
typedef std___Tree_std___Tmap_traits_int__int__std__less_int___std__allocator_std__pair_const_int__int____false____allocator_type std__map_int__int___allocator_type;

/* 1504 */
typedef std__less_int_ std__map_int__int___key_compare;

/* 1505 */
typedef int std__map_int__int___mapped_type;

/* 1506 */
typedef int std__map_int__int___key_type;

/* 1507 */
struct __cppobj qvector_intmap_t_
{
  intmap_t *array;
  size_t n;
  size_t alloc;
};

/* 1508 */
typedef intmap_t *qvector_intmap_t___iterator;

/* 1509 */
typedef intmap_t *qvector_intmap_t___const_iterator;

/* 1510 */
typedef qvector_intmap_t_ array_of_intmap_t;

/* 1511 */
struct __cppobj node_set_t : intset_t
{
};

/* 1512 */
struct __cppobj qvector_node_set_t_
{
  node_set_t *array;
  size_t n;
  size_t alloc;
};

/* 1513 */
typedef node_set_t *qvector_node_set_t___iterator;

/* 1514 */
typedef node_set_t *qvector_node_set_t___const_iterator;

/* 1515 */
typedef qvector_node_set_t_ array_of_node_set_t;

/* 1516 */
/*struct gdl_graph_t_vtbl
{
  void (__fastcall *_del_gdl_graph_t)(gdl_graph_t *__hidden this);
  char *(__fastcall *get_node_label)(const gdl_graph_t *__hidden this, char *iobuf, int iobufsize, int n);
  void (__fastcall *print_graph_attributes)(const gdl_graph_t *__hidden this, FILE *fp);
  bool (__fastcall *print_node)(const gdl_graph_t *__hidden this, FILE *fp, int n);
  bool (__fastcall *print_edge)(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);
  void (__fastcall *print_node_attributes)(const gdl_graph_t *__hidden this, FILE *fp, int n);
  int (__fastcall *size)(const gdl_graph_t *__hidden this);
  int (__fastcall *node_qty)(const gdl_graph_t *__hidden this);
  bool (__fastcall *exists)(const gdl_graph_t *__hidden this, int node);
  int (__fastcall *entry)(const gdl_graph_t *__hidden this);
  int (__fastcall *exit)(const gdl_graph_t *__hidden this);
  int (__fastcall *nsucc)(const gdl_graph_t *__hidden this, int node);
  int (__fastcall *npred)(const gdl_graph_t *__hidden this, int node);
  int (__fastcall *succ)(const gdl_graph_t *__hidden this, int node, int i);
  int (__fastcall *pred)(const gdl_graph_t *__hidden this, int node, int i);
  bool (__fastcall *empty)(const gdl_graph_t *__hidden this);
  bgcolor_t (__fastcall *get_node_color)(const gdl_graph_t *__hidden this, int n);
  bgcolor_t (__fastcall *get_edge_color)(const gdl_graph_t *__hidden this, int i, int j);
};
*/

/* 1518 */
/*struct cancellable_graph_t_vtbl
{
  void (__fastcall *_del_cancellable_graph_t)(cancellable_graph_t *__hidden this);
  char *(__fastcall *get_node_label)(const gdl_graph_t *__hidden this, char *iobuf, int iobufsize, int n);
  void (__fastcall *print_graph_attributes)(const gdl_graph_t *__hidden this, FILE *fp);
  bool (__fastcall *print_node)(const gdl_graph_t *__hidden this, FILE *fp, int n);
  bool (__fastcall *print_edge)(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);
  void (__fastcall *print_node_attributes)(const gdl_graph_t *__hidden this, FILE *fp, int n);
  int (__fastcall *size)(const gdl_graph_t *__hidden this);
  int (__fastcall *node_qty)(const gdl_graph_t *__hidden this);
  bool (__fastcall *exists)(const gdl_graph_t *__hidden this, int node);
  int (__fastcall *entry)(const gdl_graph_t *__hidden this);
  int (__fastcall *exit)(const gdl_graph_t *__hidden this);
  int (__fastcall *nsucc)(const gdl_graph_t *__hidden this, int node);
  int (__fastcall *npred)(const gdl_graph_t *__hidden this, int node);
  int (__fastcall *succ)(const gdl_graph_t *__hidden this, int node, int i);
  int (__fastcall *pred)(const gdl_graph_t *__hidden this, int node, int i);
  bool (__fastcall *empty)(const gdl_graph_t *__hidden this);
  bgcolor_t (__fastcall *get_node_color)(const gdl_graph_t *__hidden this, int n);
  bgcolor_t (__fastcall *get_edge_color)(const gdl_graph_t *__hidden this, int i, int j);
};
*/

/* 1519 */
struct __cppobj qbasic_block_t : range_t
{
  intvec_t succ;
  intvec_t pred;
};

/* 1520 */
/*struct qflow_chart_t_vtbl
{
  void (__fastcall *_del_qflow_chart_t)(qflow_chart_t *__hidden this);
  char *(__fastcall *get_node_label)(const qflow_chart_t *__hidden this, char *iobuf, int iobufsize, int n);
  void (__fastcall *print_graph_attributes)(const gdl_graph_t *__hidden this, FILE *fp);
  bool (__fastcall *print_node)(const gdl_graph_t *__hidden this, FILE *fp, int n);
  bool (__fastcall *print_edge)(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);
  void (__fastcall *print_node_attributes)(const qflow_chart_t *__hidden this, FILE *fp, int n);
  int (__fastcall *size)(const qflow_chart_t *__hidden this);
  int (__fastcall *node_qty)(const gdl_graph_t *__hidden this);
  bool (__fastcall *exists)(const gdl_graph_t *__hidden this, int node);
  int (__fastcall *entry)(const gdl_graph_t *__hidden this);
  int (__fastcall *exit)(const gdl_graph_t *__hidden this);
  int (__fastcall *nsucc)(const qflow_chart_t *__hidden this, int node);
  int (__fastcall *npred)(const qflow_chart_t *__hidden this, int node);
  int (__fastcall *succ)(const qflow_chart_t *__hidden this, int node, int i);
  int (__fastcall *pred)(const qflow_chart_t *__hidden this, int node, int i);
  bool (__fastcall *empty)(const gdl_graph_t *__hidden this);
  bgcolor_t (__fastcall *get_node_color)(const gdl_graph_t *__hidden this, int n);
  bgcolor_t (__fastcall *get_edge_color)(const gdl_graph_t *__hidden this, int i, int j);
};
*/

/* 1522 */
typedef qbasic_block_t *qvector_qbasic_block_t___iterator;

/* 1523 */
typedef qbasic_block_t *qvector_qbasic_block_t___const_iterator;

/* 1555 */
typedef int layout_type_t;

/* 1545 */
struct __cppobj point_t
{
  int x;
  int y;
};

/* 1525 */
struct __cppobj abstract_graph_t : gdl_graph_t
{
  qstring title;
  bool rect_edges_made;
  layout_type_t current_layout;
  point_t circle_center;
  int circle_radius;
  ssize_t (__cdecl *callback)(void *, int, va_list);
  void *callback_ud;
};

/* 1526 */
struct __cppobj node_info_t
{
  size_t cb;
  bgcolor_t bg_color;
  bgcolor_t frame_color;
  uint32 flags;
  ea_t ea;
  qstring text;
};

/* 1527 */
typedef ea_t graph_id_t;

/* 1528 */
struct __cppobj node_ordering_t
{
  intvec_t node_by_order;
  intvec_t order_by_node;
};

/* 1530 */
struct ida_movable_type_edge_t_
{
};

/* 1531 */
struct __cppobj qvector_edge_t_
{
  edge_t *array;
  size_t n;
  size_t alloc;
};

/* 1532 */
typedef edge_t *qvector_edge_t___iterator;

/* 1533 */
typedef edge_t *qvector_edge_t___const_iterator;

/* 1534 */
typedef qvector_edge_t_ edgevec_t;

/* 1535 */
struct edgeset_t;

/* 1536 */
struct edge_segs_vec_t;

/* 1537 */
struct edge_infos_t;

/* 1538 */
struct destset_t;

/* 1539 */
enum edge_type_t : unsigned __int32
{
  edge_error = 0x0,
  edge_tree = 0x1,
  edge_forward = 0x2,
  edge_back = 0x3,
  edge_cross = 0x4,
  edge_subgraph = 0x5,
};

/* 1540 */
struct edge_typer_t;

/* 1541 */
struct __cppobj graph_node_visitor_t
{
  graph_node_visitor_t_vtbl *__vftable /*VFT*/;
  node_set_t visited;
};

/* 1542 */
/*struct graph_node_visitor_t_vtbl
{
  int (__fastcall *visit_node)(graph_node_visitor_t *__hidden this, int);
  bool (__fastcall *is_forbidden_edge)(const graph_node_visitor_t *__hidden this, int, int);
  void (__fastcall *_del_graph_node_visitor_t)(graph_node_visitor_t *__hidden this);
};
*/

/* 1543 */
struct __cppobj graph_path_visitor_t
{
  graph_path_visitor_t_vtbl *__vftable /*VFT*/;
  intvec_t path;
  bool prune;
};

/* 1544 */
/*struct graph_path_visitor_t_vtbl
{
  int (__fastcall *walk_forward)(graph_path_visitor_t *__hidden this, int);
  int (__fastcall *walk_backward)(graph_path_visitor_t *__hidden this, int);
  void (__fastcall *_del_graph_path_visitor_t)(graph_path_visitor_t *__hidden this);
};
*/

/* 1546 */
struct ida_movable_type_point_t_
{
};

/* 1547 */
struct __cppobj qvector_point_t_
{
  point_t *array;
  size_t n;
  size_t alloc;
};

/* 1548 */
typedef point_t *qvector_point_t___iterator;

/* 1549 */
typedef point_t *qvector_point_t___const_iterator;

/* 1550 */
typedef qvector_point_t_ pointvec_t;

/* 1551 */
struct __cppobj pointseq_t : pointvec_t
{
};

/* 1552 */
struct __cppobj rect_t
{
  int left;
  int top;
  int right;
  int bottom;
};

/* 1553 */
struct ida_movable_type_rect_t_
{
};

/* 1554 */
struct __cppobj TPointDouble
{
  double x;
  double y;
};

/* 1556 */
struct __cppobj edge_info_t
{
  bgcolor_t color;
  int width;
  int srcoff;
  int dstoff;
  pointseq_t layout;
};

/* 1559 */
enum graph_item_type_t : unsigned __int32
{
  git_none = 0x0,
  git_edge = 0x1,
  git_node = 0x2,
  git_tool = 0x3,
  git_text = 0x4,
  git_elp = 0x5,
};

/* 1558 */
struct __cppobj graph_item_t
{
  graph_item_type_t type;
  edge_t e;
  int n;
  int b;
  point_t p;
  edge_layout_point_t elp;
};

/* 1561 */
typedef selection_item_t *qvector_selection_item_t___iterator;

/* 1562 */
typedef selection_item_t *qvector_selection_item_t___const_iterator;

/* 1564 */
struct __cppobj edge_segment_t
{
  edge_t e;
  int nseg;
  int x0;
  int x1;
};

/* 1565 */
struct __cppobj interval_t
{
  int x0;
  int x1;
};

/* 1566 */
struct __cppobj row_info_t
{
  intvec_t nodes;
  int top;
  int bottom;
};

/* 1567 */
struct __cppobj qvector_row_info_t_
{
  row_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1568 */
typedef row_info_t *qvector_row_info_t___iterator;

/* 1569 */
typedef row_info_t *qvector_row_info_t___const_iterator;

/* 1570 */
typedef qvector_row_info_t_ graph_row_info_t;

/* 1572 */
struct __cppobj graph_visitor_t
{
  graph_visitor_t_vtbl *__vftable /*VFT*/;
  abstract_graph_t *g;
};

/* 1573 */
/*struct abstract_graph_t_vtbl
{
  void (__fastcall *_del_abstract_graph_t)(abstract_graph_t *__hidden this);
  char *(__fastcall *get_node_label)(const gdl_graph_t *__hidden this, char *iobuf, int iobufsize, int n);
  void (__fastcall *print_graph_attributes)(const gdl_graph_t *__hidden this, FILE *fp);
  bool (__fastcall *print_node)(const gdl_graph_t *__hidden this, FILE *fp, int n);
  bool (__fastcall *print_edge)(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);
  void (__fastcall *print_node_attributes)(const gdl_graph_t *__hidden this, FILE *fp, int n);
  int (__fastcall *size)(const gdl_graph_t *__hidden this);
  int (__fastcall *node_qty)(const gdl_graph_t *__hidden this);
  bool (__fastcall *exists)(const gdl_graph_t *__hidden this, int node);
  int (__fastcall *entry)(const gdl_graph_t *__hidden this);
  int (__fastcall *exit)(const gdl_graph_t *__hidden this);
  int (__fastcall *nsucc)(const gdl_graph_t *__hidden this, int node);
  int (__fastcall *npred)(const gdl_graph_t *__hidden this, int node);
  int (__fastcall *succ)(const gdl_graph_t *__hidden this, int node, int i);
  int (__fastcall *pred)(const gdl_graph_t *__hidden this, int node, int i);
  bool (__fastcall *empty)(const gdl_graph_t *__hidden this);
  bgcolor_t (__fastcall *get_node_color)(const gdl_graph_t *__hidden this, int n);
  bgcolor_t (__fastcall *get_edge_color)(const gdl_graph_t *__hidden this, int i, int j);
  rect_t *(__fastcall *nrect)(abstract_graph_t *__hidden this, int n);
  edge_info_t *(__fastcall *get_edge)(abstract_graph_t *__hidden this, edge_t e);
  abstract_graph_t *(__fastcall *clone)(const abstract_graph_t *__hidden this);
};
*/

/* 1574 */
struct depth_first_info_t;

/* 1575 */
struct __cppobj edge_infos_wrapper_t
{
  edge_infos_t *ptr;
};

/* 1578 */
struct __cppobj qvector_rect_t_
{
  rect_t *array;
  size_t n;
  size_t alloc;
};

/* 1581 */
typedef qvector_rect_t_ mutable_graph_t__node_layout_t;

/* 1576 */
struct __cppobj mutable_graph_t : abstract_graph_t
{
  uval_t gid;
  intvec_t belongs;
  bytevec_t node_flags;
  array_of_intvec_t org_succs;
  array_of_intvec_t org_preds;
  array_of_intvec_t succs;
  array_of_intvec_t preds;
  mutable_graph_t__node_layout_t nodes;
  edge_infos_wrapper_t edges;
};

/* 1577 */
/*struct mutable_graph_t_vtbl
{
  void (__fastcall *_del_mutable_graph_t)(mutable_graph_t *__hidden this);
  char *(__fastcall *get_node_label)(const gdl_graph_t *__hidden this, char *iobuf, int iobufsize, int n);
  void (__fastcall *print_graph_attributes)(const gdl_graph_t *__hidden this, FILE *fp);
  bool (__fastcall *print_node)(const gdl_graph_t *__hidden this, FILE *fp, int n);
  bool (__fastcall *print_edge)(const gdl_graph_t *__hidden this, FILE *fp, int i, int j);
  void (__fastcall *print_node_attributes)(const gdl_graph_t *__hidden this, FILE *fp, int n);
  int (__fastcall *size)(const mutable_graph_t *__hidden this);
  int (__fastcall *node_qty)(const mutable_graph_t *__hidden this);
  bool (__fastcall *exists)(const mutable_graph_t *__hidden this, int node);
  int (__fastcall *entry)(const gdl_graph_t *__hidden this);
  int (__fastcall *exit)(const gdl_graph_t *__hidden this);
  int (__fastcall *nsucc)(const mutable_graph_t *__hidden this, int b);
  int (__fastcall *npred)(const mutable_graph_t *__hidden this, int b);
  int (__fastcall *succ)(const mutable_graph_t *__hidden this, int b, int i);
  int (__fastcall *pred)(const mutable_graph_t *__hidden this, int b, int i);
  bool (__fastcall *empty)(const mutable_graph_t *__hidden this);
  bgcolor_t (__fastcall *get_node_color)(const gdl_graph_t *__hidden this, int n);
  bgcolor_t (__fastcall *get_edge_color)(const gdl_graph_t *__hidden this, int i, int j);
  rect_t *(__fastcall *nrect)(mutable_graph_t *__hidden this, int n);
  edge_info_t *(__fastcall *get_edge)(mutable_graph_t *__hidden this, edge_t e);
  mutable_graph_t *(__fastcall *clone)(const mutable_graph_t *__hidden this);
  bool (__fastcall *redo_layout)(mutable_graph_t *__hidden this);
  void (__fastcall *resize)(mutable_graph_t *__hidden this, int n);
  int (__fastcall *add_node)(mutable_graph_t *__hidden this, const rect_t *r);
  ssize_t (__fastcall *del_node)(mutable_graph_t *__hidden this, int n);
  bool (__fastcall *add_edge)(mutable_graph_t *__hidden this, int i, int j, const edge_info_t *ei);
  bool (__fastcall *del_edge)(mutable_graph_t *__hidden this, int i, int j);
  bool (__fastcall *replace_edge)(mutable_graph_t *__hidden this, int i, int j, int x, int y);
  bool (__fastcall *refresh)(mutable_graph_t *__hidden this);
  bool (__fastcall *set_nrect)(mutable_graph_t *__hidden this, int n, const rect_t *r);
  bool (__fastcall *set_edge)(mutable_graph_t *__hidden this, edge_t e, const edge_info_t *ei);
  ea_t (__fastcall *calc_group_ea)(mutable_graph_t *__hidden this, const intvec_t *);
  bool (__fastcall *is_user_graph)(mutable_graph_t *__hidden this);
};
*/

/* 1579 */
typedef rect_t *qvector_rect_t___iterator;

/* 1580 */
typedef rect_t *qvector_rect_t___const_iterator;

/* 1582 */
/*struct graph_visitor_t_vtbl
{
  int (__fastcall *visit_node)(graph_visitor_t *__hidden this, int n, rect_t *r);
  int (__fastcall *visit_edge)(graph_visitor_t *__hidden this, edge_t e, edge_info_t *ei);
};
*/

/* 1583 */
enum graph_notification_t : unsigned __int32
{
  grcode_calculating_layout = 0x0,
  grcode_layout_calculated = 0x1,
  grcode_changed_graph = 0x2,
  grcode_reserved = 0x3,
  grcode_clicked = 0x4,
  grcode_dblclicked = 0x5,
  grcode_creating_group = 0x6,
  grcode_deleting_group = 0x7,
  grcode_group_visibility = 0x8,
  grcode_gotfocus = 0x9,
  grcode_lostfocus = 0xA,
  grcode_user_refresh = 0xB,
  grcode_reserved2 = 0xC,
  grcode_user_text = 0xD,
  grcode_user_size = 0xE,
  grcode_user_title = 0xF,
  grcode_user_draw = 0x10,
  grcode_user_hint = 0x11,
  grcode_destroyed = 0x12,
  grcode_create_graph_viewer = 0x100,
  grcode_get_graph_viewer = 0x101,
  grcode_get_viewer_graph = 0x102,
  grcode_create_mutable_graph = 0x103,
  grcode_set_viewer_graph = 0x104,
  grcode_refresh_viewer = 0x105,
  grcode_fit_window = 0x106,
  grcode_get_curnode = 0x107,
  grcode_center_on = 0x108,
  grcode_get_selection = 0x109,
  grcode_del_custom_layout = 0x10A,
  grcode_set_custom_layout = 0x10B,
  grcode_set_graph_groups = 0x10C,
  grcode_clear = 0x10D,
  grcode_create_digraph_layout = 0x10E,
  grcode_create_tree_layout = 0x10F,
  grcode_create_circle_layout = 0x110,
  grcode_get_node_representative = 0x111,
  grcode_find_subgraph_node = 0x112,
  grcode_create_group = 0x113,
  grcode_get_custom_layout = 0x114,
  grcode_get_graph_groups = 0x115,
  grcode_empty = 0x116,
  grcode_is_visible_node = 0x117,
  grcode_delete_group = 0x118,
  grcode_change_group_visibility = 0x119,
  grcode_set_edge = 0x11A,
  grcode_node_qty = 0x11B,
  grcode_nrect = 0x11C,
  grcode_set_titlebar_height = 0x11D,
  grcode_create_user_graph_place = 0x11E,
  grcode_create_disasm_graph1 = 0x11F,
  grcode_create_disasm_graph2 = 0x120,
  grcode_set_node_info = 0x121,
  grcode_get_node_info = 0x122,
  grcode_del_node_info = 0x123,
  grcode_viewer_create_groups = 0x124,
  grcode_viewer_delete_groups = 0x125,
  grcode_viewer_groups_visibility = 0x126,
  grcode_viewer_create_groups_vec = 0x127,
  grcode_viewer_delete_groups_vec = 0x128,
  grcode_viewer_groups_visibility_vec = 0x129,
  grcode_delete_mutable_graph = 0x12A,
  grcode_edge_infos_wrapper_copy = 0x12B,
  grcode_edge_infos_wrapper_clear = 0x12C,
  grcode_attach_menu_item = 0x12D,
  grcode_set_gli = 0x12E,
  grcode_get_gli = 0x12F,
};

/* 1584 */
struct group_crinfo_t
{
  intvec_t nodes;
  qstring text;
};

/* 1585 */
struct __cppobj qvector_group_crinfo_t_
{
  group_crinfo_t *array;
  size_t n;
  size_t alloc;
};

/* 1586 */
typedef group_crinfo_t *qvector_group_crinfo_t___iterator;

/* 1587 */
typedef group_crinfo_t *qvector_group_crinfo_t___const_iterator;

/* 1588 */
typedef qvector_group_crinfo_t_ groups_crinfos_t;

/* 1589 */
typedef struct TWidget graph_viewer_t;

/* 1590 */
struct __cppobj user_graph_place_t : place_t
{
  int node;
};

/* 1591 */
/*struct user_graph_place_t_vtbl
{
  void (__fastcall *print)(const place_t *__hidden this, qstring *vout, void *ud);
  uval_t (__fastcall *touval)(const place_t *__hidden this, void *ud);
  place_t *(__fastcall *clone)(const place_t *__hidden this);
  void (__fastcall *copyfrom)(place_t *__hidden this, const place_t *from);
  place_t *(__fastcall *makeplace)(const place_t *__hidden this, void *ud, uval_t x, int lnnum);
  int (__fastcall *compare)(const place_t *__hidden this, const place_t *t2);
  void (__fastcall *adjust)(place_t *__hidden this, void *ud);
  bool (__fastcall *prev)(place_t *__hidden this, void *ud);
  bool (__fastcall *next)(place_t *__hidden this, void *ud);
  bool (__fastcall *beginning)(const place_t *__hidden this, void *ud);
  bool (__fastcall *ending)(const place_t *__hidden this, void *ud);
  int (__fastcall *generate)(const place_t *__hidden this, qstrvec_t *out, int *out_deflnnum, color_t *out_pfx_color, bgcolor_t *out_bgcolor, void *ud, int maxsize);
  void (__fastcall *serialize)(const place_t *__hidden this, bytevec_t *out);
  bool (__fastcall *deserialize)(place_t *__hidden this, const uchar **pptr, const uchar *end);
  int (__fastcall *id)(const place_t *__hidden this);
  const char *(__fastcall *name)(const place_t *__hidden this);
  ea_t (__fastcall *toea)(const place_t *__hidden this);
  bool (__fastcall *rebase)(place_t *__hidden this, const segm_move_infos_t *);
  place_t *(__fastcall *enter)(const place_t *__hidden this, uint32 *);
  void (__fastcall *leave)(const place_t *__hidden this, uint32);
  int (__fastcall *compare2)(const place_t *__hidden this, const place_t *t2, void *);
};
*/

/* 1592 */
typedef ssize_t __cdecl _32B6B66086532CD0BDAD8C0DB37B9942(syntax_highlight_style *, const char *);

/* 1593 */
struct __cppobj qvector_long_long___P__syntax_highlight_style__P__const_char__P__
{
  __int64 (__cdecl **array)(syntax_highlight_style *, const char *);
  size_t n;
  size_t alloc;
};

/* 1594 */
typedef __int64 (__cdecl **qvector_long_long___P__syntax_highlight_style__P__const_char__P____iterator)(syntax_highlight_style *, const char *);

/* 1595 */
typedef __int64 (__cdecl **qvector_long_long___P__syntax_highlight_style__P__const_char__P____const_iterator)(syntax_highlight_style *, const char *);

/* 1596 */
typedef qvector_long_long___P__syntax_highlight_style__P__const_char__P__ external_colorizers_t;

/* 1597 */
typedef bool __cdecl _69915A3241C829CBB6DA5B9EFF11997D(syntax_highlight_style *, const qstring *);

/* 1598 */
struct __cppobj qvector_bool___P__syntax_highlight_style__P__const__qstring_char___R__
{
  bool (__cdecl **array)(syntax_highlight_style *, const _qstring_char_ *);
  size_t n;
  size_t alloc;
};

/* 1599 */
typedef bool (__cdecl **qvector_bool___P__syntax_highlight_style__P__const__qstring_char___R____iterator)(syntax_highlight_style *, const _qstring_char_ *);

/* 1600 */
typedef bool (__cdecl **qvector_bool___P__syntax_highlight_style__P__const__qstring_char___R____const_iterator)(syntax_highlight_style *, const _qstring_char_ *);

/* 1601 */
typedef qvector_bool___P__syntax_highlight_style__P__const__qstring_char___R__ external_ident_colorizers_t;

/* 1604 */
struct __cppobj qvector_ida_syntax_highlighter_t__keywords_style_t_
{
  ida_syntax_highlighter_t__keywords_style_t *array;
  size_t n;
  size_t alloc;
};

/* 1612 */
typedef qvector_ida_syntax_highlighter_t__keywords_style_t_ ida_syntax_highlighter_t__keywords_t;

/* 1613 */
struct __cppobj qvector_ida_syntax_highlighter_t__multicmt_t_
{
  ida_syntax_highlighter_t__multicmt_t *array;
  size_t n;
  size_t alloc;
};

/* 1617 */
typedef qvector_ida_syntax_highlighter_t__multicmt_t_ ida_syntax_highlighter_t__multicmtvec_t;

/* 1602 */
struct __cppobj ida_syntax_highlighter_t : syntax_highlighter_t
{
  qstrvec_t keyword_memory;
  ida_syntax_highlighter_t__keywords_t keywords;
  qstring open_cmt;
  ida_syntax_highlighter_t__multicmtvec_t multicmts;
  char literal_closer;
  syntax_highlight_style text_color;
  syntax_highlight_style comment_color;
  syntax_highlight_style string_color;
  syntax_highlight_style preprocessor_color;
  external_colorizers_t external_colorizers;
  external_ident_colorizers_t external_ident_colorizers;
  const char *input;
  const char *pending;
  syntax_highlight_style style;
  char open_strconst;
  char close_strconst;
  char open_chrconst;
  char close_chrconst;
  char escape_char;
  char preprocessor_char;
};

/* 1603 */
/*struct ida_syntax_highlighter_t_vtbl
{
  void (__fastcall *_del_ida_syntax_highlighter_t)(ida_syntax_highlighter_t *__hidden this);
};
*/

/* 1606 */
struct __cppobj qvector_ida_syntax_highlighter_t__plain_char_ptr_t_
{
  ida_syntax_highlighter_t__plain_char_ptr_t *array;
  size_t n;
  size_t alloc;
};

/* 1605 */
struct ida_syntax_highlighter_t__keywords_style_t
{
  qvector_ida_syntax_highlighter_t__plain_char_ptr_t_ keywords;
  syntax_highlight_style style;
};

/* 1607 */
struct __cppobj ida_syntax_highlighter_t__plain_char_ptr_t
{
  const char *ptr;
};

/* 1608 */
typedef ida_syntax_highlighter_t__plain_char_ptr_t *qvector_ida_syntax_highlighter_t__plain_char_ptr_t___iterator;

/* 1609 */
typedef ida_syntax_highlighter_t__plain_char_ptr_t *qvector_ida_syntax_highlighter_t__plain_char_ptr_t___const_iterator;

/* 1610 */
typedef ida_syntax_highlighter_t__keywords_style_t *qvector_ida_syntax_highlighter_t__keywords_style_t___iterator;

/* 1611 */
typedef ida_syntax_highlighter_t__keywords_style_t *qvector_ida_syntax_highlighter_t__keywords_style_t___const_iterator;

/* 1614 */
struct __cppobj ida_syntax_highlighter_t__multicmt_t
{
  qstring open_multicmt;
  qstring close_multicmt;
};

/* 1615 */
typedef ida_syntax_highlighter_t__multicmt_t *qvector_ida_syntax_highlighter_t__multicmt_t___iterator;

/* 1616 */
typedef ida_syntax_highlighter_t__multicmt_t *qvector_ida_syntax_highlighter_t__multicmt_t___const_iterator;

/* 1618 */
enum ucdr_kind_t : unsigned __int32
{
  UCDR_STRLIT = 0x1,
  UCDR_NAME = 0x2,
  UCDR_MANGLED = 0x4,
  UCDR_TYPE = 0x8,
};

/* 1619 */
enum nametype_t : unsigned __int32
{
  VNT_IDENT = 0x6,
  VNT_TYPE = 0x8,
  VNT_UDTMEM = 0x2,
  VNT_STRLIT = 0x1,
  VNT_VISIBLE = 0x2,
};

/* 1620 */
struct __cppobj getname_info_t
{
  size_t cb;
  int32 inhibitor;
  int32 demform;
  int32 demcode;
};

/* 1621 */
enum debug_name_how_t : unsigned __int32
{
  DEBNAME_EXACT = 0x0,
  DEBNAME_LOWER = 0x1,
  DEBNAME_UPPER = 0x2,
  DEBNAME_NICE = 0x3,
};

/* 1622 */
struct __cppobj ea_name_t
{
  ea_t ea;
  qstring name;
};

/* 1623 */
struct ida_movable_type_ea_name_t_
{
};

/* 1624 */
struct __cppobj qvector_ea_name_t_
{
  ea_name_t *array;
  size_t n;
  size_t alloc;
};

/* 1625 */
typedef ea_name_t *qvector_ea_name_t___iterator;

/* 1626 */
typedef ea_name_t *qvector_ea_name_t___const_iterator;

/* 1627 */
typedef qvector_ea_name_t_ ea_name_vec_t;

/* 1628 */
enum demreq_type_t : unsigned __int32
{
  DQT_NPURGED_8 = 0xFFFFFFF8,
  DQT_NPURGED_4 = 0xFFFFFFFC,
  DQT_NPURGED_2 = 0xFFFFFFFE,
  DQT_COMPILER = 0x0,
  DQT_NAME_TYPE = 0x1,
  DQT_FULL = 0x2,
};

/* 1629 */
typedef int ignore_name_def_t;

/* 1630 */
typedef uchar p_string;

/* 1632 */
struct til_bucket_t;

/* 1633 */
struct til_stream_t;

/* 1631 */
struct __cppobj til_t
{
  char *name;
  char *desc;
  int nbases;
  til_t **base;
  uint32 flags;
  compiler_info_t cc;
  til_bucket_t *syms;
  til_bucket_t *types;
  til_bucket_t *macros;
  int nrefs;
  int nstreams;
  til_stream_t **streams;
};

/* 1634 */
typedef uchar bte_t;

/* 1635 */
struct __cppobj type_attr_t
{
  qstring key;
  bytevec_t value;
};

/* 1636 */
struct ida_movable_type_type_attr_t_
{
};

/* 1637 */
struct __cppobj qvector_type_attr_t_
{
  type_attr_t *array;
  size_t n;
  size_t alloc;
};

/* 1638 */
typedef type_attr_t *qvector_type_attr_t___iterator;

/* 1639 */
typedef type_attr_t *qvector_type_attr_t___const_iterator;

/* 1640 */
typedef qvector_type_attr_t_ type_attrs_t;

/* 1641 */
typedef int type_sign_t;

/* 1642 */
struct custloc_desc_t
{
  size_t cbsize;
  const char *name;
  void (__cdecl *copy)(argloc_t *, const argloc_t *);
  void (__cdecl *cleanup)(argloc_t *);
  bool (__cdecl *verify)(const argloc_t *, int, const rangeset_t *, bool);
  int (__cdecl *compare)(const argloc_t *, const argloc_t *);
  size_t (__cdecl *print)(char *, size_t, const argloc_t *, asize_t, int);
  bool (__cdecl *deref_field)(argloc_t *, tinfo_t *, const argloc_t *, const tinfo_t *, asize_t, const qstring *);
  bool (__cdecl *deref_array)(argloc_t *, tinfo_t *, const argloc_t *, const tinfo_t *, asize_t, asize_t);
  bool (__cdecl *deref_ptr)(argloc_t *, tinfo_t *, const argloc_t *);
  bool (__cdecl *read_value)(value_u *, const argloc_t *, int, const tinfo_t *);
  bool (__cdecl *write_value)(const argloc_t *, const idc_value_t *, const value_u *, int, qstring *);
  asize_t (__cdecl *calc_string_length)(const argloc_t *, const tinfo_t *);
  bool (__cdecl *get_string)(qstring *, tinfo_t *, const argloc_t *, const tinfo_t *, size_t);
  asize_t (__cdecl *guess_array_size)(const argloc_t *, const tinfo_t *);
  bool (__cdecl *get_tinfo)(tinfo_t *, const argloc_t *);
  int (__cdecl *calc_number_of_children)(const argloc_t *, const tinfo_t *);
  size_t (__cdecl *print_ptr_value)(char *, size_t, bool *, const argloc_t *, const tinfo_t *);
};

/* 1643 */
struct ida_movable_type_argloc_t_
{
};

/* 1644 */
struct __cppobj qvector_argloc_t_
{
  argloc_t *array;
  size_t n;
  size_t alloc;
};

/* 1645 */
typedef argloc_t *qvector_argloc_t___iterator;

/* 1646 */
typedef argloc_t *qvector_argloc_t___const_iterator;

/* 1647 */
typedef qvector_argloc_t_ arglocs_t;

/* 1648 */
struct ida_movable_type_argpart_t_
{
};

/* 1649 */
struct ida_movable_type_scattered_aloc_t_
{
};

/* 1650 */
struct __cppobj aloc_visitor_t
{
  aloc_visitor_t_vtbl *__vftable /*VFT*/;
};

/* 1651 */
/*struct aloc_visitor_t_vtbl
{
  int (__fastcall *visit_location)(aloc_visitor_t *__hidden this, argloc_t *v, int off, int size);
  void (__fastcall *_del_aloc_visitor_t)(aloc_visitor_t *__hidden this);
};
*/

/* 1652 */
struct __cppobj const_aloc_visitor_t
{
  const_aloc_visitor_t_vtbl *__vftable /*VFT*/;
};

/* 1653 */
/*struct const_aloc_visitor_t_vtbl
{
  int (__fastcall *visit_location)(const_aloc_visitor_t *__hidden this, const argloc_t *v, int off, int size);
  void (__fastcall *_del_const_aloc_visitor_t)(const_aloc_visitor_t *__hidden this);
};
*/

/* 1654 */
typedef qvector_unsigned_char_ compvec_t;

/* 1655 */
enum abs_t : unsigned __int32
{
  abs_unk = 0x0,
  abs_no = 0x1,
  abs_yes = 0x2,
};

/* 1656 */
enum sclass_t : unsigned __int32
{
  sc_unk = 0x0,
  sc_type = 0x1,
  sc_ext = 0x2,
  sc_stat = 0x3,
  sc_reg = 0x4,
  sc_auto = 0x5,
  sc_friend = 0x6,
  sc_virt = 0x7,
};

/* 1657 */
typedef int __cdecl _B52219EC9FEEEB7613BA56E0CE8F1794(const char *, const tinfo_t *, const char *, const uint64 *, void *);

/* 1658 */
typedef int printer_t(const char *, ...);

/* 1659 */
enum tinfo_code_t : unsigned __int32
{
  TERR_OK = 0x0,
  TERR_SAVE = 0xFFFFFFFF,
  TERR_SERIALIZE = 0xFFFFFFFE,
  TERR_WRONGNAME = 0xFFFFFFFD,
  TERR_BADSYNC = 0xFFFFFFFC,
};

/* 1660 */
struct __cppobj ptr_type_data_t
{
  tinfo_t obj_type;
  tinfo_t closure;
  uchar based_ptr_size;
  uchar taptr_bits;
  tinfo_t parent;
  int32 delta;
};

/* 1698 */
struct __cppobj qvector_udt_member_t_
{
  udt_member_t *array;
  size_t n;
  size_t alloc;
};

/* 1666 */
struct __cppobj udtmembervec_t : qvector_udt_member_t_
{
};

/* 1661 */
struct __cppobj udt_type_data_t : udtmembervec_t
{
  size_t total_size;
  size_t unpadded_size;
  uint32 effalign;
  uint32 taudt_bits;
  uchar sda;
  uchar pack;
  bool is_union;
};

/* 1690 */
struct __cppobj qvector_enum_member_t_
{
  enum_member_t *array;
  size_t n;
  size_t alloc;
};

/* 1693 */
typedef qvector_enum_member_t_ enum_member_vec_t;

/* 1662 */
struct __cppobj enum_type_data_t : enum_member_vec_t
{
  intvec_t group_sizes;
  uint32 taenum_bits;
  bte_t bte;
};

/* 1663 */
struct __cppobj array_type_data_t
{
  tinfo_t elem_type;
  uint32 base;
  uint32 nelems;
};

/* 1695 */
union typedef_type_data_t___5FA288E9F36186DAB0C04B104ACC3745
{
  const char *name;
  uint32 ordinal;
};

/* 1664 */
struct __cppobj typedef_type_data_t
{
  const til_t *til;
  union
  {
    const char *name;
    uint32 ordinal;
  };
  bool is_ordref;
  bool resolve;
};

/* 1665 */
struct __cppobj bitfield_type_data_t
{
  uchar nbytes;
  uchar width;
  bool is_unsigned;
};

/* 1667 */
enum stock_type_id_t : unsigned __int32
{
  STI_PCHAR = 0x0,
  STI_PUCHAR = 0x1,
  STI_PCCHAR = 0x2,
  STI_PCUCHAR = 0x3,
  STI_PBYTE = 0x4,
  STI_PINT = 0x5,
  STI_PUINT = 0x6,
  STI_PVOID = 0x7,
  STI_PPVOID = 0x8,
  STI_PCVOID = 0x9,
  STI_ACHAR = 0xA,
  STI_AUCHAR = 0xB,
  STI_ACCHAR = 0xC,
  STI_ACUCHAR = 0xD,
  STI_FPURGING = 0xE,
  STI_FDELOP = 0xF,
  STI_MSGSEND = 0x10,
  STI_AEABI_LCMP = 0x11,
  STI_AEABI_ULCMP = 0x12,
  STI_DONT_USE = 0x13,
  STI_SIZE_T = 0x14,
  STI_SSIZE_T = 0x15,
  STI_AEABI_MEMCPY = 0x16,
  STI_AEABI_MEMSET = 0x17,
  STI_AEABI_MEMCLR = 0x18,
  STI_RTC_CHECK_2 = 0x19,
  STI_RTC_CHECK_4 = 0x1A,
  STI_RTC_CHECK_8 = 0x1B,
  STI_COMPLEX64 = 0x1C,
  STI_COMPLEX128 = 0x1D,
  STI_LAST = 0x1E,
};

/* 1668 */
enum gtd_udt_t : unsigned __int32
{
  GTD_CALC_LAYOUT = 0x0,
  GTD_NO_LAYOUT = 0x80,
  GTD_DEL_BITFLDS = 0x40,
};

/* 1669 */
enum gtd_func_t : unsigned __int32
{
  GTD_CALC_ARGLOCS = 0x0,
  GTD_NO_ARGLOCS = 0x80,
};

/* 1670 */
enum gts_code_t : unsigned __int32
{
  GTS_NESTED = 0x1,
  GTS_BASECLASS = 0x2,
};

/* 1671 */
struct __cppobj udt_member_t
{
  uint64 offset;
  uint64 size;
  qstring name;
  qstring cmt;
  tinfo_t type;
  int effalign;
  uint32 tafld_bits;
  uchar fda;
};

/* 1672 */
struct __cppobj tinfo_visitor_t
{
  tinfo_visitor_t_vtbl *__vftable /*VFT*/;
  int state;
  int level;
};

/* 1673 */
struct __cppobj type_mods_t
{
  tinfo_t type;
  qstring name;
  qstring cmt;
  int flags;
};

/* 1674 */
struct ida_movable_type_tinfo_t_
{
};

/* 1675 */
struct __cppobj qvector_tinfo_t_
{
  tinfo_t *array;
  size_t n;
  size_t alloc;
};

/* 1676 */
typedef tinfo_t *qvector_tinfo_t___iterator;

/* 1677 */
typedef tinfo_t *qvector_tinfo_t___const_iterator;

/* 1678 */
typedef qvector_tinfo_t_ tinfovec_t;

/* 1679 */
struct ida_movable_type_simd_info_t_
{
};

/* 1680 */
struct __cppobj qvector_simd_info_t_
{
  simd_info_t *array;
  size_t n;
  size_t alloc;
};

/* 1681 */
typedef simd_info_t *qvector_simd_info_t___iterator;

/* 1682 */
typedef simd_info_t *qvector_simd_info_t___const_iterator;

/* 1683 */
typedef qvector_simd_info_t_ simd_info_vec_t;

/* 1684 */
struct ida_movable_type_ptr_type_data_t_
{
};

/* 1685 */
struct ida_movable_type_array_type_data_t_
{
};

/* 1686 */
struct ida_movable_type_funcarg_t_
{
};

/* 1687 */
enum format_functype_t : unsigned __int32
{
  FMTFUNC_PRINTF = 0x0,
  FMTFUNC_SCANF = 0x1,
  FMTFUNC_STRFTIME = 0x2,
  FMTFUNC_STRFMON = 0x3,
};

/* 1688 */
struct __cppobj enum_member_t
{
  qstring name;
  qstring cmt;
  uint64 value;
};

/* 1689 */
struct ida_movable_type_enum_member_t_
{
};

/* 1691 */
typedef enum_member_t *qvector_enum_member_t___iterator;

/* 1692 */
typedef enum_member_t *qvector_enum_member_t___const_iterator;

/* 1694 */
struct ida_movable_type_enum_type_data_t_
{
};

/* 1696 */
struct ida_movable_type_typedef_type_data_t_
{
};

/* 1697 */
struct ida_movable_type_udt_member_t_
{
};

/* 1699 */
typedef udt_member_t *qvector_udt_member_t___iterator;

/* 1700 */
typedef udt_member_t *qvector_udt_member_t___const_iterator;

/* 1701 */
struct ida_movable_type_udt_type_data_t_
{
};

/* 1702 */
struct ida_movable_type_bitfield_type_data_t_
{
};

/* 1703 */
/*struct tinfo_visitor_t_vtbl
{
  void (__fastcall *_del_tinfo_visitor_t)(tinfo_visitor_t *__hidden this);
  int (__fastcall *visit_type)(tinfo_visitor_t *__hidden this, type_mods_t *out, const tinfo_t *tif, const char *name, const char *cmt);
};
*/

/* 1704 */
struct ida_movable_type_regobj_t_
{
};

/* 1705 */
struct __cppobj argtinfo_helper_t
{
  argtinfo_helper_t_vtbl *__vftable /*VFT*/;
  size_t reserved;
};

/* 1706 */
/*struct argtinfo_helper_t_vtbl
{
  void (__fastcall *_del_argtinfo_helper_t)(argtinfo_helper_t *__hidden this);
  bool (__fastcall *set_op_tinfo)(argtinfo_helper_t *__hidden this, const insn_t *insn, const op_t *x, const tinfo_t *tif, const char *name);
  bool (__fastcall *is_stkarg_load)(argtinfo_helper_t *__hidden this, const insn_t *insn, int *src, int *dst);
  bool (__fastcall *has_delay_slot)(argtinfo_helper_t *__hidden this, ea_t);
};
*/

/* 1707 */
struct __cppobj lowertype_helper_t
{
  lowertype_helper_t_vtbl *__vftable /*VFT*/;
};

/* 1708 */
/*struct lowertype_helper_t_vtbl
{
  bool (__fastcall *func_has_stkframe_hole)(lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *candidate_data);
  int (__fastcall *get_func_purged_bytes)(lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *candidate_data);
};
*/

/* 1709 */
struct __cppobj ida_lowertype_helper_t : lowertype_helper_t
{
  const tinfo_t *tif;
  ea_t ea;
  int purged_bytes;
};

/* 1710 */
/*struct ida_lowertype_helper_t_vtbl
{
  bool (__fastcall *func_has_stkframe_hole)(ida_lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *candidate_data);
  int (__fastcall *get_func_purged_bytes)(ida_lowertype_helper_t *__hidden this, const tinfo_t *candidate, const func_type_data_t *);
};
*/

/* 1711 */
enum update_type_t : unsigned __int32
{
  UTP_ENUM = 0x0,
  UTP_STRUCT = 0x1,
};

/* 1712 */
struct __cppobj format_data_info_t
{
  int ptvf;
  int radix;
  int max_length;
  int arrbase;
  int arrnelems;
  int margin;
  int indent;
};

/* 1713 */
struct __cppobj valinfo_t
{
  argloc_t loc;
  qstring label;
  tinfo_t type;
};

/* 1714 */
struct ida_movable_type_valinfo_t_
{
};

/* 1715 */
struct __cppobj valstr_t
{
  qstring oneline;
  size_t length;
  valstrs_t *members;
  valinfo_t *info;
  int props;
};

/* 1716 */
struct valstr_t__flatten_args_t
{
  const valstr_t *may_not_collapse;
  int ptvf;
  int max_length;
  int margin;
  int indent;
};

/* 1718 */
struct __cppobj qvector_valstr_t_
{
  valstr_t *array;
  size_t n;
  size_t alloc;
};

/* 1721 */
typedef qvector_valstr_t_ valstrvec_t;

/* 1717 */
struct __cppobj valstrs_t : valstrvec_t
{
};

/* 1719 */
typedef valstr_t *qvector_valstr_t___iterator;

/* 1720 */
typedef valstr_t *qvector_valstr_t___const_iterator;

/* 1722 */
struct ida_movable_type_valstr_t_
{
};

/* 1723 */
struct __cppobj text_sink_t
{
  text_sink_t_vtbl *__vftable /*VFT*/;
};

/* 1724 */
/*struct text_sink_t_vtbl
{
  int (__fastcall *print)(text_sink_t *__hidden this, const char *str);
};
*/

/* 1725 */
struct __cppobj qvector_unsigned_int_
{
  unsigned int *array;
  size_t n;
  size_t alloc;
};

/* 1726 */
typedef unsigned int *qvector_unsigned_int___iterator;

/* 1727 */
typedef unsigned int *qvector_unsigned_int___const_iterator;

/* 1728 */
typedef qvector_unsigned_int_ ordvec_t;

/* 1729 */
struct __cppobj til_symbol_t
{
  const char *name;
  const til_t *til;
};

/* 1730 */
struct ida_movable_type_til_symbol_t_
{
};

/* 1731 */
struct __cppobj predicate_t
{
  predicate_t_vtbl *__vftable /*VFT*/;
};

/* 1732 */
/*struct predicate_t_vtbl
{
  bool (__fastcall *should_display)(predicate_t *__hidden this, const til_t *til, const char *name, const type_t *type, const p_list *fields);
  void (__fastcall *_del_predicate_t)(predicate_t *__hidden this);
};
*/

/* 1733 */
typedef int __cdecl _5180D2431AAA58F02F49DC28AEB2105D(uint32, const tinfo_t *, void *);

/* 1734 */
typedef bool __cdecl _A733A7B66D85F1BCB3C320081B86070A(const insn_t *, const op_t *, const tinfo_t *, const char *);

/* 1735 */
typedef bool __cdecl _FAE2C21797B3ADDF1CCA604739912F24(const insn_t *, int *, int *);

/* 1736 */
enum _CE7E32CC3E1379FDB2C7D74087D653D3 : unsigned __int32
{
  NN_null = 0x0,
  NN_aaa = 0x1,
  NN_aad = 0x2,
  NN_aam = 0x3,
  NN_aas = 0x4,
  NN_adc = 0x5,
  NN_add = 0x6,
  NN_and = 0x7,
  NN_arpl = 0x8,
  NN_bound = 0x9,
  NN_bsf = 0xA,
  NN_bsr = 0xB,
  NN_bt = 0xC,
  NN_btc = 0xD,
  NN_btr = 0xE,
  NN_bts = 0xF,
  NN_call = 0x10,
  NN_callfi = 0x11,
  NN_callni = 0x12,
  NN_cbw = 0x13,
  NN_cwde = 0x14,
  NN_cdqe = 0x15,
  NN_clc = 0x16,
  NN_cld = 0x17,
  NN_cli = 0x18,
  NN_clts = 0x19,
  NN_cmc = 0x1A,
  NN_cmp = 0x1B,
  NN_cmps = 0x1C,
  NN_cwd = 0x1D,
  NN_cdq = 0x1E,
  NN_cqo = 0x1F,
  NN_daa = 0x20,
  NN_das = 0x21,
  NN_dec = 0x22,
  NN_div = 0x23,
  NN_enterw = 0x24,
  NN_enter = 0x25,
  NN_enterd = 0x26,
  NN_enterq = 0x27,
  NN_hlt = 0x28,
  NN_idiv = 0x29,
  NN_imul = 0x2A,
  NN_in = 0x2B,
  NN_inc = 0x2C,
  NN_ins = 0x2D,
  NN_int = 0x2E,
  NN_into = 0x2F,
  NN_int3 = 0x30,
  NN_iretw = 0x31,
  NN_iret = 0x32,
  NN_iretd = 0x33,
  NN_iretq = 0x34,
  NN_ja = 0x35,
  NN_jae = 0x36,
  NN_jb = 0x37,
  NN_jbe = 0x38,
  NN_jc = 0x39,
  NN_jcxz = 0x3A,
  NN_jecxz = 0x3B,
  NN_jrcxz = 0x3C,
  NN_je = 0x3D,
  NN_jg = 0x3E,
  NN_jge = 0x3F,
  NN_jl = 0x40,
  NN_jle = 0x41,
  NN_jna = 0x42,
  NN_jnae = 0x43,
  NN_jnb = 0x44,
  NN_jnbe = 0x45,
  NN_jnc = 0x46,
  NN_jne = 0x47,
  NN_jng = 0x48,
  NN_jnge = 0x49,
  NN_jnl = 0x4A,
  NN_jnle = 0x4B,
  NN_jno = 0x4C,
  NN_jnp = 0x4D,
  NN_jns = 0x4E,
  NN_jnz = 0x4F,
  NN_jo = 0x50,
  NN_jp = 0x51,
  NN_jpe = 0x52,
  NN_jpo = 0x53,
  NN_js = 0x54,
  NN_jz = 0x55,
  NN_jmp = 0x56,
  NN_jmpfi = 0x57,
  NN_jmpni = 0x58,
  NN_jmpshort = 0x59,
  NN_lahf = 0x5A,
  NN_lar = 0x5B,
  NN_lea = 0x5C,
  NN_leavew = 0x5D,
  NN_leave = 0x5E,
  NN_leaved = 0x5F,
  NN_leaveq = 0x60,
  NN_lgdt = 0x61,
  NN_lidt = 0x62,
  NN_lgs = 0x63,
  NN_lss = 0x64,
  NN_lds = 0x65,
  NN_les = 0x66,
  NN_lfs = 0x67,
  NN_lldt = 0x68,
  NN_lmsw = 0x69,
  NN_lock = 0x6A,
  NN_lods = 0x6B,
  NN_loopw = 0x6C,
  NN_loop = 0x6D,
  NN_loopd = 0x6E,
  NN_loopq = 0x6F,
  NN_loopwe = 0x70,
  NN_loope = 0x71,
  NN_loopde = 0x72,
  NN_loopqe = 0x73,
  NN_loopwne = 0x74,
  NN_loopne = 0x75,
  NN_loopdne = 0x76,
  NN_loopqne = 0x77,
  NN_lsl = 0x78,
  NN_ltr = 0x79,
  NN_mov = 0x7A,
  NN_movsp = 0x7B,
  NN_movs = 0x7C,
  NN_movsx = 0x7D,
  NN_movzx = 0x7E,
  NN_mul = 0x7F,
  NN_neg = 0x80,
  NN_nop = 0x81,
  NN_not = 0x82,
  NN_or = 0x83,
  NN_out = 0x84,
  NN_outs = 0x85,
  NN_pop = 0x86,
  NN_popaw = 0x87,
  NN_popa = 0x88,
  NN_popad = 0x89,
  NN_popaq = 0x8A,
  NN_popfw = 0x8B,
  NN_popf = 0x8C,
  NN_popfd = 0x8D,
  NN_popfq = 0x8E,
  NN_push = 0x8F,
  NN_pushaw = 0x90,
  NN_pusha = 0x91,
  NN_pushad = 0x92,
  NN_pushaq = 0x93,
  NN_pushfw = 0x94,
  NN_pushf = 0x95,
  NN_pushfd = 0x96,
  NN_pushfq = 0x97,
  NN_rcl = 0x98,
  NN_rcr = 0x99,
  NN_rol = 0x9A,
  NN_ror = 0x9B,
  NN_rep = 0x9C,
  NN_repe = 0x9D,
  NN_repne = 0x9E,
  NN_retn = 0x9F,
  NN_retf = 0xA0,
  NN_sahf = 0xA1,
  NN_sal = 0xA2,
  NN_sar = 0xA3,
  NN_shl = 0xA4,
  NN_shr = 0xA5,
  NN_sbb = 0xA6,
  NN_scas = 0xA7,
  NN_seta = 0xA8,
  NN_setae = 0xA9,
  NN_setb = 0xAA,
  NN_setbe = 0xAB,
  NN_setc = 0xAC,
  NN_sete = 0xAD,
  NN_setg = 0xAE,
  NN_setge = 0xAF,
  NN_setl = 0xB0,
  NN_setle = 0xB1,
  NN_setna = 0xB2,
  NN_setnae = 0xB3,
  NN_setnb = 0xB4,
  NN_setnbe = 0xB5,
  NN_setnc = 0xB6,
  NN_setne = 0xB7,
  NN_setng = 0xB8,
  NN_setnge = 0xB9,
  NN_setnl = 0xBA,
  NN_setnle = 0xBB,
  NN_setno = 0xBC,
  NN_setnp = 0xBD,
  NN_setns = 0xBE,
  NN_setnz = 0xBF,
  NN_seto = 0xC0,
  NN_setp = 0xC1,
  NN_setpe = 0xC2,
  NN_setpo = 0xC3,
  NN_sets = 0xC4,
  NN_setz = 0xC5,
  NN_sgdt = 0xC6,
  NN_sidt = 0xC7,
  NN_shld = 0xC8,
  NN_shrd = 0xC9,
  NN_sldt = 0xCA,
  NN_smsw = 0xCB,
  NN_stc = 0xCC,
  NN_std = 0xCD,
  NN_sti = 0xCE,
  NN_stos = 0xCF,
  NN_str = 0xD0,
  NN_sub = 0xD1,
  NN_test = 0xD2,
  NN_verr = 0xD3,
  NN_verw = 0xD4,
  NN_wait = 0xD5,
  NN_xchg = 0xD6,
  NN_xlat = 0xD7,
  NN_xor = 0xD8,
  NN_cmpxchg = 0xD9,
  NN_bswap = 0xDA,
  NN_xadd = 0xDB,
  NN_invd = 0xDC,
  NN_wbinvd = 0xDD,
  NN_invlpg = 0xDE,
  NN_rdmsr = 0xDF,
  NN_wrmsr = 0xE0,
  NN_cpuid = 0xE1,
  NN_cmpxchg8b = 0xE2,
  NN_rdtsc = 0xE3,
  NN_rsm = 0xE4,
  NN_cmova = 0xE5,
  NN_cmovb = 0xE6,
  NN_cmovbe = 0xE7,
  NN_cmovg = 0xE8,
  NN_cmovge = 0xE9,
  NN_cmovl = 0xEA,
  NN_cmovle = 0xEB,
  NN_cmovnb = 0xEC,
  NN_cmovno = 0xED,
  NN_cmovnp = 0xEE,
  NN_cmovns = 0xEF,
  NN_cmovnz = 0xF0,
  NN_cmovo = 0xF1,
  NN_cmovp = 0xF2,
  NN_cmovs = 0xF3,
  NN_cmovz = 0xF4,
  NN_fcmovb = 0xF5,
  NN_fcmove = 0xF6,
  NN_fcmovbe = 0xF7,
  NN_fcmovu = 0xF8,
  NN_fcmovnb = 0xF9,
  NN_fcmovne = 0xFA,
  NN_fcmovnbe = 0xFB,
  NN_fcmovnu = 0xFC,
  NN_fcomi = 0xFD,
  NN_fucomi = 0xFE,
  NN_fcomip = 0xFF,
  NN_fucomip = 0x100,
  NN_rdpmc = 0x101,
  NN_fld = 0x102,
  NN_fst = 0x103,
  NN_fstp = 0x104,
  NN_fxch = 0x105,
  NN_fild = 0x106,
  NN_fist = 0x107,
  NN_fistp = 0x108,
  NN_fbld = 0x109,
  NN_fbstp = 0x10A,
  NN_fadd = 0x10B,
  NN_faddp = 0x10C,
  NN_fiadd = 0x10D,
  NN_fsub = 0x10E,
  NN_fsubp = 0x10F,
  NN_fisub = 0x110,
  NN_fsubr = 0x111,
  NN_fsubrp = 0x112,
  NN_fisubr = 0x113,
  NN_fmul = 0x114,
  NN_fmulp = 0x115,
  NN_fimul = 0x116,
  NN_fdiv = 0x117,
  NN_fdivp = 0x118,
  NN_fidiv = 0x119,
  NN_fdivr = 0x11A,
  NN_fdivrp = 0x11B,
  NN_fidivr = 0x11C,
  NN_fsqrt = 0x11D,
  NN_fscale = 0x11E,
  NN_fprem = 0x11F,
  NN_frndint = 0x120,
  NN_fxtract = 0x121,
  NN_fabs = 0x122,
  NN_fchs = 0x123,
  NN_fcom = 0x124,
  NN_fcomp = 0x125,
  NN_fcompp = 0x126,
  NN_ficom = 0x127,
  NN_ficomp = 0x128,
  NN_ftst = 0x129,
  NN_fxam = 0x12A,
  NN_fptan = 0x12B,
  NN_fpatan = 0x12C,
  NN_f2xm1 = 0x12D,
  NN_fyl2x = 0x12E,
  NN_fyl2xp1 = 0x12F,
  NN_fldz = 0x130,
  NN_fld1 = 0x131,
  NN_fldpi = 0x132,
  NN_fldl2t = 0x133,
  NN_fldl2e = 0x134,
  NN_fldlg2 = 0x135,
  NN_fldln2 = 0x136,
  NN_finit = 0x137,
  NN_fninit = 0x138,
  NN_fsetpm = 0x139,
  NN_fldcw = 0x13A,
  NN_fstcw = 0x13B,
  NN_fnstcw = 0x13C,
  NN_fstsw = 0x13D,
  NN_fnstsw = 0x13E,
  NN_fclex = 0x13F,
  NN_fnclex = 0x140,
  NN_fstenv = 0x141,
  NN_fnstenv = 0x142,
  NN_fldenv = 0x143,
  NN_fsave = 0x144,
  NN_fnsave = 0x145,
  NN_frstor = 0x146,
  NN_fincstp = 0x147,
  NN_fdecstp = 0x148,
  NN_ffree = 0x149,
  NN_fnop = 0x14A,
  NN_feni = 0x14B,
  NN_fneni = 0x14C,
  NN_fdisi = 0x14D,
  NN_fndisi = 0x14E,
  NN_fprem1 = 0x14F,
  NN_fsincos = 0x150,
  NN_fsin = 0x151,
  NN_fcos = 0x152,
  NN_fucom = 0x153,
  NN_fucomp = 0x154,
  NN_fucompp = 0x155,
  NN_setalc = 0x156,
  NN_svdc = 0x157,
  NN_rsdc = 0x158,
  NN_svldt = 0x159,
  NN_rsldt = 0x15A,
  NN_svts = 0x15B,
  NN_rsts = 0x15C,
  NN_icebp = 0x15D,
  NN_loadall = 0x15E,
  NN_emms = 0x15F,
  NN_movd = 0x160,
  NN_movq = 0x161,
  NN_packsswb = 0x162,
  NN_packssdw = 0x163,
  NN_packuswb = 0x164,
  NN_paddb = 0x165,
  NN_paddw = 0x166,
  NN_paddd = 0x167,
  NN_paddsb = 0x168,
  NN_paddsw = 0x169,
  NN_paddusb = 0x16A,
  NN_paddusw = 0x16B,
  NN_pand = 0x16C,
  NN_pandn = 0x16D,
  NN_pcmpeqb = 0x16E,
  NN_pcmpeqw = 0x16F,
  NN_pcmpeqd = 0x170,
  NN_pcmpgtb = 0x171,
  NN_pcmpgtw = 0x172,
  NN_pcmpgtd = 0x173,
  NN_pmaddwd = 0x174,
  NN_pmulhw = 0x175,
  NN_pmullw = 0x176,
  NN_por = 0x177,
  NN_psllw = 0x178,
  NN_pslld = 0x179,
  NN_psllq = 0x17A,
  NN_psraw = 0x17B,
  NN_psrad = 0x17C,
  NN_psrlw = 0x17D,
  NN_psrld = 0x17E,
  NN_psrlq = 0x17F,
  NN_psubb = 0x180,
  NN_psubw = 0x181,
  NN_psubd = 0x182,
  NN_psubsb = 0x183,
  NN_psubsw = 0x184,
  NN_psubusb = 0x185,
  NN_psubusw = 0x186,
  NN_punpckhbw = 0x187,
  NN_punpckhwd = 0x188,
  NN_punpckhdq = 0x189,
  NN_punpcklbw = 0x18A,
  NN_punpcklwd = 0x18B,
  NN_punpckldq = 0x18C,
  NN_pxor = 0x18D,
  NN_fxsave = 0x18E,
  NN_fxrstor = 0x18F,
  NN_sysenter = 0x190,
  NN_sysexit = 0x191,
  NN_pavgusb = 0x192,
  NN_pfadd = 0x193,
  NN_pfsub = 0x194,
  NN_pfsubr = 0x195,
  NN_pfacc = 0x196,
  NN_pfcmpge = 0x197,
  NN_pfcmpgt = 0x198,
  NN_pfcmpeq = 0x199,
  NN_pfmin = 0x19A,
  NN_pfmax = 0x19B,
  NN_pi2fd = 0x19C,
  NN_pf2id = 0x19D,
  NN_pfrcp = 0x19E,
  NN_pfrsqrt = 0x19F,
  NN_pfmul = 0x1A0,
  NN_pfrcpit1 = 0x1A1,
  NN_pfrsqit1 = 0x1A2,
  NN_pfrcpit2 = 0x1A3,
  NN_pmulhrw = 0x1A4,
  NN_femms = 0x1A5,
  NN_prefetch = 0x1A6,
  NN_prefetchw = 0x1A7,
  NN_addps = 0x1A8,
  NN_addss = 0x1A9,
  NN_andnps = 0x1AA,
  NN_andps = 0x1AB,
  NN_cmpps = 0x1AC,
  NN_cmpss = 0x1AD,
  NN_comiss = 0x1AE,
  NN_cvtpi2ps = 0x1AF,
  NN_cvtps2pi = 0x1B0,
  NN_cvtsi2ss = 0x1B1,
  NN_cvtss2si = 0x1B2,
  NN_cvttps2pi = 0x1B3,
  NN_cvttss2si = 0x1B4,
  NN_divps = 0x1B5,
  NN_divss = 0x1B6,
  NN_ldmxcsr = 0x1B7,
  NN_maxps = 0x1B8,
  NN_maxss = 0x1B9,
  NN_minps = 0x1BA,
  NN_minss = 0x1BB,
  NN_movaps = 0x1BC,
  NN_movhlps = 0x1BD,
  NN_movhps = 0x1BE,
  NN_movlhps = 0x1BF,
  NN_movlps = 0x1C0,
  NN_movmskps = 0x1C1,
  NN_movss = 0x1C2,
  NN_movups = 0x1C3,
  NN_mulps = 0x1C4,
  NN_mulss = 0x1C5,
  NN_orps = 0x1C6,
  NN_rcpps = 0x1C7,
  NN_rcpss = 0x1C8,
  NN_rsqrtps = 0x1C9,
  NN_rsqrtss = 0x1CA,
  NN_shufps = 0x1CB,
  NN_sqrtps = 0x1CC,
  NN_sqrtss = 0x1CD,
  NN_stmxcsr = 0x1CE,
  NN_subps = 0x1CF,
  NN_subss = 0x1D0,
  NN_ucomiss = 0x1D1,
  NN_unpckhps = 0x1D2,
  NN_unpcklps = 0x1D3,
  NN_xorps = 0x1D4,
  NN_pavgb = 0x1D5,
  NN_pavgw = 0x1D6,
  NN_pextrw = 0x1D7,
  NN_pinsrw = 0x1D8,
  NN_pmaxsw = 0x1D9,
  NN_pmaxub = 0x1DA,
  NN_pminsw = 0x1DB,
  NN_pminub = 0x1DC,
  NN_pmovmskb = 0x1DD,
  NN_pmulhuw = 0x1DE,
  NN_psadbw = 0x1DF,
  NN_pshufw = 0x1E0,
  NN_maskmovq = 0x1E1,
  NN_movntps = 0x1E2,
  NN_movntq = 0x1E3,
  NN_prefetcht0 = 0x1E4,
  NN_prefetcht1 = 0x1E5,
  NN_prefetcht2 = 0x1E6,
  NN_prefetchnta = 0x1E7,
  NN_sfence = 0x1E8,
  NN_cmpeqps = 0x1E9,
  NN_cmpltps = 0x1EA,
  NN_cmpleps = 0x1EB,
  NN_cmpunordps = 0x1EC,
  NN_cmpneqps = 0x1ED,
  NN_cmpnltps = 0x1EE,
  NN_cmpnleps = 0x1EF,
  NN_cmpordps = 0x1F0,
  NN_cmpeqss = 0x1F1,
  NN_cmpltss = 0x1F2,
  NN_cmpless = 0x1F3,
  NN_cmpunordss = 0x1F4,
  NN_cmpneqss = 0x1F5,
  NN_cmpnltss = 0x1F6,
  NN_cmpnless = 0x1F7,
  NN_cmpordss = 0x1F8,
  NN_pf2iw = 0x1F9,
  NN_pfnacc = 0x1FA,
  NN_pfpnacc = 0x1FB,
  NN_pi2fw = 0x1FC,
  NN_pswapd = 0x1FD,
  NN_fstp1 = 0x1FE,
  NN_fcom2 = 0x1FF,
  NN_fcomp3 = 0x200,
  NN_fxch4 = 0x201,
  NN_fcomp5 = 0x202,
  NN_ffreep = 0x203,
  NN_fxch7 = 0x204,
  NN_fstp8 = 0x205,
  NN_fstp9 = 0x206,
  NN_addpd = 0x207,
  NN_addsd = 0x208,
  NN_andnpd = 0x209,
  NN_andpd = 0x20A,
  NN_clflush = 0x20B,
  NN_cmppd = 0x20C,
  NN_cmpsd = 0x20D,
  NN_comisd = 0x20E,
  NN_cvtdq2pd = 0x20F,
  NN_cvtdq2ps = 0x210,
  NN_cvtpd2dq = 0x211,
  NN_cvtpd2pi = 0x212,
  NN_cvtpd2ps = 0x213,
  NN_cvtpi2pd = 0x214,
  NN_cvtps2dq = 0x215,
  NN_cvtps2pd = 0x216,
  NN_cvtsd2si = 0x217,
  NN_cvtsd2ss = 0x218,
  NN_cvtsi2sd = 0x219,
  NN_cvtss2sd = 0x21A,
  NN_cvttpd2dq = 0x21B,
  NN_cvttpd2pi = 0x21C,
  NN_cvttps2dq = 0x21D,
  NN_cvttsd2si = 0x21E,
  NN_divpd = 0x21F,
  NN_divsd = 0x220,
  NN_lfence = 0x221,
  NN_maskmovdqu = 0x222,
  NN_maxpd = 0x223,
  NN_maxsd = 0x224,
  NN_mfence = 0x225,
  NN_minpd = 0x226,
  NN_minsd = 0x227,
  NN_movapd = 0x228,
  NN_movdq2q = 0x229,
  NN_movdqa = 0x22A,
  NN_movdqu = 0x22B,
  NN_movhpd = 0x22C,
  NN_movlpd = 0x22D,
  NN_movmskpd = 0x22E,
  NN_movntdq = 0x22F,
  NN_movnti = 0x230,
  NN_movntpd = 0x231,
  NN_movq2dq = 0x232,
  NN_movsd = 0x233,
  NN_movupd = 0x234,
  NN_mulpd = 0x235,
  NN_mulsd = 0x236,
  NN_orpd = 0x237,
  NN_paddq = 0x238,
  NN_pause = 0x239,
  NN_pmuludq = 0x23A,
  NN_pshufd = 0x23B,
  NN_pshufhw = 0x23C,
  NN_pshuflw = 0x23D,
  NN_pslldq = 0x23E,
  NN_psrldq = 0x23F,
  NN_psubq = 0x240,
  NN_punpckhqdq = 0x241,
  NN_punpcklqdq = 0x242,
  NN_shufpd = 0x243,
  NN_sqrtpd = 0x244,
  NN_sqrtsd = 0x245,
  NN_subpd = 0x246,
  NN_subsd = 0x247,
  NN_ucomisd = 0x248,
  NN_unpckhpd = 0x249,
  NN_unpcklpd = 0x24A,
  NN_xorpd = 0x24B,
  NN_syscall = 0x24C,
  NN_sysret = 0x24D,
  NN_swapgs = 0x24E,
  NN_movddup = 0x24F,
  NN_movshdup = 0x250,
  NN_movsldup = 0x251,
  NN_movsxd = 0x252,
  NN_cmpxchg16b = 0x253,
  NN_addsubpd = 0x254,
  NN_addsubps = 0x255,
  NN_haddpd = 0x256,
  NN_haddps = 0x257,
  NN_hsubpd = 0x258,
  NN_hsubps = 0x259,
  NN_monitor = 0x25A,
  NN_mwait = 0x25B,
  NN_fisttp = 0x25C,
  NN_lddqu = 0x25D,
  NN_psignb = 0x25E,
  NN_psignw = 0x25F,
  NN_psignd = 0x260,
  NN_pshufb = 0x261,
  NN_pmulhrsw = 0x262,
  NN_pmaddubsw = 0x263,
  NN_phsubsw = 0x264,
  NN_phaddsw = 0x265,
  NN_phaddw = 0x266,
  NN_phaddd = 0x267,
  NN_phsubw = 0x268,
  NN_phsubd = 0x269,
  NN_palignr = 0x26A,
  NN_pabsb = 0x26B,
  NN_pabsw = 0x26C,
  NN_pabsd = 0x26D,
  NN_vmcall = 0x26E,
  NN_vmclear = 0x26F,
  NN_vmlaunch = 0x270,
  NN_vmresume = 0x271,
  NN_vmptrld = 0x272,
  NN_vmptrst = 0x273,
  NN_vmread = 0x274,
  NN_vmwrite = 0x275,
  NN_vmxoff = 0x276,
  NN_vmxon = 0x277,
  NN_ud2 = 0x278,
  NN_rdtscp = 0x279,
  NN_pfrcpv = 0x27A,
  NN_pfrsqrtv = 0x27B,
  NN_cmpeqpd = 0x27C,
  NN_cmpltpd = 0x27D,
  NN_cmplepd = 0x27E,
  NN_cmpunordpd = 0x27F,
  NN_cmpneqpd = 0x280,
  NN_cmpnltpd = 0x281,
  NN_cmpnlepd = 0x282,
  NN_cmpordpd = 0x283,
  NN_cmpeqsd = 0x284,
  NN_cmpltsd = 0x285,
  NN_cmplesd = 0x286,
  NN_cmpunordsd = 0x287,
  NN_cmpneqsd = 0x288,
  NN_cmpnltsd = 0x289,
  NN_cmpnlesd = 0x28A,
  NN_cmpordsd = 0x28B,
  NN_blendpd = 0x28C,
  NN_blendps = 0x28D,
  NN_blendvpd = 0x28E,
  NN_blendvps = 0x28F,
  NN_dppd = 0x290,
  NN_dpps = 0x291,
  NN_extractps = 0x292,
  NN_insertps = 0x293,
  NN_movntdqa = 0x294,
  NN_mpsadbw = 0x295,
  NN_packusdw = 0x296,
  NN_pblendvb = 0x297,
  NN_pblendw = 0x298,
  NN_pcmpeqq = 0x299,
  NN_pextrb = 0x29A,
  NN_pextrd = 0x29B,
  NN_pextrq = 0x29C,
  NN_phminposuw = 0x29D,
  NN_pinsrb = 0x29E,
  NN_pinsrd = 0x29F,
  NN_pinsrq = 0x2A0,
  NN_pmaxsb = 0x2A1,
  NN_pmaxsd = 0x2A2,
  NN_pmaxud = 0x2A3,
  NN_pmaxuw = 0x2A4,
  NN_pminsb = 0x2A5,
  NN_pminsd = 0x2A6,
  NN_pminud = 0x2A7,
  NN_pminuw = 0x2A8,
  NN_pmovsxbw = 0x2A9,
  NN_pmovsxbd = 0x2AA,
  NN_pmovsxbq = 0x2AB,
  NN_pmovsxwd = 0x2AC,
  NN_pmovsxwq = 0x2AD,
  NN_pmovsxdq = 0x2AE,
  NN_pmovzxbw = 0x2AF,
  NN_pmovzxbd = 0x2B0,
  NN_pmovzxbq = 0x2B1,
  NN_pmovzxwd = 0x2B2,
  NN_pmovzxwq = 0x2B3,
  NN_pmovzxdq = 0x2B4,
  NN_pmuldq = 0x2B5,
  NN_pmulld = 0x2B6,
  NN_ptest = 0x2B7,
  NN_roundpd = 0x2B8,
  NN_roundps = 0x2B9,
  NN_roundsd = 0x2BA,
  NN_roundss = 0x2BB,
  NN_crc32 = 0x2BC,
  NN_pcmpestri = 0x2BD,
  NN_pcmpestrm = 0x2BE,
  NN_pcmpistri = 0x2BF,
  NN_pcmpistrm = 0x2C0,
  NN_pcmpgtq = 0x2C1,
  NN_popcnt = 0x2C2,
  NN_extrq = 0x2C3,
  NN_insertq = 0x2C4,
  NN_movntsd = 0x2C5,
  NN_movntss = 0x2C6,
  NN_lzcnt = 0x2C7,
  NN_xgetbv = 0x2C8,
  NN_xrstor = 0x2C9,
  NN_xsave = 0x2CA,
  NN_xsetbv = 0x2CB,
  NN_getsec = 0x2CC,
  NN_clgi = 0x2CD,
  NN_invlpga = 0x2CE,
  NN_skinit = 0x2CF,
  NN_stgi = 0x2D0,
  NN_vmexit = 0x2D1,
  NN_vmload = 0x2D2,
  NN_vmmcall = 0x2D3,
  NN_vmrun = 0x2D4,
  NN_vmsave = 0x2D5,
  NN_invept = 0x2D6,
  NN_invvpid = 0x2D7,
  NN_movbe = 0x2D8,
  NN_aesenc = 0x2D9,
  NN_aesenclast = 0x2DA,
  NN_aesdec = 0x2DB,
  NN_aesdeclast = 0x2DC,
  NN_aesimc = 0x2DD,
  NN_aeskeygenassist = 0x2DE,
  NN_pclmulqdq = 0x2DF,
  NN_retnw = 0x2E0,
  NN_retnd = 0x2E1,
  NN_retnq = 0x2E2,
  NN_retfw = 0x2E3,
  NN_retfd = 0x2E4,
  NN_retfq = 0x2E5,
  NN_rdrand = 0x2E6,
  NN_adcx = 0x2E7,
  NN_adox = 0x2E8,
  NN_andn = 0x2E9,
  NN_bextr = 0x2EA,
  NN_blsi = 0x2EB,
  NN_blsmsk = 0x2EC,
  NN_blsr = 0x2ED,
  NN_bzhi = 0x2EE,
  NN_clac = 0x2EF,
  NN_mulx = 0x2F0,
  NN_pdep = 0x2F1,
  NN_pext = 0x2F2,
  NN_rorx = 0x2F3,
  NN_sarx = 0x2F4,
  NN_shlx = 0x2F5,
  NN_shrx = 0x2F6,
  NN_stac = 0x2F7,
  NN_tzcnt = 0x2F8,
  NN_xsaveopt = 0x2F9,
  NN_invpcid = 0x2FA,
  NN_rdseed = 0x2FB,
  NN_rdfsbase = 0x2FC,
  NN_rdgsbase = 0x2FD,
  NN_wrfsbase = 0x2FE,
  NN_wrgsbase = 0x2FF,
  NN_vaddpd = 0x300,
  NN_vaddps = 0x301,
  NN_vaddsd = 0x302,
  NN_vaddss = 0x303,
  NN_vaddsubpd = 0x304,
  NN_vaddsubps = 0x305,
  NN_vaesdec = 0x306,
  NN_vaesdeclast = 0x307,
  NN_vaesenc = 0x308,
  NN_vaesenclast = 0x309,
  NN_vaesimc = 0x30A,
  NN_vaeskeygenassist = 0x30B,
  NN_vandnpd = 0x30C,
  NN_vandnps = 0x30D,
  NN_vandpd = 0x30E,
  NN_vandps = 0x30F,
  NN_vblendpd = 0x310,
  NN_vblendps = 0x311,
  NN_vblendvpd = 0x312,
  NN_vblendvps = 0x313,
  NN_vbroadcastf128 = 0x314,
  NN_vbroadcasti128 = 0x315,
  NN_vbroadcastsd = 0x316,
  NN_vbroadcastss = 0x317,
  NN_vcmppd = 0x318,
  NN_vcmpps = 0x319,
  NN_vcmpsd = 0x31A,
  NN_vcmpss = 0x31B,
  NN_vcomisd = 0x31C,
  NN_vcomiss = 0x31D,
  NN_vcvtdq2pd = 0x31E,
  NN_vcvtdq2ps = 0x31F,
  NN_vcvtpd2dq = 0x320,
  NN_vcvtpd2ps = 0x321,
  NN_vcvtph2ps = 0x322,
  NN_vcvtps2dq = 0x323,
  NN_vcvtps2pd = 0x324,
  NN_vcvtps2ph = 0x325,
  NN_vcvtsd2si = 0x326,
  NN_vcvtsd2ss = 0x327,
  NN_vcvtsi2sd = 0x328,
  NN_vcvtsi2ss = 0x329,
  NN_vcvtss2sd = 0x32A,
  NN_vcvtss2si = 0x32B,
  NN_vcvttpd2dq = 0x32C,
  NN_vcvttps2dq = 0x32D,
  NN_vcvttsd2si = 0x32E,
  NN_vcvttss2si = 0x32F,
  NN_vdivpd = 0x330,
  NN_vdivps = 0x331,
  NN_vdivsd = 0x332,
  NN_vdivss = 0x333,
  NN_vdppd = 0x334,
  NN_vdpps = 0x335,
  NN_vextractf128 = 0x336,
  NN_vextracti128 = 0x337,
  NN_vextractps = 0x338,
  NN_vfmadd132pd = 0x339,
  NN_vfmadd132ps = 0x33A,
  NN_vfmadd132sd = 0x33B,
  NN_vfmadd132ss = 0x33C,
  NN_vfmadd213pd = 0x33D,
  NN_vfmadd213ps = 0x33E,
  NN_vfmadd213sd = 0x33F,
  NN_vfmadd213ss = 0x340,
  NN_vfmadd231pd = 0x341,
  NN_vfmadd231ps = 0x342,
  NN_vfmadd231sd = 0x343,
  NN_vfmadd231ss = 0x344,
  NN_vfmaddsub132pd = 0x345,
  NN_vfmaddsub132ps = 0x346,
  NN_vfmaddsub213pd = 0x347,
  NN_vfmaddsub213ps = 0x348,
  NN_vfmaddsub231pd = 0x349,
  NN_vfmaddsub231ps = 0x34A,
  NN_vfmsub132pd = 0x34B,
  NN_vfmsub132ps = 0x34C,
  NN_vfmsub132sd = 0x34D,
  NN_vfmsub132ss = 0x34E,
  NN_vfmsub213pd = 0x34F,
  NN_vfmsub213ps = 0x350,
  NN_vfmsub213sd = 0x351,
  NN_vfmsub213ss = 0x352,
  NN_vfmsub231pd = 0x353,
  NN_vfmsub231ps = 0x354,
  NN_vfmsub231sd = 0x355,
  NN_vfmsub231ss = 0x356,
  NN_vfmsubadd132pd = 0x357,
  NN_vfmsubadd132ps = 0x358,
  NN_vfmsubadd213pd = 0x359,
  NN_vfmsubadd213ps = 0x35A,
  NN_vfmsubadd231pd = 0x35B,
  NN_vfmsubadd231ps = 0x35C,
  NN_vfnmadd132pd = 0x35D,
  NN_vfnmadd132ps = 0x35E,
  NN_vfnmadd132sd = 0x35F,
  NN_vfnmadd132ss = 0x360,
  NN_vfnmadd213pd = 0x361,
  NN_vfnmadd213ps = 0x362,
  NN_vfnmadd213sd = 0x363,
  NN_vfnmadd213ss = 0x364,
  NN_vfnmadd231pd = 0x365,
  NN_vfnmadd231ps = 0x366,
  NN_vfnmadd231sd = 0x367,
  NN_vfnmadd231ss = 0x368,
  NN_vfnmsub132pd = 0x369,
  NN_vfnmsub132ps = 0x36A,
  NN_vfnmsub132sd = 0x36B,
  NN_vfnmsub132ss = 0x36C,
  NN_vfnmsub213pd = 0x36D,
  NN_vfnmsub213ps = 0x36E,
  NN_vfnmsub213sd = 0x36F,
  NN_vfnmsub213ss = 0x370,
  NN_vfnmsub231pd = 0x371,
  NN_vfnmsub231ps = 0x372,
  NN_vfnmsub231sd = 0x373,
  NN_vfnmsub231ss = 0x374,
  NN_vgatherdps = 0x375,
  NN_vgatherdpd = 0x376,
  NN_vgatherqps = 0x377,
  NN_vgatherqpd = 0x378,
  NN_vhaddpd = 0x379,
  NN_vhaddps = 0x37A,
  NN_vhsubpd = 0x37B,
  NN_vhsubps = 0x37C,
  NN_vinsertf128 = 0x37D,
  NN_vinserti128 = 0x37E,
  NN_vinsertps = 0x37F,
  NN_vlddqu = 0x380,
  NN_vldmxcsr = 0x381,
  NN_vmaskmovdqu = 0x382,
  NN_vmaskmovpd = 0x383,
  NN_vmaskmovps = 0x384,
  NN_vmaxpd = 0x385,
  NN_vmaxps = 0x386,
  NN_vmaxsd = 0x387,
  NN_vmaxss = 0x388,
  NN_vminpd = 0x389,
  NN_vminps = 0x38A,
  NN_vminsd = 0x38B,
  NN_vminss = 0x38C,
  NN_vmovapd = 0x38D,
  NN_vmovaps = 0x38E,
  NN_vmovd = 0x38F,
  NN_vmovddup = 0x390,
  NN_vmovdqa = 0x391,
  NN_vmovdqu = 0x392,
  NN_vmovhlps = 0x393,
  NN_vmovhpd = 0x394,
  NN_vmovhps = 0x395,
  NN_vmovlhps = 0x396,
  NN_vmovlpd = 0x397,
  NN_vmovlps = 0x398,
  NN_vmovmskpd = 0x399,
  NN_vmovmskps = 0x39A,
  NN_vmovntdq = 0x39B,
  NN_vmovntdqa = 0x39C,
  NN_vmovntpd = 0x39D,
  NN_vmovntps = 0x39E,
  NN_vmovq = 0x39F,
  NN_vmovsd = 0x3A0,
  NN_vmovshdup = 0x3A1,
  NN_vmovsldup = 0x3A2,
  NN_vmovss = 0x3A3,
  NN_vmovupd = 0x3A4,
  NN_vmovups = 0x3A5,
  NN_vmpsadbw = 0x3A6,
  NN_vmulpd = 0x3A7,
  NN_vmulps = 0x3A8,
  NN_vmulsd = 0x3A9,
  NN_vmulss = 0x3AA,
  NN_vorpd = 0x3AB,
  NN_vorps = 0x3AC,
  NN_vpabsb = 0x3AD,
  NN_vpabsd = 0x3AE,
  NN_vpabsw = 0x3AF,
  NN_vpackssdw = 0x3B0,
  NN_vpacksswb = 0x3B1,
  NN_vpackusdw = 0x3B2,
  NN_vpackuswb = 0x3B3,
  NN_vpaddb = 0x3B4,
  NN_vpaddd = 0x3B5,
  NN_vpaddq = 0x3B6,
  NN_vpaddsb = 0x3B7,
  NN_vpaddsw = 0x3B8,
  NN_vpaddusb = 0x3B9,
  NN_vpaddusw = 0x3BA,
  NN_vpaddw = 0x3BB,
  NN_vpalignr = 0x3BC,
  NN_vpand = 0x3BD,
  NN_vpandn = 0x3BE,
  NN_vpavgb = 0x3BF,
  NN_vpavgw = 0x3C0,
  NN_vpblendd = 0x3C1,
  NN_vpblendvb = 0x3C2,
  NN_vpblendw = 0x3C3,
  NN_vpbroadcastb = 0x3C4,
  NN_vpbroadcastd = 0x3C5,
  NN_vpbroadcastq = 0x3C6,
  NN_vpbroadcastw = 0x3C7,
  NN_vpclmulqdq = 0x3C8,
  NN_vpcmpeqb = 0x3C9,
  NN_vpcmpeqd = 0x3CA,
  NN_vpcmpeqq = 0x3CB,
  NN_vpcmpeqw = 0x3CC,
  NN_vpcmpestri = 0x3CD,
  NN_vpcmpestrm = 0x3CE,
  NN_vpcmpgtb = 0x3CF,
  NN_vpcmpgtd = 0x3D0,
  NN_vpcmpgtq = 0x3D1,
  NN_vpcmpgtw = 0x3D2,
  NN_vpcmpistri = 0x3D3,
  NN_vpcmpistrm = 0x3D4,
  NN_vperm2f128 = 0x3D5,
  NN_vperm2i128 = 0x3D6,
  NN_vpermd = 0x3D7,
  NN_vpermilpd = 0x3D8,
  NN_vpermilps = 0x3D9,
  NN_vpermpd = 0x3DA,
  NN_vpermps = 0x3DB,
  NN_vpermq = 0x3DC,
  NN_vpextrb = 0x3DD,
  NN_vpextrd = 0x3DE,
  NN_vpextrq = 0x3DF,
  NN_vpextrw = 0x3E0,
  NN_vpgatherdd = 0x3E1,
  NN_vpgatherdq = 0x3E2,
  NN_vpgatherqd = 0x3E3,
  NN_vpgatherqq = 0x3E4,
  NN_vphaddd = 0x3E5,
  NN_vphaddsw = 0x3E6,
  NN_vphaddw = 0x3E7,
  NN_vphminposuw = 0x3E8,
  NN_vphsubd = 0x3E9,
  NN_vphsubsw = 0x3EA,
  NN_vphsubw = 0x3EB,
  NN_vpinsrb = 0x3EC,
  NN_vpinsrd = 0x3ED,
  NN_vpinsrq = 0x3EE,
  NN_vpinsrw = 0x3EF,
  NN_vpmaddubsw = 0x3F0,
  NN_vpmaddwd = 0x3F1,
  NN_vpmaskmovd = 0x3F2,
  NN_vpmaskmovq = 0x3F3,
  NN_vpmaxsb = 0x3F4,
  NN_vpmaxsd = 0x3F5,
  NN_vpmaxsw = 0x3F6,
  NN_vpmaxub = 0x3F7,
  NN_vpmaxud = 0x3F8,
  NN_vpmaxuw = 0x3F9,
  NN_vpminsb = 0x3FA,
  NN_vpminsd = 0x3FB,
  NN_vpminsw = 0x3FC,
  NN_vpminub = 0x3FD,
  NN_vpminud = 0x3FE,
  NN_vpminuw = 0x3FF,
  NN_vpmovmskb = 0x400,
  NN_vpmovsxbd = 0x401,
  NN_vpmovsxbq = 0x402,
  NN_vpmovsxbw = 0x403,
  NN_vpmovsxdq = 0x404,
  NN_vpmovsxwd = 0x405,
  NN_vpmovsxwq = 0x406,
  NN_vpmovzxbd = 0x407,
  NN_vpmovzxbq = 0x408,
  NN_vpmovzxbw = 0x409,
  NN_vpmovzxdq = 0x40A,
  NN_vpmovzxwd = 0x40B,
  NN_vpmovzxwq = 0x40C,
  NN_vpmuldq = 0x40D,
  NN_vpmulhrsw = 0x40E,
  NN_vpmulhuw = 0x40F,
  NN_vpmulhw = 0x410,
  NN_vpmulld = 0x411,
  NN_vpmullw = 0x412,
  NN_vpmuludq = 0x413,
  NN_vpor = 0x414,
  NN_vpsadbw = 0x415,
  NN_vpshufb = 0x416,
  NN_vpshufd = 0x417,
  NN_vpshufhw = 0x418,
  NN_vpshuflw = 0x419,
  NN_vpsignb = 0x41A,
  NN_vpsignd = 0x41B,
  NN_vpsignw = 0x41C,
  NN_vpslld = 0x41D,
  NN_vpslldq = 0x41E,
  NN_vpsllq = 0x41F,
  NN_vpsllvd = 0x420,
  NN_vpsllvq = 0x421,
  NN_vpsllw = 0x422,
  NN_vpsrad = 0x423,
  NN_vpsravd = 0x424,
  NN_vpsraw = 0x425,
  NN_vpsrld = 0x426,
  NN_vpsrldq = 0x427,
  NN_vpsrlq = 0x428,
  NN_vpsrlvd = 0x429,
  NN_vpsrlvq = 0x42A,
  NN_vpsrlw = 0x42B,
  NN_vpsubb = 0x42C,
  NN_vpsubd = 0x42D,
  NN_vpsubq = 0x42E,
  NN_vpsubsb = 0x42F,
  NN_vpsubsw = 0x430,
  NN_vpsubusb = 0x431,
  NN_vpsubusw = 0x432,
  NN_vpsubw = 0x433,
  NN_vptest = 0x434,
  NN_vpunpckhbw = 0x435,
  NN_vpunpckhdq = 0x436,
  NN_vpunpckhqdq = 0x437,
  NN_vpunpckhwd = 0x438,
  NN_vpunpcklbw = 0x439,
  NN_vpunpckldq = 0x43A,
  NN_vpunpcklqdq = 0x43B,
  NN_vpunpcklwd = 0x43C,
  NN_vpxor = 0x43D,
  NN_vrcpps = 0x43E,
  NN_vrcpss = 0x43F,
  NN_vroundpd = 0x440,
  NN_vroundps = 0x441,
  NN_vroundsd = 0x442,
  NN_vroundss = 0x443,
  NN_vrsqrtps = 0x444,
  NN_vrsqrtss = 0x445,
  NN_vshufpd = 0x446,
  NN_vshufps = 0x447,
  NN_vsqrtpd = 0x448,
  NN_vsqrtps = 0x449,
  NN_vsqrtsd = 0x44A,
  NN_vsqrtss = 0x44B,
  NN_vstmxcsr = 0x44C,
  NN_vsubpd = 0x44D,
  NN_vsubps = 0x44E,
  NN_vsubsd = 0x44F,
  NN_vsubss = 0x450,
  NN_vtestpd = 0x451,
  NN_vtestps = 0x452,
  NN_vucomisd = 0x453,
  NN_vucomiss = 0x454,
  NN_vunpckhpd = 0x455,
  NN_vunpckhps = 0x456,
  NN_vunpcklpd = 0x457,
  NN_vunpcklps = 0x458,
  NN_vxorpd = 0x459,
  NN_vxorps = 0x45A,
  NN_vzeroall = 0x45B,
  NN_vzeroupper = 0x45C,
  NN_xabort = 0x45D,
  NN_xbegin = 0x45E,
  NN_xend = 0x45F,
  NN_xtest = 0x460,
  NN_vmgetinfo = 0x461,
  NN_vmsetinfo = 0x462,
  NN_vmdxdsbl = 0x463,
  NN_vmdxenbl = 0x464,
  NN_vmcpuid = 0x465,
  NN_vmhlt = 0x466,
  NN_vmsplaf = 0x467,
  NN_vmpushfd = 0x468,
  NN_vmpopfd = 0x469,
  NN_vmcli = 0x46A,
  NN_vmsti = 0x46B,
  NN_vmiretd = 0x46C,
  NN_vmsgdt = 0x46D,
  NN_vmsidt = 0x46E,
  NN_vmsldt = 0x46F,
  NN_vmstr = 0x470,
  NN_vmsdte = 0x471,
  NN_vpcext = 0x472,
  NN_vfmaddsubps = 0x473,
  NN_vfmaddsubpd = 0x474,
  NN_vfmsubaddps = 0x475,
  NN_vfmsubaddpd = 0x476,
  NN_vfmaddps = 0x477,
  NN_vfmaddpd = 0x478,
  NN_vfmaddss = 0x479,
  NN_vfmaddsd = 0x47A,
  NN_vfmsubps = 0x47B,
  NN_vfmsubpd = 0x47C,
  NN_vfmsubss = 0x47D,
  NN_vfmsubsd = 0x47E,
  NN_vfnmaddps = 0x47F,
  NN_vfnmaddpd = 0x480,
  NN_vfnmaddss = 0x481,
  NN_vfnmaddsd = 0x482,
  NN_vfnmsubps = 0x483,
  NN_vfnmsubpd = 0x484,
  NN_vfnmsubss = 0x485,
  NN_vfnmsubsd = 0x486,
  NN_bndmk = 0x487,
  NN_bndcl = 0x488,
  NN_bndcu = 0x489,
  NN_bndcn = 0x48A,
  NN_bndmov = 0x48B,
  NN_bndldx = 0x48C,
  NN_bndstx = 0x48D,
  NN_xrstors = 0x48E,
  NN_xsavec = 0x48F,
  NN_xsaves = 0x490,
  NN_prefetchwt1 = 0x491,
  NN_clflushopt = 0x492,
  NN_clwb = 0x493,
  NN_pcommit = 0x494,
  NN_rdpkru = 0x495,
  NN_wrpkru = 0x496,
  NN_vcmpeqpd = 0x497,
  NN_vcmpltpd = 0x498,
  NN_vcmplepd = 0x499,
  NN_vcmpunordpd = 0x49A,
  NN_vcmpneqpd = 0x49B,
  NN_vcmpnltpd = 0x49C,
  NN_vcmpnlepd = 0x49D,
  NN_vcmpordpd = 0x49E,
  NN_vcmpeq_uqpd = 0x49F,
  NN_vcmpngepd = 0x4A0,
  NN_vcmpngtpd = 0x4A1,
  NN_vcmpfalsepd = 0x4A2,
  NN_vcmpneq_oqpd = 0x4A3,
  NN_vcmpgepd = 0x4A4,
  NN_vcmpgtpd = 0x4A5,
  NN_vcmptruepd = 0x4A6,
  NN_vcmpeq_ospd = 0x4A7,
  NN_vcmplt_oqpd = 0x4A8,
  NN_vcmple_oqpd = 0x4A9,
  NN_vcmpunord_spd = 0x4AA,
  NN_vcmpneq_uspd = 0x4AB,
  NN_vcmpnlt_uqpd = 0x4AC,
  NN_vcmpnle_uqpd = 0x4AD,
  NN_vcmpord_spd = 0x4AE,
  NN_vcmpeq_uspd = 0x4AF,
  NN_vcmpnge_uqpd = 0x4B0,
  NN_vcmpngt_uqpd = 0x4B1,
  NN_vcmpfalse_ospd = 0x4B2,
  NN_vcmpneq_ospd = 0x4B3,
  NN_vcmpge_oqpd = 0x4B4,
  NN_vcmpgt_oqpd = 0x4B5,
  NN_vcmptrue_uspd = 0x4B6,
  NN_vcmpeqps = 0x4B7,
  NN_vcmpltps = 0x4B8,
  NN_vcmpleps = 0x4B9,
  NN_vcmpunordps = 0x4BA,
  NN_vcmpneqps = 0x4BB,
  NN_vcmpnltps = 0x4BC,
  NN_vcmpnleps = 0x4BD,
  NN_vcmpordps = 0x4BE,
  NN_vcmpeq_uqps = 0x4BF,
  NN_vcmpngeps = 0x4C0,
  NN_vcmpngtps = 0x4C1,
  NN_vcmpfalseps = 0x4C2,
  NN_vcmpneq_oqps = 0x4C3,
  NN_vcmpgeps = 0x4C4,
  NN_vcmpgtps = 0x4C5,
  NN_vcmptrueps = 0x4C6,
  NN_vcmpeq_osps = 0x4C7,
  NN_vcmplt_oqps = 0x4C8,
  NN_vcmple_oqps = 0x4C9,
  NN_vcmpunord_sps = 0x4CA,
  NN_vcmpneq_usps = 0x4CB,
  NN_vcmpnlt_uqps = 0x4CC,
  NN_vcmpnle_uqps = 0x4CD,
  NN_vcmpord_sps = 0x4CE,
  NN_vcmpeq_usps = 0x4CF,
  NN_vcmpnge_uqps = 0x4D0,
  NN_vcmpngt_uqps = 0x4D1,
  NN_vcmpfalse_osps = 0x4D2,
  NN_vcmpneq_osps = 0x4D3,
  NN_vcmpge_oqps = 0x4D4,
  NN_vcmpgt_oqps = 0x4D5,
  NN_vcmptrue_usps = 0x4D6,
  NN_vcmpeqsd = 0x4D7,
  NN_vcmpltsd = 0x4D8,
  NN_vcmplesd = 0x4D9,
  NN_vcmpunordsd = 0x4DA,
  NN_vcmpneqsd = 0x4DB,
  NN_vcmpnltsd = 0x4DC,
  NN_vcmpnlesd = 0x4DD,
  NN_vcmpordsd = 0x4DE,
  NN_vcmpeq_uqsd = 0x4DF,
  NN_vcmpngesd = 0x4E0,
  NN_vcmpngtsd = 0x4E1,
  NN_vcmpfalsesd = 0x4E2,
  NN_vcmpneq_oqsd = 0x4E3,
  NN_vcmpgesd = 0x4E4,
  NN_vcmpgtsd = 0x4E5,
  NN_vcmptruesd = 0x4E6,
  NN_vcmpeq_ossd = 0x4E7,
  NN_vcmplt_oqsd = 0x4E8,
  NN_vcmple_oqsd = 0x4E9,
  NN_vcmpunord_ssd = 0x4EA,
  NN_vcmpneq_ussd = 0x4EB,
  NN_vcmpnlt_uqsd = 0x4EC,
  NN_vcmpnle_uqsd = 0x4ED,
  NN_vcmpord_ssd = 0x4EE,
  NN_vcmpeq_ussd = 0x4EF,
  NN_vcmpnge_uqsd = 0x4F0,
  NN_vcmpngt_uqsd = 0x4F1,
  NN_vcmpfalse_ossd = 0x4F2,
  NN_vcmpneq_ossd = 0x4F3,
  NN_vcmpge_oqsd = 0x4F4,
  NN_vcmpgt_oqsd = 0x4F5,
  NN_vcmptrue_ussd = 0x4F6,
  NN_vcmpeqss = 0x4F7,
  NN_vcmpltss = 0x4F8,
  NN_vcmpless = 0x4F9,
  NN_vcmpunordss = 0x4FA,
  NN_vcmpneqss = 0x4FB,
  NN_vcmpnltss = 0x4FC,
  NN_vcmpnless = 0x4FD,
  NN_vcmpordss = 0x4FE,
  NN_vcmpeq_uqss = 0x4FF,
  NN_vcmpngess = 0x500,
  NN_vcmpngtss = 0x501,
  NN_vcmpfalsess = 0x502,
  NN_vcmpneq_oqss = 0x503,
  NN_vcmpgess = 0x504,
  NN_vcmpgtss = 0x505,
  NN_vcmptruess = 0x506,
  NN_vcmpeq_osss = 0x507,
  NN_vcmplt_oqss = 0x508,
  NN_vcmple_oqss = 0x509,
  NN_vcmpunord_sss = 0x50A,
  NN_vcmpneq_usss = 0x50B,
  NN_vcmpnlt_uqss = 0x50C,
  NN_vcmpnle_uqss = 0x50D,
  NN_vcmpord_sss = 0x50E,
  NN_vcmpeq_usss = 0x50F,
  NN_vcmpnge_uqss = 0x510,
  NN_vcmpngt_uqss = 0x511,
  NN_vcmpfalse_osss = 0x512,
  NN_vcmpneq_osss = 0x513,
  NN_vcmpge_oqss = 0x514,
  NN_vcmpgt_oqss = 0x515,
  NN_vcmptrue_usss = 0x516,
  NN_valignd = 0x517,
  NN_valignq = 0x518,
  NN_vblendmpd = 0x519,
  NN_vblendmps = 0x51A,
  NN_vpblendmb = 0x51B,
  NN_vpblendmw = 0x51C,
  NN_vpblendmd = 0x51D,
  NN_vpblendmq = 0x51E,
  NN_vbroadcastf32x2 = 0x51F,
  NN_vbroadcastf32x4 = 0x520,
  NN_vbroadcastf64x2 = 0x521,
  NN_vbroadcastf32x8 = 0x522,
  NN_vbroadcastf64x4 = 0x523,
  NN_vbroadcasti32x2 = 0x524,
  NN_vbroadcasti32x4 = 0x525,
  NN_vbroadcasti64x2 = 0x526,
  NN_vbroadcasti32x8 = 0x527,
  NN_vbroadcasti64x4 = 0x528,
  NN_vcompresspd = 0x529,
  NN_vcompressps = 0x52A,
  NN_vcvtpd2qq = 0x52B,
  NN_vcvtpd2udq = 0x52C,
  NN_vcvtpd2uqq = 0x52D,
  NN_vcvtps2udq = 0x52E,
  NN_vcvtps2qq = 0x52F,
  NN_vcvtps2uqq = 0x530,
  NN_vcvtqq2pd = 0x531,
  NN_vcvtqq2ps = 0x532,
  NN_vcvtsd2usi = 0x533,
  NN_vcvtss2usi = 0x534,
  NN_vcvttpd2qq = 0x535,
  NN_vcvttpd2udq = 0x536,
  NN_vcvttpd2uqq = 0x537,
  NN_vcvttps2udq = 0x538,
  NN_vcvttps2qq = 0x539,
  NN_vcvttps2uqq = 0x53A,
  NN_vcvttsd2usi = 0x53B,
  NN_vcvttss2usi = 0x53C,
  NN_vcvtudq2pd = 0x53D,
  NN_vcvtudq2ps = 0x53E,
  NN_vcvtuqq2pd = 0x53F,
  NN_vcvtuqq2ps = 0x540,
  NN_vcvtusi2sd = 0x541,
  NN_vcvtusi2ss = 0x542,
  NN_vdbpsadbw = 0x543,
  NN_vexpandpd = 0x544,
  NN_vexpandps = 0x545,
  NN_vextractf32x4 = 0x546,
  NN_vextractf64x2 = 0x547,
  NN_vextractf32x8 = 0x548,
  NN_vextractf64x4 = 0x549,
  NN_vextracti32x4 = 0x54A,
  NN_vextracti64x2 = 0x54B,
  NN_vextracti32x8 = 0x54C,
  NN_vextracti64x4 = 0x54D,
  NN_vfixupimmpd = 0x54E,
  NN_vfixupimmps = 0x54F,
  NN_vfixupimmsd = 0x550,
  NN_vfixupimmss = 0x551,
  NN_vfpclasspd = 0x552,
  NN_vfpclassps = 0x553,
  NN_vfpclasssd = 0x554,
  NN_vfpclassss = 0x555,
  NN_vgetexppd = 0x556,
  NN_vgetexpps = 0x557,
  NN_vgetexpsd = 0x558,
  NN_vgetexpss = 0x559,
  NN_vgetmantpd = 0x55A,
  NN_vgetmantps = 0x55B,
  NN_vgetmantsd = 0x55C,
  NN_vgetmantss = 0x55D,
  NN_vinsertf32x4 = 0x55E,
  NN_vinsertf64x2 = 0x55F,
  NN_vinsertf32x8 = 0x560,
  NN_vinsertf64x4 = 0x561,
  NN_vinserti32x4 = 0x562,
  NN_vinserti64x2 = 0x563,
  NN_vinserti32x8 = 0x564,
  NN_vinserti64x4 = 0x565,
  NN_vmovdqa32 = 0x566,
  NN_vmovdqa64 = 0x567,
  NN_vmovdqu8 = 0x568,
  NN_vmovdqu16 = 0x569,
  NN_vmovdqu32 = 0x56A,
  NN_vmovdqu64 = 0x56B,
  NN_vpabsq = 0x56C,
  NN_vpandd = 0x56D,
  NN_vpandq = 0x56E,
  NN_vpandnd = 0x56F,
  NN_vpandnq = 0x570,
  NN_vpbroadcastmb2q = 0x571,
  NN_vpbroadcastmw2d = 0x572,
  NN_vpcmpb = 0x573,
  NN_vpcmpub = 0x574,
  NN_vpcmpd = 0x575,
  NN_vpcmpud = 0x576,
  NN_vpcmpq = 0x577,
  NN_vpcmpuq = 0x578,
  NN_vpcmpw = 0x579,
  NN_vpcmpuw = 0x57A,
  NN_vpcompressd = 0x57B,
  NN_vpcompressq = 0x57C,
  NN_vpconflictd = 0x57D,
  NN_vpconflictq = 0x57E,
  NN_vpermb = 0x57F,
  NN_vpermw = 0x580,
  NN_vpermi2b = 0x581,
  NN_vpermi2w = 0x582,
  NN_vpermi2d = 0x583,
  NN_vpermi2q = 0x584,
  NN_vpermi2ps = 0x585,
  NN_vpermi2pd = 0x586,
  NN_vpermt2b = 0x587,
  NN_vpermt2w = 0x588,
  NN_vpermt2d = 0x589,
  NN_vpermt2q = 0x58A,
  NN_vpermt2ps = 0x58B,
  NN_vpermt2pd = 0x58C,
  NN_vpexpandd = 0x58D,
  NN_vpexpandq = 0x58E,
  NN_vplzcntd = 0x58F,
  NN_vplzcntq = 0x590,
  NN_vpmadd52luq = 0x591,
  NN_vpmadd52huq = 0x592,
  NN_vpmaxsq = 0x593,
  NN_vpmaxuq = 0x594,
  NN_vpminsq = 0x595,
  NN_vpminuq = 0x596,
  NN_vpmovm2b = 0x597,
  NN_vpmovm2w = 0x598,
  NN_vpmovm2d = 0x599,
  NN_vpmovm2q = 0x59A,
  NN_vpmovb2m = 0x59B,
  NN_vpmovw2m = 0x59C,
  NN_vpmovd2m = 0x59D,
  NN_vpmovq2m = 0x59E,
  NN_vpmovqb = 0x59F,
  NN_vpmovsqb = 0x5A0,
  NN_vpmovusqb = 0x5A1,
  NN_vpmovqw = 0x5A2,
  NN_vpmovsqw = 0x5A3,
  NN_vpmovusqw = 0x5A4,
  NN_vpmovqd = 0x5A5,
  NN_vpmovsqd = 0x5A6,
  NN_vpmovusqd = 0x5A7,
  NN_vpmovdb = 0x5A8,
  NN_vpmovsdb = 0x5A9,
  NN_vpmovusdb = 0x5AA,
  NN_vpmovdw = 0x5AB,
  NN_vpmovsdw = 0x5AC,
  NN_vpmovusdw = 0x5AD,
  NN_vpmovwb = 0x5AE,
  NN_vpmovswb = 0x5AF,
  NN_vpmovuswb = 0x5B0,
  NN_vpmullq = 0x5B1,
  NN_vpmultishiftqb = 0x5B2,
  NN_vpord = 0x5B3,
  NN_vporq = 0x5B4,
  NN_vprold = 0x5B5,
  NN_vprolvd = 0x5B6,
  NN_vprolq = 0x5B7,
  NN_vprolvq = 0x5B8,
  NN_vprord = 0x5B9,
  NN_vprorvd = 0x5BA,
  NN_vprorq = 0x5BB,
  NN_vprorvq = 0x5BC,
  NN_vpscatterdd = 0x5BD,
  NN_vpscatterdq = 0x5BE,
  NN_vpscatterqd = 0x5BF,
  NN_vpscatterqq = 0x5C0,
  NN_vpsraq = 0x5C1,
  NN_vpsllvw = 0x5C2,
  NN_vpsrlvw = 0x5C3,
  NN_vptestnmb = 0x5C4,
  NN_vptestnmw = 0x5C5,
  NN_vptestnmd = 0x5C6,
  NN_vptestnmq = 0x5C7,
  NN_vshuff32x4 = 0x5C8,
  NN_vshuff64x2 = 0x5C9,
  NN_vshufi32x4 = 0x5CA,
  NN_vshufi64x2 = 0x5CB,
  NN_vpternlogd = 0x5CC,
  NN_vpternlogq = 0x5CD,
  NN_vptestmb = 0x5CE,
  NN_vptestmw = 0x5CF,
  NN_vptestmd = 0x5D0,
  NN_vptestmq = 0x5D1,
  NN_vpsravw = 0x5D2,
  NN_vpsravq = 0x5D3,
  NN_vpxord = 0x5D4,
  NN_vpxorq = 0x5D5,
  NN_vrangepd = 0x5D6,
  NN_vrangeps = 0x5D7,
  NN_vrangesd = 0x5D8,
  NN_vrangess = 0x5D9,
  NN_vrcp14pd = 0x5DA,
  NN_vrcp14sd = 0x5DB,
  NN_vrcp14ps = 0x5DC,
  NN_vrcp14ss = 0x5DD,
  NN_vreducepd = 0x5DE,
  NN_vreducesd = 0x5DF,
  NN_vreduceps = 0x5E0,
  NN_vreducess = 0x5E1,
  NN_vrndscalepd = 0x5E2,
  NN_vrndscalesd = 0x5E3,
  NN_vrndscaleps = 0x5E4,
  NN_vrndscaless = 0x5E5,
  NN_vrsqrt14pd = 0x5E6,
  NN_vrsqrt14sd = 0x5E7,
  NN_vrsqrt14ps = 0x5E8,
  NN_vrsqrt14ss = 0x5E9,
  NN_vscalefpd = 0x5EA,
  NN_vscalefsd = 0x5EB,
  NN_vscalefps = 0x5EC,
  NN_vscalefss = 0x5ED,
  NN_vscatterdps = 0x5EE,
  NN_vscatterdpd = 0x5EF,
  NN_vscatterqps = 0x5F0,
  NN_vscatterqpd = 0x5F1,
  NN_vexp2pd = 0x5F2,
  NN_vexp2ps = 0x5F3,
  NN_vrcp28pd = 0x5F4,
  NN_vrcp28sd = 0x5F5,
  NN_vrcp28ps = 0x5F6,
  NN_vrcp28ss = 0x5F7,
  NN_vrsqrt28pd = 0x5F8,
  NN_vrsqrt28sd = 0x5F9,
  NN_vrsqrt28ps = 0x5FA,
  NN_vrsqrt28ss = 0x5FB,
  NN_vgatherpf0dps = 0x5FC,
  NN_vgatherpf0qps = 0x5FD,
  NN_vgatherpf0dpd = 0x5FE,
  NN_vgatherpf0qpd = 0x5FF,
  NN_vgatherpf1dps = 0x600,
  NN_vgatherpf1qps = 0x601,
  NN_vgatherpf1dpd = 0x602,
  NN_vgatherpf1qpd = 0x603,
  NN_vscatterpf0dps = 0x604,
  NN_vscatterpf0qps = 0x605,
  NN_vscatterpf0dpd = 0x606,
  NN_vscatterpf0qpd = 0x607,
  NN_vscatterpf1dps = 0x608,
  NN_vscatterpf1qps = 0x609,
  NN_vscatterpf1dpd = 0x60A,
  NN_vscatterpf1qpd = 0x60B,
  NN_vpcmpltd = 0x60C,
  NN_vpcmpled = 0x60D,
  NN_vpcmpneqd = 0x60E,
  NN_vpcmpnltd = 0x60F,
  NN_vpcmpnled = 0x610,
  NN_vpcmpequd = 0x611,
  NN_vpcmpltud = 0x612,
  NN_vpcmpleud = 0x613,
  NN_vpcmpnequd = 0x614,
  NN_vpcmpnltud = 0x615,
  NN_vpcmpnleud = 0x616,
  NN_vpcmpltq = 0x617,
  NN_vpcmpleq = 0x618,
  NN_vpcmpneqq = 0x619,
  NN_vpcmpnltq = 0x61A,
  NN_vpcmpnleq = 0x61B,
  NN_vpcmpequq = 0x61C,
  NN_vpcmpltuq = 0x61D,
  NN_vpcmpleuq = 0x61E,
  NN_vpcmpnequq = 0x61F,
  NN_vpcmpnltuq = 0x620,
  NN_vpcmpnleuq = 0x621,
  NN_kaddw = 0x622,
  NN_kaddb = 0x623,
  NN_kaddq = 0x624,
  NN_kaddd = 0x625,
  NN_kandw = 0x626,
  NN_kandb = 0x627,
  NN_kandq = 0x628,
  NN_kandd = 0x629,
  NN_kandnw = 0x62A,
  NN_kandnb = 0x62B,
  NN_kandnq = 0x62C,
  NN_kandnd = 0x62D,
  NN_kmovw = 0x62E,
  NN_kmovb = 0x62F,
  NN_kmovq = 0x630,
  NN_kmovd = 0x631,
  NN_kunpckbw = 0x632,
  NN_kunpckwd = 0x633,
  NN_kunpckdq = 0x634,
  NN_knotw = 0x635,
  NN_knotb = 0x636,
  NN_knotq = 0x637,
  NN_knotd = 0x638,
  NN_korw = 0x639,
  NN_korb = 0x63A,
  NN_korq = 0x63B,
  NN_kord = 0x63C,
  NN_kortestw = 0x63D,
  NN_kortestb = 0x63E,
  NN_kortestq = 0x63F,
  NN_kortestd = 0x640,
  NN_kshiftlw = 0x641,
  NN_kshiftlb = 0x642,
  NN_kshiftlq = 0x643,
  NN_kshiftld = 0x644,
  NN_kshiftrw = 0x645,
  NN_kshiftrb = 0x646,
  NN_kshiftrq = 0x647,
  NN_kshiftrd = 0x648,
  NN_kxnorw = 0x649,
  NN_kxnorb = 0x64A,
  NN_kxnorq = 0x64B,
  NN_kxnord = 0x64C,
  NN_ktestw = 0x64D,
  NN_ktestb = 0x64E,
  NN_ktestq = 0x64F,
  NN_ktestd = 0x650,
  NN_kxorw = 0x651,
  NN_kxorb = 0x652,
  NN_kxorq = 0x653,
  NN_kxord = 0x654,
  NN_sha1rnds4 = 0x655,
  NN_sha1nexte = 0x656,
  NN_sha1msg1 = 0x657,
  NN_sha1msg2 = 0x658,
  NN_sha256rnds2 = 0x659,
  NN_sha256msg1 = 0x65A,
  NN_sha256msg2 = 0x65B,
  NN_encls = 0x65C,
  NN_enclu = 0x65D,
  NN_vfrczpd = 0x65E,
  NN_vfrczps = 0x65F,
  NN_vfrczsd = 0x660,
  NN_vfrczss = 0x661,
  NN_vpcmov = 0x662,
  NN_vpcomb = 0x663,
  NN_vpcomd = 0x664,
  NN_vpcomq = 0x665,
  NN_vpcomub = 0x666,
  NN_vpcomud = 0x667,
  NN_vpcomuq = 0x668,
  NN_vpcomuw = 0x669,
  NN_vpcomw = 0x66A,
  NN_vpermil2pd = 0x66B,
  NN_vpermil2ps = 0x66C,
  NN_vphaddbd = 0x66D,
  NN_vphaddbq = 0x66E,
  NN_vphaddbw = 0x66F,
  NN_vphadddq = 0x670,
  NN_vphaddubd = 0x671,
  NN_vphaddubq = 0x672,
  NN_vphaddubw = 0x673,
  NN_vphaddudq = 0x674,
  NN_vphadduwd = 0x675,
  NN_vphadduwq = 0x676,
  NN_vphaddwd = 0x677,
  NN_vphaddwq = 0x678,
  NN_vphsubbw = 0x679,
  NN_vphsubdq = 0x67A,
  NN_vphsubwd = 0x67B,
  NN_vpmacsdd = 0x67C,
  NN_vpmacsdqh = 0x67D,
  NN_vpmacsdql = 0x67E,
  NN_vpmacssdd = 0x67F,
  NN_vpmacssdqh = 0x680,
  NN_vpmacssdql = 0x681,
  NN_vpmacsswd = 0x682,
  NN_vpmacssww = 0x683,
  NN_vpmacswd = 0x684,
  NN_vpmacsww = 0x685,
  NN_vpmadcsswd = 0x686,
  NN_vpmadcswd = 0x687,
  NN_vpperm = 0x688,
  NN_vprotb = 0x689,
  NN_vprotd = 0x68A,
  NN_vprotq = 0x68B,
  NN_vprotw = 0x68C,
  NN_vpshab = 0x68D,
  NN_vpshad = 0x68E,
  NN_vpshaq = 0x68F,
  NN_vpshaw = 0x690,
  NN_vpshlb = 0x691,
  NN_vpshld = 0x692,
  NN_vpshlq = 0x693,
  NN_vpshlw = 0x694,
  NN_vpcomltb = 0x695,
  NN_vpcomleb = 0x696,
  NN_vpcomgtb = 0x697,
  NN_vpcomgeb = 0x698,
  NN_vpcomeqb = 0x699,
  NN_vpcomneqb = 0x69A,
  NN_vpcomfalseb = 0x69B,
  NN_vpcomtrueb = 0x69C,
  NN_vpcomltw = 0x69D,
  NN_vpcomlew = 0x69E,
  NN_vpcomgtw = 0x69F,
  NN_vpcomgew = 0x6A0,
  NN_vpcomeqw = 0x6A1,
  NN_vpcomneqw = 0x6A2,
  NN_vpcomfalsew = 0x6A3,
  NN_vpcomtruew = 0x6A4,
  NN_vpcomltd = 0x6A5,
  NN_vpcomled = 0x6A6,
  NN_vpcomgtd = 0x6A7,
  NN_vpcomged = 0x6A8,
  NN_vpcomeqd = 0x6A9,
  NN_vpcomneqd = 0x6AA,
  NN_vpcomfalsed = 0x6AB,
  NN_vpcomtrued = 0x6AC,
  NN_vpcomltq = 0x6AD,
  NN_vpcomleq = 0x6AE,
  NN_vpcomgtq = 0x6AF,
  NN_vpcomgeq = 0x6B0,
  NN_vpcomeqq = 0x6B1,
  NN_vpcomneqq = 0x6B2,
  NN_vpcomfalseq = 0x6B3,
  NN_vpcomtrueq = 0x6B4,
  NN_vpcomltub = 0x6B5,
  NN_vpcomleub = 0x6B6,
  NN_vpcomgtub = 0x6B7,
  NN_vpcomgeub = 0x6B8,
  NN_vpcomequb = 0x6B9,
  NN_vpcomnequb = 0x6BA,
  NN_vpcomfalseub = 0x6BB,
  NN_vpcomtrueub = 0x6BC,
  NN_vpcomltuw = 0x6BD,
  NN_vpcomleuw = 0x6BE,
  NN_vpcomgtuw = 0x6BF,
  NN_vpcomgeuw = 0x6C0,
  NN_vpcomequw = 0x6C1,
  NN_vpcomnequw = 0x6C2,
  NN_vpcomfalseuw = 0x6C3,
  NN_vpcomtrueuw = 0x6C4,
  NN_vpcomltud = 0x6C5,
  NN_vpcomleud = 0x6C6,
  NN_vpcomgtud = 0x6C7,
  NN_vpcomgeud = 0x6C8,
  NN_vpcomequd = 0x6C9,
  NN_vpcomnequd = 0x6CA,
  NN_vpcomfalseud = 0x6CB,
  NN_vpcomtrueud = 0x6CC,
  NN_vpcomltuq = 0x6CD,
  NN_vpcomleuq = 0x6CE,
  NN_vpcomgtuq = 0x6CF,
  NN_vpcomgeuq = 0x6D0,
  NN_vpcomequq = 0x6D1,
  NN_vpcomnequq = 0x6D2,
  NN_vpcomfalseuq = 0x6D3,
  NN_vpcomtrueuq = 0x6D4,
  NN_monitorx = 0x6D5,
  NN_mwaitx = 0x6D6,
  NN_clzero = 0x6D7,
  NN_ptwrite = 0x6D8,
  NN_v4fmaddps = 0x6D9,
  NN_v4fnmaddps = 0x6DA,
  NN_v4fmaddss = 0x6DB,
  NN_v4fnmaddss = 0x6DC,
  NN_vp4dpwssd = 0x6DD,
  NN_vp4dpwssds = 0x6DE,
  NN_vpopcntd = 0x6DF,
  NN_vpopcntq = 0x6E0,
  NN_rdpid = 0x6E1,
  NN_vmfunc = 0x6E2,
  NN_incsspd = 0x6E3,
  NN_incsspq = 0x6E4,
  NN_rdsspd = 0x6E5,
  NN_rdsspq = 0x6E6,
  NN_saveprevssp = 0x6E7,
  NN_rstorssp = 0x6E8,
  NN_wrssd = 0x6E9,
  NN_wrssq = 0x6EA,
  NN_wrussd = 0x6EB,
  NN_wrussq = 0x6EC,
  NN_setssbsy = 0x6ED,
  NN_clrssbsy = 0x6EE,
  NN_endbr64 = 0x6EF,
  NN_endbr32 = 0x6F0,
  NN_ud0 = 0x6F1,
  NN_ud1 = 0x6F2,
  NN_enqcmd = 0x6F3,
  NN_enqcmds = 0x6F4,
  NN_mcommit = 0x6F5,
  NN_rdpru = 0x6F6,
  NN_cldemote = 0x6F7,
  NN_enclv = 0x6F8,
  NN_movdiri = 0x6F9,
  NN_movdir64b = 0x6FA,
  NN_tpause = 0x6FB,
  NN_umonitor = 0x6FC,
  NN_umwait = 0x6FD,
  NN_serialize = 0x6FE,
  NN_xresldtrk = 0x6FF,
  NN_xsusldtrk = 0x700,
  NN_gf2p8mulb = 0x701,
  NN_gf2p8affineqb = 0x702,
  NN_gf2p8affineinvqb = 0x703,
  NN_vgf2p8mulb = 0x704,
  NN_vgf2p8affineqb = 0x705,
  NN_vgf2p8affineinvqb = 0x706,
  NN_fxsave64 = 0x707,
  NN_fxrstor64 = 0x708,
  NN_last = 0x709,
};

/* 1737 */
enum _D56FBCFBBCE5EB183B3B7533D8D23EB1 : unsigned __int32
{
  I5_null = 0x0,
  I5_aci = 0x1,
  I5_adc = 0x2,
  Z80_adc = 0x2,
  I5_add = 0x3,
  Z80_add = 0x3,
  I5_adi = 0x4,
  I5_ana = 0x5,
  I5_ani = 0x6,
  I5_call = 0x7,
  I5_cnz = 0x8,
  I5_cz = 0x9,
  I5_cnc = 0xA,
  I5_cc = 0xB,
  I5_cpo = 0xC,
  I5_cpe = 0xD,
  I5_cp = 0xE,
  I5_cm = 0xF,
  I5_cmc = 0x10,
  I5_cmp = 0x11,
  I5_cpi = 0x12,
  I5_cma = 0x13,
  I5_daa = 0x14,
  I5_dad = 0x15,
  I5_dcr = 0x16,
  I5_dcx = 0x17,
  I5_di = 0x18,
  Z80_di = 0x18,
  I5_ei = 0x19,
  Z80_ei = 0x19,
  I5_halt = 0x1A,
  I5_in = 0x1B,
  Z80_in = 0x1B,
  I5_inr = 0x1C,
  I5_inx = 0x1D,
  I5_jmp = 0x1E,
  I5_jnz = 0x1F,
  I5_jz = 0x20,
  I5_jnc = 0x21,
  I5_jc = 0x22,
  I5_jpo = 0x23,
  I5_jpe = 0x24,
  I5_jp = 0x25,
  I5_jm = 0x26,
  I5_lda = 0x27,
  I5_ldax = 0x28,
  I5_lhld = 0x29,
  I5_lxi = 0x2A,
  I5_mov = 0x2B,
  I5_mvi = 0x2C,
  I5_nop = 0x2D,
  I5_ora = 0x2E,
  I5_ori = 0x2F,
  I5_out = 0x30,
  Z80_out = 0x30,
  I5_pchl = 0x31,
  I5_pop = 0x32,
  Z80_pop = 0x32,
  I5_push = 0x33,
  Z80_push = 0x33,
  I5_ret = 0x34,
  I5_rnz = 0x35,
  I5_rz = 0x36,
  I5_rnc = 0x37,
  I5_rc = 0x38,
  I5_rpo = 0x39,
  I5_rpe = 0x3A,
  I5_rp = 0x3B,
  I5_rm = 0x3C,
  I5_ral = 0x3D,
  I5_rlc = 0x3E,
  I5_rar = 0x3F,
  I5_rrc = 0x40,
  I5_rst = 0x41,
  I5_sbb = 0x42,
  I5_sbi = 0x43,
  I5_stc = 0x44,
  I5_sphl = 0x45,
  I5_sta = 0x46,
  I5_stax = 0x47,
  I5_shld = 0x48,
  I5_sui = 0x49,
  I5_sub = 0x4A,
  Z80_sub = 0x4A,
  I5_xra = 0x4B,
  I5_xri = 0x4C,
  I5_xchg = 0x4D,
  I5_xthl = 0x4E,
  I5_rim = 0x4F,
  I5_sim = 0x50,
  Z80_and = 0x51,
  Z80_bit = 0x52,
  Z80_call = 0x53,
  Z80_ccf = 0x54,
  Z80_cp = 0x55,
  Z80_cpd = 0x56,
  Z80_cpdr = 0x57,
  Z80_cpi = 0x58,
  Z80_cpir = 0x59,
  Z80_cpl = 0x5A,
  Z80_dec = 0x5B,
  Z80_djnz = 0x5C,
  Z80_ex = 0x5D,
  Z80_exx = 0x5E,
  Z80_halt = 0x5F,
  Z80_im = 0x60,
  Z80_inc = 0x61,
  Z80_ind = 0x62,
  Z80_indr = 0x63,
  Z80_ini = 0x64,
  Z80_inir = 0x65,
  Z80_jp = 0x66,
  Z80_jr = 0x67,
  Z80_ld = 0x68,
  Z80_ldd = 0x69,
  Z80_lddr = 0x6A,
  Z80_ldi = 0x6B,
  Z80_ldir = 0x6C,
  Z80_neg = 0x6D,
  Z80_or = 0x6E,
  Z80_otdr = 0x6F,
  Z80_otir = 0x70,
  Z80_outd = 0x71,
  Z80_outi = 0x72,
  Z80_res = 0x73,
  Z80_ret = 0x74,
  Z80_reti = 0x75,
  Z80_retn = 0x76,
  Z80_rl = 0x77,
  Z80_rla = 0x78,
  Z80_rlc = 0x79,
  Z80_rlca = 0x7A,
  Z80_rld = 0x7B,
  Z80_rr = 0x7C,
  Z80_rra = 0x7D,
  Z80_rrc = 0x7E,
  Z80_rrca = 0x7F,
  Z80_rrd = 0x80,
  Z80_scf = 0x81,
  Z80_sbc = 0x82,
  Z80_set = 0x83,
  Z80_sla = 0x84,
  Z80_sra = 0x85,
  Z80_srl = 0x86,
  Z80_xor = 0x87,
  Z80_inp = 0x88,
  Z80_outp = 0x89,
  Z80_srr = 0x8A,
  HD_in0 = 0x8B,
  Z80_in0 = 0x8B,
  HD_mlt = 0x8C,
  Z80_mlt = 0x8C,
  HD_otim = 0x8D,
  Z80_otim = 0x8D,
  HD_otimr = 0x8E,
  Z80_otimr = 0x8E,
  HD_otdm = 0x8F,
  Z80_otdm = 0x8F,
  HD_otdmr = 0x90,
  Z80_otdmr = 0x90,
  HD_out0 = 0x91,
  Z80_out0 = 0x91,
  HD_slp = 0x92,
  Z80_slp = 0x92,
  HD_tst = 0x93,
  Z80_tst = 0x93,
  HD_tstio = 0x94,
  Z80_tstio = 0x94,
  A80_lbcd = 0x95,
  A80_lded = 0x96,
  A80_lspd = 0x97,
  A80_lixd = 0x98,
  A80_liyd = 0x99,
  A80_sbcd = 0x9A,
  A80_sded = 0x9B,
  A80_sspd = 0x9C,
  A80_sixd = 0x9D,
  A80_siyd = 0x9E,
  A80_xtix = 0x9F,
  A80_xtiy = 0xA0,
  A80_spix = 0xA1,
  A80_spiy = 0xA2,
  A80_pcix = 0xA3,
  A80_pciy = 0xA4,
  A80_mvra = 0xA5,
  A80_mvia = 0xA6,
  A80_mvar = 0xA7,
  A80_mvai = 0xA8,
  A80_addix = 0xA9,
  A80_addiy = 0xAA,
  A80_addc = 0xAB,
  A80_addcix = 0xAC,
  A80_addciy = 0xAD,
  A80_subc = 0xAE,
  A80_subcix = 0xAF,
  A80_subciy = 0xB0,
  A80_jrc = 0xB1,
  A80_jrnc = 0xB2,
  A80_jrz = 0xB3,
  A80_jrnz = 0xB4,
  A80_cmpi = 0xB5,
  A80_cmpd = 0xB6,
  A80_im0 = 0xB7,
  A80_im1 = 0xB8,
  A80_im2 = 0xB9,
  A80_otd = 0xBA,
  A80_oti = 0xBB,
  I5_dsub = 0xBC,
  I5_arhl = 0xBD,
  I5_rdel = 0xBE,
  I5_ldhi = 0xBF,
  I5_ldsi = 0xC0,
  I5_shlx = 0xC1,
  I5_lhlx = 0xC2,
  I5_rstv = 0xC3,
  I5_jx5 = 0xC4,
  I5_jnx5 = 0xC5,
  Z80_cplw = 0xC6,
  Z80_swap = 0xC7,
  Z80_inw = 0xC8,
  Z80_outw = 0xC9,
  Z80_ldw = 0xCA,
  Z80_addw = 0xCB,
  Z80_subw = 0xCC,
  Z80_adcw = 0xCD,
  Z80_sbcw = 0xCE,
  Z80_andw = 0xCF,
  Z80_xorw = 0xD0,
  Z80_orw = 0xD1,
  Z80_cpw = 0xD2,
  Z80_ddir = 0xD3,
  Z80_calr = 0xD4,
  Z80_ldctl = 0xD5,
  Z80_mtest = 0xD6,
  Z80_exxx = 0xD7,
  Z80_exxy = 0xD8,
  Z80_exall = 0xD9,
  Z80_setc = 0xDA,
  Z80_resc = 0xDB,
  Z80_rlcw = 0xDC,
  Z80_rrcw = 0xDD,
  Z80_rlw = 0xDE,
  Z80_rrw = 0xDF,
  Z80_slaw = 0xE0,
  Z80_sraw = 0xE1,
  Z80_srlw = 0xE2,
  Z80_multw = 0xE3,
  Z80_multuw = 0xE4,
  Z80_divuw = 0xE5,
  Z80_outaw = 0xE6,
  Z80_inaw = 0xE7,
  Z80_outa = 0xE8,
  Z80_ina = 0xE9,
  Z80_negw = 0xEA,
  Z80_exts = 0xEB,
  Z80_extsw = 0xEC,
  Z80_btest = 0xED,
  Z80_ldiw = 0xEE,
  Z80_ldirw = 0xEF,
  Z80_lddw = 0xF0,
  Z80_lddrw = 0xF1,
  Z80_iniw = 0xF2,
  Z80_inirw = 0xF3,
  Z80_indw = 0xF4,
  Z80_indrw = 0xF5,
  Z80_outiw = 0xF6,
  Z80_otirw = 0xF7,
  Z80_outdw = 0xF8,
  Z80_otdrw = 0xF9,
  GB_ldh = 0xFA,
  GB_stop = 0xFB,
  I5_last = 0xFC,
};

/* 1738 */
enum _C46A069ECCBAC5339B2B9C1238DA1DE1 : unsigned __int32
{
  I860_null = 0x0,
  I860_adds = 0x1,
  I860_addu = 0x2,
  I860_and = 0x3,
  I860_andh = 0x4,
  I860_andnot = 0x5,
  I860_andnoth = 0x6,
  I860_bc = 0x7,
  I860_bc_t = 0x8,
  I860_bla = 0x9,
  I860_bnc = 0xA,
  I860_bnc_t = 0xB,
  I860_br = 0xC,
  I860_bri = 0xD,
  I860_bte = 0xE,
  I860_btne = 0xF,
  I860_call = 0x10,
  I860_calli = 0x11,
  I860_fadd = 0x12,
  I860_faddp = 0x13,
  I860_faddz = 0x14,
  I860_famov = 0x15,
  I860_fiadd = 0x16,
  I860_fisub = 0x17,
  I860_fix = 0x18,
  I860_fld = 0x19,
  I860_flush = 0x1A,
  I860_fmlow_dd = 0x1B,
  I860_fmul = 0x1C,
  I860_form = 0x1D,
  I860_frcp = 0x1E,
  I860_frsqr = 0x1F,
  I860_fst = 0x20,
  I860_fsub = 0x21,
  I860_ftrunc = 0x22,
  I860_fxfr = 0x23,
  I860_fzchkl = 0x24,
  I860_fzchks = 0x25,
  I860_introvr = 0x26,
  I860_ixfr = 0x27,
  I860_ld_c = 0x28,
  I860_ld = 0x29,
  I860_ldint = 0x2A,
  I860_ldio = 0x2B,
  I860_lock = 0x2C,
  I860_or = 0x2D,
  I860_orh = 0x2E,
  I860_pfadd = 0x2F,
  I860_pfaddp = 0x30,
  I860_pfaddz = 0x31,
  I860_pfamov = 0x32,
  I860_pfeq = 0x33,
  I860_pfgt = 0x34,
  I860_pfiadd = 0x35,
  I860_pfisub = 0x36,
  I860_pfix = 0x37,
  I860_pfld = 0x38,
  I860_pfle = 0x39,
  I860_pfmul = 0x3A,
  I860_pfmul3_dd = 0x3B,
  I860_pform = 0x3C,
  I860_pfsub = 0x3D,
  I860_pftrunc = 0x3E,
  I860_pfzchkl = 0x3F,
  I860_pfzchks = 0x40,
  I860_pst_d = 0x41,
  I860_scyc = 0x42,
  I860_shl = 0x43,
  I860_shr = 0x44,
  I860_shra = 0x45,
  I860_shrd = 0x46,
  I860_st_c = 0x47,
  I860_st = 0x48,
  I860_stio = 0x49,
  I860_subs = 0x4A,
  I860_subu = 0x4B,
  I860_trap = 0x4C,
  I860_unlock = 0x4D,
  I860_xor = 0x4E,
  I860_xorh = 0x4F,
  I860_r2p1 = 0x50,
  I860_r2pt = 0x51,
  I860_r2ap1 = 0x52,
  I860_r2apt = 0x53,
  I860_i2p1 = 0x54,
  I860_i2pt = 0x55,
  I860_i2ap1 = 0x56,
  I860_i2apt = 0x57,
  I860_rat1p2 = 0x58,
  I860_m12apm = 0x59,
  I860_ra1p2 = 0x5A,
  I860_m12ttpa = 0x5B,
  I860_iat1p2 = 0x5C,
  I860_m12tpm = 0x5D,
  I860_ia1p2 = 0x5E,
  I860_m12tpa = 0x5F,
  I860_r2s1 = 0x60,
  I860_r2st = 0x61,
  I860_r2as1 = 0x62,
  I860_r2ast = 0x63,
  I860_i2s1 = 0x64,
  I860_i2st = 0x65,
  I860_i2as1 = 0x66,
  I860_i2ast = 0x67,
  I860_rat1s2 = 0x68,
  I860_m12asm = 0x69,
  I860_ra1s2 = 0x6A,
  I860_m12ttsa = 0x6B,
  I860_iat1s2 = 0x6C,
  I860_m12tsm = 0x6D,
  I860_ia1s2 = 0x6E,
  I860_m12tsa = 0x6F,
  I860_mr2p1 = 0x70,
  I860_mr2pt = 0x71,
  I860_mr2mp1 = 0x72,
  I860_mr2mpt = 0x73,
  I860_mi2p1 = 0x74,
  I860_mi2pt = 0x75,
  I860_mi2mp1 = 0x76,
  I860_mi2mpt = 0x77,
  I860_mrmt1p2 = 0x78,
  I860_mm12mpm = 0x79,
  I860_mrm1p2 = 0x7A,
  I860_mm12ttpm = 0x7B,
  I860_mimt1p2 = 0x7C,
  I860_mm12tpm = 0x7D,
  I860_mim1p2 = 0x7E,
  I860_mr2s1 = 0x7F,
  I860_mr2st = 0x80,
  I860_mr2ms1 = 0x81,
  I860_mr2mst = 0x82,
  I860_mi2s1 = 0x83,
  I860_mi2st = 0x84,
  I860_mi2ms1 = 0x85,
  I860_mi2mst = 0x86,
  I860_mrmt1s2 = 0x87,
  I860_mm12msm = 0x88,
  I860_mrm1s2 = 0x89,
  I860_mm12ttsm = 0x8A,
  I860_mimt1s2 = 0x8B,
  I860_mm12tsm = 0x8C,
  I860_mim1s2 = 0x8D,
  I860_last = 0x8E,
};

/* 1739 */
enum _32AE0FC8A9D5CBD75CD8A50945F15FCA : unsigned __int32
{
  I51_null = 0x0,
  I51_acall = 0x1,
  I51_add = 0x2,
  I51_addc = 0x3,
  I51_ajmp = 0x4,
  I51_anl = 0x5,
  I51_cjne = 0x6,
  I51_clr = 0x7,
  I51_cpl = 0x8,
  I51_da = 0x9,
  I51_dec = 0xA,
  I51_div = 0xB,
  I51_djnz = 0xC,
  I51_inc = 0xD,
  I51_jb = 0xE,
  I51_jbc = 0xF,
  I51_jc = 0x10,
  I51_jmp = 0x11,
  I51_jnb = 0x12,
  I51_jnc = 0x13,
  I51_jnz = 0x14,
  I51_jz = 0x15,
  I51_lcall = 0x16,
  I51_ljmp = 0x17,
  I51_mov = 0x18,
  I51_movc = 0x19,
  I51_movx = 0x1A,
  I51_mul = 0x1B,
  I51_nop = 0x1C,
  I51_orl = 0x1D,
  I51_pop = 0x1E,
  I51_push = 0x1F,
  I51_ret = 0x20,
  I51_reti = 0x21,
  I51_rl = 0x22,
  I51_rlc = 0x23,
  I51_rr = 0x24,
  I51_rrc = 0x25,
  I51_setb = 0x26,
  I51_sjmp = 0x27,
  I51_subb = 0x28,
  I51_swap = 0x29,
  I51_xch = 0x2A,
  I51_xchd = 0x2B,
  I51_xrl = 0x2C,
  I51_jsle = 0x2D,
  I51_jsg = 0x2E,
  I51_jle = 0x2F,
  I51_jg = 0x30,
  I51_jsl = 0x31,
  I51_jsge = 0x32,
  I51_je = 0x33,
  I51_jne = 0x34,
  I51_trap = 0x35,
  I51_ejmp = 0x36,
  I51_ecall = 0x37,
  I51_eret = 0x38,
  I51_movh = 0x39,
  I51_movz = 0x3A,
  I51_movs = 0x3B,
  I51_srl = 0x3C,
  I51_sra = 0x3D,
  I51_sll = 0x3E,
  I51_sub = 0x3F,
  I51_cmp = 0x40,
  I51_emov = 0x41,
  I51_last = 0x42,
};

/* 1740 */
enum _16DB410077B9C880BC0DBFDD6BC1DE27 : unsigned __int32
{
  TMS_null = 0x0,
  TMS_abs = 0x1,
  TMS_adcb = 0x2,
  TMS_add = 0x3,
  TMS_addb = 0x4,
  TMS_addc = 0x5,
  TMS_adds = 0x6,
  TMS_addt = 0x7,
  TMS_adrk = 0x8,
  TMS_and = 0x9,
  TMS_andb = 0xA,
  TMS_apac = 0xB,
  TMS_apl = 0xC,
  TMS_apl2 = 0xD,
  TMS_b = 0xE,
  TMS_bacc = 0xF,
  TMS_baccd = 0x10,
  TMS_banz = 0x11,
  TMS_banzd = 0x12,
  TMS_bcnd = 0x13,
  TMS_bcndd = 0x14,
  TMS_bd = 0x15,
  TMS_bit = 0x16,
  TMS_bitt = 0x17,
  TMS_bldd = 0x18,
  TMS_bldp = 0x19,
  TMS_blpd = 0x1A,
  TMS_bsar = 0x1B,
  TMS_cala = 0x1C,
  TMS_calad = 0x1D,
  TMS_call = 0x1E,
  TMS_calld = 0x1F,
  TMS_cc = 0x20,
  TMS_ccd = 0x21,
  TMS_clrc = 0x22,
  TMS_cmpl = 0x23,
  TMS_cmpr = 0x24,
  TMS_cpl = 0x25,
  TMS_cpl2 = 0x26,
  TMS_crgt = 0x27,
  TMS_crlt = 0x28,
  TMS_dmov = 0x29,
  TMS_estop = 0x2A,
  TMS_exar = 0x2B,
  TMS_idle = 0x2C,
  TMS_idle2 = 0x2D,
  TMS_in = 0x2E,
  TMS_intr = 0x2F,
  TMS_lacb = 0x30,
  TMS_lacc = 0x31,
  TMS_lacl = 0x32,
  TMS_lact = 0x33,
  TMS_lamm = 0x34,
  TMS_lar = 0x35,
  TMS_ldp = 0x36,
  TMS_lmmr = 0x37,
  TMS_lph = 0x38,
  TMS_lst = 0x39,
  TMS_lt = 0x3A,
  TMS_lta = 0x3B,
  TMS_ltd = 0x3C,
  TMS_ltp = 0x3D,
  TMS_lts = 0x3E,
  TMS_mac = 0x3F,
  TMS_macd = 0x40,
  TMS_madd = 0x41,
  TMS_mads = 0x42,
  TMS_mar = 0x43,
  TMS_mpy = 0x44,
  TMS_mpya = 0x45,
  TMS_mpys = 0x46,
  TMS_mpyu = 0x47,
  TMS_neg = 0x48,
  TMS_nmi = 0x49,
  TMS_nop = 0x4A,
  TMS_norm = 0x4B,
  TMS_opl = 0x4C,
  TMS_opl2 = 0x4D,
  TMS_or = 0x4E,
  TMS_orb = 0x4F,
  TMS_out = 0x50,
  TMS_pac = 0x51,
  TMS_pop = 0x52,
  TMS_popd = 0x53,
  TMS_pshd = 0x54,
  TMS_push = 0x55,
  TMS_ret = 0x56,
  TMS_retc = 0x57,
  TMS_retcd = 0x58,
  TMS_retd = 0x59,
  TMS_rete = 0x5A,
  TMS_reti = 0x5B,
  TMS_rol = 0x5C,
  TMS_rolb = 0x5D,
  TMS_ror = 0x5E,
  TMS_rorb = 0x5F,
  TMS_rpt = 0x60,
  TMS_rptb = 0x61,
  TMS_rptz = 0x62,
  TMS_sacb = 0x63,
  TMS_sach = 0x64,
  TMS_sacl = 0x65,
  TMS_samm = 0x66,
  TMS_sar = 0x67,
  TMS_sath = 0x68,
  TMS_satl = 0x69,
  TMS_sbb = 0x6A,
  TMS_sbbb = 0x6B,
  TMS_sbrk = 0x6C,
  TMS_setc = 0x6D,
  TMS_sfl = 0x6E,
  TMS_sflb = 0x6F,
  TMS_sfr = 0x70,
  TMS_sfrb = 0x71,
  TMS_smmr = 0x72,
  TMS_spac = 0x73,
  TMS_sph = 0x74,
  TMS_spl = 0x75,
  TMS_splk = 0x76,
  TMS_spm = 0x77,
  TMS_sqra = 0x78,
  TMS_sqrs = 0x79,
  TMS_sst = 0x7A,
  TMS_sub = 0x7B,
  TMS_subb = 0x7C,
  TMS_subc = 0x7D,
  TMS_subs = 0x7E,
  TMS_subt = 0x7F,
  TMS_tblr = 0x80,
  TMS_tblw = 0x81,
  TMS_trap = 0x82,
  TMS_xc = 0x83,
  TMS_xor = 0x84,
  TMS_xorb = 0x85,
  TMS_xpl = 0x86,
  TMS_xpl2 = 0x87,
  TMS_zalr = 0x88,
  TMS_zap = 0x89,
  TMS_zpr = 0x8A,
  TMS2_abs = 0x8B,
  TMS2_add = 0x8C,
  TMS2_addc = 0x8D,
  TMS2_addh = 0x8E,
  TMS2_addk = 0x8F,
  TMS2_adds = 0x90,
  TMS2_addt = 0x91,
  TMS2_adlk = 0x92,
  TMS2_adrk = 0x93,
  TMS2_and = 0x94,
  TMS2_andk = 0x95,
  TMS2_apac = 0x96,
  TMS2_b = 0x97,
  TMS2_bacc = 0x98,
  TMS2_banz = 0x99,
  TMS2_bbnz = 0x9A,
  TMS2_bbz = 0x9B,
  TMS2_bc = 0x9C,
  TMS2_bgez = 0x9D,
  TMS2_bgz = 0x9E,
  TMS2_bioz = 0x9F,
  TMS2_bit = 0xA0,
  TMS2_bitt = 0xA1,
  TMS2_blez = 0xA2,
  TMS2_blkd = 0xA3,
  TMS2_blkp = 0xA4,
  TMS2_blz = 0xA5,
  TMS2_bnc = 0xA6,
  TMS2_bnv = 0xA7,
  TMS2_bnz = 0xA8,
  TMS2_bv = 0xA9,
  TMS2_bz = 0xAA,
  TMS2_cala = 0xAB,
  TMS2_call = 0xAC,
  TMS2_cmpl = 0xAD,
  TMS2_cmpr = 0xAE,
  TMS2_cnfd = 0xAF,
  TMS2_cnfp = 0xB0,
  TMS2_conf = 0xB1,
  TMS2_dint = 0xB2,
  TMS2_dmov = 0xB3,
  TMS2_eint = 0xB4,
  TMS2_fort = 0xB5,
  TMS2_idle = 0xB6,
  TMS2_in = 0xB7,
  TMS2_lac = 0xB8,
  TMS2_lack = 0xB9,
  TMS2_lact = 0xBA,
  TMS2_lalk = 0xBB,
  TMS2_lar = 0xBC,
  TMS2_lark = 0xBD,
  TMS2_larp = 0xBE,
  TMS2_ldp = 0xBF,
  TMS2_ldpk = 0xC0,
  TMS2_lph = 0xC1,
  TMS2_lrlk = 0xC2,
  TMS2_lst = 0xC3,
  TMS2_lst1 = 0xC4,
  TMS2_lt = 0xC5,
  TMS2_lta = 0xC6,
  TMS2_ltd = 0xC7,
  TMS2_ltp = 0xC8,
  TMS2_lts = 0xC9,
  TMS2_mac = 0xCA,
  TMS2_macd = 0xCB,
  TMS2_mar = 0xCC,
  TMS2_mpy = 0xCD,
  TMS2_mpya = 0xCE,
  TMS2_mpyk = 0xCF,
  TMS2_mpys = 0xD0,
  TMS2_mpyu = 0xD1,
  TMS2_neg = 0xD2,
  TMS2_nop = 0xD3,
  TMS2_norm = 0xD4,
  TMS2_or = 0xD5,
  TMS2_ork = 0xD6,
  TMS2_out = 0xD7,
  TMS2_pac = 0xD8,
  TMS2_pop = 0xD9,
  TMS2_popd = 0xDA,
  TMS2_pshd = 0xDB,
  TMS2_push = 0xDC,
  TMS2_rc = 0xDD,
  TMS2_ret = 0xDE,
  TMS2_rfsm = 0xDF,
  TMS2_rhm = 0xE0,
  TMS2_rol = 0xE1,
  TMS2_ror = 0xE2,
  TMS2_rovm = 0xE3,
  TMS2_rpt = 0xE4,
  TMS2_rptk = 0xE5,
  TMS2_rsxm = 0xE6,
  TMS2_rtc = 0xE7,
  TMS2_rtxm = 0xE8,
  TMS2_rxf = 0xE9,
  TMS2_sach = 0xEA,
  TMS2_sacl = 0xEB,
  TMS2_sar = 0xEC,
  TMS2_sblk = 0xED,
  TMS2_sbrk = 0xEE,
  TMS2_sc = 0xEF,
  TMS2_sfl = 0xF0,
  TMS2_sfr = 0xF1,
  TMS2_sfsm = 0xF2,
  TMS2_shm = 0xF3,
  TMS2_sovm = 0xF4,
  TMS2_spac = 0xF5,
  TMS2_sph = 0xF6,
  TMS2_spl = 0xF7,
  TMS2_spm = 0xF8,
  TMS2_sqra = 0xF9,
  TMS2_sqrs = 0xFA,
  TMS2_sst = 0xFB,
  TMS2_sst1 = 0xFC,
  TMS2_ssxm = 0xFD,
  TMS2_stc = 0xFE,
  TMS2_stxm = 0xFF,
  TMS2_sub = 0x100,
  TMS2_subb = 0x101,
  TMS2_subc = 0x102,
  TMS2_subh = 0x103,
  TMS2_subk = 0x104,
  TMS2_subs = 0x105,
  TMS2_subt = 0x106,
  TMS2_sxf = 0x107,
  TMS2_tblr = 0x108,
  TMS2_tblw = 0x109,
  TMS2_trap = 0x10A,
  TMS2_xor = 0x10B,
  TMS2_xork = 0x10C,
  TMS2_zac = 0x10D,
  TMS2_zalh = 0x10E,
  TMS2_zalr = 0x10F,
  TMS2_zals = 0x110,
  TMS_last = 0x111,
};

/* 1741 */
enum _6FFF11F2835D0DC88B7A63E751D57F89 : unsigned __int32
{
  M65_null = 0x0,
  M65_adc = 0x1,
  M65_anc = 0x2,
  M65_and = 0x3,
  M65_ane = 0x4,
  M65_arr = 0x5,
  M65_asl = 0x6,
  M65_asr = 0x7,
  M65_bcc = 0x8,
  M65_bcs = 0x9,
  M65_beq = 0xA,
  M65_bit = 0xB,
  M65_bmi = 0xC,
  M65_bne = 0xD,
  M65_bpl = 0xE,
  M65_brk = 0xF,
  M65_bvc = 0x10,
  M65_bvs = 0x11,
  M65_clc = 0x12,
  M65_cld = 0x13,
  M65_cli = 0x14,
  M65_clv = 0x15,
  M65_cmp = 0x16,
  M65_cpx = 0x17,
  M65_cpy = 0x18,
  M65_dcp = 0x19,
  M65_dec = 0x1A,
  M65_dex = 0x1B,
  M65_dey = 0x1C,
  M65_eor = 0x1D,
  M65_inc = 0x1E,
  M65_inx = 0x1F,
  M65_iny = 0x20,
  M65_isb = 0x21,
  M65_jmp = 0x22,
  M65_jmpi = 0x23,
  M65_jsr = 0x24,
  M65_lae = 0x25,
  M65_lax = 0x26,
  M65_lda = 0x27,
  M65_ldx = 0x28,
  M65_ldy = 0x29,
  M65_lsr = 0x2A,
  M65_lxa = 0x2B,
  M65_nop = 0x2C,
  M65_ora = 0x2D,
  M65_pha = 0x2E,
  M65_php = 0x2F,
  M65_pla = 0x30,
  M65_plp = 0x31,
  M65_rla = 0x32,
  M65_rol = 0x33,
  M65_ror = 0x34,
  M65_rra = 0x35,
  M65_rti = 0x36,
  M65_rts = 0x37,
  M65_sax = 0x38,
  M65_sbc = 0x39,
  M65_sbx = 0x3A,
  M65_sec = 0x3B,
  M65_sed = 0x3C,
  M65_sei = 0x3D,
  M65_sha = 0x3E,
  M65_shs = 0x3F,
  M65_shx = 0x40,
  M65_shy = 0x41,
  M65_slo = 0x42,
  M65_sre = 0x43,
  M65_sta = 0x44,
  M65_stx = 0x45,
  M65_sty = 0x46,
  M65_tax = 0x47,
  M65_tay = 0x48,
  M65_tsx = 0x49,
  M65_txa = 0x4A,
  M65_txs = 0x4B,
  M65_tya = 0x4C,
  M65_bbr0 = 0x4D,
  M65_bbr1 = 0x4E,
  M65_bbr2 = 0x4F,
  M65_bbr3 = 0x50,
  M65_bbr4 = 0x51,
  M65_bbr5 = 0x52,
  M65_bbr6 = 0x53,
  M65_bbr7 = 0x54,
  M65_bbs0 = 0x55,
  M65_bbs1 = 0x56,
  M65_bbs2 = 0x57,
  M65_bbs3 = 0x58,
  M65_bbs4 = 0x59,
  M65_bbs5 = 0x5A,
  M65_bbs6 = 0x5B,
  M65_bbs7 = 0x5C,
  M65_rmb0 = 0x5D,
  M65_rmb1 = 0x5E,
  M65_rmb2 = 0x5F,
  M65_rmb3 = 0x60,
  M65_rmb4 = 0x61,
  M65_rmb5 = 0x62,
  M65_rmb6 = 0x63,
  M65_rmb7 = 0x64,
  M65_smb0 = 0x65,
  M65_smb1 = 0x66,
  M65_smb2 = 0x67,
  M65_smb3 = 0x68,
  M65_smb4 = 0x69,
  M65_smb5 = 0x6A,
  M65_smb6 = 0x6B,
  M65_smb7 = 0x6C,
  M65_stz = 0x6D,
  M65_tsb = 0x6E,
  M65_trb = 0x6F,
  M65_phy = 0x70,
  M65_ply = 0x71,
  M65_phx = 0x72,
  M65_plx = 0x73,
  M65_bra = 0x74,
  M65_wai = 0x75,
  M65_stp = 0x76,
  M65_last = 0x77,
};

/* 1742 */
enum m65_itype_t : unsigned __int32
{
  M65816_null = 0x0,
  M65816_adc = 0x1,
  M65816_and = 0x2,
  M65816_asl = 0x3,
  M65816_bcc = 0x4,
  M65816_bcs = 0x5,
  M65816_beq = 0x6,
  M65816_bit = 0x7,
  M65816_bmi = 0x8,
  M65816_bne = 0x9,
  M65816_bpl = 0xA,
  M65816_bra = 0xB,
  M65816_brk = 0xC,
  M65816_brl = 0xD,
  M65816_bvc = 0xE,
  M65816_bvs = 0xF,
  M65816_clc = 0x10,
  M65816_cld = 0x11,
  M65816_cli = 0x12,
  M65816_clv = 0x13,
  M65816_cmp = 0x14,
  M65816_cop = 0x15,
  M65816_cpx = 0x16,
  M65816_cpy = 0x17,
  M65816_dec = 0x18,
  M65816_dex = 0x19,
  M65816_dey = 0x1A,
  M65816_eor = 0x1B,
  M65816_inc = 0x1C,
  M65816_inx = 0x1D,
  M65816_iny = 0x1E,
  M65816_jml = 0x1F,
  M65816_jmp = 0x20,
  M65816_jsl = 0x21,
  M65816_jsr = 0x22,
  M65816_lda = 0x23,
  M65816_ldx = 0x24,
  M65816_ldy = 0x25,
  M65816_lsr = 0x26,
  M65816_mvn = 0x27,
  M65816_mvp = 0x28,
  M65816_nop = 0x29,
  M65816_ora = 0x2A,
  M65816_pea = 0x2B,
  M65816_pei = 0x2C,
  M65816_per = 0x2D,
  M65816_pha = 0x2E,
  M65816_phb = 0x2F,
  M65816_phd = 0x30,
  M65816_phk = 0x31,
  M65816_php = 0x32,
  M65816_phx = 0x33,
  M65816_phy = 0x34,
  M65816_pla = 0x35,
  M65816_plb = 0x36,
  M65816_pld = 0x37,
  M65816_plp = 0x38,
  M65816_plx = 0x39,
  M65816_ply = 0x3A,
  M65816_rep = 0x3B,
  M65816_rol = 0x3C,
  M65816_ror = 0x3D,
  M65816_rti = 0x3E,
  M65816_rtl = 0x3F,
  M65816_rts = 0x40,
  M65816_sbc = 0x41,
  M65816_sec = 0x42,
  M65816_sed = 0x43,
  M65816_sei = 0x44,
  M65816_sep = 0x45,
  M65816_sta = 0x46,
  M65816_stp = 0x47,
  M65816_stx = 0x48,
  M65816_sty = 0x49,
  M65816_stz = 0x4A,
  M65816_tax = 0x4B,
  M65816_tay = 0x4C,
  M65816_tcd = 0x4D,
  M65816_tcs = 0x4E,
  M65816_tdc = 0x4F,
  M65816_trb = 0x50,
  M65816_tsb = 0x51,
  M65816_tsc = 0x52,
  M65816_tsx = 0x53,
  M65816_txa = 0x54,
  M65816_txs = 0x55,
  M65816_txy = 0x56,
  M65816_tya = 0x57,
  M65816_tyx = 0x58,
  M65816_wai = 0x59,
  M65816_wdm = 0x5A,
  M65816_xba = 0x5B,
  M65816_xce = 0x5C,
  M65816_last = 0x5D,
};

/* 1743 */
enum _AF91462B75AFE921B3530C2E678F17DE : unsigned __int32
{
  pdp_null = 0x0,
  pdp_halt = 0x1,
  pdp_wait = 0x2,
  pdp_rti = 0x3,
  pdp_bpt = 0x4,
  pdp_iot = 0x5,
  pdp_reset = 0x6,
  pdp_rtt = 0x7,
  pdp_mfpt = 0x8,
  pdp_jmp = 0x9,
  pdp_rts = 0xA,
  pdp_spl = 0xB,
  pdp_nop = 0xC,
  pdp_clc = 0xD,
  pdp_clv = 0xE,
  pdp_clz = 0xF,
  pdp_cln = 0x10,
  pdp_ccc = 0x11,
  pdp_sec = 0x12,
  pdp_sev = 0x13,
  pdp_sez = 0x14,
  pdp_sen = 0x15,
  pdp_scc = 0x16,
  pdp_swab = 0x17,
  pdp_br = 0x18,
  pdp_bne = 0x19,
  pdp_beq = 0x1A,
  pdp_bge = 0x1B,
  pdp_blt = 0x1C,
  pdp_bgt = 0x1D,
  pdp_ble = 0x1E,
  pdp_jsr = 0x1F,
  pdp_clr = 0x20,
  pdp_com = 0x21,
  pdp_inc = 0x22,
  pdp_dec = 0x23,
  pdp_neg = 0x24,
  pdp_adc = 0x25,
  pdp_sbc = 0x26,
  pdp_tst = 0x27,
  pdp_ror = 0x28,
  pdp_rol = 0x29,
  pdp_asr = 0x2A,
  pdp_asl = 0x2B,
  pdp_mark = 0x2C,
  pdp_mfpi = 0x2D,
  pdp_mtpi = 0x2E,
  pdp_sxt = 0x2F,
  pdp_mov = 0x30,
  pdp_cmp = 0x31,
  pdp_bit = 0x32,
  pdp_bic = 0x33,
  pdp_bis = 0x34,
  pdp_add = 0x35,
  pdp_sub = 0x36,
  pdp_mul = 0x37,
  pdp_div = 0x38,
  pdp_ash = 0x39,
  pdp_ashc = 0x3A,
  pdp_xor = 0x3B,
  pdp_fadd = 0x3C,
  pdp_fsub = 0x3D,
  pdp_fmul = 0x3E,
  pdp_fdiv = 0x3F,
  pdp_sob = 0x40,
  pdp_bpl = 0x41,
  pdp_bmi = 0x42,
  pdp_bhi = 0x43,
  pdp_blos = 0x44,
  pdp_bvc = 0x45,
  pdp_bvs = 0x46,
  pdp_bcc = 0x47,
  pdp_bcs = 0x48,
  pdp_emt = 0x49,
  pdp_trap = 0x4A,
  pdp_mtps = 0x4B,
  pdp_mfpd = 0x4C,
  pdp_mtpd = 0x4D,
  pdp_mfps = 0x4E,
  pdp_cfcc = 0x4F,
  pdp_setf = 0x50,
  pdp_seti = 0x51,
  pdp_setd = 0x52,
  pdp_setl = 0x53,
  pdp_ldfps = 0x54,
  pdp_stfps = 0x55,
  pdp_stst = 0x56,
  pdp_clrd = 0x57,
  pdp_tstd = 0x58,
  pdp_absd = 0x59,
  pdp_negd = 0x5A,
  pdp_muld = 0x5B,
  pdp_modd = 0x5C,
  pdp_addd = 0x5D,
  pdp_ldd = 0x5E,
  pdp_subd = 0x5F,
  pdp_cmpd = 0x60,
  pdp_std = 0x61,
  pdp_divd = 0x62,
  pdp_stexp = 0x63,
  pdp_stcdi = 0x64,
  pdp_stcdf = 0x65,
  pdp_ldexp = 0x66,
  pdp_ldcif = 0x67,
  pdp_ldcfd = 0x68,
  pdp_call = 0x69,
  pdp_return = 0x6A,
  pdp_compcc = 0x6B,
  pdp_last = 0x6C,
};

/* 1744 */
enum _4128853ACAA9BBDE95E7DB551EADDCD7 : unsigned __int32
{
  mc_null = 0x0,
  mc_abcd = 0x1,
  mc_add = 0x2,
  mc_adda = 0x3,
  mc_addi = 0x4,
  mc_addq = 0x5,
  mc_addx = 0x6,
  mc_and = 0x7,
  mc_andi = 0x8,
  mc_asl = 0x9,
  mc_asr = 0xA,
  mc_b = 0xB,
  mc_bchg = 0xC,
  mc_bclr = 0xD,
  mc_bftst = 0xE,
  mc_bfchg = 0xF,
  mc_bfclr = 0x10,
  mc_bfset = 0x11,
  mc_bfextu = 0x12,
  mc_bfexts = 0x13,
  mc_bfffo = 0x14,
  mc_bfins = 0x15,
  mc_bgnd = 0x16,
  mc_bkpt = 0x17,
  mc_bra = 0x18,
  mc_bset = 0x19,
  mc_bsr = 0x1A,
  mc_btst = 0x1B,
  mc_callm = 0x1C,
  mc_cas = 0x1D,
  mc_cas2 = 0x1E,
  mc_chk = 0x1F,
  mc_chk2 = 0x20,
  mc_cinv = 0x21,
  mc_clr = 0x22,
  mc_cmp = 0x23,
  mc_cmp2 = 0x24,
  mc_cmpa = 0x25,
  mc_cmpi = 0x26,
  mc_cmpm = 0x27,
  mc_cpush = 0x28,
  mc_db = 0x29,
  mc_divs = 0x2A,
  mc_divsl = 0x2B,
  mc_divu = 0x2C,
  mc_divul = 0x2D,
  mc_eor = 0x2E,
  mc_eori = 0x2F,
  mc_exg = 0x30,
  mc_ext = 0x31,
  mc_extb = 0x32,
  mc_fabs = 0x33,
  mc_facos = 0x34,
  mc_fadd = 0x35,
  mc_fasin = 0x36,
  mc_fatan = 0x37,
  mc_fatanh = 0x38,
  mc_fb = 0x39,
  mc_fcmp = 0x3A,
  mc_fcos = 0x3B,
  mc_fcosh = 0x3C,
  mc_fdabs = 0x3D,
  mc_fdadd = 0x3E,
  mc_fdb = 0x3F,
  mc_fddiv = 0x40,
  mc_fdiv = 0x41,
  mc_fdmove = 0x42,
  mc_fdmul = 0x43,
  mc_fdneg = 0x44,
  mc_fdsqrt = 0x45,
  mc_fdsub = 0x46,
  mc_fetox = 0x47,
  mc_fetoxm1 = 0x48,
  mc_fgetexp = 0x49,
  mc_fgetman = 0x4A,
  mc_fint = 0x4B,
  mc_fintrz = 0x4C,
  mc_flog2 = 0x4D,
  mc_flog10 = 0x4E,
  mc_flogn = 0x4F,
  mc_flognp1 = 0x50,
  mc_fmod = 0x51,
  mc_fmove = 0x52,
  mc_fmovecr = 0x53,
  mc_fmovem = 0x54,
  mc_fmul = 0x55,
  mc_fneg = 0x56,
  mc_fnop = 0x57,
  mc_frem = 0x58,
  mc_frestore = 0x59,
  mc_fs = 0x5A,
  mc_fsabs = 0x5B,
  mc_fsadd = 0x5C,
  mc_fsave = 0x5D,
  mc_fscale = 0x5E,
  mc_fsdiv = 0x5F,
  mc_fsgldiv = 0x60,
  mc_fsglmul = 0x61,
  mc_fsin = 0x62,
  mc_fsincos = 0x63,
  mc_fsinh = 0x64,
  mc_fsmove = 0x65,
  mc_fsmul = 0x66,
  mc_fsneg = 0x67,
  mc_fsqrt = 0x68,
  mc_fssqrt = 0x69,
  mc_fssub = 0x6A,
  mc_fsub = 0x6B,
  mc_ftan = 0x6C,
  mc_ftanh = 0x6D,
  mc_ftentox = 0x6E,
  mc_ftrap = 0x6F,
  mc_ftst = 0x70,
  mc_ftwotox = 0x71,
  mc_halt = 0x72,
  mc_illegal = 0x73,
  mc_jmp = 0x74,
  mc_jsr = 0x75,
  mc_lea = 0x76,
  mc_link = 0x77,
  mc_lpstop = 0x78,
  mc_lsl = 0x79,
  mc_lsr = 0x7A,
  mc_mac = 0x7B,
  mc_macl = 0x7C,
  mc_move = 0x7D,
  mc_move16 = 0x7E,
  mc_movea = 0x7F,
  mc_movec = 0x80,
  mc_movem = 0x81,
  mc_movep = 0x82,
  mc_moveq = 0x83,
  mc_moves = 0x84,
  mc_msac = 0x85,
  mc_msacl = 0x86,
  mc_muls = 0x87,
  mc_mulu = 0x88,
  mc_nbcd = 0x89,
  mc_neg = 0x8A,
  mc_negx = 0x8B,
  mc_nop = 0x8C,
  mc_not = 0x8D,
  mc_or = 0x8E,
  mc_ori = 0x8F,
  mc_pack = 0x90,
  mc_pea = 0x91,
  mc_pb = 0x92,
  mc_pdb = 0x93,
  mc_pflush = 0x94,
  mc_pflushr = 0x95,
  mc_ploadr = 0x96,
  mc_ploadw = 0x97,
  mc_pmove = 0x98,
  mc_prestore = 0x99,
  mc_psave = 0x9A,
  mc_ps = 0x9B,
  mc_ptestr = 0x9C,
  mc_ptestw = 0x9D,
  mc_ptrap = 0x9E,
  mc_pulse = 0x9F,
  mc_pvalid = 0xA0,
  mc_rol = 0xA1,
  mc_ror = 0xA2,
  mc_roxl = 0xA3,
  mc_roxr = 0xA4,
  mc_reset = 0xA5,
  mc_rtd = 0xA6,
  mc_rte = 0xA7,
  mc_rtm = 0xA8,
  mc_rtr = 0xA9,
  mc_rts = 0xAA,
  mc_sbcd = 0xAB,
  mc_s = 0xAC,
  mc_stop = 0xAD,
  mc_sub = 0xAE,
  mc_suba = 0xAF,
  mc_subi = 0xB0,
  mc_subq = 0xB1,
  mc_subx = 0xB2,
  mc_swap = 0xB3,
  mc_tas = 0xB4,
  mc_tbl = 0xB5,
  mc_trap = 0xB6,
  mc_trapv = 0xB7,
  mc_tst = 0xB8,
  mc_unlk = 0xB9,
  mc_unpk = 0xBA,
  mc_wddata = 0xBB,
  mc_wdebug = 0xBC,
  mc_atrap = 0xBD,
  mc_bitrev = 0xBE,
  mc_byterev = 0xBF,
  mc_ff1 = 0xC0,
  mc_intouch = 0xC1,
  mc_mov3q = 0xC2,
  mc_mvs = 0xC3,
  mc_mvz = 0xC4,
  mc_sats = 0xC5,
  mc_movclr = 0xC6,
  mc_maaac = 0xC7,
  mc_masac = 0xC8,
  mc_msaac = 0xC9,
  mc_mssac = 0xCA,
  mc_remsl = 0xCB,
  mc_remul = 0xCC,
  mc_last = 0xCD,
};

/* 1745 */
enum _D85C7057457CDA45599059B9A17E4B84 : unsigned __int32
{
  mc8_null = 0x0,
  mc8_aba = 0x1,
  mc8_ab = 0x2,
  mc8_adc = 0x3,
  mc8_add = 0x4,
  mc8_addd = 0x5,
  mc8_ais = 0x6,
  mc8_aix = 0x7,
  mc8_and = 0x8,
  mc8_andcc = 0x9,
  mc8_asr = 0xA,
  mc8_bcc = 0xB,
  mc8_bclr = 0xC,
  mc8_bcs = 0xD,
  mc8_beq = 0xE,
  mc8_bge = 0xF,
  mc8_bgt = 0x10,
  mc8_bhcc = 0x11,
  mc8_bhcs = 0x12,
  mc8_bhi = 0x13,
  mc8_bhs = 0x14,
  mc8_bih = 0x15,
  mc8_bil = 0x16,
  mc8_bit = 0x17,
  mc8_ble = 0x18,
  mc8_blo = 0x19,
  mc8_bls = 0x1A,
  mc8_blt = 0x1B,
  mc8_bmc = 0x1C,
  mc8_bmi = 0x1D,
  mc8_bms = 0x1E,
  mc8_bne = 0x1F,
  mc8_bpl = 0x20,
  mc8_bra = 0x21,
  mc8_brclr = 0x22,
  mc8_brn = 0x23,
  mc8_brset = 0x24,
  mc8_bset = 0x25,
  mc8_bsr = 0x26,
  mc8_bvc = 0x27,
  mc8_bvs = 0x28,
  mc8_cba = 0x29,
  mc8_cbeq = 0x2A,
  mc8_clc = 0x2B,
  mc8_cli = 0x2C,
  mc8_clr = 0x2D,
  mc8_clv = 0x2E,
  mc8_cmp = 0x2F,
  mc8_com = 0x30,
  mc8_cp = 0x31,
  mc8_cpd = 0x32,
  mc8_cphx = 0x33,
  mc8_cpx = 0x34,
  mc8_cwai = 0x35,
  mc8_daa = 0x36,
  mc8_dbnz = 0x37,
  mc8_de = 0x38,
  mc8_dec = 0x39,
  mc8_des = 0x3A,
  mc8_div = 0x3B,
  mc8_eor = 0x3C,
  mc8_exg = 0x3D,
  mc8_fdiv = 0x3E,
  mc8_idiv = 0x3F,
  mc8_in = 0x40,
  mc8_inc = 0x41,
  mc8_ins = 0x42,
  mc8_jmp = 0x43,
  mc8_jsr = 0x44,
  mc8_ld = 0x45,
  mc8_lda = 0x46,
  mc8_ldd = 0x47,
  mc8_ldhx = 0x48,
  mc8_lds = 0x49,
  mc8_ldx = 0x4A,
  mc8_lea = 0x4B,
  mc8_lsl = 0x4C,
  mc8_lsld = 0x4D,
  mc8_lsr = 0x4E,
  mc8_lsrd = 0x4F,
  mc8_mov = 0x50,
  mc8_mul = 0x51,
  mc8_neg = 0x52,
  mc8_nop = 0x53,
  mc8_nsa = 0x54,
  mc8_ora = 0x55,
  mc8_orcc = 0x56,
  mc8_psh = 0x57,
  mc8_psha = 0x58,
  mc8_pshb = 0x59,
  mc8_pshh = 0x5A,
  mc8_pshx = 0x5B,
  mc8_pul = 0x5C,
  mc8_pula = 0x5D,
  mc8_pulb = 0x5E,
  mc8_pulh = 0x5F,
  mc8_pulx = 0x60,
  mc8_rol = 0x61,
  mc8_ror = 0x62,
  mc8_rsp = 0x63,
  mc8_rti = 0x64,
  mc8_rts = 0x65,
  mc8_sba = 0x66,
  mc8_sbc = 0x67,
  mc8_sec = 0x68,
  mc8_sei = 0x69,
  mc8_sev = 0x6A,
  mc8_sex = 0x6B,
  mc8_slp = 0x6C,
  mc8_st = 0x6D,
  mc8_sta = 0x6E,
  mc8_std = 0x6F,
  mc8_sthx = 0x70,
  mc8_stop = 0x71,
  mc8_sts = 0x72,
  mc8_stx = 0x73,
  mc8_sub = 0x74,
  mc8_subd = 0x75,
  mc8_swi = 0x76,
  mc8_sync = 0x77,
  mc8_tab = 0x78,
  mc8_tap = 0x79,
  mc8_tax = 0x7A,
  mc8_tba = 0x7B,
  mc8_test = 0x7C,
  mc8_tfr = 0x7D,
  mc8_tpa = 0x7E,
  mc8_ts = 0x7F,
  mc8_tst = 0x80,
  mc8_tsx = 0x81,
  mc8_txa = 0x82,
  mc8_txs = 0x83,
  mc8_tys = 0x84,
  mc8_wai = 0x85,
  mc8_wait = 0x86,
  mc8_xgd = 0x87,
  mc8_1 = 0x88,
  mc8_2 = 0x89,
  mc8_os9 = 0x8A,
  mc8_aim = 0x8B,
  mc8_oim = 0x8C,
  mc8_eim = 0x8D,
  mc8_tim = 0x8E,
  mc8_bgnd = 0x8F,
  mc8_call = 0x90,
  mc8_rtc = 0x91,
  mc8_skip1 = 0x92,
  mc8_skip2 = 0x93,
  mc8_last = 0x94,
};

/* 1746 */
enum _D36E12C1735F187932BE64E09404B8E3 : unsigned __int32
{
  j_nop = 0x0,
  j_aconst_null = 0x1,
  j_iconst_m1 = 0x2,
  j_iconst_0 = 0x3,
  j_iconst_1 = 0x4,
  j_iconst_2 = 0x5,
  j_iconst_3 = 0x6,
  j_iconst_4 = 0x7,
  j_iconst_5 = 0x8,
  j_lconst_0 = 0x9,
  j_lconst_1 = 0xA,
  j_fconst_0 = 0xB,
  j_fconst_1 = 0xC,
  j_fconst_2 = 0xD,
  j_dconst_0 = 0xE,
  j_dconst_1 = 0xF,
  j_bipush = 0x10,
  j_sipush = 0x11,
  j_ldc = 0x12,
  j_ldcw = 0x13,
  j_ldc2w = 0x14,
  j_iload = 0x15,
  j_lload = 0x16,
  j_fload = 0x17,
  j_dload = 0x18,
  j_aload = 0x19,
  j_iload_0 = 0x1A,
  j_iload_1 = 0x1B,
  j_iload_2 = 0x1C,
  j_iload_3 = 0x1D,
  j_lload_0 = 0x1E,
  j_lload_1 = 0x1F,
  j_lload_2 = 0x20,
  j_lload_3 = 0x21,
  j_fload_0 = 0x22,
  j_fload_1 = 0x23,
  j_fload_2 = 0x24,
  j_fload_3 = 0x25,
  j_dload_0 = 0x26,
  j_dload_1 = 0x27,
  j_dload_2 = 0x28,
  j_dload_3 = 0x29,
  j_aload_0 = 0x2A,
  j_aload_1 = 0x2B,
  j_aload_2 = 0x2C,
  j_aload_3 = 0x2D,
  j_iaload = 0x2E,
  j_laload = 0x2F,
  j_faload = 0x30,
  j_daload = 0x31,
  j_aaload = 0x32,
  j_baload = 0x33,
  j_caload = 0x34,
  j_saload = 0x35,
  j_istore = 0x36,
  j_lstore = 0x37,
  j_fstore = 0x38,
  j_dstore = 0x39,
  j_astore = 0x3A,
  j_istore_0 = 0x3B,
  j_istore_1 = 0x3C,
  j_istore_2 = 0x3D,
  j_istore_3 = 0x3E,
  j_lstore_0 = 0x3F,
  j_lstore_1 = 0x40,
  j_lstore_2 = 0x41,
  j_lstore_3 = 0x42,
  j_fstore_0 = 0x43,
  j_fstore_1 = 0x44,
  j_fstore_2 = 0x45,
  j_fstore_3 = 0x46,
  j_dstore_0 = 0x47,
  j_dstore_1 = 0x48,
  j_dstore_2 = 0x49,
  j_dstore_3 = 0x4A,
  j_astore_0 = 0x4B,
  j_astore_1 = 0x4C,
  j_astore_2 = 0x4D,
  j_astore_3 = 0x4E,
  j_iastore = 0x4F,
  j_lastore = 0x50,
  j_fastore = 0x51,
  j_dastore = 0x52,
  j_aastore = 0x53,
  j_bastore = 0x54,
  j_castore = 0x55,
  j_sastore = 0x56,
  j_pop = 0x57,
  j_pop2 = 0x58,
  j_dup = 0x59,
  j_dup_x1 = 0x5A,
  j_dup_x2 = 0x5B,
  j_dup2 = 0x5C,
  j_dup2_x1 = 0x5D,
  j_dup2_x2 = 0x5E,
  j_swap = 0x5F,
  j_iadd = 0x60,
  j_ladd = 0x61,
  j_fadd = 0x62,
  j_dadd = 0x63,
  j_isub = 0x64,
  j_lsub = 0x65,
  j_fsub = 0x66,
  j_dsub = 0x67,
  j_imul = 0x68,
  j_lmul = 0x69,
  j_fmul = 0x6A,
  j_dmul = 0x6B,
  j_idiv = 0x6C,
  j_ldiv = 0x6D,
  j_fdiv = 0x6E,
  j_ddiv = 0x6F,
  j_irem = 0x70,
  j_lrem = 0x71,
  j_frem = 0x72,
  j_drem = 0x73,
  j_ineg = 0x74,
  j_lneg = 0x75,
  j_fneg = 0x76,
  j_dneg = 0x77,
  j_ishl = 0x78,
  j_lshl = 0x79,
  j_ishr = 0x7A,
  j_lshr = 0x7B,
  j_iushr = 0x7C,
  j_lushr = 0x7D,
  j_iand = 0x7E,
  j_land = 0x7F,
  j_ior = 0x80,
  j_lor = 0x81,
  j_ixor = 0x82,
  j_lxor = 0x83,
  j_iinc = 0x84,
  j_i2l = 0x85,
  j_i2f = 0x86,
  j_i2d = 0x87,
  j_l2i = 0x88,
  j_l2f = 0x89,
  j_l2d = 0x8A,
  j_f2i = 0x8B,
  j_f2l = 0x8C,
  j_f2d = 0x8D,
  j_d2i = 0x8E,
  j_d2l = 0x8F,
  j_d2f = 0x90,
  j_i2b = 0x91,
  j_i2c = 0x92,
  j_i2s = 0x93,
  j_lcmp = 0x94,
  j_fcmpl = 0x95,
  j_fcmpg = 0x96,
  j_dcmpl = 0x97,
  j_dcmpg = 0x98,
  j_ifeq = 0x99,
  j_ifne = 0x9A,
  j_iflt = 0x9B,
  j_ifge = 0x9C,
  j_ifgt = 0x9D,
  j_ifle = 0x9E,
  j_if_icmpeq = 0x9F,
  j_if_icmpne = 0xA0,
  j_if_icmplt = 0xA1,
  j_if_icmpge = 0xA2,
  j_if_icmpgt = 0xA3,
  j_if_icmple = 0xA4,
  j_if_acmpeq = 0xA5,
  j_if_acmpne = 0xA6,
  j_goto = 0xA7,
  j_jsr = 0xA8,
  j_ret = 0xA9,
  j_tableswitch = 0xAA,
  j_lookupswitch = 0xAB,
  j_ireturn = 0xAC,
  j_lreturn = 0xAD,
  j_freturn = 0xAE,
  j_dreturn = 0xAF,
  j_areturn = 0xB0,
  j_return = 0xB1,
  j_getstatic = 0xB2,
  j_putstatic = 0xB3,
  j_getfield = 0xB4,
  j_putfield = 0xB5,
  j_invokevirtual = 0xB6,
  j_invokespecial = 0xB7,
  j_invokestatic = 0xB8,
  j_invokeinterface = 0xB9,
  j_invokedynamic = 0xBA,
  j_new = 0xBB,
  j_newarray = 0xBC,
  j_anewarray = 0xBD,
  j_arraylength = 0xBE,
  j_athrow = 0xBF,
  j_checkcast = 0xC0,
  j_instanceof = 0xC1,
  j_monitorenter = 0xC2,
  j_monitorexit = 0xC3,
  j_wide = 0xC4,
  j_multianewarray = 0xC5,
  j_ifnull = 0xC6,
  j_ifnonnull = 0xC7,
  j_goto_w = 0xC8,
  j_jsr_w = 0xC9,
  j_breakpoint = 0xCA,
  j_lastnorm = 0xCB,
  j_a_invokesuper = 0xCB,
  j_a_invokevirtualobject = 0xCC,
  j_a_invokeignored = 0xCD,
  j_a_software = 0xCE,
  j_a_hardware = 0xCF,
  j_last = 0xD0,
};

/* 1747 */
enum name_quick : unsigned __int32
{
  j_ldc_quick = 0xCB,
  j_ldcw_quick = 0xCC,
  j_ldc2w_quick = 0xCD,
  j_getfield_quick = 0xCE,
  j_putfield_quick = 0xCF,
  j_getfield2_quick = 0xD0,
  j_putfield2_quick = 0xD1,
  j_getstatic_quick = 0xD2,
  j_putstatic_quick = 0xD3,
  j_getstatic2_quick = 0xD4,
  j_putstatic2_quick = 0xD5,
  j_invokevirtual_quick = 0xD6,
  j_invokenonvirtual_quick = 0xD7,
  j_invokesuper_quick = 0xD8,
  j_invokestatic_quick = 0xD9,
  j_invokeinterface_quick = 0xDA,
  j_invokevirtualobject_quick = 0xDB,
  j_invokeignored_quick = 0xDC,
  j_new_quick = 0xDD,
  j_anewarray_quick = 0xDE,
  j_multianewarray_quick = 0xDF,
  j_checkcast_quick = 0xE0,
  j_instanceof_quick = 0xE1,
  j_invokevirtual_quick_w = 0xE2,
  j_getfield_quick_w = 0xE3,
  j_putfield_quick_w = 0xE4,
  j_quick_last = 0xE5,
};

/* 1748 */
enum _A2D27DEC506196B2AFD43577ED2E1BBE : unsigned __int32
{
  ARM_null = 0x0,
  ARM_ret = 0x1,
  ARM_nop = 0x2,
  ARM_b = 0x3,
  ARM_bl = 0x4,
  ARM_asr = 0x5,
  ARM_lsl = 0x6,
  ARM_lsr = 0x7,
  ARM_ror = 0x8,
  ARM_neg = 0x9,
  ARM_and = 0xA,
  ARM_eor = 0xB,
  ARM_sub = 0xC,
  ARM_rsb = 0xD,
  ARM_add = 0xE,
  ARM_adc = 0xF,
  ARM_sbc = 0x10,
  ARM_rsc = 0x11,
  ARM_tst = 0x12,
  ARM_teq = 0x13,
  ARM_cmp = 0x14,
  ARM_cmn = 0x15,
  ARM_orr = 0x16,
  ARM_mov = 0x17,
  ARM_bic = 0x18,
  ARM_mvn = 0x19,
  ARM_mrs = 0x1A,
  ARM_msr = 0x1B,
  ARM_mul = 0x1C,
  ARM_mla = 0x1D,
  ARM_ldr = 0x1E,
  ARM_ldrpc = 0x1F,
  ARM_str = 0x20,
  ARM_ldm = 0x21,
  ARM_stm = 0x22,
  ARM_swp = 0x23,
  ARM_svc = 0x24,
  ARM_smull = 0x25,
  ARM_smlal = 0x26,
  ARM_umull = 0x27,
  ARM_umlal = 0x28,
  ARM_bx = 0x29,
  ARM_pop = 0x2A,
  ARM_push = 0x2B,
  ARM_adr = 0x2C,
  ARM_bkpt = 0x2D,
  ARM_blx1 = 0x2E,
  ARM_blx2 = 0x2F,
  ARM_clz = 0x30,
  ARM_ldrd = 0x31,
  ARM_pld = 0x32,
  ARM_qadd = 0x33,
  ARM_qdadd = 0x34,
  ARM_qdsub = 0x35,
  ARM_qsub = 0x36,
  ARM_smlabb = 0x37,
  ARM_smlatb = 0x38,
  ARM_smlabt = 0x39,
  ARM_smlatt = 0x3A,
  ARM_smlalbb = 0x3B,
  ARM_smlaltb = 0x3C,
  ARM_smlalbt = 0x3D,
  ARM_smlaltt = 0x3E,
  ARM_smlawb = 0x3F,
  ARM_smulwb = 0x40,
  ARM_smlawt = 0x41,
  ARM_smulwt = 0x42,
  ARM_smulbb = 0x43,
  ARM_smultb = 0x44,
  ARM_smulbt = 0x45,
  ARM_smultt = 0x46,
  ARM_strd = 0x47,
  xScale_mia = 0x48,
  xScale_miaph = 0x49,
  xScale_miabb = 0x4A,
  xScale_miabt = 0x4B,
  xScale_miatb = 0x4C,
  xScale_miatt = 0x4D,
  xScale_mar = 0x4E,
  xScale_mra = 0x4F,
  ARM_movl = 0x50,
  ARM_adrl = 0x51,
  ARM_swbkpt = 0x52,
  ARM_cdp = 0x53,
  ARM_cdp2 = 0x54,
  ARM_ldc = 0x55,
  ARM_ldc2 = 0x56,
  ARM_stc = 0x57,
  ARM_stc2 = 0x58,
  ARM_mrc = 0x59,
  ARM_mrc2 = 0x5A,
  ARM_mcr = 0x5B,
  ARM_mcr2 = 0x5C,
  ARM_mcrr = 0x5D,
  ARM_mrrc = 0x5E,
  ARM_fabsd = 0x5F,
  ARM_fabss = 0x60,
  ARM_faddd = 0x61,
  ARM_fadds = 0x62,
  ARM_fcmpd = 0x63,
  ARM_fcmps = 0x64,
  ARM_fcmped = 0x65,
  ARM_fcmpes = 0x66,
  ARM_fcmpezd = 0x67,
  ARM_fcmpezs = 0x68,
  ARM_fcmpzd = 0x69,
  ARM_fcmpzs = 0x6A,
  ARM_fcpyd = 0x6B,
  ARM_fcpys = 0x6C,
  ARM_fcvtsd = 0x6D,
  ARM_fcvtds = 0x6E,
  ARM_fdivd = 0x6F,
  ARM_fdivs = 0x70,
  ARM_fldd = 0x71,
  ARM_flds = 0x72,
  ARM_fldmd = 0x73,
  ARM_fldms = 0x74,
  ARM_fldmx = 0x75,
  ARM_fmacd = 0x76,
  ARM_fmacs = 0x77,
  ARM_fmscd = 0x78,
  ARM_fmscs = 0x79,
  ARM_fmstat = 0x7A,
  ARM_fmuld = 0x7B,
  ARM_fmuls = 0x7C,
  ARM_fnegd = 0x7D,
  ARM_fnegs = 0x7E,
  ARM_fnmacd = 0x7F,
  ARM_fnmacs = 0x80,
  ARM_fnmscd = 0x81,
  ARM_fnmscs = 0x82,
  ARM_fnmuld = 0x83,
  ARM_fnmuls = 0x84,
  ARM_fsitod = 0x85,
  ARM_fsitos = 0x86,
  ARM_fsqrtd = 0x87,
  ARM_fsqrts = 0x88,
  ARM_fstd = 0x89,
  ARM_fsts = 0x8A,
  ARM_fstmd = 0x8B,
  ARM_fstms = 0x8C,
  ARM_fstmx = 0x8D,
  ARM_fsubd = 0x8E,
  ARM_fsubs = 0x8F,
  ARM_ftosid = 0x90,
  ARM_ftosis = 0x91,
  ARM_ftosizd = 0x92,
  ARM_ftosizs = 0x93,
  ARM_ftouid = 0x94,
  ARM_ftouis = 0x95,
  ARM_ftouizd = 0x96,
  ARM_ftouizs = 0x97,
  ARM_fuitod = 0x98,
  ARM_fuitos = 0x99,
  ARM_fmdhr = 0x9A,
  ARM_fmrdh = 0x9B,
  ARM_fmdlr = 0x9C,
  ARM_fmrdl = 0x9D,
  ARM_fmxr = 0x9E,
  ARM_fmrx = 0x9F,
  ARM_fmsr = 0xA0,
  ARM_fmrs = 0xA1,
  ARM_fmdrr = 0xA2,
  ARM_fmrrd = 0xA3,
  ARM_fmsrr = 0xA4,
  ARM_fmrrs = 0xA5,
  ARM_bxj = 0xA6,
  ARM_mcrr2 = 0xA7,
  ARM_mrrc2 = 0xA8,
  ARM_cps = 0xA9,
  ARM_cpsid = 0xAA,
  ARM_cpsie = 0xAB,
  ARM_ldrex = 0xAC,
  ARM_pkhbt = 0xAD,
  ARM_pkhtb = 0xAE,
  ARM_qadd16 = 0xAF,
  ARM_qadd8 = 0xB0,
  ARM_qaddsubx = 0xB1,
  ARM_qsub16 = 0xB2,
  ARM_qsub8 = 0xB3,
  ARM_qsubaddx = 0xB4,
  ARM_rev = 0xB5,
  ARM_rev16 = 0xB6,
  ARM_revsh = 0xB7,
  ARM_rfe = 0xB8,
  ARM_sadd16 = 0xB9,
  ARM_sadd8 = 0xBA,
  ARM_saddsubx = 0xBB,
  ARM_sel = 0xBC,
  ARM_setend = 0xBD,
  ARM_shadd16 = 0xBE,
  ARM_shadd8 = 0xBF,
  ARM_shaddsubx = 0xC0,
  ARM_shsub16 = 0xC1,
  ARM_shsub8 = 0xC2,
  ARM_shsubaddx = 0xC3,
  ARM_smlad = 0xC4,
  ARM_smladx = 0xC5,
  ARM_smuad = 0xC6,
  ARM_smuadx = 0xC7,
  ARM_smlald = 0xC8,
  ARM_smlaldx = 0xC9,
  ARM_smlsd = 0xCA,
  ARM_smlsdx = 0xCB,
  ARM_smusd = 0xCC,
  ARM_smusdx = 0xCD,
  ARM_smlsld = 0xCE,
  ARM_smlsldx = 0xCF,
  ARM_smmla = 0xD0,
  ARM_smmlar = 0xD1,
  ARM_smmul = 0xD2,
  ARM_smmulr = 0xD3,
  ARM_smmls = 0xD4,
  ARM_smmlsr = 0xD5,
  ARM_srs = 0xD6,
  ARM_ssat = 0xD7,
  ARM_ssat16 = 0xD8,
  ARM_ssub16 = 0xD9,
  ARM_ssub8 = 0xDA,
  ARM_ssubaddx = 0xDB,
  ARM_strex = 0xDC,
  ARM_sxtab = 0xDD,
  ARM_sxtb = 0xDE,
  ARM_sxtab16 = 0xDF,
  ARM_sxtb16 = 0xE0,
  ARM_sxtah = 0xE1,
  ARM_sxth = 0xE2,
  ARM_uadd16 = 0xE3,
  ARM_uadd8 = 0xE4,
  ARM_uaddsubx = 0xE5,
  ARM_uhadd16 = 0xE6,
  ARM_uhadd8 = 0xE7,
  ARM_uhaddsubx = 0xE8,
  ARM_uhsub16 = 0xE9,
  ARM_uhsub8 = 0xEA,
  ARM_uhsubaddx = 0xEB,
  ARM_umaal = 0xEC,
  ARM_uqadd16 = 0xED,
  ARM_uqadd8 = 0xEE,
  ARM_uqaddsubx = 0xEF,
  ARM_uqsub16 = 0xF0,
  ARM_uqsub8 = 0xF1,
  ARM_uqsubaddx = 0xF2,
  ARM_usada8 = 0xF3,
  ARM_usad8 = 0xF4,
  ARM_usat = 0xF5,
  ARM_usat16 = 0xF6,
  ARM_usub16 = 0xF7,
  ARM_usub8 = 0xF8,
  ARM_usubaddx = 0xF9,
  ARM_uxtab = 0xFA,
  ARM_uxtb = 0xFB,
  ARM_uxtab16 = 0xFC,
  ARM_uxtb16 = 0xFD,
  ARM_uxtah = 0xFE,
  ARM_uxth = 0xFF,
  ARM_clrex = 0x100,
  ARM_ldrexb = 0x101,
  ARM_ldrexd = 0x102,
  ARM_ldrexh = 0x103,
  ARM_strexb = 0x104,
  ARM_strexd = 0x105,
  ARM_strexh = 0x106,
  ARM_yield = 0x107,
  ARM_sev = 0x108,
  ARM_wfe = 0x109,
  ARM_wfi = 0x10A,
  ARM_smc = 0x10B,
  ARM_orn = 0x10C,
  ARM_movt = 0x10D,
  ARM_sbfx = 0x10E,
  ARM_ubfx = 0x10F,
  ARM_bfi = 0x110,
  ARM_bfc = 0x111,
  ARM_tbb = 0x112,
  ARM_tbh = 0x113,
  ARM_pli = 0x114,
  ARM_rbit = 0x115,
  ARM_it = 0x116,
  ARM_mls = 0x117,
  ARM_sdiv = 0x118,
  ARM_udiv = 0x119,
  ARM_cbz = 0x11A,
  ARM_cbnz = 0x11B,
  ARM_dsb = 0x11C,
  ARM_dmb = 0x11D,
  ARM_isb = 0x11E,
  ARM_dbg = 0x11F,
  ARM_und = 0x120,
  ARM_rrx = 0x121,
  ARM_enterx = 0x122,
  ARM_leavex = 0x123,
  ARM_chka = 0x124,
  ARM_hb = 0x125,
  ARM_hbl = 0x126,
  ARM_hblp = 0x127,
  ARM_hbp = 0x128,
  ARM_vaba = 0x129,
  ARM_vabal = 0x12A,
  ARM_vabd = 0x12B,
  ARM_vabdl = 0x12C,
  ARM_vabs = 0x12D,
  ARM_vacge = 0x12E,
  ARM_vacgt = 0x12F,
  ARM_vacle = 0x130,
  ARM_vaclt = 0x131,
  ARM_vadd = 0x132,
  ARM_vaddhn = 0x133,
  ARM_vaddl = 0x134,
  ARM_vaddw = 0x135,
  ARM_vand = 0x136,
  ARM_vbic = 0x137,
  ARM_vbif = 0x138,
  ARM_vbit = 0x139,
  ARM_vbsl = 0x13A,
  ARM_vceq = 0x13B,
  ARM_vcge = 0x13C,
  ARM_vcgt = 0x13D,
  ARM_vcle = 0x13E,
  ARM_vcls = 0x13F,
  ARM_vclt = 0x140,
  ARM_vclz = 0x141,
  ARM_vcmp = 0x142,
  ARM_vcmpe = 0x143,
  ARM_vcnt = 0x144,
  ARM_vcvt = 0x145,
  ARM_vcvtr = 0x146,
  ARM_vcvtb = 0x147,
  ARM_vcvtt = 0x148,
  ARM_vdiv = 0x149,
  ARM_vdup = 0x14A,
  ARM_veor = 0x14B,
  ARM_vext = 0x14C,
  ARM_vfma = 0x14D,
  ARM_vfms = 0x14E,
  ARM_vfnma = 0x14F,
  ARM_vfnms = 0x150,
  ARM_vhadd = 0x151,
  ARM_vhsub = 0x152,
  ARM_vld1 = 0x153,
  ARM_vld2 = 0x154,
  ARM_vld3 = 0x155,
  ARM_vld4 = 0x156,
  ARM_vldm = 0x157,
  ARM_vldr = 0x158,
  ARM_vmax = 0x159,
  ARM_vmin = 0x15A,
  ARM_vmla = 0x15B,
  ARM_vmlal = 0x15C,
  ARM_vmls = 0x15D,
  ARM_vmlsl = 0x15E,
  ARM_vmov = 0x15F,
  ARM_vmovl = 0x160,
  ARM_vmovn = 0x161,
  ARM_vmrs = 0x162,
  ARM_vmsr = 0x163,
  ARM_vmul = 0x164,
  ARM_vmull = 0x165,
  ARM_vmvn = 0x166,
  ARM_vneg = 0x167,
  ARM_vnmla = 0x168,
  ARM_vnmls = 0x169,
  ARM_vnmul = 0x16A,
  ARM_vorn = 0x16B,
  ARM_vorr = 0x16C,
  ARM_vpadal = 0x16D,
  ARM_vpadd = 0x16E,
  ARM_vpaddl = 0x16F,
  ARM_vpmax = 0x170,
  ARM_vpmin = 0x171,
  ARM_vpop = 0x172,
  ARM_vpush = 0x173,
  ARM_vqabs = 0x174,
  ARM_vqadd = 0x175,
  ARM_vqdmlal = 0x176,
  ARM_vqdmlsl = 0x177,
  ARM_vqdmulh = 0x178,
  ARM_vqdmull = 0x179,
  ARM_vqmovn = 0x17A,
  ARM_vqmovun = 0x17B,
  ARM_vqneg = 0x17C,
  ARM_vqrdmulh = 0x17D,
  ARM_vqrshl = 0x17E,
  ARM_vqrshrn = 0x17F,
  ARM_vqrshrun = 0x180,
  ARM_vqshl = 0x181,
  ARM_vqshlu = 0x182,
  ARM_vqshrn = 0x183,
  ARM_vqshrun = 0x184,
  ARM_vqsub = 0x185,
  ARM_vraddhn = 0x186,
  ARM_vrecpe = 0x187,
  ARM_vrecps = 0x188,
  ARM_vrev16 = 0x189,
  ARM_vrev32 = 0x18A,
  ARM_vrev64 = 0x18B,
  ARM_vrhadd = 0x18C,
  ARM_vrshl = 0x18D,
  ARM_vrshr = 0x18E,
  ARM_vrshrn = 0x18F,
  ARM_vrsqrte = 0x190,
  ARM_vrsqrts = 0x191,
  ARM_vrsra = 0x192,
  ARM_vrsubhn = 0x193,
  ARM_vshl = 0x194,
  ARM_vshll = 0x195,
  ARM_vshr = 0x196,
  ARM_vshrn = 0x197,
  ARM_vsli = 0x198,
  ARM_vsqrt = 0x199,
  ARM_vsra = 0x19A,
  ARM_vsri = 0x19B,
  ARM_vst1 = 0x19C,
  ARM_vst2 = 0x19D,
  ARM_vst3 = 0x19E,
  ARM_vst4 = 0x19F,
  ARM_vstm = 0x1A0,
  ARM_vstr = 0x1A1,
  ARM_vsub = 0x1A2,
  ARM_vsubhn = 0x1A3,
  ARM_vsubl = 0x1A4,
  ARM_vsubw = 0x1A5,
  ARM_vswp = 0x1A6,
  ARM_vtbl = 0x1A7,
  ARM_vtbx = 0x1A8,
  ARM_vtrn = 0x1A9,
  ARM_vtst = 0x1AA,
  ARM_vuzp = 0x1AB,
  ARM_vzip = 0x1AC,
  ARM_eret = 0x1AD,
  ARM_hvc = 0x1AE,
  ARM_lda = 0x1AF,
  ARM_stl = 0x1B0,
  ARM_ldaex = 0x1B1,
  ARM_stlex = 0x1B2,
  ARM_vsel = 0x1B3,
  ARM_vmaxnm = 0x1B4,
  ARM_vminnm = 0x1B5,
  ARM_vcvta = 0x1B6,
  ARM_vcvtn = 0x1B7,
  ARM_vcvtp = 0x1B8,
  ARM_vcvtm = 0x1B9,
  ARM_vrintx = 0x1BA,
  ARM_vrintr = 0x1BB,
  ARM_vrintz = 0x1BC,
  ARM_vrinta = 0x1BD,
  ARM_vrintn = 0x1BE,
  ARM_vrintp = 0x1BF,
  ARM_vrintm = 0x1C0,
  ARM_aesd = 0x1C1,
  ARM_aese = 0x1C2,
  ARM_aesimc = 0x1C3,
  ARM_aesmc = 0x1C4,
  ARM_sha1c = 0x1C5,
  ARM_sha1m = 0x1C6,
  ARM_sha1p = 0x1C7,
  ARM_sha1h = 0x1C8,
  ARM_sha1su0 = 0x1C9,
  ARM_sha1su1 = 0x1CA,
  ARM_sha256h = 0x1CB,
  ARM_sha256h2 = 0x1CC,
  ARM_sha256su0 = 0x1CD,
  ARM_sha256su1 = 0x1CE,
  ARM_dcps1 = 0x1CF,
  ARM_dcps2 = 0x1D0,
  ARM_dcps3 = 0x1D1,
  ARM_hlt = 0x1D2,
  ARM_sevl = 0x1D3,
  ARM_tbz = 0x1D4,
  ARM_tbnz = 0x1D5,
  ARM_br = 0x1D6,
  ARM_blr = 0x1D7,
  ARM_ldur = 0x1D8,
  ARM_stur = 0x1D9,
  ARM_ldp = 0x1DA,
  ARM_stp = 0x1DB,
  ARM_ldnp = 0x1DC,
  ARM_stnp = 0x1DD,
  ARM_ldtr = 0x1DE,
  ARM_sttr = 0x1DF,
  ARM_ldxr = 0x1E0,
  ARM_stxr = 0x1E1,
  ARM_ldxp = 0x1E2,
  ARM_stxp = 0x1E3,
  ARM_ldar = 0x1E4,
  ARM_stlr = 0x1E5,
  ARM_ldaxr = 0x1E6,
  ARM_stlxr = 0x1E7,
  ARM_ldaxp = 0x1E8,
  ARM_stlxp = 0x1E9,
  ARM_prfm = 0x1EA,
  ARM_prfum = 0x1EB,
  ARM_movi = 0x1EC,
  ARM_mvni = 0x1ED,
  ARM_movz = 0x1EE,
  ARM_movn = 0x1EF,
  ARM_movk = 0x1F0,
  ARM_adrp = 0x1F1,
  ARM_bfm = 0x1F2,
  ARM_sbfm = 0x1F3,
  ARM_ubfm = 0x1F4,
  ARM_bfxil = 0x1F5,
  ARM_sbfiz = 0x1F6,
  ARM_ubfiz = 0x1F7,
  ARM_extr = 0x1F8,
  ARM_sxtw = 0x1F9,
  ARM_uxtw = 0x1FA,
  ARM_eon = 0x1FB,
  ARM_not = 0x1FC,
  ARM_cls = 0x1FD,
  ARM_rev32 = 0x1FE,
  ARM_csel = 0x1FF,
  ARM_csinc = 0x200,
  ARM_csinv = 0x201,
  ARM_csneg = 0x202,
  ARM_cset = 0x203,
  ARM_csetm = 0x204,
  ARM_cinc = 0x205,
  ARM_cinv = 0x206,
  ARM_cneg = 0x207,
  ARM_ngc = 0x208,
  ARM_ccmn = 0x209,
  ARM_ccmp = 0x20A,
  ARM_madd = 0x20B,
  ARM_msub = 0x20C,
  ARM_mneg = 0x20D,
  ARM_smaddl = 0x20E,
  ARM_smsubl = 0x20F,
  ARM_smnegl = 0x210,
  ARM_smulh = 0x211,
  ARM_umaddl = 0x212,
  ARM_umsubl = 0x213,
  ARM_umnegl = 0x214,
  ARM_umulh = 0x215,
  ARM_drps = 0x216,
  ARM_sys = 0x217,
  ARM_sysl = 0x218,
  ARM_ic = 0x219,
  ARM_dc = 0x21A,
  ARM_at = 0x21B,
  ARM_tlbi = 0x21C,
  ARM_hint = 0x21D,
  ARM_brk = 0x21E,
  ARM_uaba = 0x21F,
  ARM_saba = 0x220,
  ARM_uabal = 0x221,
  ARM_uabal2 = 0x222,
  ARM_sabal = 0x223,
  ARM_sabal2 = 0x224,
  ARM_uabd = 0x225,
  ARM_sabd = 0x226,
  ARM_fabd = 0x227,
  ARM_uabdl = 0x228,
  ARM_uabdl2 = 0x229,
  ARM_sabdl = 0x22A,
  ARM_sabdl2 = 0x22B,
  ARM_abs = 0x22C,
  ARM_fabs = 0x22D,
  ARM_facge = 0x22E,
  ARM_facgt = 0x22F,
  ARM_facle = 0x230,
  ARM_faclt = 0x231,
  ARM_fadd = 0x232,
  ARM_addhn = 0x233,
  ARM_addhn2 = 0x234,
  ARM_uaddl = 0x235,
  ARM_uaddl2 = 0x236,
  ARM_saddl = 0x237,
  ARM_saddl2 = 0x238,
  ARM_uaddw = 0x239,
  ARM_uaddw2 = 0x23A,
  ARM_saddw = 0x23B,
  ARM_saddw2 = 0x23C,
  ARM_bif = 0x23D,
  ARM_bit = 0x23E,
  ARM_bsl = 0x23F,
  ARM_cmeq = 0x240,
  ARM_fcmeq = 0x241,
  ARM_cmhs = 0x242,
  ARM_cmge = 0x243,
  ARM_fcmge = 0x244,
  ARM_cmhi = 0x245,
  ARM_cmgt = 0x246,
  ARM_fcmgt = 0x247,
  ARM_cmls = 0x248,
  ARM_cmle = 0x249,
  ARM_fcmle = 0x24A,
  ARM_cmlo = 0x24B,
  ARM_cmlt = 0x24C,
  ARM_fcmlt = 0x24D,
  ARM_fcmp = 0x24E,
  ARM_fcmpe = 0x24F,
  ARM_fccmp = 0x250,
  ARM_fccmpe = 0x251,
  ARM_fcsel = 0x252,
  ARM_cnt = 0x253,
  ARM_fcvt = 0x254,
  ARM_fcvtzs = 0x255,
  ARM_fcvtas = 0x256,
  ARM_fcvtns = 0x257,
  ARM_fcvtps = 0x258,
  ARM_fcvtms = 0x259,
  ARM_fcvtzu = 0x25A,
  ARM_fcvtau = 0x25B,
  ARM_fcvtnu = 0x25C,
  ARM_fcvtpu = 0x25D,
  ARM_fcvtmu = 0x25E,
  ARM_ucvtf = 0x25F,
  ARM_scvtf = 0x260,
  ARM_fcvtn = 0x261,
  ARM_fcvtn2 = 0x262,
  ARM_fcvtl = 0x263,
  ARM_fcvtl2 = 0x264,
  ARM_fcvtxn = 0x265,
  ARM_fcvtxn2 = 0x266,
  ARM_frinta = 0x267,
  ARM_frinti = 0x268,
  ARM_frintm = 0x269,
  ARM_frintn = 0x26A,
  ARM_frintp = 0x26B,
  ARM_frintx = 0x26C,
  ARM_frintz = 0x26D,
  ARM_fmadd = 0x26E,
  ARM_fmsub = 0x26F,
  ARM_fnmadd = 0x270,
  ARM_fnmsub = 0x271,
  ARM_fdiv = 0x272,
  ARM_dup = 0x273,
  ARM_ins = 0x274,
  ARM_ext = 0x275,
  ARM_uhadd = 0x276,
  ARM_shadd = 0x277,
  ARM_uhsub = 0x278,
  ARM_shsub = 0x279,
  ARM_ld1 = 0x27A,
  ARM_ld2 = 0x27B,
  ARM_ld3 = 0x27C,
  ARM_ld4 = 0x27D,
  ARM_ld1r = 0x27E,
  ARM_ld2r = 0x27F,
  ARM_ld3r = 0x280,
  ARM_ld4r = 0x281,
  ARM_umax = 0x282,
  ARM_smax = 0x283,
  ARM_fmax = 0x284,
  ARM_fmaxnm = 0x285,
  ARM_umin = 0x286,
  ARM_smin = 0x287,
  ARM_fmin = 0x288,
  ARM_fminnm = 0x289,
  ARM_fmla = 0x28A,
  ARM_umlal2 = 0x28B,
  ARM_smlal2 = 0x28C,
  ARM_fmls = 0x28D,
  ARM_umlsl = 0x28E,
  ARM_umlsl2 = 0x28F,
  ARM_smlsl = 0x290,
  ARM_smlsl2 = 0x291,
  ARM_umov = 0x292,
  ARM_smov = 0x293,
  ARM_fmov = 0x294,
  ARM_uxtl = 0x295,
  ARM_uxtl2 = 0x296,
  ARM_sxtl = 0x297,
  ARM_sxtl2 = 0x298,
  ARM_xtn = 0x299,
  ARM_xtn2 = 0x29A,
  ARM_fmul = 0x29B,
  ARM_pmul = 0x29C,
  ARM_fmulx = 0x29D,
  ARM_fnmul = 0x29E,
  ARM_umull2 = 0x29F,
  ARM_smull2 = 0x2A0,
  ARM_pmull = 0x2A1,
  ARM_pmull2 = 0x2A2,
  ARM_fneg = 0x2A3,
  ARM_uadalp = 0x2A4,
  ARM_sadalp = 0x2A5,
  ARM_addp = 0x2A6,
  ARM_faddp = 0x2A7,
  ARM_uaddlp = 0x2A8,
  ARM_saddlp = 0x2A9,
  ARM_umaxp = 0x2AA,
  ARM_smaxp = 0x2AB,
  ARM_fmaxp = 0x2AC,
  ARM_fmaxnmp = 0x2AD,
  ARM_uminp = 0x2AE,
  ARM_sminp = 0x2AF,
  ARM_fminp = 0x2B0,
  ARM_fminnmp = 0x2B1,
  ARM_sqabs = 0x2B2,
  ARM_uqadd = 0x2B3,
  ARM_sqadd = 0x2B4,
  ARM_suqadd = 0x2B5,
  ARM_usqadd = 0x2B6,
  ARM_sqdmlal = 0x2B7,
  ARM_sqdmlal2 = 0x2B8,
  ARM_sqdmlsl = 0x2B9,
  ARM_sqdmlsl2 = 0x2BA,
  ARM_sqdmulh = 0x2BB,
  ARM_sqdmull = 0x2BC,
  ARM_sqdmull2 = 0x2BD,
  ARM_uqxtn = 0x2BE,
  ARM_uqxtn2 = 0x2BF,
  ARM_sqxtn = 0x2C0,
  ARM_sqxtn2 = 0x2C1,
  ARM_sqxtun = 0x2C2,
  ARM_sqxtun2 = 0x2C3,
  ARM_sqneg = 0x2C4,
  ARM_sqrdmulh = 0x2C5,
  ARM_uqrshl = 0x2C6,
  ARM_sqrshl = 0x2C7,
  ARM_uqrshrn = 0x2C8,
  ARM_uqrshrn2 = 0x2C9,
  ARM_sqrshrn = 0x2CA,
  ARM_sqrshrn2 = 0x2CB,
  ARM_sqrshrun = 0x2CC,
  ARM_sqrshrun2 = 0x2CD,
  ARM_uqshl = 0x2CE,
  ARM_sqshl = 0x2CF,
  ARM_sqshlu = 0x2D0,
  ARM_uqshrn = 0x2D1,
  ARM_uqshrn2 = 0x2D2,
  ARM_sqshrn = 0x2D3,
  ARM_sqshrn2 = 0x2D4,
  ARM_sqshrun = 0x2D5,
  ARM_sqshrun2 = 0x2D6,
  ARM_uqsub = 0x2D7,
  ARM_sqsub = 0x2D8,
  ARM_raddhn = 0x2D9,
  ARM_raddhn2 = 0x2DA,
  ARM_urecpe = 0x2DB,
  ARM_frecpe = 0x2DC,
  ARM_frecps = 0x2DD,
  ARM_frecpx = 0x2DE,
  ARM_rev64 = 0x2DF,
  ARM_urhadd = 0x2E0,
  ARM_srhadd = 0x2E1,
  ARM_urshl = 0x2E2,
  ARM_srshl = 0x2E3,
  ARM_urshr = 0x2E4,
  ARM_srshr = 0x2E5,
  ARM_rshrn = 0x2E6,
  ARM_rshrn2 = 0x2E7,
  ARM_ursqrte = 0x2E8,
  ARM_frsqrte = 0x2E9,
  ARM_frsqrts = 0x2EA,
  ARM_ursra = 0x2EB,
  ARM_srsra = 0x2EC,
  ARM_rsubhn = 0x2ED,
  ARM_rsubhn2 = 0x2EE,
  ARM_ushl = 0x2EF,
  ARM_sshl = 0x2F0,
  ARM_ushll = 0x2F1,
  ARM_ushll2 = 0x2F2,
  ARM_sshll = 0x2F3,
  ARM_sshll2 = 0x2F4,
  ARM_ushr = 0x2F5,
  ARM_sshr = 0x2F6,
  ARM_shrn = 0x2F7,
  ARM_shrn2 = 0x2F8,
  ARM_shl = 0x2F9,
  ARM_shll = 0x2FA,
  ARM_shll2 = 0x2FB,
  ARM_sli = 0x2FC,
  ARM_fsqrt = 0x2FD,
  ARM_usra = 0x2FE,
  ARM_ssra = 0x2FF,
  ARM_sri = 0x300,
  ARM_st1 = 0x301,
  ARM_st2 = 0x302,
  ARM_st3 = 0x303,
  ARM_st4 = 0x304,
  ARM_fsub = 0x305,
  ARM_subhn = 0x306,
  ARM_subhn2 = 0x307,
  ARM_usubl = 0x308,
  ARM_usubl2 = 0x309,
  ARM_ssubl = 0x30A,
  ARM_ssubl2 = 0x30B,
  ARM_usubw = 0x30C,
  ARM_usubw2 = 0x30D,
  ARM_ssubw = 0x30E,
  ARM_ssubw2 = 0x30F,
  ARM_tbl = 0x310,
  ARM_tbx = 0x311,
  ARM_trn1 = 0x312,
  ARM_trn2 = 0x313,
  ARM_cmtst = 0x314,
  ARM_uzp1 = 0x315,
  ARM_uzp2 = 0x316,
  ARM_zip1 = 0x317,
  ARM_zip2 = 0x318,
  ARM_addv = 0x319,
  ARM_uaddlv = 0x31A,
  ARM_saddlv = 0x31B,
  ARM_umaxv = 0x31C,
  ARM_smaxv = 0x31D,
  ARM_fmaxv = 0x31E,
  ARM_fmaxnmv = 0x31F,
  ARM_uminv = 0x320,
  ARM_sminv = 0x321,
  ARM_fminv = 0x322,
  ARM_fminnmv = 0x323,
  ARM_swpl = 0x324,
  ARM_swpa = 0x325,
  ARM_swpal = 0x326,
  ARM_ldapr = 0x327,
  ARM_ldadd = 0x328,
  ARM_ldaddl = 0x329,
  ARM_ldadda = 0x32A,
  ARM_ldaddal = 0x32B,
  ARM_stadd = 0x32C,
  ARM_staddl = 0x32D,
  ARM_ldclr = 0x32E,
  ARM_ldclrl = 0x32F,
  ARM_ldclra = 0x330,
  ARM_ldclral = 0x331,
  ARM_stclr = 0x332,
  ARM_stclrl = 0x333,
  ARM_ldeor = 0x334,
  ARM_ldeorl = 0x335,
  ARM_ldeora = 0x336,
  ARM_ldeoral = 0x337,
  ARM_steor = 0x338,
  ARM_steorl = 0x339,
  ARM_ldset = 0x33A,
  ARM_ldsetl = 0x33B,
  ARM_ldseta = 0x33C,
  ARM_ldsetal = 0x33D,
  ARM_stset = 0x33E,
  ARM_stsetl = 0x33F,
  ARM_ldsmax = 0x340,
  ARM_ldsmaxl = 0x341,
  ARM_ldsmaxa = 0x342,
  ARM_ldsmaxal = 0x343,
  ARM_stsmax = 0x344,
  ARM_stsmaxl = 0x345,
  ARM_ldsmin = 0x346,
  ARM_ldsminl = 0x347,
  ARM_ldsmina = 0x348,
  ARM_ldsminal = 0x349,
  ARM_stsmin = 0x34A,
  ARM_stsminl = 0x34B,
  ARM_ldumax = 0x34C,
  ARM_ldumaxl = 0x34D,
  ARM_ldumaxa = 0x34E,
  ARM_ldumaxal = 0x34F,
  ARM_stumax = 0x350,
  ARM_stumaxl = 0x351,
  ARM_ldumin = 0x352,
  ARM_lduminl = 0x353,
  ARM_ldumina = 0x354,
  ARM_lduminal = 0x355,
  ARM_stumin = 0x356,
  ARM_stuminl = 0x357,
  ARM_cas = 0x358,
  ARM_casl = 0x359,
  ARM_casa = 0x35A,
  ARM_casal = 0x35B,
  ARM_casp = 0x35C,
  ARM_caspl = 0x35D,
  ARM_caspa = 0x35E,
  ARM_caspal = 0x35F,
  ARM_ldlar = 0x360,
  ARM_stllr = 0x361,
  ARM_sqrdmlah = 0x362,
  ARM_sqrdmlsh = 0x363,
  ARM_pac = 0x364,
  ARM_aut = 0x365,
  ARM_xpac = 0x366,
  ARM_ldrd2 = 0x367,
  ARM_strd2 = 0x368,
  ARM_crc32 = 0x369,
  ARM_crc32c = 0x36A,
  ARM_tt = 0x36B,
  ARM_tta = 0x36C,
  ARM_sg = 0x36D,
  ARM_vlldm = 0x36E,
  ARM_vlstm = 0x36F,
  ARM_pldw = 0x370,
  ARM_vqrdmlah = 0x371,
  ARM_vqrdmlsh = 0x372,
  ARM_vmovx = 0x373,
  ARM_vins = 0x374,
  ARM_vjcvt = 0x375,
  ARM_fjcvtzs = 0x376,
  ARM_ldapur = 0x377,
  ARM_stlur = 0x378,
  ARM_cfinv = 0x379,
  ARM_rmif = 0x37A,
  ARM_setf8 = 0x37B,
  ARM_setf16 = 0x37C,
  ARM_xaflag = 0x37D,
  ARM_axflag = 0x37E,
  ARM_addg = 0x37F,
  ARM_subg = 0x380,
  ARM_subp = 0x381,
  ARM_cmpp = 0x382,
  ARM_irg = 0x383,
  ARM_gmi = 0x384,
  ARM_stg = 0x385,
  ARM_stzg = 0x386,
  ARM_stzgm = 0x387,
  ARM_st2g = 0x388,
  ARM_stz2g = 0x389,
  ARM_stgm = 0x38A,
  ARM_stgp = 0x38B,
  ARM_ldg = 0x38C,
  ARM_ldgm = 0x38D,
  ARM_bti = 0x38E,
  ARM_sb = 0x38F,
  ARM_ssbb = 0x390,
  ARM_pssbb = 0x391,
  ARM_frint32x = 0x392,
  ARM_frint32z = 0x393,
  ARM_frint64x = 0x394,
  ARM_frint64z = 0x395,
  ARM_last = 0x396,
};

/* 1749 */
enum _7DEE59BDA5505BA79906AD1B11AD5B46 : unsigned __int32
{
  TMS6_null = 0x0,
  TMS6_abs = 0x1,
  TMS6_add = 0x2,
  TMS6_addu = 0x3,
  TMS6_addab = 0x4,
  TMS6_addah = 0x5,
  TMS6_addaw = 0x6,
  TMS6_addk = 0x7,
  TMS6_add2 = 0x8,
  TMS6_and = 0x9,
  TMS6_b = 0xA,
  TMS6_clr = 0xB,
  TMS6_cmpeq = 0xC,
  TMS6_cmpgt = 0xD,
  TMS6_cmpgtu = 0xE,
  TMS6_cmplt = 0xF,
  TMS6_cmpltu = 0x10,
  TMS6_ext = 0x11,
  TMS6_extu = 0x12,
  TMS6_idle = 0x13,
  TMS6_ldb = 0x14,
  TMS6_ldbu = 0x15,
  TMS6_ldh = 0x16,
  TMS6_ldhu = 0x17,
  TMS6_ldw = 0x18,
  TMS6_lmbd = 0x19,
  TMS6_mpy = 0x1A,
  TMS6_mpyu = 0x1B,
  TMS6_mpyus = 0x1C,
  TMS6_mpysu = 0x1D,
  TMS6_mpyh = 0x1E,
  TMS6_mpyhu = 0x1F,
  TMS6_mpyhus = 0x20,
  TMS6_mpyhsu = 0x21,
  TMS6_mpyhl = 0x22,
  TMS6_mpyhlu = 0x23,
  TMS6_mpyhuls = 0x24,
  TMS6_mpyhslu = 0x25,
  TMS6_mpylh = 0x26,
  TMS6_mpylhu = 0x27,
  TMS6_mpyluhs = 0x28,
  TMS6_mpylshu = 0x29,
  TMS6_mv = 0x2A,
  TMS6_mvc = 0x2B,
  TMS6_mvk = 0x2C,
  TMS6_mvkh = 0x2D,
  TMS6_mvklh = 0x2E,
  TMS6_neg = 0x2F,
  TMS6_nop = 0x30,
  TMS6_norm = 0x31,
  TMS6_not = 0x32,
  TMS6_or = 0x33,
  TMS6_sadd = 0x34,
  TMS6_sat = 0x35,
  TMS6_set = 0x36,
  TMS6_shl = 0x37,
  TMS6_shr = 0x38,
  TMS6_shru = 0x39,
  TMS6_smpy = 0x3A,
  TMS6_smpyhl = 0x3B,
  TMS6_smpylh = 0x3C,
  TMS6_smpyh = 0x3D,
  TMS6_sshl = 0x3E,
  TMS6_ssub = 0x3F,
  TMS6_stb = 0x40,
  TMS6_stbu = 0x41,
  TMS6_sth = 0x42,
  TMS6_sthu = 0x43,
  TMS6_stw = 0x44,
  TMS6_sub = 0x45,
  TMS6_subu = 0x46,
  TMS6_subab = 0x47,
  TMS6_subah = 0x48,
  TMS6_subaw = 0x49,
  TMS6_subc = 0x4A,
  TMS6_sub2 = 0x4B,
  TMS6_xor = 0x4C,
  TMS6_zero = 0x4D,
  TMS6_abs2 = 0x4E,
  TMS6_absdp = 0x4F,
  TMS6_abssp = 0x50,
  TMS6_add4 = 0x51,
  TMS6_addad = 0x52,
  TMS6_adddp = 0x53,
  TMS6_addkpc = 0x54,
  TMS6_addsp = 0x55,
  TMS6_addsub = 0x56,
  TMS6_addsub2 = 0x57,
  TMS6_andn = 0x58,
  TMS6_avg2 = 0x59,
  TMS6_avgu4 = 0x5A,
  TMS6_bdec = 0x5B,
  TMS6_bitc4 = 0x5C,
  TMS6_bitr = 0x5D,
  TMS6_bnop = 0x5E,
  TMS6_bpos = 0x5F,
  TMS6_callp = 0x60,
  TMS6_cmpeq2 = 0x61,
  TMS6_cmpeq4 = 0x62,
  TMS6_cmpeqdp = 0x63,
  TMS6_cmpeqsp = 0x64,
  TMS6_cmpgt2 = 0x65,
  TMS6_cmpgtdp = 0x66,
  TMS6_cmpgtsp = 0x67,
  TMS6_cmpgtu4 = 0x68,
  TMS6_cmplt2 = 0x69,
  TMS6_cmpltdp = 0x6A,
  TMS6_cmpltsp = 0x6B,
  TMS6_cmpltu4 = 0x6C,
  TMS6_cmpy = 0x6D,
  TMS6_cmpyr = 0x6E,
  TMS6_cmpyr1 = 0x6F,
  TMS6_ddotp4 = 0x70,
  TMS6_ddotph2 = 0x71,
  TMS6_ddotph2r = 0x72,
  TMS6_ddotpl2 = 0x73,
  TMS6_ddotpl2r = 0x74,
  TMS6_deal = 0x75,
  TMS6_dint = 0x76,
  TMS6_dmv = 0x77,
  TMS6_dotp2 = 0x78,
  TMS6_dotpn2 = 0x79,
  TMS6_dotpnrsu2 = 0x7A,
  TMS6_dotpnrus2 = 0x7B,
  TMS6_dotprsu2 = 0x7C,
  TMS6_dotprus2 = 0x7D,
  TMS6_dotpsu4 = 0x7E,
  TMS6_dotpu4 = 0x7F,
  TMS6_dotpus4 = 0x80,
  TMS6_dpack2 = 0x81,
  TMS6_dpackx2 = 0x82,
  TMS6_dpint = 0x83,
  TMS6_dpsp = 0x84,
  TMS6_dptrunc = 0x85,
  TMS6_gmpy = 0x86,
  TMS6_gmpy4 = 0x87,
  TMS6_intdp = 0x88,
  TMS6_intdpu = 0x89,
  TMS6_intsp = 0x8A,
  TMS6_intspu = 0x8B,
  TMS6_lddw = 0x8C,
  TMS6_ldndw = 0x8D,
  TMS6_ldnw = 0x8E,
  TMS6_max2 = 0x8F,
  TMS6_maxu4 = 0x90,
  TMS6_min2 = 0x91,
  TMS6_minu4 = 0x92,
  TMS6_mpy2 = 0x93,
  TMS6_mpy2ir = 0x94,
  TMS6_mpy32 = 0x95,
  TMS6_mpy32su = 0x96,
  TMS6_mpy32u = 0x97,
  TMS6_mpy32us = 0x98,
  TMS6_mpydp = 0x99,
  TMS6_mpyhi = 0x9A,
  TMS6_mpyhir = 0x9B,
  TMS6_mpyi = 0x9C,
  TMS6_mpyid = 0x9D,
  TMS6_mpyih = 0x9E,
  TMS6_mpyihr = 0x9F,
  TMS6_mpyil = 0xA0,
  TMS6_mpyilr = 0xA1,
  TMS6_mpyli = 0xA2,
  TMS6_mpylir = 0xA3,
  TMS6_mpysp = 0xA4,
  TMS6_mpysp2dp = 0xA5,
  TMS6_mpyspdp = 0xA6,
  TMS6_mpysu4 = 0xA7,
  TMS6_mpyu4 = 0xA8,
  TMS6_mpyus4 = 0xA9,
  TMS6_mvd = 0xAA,
  TMS6_mvkl = 0xAB,
  TMS6_pack2 = 0xAC,
  TMS6_packh2 = 0xAD,
  TMS6_packh4 = 0xAE,
  TMS6_packhl2 = 0xAF,
  TMS6_packl4 = 0xB0,
  TMS6_packlh2 = 0xB1,
  TMS6_rcpdp = 0xB2,
  TMS6_rcpsp = 0xB3,
  TMS6_rint = 0xB4,
  TMS6_rotl = 0xB5,
  TMS6_rpack2 = 0xB6,
  TMS6_rsqrdp = 0xB7,
  TMS6_rsqrsp = 0xB8,
  TMS6_sadd2 = 0xB9,
  TMS6_saddsu2 = 0xBA,
  TMS6_saddsub = 0xBB,
  TMS6_saddsub2 = 0xBC,
  TMS6_saddu4 = 0xBD,
  TMS6_saddus2 = 0xBE,
  TMS6_shfl = 0xBF,
  TMS6_shfl3 = 0xC0,
  TMS6_shlmb = 0xC1,
  TMS6_shr2 = 0xC2,
  TMS6_shrmb = 0xC3,
  TMS6_shru2 = 0xC4,
  TMS6_smpy2 = 0xC5,
  TMS6_smpy32 = 0xC6,
  TMS6_spack2 = 0xC7,
  TMS6_spacku4 = 0xC8,
  TMS6_spdp = 0xC9,
  TMS6_spint = 0xCA,
  TMS6_spkernel = 0xCB,
  TMS6_spkernelr = 0xCC,
  TMS6_sploop = 0xCD,
  TMS6_sploopd = 0xCE,
  TMS6_sploopw = 0xCF,
  TMS6_spmask = 0xD0,
  TMS6_spmaskr = 0xD1,
  TMS6_sptrunc = 0xD2,
  TMS6_sshvl = 0xD3,
  TMS6_sshvr = 0xD4,
  TMS6_ssub2 = 0xD5,
  TMS6_stdw = 0xD6,
  TMS6_stndw = 0xD7,
  TMS6_stnw = 0xD8,
  TMS6_sub4 = 0xD9,
  TMS6_subabs4 = 0xDA,
  TMS6_subdp = 0xDB,
  TMS6_subsp = 0xDC,
  TMS6_swap2 = 0xDD,
  TMS6_swap4 = 0xDE,
  TMS6_swe = 0xDF,
  TMS6_swenr = 0xE0,
  TMS6_unpkhu4 = 0xE1,
  TMS6_unpklu4 = 0xE2,
  TMS6_xormpy = 0xE3,
  TMS6_xpnd2 = 0xE4,
  TMS6_xpnd4 = 0xE5,
  TMS6_last = 0xE6,
};

/* 1750 */
enum _94774701A62EC69B1B7643AC725F5DF9 : unsigned __int32
{
  I196_null = 0x0,
  I196_add2 = 0x1,
  I196_add3 = 0x2,
  I196_addb2 = 0x3,
  I196_addb3 = 0x4,
  I196_addc = 0x5,
  I196_addcb = 0x6,
  I196_and2 = 0x7,
  I196_and3 = 0x8,
  I196_andb2 = 0x9,
  I196_andb3 = 0xA,
  I196_bmov = 0xB,
  I196_bmovi = 0xC,
  I196_br = 0xD,
  I196_clr = 0xE,
  I196_clrb = 0xF,
  I196_clrc = 0x10,
  I196_clrvt = 0x11,
  I196_cmp = 0x12,
  I196_cmpb = 0x13,
  I196_cmpl = 0x14,
  I196_dec = 0x15,
  I196_decb = 0x16,
  I196_di = 0x17,
  I196_div = 0x18,
  I196_divb = 0x19,
  I196_divu = 0x1A,
  I196_divub = 0x1B,
  I196_djnz = 0x1C,
  I196_djnzw = 0x1D,
  I196_dpts = 0x1E,
  I196_ei = 0x1F,
  I196_epts = 0x20,
  I196_ext = 0x21,
  I196_extb = 0x22,
  I196_idlpd = 0x23,
  I196_inc = 0x24,
  I196_incb = 0x25,
  I196_jbc = 0x26,
  I196_jbs = 0x27,
  I196_jc = 0x28,
  I196_je = 0x29,
  I196_jge = 0x2A,
  I196_jgt = 0x2B,
  I196_jh = 0x2C,
  I196_jle = 0x2D,
  I196_jlt = 0x2E,
  I196_jnc = 0x2F,
  I196_jne = 0x30,
  I196_jnh = 0x31,
  I196_jnst = 0x32,
  I196_jnv = 0x33,
  I196_jnvt = 0x34,
  I196_jst = 0x35,
  I196_jv = 0x36,
  I196_jvt = 0x37,
  I196_lcall = 0x38,
  I196_ld = 0x39,
  I196_ldb = 0x3A,
  I196_ldbse = 0x3B,
  I196_ldbze = 0x3C,
  I196_ljmp = 0x3D,
  I196_mul2 = 0x3E,
  I196_mul3 = 0x3F,
  I196_mulb2 = 0x40,
  I196_mulb3 = 0x41,
  I196_mulu2 = 0x42,
  I196_mulu3 = 0x43,
  I196_mulub2 = 0x44,
  I196_mulub3 = 0x45,
  I196_neg = 0x46,
  I196_negb = 0x47,
  I196_nop = 0x48,
  I196_norml = 0x49,
  I196_not = 0x4A,
  I196_notb = 0x4B,
  I196_or = 0x4C,
  I196_orb = 0x4D,
  I196_pop = 0x4E,
  I196_popa = 0x4F,
  I196_popf = 0x50,
  I196_push = 0x51,
  I196_pusha = 0x52,
  I196_pushf = 0x53,
  I196_ret = 0x54,
  I196_rst = 0x55,
  I196_scall = 0x56,
  I196_setc = 0x57,
  I196_shl = 0x58,
  I196_shlb = 0x59,
  I196_shll = 0x5A,
  I196_shr = 0x5B,
  I196_shra = 0x5C,
  I196_shrab = 0x5D,
  I196_shral = 0x5E,
  I196_shrb = 0x5F,
  I196_shrl = 0x60,
  I196_sjmp = 0x61,
  I196_skip = 0x62,
  I196_st = 0x63,
  I196_stb = 0x64,
  I196_sub2 = 0x65,
  I196_sub3 = 0x66,
  I196_subb2 = 0x67,
  I196_subb3 = 0x68,
  I196_subc = 0x69,
  I196_subcb = 0x6A,
  I196_tijmp = 0x6B,
  I196_trap = 0x6C,
  I196_xch = 0x6D,
  I196_xchb = 0x6E,
  I196_xor = 0x6F,
  I196_xorb = 0x70,
  I196_ebmovi = 0x71,
  I196_ebr = 0x72,
  I196_ecall = 0x73,
  I196_ejmp = 0x74,
  I196_eld = 0x75,
  I196_eldb = 0x76,
  I196_est = 0x77,
  I196_estb = 0x78,
  I196_last = 0x79,
};

/* 1751 */
enum _E2B20928BFB82BAF3AD0622BAF5EB89D : unsigned __int32
{
  SH3_null = 0x0,
  SH3_add = 0x1,
  SH3_addc = 0x2,
  SH3_addv = 0x3,
  SH3_and = 0x4,
  SH3_and_b = 0x5,
  SH3_bf = 0x6,
  SH3_bf_s = 0x7,
  SH3_bra = 0x8,
  SH3_braf = 0x9,
  SH3_bsr = 0xA,
  SH3_bsrf = 0xB,
  SH3_bt = 0xC,
  SH3_bt_s = 0xD,
  SH3_clrmac = 0xE,
  SH3_clrs = 0xF,
  SH3_clrt = 0x10,
  SH3_cmp_eq = 0x11,
  SH3_cmp_ge = 0x12,
  SH3_cmp_gt = 0x13,
  SH3_cmp_hi = 0x14,
  SH3_cmp_hs = 0x15,
  SH3_cmp_pl = 0x16,
  SH3_cmp_pz = 0x17,
  SH3_cmp_str = 0x18,
  SH3_div0s = 0x19,
  SH3_div0u = 0x1A,
  SH3_div1 = 0x1B,
  SH3_dmuls_l = 0x1C,
  SH3_dmulu_l = 0x1D,
  SH3_dt = 0x1E,
  SH3_exts_b = 0x1F,
  SH3_exts_w = 0x20,
  SH3_extu_b = 0x21,
  SH3_extu_w = 0x22,
  SH3_jmp = 0x23,
  SH3_jsr = 0x24,
  SH3_ldc = 0x25,
  SH3_ldc_l = 0x26,
  SH3_lds = 0x27,
  SH3_lds_l = 0x28,
  SH3_ldtlb = 0x29,
  SH3_mac_w = 0x2A,
  SH3_mac_l = 0x2B,
  SH3_mov = 0x2C,
  SH3_mov_b = 0x2D,
  SH3_mov_w = 0x2E,
  SH3_mov_l = 0x2F,
  SH3_movi = 0x30,
  SH3_movi_w = 0x31,
  SH3_movi_l = 0x32,
  SH3_movp_b = 0x33,
  SH3_movp_w = 0x34,
  SH3_movp_l = 0x35,
  SH3_movs_b = 0x36,
  SH3_movs_w = 0x37,
  SH3_movs_l = 0x38,
  SH3_mova = 0x39,
  SH3_movt = 0x3A,
  SH3_mul = 0x3B,
  SH3_muls = 0x3C,
  SH3_mulu = 0x3D,
  SH3_neg = 0x3E,
  SH3_negc = 0x3F,
  SH3_nop = 0x40,
  SH3_not = 0x41,
  SH3_or = 0x42,
  SH3_or_b = 0x43,
  SH3_pref = 0x44,
  SH3_rotcl = 0x45,
  SH3_rotcr = 0x46,
  SH3_rotl = 0x47,
  SH3_rotr = 0x48,
  SH3_rte = 0x49,
  SH3_rts = 0x4A,
  SH3_sets = 0x4B,
  SH3_sett = 0x4C,
  SH3_shad = 0x4D,
  SH3_shal = 0x4E,
  SH3_shar = 0x4F,
  SH3_shld = 0x50,
  SH3_shll = 0x51,
  SH3_shll2 = 0x52,
  SH3_shll8 = 0x53,
  SH3_shll16 = 0x54,
  SH3_shlr = 0x55,
  SH3_shlr2 = 0x56,
  SH3_shlr8 = 0x57,
  SH3_shlr16 = 0x58,
  SH3_sleep = 0x59,
  SH3_stc = 0x5A,
  SH3_stc_l = 0x5B,
  SH3_sts = 0x5C,
  SH3_sts_l = 0x5D,
  SH3_sub = 0x5E,
  SH3_subc = 0x5F,
  SH3_subv = 0x60,
  SH3_swap_b = 0x61,
  SH3_swap_w = 0x62,
  SH3_tas_b = 0x63,
  SH3_trapa = 0x64,
  SH3_tst = 0x65,
  SH3_tst_b = 0x66,
  SH3_xor = 0x67,
  SH3_xor_b = 0x68,
  SH3_xtrct = 0x69,
  SH4_fabs = 0x6A,
  SH4_fadd = 0x6B,
  SH4_fcmp_eq = 0x6C,
  SH4_fcmp_gt = 0x6D,
  SH4_fcnvds = 0x6E,
  SH4_fcnvsd = 0x6F,
  SH4_fdiv = 0x70,
  SH4_fipr = 0x71,
  SH4_fldi0 = 0x72,
  SH4_fldi1 = 0x73,
  SH4_flds = 0x74,
  SH4_float = 0x75,
  SH4_fmac = 0x76,
  SH4_fmov = 0x77,
  SH4_fmov_s = 0x78,
  SH4_fmovex = 0x79,
  SH4_fmul = 0x7A,
  SH4_fneg = 0x7B,
  SH4_frchg = 0x7C,
  SH4_fschg = 0x7D,
  SH4_fsqrt = 0x7E,
  SH4_fsts = 0x7F,
  SH4_fsub = 0x80,
  SH4_ftrc = 0x81,
  SH4_ftrv = 0x82,
  SH4_ftstn = 0x83,
  SH4_movca_l = 0x84,
  SH4_ocbi = 0x85,
  SH4_ocbp = 0x86,
  SH4_ocbwb = 0x87,
  SH4_fsca = 0x88,
  SH2a_band_b = 0x89,
  SH2a_bandnot_b = 0x8A,
  SH2a_bclr = 0x8B,
  SH2a_bclr_b = 0x8C,
  SH2a_bld = 0x8D,
  SH2a_bld_b = 0x8E,
  SH2a_bldnot_b = 0x8F,
  SH2a_bor_b = 0x90,
  SH2a_bornot_b = 0x91,
  SH2a_bset = 0x92,
  SH2a_bset_b = 0x93,
  SH2a_bst = 0x94,
  SH2a_bst_b = 0x95,
  SH2a_bxor_b = 0x96,
  SH2a_clips_b = 0x97,
  SH2a_clips_w = 0x98,
  SH2a_clipu_b = 0x99,
  SH2a_clipu_w = 0x9A,
  SH2a_divs = 0x9B,
  SH2a_divu = 0x9C,
  SH2a_jsr_n = 0x9D,
  SH2a_ldbank = 0x9E,
  SH2a_movi20 = 0x9F,
  SH2a_movi20s = 0xA0,
  SH2a_movml_l = 0xA1,
  SH2a_movmu_l = 0xA2,
  SH2a_movrt = 0xA3,
  SH2a_movu_b = 0xA4,
  SH2a_movu_w = 0xA5,
  SH2a_mulr = 0xA6,
  SH2a_nott = 0xA7,
  SH2a_resbank = 0xA8,
  SH2a_rts_n = 0xA9,
  SH2a_rtv_n = 0xAA,
  SH2a_stbank = 0xAB,
  SH4a_movco_l = 0xAC,
  SH4a_movli_l = 0xAD,
  SH4a_movua_l = 0xAE,
  SH4a_icbi = 0xAF,
  SH4a_prefi = 0xB0,
  SH4a_synco = 0xB1,
  SH4a_fsrra = 0xB2,
  SH4a_fpchg = 0xB3,
  SH4_last = 0xB4,
};

/* 1752 */
enum _9181CA8ACBCDBAA965F884E226B6B56B : unsigned __int32
{
  Z8_null = 0x0,
  Z8_adc = 0x1,
  Z8_add = 0x2,
  Z8_and = 0x3,
  Z8_call = 0x4,
  Z8_ccf = 0x5,
  Z8_clr = 0x6,
  Z8_com = 0x7,
  Z8_cp = 0x8,
  Z8_da = 0x9,
  Z8_dec = 0xA,
  Z8_decw = 0xB,
  Z8_di = 0xC,
  Z8_djnz = 0xD,
  Z8_ei = 0xE,
  Z8_halt = 0xF,
  Z8_inc = 0x10,
  Z8_incw = 0x11,
  Z8_iret = 0x12,
  Z8_jp = 0x13,
  Z8_jpcond = 0x14,
  Z8_jr = 0x15,
  Z8_jrcond = 0x16,
  Z8_ld = 0x17,
  Z8_ldc = 0x18,
  Z8_ldci = 0x19,
  Z8_lde = 0x1A,
  Z8_ldei = 0x1B,
  Z8_nop = 0x1C,
  Z8_or = 0x1D,
  Z8_pop = 0x1E,
  Z8_push = 0x1F,
  Z8_rcf = 0x20,
  Z8_ret = 0x21,
  Z8_rl = 0x22,
  Z8_rlc = 0x23,
  Z8_rr = 0x24,
  Z8_rrc = 0x25,
  Z8_sbc = 0x26,
  Z8_scf = 0x27,
  Z8_sra = 0x28,
  Z8_srp = 0x29,
  Z8_stop = 0x2A,
  Z8_sub = 0x2B,
  Z8_swap = 0x2C,
  Z8_tm = 0x2D,
  Z8_tcm = 0x2E,
  Z8_xor = 0x2F,
  Z8_wdh = 0x30,
  Z8_wdt = 0x31,
  Z8_last = 0x32,
};

/* 1753 */
enum _399A7FCDD38BA7F71B3EB8BA6F845075 : unsigned __int32
{
  AVR_null = 0x0,
  AVR_add = 0x1,
  AVR_adc = 0x2,
  AVR_adiw = 0x3,
  AVR_sub = 0x4,
  AVR_subi = 0x5,
  AVR_sbc = 0x6,
  AVR_sbci = 0x7,
  AVR_sbiw = 0x8,
  AVR_and = 0x9,
  AVR_andi = 0xA,
  AVR_or = 0xB,
  AVR_ori = 0xC,
  AVR_eor = 0xD,
  AVR_com = 0xE,
  AVR_neg = 0xF,
  AVR_sbr = 0x10,
  AVR_cbr = 0x11,
  AVR_inc = 0x12,
  AVR_dec = 0x13,
  AVR_tst = 0x14,
  AVR_clr = 0x15,
  AVR_ser = 0x16,
  AVR_cp = 0x17,
  AVR_cpc = 0x18,
  AVR_cpi = 0x19,
  AVR_mul = 0x1A,
  AVR_rjmp = 0x1B,
  AVR_ijmp = 0x1C,
  AVR_jmp = 0x1D,
  AVR_rcall = 0x1E,
  AVR_icall = 0x1F,
  AVR_call = 0x20,
  AVR_ret = 0x21,
  AVR_reti = 0x22,
  AVR_cpse = 0x23,
  AVR_sbrc = 0x24,
  AVR_sbrs = 0x25,
  AVR_sbic = 0x26,
  AVR_sbis = 0x27,
  AVR_brbs = 0x28,
  AVR_brbc = 0x29,
  AVR_breq = 0x2A,
  AVR_brne = 0x2B,
  AVR_brcs = 0x2C,
  AVR_brcc = 0x2D,
  AVR_brsh = 0x2E,
  AVR_brlo = 0x2F,
  AVR_brmi = 0x30,
  AVR_brpl = 0x31,
  AVR_brge = 0x32,
  AVR_brlt = 0x33,
  AVR_brhs = 0x34,
  AVR_brhc = 0x35,
  AVR_brts = 0x36,
  AVR_brtc = 0x37,
  AVR_brvs = 0x38,
  AVR_brvc = 0x39,
  AVR_brie = 0x3A,
  AVR_brid = 0x3B,
  AVR_mov = 0x3C,
  AVR_ldi = 0x3D,
  AVR_lds = 0x3E,
  AVR_ld = 0x3F,
  AVR_ldd = 0x40,
  AVR_sts = 0x41,
  AVR_st = 0x42,
  AVR_std = 0x43,
  AVR_lpm = 0x44,
  AVR_in = 0x45,
  AVR_out = 0x46,
  AVR_push = 0x47,
  AVR_pop = 0x48,
  AVR_lsl = 0x49,
  AVR_lsr = 0x4A,
  AVR_rol = 0x4B,
  AVR_ror = 0x4C,
  AVR_asr = 0x4D,
  AVR_swap = 0x4E,
  AVR_bset = 0x4F,
  AVR_bclr = 0x50,
  AVR_sbi = 0x51,
  AVR_cbi = 0x52,
  AVR_bst = 0x53,
  AVR_bld = 0x54,
  AVR_sec = 0x55,
  AVR_clc = 0x56,
  AVR_sen = 0x57,
  AVR_cln = 0x58,
  AVR_sez = 0x59,
  AVR_clz = 0x5A,
  AVR_sei = 0x5B,
  AVR_cli = 0x5C,
  AVR_ses = 0x5D,
  AVR_cls = 0x5E,
  AVR_sev = 0x5F,
  AVR_clv = 0x60,
  AVR_set = 0x61,
  AVR_clt = 0x62,
  AVR_seh = 0x63,
  AVR_clh = 0x64,
  AVR_nop = 0x65,
  AVR_sleep = 0x66,
  AVR_wdr = 0x67,
  AVR_elpm = 0x68,
  AVR_espm = 0x69,
  AVR_fmul = 0x6A,
  AVR_fmuls = 0x6B,
  AVR_fmulsu = 0x6C,
  AVR_movw = 0x6D,
  AVR_muls = 0x6E,
  AVR_mulsu = 0x6F,
  AVR_spm = 0x70,
  AVR_eicall = 0x71,
  AVR_eijmp = 0x72,
  AVR_des = 0x73,
  AVR_lac = 0x74,
  AVR_las = 0x75,
  AVR_lat = 0x76,
  AVR_xch = 0x77,
  AVR_last = 0x78,
};

/* 1754 */
enum _49804ECC545513722F7C143297BF37DB : unsigned __int32
{
  MIPS_null = 0x0,
  MIPS_add = 0x1,
  MIPS_addu = 0x2,
  MIPS_and = 0x3,
  MIPS_dadd = 0x4,
  MIPS_daddu = 0x5,
  MIPS_dsub = 0x6,
  MIPS_dsubu = 0x7,
  MIPS_nor = 0x8,
  MIPS_or = 0x9,
  MIPS_slt = 0xA,
  MIPS_sltu = 0xB,
  MIPS_sub = 0xC,
  MIPS_subu = 0xD,
  MIPS_xor = 0xE,
  MIPS_dsll = 0xF,
  MIPS_dsll32 = 0x10,
  MIPS_dsra = 0x11,
  MIPS_dsra32 = 0x12,
  MIPS_dsrl = 0x13,
  MIPS_dsrl32 = 0x14,
  MIPS_sll = 0x15,
  MIPS_sra = 0x16,
  MIPS_srl = 0x17,
  MIPS_dsllv = 0x18,
  MIPS_dsrav = 0x19,
  MIPS_dsrlv = 0x1A,
  MIPS_sllv = 0x1B,
  MIPS_srav = 0x1C,
  MIPS_srlv = 0x1D,
  MIPS_addi = 0x1E,
  MIPS_addiu = 0x1F,
  MIPS_daddi = 0x20,
  MIPS_daddiu = 0x21,
  MIPS_slti = 0x22,
  MIPS_sltiu = 0x23,
  MIPS_andi = 0x24,
  MIPS_ori = 0x25,
  MIPS_xori = 0x26,
  MIPS_teq = 0x27,
  MIPS_tge = 0x28,
  MIPS_tgeu = 0x29,
  MIPS_tlt = 0x2A,
  MIPS_tltu = 0x2B,
  MIPS_tne = 0x2C,
  MIPS_cfc1 = 0x2D,
  MIPS_cfc2 = 0x2E,
  MIPS_ctc1 = 0x2F,
  MIPS_ctc2 = 0x30,
  MIPS_dmfc0 = 0x31,
  MIPS_qmfc2 = 0x32,
  MIPS_dmtc0 = 0x33,
  MIPS_qmtc2 = 0x34,
  MIPS_mfc0 = 0x35,
  MIPS_mfc1 = 0x36,
  MIPS_mfc2 = 0x37,
  MIPS_mtc0 = 0x38,
  MIPS_mtc1 = 0x39,
  MIPS_mtc2 = 0x3A,
  MIPS_teqi = 0x3B,
  MIPS_tgei = 0x3C,
  MIPS_tgeiu = 0x3D,
  MIPS_tlti = 0x3E,
  MIPS_tltiu = 0x3F,
  MIPS_tnei = 0x40,
  MIPS_ddiv = 0x41,
  MIPS_ddivu = 0x42,
  MIPS_div = 0x43,
  MIPS_divu = 0x44,
  MIPS_dmult = 0x45,
  MIPS_dmultu = 0x46,
  MIPS_mult = 0x47,
  MIPS_multu = 0x48,
  MIPS_mthi = 0x49,
  MIPS_mtlo = 0x4A,
  MIPS_mfhi = 0x4B,
  MIPS_mflo = 0x4C,
  MIPS_cop0 = 0x4D,
  MIPS_cop1 = 0x4E,
  MIPS_cop2 = 0x4F,
  MIPS_break = 0x50,
  MIPS_syscall = 0x51,
  MIPS_bc0f = 0x52,
  MIPS_bc1f = 0x53,
  MIPS_bc2f = 0x54,
  MIPS_bc3f = 0x55,
  MIPS_bc0fl = 0x56,
  MIPS_bc1fl = 0x57,
  MIPS_bc2fl = 0x58,
  MIPS_bc3fl = 0x59,
  MIPS_bc0t = 0x5A,
  MIPS_bc1t = 0x5B,
  MIPS_bc2t = 0x5C,
  MIPS_bc3t = 0x5D,
  MIPS_bc0tl = 0x5E,
  MIPS_bc1tl = 0x5F,
  MIPS_bc2tl = 0x60,
  MIPS_bc3tl = 0x61,
  MIPS_bgez = 0x62,
  MIPS_bgezal = 0x63,
  MIPS_bgezall = 0x64,
  MIPS_bgezl = 0x65,
  MIPS_bgtz = 0x66,
  MIPS_bgtzl = 0x67,
  MIPS_blez = 0x68,
  MIPS_blezl = 0x69,
  MIPS_bltz = 0x6A,
  MIPS_bltzal = 0x6B,
  MIPS_bltzall = 0x6C,
  MIPS_bltzl = 0x6D,
  MIPS_beq = 0x6E,
  MIPS_beql = 0x6F,
  MIPS_bne = 0x70,
  MIPS_bnel = 0x71,
  MIPS_jalr = 0x72,
  MIPS_j = 0x73,
  MIPS_jr = 0x74,
  MIPS_jal = 0x75,
  MIPS_jalx = 0x76,
  MIPS_cache = 0x77,
  MIPS_lb = 0x78,
  MIPS_lbu = 0x79,
  MIPS_ldl = 0x7A,
  MIPS_ldr = 0x7B,
  MIPS_lwl = 0x7C,
  MIPS_lwr = 0x7D,
  MIPS_ld = 0x7E,
  MIPS_lld = 0x7F,
  MIPS_ldc1 = 0x80,
  MIPS_ldc2 = 0x81,
  MIPS_ll = 0x82,
  MIPS_lw = 0x83,
  MIPS_lwu = 0x84,
  MIPS_lh = 0x85,
  MIPS_lhu = 0x86,
  MIPS_lui = 0x87,
  MIPS_lwc1 = 0x88,
  MIPS_lwc2 = 0x89,
  MIPS_sb = 0x8A,
  MIPS_sdl = 0x8B,
  MIPS_sdr = 0x8C,
  MIPS_swl = 0x8D,
  MIPS_swr = 0x8E,
  MIPS_scd = 0x8F,
  MIPS_sd = 0x90,
  MIPS_sdc1 = 0x91,
  MIPS_sdc2 = 0x92,
  MIPS_sc = 0x93,
  MIPS_sw = 0x94,
  MIPS_sh = 0x95,
  MIPS_swc1 = 0x96,
  MIPS_swc2 = 0x97,
  MIPS_sync = 0x98,
  MIPS_eret = 0x99,
  MIPS_tlbp = 0x9A,
  MIPS_tlbr = 0x9B,
  MIPS_tlbwi = 0x9C,
  MIPS_tlbwr = 0x9D,
  MIPS_fadd = 0x9E,
  MIPS_fsub = 0x9F,
  MIPS_fmul = 0xA0,
  MIPS_fdiv = 0xA1,
  MIPS_fabs = 0xA2,
  MIPS_fcvt_s = 0xA3,
  MIPS_fcvt_d = 0xA4,
  MIPS_fcvt_w = 0xA5,
  MIPS_fcvt_l = 0xA6,
  MIPS_fround_l = 0xA7,
  MIPS_ftrunc_l = 0xA8,
  MIPS_fceil_l = 0xA9,
  MIPS_ffloor_l = 0xAA,
  MIPS_fround_w = 0xAB,
  MIPS_ftrunc_w = 0xAC,
  MIPS_fceil_w = 0xAD,
  MIPS_ffloor_w = 0xAE,
  MIPS_fmov = 0xAF,
  MIPS_fneg = 0xB0,
  MIPS_fsqrt = 0xB1,
  MIPS_fc_f = 0xB2,
  MIPS_fc_un = 0xB3,
  MIPS_fc_eq = 0xB4,
  MIPS_fc_ueq = 0xB5,
  MIPS_fc_olt = 0xB6,
  MIPS_fc_ult = 0xB7,
  MIPS_fc_ole = 0xB8,
  MIPS_fc_ule = 0xB9,
  MIPS_fc_sf = 0xBA,
  MIPS_fc_ngle = 0xBB,
  MIPS_fc_seq = 0xBC,
  MIPS_fc_ngl = 0xBD,
  MIPS_fc_lt = 0xBE,
  MIPS_fc_nge = 0xBF,
  MIPS_fc_le = 0xC0,
  MIPS_fc_ngt = 0xC1,
  MIPS_nop = 0xC2,
  MIPS_mov = 0xC3,
  MIPS_neg = 0xC4,
  MIPS_negu = 0xC5,
  MIPS_bnez = 0xC6,
  MIPS_bnezl = 0xC7,
  MIPS_beqz = 0xC8,
  MIPS_beqzl = 0xC9,
  MIPS_b = 0xCA,
  MIPS_bal = 0xCB,
  MIPS_li = 0xCC,
  MIPS_la = 0xCD,
  MIPS_pref = 0xCE,
  MIPS_ldxc1 = 0xCF,
  MIPS_lwxc1 = 0xD0,
  MIPS_sdxc1 = 0xD1,
  MIPS_swxc1 = 0xD2,
  MIPS_madd_s = 0xD3,
  MIPS_madd_d = 0xD4,
  MIPS_msub_s = 0xD5,
  MIPS_msub_d = 0xD6,
  MIPS_movf = 0xD7,
  MIPS_movt = 0xD8,
  MIPS_movn = 0xD9,
  MIPS_movz = 0xDA,
  MIPS_fmovf = 0xDB,
  MIPS_fmovt = 0xDC,
  MIPS_fmovn = 0xDD,
  MIPS_fmovz = 0xDE,
  MIPS_nmadd_s = 0xDF,
  MIPS_nmadd_d = 0xE0,
  MIPS_nmsub_s = 0xE1,
  MIPS_nmsub_d = 0xE2,
  MIPS_prefx = 0xE3,
  MIPS_frecip = 0xE4,
  MIPS_frsqrt = 0xE5,
  MIPS_lbv = 0xE6,
  MIPS_lsv = 0xE7,
  MIPS_llv = 0xE8,
  MIPS_ldv = 0xE9,
  MIPS_lqv = 0xEA,
  MIPS_lrv = 0xEB,
  MIPS_lpv = 0xEC,
  MIPS_luv = 0xED,
  MIPS_lhv = 0xEE,
  MIPS_lfv = 0xEF,
  MIPS_lwv = 0xF0,
  MIPS_ltv = 0xF1,
  MIPS_sbv = 0xF2,
  MIPS_ssv = 0xF3,
  MIPS_slv = 0xF4,
  MIPS_sdv = 0xF5,
  MIPS_sqv = 0xF6,
  MIPS_srv = 0xF7,
  MIPS_spv = 0xF8,
  MIPS_suv = 0xF9,
  MIPS_shv = 0xFA,
  MIPS_sfv = 0xFB,
  MIPS_swv = 0xFC,
  MIPS_stv = 0xFD,
  MIPS_vmulf = 0xFE,
  MIPS_vmacf = 0xFF,
  MIPS_vmulu = 0x100,
  MIPS_vmacu = 0x101,
  MIPS_vrndp = 0x102,
  MIPS_vrndn = 0x103,
  MIPS_vmulq = 0x104,
  MIPS_vmacq = 0x105,
  MIPS_vmudh = 0x106,
  MIPS_vmadh = 0x107,
  MIPS_vmudm = 0x108,
  MIPS_vmadm = 0x109,
  MIPS_vmudn = 0x10A,
  MIPS_vmadn = 0x10B,
  MIPS_vmudl = 0x10C,
  MIPS_vmadl = 0x10D,
  MIPS_vadd = 0x10E,
  MIPS_vsub = 0x10F,
  MIPS_vsut = 0x110,
  MIPS_vabs = 0x111,
  MIPS_vaddc = 0x112,
  MIPS_vsubc = 0x113,
  MIPS_vaddb = 0x114,
  MIPS_vsubb = 0x115,
  MIPS_vaccb = 0x116,
  MIPS_vsucb = 0x117,
  MIPS_vsad = 0x118,
  MIPS_vsac = 0x119,
  MIPS_vsum = 0x11A,
  MIPS_vsaw = 0x11B,
  MIPS_vlt = 0x11C,
  MIPS_veq = 0x11D,
  MIPS_vne = 0x11E,
  MIPS_vge = 0x11F,
  MIPS_vcl = 0x120,
  MIPS_vch = 0x121,
  MIPS_vcr = 0x122,
  MIPS_vmrg = 0x123,
  MIPS_vand = 0x124,
  MIPS_vnand = 0x125,
  MIPS_vor = 0x126,
  MIPS_vnor = 0x127,
  MIPS_vxor = 0x128,
  MIPS_vnxor = 0x129,
  MIPS_vnoop = 0x12A,
  MIPS_vmov = 0x12B,
  MIPS_vrcp = 0x12C,
  MIPS_vrsq = 0x12D,
  MIPS_vrcph = 0x12E,
  MIPS_vrsqh = 0x12F,
  MIPS_vrcpl = 0x130,
  MIPS_vrsql = 0x131,
  MIPS_vinst = 0x132,
  MIPS_vextt = 0x133,
  MIPS_vinsq = 0x134,
  MIPS_vextq = 0x135,
  MIPS_vinsn = 0x136,
  MIPS_vextn = 0x137,
  MIPS_cfc0 = 0x138,
  MIPS_ctc0 = 0x139,
  MIPS_mtsa = 0x13A,
  MIPS_R5900_first = 0x13A,
  MIPS_mfsa = 0x13B,
  MIPS_mtsab = 0x13C,
  MIPS_mtsah = 0x13D,
  MIPS_fadda = 0x13E,
  MIPS_fsuba = 0x13F,
  MIPS_fmula = 0x140,
  MIPS_fmadda = 0x141,
  MIPS_fmsuba = 0x142,
  MIPS_fmadd = 0x143,
  MIPS_fmsub = 0x144,
  MIPS_fmax = 0x145,
  MIPS_fmin = 0x146,
  MIPS_plzcw = 0x147,
  MIPS_mthi1 = 0x148,
  MIPS_mtlo1 = 0x149,
  MIPS_pmthl_lw = 0x14A,
  MIPS_pmthi = 0x14B,
  MIPS_pmtlo = 0x14C,
  MIPS_div1 = 0x14D,
  MIPS_divu1 = 0x14E,
  MIPS_pdivw = 0x14F,
  MIPS_pdivuw = 0x150,
  MIPS_pdivbw = 0x151,
  MIPS_paddw = 0x152,
  MIPS_pmaddw = 0x153,
  MIPS_mult1 = 0x154,
  MIPS_multu1 = 0x155,
  MIPS_madd1 = 0x156,
  MIPS_maddu1 = 0x157,
  MIPS_pmadduw = 0x158,
  MIPS_psubw = 0x159,
  MIPS_pcgtw = 0x15A,
  MIPS_psllvw = 0x15B,
  MIPS_pceqw = 0x15C,
  MIPS_pmaxw = 0x15D,
  MIPS_psrlvw = 0x15E,
  MIPS_pminw = 0x15F,
  MIPS_psravw = 0x160,
  MIPS_paddh = 0x161,
  MIPS_pmsubw = 0x162,
  MIPS_padsbh = 0x163,
  MIPS_psubh = 0x164,
  MIPS_pcgth = 0x165,
  MIPS_pceqh = 0x166,
  MIPS_pmaxh = 0x167,
  MIPS_pminh = 0x168,
  MIPS_paddb = 0x169,
  MIPS_psubb = 0x16A,
  MIPS_pcgtb = 0x16B,
  MIPS_pinth = 0x16C,
  MIPS_pceqb = 0x16D,
  MIPS_pintoh = 0x16E,
  MIPS_pmultw = 0x16F,
  MIPS_pmultuw = 0x170,
  MIPS_pcpyld = 0x171,
  MIPS_pcpyud = 0x172,
  MIPS_paddsw = 0x173,
  MIPS_pmaddh = 0x174,
  MIPS_padduw = 0x175,
  MIPS_psubsw = 0x176,
  MIPS_phmadh = 0x177,
  MIPS_psubuw = 0x178,
  MIPS_pextlw = 0x179,
  MIPS_pand = 0x17A,
  MIPS_pextuw = 0x17B,
  MIPS_por = 0x17C,
  MIPS_ppacw = 0x17D,
  MIPS_pxor = 0x17E,
  MIPS_pnor = 0x17F,
  MIPS_paddsh = 0x180,
  MIPS_pmsubh = 0x181,
  MIPS_padduh = 0x182,
  MIPS_psubsh = 0x183,
  MIPS_phmsbh = 0x184,
  MIPS_psubuh = 0x185,
  MIPS_pextlh = 0x186,
  MIPS_pextuh = 0x187,
  MIPS_ppach = 0x188,
  MIPS_paddsb = 0x189,
  MIPS_paddub = 0x18A,
  MIPS_psubsb = 0x18B,
  MIPS_psubub = 0x18C,
  MIPS_pextlb = 0x18D,
  MIPS_pextub = 0x18E,
  MIPS_ppacb = 0x18F,
  MIPS_qfsrv = 0x190,
  MIPS_pmulth = 0x191,
  MIPS_pabsw = 0x192,
  MIPS_pabsh = 0x193,
  MIPS_pexoh = 0x194,
  MIPS_pexch = 0x195,
  MIPS_prevh = 0x196,
  MIPS_pcpyh = 0x197,
  MIPS_pext5 = 0x198,
  MIPS_pexow = 0x199,
  MIPS_pexcw = 0x19A,
  MIPS_ppac5 = 0x19B,
  MIPS_prot3w = 0x19C,
  MIPS_psllh = 0x19D,
  MIPS_psrlh = 0x19E,
  MIPS_psrah = 0x19F,
  MIPS_psllw = 0x1A0,
  MIPS_psrlw = 0x1A1,
  MIPS_psraw = 0x1A2,
  MIPS_mfhi1 = 0x1A3,
  MIPS_mflo1 = 0x1A4,
  MIPS_pmfhi = 0x1A5,
  MIPS_pmflo = 0x1A6,
  MIPS_pmfhl = 0x1A7,
  MIPS_lq = 0x1A8,
  MIPS_sq = 0x1A9,
  MIPS_lqc2 = 0x1AA,
  MIPS_sqc2 = 0x1AB,
  MIPS_madd_r5900 = 0x1AC,
  MIPS_maddu_r5900 = 0x1AD,
  MIPS_R5900_last = 0x1AD,
  MIPS_mult3 = 0x1AE,
  MIPS_multu3 = 0x1AF,
  MIPS_bteqz = 0x1B7,
  MIPS_btnez = 0x1B8,
  MIPS_cmp = 0x1B9,
  MIPS_cmpi = 0x1BA,
  MIPS_extend = 0x1CA,
  MIPS_move = 0x1D9,
  MIPS_not = 0x1DD,
  MIPS_dla = 0x1EF,
  MIPS_clo = 0x1F2,
  MIPS_clz = 0x1F3,
  MIPS_madd = 0x1F4,
  MIPS_maddu = 0x1F5,
  MIPS_msub = 0x1F6,
  MIPS_msubu = 0x1F7,
  MIPS_mul = 0x1F8,
  MIPS_sdbbp = 0x1F9,
  MIPS_wait = 0x1FA,
  MIPS_alnv_ps = 0x1FB,
  MIPS_deret = 0x1FC,
  MIPS_di = 0x1FD,
  MIPS_ehb = 0x1FE,
  MIPS_ei = 0x1FF,
  MIPS_ext = 0x200,
  MIPS_fcvt_ps = 0x201,
  MIPS_fcvt_s_pl = 0x202,
  MIPS_fcvt_s_pu = 0x203,
  MIPS_ins = 0x204,
  MIPS_jalr_hb = 0x205,
  MIPS_jr_hb = 0x206,
  MIPS_luxc1 = 0x207,
  MIPS_madd_ps = 0x208,
  MIPS_mfhc1 = 0x209,
  MIPS_mfhc2 = 0x20A,
  MIPS_msub_ps = 0x20B,
  MIPS_mthc1 = 0x20C,
  MIPS_mthc2 = 0x20D,
  MIPS_nmadd_ps = 0x20E,
  MIPS_nmsub_ps = 0x20F,
  MIPS_pll = 0x210,
  MIPS_plu = 0x211,
  MIPS_pul = 0x212,
  MIPS_puu = 0x213,
  MIPS_rdhwr = 0x214,
  MIPS_rdpgpr = 0x215,
  MIPS_rotr = 0x216,
  MIPS_rotrv = 0x217,
  MIPS_seb = 0x218,
  MIPS_seh = 0x219,
  MIPS_suxc1 = 0x21A,
  MIPS_synci = 0x21B,
  MIPS_wrpgpr = 0x21C,
  MIPS_wsbh = 0x21D,
  MIPS_dmfc1 = 0x21E,
  MIPS_dmtc1 = 0x21F,
  MIPS_save = 0x220,
  MIPS_restore = 0x221,
  MIPS_jalrc = 0x222,
  MIPS_jrc = 0x223,
  MIPS_sew = 0x224,
  MIPS_zeb = 0x225,
  MIPS_zeh = 0x226,
  MIPS_zew = 0x227,
  MIPS_ssnop = 0x228,
  MIPS_li_s = 0x229,
  MIPS_li_d = 0x22A,
  MIPS_dneg = 0x22B,
  MIPS_dnegu = 0x22C,
  MIPS_pause = 0x22D,
  MIPS_dclo = 0x22E,
  MIPS_dclz = 0x22F,
  MIPS_dext = 0x230,
  MIPS_dextm = 0x231,
  MIPS_dextu = 0x232,
  MIPS_dins = 0x233,
  MIPS_dinsm = 0x234,
  MIPS_dinsu = 0x235,
  MIPS_dmfc2 = 0x236,
  MIPS_dmtc2 = 0x237,
  MIPS_drotr = 0x238,
  MIPS_drotr32 = 0x239,
  MIPS_drotrv = 0x23A,
  MIPS_dsbh = 0x23B,
  MIPS_dshd = 0x23C,
  MIPS_baddu = 0x23D,
  MIPS_bbit0 = 0x23E,
  MIPS_bbit032 = 0x23F,
  MIPS_bbit1 = 0x240,
  MIPS_bbit132 = 0x241,
  MIPS_cins = 0x242,
  MIPS_cins32 = 0x243,
  MIPS_dmul = 0x244,
  MIPS_dpop = 0x245,
  MIPS_exts = 0x246,
  MIPS_exts32 = 0x247,
  MIPS_mtm0 = 0x248,
  MIPS_mtm1 = 0x249,
  MIPS_mtm2 = 0x24A,
  MIPS_mtp0 = 0x24B,
  MIPS_mtp1 = 0x24C,
  MIPS_mtp2 = 0x24D,
  MIPS_pop = 0x24E,
  MIPS_saa = 0x24F,
  MIPS_saad = 0x250,
  MIPS_seq = 0x251,
  MIPS_seqi = 0x252,
  MIPS_sne = 0x253,
  MIPS_snei = 0x254,
  MIPS_synciobdma = 0x255,
  MIPS_syncs = 0x256,
  MIPS_syncw = 0x257,
  MIPS_syncws = 0x258,
  MIPS_uld = 0x259,
  MIPS_ulw = 0x25A,
  MIPS_usd = 0x25B,
  MIPS_usw = 0x25C,
  MIPS_v3mulu = 0x25D,
  MIPS_vmm0 = 0x25E,
  MIPS_vmulu_cn = 0x25F,
  MIPS_dbreak = 0x260,
  MIPS_dret = 0x261,
  MIPS_mfdr = 0x262,
  MIPS_mtdr = 0x263,
  PSP_bitrev = 0x264,
  PSP_max = 0x265,
  PSP_min = 0x266,
  PSP_mfic = 0x267,
  PSP_mtic = 0x268,
  PSP_wsbw = 0x269,
  PSP_sleep = 0x26A,
  PSP_lv = 0x26B,
  PSP_lvl = 0x26C,
  PSP_lvr = 0x26D,
  PSP_sv = 0x26E,
  PSP_svl = 0x26F,
  PSP_svr = 0x270,
  PSP_mfv = 0x271,
  PSP_mtv = 0x272,
  PSP_mfvc = 0x273,
  PSP_mtvc = 0x274,
  PSP_bvf = 0x275,
  PSP_bvt = 0x276,
  PSP_bvfl = 0x277,
  PSP_bvtl = 0x278,
  PSP_vnop = 0x279,
  PSP_vflush = 0x27A,
  PSP_vsync = 0x27B,
  PSP_vabs = 0x27C,
  PSP_vadd = 0x27D,
  PSP_vasin = 0x27E,
  PSP_vavg = 0x27F,
  PSP_vbfy1 = 0x280,
  PSP_vbfy2 = 0x281,
  PSP_vc2i = 0x282,
  PSP_vcmovf = 0x283,
  PSP_vcmovt = 0x284,
  PSP_vcmp = 0x285,
  PSP_vcos = 0x286,
  PSP_vcrs = 0x287,
  PSP_vcrsp = 0x288,
  PSP_vcst = 0x289,
  PSP_vdet = 0x28A,
  PSP_vdiv = 0x28B,
  PSP_vdot = 0x28C,
  PSP_vexp2 = 0x28D,
  PSP_vf2h = 0x28E,
  PSP_vf2id = 0x28F,
  PSP_vf2in = 0x290,
  PSP_vf2iu = 0x291,
  PSP_vf2iz = 0x292,
  PSP_vfad = 0x293,
  PSP_vfim = 0x294,
  PSP_vh2f = 0x295,
  PSP_vhdp = 0x296,
  PSP_vhtfm2 = 0x297,
  PSP_vhtfm3 = 0x298,
  PSP_vhtfm4 = 0x299,
  PSP_vi2c = 0x29A,
  PSP_vi2f = 0x29B,
  PSP_vi2s = 0x29C,
  PSP_vi2uc = 0x29D,
  PSP_vi2us = 0x29E,
  PSP_vidt = 0x29F,
  PSP_viim = 0x2A0,
  PSP_vlgb = 0x2A1,
  PSP_vlog2 = 0x2A2,
  PSP_vmax = 0x2A3,
  PSP_vmfvc = 0x2A4,
  PSP_vmidt = 0x2A5,
  PSP_vmin = 0x2A6,
  PSP_vmmov = 0x2A7,
  PSP_vmmul = 0x2A8,
  PSP_vmone = 0x2A9,
  PSP_vmov = 0x2AA,
  PSP_vmscl = 0x2AB,
  PSP_vmtvc = 0x2AC,
  PSP_vmul = 0x2AD,
  PSP_vmzero = 0x2AE,
  PSP_vneg = 0x2AF,
  PSP_vnrcp = 0x2B0,
  PSP_vnsin = 0x2B1,
  PSP_vocp = 0x2B2,
  PSP_vone = 0x2B3,
  PSP_vpfxd = 0x2B4,
  PSP_vpfxs = 0x2B5,
  PSP_vpfxt = 0x2B6,
  PSP_vqmul = 0x2B7,
  PSP_vrcp = 0x2B8,
  PSP_vrexp2 = 0x2B9,
  PSP_vrndf1 = 0x2BA,
  PSP_vrndf2 = 0x2BB,
  PSP_vrndi = 0x2BC,
  PSP_vrnds = 0x2BD,
  PSP_vrot = 0x2BE,
  PSP_vrsq = 0x2BF,
  PSP_vs2i = 0x2C0,
  PSP_vsat0 = 0x2C1,
  PSP_vsat1 = 0x2C2,
  PSP_vsbn = 0x2C3,
  PSP_vsbz = 0x2C4,
  PSP_vscl = 0x2C5,
  PSP_vscmp = 0x2C6,
  PSP_vsge = 0x2C7,
  PSP_vsgn = 0x2C8,
  PSP_vsin = 0x2C9,
  PSP_vslt = 0x2CA,
  PSP_vsocp = 0x2CB,
  PSP_vsqrt = 0x2CC,
  PSP_vsrt1 = 0x2CD,
  PSP_vsrt2 = 0x2CE,
  PSP_vsrt3 = 0x2CF,
  PSP_vsrt4 = 0x2D0,
  PSP_vsub = 0x2D1,
  PSP_vt4444 = 0x2D2,
  PSP_vt5551 = 0x2D3,
  PSP_vt5650 = 0x2D4,
  PSP_vtfm2 = 0x2D5,
  PSP_vtfm3 = 0x2D6,
  PSP_vtfm4 = 0x2D7,
  PSP_vuc2i = 0x2D8,
  PSP_vus2i = 0x2D9,
  PSP_vwbn = 0x2DA,
  PSP_vzero = 0x2DB,
  PSP_mfvme = 0x2DC,
  PSP_mtvme = 0x2DD,
  MIPS_ac0iu = 0x2DE,
  MIPS_bs1f = 0x2DF,
  MIPS_bfins = 0x2E0,
  MIPS_addmiu = 0x2E1,
  MIPS_sadd = 0x2E2,
  MIPS_ssub = 0x2E3,
  MIPS_btst = 0x2E4,
  MIPS_bclr = 0x2E5,
  MIPS_bset = 0x2E6,
  MIPS_bins = 0x2E7,
  MIPS_bext = 0x2E8,
  MIPS_dive = 0x2E9,
  MIPS_diveu = 0x2EA,
  MIPS_min = 0x2EB,
  MIPS_max = 0x2EC,
  MIPS_madd3 = 0x2ED,
  MIPS_maddu3 = 0x2EE,
  MIPS_msub3 = 0x2EF,
  MIPS_msubu3 = 0x2F0,
  MIPS_dvpe = 0x2F1,
  MIPS_evpe = 0x2F2,
  MIPS_dmt = 0x2F3,
  MIPS_emt = 0x2F4,
  MIPS_fork = 0x2F5,
  MIPS_yield = 0x2F6,
  MIPS_mftr = 0x2F7,
  MIPS_mftc0 = 0x2F8,
  MIPS_mftlo = 0x2F9,
  MIPS_mfthi = 0x2FA,
  MIPS_mftacx = 0x2FB,
  MIPS_mftdsp = 0x2FC,
  MIPS_mfthc1 = 0x2FD,
  MIPS_mftc1 = 0x2FE,
  MIPS_cftc1 = 0x2FF,
  MIPS_mfthc2 = 0x300,
  MIPS_mftc2 = 0x301,
  MIPS_cftc2 = 0x302,
  MIPS_mftgpr = 0x303,
  MIPS_mttr = 0x304,
  MIPS_mttc0 = 0x305,
  MIPS_mttlo = 0x306,
  MIPS_mtthi = 0x307,
  MIPS_mttacx = 0x308,
  MIPS_mttdsp = 0x309,
  MIPS_mtthc1 = 0x30A,
  MIPS_mttc1 = 0x30B,
  MIPS_cttc1 = 0x30C,
  MIPS_mtthc2 = 0x30D,
  MIPS_mttc2 = 0x30E,
  MIPS_cttc2 = 0x30F,
  MIPS_mttgpr = 0x310,
  MIPS_faddr = 0x311,
  MIPS_bc1any2f = 0x312,
  MIPS_bc1any2t = 0x313,
  MIPS_bc1any4f = 0x314,
  MIPS_bc1any4t = 0x315,
  MIPS_fcabs_f = 0x316,
  MIPS_fcabs_un = 0x317,
  MIPS_fcabs_eq = 0x318,
  MIPS_fcabs_ueq = 0x319,
  MIPS_fcabs_olt = 0x31A,
  MIPS_fcabs_ult = 0x31B,
  MIPS_fcabs_ole = 0x31C,
  MIPS_fcabs_ule = 0x31D,
  MIPS_fcabs_sf = 0x31E,
  MIPS_fcabs_ngle = 0x31F,
  MIPS_fcabs_seq = 0x320,
  MIPS_fcabs_ngl = 0x321,
  MIPS_fcabs_lt = 0x322,
  MIPS_fcabs_nge = 0x323,
  MIPS_fcabs_le = 0x324,
  MIPS_fcabs_ngt = 0x325,
  MIPS_fcvt_pw_ps = 0x326,
  MIPS_fcvt_ps_pw = 0x327,
  MIPS_fmulr = 0x328,
  MIPS_frecip1 = 0x329,
  MIPS_frecip2 = 0x32A,
  MIPS_frsqrt1 = 0x32B,
  MIPS_frsqrt2 = 0x32C,
  MIPS_lwxs = 0x32D,
  MIPS_maddp = 0x32E,
  MIPS_mflhxu = 0x32F,
  MIPS_mtlhx = 0x330,
  MIPS_multp = 0x331,
  MIPS_pperm = 0x332,
  MIPS_jals = 0x333,
  MIPS_lwp = 0x334,
  MIPS_ldp = 0x335,
  MIPS_lwm = 0x336,
  MIPS_ldm = 0x337,
  MIPS_swp = 0x338,
  MIPS_sdp = 0x339,
  MIPS_swm = 0x33A,
  MIPS_sdm = 0x33B,
  MIPS_bnezc = 0x33C,
  MIPS_bltzals = 0x33D,
  MIPS_beqzc = 0x33E,
  MIPS_bgezals = 0x33F,
  MIPS_jraddiusp = 0x340,
  MIPS_jalrs = 0x341,
  MIPS_jalrs_hb = 0x342,
  MIPS_movep = 0x343,
  MIPS_dli = 0x344,
  MIPS_insv = 0x345,
  MIPS_dinsv = 0x346,
  MIPS_bposge32 = 0x347,
  MIPS_bposge64 = 0x348,
  MIPS_addu_qb = 0x349,
  MIPS_addu_ph = 0x34A,
  MIPS_addsc = 0x34B,
  MIPS_subu_qb = 0x34C,
  MIPS_subu_ph = 0x34D,
  MIPS_addwc = 0x34E,
  MIPS_addq_ph = 0x34F,
  MIPS_modsub = 0x350,
  MIPS_subq_ph = 0x351,
  MIPS_addu_s_qb = 0x352,
  MIPS_addu_s_ph = 0x353,
  MIPS_raddu_w_qb = 0x354,
  MIPS_muleq_s_w_phl = 0x355,
  MIPS_subu_s_qb = 0x356,
  MIPS_subu_s_ph = 0x357,
  MIPS_muleq_s_w_phr = 0x358,
  MIPS_muleu_s_ph_qbl = 0x359,
  MIPS_addq_s_ph = 0x35A,
  MIPS_addq_s_w = 0x35B,
  MIPS_mulq_s_ph = 0x35C,
  MIPS_muleu_s_ph_qbr = 0x35D,
  MIPS_subq_s_ph = 0x35E,
  MIPS_subq_s_w = 0x35F,
  MIPS_mulq_rs_ph = 0x360,
  MIPS_addu_ob = 0x361,
  MIPS_subu_ob = 0x362,
  MIPS_addq_qh = 0x363,
  MIPS_addq_pw = 0x364,
  MIPS_subq_qh = 0x365,
  MIPS_subq_pw = 0x366,
  MIPS_addu_s_ob = 0x367,
  MIPS_raddu_l_ob = 0x368,
  MIPS_muleq_s_pw_qhl = 0x369,
  MIPS_subu_s_ob = 0x36A,
  MIPS_muleq_s_pw_qhr = 0x36B,
  MIPS_muleu_s_qh_obl = 0x36C,
  MIPS_addq_s_qh = 0x36D,
  MIPS_addq_s_pw = 0x36E,
  MIPS_muleu_s_qh_obr = 0x36F,
  MIPS_subq_s_qh = 0x370,
  MIPS_subq_s_pw = 0x371,
  MIPS_mulq_rs_qh = 0x372,
  MIPS_cmpu_eq_qb = 0x373,
  MIPS_cmp_eq_ph = 0x374,
  MIPS_cmpgdu_eq_qb = 0x375,
  MIPS_cmpu_lt_qb = 0x376,
  MIPS_cmp_lt_ph = 0x377,
  MIPS_cmpgdu_lt_qb = 0x378,
  MIPS_cmpu_le_qb = 0x379,
  MIPS_cmp_le_ph = 0x37A,
  MIPS_cmpgdu_le_qb = 0x37B,
  MIPS_pick_qb = 0x37C,
  MIPS_pick_ph = 0x37D,
  MIPS_cmpgu_eq_qb = 0x37E,
  MIPS_precrq_qb_ph = 0x37F,
  MIPS_precrq_ph_w = 0x380,
  MIPS_cmpgu_lt_qb = 0x381,
  MIPS_precr_qb_ph = 0x382,
  MIPS_precrq_rs_ph_w = 0x383,
  MIPS_cmpgu_le_qb = 0x384,
  MIPS_packrl_ph = 0x385,
  MIPS_precr_sra_ph_w = 0x386,
  MIPS_precrqu_s_qb_ph = 0x387,
  MIPS_precr_sra_r_ph_w = 0x388,
  MIPS_cmpu_eq_ob = 0x389,
  MIPS_cmp_eq_qh = 0x38A,
  MIPS_cmp_eq_pw = 0x38B,
  MIPS_cmpu_lt_ob = 0x38C,
  MIPS_cmp_lt_qh = 0x38D,
  MIPS_cmp_lt_pw = 0x38E,
  MIPS_cmpu_le_ob = 0x38F,
  MIPS_cmp_le_qh = 0x390,
  MIPS_cmp_le_pw = 0x391,
  MIPS_pick_ob = 0x392,
  MIPS_pick_qh = 0x393,
  MIPS_pick_pw = 0x394,
  MIPS_cmpgu_eq_ob = 0x395,
  MIPS_precrq_ob_qh = 0x396,
  MIPS_precrq_qh_pw = 0x397,
  MIPS_precrq_pw_l = 0x398,
  MIPS_cmpgu_lt_ob = 0x399,
  MIPS_precrq_rs_qh_pw = 0x39A,
  MIPS_cmpgu_le_ob = 0x39B,
  MIPS_packrl_pw = 0x39C,
  MIPS_precrqu_s_ob_qh = 0x39D,
  MIPS_absq_s_qb = 0x39E,
  MIPS_absq_s_ph = 0x39F,
  MIPS_absq_s_w = 0x3A0,
  MIPS_repl_qb = 0x3A1,
  MIPS_repl_ph = 0x3A2,
  MIPS_replv_qb = 0x3A3,
  MIPS_replv_ph = 0x3A4,
  MIPS_bitrev = 0x3A5,
  MIPS_precequ_ph_qbl = 0x3A6,
  MIPS_preceq_w_phl = 0x3A7,
  MIPS_preceu_ph_qbl = 0x3A8,
  MIPS_precequ_ph_qbr = 0x3A9,
  MIPS_preceq_w_phr = 0x3AA,
  MIPS_preceu_ph_qbr = 0x3AB,
  MIPS_precequ_ph_qbla = 0x3AC,
  MIPS_preceu_ph_qbla = 0x3AD,
  MIPS_precequ_ph_qbra = 0x3AE,
  MIPS_preceu_ph_qbra = 0x3AF,
  MIPS_absq_s_qh = 0x3B0,
  MIPS_absq_s_pw = 0x3B1,
  MIPS_repl_ob = 0x3B2,
  MIPS_repl_qh = 0x3B3,
  MIPS_repl_pw = 0x3B4,
  MIPS_replv_ob = 0x3B5,
  MIPS_replv_qh = 0x3B6,
  MIPS_replv_pw = 0x3B7,
  MIPS_precequ_pw_qhl = 0x3B8,
  MIPS_preceq_pw_qhl = 0x3B9,
  MIPS_preceq_s_l_pwl = 0x3BA,
  MIPS_preceu_qh_obl = 0x3BB,
  MIPS_precequ_pw_qhr = 0x3BC,
  MIPS_preceq_pw_qhr = 0x3BD,
  MIPS_preceq_s_l_pwr = 0x3BE,
  MIPS_preceu_qh_obr = 0x3BF,
  MIPS_precequ_pw_qhla = 0x3C0,
  MIPS_preceq_pw_qhla = 0x3C1,
  MIPS_preceu_qh_obla = 0x3C2,
  MIPS_precequ_pw_qhra = 0x3C3,
  MIPS_preceq_pw_qhra = 0x3C4,
  MIPS_preceu_qh_obra = 0x3C5,
  MIPS_shll_qb = 0x3C6,
  MIPS_shll_ph = 0x3C7,
  MIPS_shrl_qb = 0x3C8,
  MIPS_shra_ph = 0x3C9,
  MIPS_shrl_ph = 0x3CA,
  MIPS_shllv_qb = 0x3CB,
  MIPS_shllv_ph = 0x3CC,
  MIPS_shrlv_qb = 0x3CD,
  MIPS_shrav_ph = 0x3CE,
  MIPS_shrlv_ph = 0x3CF,
  MIPS_shra_qb = 0x3D0,
  MIPS_shll_s_ph = 0x3D1,
  MIPS_shll_s_w = 0x3D2,
  MIPS_shra_r_qb = 0x3D3,
  MIPS_shra_r_ph = 0x3D4,
  MIPS_shra_r_w = 0x3D5,
  MIPS_shrav_qb = 0x3D6,
  MIPS_shllv_s_ph = 0x3D7,
  MIPS_shllv_s_w = 0x3D8,
  MIPS_shrav_r_qb = 0x3D9,
  MIPS_shrav_r_ph = 0x3DA,
  MIPS_shrav_r_w = 0x3DB,
  MIPS_shll_ob = 0x3DC,
  MIPS_shll_qh = 0x3DD,
  MIPS_shll_pw = 0x3DE,
  MIPS_shrl_ob = 0x3DF,
  MIPS_shra_qh = 0x3E0,
  MIPS_shra_pw = 0x3E1,
  MIPS_shllv_ob = 0x3E2,
  MIPS_shllv_qh = 0x3E3,
  MIPS_shllv_pw = 0x3E4,
  MIPS_shrlv_ob = 0x3E5,
  MIPS_shrav_qh = 0x3E6,
  MIPS_shrav_pw = 0x3E7,
  MIPS_shll_s_qh = 0x3E8,
  MIPS_shll_s_pw = 0x3E9,
  MIPS_shra_r_qh = 0x3EA,
  MIPS_shra_r_pw = 0x3EB,
  MIPS_shllv_s_qh = 0x3EC,
  MIPS_shllv_s_pw = 0x3ED,
  MIPS_shrav_r_qh = 0x3EE,
  MIPS_shrav_r_pw = 0x3EF,
  MIPS_lwx = 0x3F0,
  MIPS_ldx = 0x3F1,
  MIPS_lhx = 0x3F2,
  MIPS_lbux = 0x3F3,
  MIPS_dpa_w_ph = 0x3F4,
  MIPS_dpax_w_ph = 0x3F5,
  MIPS_maq_sa_w_phl = 0x3F6,
  MIPS_dpaqx_s_w_ph = 0x3F7,
  MIPS_dps_w_ph = 0x3F8,
  MIPS_dpsx_w_ph = 0x3F9,
  MIPS_dpsqx_s_w_ph = 0x3FA,
  MIPS_mulsa_w_ph = 0x3FB,
  MIPS_maq_sa_w_phr = 0x3FC,
  MIPS_dpaqx_sa_w_ph = 0x3FD,
  MIPS_dpau_h_qbl = 0x3FE,
  MIPS_dpsu_h_qbl = 0x3FF,
  MIPS_dpsqx_sa_w_ph = 0x400,
  MIPS_dpaq_s_w_ph = 0x401,
  MIPS_dpaq_sa_l_w = 0x402,
  MIPS_maq_s_w_phl = 0x403,
  MIPS_dpsq_s_w_ph = 0x404,
  MIPS_dpsq_sa_l_w = 0x405,
  MIPS_mulsaq_s_w_ph = 0x406,
  MIPS_maq_s_w_phr = 0x407,
  MIPS_dpau_h_qbr = 0x408,
  MIPS_dpsu_h_qbr = 0x409,
  MIPS_maq_sa_w_qhll = 0x40A,
  MIPS_maq_sa_w_qhlr = 0x40B,
  MIPS_dmadd = 0x40C,
  MIPS_dmsub = 0x40D,
  MIPS_maq_sa_w_qhrl = 0x40E,
  MIPS_dpau_h_obl = 0x40F,
  MIPS_dpsu_h_obl = 0x410,
  MIPS_maq_sa_w_qhrr = 0x411,
  MIPS_dpaq_s_w_qh = 0x412,
  MIPS_dpaq_sa_l_pw = 0x413,
  MIPS_maq_s_w_qhll = 0x414,
  MIPS_maq_s_l_pwl = 0x415,
  MIPS_dpsq_s_w_qh = 0x416,
  MIPS_dpsq_sa_l_pw = 0x417,
  MIPS_maq_s_w_qhlr = 0x418,
  MIPS_dmaddu = 0x419,
  MIPS_mulsaq_s_w_qh = 0x41A,
  MIPS_mulsaq_s_l_pw = 0x41B,
  MIPS_maq_s_w_qhrl = 0x41C,
  MIPS_maq_s_l_pwr = 0x41D,
  MIPS_dpau_h_obr = 0x41E,
  MIPS_dpsu_h_obr = 0x41F,
  MIPS_maq_s_w_qhrr = 0x420,
  MIPS_dmsubu = 0x421,
  MIPS_extr_w = 0x422,
  MIPS_extrv_w = 0x423,
  MIPS_extp = 0x424,
  MIPS_extpdp = 0x425,
  MIPS_rddsp = 0x426,
  MIPS_shilo = 0x427,
  MIPS_extpv = 0x428,
  MIPS_extpdpv = 0x429,
  MIPS_wrdsp = 0x42A,
  MIPS_shilov = 0x42B,
  MIPS_extr_r_w = 0x42C,
  MIPS_extrv_r_w = 0x42D,
  MIPS_extr_rs_w = 0x42E,
  MIPS_extr_s_h = 0x42F,
  MIPS_extrv_rs_w = 0x430,
  MIPS_extrv_s_h = 0x431,
  MIPS_mthlip = 0x432,
  MIPS_dextr_w = 0x433,
  MIPS_dextr_l = 0x434,
  MIPS_dextrv_w = 0x435,
  MIPS_dextrv_l = 0x436,
  MIPS_dextp = 0x437,
  MIPS_dextpdp = 0x438,
  MIPS_dshilo = 0x439,
  MIPS_dextpv = 0x43A,
  MIPS_dextpdpv = 0x43B,
  MIPS_dshilov = 0x43C,
  MIPS_dextr_r_w = 0x43D,
  MIPS_dextr_r_l = 0x43E,
  MIPS_dextrv_r_w = 0x43F,
  MIPS_dextrv_r_l = 0x440,
  MIPS_dextr_rs_w = 0x441,
  MIPS_dextr_s_h = 0x442,
  MIPS_dextr_rs_l = 0x443,
  MIPS_dextrv_rs_w = 0x444,
  MIPS_dextrv_s_h = 0x445,
  MIPS_dextrv_rs_l = 0x446,
  MIPS_dmthlip = 0x447,
  MIPS_adduh_qb = 0x448,
  MIPS_addqh_ph = 0x449,
  MIPS_addqh_w = 0x44A,
  MIPS_subuh_qb = 0x44B,
  MIPS_subqh_ph = 0x44C,
  MIPS_subqh_w = 0x44D,
  MIPS_adduh_r_qb = 0x44E,
  MIPS_addqh_r_ph = 0x44F,
  MIPS_addqh_r_w = 0x450,
  MIPS_subuh_r_qb = 0x451,
  MIPS_subqh_r_ph = 0x452,
  MIPS_subqh_r_w = 0x453,
  MIPS_mul_ph = 0x454,
  MIPS_mul_s_ph = 0x455,
  MIPS_mulq_s_w = 0x456,
  MIPS_mulq_rs_w = 0x457,
  MIPS_append = 0x458,
  MIPS_balign = 0x459,
  MIPS_prepend = 0x45A,
  MIPS_laa = 0x45B,
  MIPS_laad = 0x45C,
  MIPS_lac = 0x45D,
  MIPS_lacd = 0x45E,
  MIPS_lad = 0x45F,
  MIPS_ladd = 0x460,
  MIPS_lai = 0x461,
  MIPS_laid = 0x462,
  MIPS_las = 0x463,
  MIPS_lasd = 0x464,
  MIPS_law = 0x465,
  MIPS_lawd = 0x466,
  MIPS_lbx = 0x467,
  MIPS_lhux = 0x468,
  MIPS_lwux = 0x469,
  MIPS_qmac_00 = 0x46A,
  MIPS_qmac_01 = 0x46B,
  MIPS_qmac_02 = 0x46C,
  MIPS_qmac_03 = 0x46D,
  MIPS_qmacs_00 = 0x46E,
  MIPS_qmacs_01 = 0x46F,
  MIPS_qmacs_02 = 0x470,
  MIPS_qmacs_03 = 0x471,
  MIPS_zcb = 0x472,
  MIPS_zcbt = 0x473,
  MIPS_msa_sll_b = 0x474,
  MIPS_msa_sll_h = 0x475,
  MIPS_msa_sll_w = 0x476,
  MIPS_msa_sll_d = 0x477,
  MIPS_msa_slli_b = 0x478,
  MIPS_msa_slli_h = 0x479,
  MIPS_msa_slli_w = 0x47A,
  MIPS_msa_slli_d = 0x47B,
  MIPS_msa_sra_b = 0x47C,
  MIPS_msa_sra_h = 0x47D,
  MIPS_msa_sra_w = 0x47E,
  MIPS_msa_sra_d = 0x47F,
  MIPS_msa_srai_b = 0x480,
  MIPS_msa_srai_h = 0x481,
  MIPS_msa_srai_w = 0x482,
  MIPS_msa_srai_d = 0x483,
  MIPS_msa_srl_b = 0x484,
  MIPS_msa_srl_h = 0x485,
  MIPS_msa_srl_w = 0x486,
  MIPS_msa_srl_d = 0x487,
  MIPS_msa_srli_b = 0x488,
  MIPS_msa_srli_h = 0x489,
  MIPS_msa_srli_w = 0x48A,
  MIPS_msa_srli_d = 0x48B,
  MIPS_msa_bclr_b = 0x48C,
  MIPS_msa_bclr_h = 0x48D,
  MIPS_msa_bclr_w = 0x48E,
  MIPS_msa_bclr_d = 0x48F,
  MIPS_msa_bclri_b = 0x490,
  MIPS_msa_bclri_h = 0x491,
  MIPS_msa_bclri_w = 0x492,
  MIPS_msa_bclri_d = 0x493,
  MIPS_msa_bset_b = 0x494,
  MIPS_msa_bset_h = 0x495,
  MIPS_msa_bset_w = 0x496,
  MIPS_msa_bset_d = 0x497,
  MIPS_msa_bseti_b = 0x498,
  MIPS_msa_bseti_h = 0x499,
  MIPS_msa_bseti_w = 0x49A,
  MIPS_msa_bseti_d = 0x49B,
  MIPS_msa_bneg_b = 0x49C,
  MIPS_msa_bneg_h = 0x49D,
  MIPS_msa_bneg_w = 0x49E,
  MIPS_msa_bneg_d = 0x49F,
  MIPS_msa_bnegi_b = 0x4A0,
  MIPS_msa_bnegi_h = 0x4A1,
  MIPS_msa_bnegi_w = 0x4A2,
  MIPS_msa_bnegi_d = 0x4A3,
  MIPS_msa_binsl_b = 0x4A4,
  MIPS_msa_binsl_h = 0x4A5,
  MIPS_msa_binsl_w = 0x4A6,
  MIPS_msa_binsl_d = 0x4A7,
  MIPS_msa_binsli_b = 0x4A8,
  MIPS_msa_binsli_h = 0x4A9,
  MIPS_msa_binsli_w = 0x4AA,
  MIPS_msa_binsli_d = 0x4AB,
  MIPS_msa_binsr_b = 0x4AC,
  MIPS_msa_binsr_h = 0x4AD,
  MIPS_msa_binsr_w = 0x4AE,
  MIPS_msa_binsr_d = 0x4AF,
  MIPS_msa_binsri_b = 0x4B0,
  MIPS_msa_binsri_h = 0x4B1,
  MIPS_msa_binsri_w = 0x4B2,
  MIPS_msa_binsri_d = 0x4B3,
  MIPS_msa_addv_b = 0x4B4,
  MIPS_msa_addv_h = 0x4B5,
  MIPS_msa_addv_w = 0x4B6,
  MIPS_msa_addv_d = 0x4B7,
  MIPS_msa_addvi_b = 0x4B8,
  MIPS_msa_addvi_h = 0x4B9,
  MIPS_msa_addvi_w = 0x4BA,
  MIPS_msa_addvi_d = 0x4BB,
  MIPS_msa_subv_b = 0x4BC,
  MIPS_msa_subv_h = 0x4BD,
  MIPS_msa_subv_w = 0x4BE,
  MIPS_msa_subv_d = 0x4BF,
  MIPS_msa_subvi_b = 0x4C0,
  MIPS_msa_subvi_h = 0x4C1,
  MIPS_msa_subvi_w = 0x4C2,
  MIPS_msa_subvi_d = 0x4C3,
  MIPS_msa_max_s_b = 0x4C4,
  MIPS_msa_max_s_h = 0x4C5,
  MIPS_msa_max_s_w = 0x4C6,
  MIPS_msa_max_s_d = 0x4C7,
  MIPS_msa_maxi_s_b = 0x4C8,
  MIPS_msa_maxi_s_h = 0x4C9,
  MIPS_msa_maxi_s_w = 0x4CA,
  MIPS_msa_maxi_s_d = 0x4CB,
  MIPS_msa_max_u_b = 0x4CC,
  MIPS_msa_max_u_h = 0x4CD,
  MIPS_msa_max_u_w = 0x4CE,
  MIPS_msa_max_u_d = 0x4CF,
  MIPS_msa_maxi_u_b = 0x4D0,
  MIPS_msa_maxi_u_h = 0x4D1,
  MIPS_msa_maxi_u_w = 0x4D2,
  MIPS_msa_maxi_u_d = 0x4D3,
  MIPS_msa_min_s_b = 0x4D4,
  MIPS_msa_min_s_h = 0x4D5,
  MIPS_msa_min_s_w = 0x4D6,
  MIPS_msa_min_s_d = 0x4D7,
  MIPS_msa_mini_s_b = 0x4D8,
  MIPS_msa_mini_s_h = 0x4D9,
  MIPS_msa_mini_s_w = 0x4DA,
  MIPS_msa_mini_s_d = 0x4DB,
  MIPS_msa_min_u_b = 0x4DC,
  MIPS_msa_min_u_h = 0x4DD,
  MIPS_msa_min_u_w = 0x4DE,
  MIPS_msa_min_u_d = 0x4DF,
  MIPS_msa_mini_u_b = 0x4E0,
  MIPS_msa_mini_u_h = 0x4E1,
  MIPS_msa_mini_u_w = 0x4E2,
  MIPS_msa_mini_u_d = 0x4E3,
  MIPS_msa_max_a_b = 0x4E4,
  MIPS_msa_max_a_h = 0x4E5,
  MIPS_msa_max_a_w = 0x4E6,
  MIPS_msa_max_a_d = 0x4E7,
  MIPS_msa_min_a_b = 0x4E8,
  MIPS_msa_min_a_h = 0x4E9,
  MIPS_msa_min_a_w = 0x4EA,
  MIPS_msa_min_a_d = 0x4EB,
  MIPS_msa_ceq_b = 0x4EC,
  MIPS_msa_ceq_h = 0x4ED,
  MIPS_msa_ceq_w = 0x4EE,
  MIPS_msa_ceq_d = 0x4EF,
  MIPS_msa_ceqi_b = 0x4F0,
  MIPS_msa_ceqi_h = 0x4F1,
  MIPS_msa_ceqi_w = 0x4F2,
  MIPS_msa_ceqi_d = 0x4F3,
  MIPS_msa_clt_s_b = 0x4F4,
  MIPS_msa_clt_s_h = 0x4F5,
  MIPS_msa_clt_s_w = 0x4F6,
  MIPS_msa_clt_s_d = 0x4F7,
  MIPS_msa_clti_s_b = 0x4F8,
  MIPS_msa_clti_s_h = 0x4F9,
  MIPS_msa_clti_s_w = 0x4FA,
  MIPS_msa_clti_s_d = 0x4FB,
  MIPS_msa_clt_u_b = 0x4FC,
  MIPS_msa_clt_u_h = 0x4FD,
  MIPS_msa_clt_u_w = 0x4FE,
  MIPS_msa_clt_u_d = 0x4FF,
  MIPS_msa_clti_u_b = 0x500,
  MIPS_msa_clti_u_h = 0x501,
  MIPS_msa_clti_u_w = 0x502,
  MIPS_msa_clti_u_d = 0x503,
  MIPS_msa_cle_s_b = 0x504,
  MIPS_msa_cle_s_h = 0x505,
  MIPS_msa_cle_s_w = 0x506,
  MIPS_msa_cle_s_d = 0x507,
  MIPS_msa_clei_s_b = 0x508,
  MIPS_msa_clei_s_h = 0x509,
  MIPS_msa_clei_s_w = 0x50A,
  MIPS_msa_clei_s_d = 0x50B,
  MIPS_msa_cle_u_b = 0x50C,
  MIPS_msa_cle_u_h = 0x50D,
  MIPS_msa_cle_u_w = 0x50E,
  MIPS_msa_cle_u_d = 0x50F,
  MIPS_msa_clei_u_b = 0x510,
  MIPS_msa_clei_u_h = 0x511,
  MIPS_msa_clei_u_w = 0x512,
  MIPS_msa_clei_u_d = 0x513,
  MIPS_msa_ld_b = 0x514,
  MIPS_msa_ld_h = 0x515,
  MIPS_msa_ld_w = 0x516,
  MIPS_msa_ld_d = 0x517,
  MIPS_msa_st_b = 0x518,
  MIPS_msa_st_h = 0x519,
  MIPS_msa_st_w = 0x51A,
  MIPS_msa_st_d = 0x51B,
  MIPS_msa_sat_s_b = 0x51C,
  MIPS_msa_sat_s_h = 0x51D,
  MIPS_msa_sat_s_w = 0x51E,
  MIPS_msa_sat_s_d = 0x51F,
  MIPS_msa_sat_u_b = 0x520,
  MIPS_msa_sat_u_h = 0x521,
  MIPS_msa_sat_u_w = 0x522,
  MIPS_msa_sat_u_d = 0x523,
  MIPS_msa_add_a_b = 0x524,
  MIPS_msa_add_a_h = 0x525,
  MIPS_msa_add_a_w = 0x526,
  MIPS_msa_add_a_d = 0x527,
  MIPS_msa_adds_a_b = 0x528,
  MIPS_msa_adds_a_h = 0x529,
  MIPS_msa_adds_a_w = 0x52A,
  MIPS_msa_adds_a_d = 0x52B,
  MIPS_msa_adds_s_b = 0x52C,
  MIPS_msa_adds_s_h = 0x52D,
  MIPS_msa_adds_s_w = 0x52E,
  MIPS_msa_adds_s_d = 0x52F,
  MIPS_msa_adds_u_b = 0x530,
  MIPS_msa_adds_u_h = 0x531,
  MIPS_msa_adds_u_w = 0x532,
  MIPS_msa_adds_u_d = 0x533,
  MIPS_msa_ave_s_b = 0x534,
  MIPS_msa_ave_s_h = 0x535,
  MIPS_msa_ave_s_w = 0x536,
  MIPS_msa_ave_s_d = 0x537,
  MIPS_msa_ave_u_b = 0x538,
  MIPS_msa_ave_u_h = 0x539,
  MIPS_msa_ave_u_w = 0x53A,
  MIPS_msa_ave_u_d = 0x53B,
  MIPS_msa_aver_s_b = 0x53C,
  MIPS_msa_aver_s_h = 0x53D,
  MIPS_msa_aver_s_w = 0x53E,
  MIPS_msa_aver_s_d = 0x53F,
  MIPS_msa_aver_u_b = 0x540,
  MIPS_msa_aver_u_h = 0x541,
  MIPS_msa_aver_u_w = 0x542,
  MIPS_msa_aver_u_d = 0x543,
  MIPS_msa_subs_s_b = 0x544,
  MIPS_msa_subs_s_h = 0x545,
  MIPS_msa_subs_s_w = 0x546,
  MIPS_msa_subs_s_d = 0x547,
  MIPS_msa_subs_u_b = 0x548,
  MIPS_msa_subs_u_h = 0x549,
  MIPS_msa_subs_u_w = 0x54A,
  MIPS_msa_subs_u_d = 0x54B,
  MIPS_msa_subsus_u_b = 0x54C,
  MIPS_msa_subsus_u_h = 0x54D,
  MIPS_msa_subsus_u_w = 0x54E,
  MIPS_msa_subsus_u_d = 0x54F,
  MIPS_msa_subsuu_s_b = 0x550,
  MIPS_msa_subsuu_s_h = 0x551,
  MIPS_msa_subsuu_s_w = 0x552,
  MIPS_msa_subsuu_s_d = 0x553,
  MIPS_msa_asub_s_b = 0x554,
  MIPS_msa_asub_s_h = 0x555,
  MIPS_msa_asub_s_w = 0x556,
  MIPS_msa_asub_s_d = 0x557,
  MIPS_msa_asub_u_b = 0x558,
  MIPS_msa_asub_u_h = 0x559,
  MIPS_msa_asub_u_w = 0x55A,
  MIPS_msa_asub_u_d = 0x55B,
  MIPS_msa_mulv_b = 0x55C,
  MIPS_msa_mulv_h = 0x55D,
  MIPS_msa_mulv_w = 0x55E,
  MIPS_msa_mulv_d = 0x55F,
  MIPS_msa_maddv_b = 0x560,
  MIPS_msa_maddv_h = 0x561,
  MIPS_msa_maddv_w = 0x562,
  MIPS_msa_maddv_d = 0x563,
  MIPS_msa_msubv_b = 0x564,
  MIPS_msa_msubv_h = 0x565,
  MIPS_msa_msubv_w = 0x566,
  MIPS_msa_msubv_d = 0x567,
  MIPS_msa_div_s_b = 0x568,
  MIPS_msa_div_s_h = 0x569,
  MIPS_msa_div_s_w = 0x56A,
  MIPS_msa_div_s_d = 0x56B,
  MIPS_msa_div_u_b = 0x56C,
  MIPS_msa_div_u_h = 0x56D,
  MIPS_msa_div_u_w = 0x56E,
  MIPS_msa_div_u_d = 0x56F,
  MIPS_msa_mod_s_b = 0x570,
  MIPS_msa_mod_s_h = 0x571,
  MIPS_msa_mod_s_w = 0x572,
  MIPS_msa_mod_s_d = 0x573,
  MIPS_msa_mod_u_b = 0x574,
  MIPS_msa_mod_u_h = 0x575,
  MIPS_msa_mod_u_w = 0x576,
  MIPS_msa_mod_u_d = 0x577,
  MIPS_msa_dotp_s_h = 0x578,
  MIPS_msa_dotp_s_w = 0x579,
  MIPS_msa_dotp_s_d = 0x57A,
  MIPS_msa_dotp_u_h = 0x57B,
  MIPS_msa_dotp_u_w = 0x57C,
  MIPS_msa_dotp_u_d = 0x57D,
  MIPS_msa_dpadd_s_h = 0x57E,
  MIPS_msa_dpadd_s_w = 0x57F,
  MIPS_msa_dpadd_s_d = 0x580,
  MIPS_msa_dpadd_u_h = 0x581,
  MIPS_msa_dpadd_u_w = 0x582,
  MIPS_msa_dpadd_u_d = 0x583,
  MIPS_msa_dpsub_s_h = 0x584,
  MIPS_msa_dpsub_s_w = 0x585,
  MIPS_msa_dpsub_s_d = 0x586,
  MIPS_msa_dpsub_u_h = 0x587,
  MIPS_msa_dpsub_u_w = 0x588,
  MIPS_msa_dpsub_u_d = 0x589,
  MIPS_msa_sld_b = 0x58A,
  MIPS_msa_sld_h = 0x58B,
  MIPS_msa_sld_w = 0x58C,
  MIPS_msa_sld_d = 0x58D,
  MIPS_msa_sldi_b = 0x58E,
  MIPS_msa_sldi_h = 0x58F,
  MIPS_msa_sldi_w = 0x590,
  MIPS_msa_sldi_d = 0x591,
  MIPS_msa_splat_b = 0x592,
  MIPS_msa_splat_h = 0x593,
  MIPS_msa_splat_w = 0x594,
  MIPS_msa_splat_d = 0x595,
  MIPS_msa_splati_b = 0x596,
  MIPS_msa_splati_h = 0x597,
  MIPS_msa_splati_w = 0x598,
  MIPS_msa_splati_d = 0x599,
  MIPS_msa_pckev_b = 0x59A,
  MIPS_msa_pckev_h = 0x59B,
  MIPS_msa_pckev_w = 0x59C,
  MIPS_msa_pckev_d = 0x59D,
  MIPS_msa_pckod_b = 0x59E,
  MIPS_msa_pckod_h = 0x59F,
  MIPS_msa_pckod_w = 0x5A0,
  MIPS_msa_pckod_d = 0x5A1,
  MIPS_msa_ilvl_b = 0x5A2,
  MIPS_msa_ilvl_h = 0x5A3,
  MIPS_msa_ilvl_w = 0x5A4,
  MIPS_msa_ilvl_d = 0x5A5,
  MIPS_msa_ilvr_b = 0x5A6,
  MIPS_msa_ilvr_h = 0x5A7,
  MIPS_msa_ilvr_w = 0x5A8,
  MIPS_msa_ilvr_d = 0x5A9,
  MIPS_msa_ilvev_b = 0x5AA,
  MIPS_msa_ilvev_h = 0x5AB,
  MIPS_msa_ilvev_w = 0x5AC,
  MIPS_msa_ilvev_d = 0x5AD,
  MIPS_msa_ilvod_b = 0x5AE,
  MIPS_msa_ilvod_h = 0x5AF,
  MIPS_msa_ilvod_w = 0x5B0,
  MIPS_msa_ilvod_d = 0x5B1,
  MIPS_msa_vshf_b = 0x5B2,
  MIPS_msa_vshf_h = 0x5B3,
  MIPS_msa_vshf_w = 0x5B4,
  MIPS_msa_vshf_d = 0x5B5,
  MIPS_msa_srar_b = 0x5B6,
  MIPS_msa_srar_h = 0x5B7,
  MIPS_msa_srar_w = 0x5B8,
  MIPS_msa_srar_d = 0x5B9,
  MIPS_msa_srari_b = 0x5BA,
  MIPS_msa_srari_h = 0x5BB,
  MIPS_msa_srari_w = 0x5BC,
  MIPS_msa_srari_d = 0x5BD,
  MIPS_msa_srlr_b = 0x5BE,
  MIPS_msa_srlr_h = 0x5BF,
  MIPS_msa_srlr_w = 0x5C0,
  MIPS_msa_srlr_d = 0x5C1,
  MIPS_msa_srlri_b = 0x5C2,
  MIPS_msa_srlri_h = 0x5C3,
  MIPS_msa_srlri_w = 0x5C4,
  MIPS_msa_srlri_d = 0x5C5,
  MIPS_msa_hadd_s_h = 0x5C6,
  MIPS_msa_hadd_s_w = 0x5C7,
  MIPS_msa_hadd_s_d = 0x5C8,
  MIPS_msa_hadd_u_h = 0x5C9,
  MIPS_msa_hadd_u_w = 0x5CA,
  MIPS_msa_hadd_u_d = 0x5CB,
  MIPS_msa_hsub_s_h = 0x5CC,
  MIPS_msa_hsub_s_w = 0x5CD,
  MIPS_msa_hsub_s_d = 0x5CE,
  MIPS_msa_hsub_u_h = 0x5CF,
  MIPS_msa_hsub_u_w = 0x5D0,
  MIPS_msa_hsub_u_d = 0x5D1,
  MIPS_msa_and_v = 0x5D2,
  MIPS_msa_andi_b = 0x5D3,
  MIPS_msa_or_v = 0x5D4,
  MIPS_msa_ori_b = 0x5D5,
  MIPS_msa_nor_v = 0x5D6,
  MIPS_msa_nori_b = 0x5D7,
  MIPS_msa_xor_v = 0x5D8,
  MIPS_msa_xori_b = 0x5D9,
  MIPS_msa_bmnz_v = 0x5DA,
  MIPS_msa_bmnzi_b = 0x5DB,
  MIPS_msa_bmz_v = 0x5DC,
  MIPS_msa_bmzi_b = 0x5DD,
  MIPS_msa_bsel_v = 0x5DE,
  MIPS_msa_bseli_b = 0x5DF,
  MIPS_msa_shf_b = 0x5E0,
  MIPS_msa_shf_h = 0x5E1,
  MIPS_msa_shf_w = 0x5E2,
  MIPS_msa_bnz_v = 0x5E3,
  MIPS_msa_bz_v = 0x5E4,
  MIPS_msa_fill_b = 0x5E5,
  MIPS_msa_fill_h = 0x5E6,
  MIPS_msa_fill_w = 0x5E7,
  MIPS_msa_fill_d = 0x5E8,
  MIPS_msa_pcnt_b = 0x5E9,
  MIPS_msa_pcnt_h = 0x5EA,
  MIPS_msa_pcnt_w = 0x5EB,
  MIPS_msa_pcnt_d = 0x5EC,
  MIPS_msa_nloc_b = 0x5ED,
  MIPS_msa_nloc_h = 0x5EE,
  MIPS_msa_nloc_w = 0x5EF,
  MIPS_msa_nloc_d = 0x5F0,
  MIPS_msa_nlzc_b = 0x5F1,
  MIPS_msa_nlzc_h = 0x5F2,
  MIPS_msa_nlzc_w = 0x5F3,
  MIPS_msa_nlzc_d = 0x5F4,
  MIPS_msa_copy_s_b = 0x5F5,
  MIPS_msa_copy_s_h = 0x5F6,
  MIPS_msa_copy_s_w = 0x5F7,
  MIPS_msa_copy_s_d = 0x5F8,
  MIPS_msa_copy_u_b = 0x5F9,
  MIPS_msa_copy_u_h = 0x5FA,
  MIPS_msa_copy_u_w = 0x5FB,
  MIPS_msa_copy_u_d = 0x5FC,
  MIPS_msa_insert_b = 0x5FD,
  MIPS_msa_insert_h = 0x5FE,
  MIPS_msa_insert_w = 0x5FF,
  MIPS_msa_insert_d = 0x600,
  MIPS_msa_insve_b = 0x601,
  MIPS_msa_insve_h = 0x602,
  MIPS_msa_insve_w = 0x603,
  MIPS_msa_insve_d = 0x604,
  MIPS_msa_bnz_b = 0x605,
  MIPS_msa_bnz_h = 0x606,
  MIPS_msa_bnz_w = 0x607,
  MIPS_msa_bnz_d = 0x608,
  MIPS_msa_bz_b = 0x609,
  MIPS_msa_bz_h = 0x60A,
  MIPS_msa_bz_w = 0x60B,
  MIPS_msa_bz_d = 0x60C,
  MIPS_msa_ldi_b = 0x60D,
  MIPS_msa_ldi_h = 0x60E,
  MIPS_msa_ldi_w = 0x60F,
  MIPS_msa_ldi_d = 0x610,
  MIPS_msa_fcaf_w = 0x611,
  MIPS_msa_fcaf_d = 0x612,
  MIPS_msa_fcun_w = 0x613,
  MIPS_msa_fcun_d = 0x614,
  MIPS_msa_fceq_w = 0x615,
  MIPS_msa_fceq_d = 0x616,
  MIPS_msa_fcueq_w = 0x617,
  MIPS_msa_fcueq_d = 0x618,
  MIPS_msa_fclt_w = 0x619,
  MIPS_msa_fclt_d = 0x61A,
  MIPS_msa_fcult_w = 0x61B,
  MIPS_msa_fcult_d = 0x61C,
  MIPS_msa_fcle_w = 0x61D,
  MIPS_msa_fcle_d = 0x61E,
  MIPS_msa_fcule_w = 0x61F,
  MIPS_msa_fcule_d = 0x620,
  MIPS_msa_fsaf_w = 0x621,
  MIPS_msa_fsaf_d = 0x622,
  MIPS_msa_fsun_w = 0x623,
  MIPS_msa_fsun_d = 0x624,
  MIPS_msa_fseq_w = 0x625,
  MIPS_msa_fseq_d = 0x626,
  MIPS_msa_fsueq_w = 0x627,
  MIPS_msa_fsueq_d = 0x628,
  MIPS_msa_fslt_w = 0x629,
  MIPS_msa_fslt_d = 0x62A,
  MIPS_msa_fsult_w = 0x62B,
  MIPS_msa_fsult_d = 0x62C,
  MIPS_msa_fsle_w = 0x62D,
  MIPS_msa_fsle_d = 0x62E,
  MIPS_msa_fsule_w = 0x62F,
  MIPS_msa_fsule_d = 0x630,
  MIPS_msa_fadd_w = 0x631,
  MIPS_msa_fadd_d = 0x632,
  MIPS_msa_fsub_w = 0x633,
  MIPS_msa_fsub_d = 0x634,
  MIPS_msa_fmul_w = 0x635,
  MIPS_msa_fmul_d = 0x636,
  MIPS_msa_fdiv_w = 0x637,
  MIPS_msa_fdiv_d = 0x638,
  MIPS_msa_fmadd_w = 0x639,
  MIPS_msa_fmadd_d = 0x63A,
  MIPS_msa_fmsub_w = 0x63B,
  MIPS_msa_fmsub_d = 0x63C,
  MIPS_msa_fexp2_w = 0x63D,
  MIPS_msa_fexp2_d = 0x63E,
  MIPS_msa_fexdo_h = 0x63F,
  MIPS_msa_fexdo_w = 0x640,
  MIPS_msa_ftq_h = 0x641,
  MIPS_msa_ftq_w = 0x642,
  MIPS_msa_fmin_w = 0x643,
  MIPS_msa_fmin_d = 0x644,
  MIPS_msa_fmin_a_w = 0x645,
  MIPS_msa_fmin_a_d = 0x646,
  MIPS_msa_fmax_w = 0x647,
  MIPS_msa_fmax_d = 0x648,
  MIPS_msa_fmax_a_w = 0x649,
  MIPS_msa_fmax_a_d = 0x64A,
  MIPS_msa_fcor_w = 0x64B,
  MIPS_msa_fcor_d = 0x64C,
  MIPS_msa_fcune_w = 0x64D,
  MIPS_msa_fcune_d = 0x64E,
  MIPS_msa_fcne_w = 0x64F,
  MIPS_msa_fcne_d = 0x650,
  MIPS_msa_mul_q_h = 0x651,
  MIPS_msa_mul_q_w = 0x652,
  MIPS_msa_madd_q_h = 0x653,
  MIPS_msa_madd_q_w = 0x654,
  MIPS_msa_msub_q_h = 0x655,
  MIPS_msa_msub_q_w = 0x656,
  MIPS_msa_fsor_w = 0x657,
  MIPS_msa_fsor_d = 0x658,
  MIPS_msa_fsune_w = 0x659,
  MIPS_msa_fsune_d = 0x65A,
  MIPS_msa_fsne_w = 0x65B,
  MIPS_msa_fsne_d = 0x65C,
  MIPS_msa_mulr_q_h = 0x65D,
  MIPS_msa_mulr_q_w = 0x65E,
  MIPS_msa_maddr_q_h = 0x65F,
  MIPS_msa_maddr_q_w = 0x660,
  MIPS_msa_msubr_q_h = 0x661,
  MIPS_msa_msubr_q_w = 0x662,
  MIPS_msa_fclass_w = 0x663,
  MIPS_msa_fclass_d = 0x664,
  MIPS_msa_ftrunc_s_w = 0x665,
  MIPS_msa_ftrunc_s_d = 0x666,
  MIPS_msa_ftrunc_u_w = 0x667,
  MIPS_msa_ftrunc_u_d = 0x668,
  MIPS_msa_fsqrt_w = 0x669,
  MIPS_msa_fsqrt_d = 0x66A,
  MIPS_msa_frsqrt_w = 0x66B,
  MIPS_msa_frsqrt_d = 0x66C,
  MIPS_msa_frcp_w = 0x66D,
  MIPS_msa_frcp_d = 0x66E,
  MIPS_msa_frint_w = 0x66F,
  MIPS_msa_frint_d = 0x670,
  MIPS_msa_flog2_w = 0x671,
  MIPS_msa_flog2_d = 0x672,
  MIPS_msa_fexupl_w = 0x673,
  MIPS_msa_fexupl_d = 0x674,
  MIPS_msa_fexupr_w = 0x675,
  MIPS_msa_fexupr_d = 0x676,
  MIPS_msa_ffql_w = 0x677,
  MIPS_msa_ffql_d = 0x678,
  MIPS_msa_ffqr_w = 0x679,
  MIPS_msa_ffqr_d = 0x67A,
  MIPS_msa_ftint_s_w = 0x67B,
  MIPS_msa_ftint_s_d = 0x67C,
  MIPS_msa_ftint_u_w = 0x67D,
  MIPS_msa_ftint_u_d = 0x67E,
  MIPS_msa_ffint_s_w = 0x67F,
  MIPS_msa_ffint_s_d = 0x680,
  MIPS_msa_ffint_u_w = 0x681,
  MIPS_msa_ffint_u_d = 0x682,
  MIPS_msa_ctcmsa = 0x683,
  MIPS_msa_cfcmsa = 0x684,
  MIPS_msa_move_v = 0x685,
  MIPS_lsa = 0x686,
  MIPS_dlsa = 0x687,
  MIPS_lbe = 0x688,
  MIPS_lbue = 0x689,
  MIPS_lhe = 0x68A,
  MIPS_lhue = 0x68B,
  MIPS_lwe = 0x68C,
  MIPS_sbe = 0x68D,
  MIPS_she = 0x68E,
  MIPS_swe = 0x68F,
  MIPS_lle = 0x690,
  MIPS_sce = 0x691,
  MIPS_cachee = 0x692,
  MIPS_prefe = 0x693,
  MIPS_lwle = 0x694,
  MIPS_lwre = 0x695,
  MIPS_swle = 0x696,
  MIPS_swre = 0x697,
  MIPS_movtz = 0x698,
  MIPS_movtn = 0x699,
  MIPS_copyw = 0x69A,
  MIPS_ucopyw = 0x69B,
  MIPS_last = 0x69C,
};

/* 1755 */
enum _D022F3AE4E10DBCEA33F2A52E330D46E : unsigned __int32
{
  H8_null = 0x0,
  H8_add = 0x1,
  H8_adds = 0x2,
  H8_addx = 0x3,
  H8_and = 0x4,
  H8_andc = 0x5,
  H8_band = 0x6,
  H8_bra = 0x7,
  H8_brn = 0x8,
  H8_bhi = 0x9,
  H8_bls = 0xA,
  H8_bcc = 0xB,
  H8_bcs = 0xC,
  H8_bne = 0xD,
  H8_beq = 0xE,
  H8_bvc = 0xF,
  H8_bvs = 0x10,
  H8_bpl = 0x11,
  H8_bmi = 0x12,
  H8_bge = 0x13,
  H8_blt = 0x14,
  H8_bgt = 0x15,
  H8_ble = 0x16,
  H8_bclr = 0x17,
  H8_biand = 0x18,
  H8_bild = 0x19,
  H8_bior = 0x1A,
  H8_bist = 0x1B,
  H8_bixor = 0x1C,
  H8_bld = 0x1D,
  H8_bnot = 0x1E,
  H8_bor = 0x1F,
  H8_bset = 0x20,
  H8_bsr = 0x21,
  H8_bst = 0x22,
  H8_btst = 0x23,
  H8_bxor = 0x24,
  H8_clrmac = 0x25,
  H8_cmp = 0x26,
  H8_daa = 0x27,
  H8_das = 0x28,
  H8_dec = 0x29,
  H8_divxs = 0x2A,
  H8_divxu = 0x2B,
  H8_eepmov = 0x2C,
  H8_exts = 0x2D,
  H8_extu = 0x2E,
  H8_inc = 0x2F,
  H8_jmp = 0x30,
  H8_jsr = 0x31,
  H8_ldc = 0x32,
  H8_ldm = 0x33,
  H8_ldmac = 0x34,
  H8_mac = 0x35,
  H8_mov = 0x36,
  H8_movfpe = 0x37,
  H8_movtpe = 0x38,
  H8_mulxs = 0x39,
  H8_mulxu = 0x3A,
  H8_neg = 0x3B,
  H8_nop = 0x3C,
  H8_not = 0x3D,
  H8_or = 0x3E,
  H8_orc = 0x3F,
  H8_pop = 0x40,
  H8_push = 0x41,
  H8_rotl = 0x42,
  H8_rotr = 0x43,
  H8_rotxl = 0x44,
  H8_rotxr = 0x45,
  H8_rte = 0x46,
  H8_rts = 0x47,
  H8_shal = 0x48,
  H8_shar = 0x49,
  H8_shll = 0x4A,
  H8_shlr = 0x4B,
  H8_sleep = 0x4C,
  H8_stc = 0x4D,
  H8_stm = 0x4E,
  H8_stmac = 0x4F,
  H8_sub = 0x50,
  H8_subs = 0x51,
  H8_subx = 0x52,
  H8_tas = 0x53,
  H8_trapa = 0x54,
  H8_xor = 0x55,
  H8_xorc = 0x56,
  H8_rtel = 0x57,
  H8_rtsl = 0x58,
  H8_movmd = 0x59,
  H8_movsd = 0x5A,
  H8_bras = 0x5B,
  H8_movab = 0x5C,
  H8_movaw = 0x5D,
  H8_moval = 0x5E,
  H8_bsetne = 0x5F,
  H8_bseteq = 0x60,
  H8_bclrne = 0x61,
  H8_bclreq = 0x62,
  H8_bstz = 0x63,
  H8_bistz = 0x64,
  H8_bfld = 0x65,
  H8_bfst = 0x66,
  H8_muls = 0x67,
  H8_divs = 0x68,
  H8_mulu = 0x69,
  H8_divu = 0x6A,
  H8_mulsu = 0x6B,
  H8_muluu = 0x6C,
  H8_brabc = 0x6D,
  H8_brabs = 0x6E,
  H8_bsrbc = 0x6F,
  H8_bsrbs = 0x70,
  H8_last = 0x71,
};

/* 1756 */
enum _F151272271FBC1A81AF87B26B979979C : unsigned __int32
{
  PIC_null = 0x0,
  PIC_addwf = 0x1,
  PIC_andwf = 0x2,
  PIC_clrf = 0x3,
  PIC_clrw = 0x4,
  PIC_comf = 0x5,
  PIC_decf = 0x6,
  PIC_decfsz = 0x7,
  PIC_incf = 0x8,
  PIC_incfsz = 0x9,
  PIC_iorwf = 0xA,
  PIC_movf = 0xB,
  PIC_movwf = 0xC,
  PIC_nop = 0xD,
  PIC_rlf = 0xE,
  PIC_rrf = 0xF,
  PIC_subwf = 0x10,
  PIC_swapf = 0x11,
  PIC_xorwf = 0x12,
  PIC_bcf = 0x13,
  PIC_bsf = 0x14,
  PIC_btfsc = 0x15,
  PIC_btfss = 0x16,
  PIC_addlw = 0x17,
  PIC_andlw = 0x18,
  PIC_call = 0x19,
  PIC_clrwdt = 0x1A,
  PIC_goto = 0x1B,
  PIC_iorlw = 0x1C,
  PIC_movlw = 0x1D,
  PIC_retfie = 0x1E,
  PIC_retlw = 0x1F,
  PIC_return = 0x20,
  PIC_sleep = 0x21,
  PIC_sublw = 0x22,
  PIC_xorlw = 0x23,
  PIC_option = 0x24,
  PIC_tris = 0x25,
  PIC_movfw = 0x26,
  PIC_tstf = 0x27,
  PIC_negf = 0x28,
  PIC_b = 0x29,
  PIC_clrc = 0x2A,
  PIC_clrdc = 0x2B,
  PIC_clrz = 0x2C,
  PIC_setc = 0x2D,
  PIC_setdc = 0x2E,
  PIC_setz = 0x2F,
  PIC_skpc = 0x30,
  PIC_skpdc = 0x31,
  PIC_skpnc = 0x32,
  PIC_skpndc = 0x33,
  PIC_skpnz = 0x34,
  PIC_skpz = 0x35,
  PIC_bc = 0x36,
  PIC_bdc = 0x37,
  PIC_bnc = 0x38,
  PIC_bndc = 0x39,
  PIC_bnz = 0x3A,
  PIC_bz = 0x3B,
  PIC_addcf = 0x3C,
  PIC_adddcf = 0x3D,
  PIC_subcf = 0x3E,
  PIC_addwf3 = 0x3F,
  PIC_addwfc3 = 0x40,
  PIC_andwf3 = 0x41,
  PIC_clrf2 = 0x42,
  PIC_comf3 = 0x43,
  PIC_cpfseq2 = 0x44,
  PIC_cpfsgt2 = 0x45,
  PIC_cpfslt2 = 0x46,
  PIC_decf3 = 0x47,
  PIC_decfsz3 = 0x48,
  PIC_dcfsnz3 = 0x49,
  PIC_incf3 = 0x4A,
  PIC_incfsz3 = 0x4B,
  PIC_infsnz3 = 0x4C,
  PIC_iorwf3 = 0x4D,
  PIC_movf3 = 0x4E,
  PIC_movff2 = 0x4F,
  PIC_movwf2 = 0x50,
  PIC_mulwf2 = 0x51,
  PIC_negf2 = 0x52,
  PIC_rlcf3 = 0x53,
  PIC_rlncf3 = 0x54,
  PIC_rrcf3 = 0x55,
  PIC_rrncf3 = 0x56,
  PIC_setf2 = 0x57,
  PIC_subfwb3 = 0x58,
  PIC_subwf3 = 0x59,
  PIC_subwfb3 = 0x5A,
  PIC_swapf3 = 0x5B,
  PIC_tstfsz2 = 0x5C,
  PIC_xorwf3 = 0x5D,
  PIC_bcf3 = 0x5E,
  PIC_bsf3 = 0x5F,
  PIC_btfsc3 = 0x60,
  PIC_btfss3 = 0x61,
  PIC_btg3 = 0x62,
  PIC_bc1 = 0x63,
  PIC_bn1 = 0x64,
  PIC_bnc1 = 0x65,
  PIC_bnn1 = 0x66,
  PIC_bnov1 = 0x67,
  PIC_bnz1 = 0x68,
  PIC_bov1 = 0x69,
  PIC_bra1 = 0x6A,
  PIC_bz1 = 0x6B,
  PIC_call2 = 0x6C,
  PIC_daw0 = 0x6D,
  PIC_pop0 = 0x6E,
  PIC_push0 = 0x6F,
  PIC_rcall1 = 0x70,
  PIC_reset0 = 0x71,
  PIC_retfie1 = 0x72,
  PIC_return1 = 0x73,
  PIC_lfsr2 = 0x74,
  PIC_movlb1 = 0x75,
  PIC_mullw1 = 0x76,
  PIC_tblrd0 = 0x77,
  PIC_tblrd0p = 0x78,
  PIC_tblrd0m = 0x79,
  PIC_tblrdp0 = 0x7A,
  PIC_tblwt0 = 0x7B,
  PIC_tblwt0p = 0x7C,
  PIC_tblwt0m = 0x7D,
  PIC_tblwtp0 = 0x7E,
  PIC_addwfc = 0x7F,
  PIC_movlp = 0x80,
  PIC_movlb = 0x81,
  PIC_addfsr = 0x82,
  PIC_asrf = 0x83,
  PIC_lslf = 0x84,
  PIC_lsrf = 0x85,
  PIC_subwfb = 0x86,
  PIC_bra = 0x87,
  PIC_brw = 0x88,
  PIC_callw = 0x89,
  PIC_reset = 0x8A,
  PIC_moviw = 0x8B,
  PIC_movwi = 0x8C,
  PIC_last = 0x8D,
};

/* 1757 */
enum _CCE2416F380A82F561A09BADF43CB67B : unsigned __int32
{
  PIC16_null = 0x0,
  PIC16_EXCH = 0x1,
  PIC16_MOV = 0x2,
  PIC16_SWAP = 0x3,
  PIC16_TBLRDH = 0x4,
  PIC16_TBLRDL = 0x5,
  PIC16_TBLWTH = 0x6,
  PIC16_TBLWTL = 0x7,
  PIC16_MOVPAG = 0x8,
  PIC16_ADD = 0x9,
  PIC16_ADDC = 0xA,
  PIC16_DAWB = 0xB,
  PIC16_DEC = 0xC,
  PIC16_DEC2 = 0xD,
  PIC16_DIV = 0xE,
  PIC16_INC = 0xF,
  PIC16_INC2 = 0x10,
  PIC16_MUL = 0x11,
  PIC16_SE = 0x12,
  PIC16_SUB = 0x13,
  PIC16_SUBB = 0x14,
  PIC16_SUBBR = 0x15,
  PIC16_SUBR = 0x16,
  PIC16_ZE = 0x17,
  PIC16_MULW = 0x18,
  PIC16_DIVF = 0x19,
  PIC16_AND = 0x1A,
  PIC16_CLR = 0x1B,
  PIC16_COM = 0x1C,
  PIC16_IOR = 0x1D,
  PIC16_NEG = 0x1E,
  PIC16_SETM = 0x1F,
  PIC16_XOR = 0x20,
  PIC16_ASR = 0x21,
  PIC16_LSR = 0x22,
  PIC16_RLC = 0x23,
  PIC16_RLNC = 0x24,
  PIC16_RRC = 0x25,
  PIC16_RRNC = 0x26,
  PIC16_SL = 0x27,
  PIC16_BCLR = 0x28,
  PIC16_BSET = 0x29,
  PIC16_BSW = 0x2A,
  PIC16_BTG = 0x2B,
  PIC16_BTST = 0x2C,
  PIC16_BTSTS = 0x2D,
  PIC16_FBCL = 0x2E,
  PIC16_FF1L = 0x2F,
  PIC16_FF1R = 0x30,
  PIC16_BTSC = 0x31,
  PIC16_BTSS = 0x32,
  PIC16_CP = 0x33,
  PIC16_CP0 = 0x34,
  PIC16_CPB = 0x35,
  PIC16_CPSEQ = 0x36,
  PIC16_CPSGT = 0x37,
  PIC16_CPSLT = 0x38,
  PIC16_CPSNE = 0x39,
  PIC16_CPBEQ = 0x3A,
  PIC16_CPBNE = 0x3B,
  PIC16_CPBGT = 0x3C,
  PIC16_CPBLT = 0x3D,
  PIC16_BRA = 0x3E,
  PIC16_CALL = 0x3F,
  PIC16_GOTO = 0x40,
  PIC16_RCALL = 0x41,
  PIC16_REPEAT = 0x42,
  PIC16_RETFIE = 0x43,
  PIC16_RETLW = 0x44,
  PIC16_RETURN = 0x45,
  PIC16_DO = 0x46,
  PIC16_LNK = 0x47,
  PIC16_POP = 0x48,
  PIC16_PUSH = 0x49,
  PIC16_ULNK = 0x4A,
  PIC16_CLRWDT = 0x4B,
  PIC16_DISI = 0x4C,
  PIC16_NOP = 0x4D,
  PIC16_NOPR = 0x4E,
  PIC16_PWRSAV = 0x4F,
  PIC16_RESET = 0x50,
  PIC16_LAC = 0x51,
  PIC16_SAC = 0x52,
  PIC16_SFTAC = 0x53,
  PIC16_CLR1 = 0x54,
  PIC16_ED = 0x55,
  PIC16_EDAC = 0x56,
  PIC16_MAC = 0x57,
  PIC16_MOVSAC = 0x58,
  PIC16_MPY = 0x59,
  PIC16_MSC = 0x5A,
  PIC16_BREAK = 0x5B,
  PIC16_URUN = 0x5C,
  PIC16_SSTEP = 0x5D,
  PIC16_FEX = 0x5E,
  PIC16_last = 0x5F,
};

/* 1758 */
enum _EB483C165D7C646D3CFBB5521698A1AE : unsigned __int32
{
  SPARC_null = 0x0,
  SPARC_add = 0x1,
  SPARC_addcc = 0x2,
  SPARC_addc = 0x3,
  SPARC_addccc = 0x4,
  SPARC_and = 0x5,
  SPARC_andcc = 0x6,
  SPARC_andn = 0x7,
  SPARC_andncc = 0x8,
  SPARC_b = 0x9,
  SPARC_bp = 0xA,
  SPARC_bpr = 0xB,
  SPARC_call = 0xC,
  SPARC_casa = 0xD,
  SPARC_casxa = 0xE,
  SPARC_done = 0xF,
  SPARC_fabs = 0x10,
  SPARC_fadd = 0x11,
  SPARC_fbp = 0x12,
  SPARC_fb = 0x13,
  SPARC_fcmp = 0x14,
  SPARC_fcmpe = 0x15,
  SPARC_fdiv = 0x16,
  SPARC_fdmulq = 0x17,
  SPARC_flush = 0x18,
  SPARC_flushw = 0x19,
  SPARC_fmov = 0x1A,
  SPARC_fmovcc = 0x1B,
  SPARC_fmovr = 0x1C,
  SPARC_fmul = 0x1D,
  SPARC_fneg = 0x1E,
  SPARC_fsmuld = 0x1F,
  SPARC_fsqrt = 0x20,
  SPARC_fsub = 0x21,
  SPARC_fstox = 0x22,
  SPARC_fdtox = 0x23,
  SPARC_fqtox = 0x24,
  SPARC_fxtos = 0x25,
  SPARC_fxtod = 0x26,
  SPARC_fxtoq = 0x27,
  SPARC_fitos = 0x28,
  SPARC_fdtos = 0x29,
  SPARC_fqtos = 0x2A,
  SPARC_fitod = 0x2B,
  SPARC_fstod = 0x2C,
  SPARC_fqtod = 0x2D,
  SPARC_fitoq = 0x2E,
  SPARC_fstoq = 0x2F,
  SPARC_fdtoq = 0x30,
  SPARC_fstoi = 0x31,
  SPARC_fdtoi = 0x32,
  SPARC_fqtoi = 0x33,
  SPARC_illtrap = 0x34,
  SPARC_impdep1 = 0x35,
  SPARC_impdep2 = 0x36,
  SPARC_jmpl = 0x37,
  SPARC_ldd = 0x38,
  SPARC_ldda = 0x39,
  SPARC_lddf = 0x3A,
  SPARC_lddfa = 0x3B,
  SPARC_ldf = 0x3C,
  SPARC_ldfa = 0x3D,
  SPARC_ldfsr = 0x3E,
  SPARC_ldqf = 0x3F,
  SPARC_ldqfa = 0x40,
  SPARC_ldsb = 0x41,
  SPARC_ldsba = 0x42,
  SPARC_ldsh = 0x43,
  SPARC_ldsha = 0x44,
  SPARC_ldstub = 0x45,
  SPARC_ldstuba = 0x46,
  SPARC_ldsw = 0x47,
  SPARC_ldswa = 0x48,
  SPARC_ldub = 0x49,
  SPARC_lduba = 0x4A,
  SPARC_lduh = 0x4B,
  SPARC_lduha = 0x4C,
  SPARC_lduw = 0x4D,
  SPARC_lduwa = 0x4E,
  SPARC_ldx = 0x4F,
  SPARC_ldxa = 0x50,
  SPARC_ldxfsr = 0x51,
  SPARC_membar = 0x52,
  SPARC_mov = 0x53,
  SPARC_movr = 0x54,
  SPARC_mulscc = 0x55,
  SPARC_mulx = 0x56,
  SPARC_nop = 0x57,
  SPARC_or = 0x58,
  SPARC_orcc = 0x59,
  SPARC_orn = 0x5A,
  SPARC_orncc = 0x5B,
  SPARC_popc = 0x5C,
  SPARC_prefetch = 0x5D,
  SPARC_prefetcha = 0x5E,
  SPARC_rd = 0x5F,
  SPARC_rdpr = 0x60,
  SPARC_restore = 0x61,
  SPARC_restored = 0x62,
  SPARC_retry = 0x63,
  SPARC_return = 0x64,
  SPARC_save = 0x65,
  SPARC_saved = 0x66,
  SPARC_sdiv = 0x67,
  SPARC_sdivcc = 0x68,
  SPARC_sdivx = 0x69,
  SPARC_sethi = 0x6A,
  SPARC_sir = 0x6B,
  SPARC_sll = 0x6C,
  SPARC_sllx = 0x6D,
  SPARC_smul = 0x6E,
  SPARC_smulcc = 0x6F,
  SPARC_sra = 0x70,
  SPARC_srax = 0x71,
  SPARC_srl = 0x72,
  SPARC_srlx = 0x73,
  SPARC_stb = 0x74,
  SPARC_stba = 0x75,
  SPARC_stbar = 0x76,
  SPARC_std = 0x77,
  SPARC_stda = 0x78,
  SPARC_stdf = 0x79,
  SPARC_stdfa = 0x7A,
  SPARC_stf = 0x7B,
  SPARC_stfa = 0x7C,
  SPARC_stfsr = 0x7D,
  SPARC_sth = 0x7E,
  SPARC_stha = 0x7F,
  SPARC_stqf = 0x80,
  SPARC_stqfa = 0x81,
  SPARC_stw = 0x82,
  SPARC_stwa = 0x83,
  SPARC_stx = 0x84,
  SPARC_stxa = 0x85,
  SPARC_stxfsr = 0x86,
  SPARC_sub = 0x87,
  SPARC_subcc = 0x88,
  SPARC_subc = 0x89,
  SPARC_subccc = 0x8A,
  SPARC_swap = 0x8B,
  SPARC_swapa = 0x8C,
  SPARC_taddcc = 0x8D,
  SPARC_taddcctv = 0x8E,
  SPARC_tsubcc = 0x8F,
  SPARC_tsubcctv = 0x90,
  SPARC_t = 0x91,
  SPARC_udiv = 0x92,
  SPARC_udivcc = 0x93,
  SPARC_udivx = 0x94,
  SPARC_umul = 0x95,
  SPARC_umulcc = 0x96,
  SPARC_wr = 0x97,
  SPARC_wrpr = 0x98,
  SPARC_xnor = 0x99,
  SPARC_xnorcc = 0x9A,
  SPARC_xor = 0x9B,
  SPARC_xorcc = 0x9C,
  SPARC_cmp = 0x9D,
  SPARC_jmp = 0x9E,
  SPARC_iprefetch = 0x9F,
  SPARC_tst = 0xA0,
  SPARC_ret = 0xA1,
  SPARC_retl = 0xA2,
  SPARC_setuw = 0xA3,
  SPARC_setsw = 0xA4,
  SPARC_setx = 0xA5,
  SPARC_signx = 0xA6,
  SPARC_not = 0xA7,
  SPARC_neg = 0xA8,
  SPARC_cas = 0xA9,
  SPARC_casl = 0xAA,
  SPARC_casx = 0xAB,
  SPARC_casxl = 0xAC,
  SPARC_inc = 0xAD,
  SPARC_inccc = 0xAE,
  SPARC_dec = 0xAF,
  SPARC_deccc = 0xB0,
  SPARC_btst = 0xB1,
  SPARC_bset = 0xB2,
  SPARC_bclr = 0xB3,
  SPARC_btog = 0xB4,
  SPARC_clr = 0xB5,
  SPARC_clrb = 0xB6,
  SPARC_clrh = 0xB7,
  SPARC_clrx = 0xB8,
  SPARC_clruw = 0xB9,
  SPARC_pseudo_mov = 0xBA,
  SPARC_alignaddress = 0xBB,
  SPARC_array = 0xBC,
  SPARC_edge = 0xBD,
  SPARC_faligndata = 0xBE,
  SPARC_fandnot1 = 0xBF,
  SPARC_fandnot2 = 0xC0,
  SPARC_fand = 0xC1,
  SPARC_fcmpeq = 0xC2,
  SPARC_fcmpgt = 0xC3,
  SPARC_fcmple = 0xC4,
  SPARC_fcmpne = 0xC5,
  SPARC_fexpand = 0xC6,
  SPARC_fmul8sux16 = 0xC7,
  SPARC_fmul8ulx16 = 0xC8,
  SPARC_fmul8x16 = 0xC9,
  SPARC_fmul8x16al = 0xCA,
  SPARC_fmul8x16au = 0xCB,
  SPARC_fmuld8sux16 = 0xCC,
  SPARC_fmuld8ulx16 = 0xCD,
  SPARC_fnand = 0xCE,
  SPARC_fnor = 0xCF,
  SPARC_fnot1 = 0xD0,
  SPARC_fnot2 = 0xD1,
  SPARC_fone = 0xD2,
  SPARC_fornot1 = 0xD3,
  SPARC_fornot2 = 0xD4,
  SPARC_for = 0xD5,
  SPARC_fpackfix = 0xD6,
  SPARC_fpack = 0xD7,
  SPARC_fpadd = 0xD8,
  SPARC_fpmerge = 0xD9,
  SPARC_fpsub = 0xDA,
  SPARC_fsrc1 = 0xDB,
  SPARC_fsrc2 = 0xDC,
  SPARC_fxnor = 0xDD,
  SPARC_fxor = 0xDE,
  SPARC_fzero = 0xDF,
  SPARC_pdist = 0xE0,
  SPARC_shutdown = 0xE1,
  SPARC_rett = 0xE2,
  SPARC_bmask = 0xE3,
  SPARC_bshuffle = 0xE4,
  SPARC_edgen = 0xE5,
  SPARC_rdhpr = 0xE6,
  SPARC_wrhpr = 0xE7,
  SPARC_siam = 0xE8,
  SPARC_last = 0xE9,
};

/* 1759 */
enum _7A05C346C9B31AF43F590BC77E2CFA64 : unsigned __int32
{
  HPPA_null = 0x0,
  HPPA_add = 0x1,
  HPPA_addb = 0x2,
  HPPA_addi = 0x3,
  HPPA_addib = 0x4,
  HPPA_addil = 0x5,
  HPPA_and = 0x6,
  HPPA_andcm = 0x7,
  HPPA_b = 0x8,
  HPPA_bb = 0x9,
  HPPA_be = 0xA,
  HPPA_blr = 0xB,
  HPPA_break = 0xC,
  HPPA_bv = 0xD,
  HPPA_bve = 0xE,
  HPPA_cldd = 0xF,
  HPPA_cldw = 0x10,
  HPPA_clrbts = 0x11,
  HPPA_cmpb = 0x12,
  HPPA_cmpclr = 0x13,
  HPPA_cmpib = 0x14,
  HPPA_cmpiclr = 0x15,
  HPPA_copr = 0x16,
  HPPA_cstd = 0x17,
  HPPA_cstw = 0x18,
  HPPA_dcor = 0x19,
  HPPA_depd = 0x1A,
  HPPA_depdi = 0x1B,
  HPPA_depw = 0x1C,
  HPPA_depwi = 0x1D,
  HPPA_diag = 0x1E,
  HPPA_ds = 0x1F,
  HPPA_extrd = 0x20,
  HPPA_extrw = 0x21,
  HPPA_fdc = 0x22,
  HPPA_fdce = 0x23,
  HPPA_fic = 0x24,
  HPPA_fice = 0x25,
  HPPA_hadd = 0x26,
  HPPA_havg = 0x27,
  HPPA_hshl = 0x28,
  HPPA_hshladd = 0x29,
  HPPA_hshr = 0x2A,
  HPPA_hshradd = 0x2B,
  HPPA_hsub = 0x2C,
  HPPA_idtlbt = 0x2D,
  HPPA_iitlbt = 0x2E,
  HPPA_lci = 0x2F,
  HPPA_ldb = 0x30,
  HPPA_ldcd = 0x31,
  HPPA_ldcw = 0x32,
  HPPA_ldd = 0x33,
  HPPA_ldda = 0x34,
  HPPA_ldh = 0x35,
  HPPA_ldil = 0x36,
  HPPA_ldo = 0x37,
  HPPA_ldsid = 0x38,
  HPPA_ldw = 0x39,
  HPPA_ldwa = 0x3A,
  HPPA_lpa = 0x3B,
  HPPA_mfctl = 0x3C,
  HPPA_mfia = 0x3D,
  HPPA_mfsp = 0x3E,
  HPPA_mixh = 0x3F,
  HPPA_mixw = 0x40,
  HPPA_movb = 0x41,
  HPPA_movib = 0x42,
  HPPA_mtctl = 0x43,
  HPPA_mtsarcm = 0x44,
  HPPA_mtsm = 0x45,
  HPPA_mtsp = 0x46,
  HPPA_or = 0x47,
  HPPA_pdc = 0x48,
  HPPA_pdtlb = 0x49,
  HPPA_pdtlbe = 0x4A,
  HPPA_permh = 0x4B,
  HPPA_pitlb = 0x4C,
  HPPA_pitlbe = 0x4D,
  HPPA_popbts = 0x4E,
  HPPA_probe = 0x4F,
  HPPA_probei = 0x50,
  HPPA_pushbts = 0x51,
  HPPA_pushnom = 0x52,
  HPPA_rfi = 0x53,
  HPPA_rsm = 0x54,
  HPPA_shladd = 0x55,
  HPPA_shrpd = 0x56,
  HPPA_shrpw = 0x57,
  HPPA_spop0 = 0x58,
  HPPA_spop1 = 0x59,
  HPPA_spop2 = 0x5A,
  HPPA_spop3 = 0x5B,
  HPPA_ssm = 0x5C,
  HPPA_stb = 0x5D,
  HPPA_stby = 0x5E,
  HPPA_std = 0x5F,
  HPPA_stda = 0x60,
  HPPA_stdby = 0x61,
  HPPA_sth = 0x62,
  HPPA_stw = 0x63,
  HPPA_stwa = 0x64,
  HPPA_sub = 0x65,
  HPPA_subi = 0x66,
  HPPA_sync = 0x67,
  HPPA_syncdma = 0x68,
  HPPA_uaddcm = 0x69,
  HPPA_uxor = 0x6A,
  HPPA_xor = 0x6B,
  HPPA_fabs = 0x6C,
  HPPA_fadd = 0x6D,
  HPPA_fcmp = 0x6E,
  HPPA_fcnv = 0x6F,
  HPPA_fcpy = 0x70,
  HPPA_fdiv = 0x71,
  HPPA_fid = 0x72,
  HPPA_fldd = 0x73,
  HPPA_fldw = 0x74,
  HPPA_fmpy = 0x75,
  HPPA_fmpyadd = 0x76,
  HPPA_fmpyfadd = 0x77,
  HPPA_fmpynfadd = 0x78,
  HPPA_fmpysub = 0x79,
  HPPA_fneg = 0x7A,
  HPPA_fnegabs = 0x7B,
  HPPA_frem = 0x7C,
  HPPA_frnd = 0x7D,
  HPPA_fsqrt = 0x7E,
  HPPA_fstd = 0x7F,
  HPPA_fstw = 0x80,
  HPPA_fsub = 0x81,
  HPPA_ftest = 0x82,
  HPPA_xmpyu = 0x83,
  HPPA_pmdis = 0x84,
  HPPA_pmenb = 0x85,
  HPPA_call = 0x86,
  HPPA_ret = 0x87,
  HPPA_shld = 0x88,
  HPPA_shlw = 0x89,
  HPPA_shrd = 0x8A,
  HPPA_shrw = 0x8B,
  HPPA_ldi = 0x8C,
  HPPA_copy = 0x8D,
  HPPA_mtsar = 0x8E,
  HPPA_nop = 0x8F,
  HPPA_last = 0x90,
};

/* 1760 */
enum _5290CBBFB2D2F51A8E6306549769C310 : unsigned __int32
{
  H8500_null = 0x0,
  H8500_mov_g = 0x1,
  H8500_mov_e = 0x2,
  H8500_mov_i = 0x3,
  H8500_mov_f = 0x4,
  H8500_mov_l = 0x5,
  H8500_mov_s = 0x6,
  H8500_ldm = 0x7,
  H8500_stm = 0x8,
  H8500_xch = 0x9,
  H8500_swap = 0xA,
  H8500_movtpe = 0xB,
  H8500_movfpe = 0xC,
  H8500_add_g = 0xD,
  H8500_add_q = 0xE,
  H8500_sub = 0xF,
  H8500_adds = 0x10,
  H8500_subs = 0x11,
  H8500_addx = 0x12,
  H8500_subx = 0x13,
  H8500_dadd = 0x14,
  H8500_dsub = 0x15,
  H8500_mulxu = 0x16,
  H8500_divxu = 0x17,
  H8500_cmp_g = 0x18,
  H8500_cmp_e = 0x19,
  H8500_cmp_i = 0x1A,
  H8500_exts = 0x1B,
  H8500_extu = 0x1C,
  H8500_tst = 0x1D,
  H8500_neg = 0x1E,
  H8500_clr = 0x1F,
  H8500_tas = 0x20,
  H8500_and = 0x21,
  H8500_or = 0x22,
  H8500_xor = 0x23,
  H8500_not = 0x24,
  H8500_shal = 0x25,
  H8500_shar = 0x26,
  H8500_shll = 0x27,
  H8500_shlr = 0x28,
  H8500_rotl = 0x29,
  H8500_rotr = 0x2A,
  H8500_rotxl = 0x2B,
  H8500_rotxr = 0x2C,
  H8500_bset = 0x2D,
  H8500_bclr = 0x2E,
  H8500_bnot = 0x2F,
  H8500_btst = 0x30,
  H8500_bra = 0x31,
  H8500_brn = 0x32,
  H8500_bhi = 0x33,
  H8500_bls = 0x34,
  H8500_bcc = 0x35,
  H8500_bcs = 0x36,
  H8500_bne = 0x37,
  H8500_beq = 0x38,
  H8500_bvc = 0x39,
  H8500_bvs = 0x3A,
  H8500_bpl = 0x3B,
  H8500_bmi = 0x3C,
  H8500_bge = 0x3D,
  H8500_blt = 0x3E,
  H8500_bgt = 0x3F,
  H8500_ble = 0x40,
  H8500_jmp = 0x41,
  H8500_pjmp = 0x42,
  H8500_bsr = 0x43,
  H8500_jsr = 0x44,
  H8500_pjsr = 0x45,
  H8500_rts = 0x46,
  H8500_prts = 0x47,
  H8500_rtd = 0x48,
  H8500_prtd = 0x49,
  H8500_scb = 0x4A,
  H8500_trapa = 0x4B,
  H8500_trap_vs = 0x4C,
  H8500_rte = 0x4D,
  H8500_link = 0x4E,
  H8500_unlk = 0x4F,
  H8500_sleep = 0x50,
  H8500_ldc = 0x51,
  H8500_stc = 0x52,
  H8500_andc = 0x53,
  H8500_orc = 0x54,
  H8500_xorc = 0x55,
  H8500_nop = 0x56,
  H8500_bpt = 0x57,
  H8500_last = 0x58,
};

/* 1761 */
enum _E4383C1113FD321CF432D1650C4C916C : unsigned __int32
{
  DSP56_null = 0x0,
  DSP56_abs = 0x1,
  DSP56_adc = 0x2,
  DSP56_add = 0x3,
  DSP56_addl = 0x4,
  DSP56_addr = 0x5,
  DSP56_and = 0x6,
  DSP56_andi = 0x7,
  DSP56_asl = 0x8,
  DSP56_asl4 = 0x9,
  DSP56_asr = 0xA,
  DSP56_asr4 = 0xB,
  DSP56_asr16 = 0xC,
  DSP56_bfchg = 0xD,
  DSP56_bfclr = 0xE,
  DSP56_bfset = 0xF,
  DSP56_bftsth = 0x10,
  DSP56_bftstl = 0x11,
  DSP56_bcc = 0x12,
  DSP56_bchg = 0x13,
  DSP56_bclr = 0x14,
  DSP56_bra = 0x15,
  DSP56_brclr = 0x16,
  DSP56_brkcc = 0x17,
  DSP56_brset = 0x18,
  DSP56_bscc = 0x19,
  DSP56_bsclr = 0x1A,
  DSP56_bset = 0x1B,
  DSP56_bsr = 0x1C,
  DSP56_bsset = 0x1D,
  DSP56_btst = 0x1E,
  DSP56_chkaau = 0x1F,
  DSP56_clb = 0x20,
  DSP56_clr = 0x21,
  DSP56_clr24 = 0x22,
  DSP56_cmp = 0x23,
  DSP56_cmpm = 0x24,
  DSP56_cmpu = 0x25,
  DSP56_debug = 0x26,
  DSP56_debugcc = 0x27,
  DSP56_dec = 0x28,
  DSP56_dec24 = 0x29,
  DSP56_div = 0x2A,
  DSP56_dmac = 0x2B,
  DSP56_do = 0x2C,
  DSP56_do_f = 0x2D,
  DSP56_dor = 0x2E,
  DSP56_dor_f = 0x2F,
  DSP56_enddo = 0x30,
  DSP56_eor = 0x31,
  DSP56_extract = 0x32,
  DSP56_extractu = 0x33,
  DSP56_ext = 0x34,
  DSP56_ill = 0x35,
  DSP56_imac = 0x36,
  DSP56_impy = 0x37,
  DSP56_inc = 0x38,
  DSP56_inc24 = 0x39,
  DSP56_insert = 0x3A,
  DSP56_jcc = 0x3B,
  DSP56_jclr = 0x3C,
  DSP56_jmp = 0x3D,
  DSP56_jscc = 0x3E,
  DSP56_jsclr = 0x3F,
  DSP56_jset = 0x40,
  DSP56_jsr = 0x41,
  DSP56_jsset = 0x42,
  DSP56_lra = 0x43,
  DSP56_lsl = 0x44,
  DSP56_lsr = 0x45,
  DSP56_lua = 0x46,
  DSP56_lea = 0x47,
  DSP56_mac = 0x48,
  DSP56_maci = 0x49,
  DSP56_mac_s_u = 0x4A,
  DSP56_macr = 0x4B,
  DSP56_macri = 0x4C,
  DSP56_max = 0x4D,
  DSP56_maxm = 0x4E,
  DSP56_merge = 0x4F,
  DSP56_move = 0x50,
  DSP56_movec = 0x51,
  DSP56_movei = 0x52,
  DSP56_movem = 0x53,
  DSP56_movep = 0x54,
  DSP56_moves = 0x55,
  DSP56_mpy = 0x56,
  DSP56_mpyi = 0x57,
  DSP56_mpy_s_u = 0x58,
  DSP56_mpyr = 0x59,
  DSP56_mpyri = 0x5A,
  DSP56_neg = 0x5B,
  DSP56_negc = 0x5C,
  DSP56_nop = 0x5D,
  DSP56_norm = 0x5E,
  DSP56_normf = 0x5F,
  DSP56_not = 0x60,
  DSP56_or = 0x61,
  DSP56_ori = 0x62,
  DSP56_pflush = 0x63,
  DSP56_pflushun = 0x64,
  DSP56_pfree = 0x65,
  DSP56_plock = 0x66,
  DSP56_plockr = 0x67,
  DSP56_punlock = 0x68,
  DSP56_punlockr = 0x69,
  DSP56_rep = 0x6A,
  DSP56_repcc = 0x6B,
  DSP56_reset = 0x6C,
  DSP56_rnd = 0x6D,
  DSP56_rol = 0x6E,
  DSP56_ror = 0x6F,
  DSP56_rti = 0x70,
  DSP56_rts = 0x71,
  DSP56_sbc = 0x72,
  DSP56_stop = 0x73,
  DSP56_sub = 0x74,
  DSP56_subl = 0x75,
  DSP56_subr = 0x76,
  DSP56_swap = 0x77,
  DSP56_tcc = 0x78,
  DSP56_tfr = 0x79,
  DSP56_tfr2 = 0x7A,
  DSP56_tfr3 = 0x7B,
  DSP56_trap = 0x7C,
  DSP56_trapcc = 0x7D,
  DSP56_tst = 0x7E,
  DSP56_tst2 = 0x7F,
  DSP56_vsl = 0x80,
  DSP56_wait = 0x81,
  DSP56_zero = 0x82,
  DSP56_swi = 0x83,
  DSP56_pmov = 0x84,
  DSP56_last = 0x85,
};

/* 1762 */
enum _B5ECD8C1988DEF842E63B55FB8BE92FB : unsigned __int32
{
  DSP96_null = 0x0,
  DSP96_abs = 0x1,
  DSP96_add = 0x2,
  DSP96_addc = 0x3,
  DSP96_and = 0x4,
  DSP96_andc = 0x5,
  DSP96_andi = 0x6,
  DSP96_asl = 0x7,
  DSP96_asr = 0x8,
  DSP96_bcc = 0x9,
  DSP96_bccd = 0xA,
  DSP96_bchg = 0xB,
  DSP96_bclr = 0xC,
  DSP96_bfind = 0xD,
  DSP96_bra = 0xE,
  DSP96_brclr = 0xF,
  DSP96_brset = 0x10,
  DSP96_bscc = 0x11,
  DSP96_bsccd = 0x12,
  DSP96_bsclr = 0x13,
  DSP96_bset = 0x14,
  DSP96_bsr = 0x15,
  DSP96_bsrd = 0x16,
  DSP96_bsset = 0x17,
  DSP96_btst = 0x18,
  DSP96_clr = 0x19,
  DSP96_cmp = 0x1A,
  DSP96_cmpg = 0x1B,
  DSP96_debugcc = 0x1C,
  DSP96_dec = 0x1D,
  DSP96_do = 0x1E,
  DSP96_dor = 0x1F,
  DSP96_enddo = 0x20,
  DSP96_eor = 0x21,
  DSP96_ext = 0x22,
  DSP96_extb = 0x23,
  DSP96_fabs = 0x24,
  DSP96_fadd = 0x25,
  DSP96_faddsub = 0x26,
  DSP96_fbcc = 0x27,
  DSP96_fbccd = 0x28,
  DSP96_fbscc = 0x29,
  DSP96_fbsccd = 0x2A,
  DSP96_fclr = 0x2B,
  DSP96_fcmp = 0x2C,
  DSP96_fcmpg = 0x2D,
  DSP96_fcmpm = 0x2E,
  DSP96_fcopys = 0x2F,
  DSP96_fdebugcc = 0x30,
  DSP96_fgetman = 0x31,
  DSP96_fint = 0x32,
  DSP96_fjcc = 0x33,
  DSP96_fjccd = 0x34,
  DSP96_fjscc = 0x35,
  DSP96_fjsccd = 0x36,
  DSP96_float = 0x37,
  DSP96_floatu = 0x38,
  DSP96_floor = 0x39,
  DSP96_fmove = 0x3A,
  DSP96_fmpyfadd = 0x3B,
  DSP96_fmpyfaddsub = 0x3C,
  DSP96_fmpyfsub = 0x3D,
  DSP96_fmpy = 0x3E,
  DSP96_fneg = 0x3F,
  DSP96_fscale = 0x40,
  DSP96_fseedd = 0x41,
  DSP96_fseedr = 0x42,
  DSP96_fsub = 0x43,
  DSP96_ftfr = 0x44,
  DSP96_ftrapcc = 0x45,
  DSP96_ftst = 0x46,
  DSP96_getexp = 0x47,
  DSP96_illegal = 0x48,
  DSP96_inc = 0x49,
  DSP96_int = 0x4A,
  DSP96_intrz = 0x4B,
  DSP96_intu = 0x4C,
  DSP96_inturz = 0x4D,
  DSP96_jcc = 0x4E,
  DSP96_jccd = 0x4F,
  DSP96_jclr = 0x50,
  DSP96_join = 0x51,
  DSP96_joinb = 0x52,
  DSP96_jscc = 0x53,
  DSP96_jsccd = 0x54,
  DSP96_jsclr = 0x55,
  DSP96_jset = 0x56,
  DSP96_jsset = 0x57,
  DSP96_lea = 0x58,
  DSP96_lra = 0x59,
  DSP96_lsl = 0x5A,
  DSP96_lsr = 0x5B,
  DSP96_move = 0x5C,
  DSP96_movec = 0x5D,
  DSP96_movei = 0x5E,
  DSP96_movem = 0x5F,
  DSP96_movep = 0x60,
  DSP96_moves = 0x61,
  DSP96_moveta = 0x62,
  DSP96_mpys = 0x63,
  DSP96_mpyu = 0x64,
  DSP96_neg = 0x65,
  DSP96_negc = 0x66,
  DSP96_nop = 0x67,
  DSP96_not = 0x68,
  DSP96_or = 0x69,
  DSP96_orc = 0x6A,
  DSP96_ori = 0x6B,
  DSP96_rep = 0x6C,
  DSP96_reset = 0x6D,
  DSP96_rol = 0x6E,
  DSP96_ror = 0x6F,
  DSP96_rti = 0x70,
  DSP96_rtr = 0x71,
  DSP96_rts = 0x72,
  DSP96_setw = 0x73,
  DSP96_split = 0x74,
  DSP96_splitb = 0x75,
  DSP96_stop = 0x76,
  DSP96_sub = 0x77,
  DSP96_subc = 0x78,
  DSP96_tfr = 0x79,
  DSP96_trapcc = 0x7A,
  DSP96_tst = 0x7B,
  DSP96_wait = 0x7C,
  DSP96_last = 0x7D,
};

/* 1763 */
enum PMNum : unsigned __int32
{
  PM96_NoMove = 0x0,
  PM96_R2R = 0x1,
  PM96_Update = 0x2,
  PM96_XYMem = 0x3,
  PM96_XYmemR = 0x4,
  PM96_Long = 0x5,
  PM96_XY = 0x6,
  PM96_IFcc = 0x7,
};

/* 1764 */
enum _1038787612D6366BC2D035975A173DB8 : unsigned __int32
{
  C166_null = 0x0,
  C166_add = 0x1,
  C166_addb = 0x2,
  C166_addc = 0x3,
  C166_addcb = 0x4,
  C166_and = 0x5,
  C166_andb = 0x6,
  C166_ashr = 0x7,
  C166_atomic = 0x8,
  C166_band = 0x9,
  C166_bclr = 0xA,
  C166_bcmp = 0xB,
  C166_bfldh = 0xC,
  C166_bfldl = 0xD,
  C166_bmov = 0xE,
  C166_bmovn = 0xF,
  C166_bor = 0x10,
  C166_bset = 0x11,
  C166_bxor = 0x12,
  C166_calla = 0x13,
  C166_calli = 0x14,
  C166_callr = 0x15,
  C166_calls = 0x16,
  C166_cmp = 0x17,
  C166_cmpb = 0x18,
  C166_cmpd1 = 0x19,
  C166_cmpd2 = 0x1A,
  C166_cmpi1 = 0x1B,
  C166_cmpi2 = 0x1C,
  C166_cpl = 0x1D,
  C166_cplb = 0x1E,
  C166_diswdt = 0x1F,
  C166_div = 0x20,
  C166_divl = 0x21,
  C166_divlu = 0x22,
  C166_divu = 0x23,
  C166_einit = 0x24,
  C166_extr = 0x25,
  C166_extp = 0x26,
  C166_extpr = 0x27,
  C166_exts = 0x28,
  C166_extsr = 0x29,
  C166_idle = 0x2A,
  C166_jb = 0x2B,
  C166_jbc = 0x2C,
  C166_jmpa = 0x2D,
  C166_jmpi = 0x2E,
  C166_jmpr = 0x2F,
  C166_jmps = 0x30,
  C166_jnb = 0x31,
  C166_jnbs = 0x32,
  C166_mov = 0x33,
  C166_movb = 0x34,
  C166_movbs = 0x35,
  C166_movbz = 0x36,
  C166_mul = 0x37,
  C166_mulu = 0x38,
  C166_neg = 0x39,
  C166_negb = 0x3A,
  C166_nop = 0x3B,
  C166_or = 0x3C,
  C166_orb = 0x3D,
  C166_pcall = 0x3E,
  C166_pop = 0x3F,
  C166_prior = 0x40,
  C166_push = 0x41,
  C166_pwrdn = 0x42,
  C166_ret = 0x43,
  C166_reti = 0x44,
  C166_retp = 0x45,
  C166_rets = 0x46,
  C166_rol = 0x47,
  C166_ror = 0x48,
  C166_scxt = 0x49,
  C166_shl = 0x4A,
  C166_shr = 0x4B,
  C166_srst = 0x4C,
  C166_srvwdt = 0x4D,
  C166_sub = 0x4E,
  C166_subb = 0x4F,
  C166_subc = 0x50,
  C166_subcb = 0x51,
  C166_trap = 0x52,
  C166_xor = 0x53,
  C166_xorb = 0x54,
  ST10_CoABS = 0x55,
  ST10_CoADD = 0x56,
  ST10_CoASHR = 0x57,
  ST10_CoCMP = 0x58,
  ST10_CoLOAD = 0x59,
  ST10_CoMAC = 0x5A,
  ST10_CoMACM = 0x5B,
  ST10_CoMAX = 0x5C,
  ST10_CoMIN = 0x5D,
  ST10_CoMOV = 0x5E,
  ST10_CoMUL = 0x5F,
  ST10_CoNEG = 0x60,
  ST10_CoNOP = 0x61,
  ST10_CoRND = 0x62,
  ST10_CoSHL = 0x63,
  ST10_CoSHR = 0x64,
  ST10_CoSTORE = 0x65,
  ST10_CoSUB = 0x66,
  C166_enwdt = 0x67,
  C166_sbrk = 0x68,
  C166_last = 0x69,
};

/* 1765 */
enum _5021FBEADDAE60134152517C8896D9FD : unsigned __int32
{
  ST20_null = 0x0,
  ST20_adc = 0x1,
  ST20_add = 0x2,
  ST20_addc = 0x3,
  ST20_ajw = 0x4,
  ST20_and = 0x5,
  ST20_arot = 0x6,
  ST20_ashr = 0x7,
  ST20_biquad = 0x8,
  ST20_bitld = 0x9,
  ST20_bitmask = 0xA,
  ST20_bitst = 0xB,
  ST20_breakpoint = 0xC,
  ST20_cj = 0xD,
  ST20_dequeue = 0xE,
  ST20_divstep = 0xF,
  ST20_dup = 0x10,
  ST20_ecall = 0x11,
  ST20_enqueue = 0x12,
  ST20_eqc = 0x13,
  ST20_eret = 0x14,
  ST20_fcall = 0x15,
  ST20_gajw = 0x16,
  ST20_gt = 0x17,
  ST20_gtu = 0x18,
  ST20_io = 0x19,
  ST20_j = 0x1A,
  ST20_jab = 0x1B,
  ST20_lbinc = 0x1C,
  ST20_ldc = 0x1D,
  ST20_ldl = 0x1E,
  ST20_ldlp = 0x1F,
  ST20_ldnl = 0x20,
  ST20_ldnlp = 0x21,
  ST20_ldpi = 0x22,
  ST20_ldprodid = 0x23,
  ST20_ldtdesc = 0x24,
  ST20_lsinc = 0x25,
  ST20_lsxinc = 0x26,
  ST20_lwinc = 0x27,
  ST20_mac = 0x28,
  ST20_mul = 0x29,
  ST20_nfix = 0x2A,
  ST20_nop = 0x2B,
  ST20_not = 0x2C,
  ST20_opr = 0x2D,
  ST20_or = 0x2E,
  ST20_order = 0x2F,
  ST20_orderu = 0x30,
  ST20_pfix = 0x31,
  ST20_rev = 0x32,
  ST20_rmw = 0x33,
  ST20_rot = 0x34,
  ST20_run = 0x35,
  ST20_saturate = 0x36,
  ST20_sbinc = 0x37,
  ST20_shl = 0x38,
  ST20_shr = 0x39,
  ST20_signal = 0x3A,
  ST20_smacinit = 0x3B,
  ST20_smacloop = 0x3C,
  ST20_smul = 0x3D,
  ST20_ssinc = 0x3E,
  ST20_statusclr = 0x3F,
  ST20_statusset = 0x40,
  ST20_statustst = 0x41,
  ST20_stl = 0x42,
  ST20_stnl = 0x43,
  ST20_stop = 0x44,
  ST20_sub = 0x45,
  ST20_subc = 0x46,
  ST20_swap32 = 0x47,
  ST20_swinc = 0x48,
  ST20_timeslice = 0x49,
  ST20_umac = 0x4A,
  ST20_unsign = 0x4B,
  ST20_wait = 0x4C,
  ST20_wsub = 0x4D,
  ST20_xbword = 0x4E,
  ST20_xor = 0x4F,
  ST20_xsword = 0x50,
  ST20_alt = 0x51,
  ST20_altend = 0x52,
  ST20_altwt = 0x53,
  ST20_bcnt = 0x54,
  ST20_bitcnt = 0x55,
  ST20_bitrevnbits = 0x56,
  ST20_bitrevword = 0x57,
  ST20_bsub = 0x58,
  ST20_call = 0x59,
  ST20_causeerror = 0x5A,
  ST20_cb = 0x5B,
  ST20_cbu = 0x5C,
  ST20_ccnt1 = 0x5D,
  ST20_cflerr = 0x5E,
  ST20_cir = 0x5F,
  ST20_ciru = 0x60,
  ST20_clockdis = 0x61,
  ST20_clockenb = 0x62,
  ST20_clrhalterr = 0x63,
  ST20_crcbyte = 0x64,
  ST20_crcword = 0x65,
  ST20_cs = 0x66,
  ST20_csngl = 0x67,
  ST20_csu = 0x68,
  ST20_csub0 = 0x69,
  ST20_cword = 0x6A,
  ST20_devlb = 0x6B,
  ST20_devls = 0x6C,
  ST20_devlw = 0x6D,
  ST20_devmove = 0x6E,
  ST20_devsb = 0x6F,
  ST20_devss = 0x70,
  ST20_devsw = 0x71,
  ST20_diff = 0x72,
  ST20_disc = 0x73,
  ST20_diss = 0x74,
  ST20_dist = 0x75,
  ST20_div = 0x76,
  ST20_enbc = 0x77,
  ST20_enbs = 0x78,
  ST20_enbt = 0x79,
  ST20_endp = 0x7A,
  ST20_fmul = 0x7B,
  ST20_fptesterr = 0x7C,
  ST20_gcall = 0x7D,
  ST20_gintdis = 0x7E,
  ST20_gintenb = 0x7F,
  ST20_in = 0x80,
  ST20_insertqueue = 0x81,
  ST20_intdis = 0x82,
  ST20_intenb = 0x83,
  ST20_iret = 0x84,
  ST20_ladd = 0x85,
  ST20_lb = 0x86,
  ST20_lbx = 0x87,
  ST20_ldclock = 0x88,
  ST20_lddevid = 0x89,
  ST20_ldiff = 0x8A,
  ST20_ldinf = 0x8B,
  ST20_ldiv = 0x8C,
  ST20_ldmemstartval = 0x8D,
  ST20_ldpri = 0x8E,
  ST20_ldshadow = 0x8F,
  ST20_ldtimer = 0x90,
  ST20_ldtraph = 0x91,
  ST20_ldtrapped = 0x92,
  ST20_lend = 0x93,
  ST20_lmul = 0x94,
  ST20_ls = 0x95,
  ST20_lshl = 0x96,
  ST20_lshr = 0x97,
  ST20_lsub = 0x98,
  ST20_lsum = 0x99,
  ST20_lsx = 0x9A,
  ST20_mint = 0x9B,
  ST20_move = 0x9C,
  ST20_move2dall = 0x9D,
  ST20_move2dinit = 0x9E,
  ST20_move2dnonzero = 0x9F,
  ST20_move2dzero = 0xA0,
  ST20_norm = 0xA1,
  ST20_out = 0xA2,
  ST20_outbyte = 0xA3,
  ST20_outword = 0xA4,
  ST20_pop = 0xA5,
  ST20_postnormsn = 0xA6,
  ST20_prod = 0xA7,
  ST20_reboot = 0xA8,
  ST20_rem = 0xA9,
  ST20_resetch = 0xAA,
  ST20_restart = 0xAB,
  ST20_ret = 0xAC,
  ST20_roundsn = 0xAD,
  ST20_runp = 0xAE,
  ST20_satadd = 0xAF,
  ST20_satmul = 0xB0,
  ST20_satsub = 0xB1,
  ST20_saveh = 0xB2,
  ST20_savel = 0xB3,
  ST20_sb = 0xB4,
  ST20_seterr = 0xB5,
  ST20_sethalterr = 0xB6,
  ST20_settimeslice = 0xB7,
  ST20_slmul = 0xB8,
  ST20_ss = 0xB9,
  ST20_ssub = 0xBA,
  ST20_startp = 0xBB,
  ST20_stclock = 0xBC,
  ST20_sthb = 0xBD,
  ST20_sthf = 0xBE,
  ST20_stlb = 0xBF,
  ST20_stlf = 0xC0,
  ST20_stoperr = 0xC1,
  ST20_stopp = 0xC2,
  ST20_stshadow = 0xC3,
  ST20_sttimer = 0xC4,
  ST20_sttraph = 0xC5,
  ST20_sttrapped = 0xC6,
  ST20_sulmul = 0xC7,
  ST20_sum = 0xC8,
  ST20_swapqueue = 0xC9,
  ST20_swaptimer = 0xCA,
  ST20_talt = 0xCB,
  ST20_taltwt = 0xCC,
  ST20_testerr = 0xCD,
  ST20_testhalterr = 0xCE,
  ST20_testpranal = 0xCF,
  ST20_tin = 0xD0,
  ST20_trapdis = 0xD1,
  ST20_trapenb = 0xD2,
  ST20_tret = 0xD3,
  ST20_unpacksn = 0xD4,
  ST20_wcnt = 0xD5,
  ST20_wsubdb = 0xD6,
  ST20_xdble = 0xD7,
  ST20_xword = 0xD8,
  ST20_last = 0xD9,
};

/* 1766 */
enum _FB4308188CC61379A47AE39CE7E9E56B : unsigned __int32
{
  ST7_null = 0x0,
  ST7_adc = 0x1,
  ST7_add = 0x2,
  ST7_and = 0x3,
  ST7_bcp = 0x4,
  ST7_bres = 0x5,
  ST7_bset = 0x6,
  ST7_btjf = 0x7,
  ST7_btjt = 0x8,
  ST7_call = 0x9,
  ST7_callr = 0xA,
  ST7_clr = 0xB,
  ST7_cp = 0xC,
  ST7_cpl = 0xD,
  ST7_dec = 0xE,
  ST7_halt = 0xF,
  ST7_iret = 0x10,
  ST7_inc = 0x11,
  ST7_jp = 0x12,
  ST7_jra = 0x13,
  ST7_jrt = 0x14,
  ST7_jrf = 0x15,
  ST7_jrih = 0x16,
  ST7_jril = 0x17,
  ST7_jrh = 0x18,
  ST7_jrnh = 0x19,
  ST7_jrm = 0x1A,
  ST7_jrnm = 0x1B,
  ST7_jrmi = 0x1C,
  ST7_jrpl = 0x1D,
  ST7_jreq = 0x1E,
  ST7_jrne = 0x1F,
  ST7_jrc = 0x20,
  ST7_jrnc = 0x21,
  ST7_jrult = 0x22,
  ST7_jruge = 0x23,
  ST7_jrugt = 0x24,
  ST7_jrule = 0x25,
  ST7_ld = 0x26,
  ST7_mul = 0x27,
  ST7_neg = 0x28,
  ST7_nop = 0x29,
  ST7_or = 0x2A,
  ST7_pop = 0x2B,
  ST7_push = 0x2C,
  ST7_rcf = 0x2D,
  ST7_ret = 0x2E,
  ST7_rim = 0x2F,
  ST7_rlc = 0x30,
  ST7_rrc = 0x31,
  ST7_rsp = 0x32,
  ST7_sbc = 0x33,
  ST7_scf = 0x34,
  ST7_sim = 0x35,
  ST7_sla = 0x36,
  ST7_sll = 0x37,
  ST7_srl = 0x38,
  ST7_sra = 0x39,
  ST7_sub = 0x3A,
  ST7_swap = 0x3B,
  ST7_tnz = 0x3C,
  ST7_trap = 0x3D,
  ST7_wfi = 0x3E,
  ST7_xor = 0x3F,
  ST7_last = 0x40,
};

/* 1767 */
enum _7D923C96B6ADB4017E6ABB607A3ACE94 : unsigned __int32
{
  IA64_null = 0x0,
  IA64_0 = 0x1,
  IA64_1 = 0x2,
  IA64_a = 0x3,
  IA64_acq = 0x4,
  IA64_add = 0x5,
  IA64_addl = 0x6,
  IA64_addp4 = 0x7,
  IA64_adds = 0x8,
  IA64_alloc = 0x9,
  IA64_and = 0xA,
  IA64_andcm = 0xB,
  IA64_b = 0xC,
  IA64_bias = 0xD,
  IA64_br = 0xE,
  IA64_break = 0xF,
  IA64_brl = 0x10,
  IA64_brp = 0x11,
  IA64_bsw = 0x12,
  IA64_c = 0x13,
  IA64_call = 0x14,
  IA64_cexit = 0x15,
  IA64_chk = 0x16,
  IA64_cloop = 0x17,
  IA64_clr = 0x18,
  IA64_clrrrb = 0x19,
  IA64_cmp = 0x1A,
  IA64_cmp4 = 0x1B,
  IA64_cmpxchg1 = 0x1C,
  IA64_cmpxchg2 = 0x1D,
  IA64_cmpxchg4 = 0x1E,
  IA64_cmpxchg8 = 0x1F,
  IA64_cond = 0x20,
  IA64_cover = 0x21,
  IA64_ctop = 0x22,
  IA64_czx1 = 0x23,
  IA64_czx2 = 0x24,
  IA64_d = 0x25,
  IA64_dep = 0x26,
  IA64_dpnt = 0x27,
  IA64_dptk = 0x28,
  IA64_e = 0x29,
  IA64_epc = 0x2A,
  IA64_eq = 0x2B,
  IA64_excl = 0x2C,
  IA64_exit = 0x2D,
  IA64_exp = 0x2E,
  IA64_extr = 0x2F,
  IA64_f = 0x30,
  IA64_fabs = 0x31,
  IA64_fadd = 0x32,
  IA64_famax = 0x33,
  IA64_famin = 0x34,
  IA64_fand = 0x35,
  IA64_fandcm = 0x36,
  IA64_fault = 0x37,
  IA64_fc = 0x38,
  IA64_fchkf = 0x39,
  IA64_fclass = 0x3A,
  IA64_fclrf = 0x3B,
  IA64_fcmp = 0x3C,
  IA64_fcvt = 0x3D,
  IA64_fetchadd4 = 0x3E,
  IA64_fetchadd8 = 0x3F,
  IA64_few = 0x40,
  IA64_fill = 0x41,
  IA64_flushrs = 0x42,
  IA64_fma = 0x43,
  IA64_fmax = 0x44,
  IA64_fmerge = 0x45,
  IA64_fmin = 0x46,
  IA64_fmix = 0x47,
  IA64_fmpy = 0x48,
  IA64_fms = 0x49,
  IA64_fneg = 0x4A,
  IA64_fnegabs = 0x4B,
  IA64_fnma = 0x4C,
  IA64_fnmpy = 0x4D,
  IA64_fnorm = 0x4E,
  IA64_for = 0x4F,
  IA64_fpabs = 0x50,
  IA64_fpack = 0x51,
  IA64_fpamax = 0x52,
  IA64_fpamin = 0x53,
  IA64_fpcmp = 0x54,
  IA64_fpcvt = 0x55,
  IA64_fpma = 0x56,
  IA64_fpmax = 0x57,
  IA64_fpmerge = 0x58,
  IA64_fpmin = 0x59,
  IA64_fpmpy = 0x5A,
  IA64_fpms = 0x5B,
  IA64_fpneg = 0x5C,
  IA64_fpnegabs = 0x5D,
  IA64_fpnma = 0x5E,
  IA64_fpnmpy = 0x5F,
  IA64_fprcpa = 0x60,
  IA64_fprsqrta = 0x61,
  IA64_frcpa = 0x62,
  IA64_frsqrta = 0x63,
  IA64_fselect = 0x64,
  IA64_fsetc = 0x65,
  IA64_fsub = 0x66,
  IA64_fswap = 0x67,
  IA64_fsxt = 0x68,
  IA64_fwb = 0x69,
  IA64_fx = 0x6A,
  IA64_fxor = 0x6B,
  IA64_fxu = 0x6C,
  IA64_g = 0x6D,
  IA64_ga = 0x6E,
  IA64_ge = 0x6F,
  IA64_getf = 0x70,
  IA64_geu = 0x71,
  IA64_gt = 0x72,
  IA64_gtu = 0x73,
  IA64_h = 0x74,
  IA64_hu = 0x75,
  IA64_i = 0x76,
  IA64_ia = 0x77,
  IA64_imp = 0x78,
  IA64_invala = 0x79,
  IA64_itc = 0x7A,
  IA64_itr = 0x7B,
  IA64_l = 0x7C,
  IA64_ld1 = 0x7D,
  IA64_ld2 = 0x7E,
  IA64_ld4 = 0x7F,
  IA64_ld8 = 0x80,
  IA64_ldf = 0x81,
  IA64_ldf8 = 0x82,
  IA64_ldfd = 0x83,
  IA64_ldfe = 0x84,
  IA64_ldfp8 = 0x85,
  IA64_ldfpd = 0x86,
  IA64_ldfps = 0x87,
  IA64_ldfs = 0x88,
  IA64_le = 0x89,
  IA64_leu = 0x8A,
  IA64_lfetch = 0x8B,
  IA64_loadrs = 0x8C,
  IA64_loop = 0x8D,
  IA64_lr = 0x8E,
  IA64_lt = 0x8F,
  IA64_ltu = 0x90,
  IA64_lu = 0x91,
  IA64_m = 0x92,
  IA64_many = 0x93,
  IA64_mf = 0x94,
  IA64_mix1 = 0x95,
  IA64_mix2 = 0x96,
  IA64_mix4 = 0x97,
  IA64_mov = 0x98,
  IA64_movl = 0x99,
  IA64_mux1 = 0x9A,
  IA64_mux2 = 0x9B,
  IA64_nc = 0x9C,
  IA64_ne = 0x9D,
  IA64_neq = 0x9E,
  IA64_nge = 0x9F,
  IA64_ngt = 0xA0,
  IA64_nl = 0xA1,
  IA64_nle = 0xA2,
  IA64_nlt = 0xA3,
  IA64_nm = 0xA4,
  IA64_nop = 0xA5,
  IA64_nr = 0xA6,
  IA64_ns = 0xA7,
  IA64_nt1 = 0xA8,
  IA64_nt2 = 0xA9,
  IA64_nta = 0xAA,
  IA64_nz = 0xAB,
  IA64_or = 0xAC,
  IA64_orcm = 0xAD,
  IA64_ord = 0xAE,
  IA64_pack2 = 0xAF,
  IA64_pack4 = 0xB0,
  IA64_padd1 = 0xB1,
  IA64_padd2 = 0xB2,
  IA64_padd4 = 0xB3,
  IA64_pavg1 = 0xB4,
  IA64_pavg2 = 0xB5,
  IA64_pavgsub1 = 0xB6,
  IA64_pavgsub2 = 0xB7,
  IA64_pcmp1 = 0xB8,
  IA64_pcmp2 = 0xB9,
  IA64_pcmp4 = 0xBA,
  IA64_pmax1 = 0xBB,
  IA64_pmax2 = 0xBC,
  IA64_pmin1 = 0xBD,
  IA64_pmin2 = 0xBE,
  IA64_pmpy2 = 0xBF,
  IA64_pmpyshr2 = 0xC0,
  IA64_popcnt = 0xC1,
  IA64_pr = 0xC2,
  IA64_probe = 0xC3,
  IA64_psad1 = 0xC4,
  IA64_pshl2 = 0xC5,
  IA64_pshl4 = 0xC6,
  IA64_pshladd2 = 0xC7,
  IA64_pshr2 = 0xC8,
  IA64_pshr4 = 0xC9,
  IA64_pshradd2 = 0xCA,
  IA64_psub1 = 0xCB,
  IA64_psub2 = 0xCC,
  IA64_psub4 = 0xCD,
  IA64_ptc = 0xCE,
  IA64_ptr = 0xCF,
  IA64_r = 0xD0,
  IA64_raz = 0xD1,
  IA64_rel = 0xD2,
  IA64_ret = 0xD3,
  IA64_rfi = 0xD4,
  IA64_rsm = 0xD5,
  IA64_rum = 0xD6,
  IA64_rw = 0xD7,
  IA64_s = 0xD8,
  IA64_s0 = 0xD9,
  IA64_s1 = 0xDA,
  IA64_s2 = 0xDB,
  IA64_s3 = 0xDC,
  IA64_sa = 0xDD,
  IA64_se = 0xDE,
  IA64_setf = 0xDF,
  IA64_shl = 0xE0,
  IA64_shladd = 0xE1,
  IA64_shladdp4 = 0xE2,
  IA64_shr = 0xE3,
  IA64_shrp = 0xE4,
  IA64_sig = 0xE5,
  IA64_spill = 0xE6,
  IA64_spnt = 0xE7,
  IA64_sptk = 0xE8,
  IA64_srlz = 0xE9,
  IA64_ssm = 0xEA,
  IA64_sss = 0xEB,
  IA64_st1 = 0xEC,
  IA64_st2 = 0xED,
  IA64_st4 = 0xEE,
  IA64_st8 = 0xEF,
  IA64_stf = 0xF0,
  IA64_stf8 = 0xF1,
  IA64_stfd = 0xF2,
  IA64_stfe = 0xF3,
  IA64_stfs = 0xF4,
  IA64_sub = 0xF5,
  IA64_sum = 0xF6,
  IA64_sxt1 = 0xF7,
  IA64_sxt2 = 0xF8,
  IA64_sxt4 = 0xF9,
  IA64_sync = 0xFA,
  IA64_tak = 0xFB,
  IA64_tbit = 0xFC,
  IA64_thash = 0xFD,
  IA64_tnat = 0xFE,
  IA64_tpa = 0xFF,
  IA64_trunc = 0x100,
  IA64_ttag = 0x101,
  IA64_u = 0x102,
  IA64_unc = 0x103,
  IA64_unord = 0x104,
  IA64_unpack1 = 0x105,
  IA64_unpack2 = 0x106,
  IA64_unpack4 = 0x107,
  IA64_uss = 0x108,
  IA64_uus = 0x109,
  IA64_uuu = 0x10A,
  IA64_w = 0x10B,
  IA64_wexit = 0x10C,
  IA64_wtop = 0x10D,
  IA64_x = 0x10E,
  IA64_xchg1 = 0x10F,
  IA64_xchg2 = 0x110,
  IA64_xchg4 = 0x111,
  IA64_xchg8 = 0x112,
  IA64_xf = 0x113,
  IA64_xma = 0x114,
  IA64_xmpy = 0x115,
  IA64_xor = 0x116,
  IA64_xuf = 0x117,
  IA64_z = 0x118,
  IA64_zxt1 = 0x119,
  IA64_zxt2 = 0x11A,
  IA64_zxt4 = 0x11B,
  IA64_last = 0x11C,
};

/* 1768 */
enum _D932C311951F178400A52260A746C74E : unsigned __int32
{
  NET_null = 0x0,
  NET_add = 0x1,
  NET_add_ovf = 0x2,
  NET_add_ovf_un = 0x3,
  NET_and = 0x4,
  NET_ann_arg = 0x5,
  NET_ann_call = 0x6,
  NET_ann_catch = 0x7,
  NET_ann_data = 0x8,
  NET_ann_data_s = 0x9,
  NET_ann_dead = 0xA,
  NET_ann_def = 0xB,
  NET_ann_hoisted = 0xC,
  NET_ann_hoisted_call = 0xD,
  NET_ann_lab = 0xE,
  NET_ann_live = 0xF,
  NET_ann_phi = 0x10,
  NET_ann_ref = 0x11,
  NET_ann_ref_s = 0x12,
  NET_arglist = 0x13,
  NET_beq = 0x14,
  NET_beq_s = 0x15,
  NET_bge = 0x16,
  NET_bge_s = 0x17,
  NET_bge_un = 0x18,
  NET_bge_un_s = 0x19,
  NET_bgt = 0x1A,
  NET_bgt_s = 0x1B,
  NET_bgt_un = 0x1C,
  NET_bgt_un_s = 0x1D,
  NET_ble = 0x1E,
  NET_ble_s = 0x1F,
  NET_ble_un = 0x20,
  NET_ble_un_s = 0x21,
  NET_blt = 0x22,
  NET_blt_s = 0x23,
  NET_blt_un = 0x24,
  NET_blt_un_s = 0x25,
  NET_bne_un = 0x26,
  NET_bne_un_s = 0x27,
  NET_box = 0x28,
  NET_br = 0x29,
  NET_br_s = 0x2A,
  NET_break = 0x2B,
  NET_brfalse = 0x2C,
  NET_brfalse_s = 0x2D,
  NET_brtrue = 0x2E,
  NET_brtrue_s = 0x2F,
  NET_call = 0x30,
  NET_calli = 0x31,
  NET_callvirt = 0x32,
  NET_castclass = 0x33,
  NET_ceq = 0x34,
  NET_cgt = 0x35,
  NET_cgt_un = 0x36,
  NET_ckfinite = 0x37,
  NET_clt = 0x38,
  NET_clt_un = 0x39,
  NET_conv_i = 0x3A,
  NET_conv_i1 = 0x3B,
  NET_conv_i2 = 0x3C,
  NET_conv_i4 = 0x3D,
  NET_conv_i8 = 0x3E,
  NET_conv_ovf_i = 0x3F,
  NET_conv_ovf_i1 = 0x40,
  NET_conv_ovf_i1_un = 0x41,
  NET_conv_ovf_i2 = 0x42,
  NET_conv_ovf_i2_un = 0x43,
  NET_conv_ovf_i4 = 0x44,
  NET_conv_ovf_i4_un = 0x45,
  NET_conv_ovf_i8 = 0x46,
  NET_conv_ovf_i8_un = 0x47,
  NET_conv_ovf_i_un = 0x48,
  NET_conv_ovf_u = 0x49,
  NET_conv_ovf_u1 = 0x4A,
  NET_conv_ovf_u1_un = 0x4B,
  NET_conv_ovf_u2 = 0x4C,
  NET_conv_ovf_u2_un = 0x4D,
  NET_conv_ovf_u4 = 0x4E,
  NET_conv_ovf_u4_un = 0x4F,
  NET_conv_ovf_u8 = 0x50,
  NET_conv_ovf_u8_un = 0x51,
  NET_conv_ovf_u_un = 0x52,
  NET_conv_r4 = 0x53,
  NET_conv_r8 = 0x54,
  NET_conv_r_un = 0x55,
  NET_conv_u = 0x56,
  NET_conv_u1 = 0x57,
  NET_conv_u2 = 0x58,
  NET_conv_u4 = 0x59,
  NET_conv_u8 = 0x5A,
  NET_cpblk = 0x5B,
  NET_cpobj = 0x5C,
  NET_div = 0x5D,
  NET_div_un = 0x5E,
  NET_dup = 0x5F,
  NET_endfilter = 0x60,
  NET_endfinally = 0x61,
  NET_initblk = 0x62,
  NET_initobj = 0x63,
  NET_isinst = 0x64,
  NET_jmp = 0x65,
  NET_ldarg = 0x66,
  NET_ldarg_0 = 0x67,
  NET_ldarg_1 = 0x68,
  NET_ldarg_2 = 0x69,
  NET_ldarg_3 = 0x6A,
  NET_ldarg_s = 0x6B,
  NET_ldarga = 0x6C,
  NET_ldarga_s = 0x6D,
  NET_ldc_i4 = 0x6E,
  NET_ldc_i4_0 = 0x6F,
  NET_ldc_i4_1 = 0x70,
  NET_ldc_i4_2 = 0x71,
  NET_ldc_i4_3 = 0x72,
  NET_ldc_i4_4 = 0x73,
  NET_ldc_i4_5 = 0x74,
  NET_ldc_i4_6 = 0x75,
  NET_ldc_i4_7 = 0x76,
  NET_ldc_i4_8 = 0x77,
  NET_ldc_i4_m1 = 0x78,
  NET_ldc_i4_s = 0x79,
  NET_ldc_i8 = 0x7A,
  NET_ldc_r4 = 0x7B,
  NET_ldc_r8 = 0x7C,
  NET_ldelem_i = 0x7D,
  NET_ldelem_i1 = 0x7E,
  NET_ldelem_i2 = 0x7F,
  NET_ldelem_i4 = 0x80,
  NET_ldelem_i8 = 0x81,
  NET_ldelem_r4 = 0x82,
  NET_ldelem_r8 = 0x83,
  NET_ldelem_ref = 0x84,
  NET_ldelem_u1 = 0x85,
  NET_ldelem_u2 = 0x86,
  NET_ldelem_u4 = 0x87,
  NET_ldelema = 0x88,
  NET_ldfld = 0x89,
  NET_ldflda = 0x8A,
  NET_ldftn = 0x8B,
  NET_ldind_i = 0x8C,
  NET_ldind_i1 = 0x8D,
  NET_ldind_i2 = 0x8E,
  NET_ldind_i4 = 0x8F,
  NET_ldind_i8 = 0x90,
  NET_ldind_r4 = 0x91,
  NET_ldind_r8 = 0x92,
  NET_ldind_ref = 0x93,
  NET_ldind_u1 = 0x94,
  NET_ldind_u2 = 0x95,
  NET_ldind_u4 = 0x96,
  NET_ldlen = 0x97,
  NET_ldloc = 0x98,
  NET_ldloc_0 = 0x99,
  NET_ldloc_1 = 0x9A,
  NET_ldloc_2 = 0x9B,
  NET_ldloc_3 = 0x9C,
  NET_ldloc_s = 0x9D,
  NET_ldloca = 0x9E,
  NET_ldloca_s = 0x9F,
  NET_ldnull = 0xA0,
  NET_ldobj = 0xA1,
  NET_ldsfld = 0xA2,
  NET_ldsflda = 0xA3,
  NET_ldstr = 0xA4,
  NET_ldtoken = 0xA5,
  NET_ldvirtftn = 0xA6,
  NET_leave = 0xA7,
  NET_leave_s = 0xA8,
  NET_localloc = 0xA9,
  NET_mkrefany = 0xAA,
  NET_mul = 0xAB,
  NET_mul_ovf = 0xAC,
  NET_mul_ovf_un = 0xAD,
  NET_neg = 0xAE,
  NET_newarr = 0xAF,
  NET_newobj = 0xB0,
  NET_nop = 0xB1,
  NET_not = 0xB2,
  NET_or = 0xB3,
  NET_pop = 0xB4,
  NET_refanytype = 0xB5,
  NET_refanyval = 0xB6,
  NET_rem = 0xB7,
  NET_rem_un = 0xB8,
  NET_ret = 0xB9,
  NET_rethrow = 0xBA,
  NET_shl = 0xBB,
  NET_shr = 0xBC,
  NET_shr_un = 0xBD,
  NET_sizeof = 0xBE,
  NET_starg = 0xBF,
  NET_starg_s = 0xC0,
  NET_stelem_i = 0xC1,
  NET_stelem_i1 = 0xC2,
  NET_stelem_i2 = 0xC3,
  NET_stelem_i4 = 0xC4,
  NET_stelem_i8 = 0xC5,
  NET_stelem_r4 = 0xC6,
  NET_stelem_r8 = 0xC7,
  NET_stelem_ref = 0xC8,
  NET_stfld = 0xC9,
  NET_stind_i = 0xCA,
  NET_stind_i1 = 0xCB,
  NET_stind_i2 = 0xCC,
  NET_stind_i4 = 0xCD,
  NET_stind_i8 = 0xCE,
  NET_stind_r4 = 0xCF,
  NET_stind_r8 = 0xD0,
  NET_stind_ref = 0xD1,
  NET_stloc = 0xD2,
  NET_stloc_0 = 0xD3,
  NET_stloc_1 = 0xD4,
  NET_stloc_2 = 0xD5,
  NET_stloc_3 = 0xD6,
  NET_stloc_s = 0xD7,
  NET_stobj = 0xD8,
  NET_stsfld = 0xD9,
  NET_sub = 0xDA,
  NET_sub_ovf = 0xDB,
  NET_sub_ovf_un = 0xDC,
  NET_switch = 0xDD,
  NET_tail_ = 0xDE,
  NET_throw = 0xDF,
  NET_unaligned_ = 0xE0,
  NET_unbox = 0xE1,
  NET_volatile_ = 0xE2,
  NET_xor = 0xE3,
  NET_ldelem = 0xE4,
  NET_stelem = 0xE5,
  NET_unbox_any = 0xE6,
  NET_constrained_ = 0xE7,
  NET_no_ = 0xE8,
  NET_readonly_ = 0xE9,
  NET_last = 0xEA,
};

/* 1769 */
enum _FB1089CAE9F05A3C04D5DA9681E20324 : unsigned __int32
{
  MC12_null = 0x0,
  MC12_aba = 0x1,
  MC12_abx = 0x2,
  MC12_aby = 0x3,
  MC12_adca = 0x4,
  MC12_adcb = 0x5,
  MC12_adda = 0x6,
  MC12_addb = 0x7,
  MC12_addd = 0x8,
  MC12_anda = 0x9,
  MC12_andb = 0xA,
  MC12_andcc = 0xB,
  MC12_asl = 0xC,
  MC12_asla = 0xD,
  MC12_aslb = 0xE,
  MC12_asld = 0xF,
  MC12_asr = 0x10,
  MC12_asra = 0x11,
  MC12_asrb = 0x12,
  MC12_bcc = 0x13,
  MC12_bclr = 0x14,
  MC12_bcs = 0x15,
  MC12_beq = 0x16,
  MC12_bge = 0x17,
  MC12_bgnd = 0x18,
  MC12_bgt = 0x19,
  MC12_bhi = 0x1A,
  MC12_bhs = 0x1B,
  MC12_bita = 0x1C,
  MC12_bitb = 0x1D,
  MC12_ble = 0x1E,
  MC12_blo = 0x1F,
  MC12_bls = 0x20,
  MC12_blt = 0x21,
  MC12_bmi = 0x22,
  MC12_bne = 0x23,
  MC12_bpl = 0x24,
  MC12_bra = 0x25,
  MC12_brclr = 0x26,
  MC12_brn = 0x27,
  MC12_brset = 0x28,
  MC12_bset = 0x29,
  MC12_bsr = 0x2A,
  MC12_bvc = 0x2B,
  MC12_bvs = 0x2C,
  MC12_call = 0x2D,
  MC12_cba = 0x2E,
  MC12_clc = 0x2F,
  MC12_cli = 0x30,
  MC12_clr = 0x31,
  MC12_clra = 0x32,
  MC12_clrb = 0x33,
  MC12_clv = 0x34,
  MC12_cmpa = 0x35,
  MC12_cmpb = 0x36,
  MC12_com = 0x37,
  MC12_coma = 0x38,
  MC12_comb = 0x39,
  MC12_cpd = 0x3A,
  MC12_cps = 0x3B,
  MC12_cpx = 0x3C,
  MC12_cpy = 0x3D,
  MC12_daa = 0x3E,
  MC12_dbeq = 0x3F,
  MC12_dbne = 0x40,
  MC12_dec = 0x41,
  MC12_deca = 0x42,
  MC12_decb = 0x43,
  MC12_des = 0x44,
  MC12_dex = 0x45,
  MC12_dey = 0x46,
  MC12_ediv = 0x47,
  MC12_edivs = 0x48,
  MC12_emacs = 0x49,
  MC12_emaxd = 0x4A,
  MC12_emaxm = 0x4B,
  MC12_emind = 0x4C,
  MC12_eminm = 0x4D,
  MC12_emul = 0x4E,
  MC12_emuls = 0x4F,
  MC12_eora = 0x50,
  MC12_eorb = 0x51,
  MC12_etbl = 0x52,
  MC12_exg = 0x53,
  MC12_fdiv = 0x54,
  MC12_ibeq = 0x55,
  MC12_ibne = 0x56,
  MC12_idiv = 0x57,
  MC12_idivs = 0x58,
  MC12_inc = 0x59,
  MC12_inca = 0x5A,
  MC12_incb = 0x5B,
  MC12_ins = 0x5C,
  MC12_inx = 0x5D,
  MC12_iny = 0x5E,
  MC12_jmp = 0x5F,
  MC12_jsr = 0x60,
  MC12_lbcc = 0x61,
  MC12_lbcs = 0x62,
  MC12_lbeq = 0x63,
  MC12_lbge = 0x64,
  MC12_lbgt = 0x65,
  MC12_lbhi = 0x66,
  MC12_lbhs = 0x67,
  MC12_lble = 0x68,
  MC12_lblo = 0x69,
  MC12_lbls = 0x6A,
  MC12_lblt = 0x6B,
  MC12_lbmi = 0x6C,
  MC12_lbne = 0x6D,
  MC12_lbpl = 0x6E,
  MC12_lbra = 0x6F,
  MC12_lbrn = 0x70,
  MC12_lbvc = 0x71,
  MC12_lbvs = 0x72,
  MC12_ldaa = 0x73,
  MC12_ldab = 0x74,
  MC12_ldd = 0x75,
  MC12_lds = 0x76,
  MC12_ldx = 0x77,
  MC12_ldy = 0x78,
  MC12_leas = 0x79,
  MC12_leax = 0x7A,
  MC12_leay = 0x7B,
  MC12_lsl = 0x7C,
  MC12_lsla = 0x7D,
  MC12_lslb = 0x7E,
  MC12_lsld = 0x7F,
  MC12_lsr = 0x80,
  MC12_lsra = 0x81,
  MC12_lsrb = 0x82,
  MC12_lsrd = 0x83,
  MC12_maxa = 0x84,
  MC12_maxm = 0x85,
  MC12_mem = 0x86,
  MC12_mina = 0x87,
  MC12_minm = 0x88,
  MC12_movb = 0x89,
  MC12_movw = 0x8A,
  MC12_mul = 0x8B,
  MC12_neg = 0x8C,
  MC12_nega = 0x8D,
  MC12_negb = 0x8E,
  MC12_nop = 0x8F,
  MC12_oraa = 0x90,
  MC12_orab = 0x91,
  MC12_orcc = 0x92,
  MC12_psha = 0x93,
  MC12_pshb = 0x94,
  MC12_pshc = 0x95,
  MC12_pshd = 0x96,
  MC12_pshx = 0x97,
  MC12_pshy = 0x98,
  MC12_pula = 0x99,
  MC12_pulb = 0x9A,
  MC12_pulc = 0x9B,
  MC12_puld = 0x9C,
  MC12_pulx = 0x9D,
  MC12_puly = 0x9E,
  MC12_rev = 0x9F,
  MC12_revw = 0xA0,
  MC12_rol = 0xA1,
  MC12_rola = 0xA2,
  MC12_rolb = 0xA3,
  MC12_ror = 0xA4,
  MC12_rora = 0xA5,
  MC12_rorb = 0xA6,
  MC12_rtc = 0xA7,
  MC12_rti = 0xA8,
  MC12_rts = 0xA9,
  MC12_sba = 0xAA,
  MC12_sbca = 0xAB,
  MC12_sbcb = 0xAC,
  MC12_sec = 0xAD,
  MC12_sei = 0xAE,
  MC12_sev = 0xAF,
  MC12_sex = 0xB0,
  MC12_staa = 0xB1,
  MC12_stab = 0xB2,
  MC12_std = 0xB3,
  MC12_stop = 0xB4,
  MC12_sts = 0xB5,
  MC12_stx = 0xB6,
  MC12_sty = 0xB7,
  MC12_suba = 0xB8,
  MC12_subb = 0xB9,
  MC12_subd = 0xBA,
  MC12_swi = 0xBB,
  MC12_tab = 0xBC,
  MC12_tap = 0xBD,
  MC12_tba = 0xBE,
  MC12_tbeq = 0xBF,
  MC12_tbl = 0xC0,
  MC12_tbne = 0xC1,
  MC12_tfr = 0xC2,
  MC12_tpa = 0xC3,
  MC12_trap = 0xC4,
  MC12_tst = 0xC5,
  MC12_tsta = 0xC6,
  MC12_tstb = 0xC7,
  MC12_tsx = 0xC8,
  MC12_tsy = 0xC9,
  MC12_txs = 0xCA,
  MC12_tys = 0xCB,
  MC12_wai = 0xCC,
  MC12_wav = 0xCD,
  MC12_wavr = 0xCE,
  MC12_xgdx = 0xCF,
  MC12_xgdy = 0xD0,
  MC12_skip1 = 0xD1,
  MC12_skip2 = 0xD2,
  MC12X_addx = 0xD3,
  MC12X_addy = 0xD4,
  MC12X_aded = 0xD5,
  MC12X_adex = 0xD6,
  MC12X_adey = 0xD7,
  MC12X_andx = 0xD8,
  MC12X_andy = 0xD9,
  MC12X_aslw = 0xDA,
  MC12X_aslx = 0xDB,
  MC12X_asly = 0xDC,
  MC12X_asrw = 0xDD,
  MC12X_asrx = 0xDE,
  MC12X_asry = 0xDF,
  MC12X_bitx = 0xE0,
  MC12X_bity = 0xE1,
  MC12X_btas = 0xE2,
  MC12X_clrw = 0xE3,
  MC12X_clrx = 0xE4,
  MC12X_clry = 0xE5,
  MC12X_comw = 0xE6,
  MC12X_comx = 0xE7,
  MC12X_comy = 0xE8,
  MC12X_cped = 0xE9,
  MC12X_cpes = 0xEA,
  MC12X_cpex = 0xEB,
  MC12X_cpey = 0xEC,
  MC12X_decw = 0xED,
  MC12X_decx = 0xEE,
  MC12X_decy = 0xEF,
  MC12X_eorx = 0xF0,
  MC12X_eory = 0xF1,
  MC12X_gldaa = 0xF2,
  MC12X_gldab = 0xF3,
  MC12X_gldd = 0xF4,
  MC12X_glds = 0xF5,
  MC12X_gldx = 0xF6,
  MC12X_gldy = 0xF7,
  MC12X_gstaa = 0xF8,
  MC12X_gstab = 0xF9,
  MC12X_gstd = 0xFA,
  MC12X_gsts = 0xFB,
  MC12X_gstx = 0xFC,
  MC12X_gsty = 0xFD,
  MC12X_incw = 0xFE,
  MC12X_incx = 0xFF,
  MC12X_incy = 0x100,
  MC12X_lsrw = 0x101,
  MC12X_lsrx = 0x102,
  MC12X_lsry = 0x103,
  MC12X_negw = 0x104,
  MC12X_negx = 0x105,
  MC12X_negy = 0x106,
  MC12X_orx = 0x107,
  MC12X_ory = 0x108,
  MC12X_pshcw = 0x109,
  MC12X_pulcw = 0x10A,
  MC12X_rolw = 0x10B,
  MC12X_rolx = 0x10C,
  MC12X_roly = 0x10D,
  MC12X_rorw = 0x10E,
  MC12X_rorx = 0x10F,
  MC12X_rory = 0x110,
  MC12X_sbed = 0x111,
  MC12X_sbex = 0x112,
  MC12X_sbey = 0x113,
  MC12X_subx = 0x114,
  MC12X_suby = 0x115,
  MC12X_tstw = 0x116,
  MC12X_tstx = 0x117,
  MC12X_tsty = 0x118,
  MC12X_sys = 0x119,
  MC12XGATE_adc = 0x11A,
  MC12XGATE_add = 0x11B,
  MC12XGATE_addh = 0x11C,
  MC12XGATE_addl = 0x11D,
  MC12XGATE_and = 0x11E,
  MC12XGATE_andh = 0x11F,
  MC12XGATE_andl = 0x120,
  MC12XGATE_asr = 0x121,
  MC12XGATE_bcc = 0x122,
  MC12XGATE_bcs = 0x123,
  MC12XGATE_beq = 0x124,
  MC12XGATE_bfext = 0x125,
  MC12XGATE_bffo = 0x126,
  MC12XGATE_bfins = 0x127,
  MC12XGATE_bfinsi = 0x128,
  MC12XGATE_bfinsx = 0x129,
  MC12XGATE_bge = 0x12A,
  MC12XGATE_bgt = 0x12B,
  MC12XGATE_bhi = 0x12C,
  MC12XGATE_bhs = 0x12D,
  MC12XGATE_bith = 0x12E,
  MC12XGATE_bitl = 0x12F,
  MC12XGATE_ble = 0x130,
  MC12XGATE_blo = 0x131,
  MC12XGATE_bls = 0x132,
  MC12XGATE_blt = 0x133,
  MC12XGATE_bmi = 0x134,
  MC12XGATE_bne = 0x135,
  MC12XGATE_bpl = 0x136,
  MC12XGATE_bra = 0x137,
  MC12XGATE_brk = 0x138,
  MC12XGATE_bvc = 0x139,
  MC12XGATE_bvs = 0x13A,
  MC12XGATE_cmp = 0x13B,
  MC12XGATE_cmpl = 0x13C,
  MC12XGATE_com = 0x13D,
  MC12XGATE_cpc = 0x13E,
  MC12XGATE_cpch = 0x13F,
  MC12XGATE_csem = 0x140,
  MC12XGATE_csl = 0x141,
  MC12XGATE_csr = 0x142,
  MC12XGATE_jal = 0x143,
  MC12XGATE_ldb = 0x144,
  MC12XGATE_ldh = 0x145,
  MC12XGATE_ldl = 0x146,
  MC12XGATE_ldw = 0x147,
  MC12XGATE_lsl = 0x148,
  MC12XGATE_lsr = 0x149,
  MC12XGATE_mov = 0x14A,
  MC12XGATE_neg = 0x14B,
  MC12XGATE_nop = 0x14C,
  MC12XGATE_or = 0x14D,
  MC12XGATE_orh = 0x14E,
  MC12XGATE_orl = 0x14F,
  MC12XGATE_par = 0x150,
  MC12XGATE_rol = 0x151,
  MC12XGATE_ror = 0x152,
  MC12XGATE_rts = 0x153,
  MC12XGATE_sbc = 0x154,
  MC12XGATE_sex = 0x155,
  MC12XGATE_sif = 0x156,
  MC12XGATE_ssem = 0x157,
  MC12XGATE_stb = 0x158,
  MC12XGATE_stw = 0x159,
  MC12XGATE_sub = 0x15A,
  MC12XGATE_subh = 0x15B,
  MC12XGATE_subl = 0x15C,
  MC12XGATE_tfr = 0x15D,
  MC12XGATE_tst = 0x15E,
  MC12XGATE_xnor = 0x15F,
  MC12XGATE_xnorh = 0x160,
  MC12XGATE_xnorl = 0x161,
  MC12XGATE_add16 = 0x162,
  MC12XGATE_and16 = 0x163,
  MC12XGATE_cmp16 = 0x164,
  MC12XGATE_ldw16 = 0x165,
  MC12XGATE_or16 = 0x166,
  MC12XGATE_sub16 = 0x167,
  MC12XGATE_xnor16 = 0x168,
  MC12_last = 0x169,
};

/* 1770 */
enum _B5CB1DE07648BCF4F03AB285F94FB747 : unsigned __int32
{
  MC6816_null = 0x0,
  MC6816_ldaa = 0x1,
  MC6816_ldab = 0x2,
  MC6816_ldd = 0x3,
  MC6816_lde = 0x4,
  MC6816_lded = 0x5,
  MC6816_movb = 0x6,
  MC6816_movw = 0x7,
  MC6816_staa = 0x8,
  MC6816_stab = 0x9,
  MC6816_std = 0xA,
  MC6816_ste = 0xB,
  MC6816_sted = 0xC,
  MC6816_tab = 0xD,
  MC6816_tba = 0xE,
  MC6816_tde = 0xF,
  MC6816_ted = 0x10,
  MC6816_xgab = 0x11,
  MC6816_xgde = 0x12,
  MC6816_aba = 0x13,
  MC6816_adca = 0x14,
  MC6816_adcb = 0x15,
  MC6816_adcd = 0x16,
  MC6816_adce = 0x17,
  MC6816_adda = 0x18,
  MC6816_addb = 0x19,
  MC6816_addd = 0x1A,
  MC6816_adde = 0x1B,
  MC6816_ade = 0x1C,
  MC6816_sba = 0x1D,
  MC6816_sbca = 0x1E,
  MC6816_sbcb = 0x1F,
  MC6816_sbcd = 0x20,
  MC6816_sbce = 0x21,
  MC6816_sde = 0x22,
  MC6816_suba = 0x23,
  MC6816_subb = 0x24,
  MC6816_subd = 0x25,
  MC6816_sube = 0x26,
  MC6816_daa = 0x27,
  MC6816_sxt = 0x28,
  MC6816_cba = 0x29,
  MC6816_cmpa = 0x2A,
  MC6816_cmpb = 0x2B,
  MC6816_cpd = 0x2C,
  MC6816_cpe = 0x2D,
  MC6816_tst = 0x2E,
  MC6816_tsta = 0x2F,
  MC6816_tstb = 0x30,
  MC6816_tstd = 0x31,
  MC6816_tste = 0x32,
  MC6816_tstw = 0x33,
  MC6816_ediv = 0x34,
  MC6816_edivs = 0x35,
  MC6816_emul = 0x36,
  MC6816_emuls = 0x37,
  MC6816_fdiv = 0x38,
  MC6816_fmuls = 0x39,
  MC6816_idiv = 0x3A,
  MC6816_mul = 0x3B,
  MC6816_dec = 0x3C,
  MC6816_deca = 0x3D,
  MC6816_decb = 0x3E,
  MC6816_decw = 0x3F,
  MC6816_inc = 0x40,
  MC6816_inca = 0x41,
  MC6816_incb = 0x42,
  MC6816_incw = 0x43,
  MC6816_clr = 0x44,
  MC6816_clra = 0x45,
  MC6816_clrb = 0x46,
  MC6816_clrd = 0x47,
  MC6816_clre = 0x48,
  MC6816_clrw = 0x49,
  MC6816_com = 0x4A,
  MC6816_coma = 0x4B,
  MC6816_comb = 0x4C,
  MC6816_comd = 0x4D,
  MC6816_come = 0x4E,
  MC6816_comw = 0x4F,
  MC6816_neg = 0x50,
  MC6816_nega = 0x51,
  MC6816_negb = 0x52,
  MC6816_negd = 0x53,
  MC6816_nege = 0x54,
  MC6816_negw = 0x55,
  MC6816_anda = 0x56,
  MC6816_andb = 0x57,
  MC6816_andd = 0x58,
  MC6816_ande = 0x59,
  MC6816_eora = 0x5A,
  MC6816_eorb = 0x5B,
  MC6816_eord = 0x5C,
  MC6816_eore = 0x5D,
  MC6816_oraa = 0x5E,
  MC6816_orab = 0x5F,
  MC6816_ord = 0x60,
  MC6816_ore = 0x61,
  MC6816_bita = 0x62,
  MC6816_bitb = 0x63,
  MC6816_bclr = 0x64,
  MC6816_bclrw = 0x65,
  MC6816_bset = 0x66,
  MC6816_bsetw = 0x67,
  MC6816_lsr = 0x68,
  MC6816_lsra = 0x69,
  MC6816_lsrb = 0x6A,
  MC6816_lsrd = 0x6B,
  MC6816_lsre = 0x6C,
  MC6816_lsrw = 0x6D,
  MC6816_asl = 0x6E,
  MC6816_asla = 0x6F,
  MC6816_aslb = 0x70,
  MC6816_asld = 0x71,
  MC6816_asle = 0x72,
  MC6816_aslw = 0x73,
  MC6816_asr = 0x74,
  MC6816_asra = 0x75,
  MC6816_asrb = 0x76,
  MC6816_asrd = 0x77,
  MC6816_asre = 0x78,
  MC6816_asrw = 0x79,
  MC6816_rol = 0x7A,
  MC6816_rola = 0x7B,
  MC6816_rolb = 0x7C,
  MC6816_rold = 0x7D,
  MC6816_role = 0x7E,
  MC6816_rolw = 0x7F,
  MC6816_ror = 0x80,
  MC6816_rora = 0x81,
  MC6816_rorb = 0x82,
  MC6816_rord = 0x83,
  MC6816_rore = 0x84,
  MC6816_rorw = 0x85,
  MC6816_bra = 0x86,
  MC6816_brn = 0x87,
  MC6816_bcc = 0x88,
  MC6816_bcs = 0x89,
  MC6816_beq = 0x8A,
  MC6816_bmi = 0x8B,
  MC6816_bne = 0x8C,
  MC6816_bpl = 0x8D,
  MC6816_bvc = 0x8E,
  MC6816_bvs = 0x8F,
  MC6816_bhi = 0x90,
  MC6816_bls = 0x91,
  MC6816_bge = 0x92,
  MC6816_bgt = 0x93,
  MC6816_ble = 0x94,
  MC6816_blt = 0x95,
  MC6816_lbra = 0x96,
  MC6816_lbrn = 0x97,
  MC6816_lbcc = 0x98,
  MC6816_lbcs = 0x99,
  MC6816_lbeq = 0x9A,
  MC6816_lbev = 0x9B,
  MC6816_lbmi = 0x9C,
  MC6816_lbmv = 0x9D,
  MC6816_lbne = 0x9E,
  MC6816_lbpl = 0x9F,
  MC6816_lbvc = 0xA0,
  MC6816_lbvs = 0xA1,
  MC6816_lbhi = 0xA2,
  MC6816_lbls = 0xA3,
  MC6816_lbge = 0xA4,
  MC6816_lbgt = 0xA5,
  MC6816_lble = 0xA6,
  MC6816_lblt = 0xA7,
  MC6816_brclr = 0xA8,
  MC6816_brset = 0xA9,
  MC6816_jmp = 0xAA,
  MC6816_bsr = 0xAB,
  MC6816_jsr = 0xAC,
  MC6816_lbsr = 0xAD,
  MC6816_rts = 0xAE,
  MC6816_rti = 0xAF,
  MC6816_swi = 0xB0,
  MC6816_abx = 0xB1,
  MC6816_aby = 0xB2,
  MC6816_abz = 0xB3,
  MC6816_adx = 0xB4,
  MC6816_ady = 0xB5,
  MC6816_adz = 0xB6,
  MC6816_aex = 0xB7,
  MC6816_aey = 0xB8,
  MC6816_aez = 0xB9,
  MC6816_aix = 0xBA,
  MC6816_aiy = 0xBB,
  MC6816_aiz = 0xBC,
  MC6816_cpx = 0xBD,
  MC6816_cpy = 0xBE,
  MC6816_cpz = 0xBF,
  MC6816_ldx = 0xC0,
  MC6816_ldy = 0xC1,
  MC6816_ldz = 0xC2,
  MC6816_stx = 0xC3,
  MC6816_sty = 0xC4,
  MC6816_stz = 0xC5,
  MC6816_tsx = 0xC6,
  MC6816_tsy = 0xC7,
  MC6816_tsz = 0xC8,
  MC6816_txs = 0xC9,
  MC6816_txy = 0xCA,
  MC6816_txz = 0xCB,
  MC6816_tys = 0xCC,
  MC6816_tyx = 0xCD,
  MC6816_tyz = 0xCE,
  MC6816_tzs = 0xCF,
  MC6816_tzx = 0xD0,
  MC6816_tzy = 0xD1,
  MC6816_xgdx = 0xD2,
  MC6816_xgdy = 0xD3,
  MC6816_xgdz = 0xD4,
  MC6816_xgex = 0xD5,
  MC6816_xgey = 0xD6,
  MC6816_xgez = 0xD7,
  MC6816_tbek = 0xD8,
  MC6816_tbsk = 0xD9,
  MC6816_tbxk = 0xDA,
  MC6816_tbyk = 0xDB,
  MC6816_tbzk = 0xDC,
  MC6816_tekb = 0xDD,
  MC6816_tskb = 0xDE,
  MC6816_txkb = 0xDF,
  MC6816_tykb = 0xE0,
  MC6816_tzkb = 0xE1,
  MC6816_ais = 0xE2,
  MC6816_cps = 0xE3,
  MC6816_lds = 0xE4,
  MC6816_sts = 0xE5,
  MC6816_psha = 0xE6,
  MC6816_pshb = 0xE7,
  MC6816_pshm = 0xE8,
  MC6816_pula = 0xE9,
  MC6816_pulb = 0xEA,
  MC6816_pulm = 0xEB,
  MC6816_andp = 0xEC,
  MC6816_orp = 0xED,
  MC6816_tap = 0xEE,
  MC6816_tdp = 0xEF,
  MC6816_tpa = 0xF0,
  MC6816_tpd = 0xF1,
  MC6816_ace = 0xF2,
  MC6816_aced = 0xF3,
  MC6816_aslm = 0xF4,
  MC6816_asrm = 0xF5,
  MC6816_clrm = 0xF6,
  MC6816_ldhi = 0xF7,
  MC6816_mac = 0xF8,
  MC6816_pshmac = 0xF9,
  MC6816_pulmac = 0xFA,
  MC6816_rmac = 0xFB,
  MC6816_tdmsk = 0xFC,
  MC6816_tedm = 0xFD,
  MC6816_tem = 0xFE,
  MC6816_tmer = 0xFF,
  MC6816_tmet = 0x100,
  MC6816_tmxed = 0x101,
  MC6816_lpstop = 0x102,
  MC6816_wai = 0x103,
  MC6816_bgnd = 0x104,
  MC6816_nop = 0x105,
  MC6816_last = 0x106,
};

/* 1771 */
enum _6D0139603382ADA21D037DA823D2B357 : unsigned __int32
{
  I960_null = 0x0,
  I960_addc = 0x1,
  I960_addi = 0x2,
  I960_addo = 0x3,
  I960_alterbit = 0x4,
  I960_and = 0x5,
  I960_andnot = 0x6,
  I960_atadd = 0x7,
  I960_atmod = 0x8,
  I960_b = 0x9,
  I960_bal = 0xA,
  I960_balx = 0xB,
  I960_bbc = 0xC,
  I960_bbs = 0xD,
  I960_bno = 0xE,
  I960_bg = 0xF,
  I960_be = 0x10,
  I960_bge = 0x11,
  I960_bl = 0x12,
  I960_bne = 0x13,
  I960_ble = 0x14,
  I960_bo = 0x15,
  I960_bx = 0x16,
  I960_call = 0x17,
  I960_calls = 0x18,
  I960_callx = 0x19,
  I960_chkbit = 0x1A,
  I960_clrbit = 0x1B,
  I960_cmpdeci = 0x1C,
  I960_cmpdeco = 0x1D,
  I960_cmpi = 0x1E,
  I960_cmpibno = 0x1F,
  I960_cmpibg = 0x20,
  I960_cmpibe = 0x21,
  I960_cmpibge = 0x22,
  I960_cmpibl = 0x23,
  I960_cmpibne = 0x24,
  I960_cmpible = 0x25,
  I960_cmpibo = 0x26,
  I960_cmpinci = 0x27,
  I960_cmpinco = 0x28,
  I960_cmpo = 0x29,
  I960_cmpobg = 0x2A,
  I960_cmpobe = 0x2B,
  I960_cmpobge = 0x2C,
  I960_cmpobl = 0x2D,
  I960_cmpobne = 0x2E,
  I960_cmpoble = 0x2F,
  I960_concmpi = 0x30,
  I960_concmpo = 0x31,
  I960_divi = 0x32,
  I960_divo = 0x33,
  I960_ediv = 0x34,
  I960_emul = 0x35,
  I960_eshro = 0x36,
  I960_extract = 0x37,
  I960_faultno = 0x38,
  I960_faultg = 0x39,
  I960_faulte = 0x3A,
  I960_faultge = 0x3B,
  I960_faultl = 0x3C,
  I960_faultne = 0x3D,
  I960_faultle = 0x3E,
  I960_faulto = 0x3F,
  I960_flushreg = 0x40,
  I960_fmark = 0x41,
  I960_ld = 0x42,
  I960_lda = 0x43,
  I960_ldib = 0x44,
  I960_ldis = 0x45,
  I960_ldl = 0x46,
  I960_ldob = 0x47,
  I960_ldos = 0x48,
  I960_ldq = 0x49,
  I960_ldt = 0x4A,
  I960_mark = 0x4B,
  I960_modac = 0x4C,
  I960_modi = 0x4D,
  I960_modify = 0x4E,
  I960_modpc = 0x4F,
  I960_modtc = 0x50,
  I960_mov = 0x51,
  I960_movl = 0x52,
  I960_movq = 0x53,
  I960_movt = 0x54,
  I960_muli = 0x55,
  I960_mulo = 0x56,
  I960_nand = 0x57,
  I960_nor = 0x58,
  I960_not = 0x59,
  I960_notand = 0x5A,
  I960_notbit = 0x5B,
  I960_notor = 0x5C,
  I960_or = 0x5D,
  I960_ornot = 0x5E,
  I960_remi = 0x5F,
  I960_remo = 0x60,
  I960_ret = 0x61,
  I960_rotate = 0x62,
  I960_scanbit = 0x63,
  I960_scanbyte = 0x64,
  I960_setbit = 0x65,
  I960_shli = 0x66,
  I960_shlo = 0x67,
  I960_shrdi = 0x68,
  I960_shri = 0x69,
  I960_shro = 0x6A,
  I960_spanbit = 0x6B,
  I960_st = 0x6C,
  I960_stib = 0x6D,
  I960_stis = 0x6E,
  I960_stl = 0x6F,
  I960_stob = 0x70,
  I960_stos = 0x71,
  I960_stq = 0x72,
  I960_stt = 0x73,
  I960_subc = 0x74,
  I960_subi = 0x75,
  I960_subo = 0x76,
  I960_syncf = 0x77,
  I960_testno = 0x78,
  I960_testg = 0x79,
  I960_teste = 0x7A,
  I960_testge = 0x7B,
  I960_testl = 0x7C,
  I960_testne = 0x7D,
  I960_testle = 0x7E,
  I960_testo = 0x7F,
  I960_xnor = 0x80,
  I960_xor = 0x81,
  I960_sdma = 0x82,
  I960_sysctl = 0x83,
  I960_udma = 0x84,
  I960_dcinva = 0x85,
  I960_cmpob = 0x86,
  I960_cmpib = 0x87,
  I960_cmpos = 0x88,
  I960_cmpis = 0x89,
  I960_bswap = 0x8A,
  I960_intdis = 0x8B,
  I960_inten = 0x8C,
  I960_synmov = 0x8D,
  I960_synmovl = 0x8E,
  I960_synmovq = 0x8F,
  I960_cmpstr = 0x90,
  I960_movqstr = 0x91,
  I960_movstr = 0x92,
  I960_inspacc = 0x93,
  I960_ldphy = 0x94,
  I960_synld = 0x95,
  I960_fill = 0x96,
  I960_daddc = 0x97,
  I960_dsubc = 0x98,
  I960_dmovt = 0x99,
  I960_condrec = 0x9A,
  I960_receive = 0x9B,
  I960_intctl = 0x9C,
  I960_icctl = 0x9D,
  I960_dcctl = 0x9E,
  I960_halt = 0x9F,
  I960_send = 0xA0,
  I960_sendserv = 0xA1,
  I960_resumprcs = 0xA2,
  I960_schedprcs = 0xA3,
  I960_saveprcs = 0xA4,
  I960_condwait = 0xA5,
  I960_wait = 0xA6,
  I960_signal = 0xA7,
  I960_ldtime = 0xA8,
  I960_addono = 0xA9,
  I960_addino = 0xAA,
  I960_subono = 0xAB,
  I960_subino = 0xAC,
  I960_selno = 0xAD,
  I960_addog = 0xAE,
  I960_addig = 0xAF,
  I960_subog = 0xB0,
  I960_subig = 0xB1,
  I960_selg = 0xB2,
  I960_addoe = 0xB3,
  I960_addie = 0xB4,
  I960_suboe = 0xB5,
  I960_subie = 0xB6,
  I960_sele = 0xB7,
  I960_addoge = 0xB8,
  I960_addige = 0xB9,
  I960_suboge = 0xBA,
  I960_subige = 0xBB,
  I960_selge = 0xBC,
  I960_addol = 0xBD,
  I960_addil = 0xBE,
  I960_subol = 0xBF,
  I960_subil = 0xC0,
  I960_sell = 0xC1,
  I960_addone = 0xC2,
  I960_addine = 0xC3,
  I960_subone = 0xC4,
  I960_subine = 0xC5,
  I960_selne = 0xC6,
  I960_addole = 0xC7,
  I960_addile = 0xC8,
  I960_subole = 0xC9,
  I960_subile = 0xCA,
  I960_selle = 0xCB,
  I960_addoo = 0xCC,
  I960_addio = 0xCD,
  I960_suboo = 0xCE,
  I960_subio = 0xCF,
  I960_selo = 0xD0,
  I960_faddr = 0xD1,
  I960_fp_first = 0xD1,
  I960_faddrl = 0xD2,
  I960_fatanr = 0xD3,
  I960_fatanrl = 0xD4,
  I960_fclassr = 0xD5,
  I960_fclassrl = 0xD6,
  I960_fcmpor = 0xD7,
  I960_fcmporl = 0xD8,
  I960_fcmpr = 0xD9,
  I960_fcmprl = 0xDA,
  I960_fcosr = 0xDB,
  I960_fcosrl = 0xDC,
  I960_fcpyrsre = 0xDD,
  I960_fcpysre = 0xDE,
  I960_fcvtilr = 0xDF,
  I960_fcvtir = 0xE0,
  I960_fcvtri = 0xE1,
  I960_fcvtril = 0xE2,
  I960_fcvtzri = 0xE3,
  I960_fcvtzril = 0xE4,
  I960_fdivr = 0xE5,
  I960_fdivrl = 0xE6,
  I960_fexpr = 0xE7,
  I960_fexprl = 0xE8,
  I960_flogbnr = 0xE9,
  I960_flogbnrl = 0xEA,
  I960_flogepr = 0xEB,
  I960_flogeprl = 0xEC,
  I960_flogr = 0xED,
  I960_flogrl = 0xEE,
  I960_fmovr = 0xEF,
  I960_fmovre = 0xF0,
  I960_fmovrl = 0xF1,
  I960_fmulr = 0xF2,
  I960_fmulrl = 0xF3,
  I960_fremr = 0xF4,
  I960_fremrl = 0xF5,
  I960_froundr = 0xF6,
  I960_froundrl = 0xF7,
  I960_fscaler = 0xF8,
  I960_fscalerl = 0xF9,
  I960_fsinr = 0xFA,
  I960_fsinrl = 0xFB,
  I960_fsqrtr = 0xFC,
  I960_fsqrtrl = 0xFD,
  I960_fsubr = 0xFE,
  I960_fsubrl = 0xFF,
  I960_ftanr = 0x100,
  I960_ftanrl = 0x101,
  I960_fp_last = 0x101,
  I960_last = 0x102,
};

/* 1772 */
enum _8F08DA40ECF14D480DBE0EC84D31330E : unsigned __int32
{
  F2MC_null = 0x0,
  F2MC_mov = 0x1,
  F2MC_movn = 0x2,
  F2MC_movx = 0x3,
  F2MC_xch = 0x4,
  F2MC_movw = 0x5,
  F2MC_xchw = 0x6,
  F2MC_movl = 0x7,
  F2MC_add = 0x8,
  F2MC_addc1 = 0x9,
  F2MC_addc2 = 0xA,
  F2MC_adddc = 0xB,
  F2MC_sub = 0xC,
  F2MC_subc1 = 0xD,
  F2MC_subc2 = 0xE,
  F2MC_subdc = 0xF,
  F2MC_addw1 = 0x10,
  F2MC_addw2 = 0x11,
  F2MC_addcw = 0x12,
  F2MC_subw1 = 0x13,
  F2MC_subw2 = 0x14,
  F2MC_subcw = 0x15,
  F2MC_addl = 0x16,
  F2MC_subl = 0x17,
  F2MC_inc = 0x18,
  F2MC_dec = 0x19,
  F2MC_incw = 0x1A,
  F2MC_decw = 0x1B,
  F2MC_incl = 0x1C,
  F2MC_decl = 0x1D,
  F2MC_cmp1 = 0x1E,
  F2MC_cmp2 = 0x1F,
  F2MC_cmpw1 = 0x20,
  F2MC_cmpw2 = 0x21,
  F2MC_cmpl = 0x22,
  F2MC_divu1 = 0x23,
  F2MC_divu2 = 0x24,
  F2MC_divuw = 0x25,
  F2MC_mulu1 = 0x26,
  F2MC_mulu2 = 0x27,
  F2MC_muluw1 = 0x28,
  F2MC_muluw2 = 0x29,
  F2MC_div1 = 0x2A,
  F2MC_div2 = 0x2B,
  F2MC_divw = 0x2C,
  F2MC_mul1 = 0x2D,
  F2MC_mul2 = 0x2E,
  F2MC_mulw1 = 0x2F,
  F2MC_mulw2 = 0x30,
  F2MC_and = 0x31,
  F2MC_or = 0x32,
  F2MC_xor = 0x33,
  F2MC_not = 0x34,
  F2MC_andw1 = 0x35,
  F2MC_andw2 = 0x36,
  F2MC_orw1 = 0x37,
  F2MC_orw2 = 0x38,
  F2MC_xorw1 = 0x39,
  F2MC_xorw2 = 0x3A,
  F2MC_notw = 0x3B,
  F2MC_andl = 0x3C,
  F2MC_orl = 0x3D,
  F2MC_xorl = 0x3E,
  F2MC_neg = 0x3F,
  F2MC_negw = 0x40,
  F2MC_nrml = 0x41,
  F2MC_rorc = 0x42,
  F2MC_rolc = 0x43,
  F2MC_asr = 0x44,
  F2MC_lsr = 0x45,
  F2MC_lsl = 0x46,
  F2MC_asrw1 = 0x47,
  F2MC_asrw2 = 0x48,
  F2MC_lsrw1 = 0x49,
  F2MC_lsrw2 = 0x4A,
  F2MC_lslw1 = 0x4B,
  F2MC_lslw2 = 0x4C,
  F2MC_asrl = 0x4D,
  F2MC_lsrl = 0x4E,
  F2MC_lsll = 0x4F,
  F2MC_bz = 0x50,
  F2MC_bnz = 0x51,
  F2MC_bc = 0x52,
  F2MC_bnc = 0x53,
  F2MC_bn = 0x54,
  F2MC_bp = 0x55,
  F2MC_bv = 0x56,
  F2MC_bnv = 0x57,
  F2MC_bt = 0x58,
  F2MC_bnt = 0x59,
  F2MC_blt = 0x5A,
  F2MC_bge = 0x5B,
  F2MC_ble = 0x5C,
  F2MC_bgt = 0x5D,
  F2MC_bls = 0x5E,
  F2MC_bhi = 0x5F,
  F2MC_bra = 0x60,
  F2MC_jmp = 0x61,
  F2MC_jmpp = 0x62,
  F2MC_call = 0x63,
  F2MC_callv = 0x64,
  F2MC_callp = 0x65,
  F2MC_cbne = 0x66,
  F2MC_cwbne = 0x67,
  F2MC_dbnz = 0x68,
  F2MC_dwbnz = 0x69,
  F2MC_int = 0x6A,
  F2MC_intp = 0x6B,
  F2MC_int9 = 0x6C,
  F2MC_reti = 0x6D,
  F2MC_link = 0x6E,
  F2MC_unlink = 0x6F,
  F2MC_ret = 0x70,
  F2MC_retp = 0x71,
  F2MC_pushw = 0x72,
  F2MC_popw = 0x73,
  F2MC_jctx = 0x74,
  F2MC_movea = 0x75,
  F2MC_addsp = 0x76,
  F2MC_nop = 0x77,
  F2MC_adb = 0x78,
  F2MC_dtb = 0x79,
  F2MC_pcb = 0x7A,
  F2MC_spb = 0x7B,
  F2MC_ncc = 0x7C,
  F2MC_cmr = 0x7D,
  F2MC_movb = 0x7E,
  F2MC_setb = 0x7F,
  F2MC_clrb = 0x80,
  F2MC_bbc = 0x81,
  F2MC_bbs = 0x82,
  F2MC_sbbs = 0x83,
  F2MC_wbts = 0x84,
  F2MC_wbtc = 0x85,
  F2MC_swap = 0x86,
  F2MC_swapw = 0x87,
  F2MC_ext = 0x88,
  F2MC_extw = 0x89,
  F2MC_zext = 0x8A,
  F2MC_zextw = 0x8B,
  F2MC_movsi = 0x8C,
  F2MC_movsd = 0x8D,
  F2MC_sceqi = 0x8E,
  F2MC_sceqd = 0x8F,
  F2MC_filsi = 0x90,
  F2MC_movswi = 0x91,
  F2MC_movswd = 0x92,
  F2MC_scweqi = 0x93,
  F2MC_scweqd = 0x94,
  F2MC_filswi = 0x95,
  F2MC_bz16 = 0x96,
  F2MC_bnz16 = 0x97,
  F2MC_bc16 = 0x98,
  F2MC_bnc16 = 0x99,
  F2MC_bn16 = 0x9A,
  F2MC_bp16 = 0x9B,
  F2MC_bv16 = 0x9C,
  F2MC_bnv16 = 0x9D,
  F2MC_bt16 = 0x9E,
  F2MC_bnt16 = 0x9F,
  F2MC_blt16 = 0xA0,
  F2MC_bge16 = 0xA1,
  F2MC_ble16 = 0xA2,
  F2MC_bgt16 = 0xA3,
  F2MC_bls16 = 0xA4,
  F2MC_bhi16 = 0xA5,
  F2MC_cbne16 = 0xA6,
  F2MC_cwbne16 = 0xA7,
  F2MC_dbnz16 = 0xA8,
  F2MC_dwbnz16 = 0xA9,
  F2MC_bbc16 = 0xAA,
  F2MC_bbs16 = 0xAB,
  F2MC_sbbs16 = 0xAC,
  F2MC_last = 0xAD,
};

/* 1773 */
enum _5D98514AD4CB29C17D57D9341C7849E3 : unsigned __int32
{
  TMS320C3X_null = 0x0,
  TMS320C3X_ABSF = 0x1,
  TMS320C3X_ABSI = 0x2,
  TMS320C3X_ADDC = 0x3,
  TMS320C3X_ADDF = 0x4,
  TMS320C3X_ADDI = 0x5,
  TMS320C3X_AND = 0x6,
  TMS320C3X_ANDN = 0x7,
  TMS320C3X_ASH = 0x8,
  TMS320C3X_CMPF = 0x9,
  TMS320C3X_CMPI = 0xA,
  TMS320C3X_FIX = 0xB,
  TMS320C3X_FLOAT = 0xC,
  TMS320C3X_IDLE = 0xD,
  TMS320C3X_IDLE2 = 0xE,
  TMS320C3X_LDE = 0xF,
  TMS320C3X_LDF = 0x10,
  TMS320C3X_LDFI = 0x11,
  TMS320C3X_LDI = 0x12,
  TMS320C3X_LDII = 0x13,
  TMS320C3X_LDM = 0x14,
  TMS320C3X_LSH = 0x15,
  TMS320C3X_MPYF = 0x16,
  TMS320C3X_MPYI = 0x17,
  TMS320C3X_NEGB = 0x18,
  TMS320C3X_NEGF = 0x19,
  TMS320C3X_NEGI = 0x1A,
  TMS320C3X_NOP = 0x1B,
  TMS320C3X_NORM = 0x1C,
  TMS320C3X_NOT = 0x1D,
  TMS320C3X_POP = 0x1E,
  TMS320C3X_POPF = 0x1F,
  TMS320C3X_PUSH = 0x20,
  TMS320C3X_PUSHF = 0x21,
  TMS320C3X_OR = 0x22,
  TMS320C3X_LOPOWER = 0x23,
  TMS320C3X_MAXSPEED = 0x24,
  TMS320C3X_RND = 0x25,
  TMS320C3X_ROL = 0x26,
  TMS320C3X_ROLC = 0x27,
  TMS320C3X_ROR = 0x28,
  TMS320C3X_RORC = 0x29,
  TMS320C3X_RPTS = 0x2A,
  TMS320C3X_STF = 0x2B,
  TMS320C3X_STFI = 0x2C,
  TMS320C3X_STI = 0x2D,
  TMS320C3X_STII = 0x2E,
  TMS320C3X_SIGI = 0x2F,
  TMS320C3X_SUBB = 0x30,
  TMS320C3X_SUBC = 0x31,
  TMS320C3X_SUBF = 0x32,
  TMS320C3X_SUBI = 0x33,
  TMS320C3X_SUBRB = 0x34,
  TMS320C3X_SUBRF = 0x35,
  TMS320C3X_SUBRI = 0x36,
  TMS320C3X_TSTB = 0x37,
  TMS320C3X_XOR = 0x38,
  TMS320C3X_IACK = 0x39,
  TMS320C3X_ADDC3 = 0x3A,
  TMS320C3X_ADDF3 = 0x3B,
  TMS320C3X_ADDI3 = 0x3C,
  TMS320C3X_AND3 = 0x3D,
  TMS320C3X_ANDN3 = 0x3E,
  TMS320C3X_ASH3 = 0x3F,
  TMS320C3X_CMPF3 = 0x40,
  TMS320C3X_CMPI3 = 0x41,
  TMS320C3X_LSH3 = 0x42,
  TMS320C3X_MPYF3 = 0x43,
  TMS320C3X_MPYI3 = 0x44,
  TMS320C3X_OR3 = 0x45,
  TMS320C3X_SUBB3 = 0x46,
  TMS320C3X_SUBF3 = 0x47,
  TMS320C3X_SUBI3 = 0x48,
  TMS320C3X_TSTB3 = 0x49,
  TMS320C3X_XOR3 = 0x4A,
  TMS320C3X_LDFcond = 0x4B,
  TMS320C3X_LDIcond = 0x4C,
  TMS320C3X_BR = 0x4D,
  TMS320C3X_BRD = 0x4E,
  TMS320C3X_CALL = 0x4F,
  TMS320C3X_RPTB = 0x50,
  TMS320C3X_SWI = 0x51,
  TMS320C3X_Bcond = 0x52,
  TMS320C3X_DBcond = 0x53,
  TMS320C3X_CALLcond = 0x54,
  TMS320C3X_TRAPcond = 0x55,
  TMS320C3X_RETIcond = 0x56,
  TMS320C3X_RETScond = 0x57,
  TMS320C3X_RETIU = 0x58,
  TMS320C3X_RETSU = 0x59,
  TMS320C3X_NONE = 0x5A,
  TMS320C3X_MV_IDX = 0x5B,
  TMS320C3X_last = 0x5C,
};

/* 1774 */
enum _E0BD59A46085D913189C6FE64651B19C : unsigned __int32
{
  TMS320C54_null = 0x0,
  TMS320C54_add1 = 0x1,
  TMS320C54_add2 = 0x2,
  TMS320C54_add3 = 0x3,
  TMS320C54_addc = 0x4,
  TMS320C54_addm = 0x5,
  TMS320C54_adds = 0x6,
  TMS320C54_sub1 = 0x7,
  TMS320C54_sub2 = 0x8,
  TMS320C54_sub3 = 0x9,
  TMS320C54_subb = 0xA,
  TMS320C54_subc = 0xB,
  TMS320C54_subs = 0xC,
  TMS320C54_mpy2 = 0xD,
  TMS320C54_mpy3 = 0xE,
  TMS320C54_mpyr2 = 0xF,
  TMS320C54_mpya = 0x10,
  TMS320C54_mpyu = 0x11,
  TMS320C54_squr = 0x12,
  TMS320C54_mac2 = 0x13,
  TMS320C54_mac3 = 0x14,
  TMS320C54_macr2 = 0x15,
  TMS320C54_macr3 = 0x16,
  TMS320C54_maca1 = 0x17,
  TMS320C54_maca2 = 0x18,
  TMS320C54_maca3 = 0x19,
  TMS320C54_macar1 = 0x1A,
  TMS320C54_macar2 = 0x1B,
  TMS320C54_macar3 = 0x1C,
  TMS320C54_macd = 0x1D,
  TMS320C54_macp = 0x1E,
  TMS320C54_macsu = 0x1F,
  TMS320C54_mas2 = 0x20,
  TMS320C54_mas3 = 0x21,
  TMS320C54_masr2 = 0x22,
  TMS320C54_masr3 = 0x23,
  TMS320C54_masa1 = 0x24,
  TMS320C54_masa2 = 0x25,
  TMS320C54_masa3 = 0x26,
  TMS320C54_masar1 = 0x27,
  TMS320C54_masar2 = 0x28,
  TMS320C54_masar3 = 0x29,
  TMS320C54_squra = 0x2A,
  TMS320C54_squrs = 0x2B,
  TMS320C54_dadd2 = 0x2C,
  TMS320C54_dadd3 = 0x2D,
  TMS320C54_dadst = 0x2E,
  TMS320C54_drsub = 0x2F,
  TMS320C54_dsadt = 0x30,
  TMS320C54_dsub = 0x31,
  TMS320C54_dsubt = 0x32,
  TMS320C54_abdst = 0x33,
  TMS320C54_abs1 = 0x34,
  TMS320C54_abs2 = 0x35,
  TMS320C54_cmpl1 = 0x36,
  TMS320C54_cmpl2 = 0x37,
  TMS320C54_delay = 0x38,
  TMS320C54_exp = 0x39,
  TMS320C54_firs = 0x3A,
  TMS320C54_lms = 0x3B,
  TMS320C54_max = 0x3C,
  TMS320C54_min = 0x3D,
  TMS320C54_neg1 = 0x3E,
  TMS320C54_neg2 = 0x3F,
  TMS320C54_norm1 = 0x40,
  TMS320C54_norm2 = 0x41,
  TMS320C54_poly = 0x42,
  TMS320C54_rnd1 = 0x43,
  TMS320C54_rnd2 = 0x44,
  TMS320C54_sat = 0x45,
  TMS320C54_sqdst = 0x46,
  TMS320C54_and1 = 0x47,
  TMS320C54_and2 = 0x48,
  TMS320C54_and3 = 0x49,
  TMS320C54_andm = 0x4A,
  TMS320C54_or1 = 0x4B,
  TMS320C54_or2 = 0x4C,
  TMS320C54_or3 = 0x4D,
  TMS320C54_orm = 0x4E,
  TMS320C54_xor1 = 0x4F,
  TMS320C54_xor2 = 0x50,
  TMS320C54_xor3 = 0x51,
  TMS320C54_xorm = 0x52,
  TMS320C54_rol = 0x53,
  TMS320C54_roltc = 0x54,
  TMS320C54_ror = 0x55,
  TMS320C54_sfta2 = 0x56,
  TMS320C54_sfta3 = 0x57,
  TMS320C54_sftc = 0x58,
  TMS320C54_sftl2 = 0x59,
  TMS320C54_sftl3 = 0x5A,
  TMS320C54_bit = 0x5B,
  TMS320C54_bitf = 0x5C,
  TMS320C54_bitt = 0x5D,
  TMS320C54_cmpm = 0x5E,
  TMS320C54_cmpr = 0x5F,
  TMS320C54_b = 0x60,
  TMS320C54_bd = 0x61,
  TMS320C54_bacc = 0x62,
  TMS320C54_baccd = 0x63,
  TMS320C54_banz = 0x64,
  TMS320C54_banzd = 0x65,
  TMS320C54_bc2 = 0x66,
  TMS320C54_bc3 = 0x67,
  TMS320C54_bcd2 = 0x68,
  TMS320C54_bcd3 = 0x69,
  TMS320C54_fb = 0x6A,
  TMS320C54_fbd = 0x6B,
  TMS320C54_fbacc = 0x6C,
  TMS320C54_fbaccd = 0x6D,
  TMS320C54_cala = 0x6E,
  TMS320C54_calad = 0x6F,
  TMS320C54_call = 0x70,
  TMS320C54_calld = 0x71,
  TMS320C54_cc2 = 0x72,
  TMS320C54_cc3 = 0x73,
  TMS320C54_ccd2 = 0x74,
  TMS320C54_ccd3 = 0x75,
  TMS320C54_fcala = 0x76,
  TMS320C54_fcalad = 0x77,
  TMS320C54_fcall = 0x78,
  TMS320C54_fcalld = 0x79,
  TMS320C54_intr = 0x7A,
  TMS320C54_trap = 0x7B,
  TMS320C54_fret = 0x7C,
  TMS320C54_fretd = 0x7D,
  TMS320C54_frete = 0x7E,
  TMS320C54_freted = 0x7F,
  TMS320C54_rc1 = 0x80,
  TMS320C54_rc2 = 0x81,
  TMS320C54_rc3 = 0x82,
  TMS320C54_rcd1 = 0x83,
  TMS320C54_rcd2 = 0x84,
  TMS320C54_rcd3 = 0x85,
  TMS320C54_ret = 0x86,
  TMS320C54_retd = 0x87,
  TMS320C54_rete = 0x88,
  TMS320C54_reted = 0x89,
  TMS320C54_retf = 0x8A,
  TMS320C54_retfd = 0x8B,
  TMS320C54_rpt = 0x8C,
  TMS320C54_rptb = 0x8D,
  TMS320C54_rptbd = 0x8E,
  TMS320C54_rptz = 0x8F,
  TMS320C54_frame = 0x90,
  TMS320C54_popd = 0x91,
  TMS320C54_popm = 0x92,
  TMS320C54_pshd = 0x93,
  TMS320C54_pshm = 0x94,
  TMS320C54_idle = 0x95,
  TMS320C54_mar = 0x96,
  TMS320C54_nop = 0x97,
  TMS320C54_reset = 0x98,
  TMS320C54_rsbx1 = 0x99,
  TMS320C54_rsbx2 = 0x9A,
  TMS320C54_ssbx1 = 0x9B,
  TMS320C54_ssbx2 = 0x9C,
  TMS320C54_xc2 = 0x9D,
  TMS320C54_xc3 = 0x9E,
  TMS320C54_dld = 0x9F,
  TMS320C54_ld1 = 0xA0,
  TMS320C54_ld2 = 0xA1,
  TMS320C54_ld3 = 0xA2,
  TMS320C54_ldm = 0xA3,
  TMS320C54_ldr = 0xA4,
  TMS320C54_ldu = 0xA5,
  TMS320C54_ltd = 0xA6,
  TMS320C54_dst = 0xA7,
  TMS320C54_st = 0xA8,
  TMS320C54_sth2 = 0xA9,
  TMS320C54_sth3 = 0xAA,
  TMS320C54_stl2 = 0xAB,
  TMS320C54_stl3 = 0xAC,
  TMS320C54_stlm = 0xAD,
  TMS320C54_stm = 0xAE,
  TMS320C54_cmps = 0xAF,
  TMS320C54_saccd = 0xB0,
  TMS320C54_srccd = 0xB1,
  TMS320C54_strcd = 0xB2,
  TMS320C54_st_ld = 0xB3,
  TMS320C54_ld_mac = 0xB4,
  TMS320C54_ld_macr = 0xB5,
  TMS320C54_ld_mas = 0xB6,
  TMS320C54_ld_masr = 0xB7,
  TMS320C54_st_add = 0xB8,
  TMS320C54_st_sub = 0xB9,
  TMS320C54_st_mac = 0xBA,
  TMS320C54_st_macr = 0xBB,
  TMS320C54_st_mas = 0xBC,
  TMS320C54_st_masr = 0xBD,
  TMS320C54_st_mpy = 0xBE,
  TMS320C54_mvdd = 0xBF,
  TMS320C54_mvdk = 0xC0,
  TMS320C54_mvdm = 0xC1,
  TMS320C54_mvdp = 0xC2,
  TMS320C54_mvkd = 0xC3,
  TMS320C54_mvmd = 0xC4,
  TMS320C54_mvmm = 0xC5,
  TMS320C54_mvpd = 0xC6,
  TMS320C54_portr = 0xC7,
  TMS320C54_portw = 0xC8,
  TMS320C54_reada = 0xC9,
  TMS320C54_writa = 0xCA,
  TMS320C54_last = 0xCB,
};

/* 1775 */
enum _E8B3A4BD16D91BFD04BCF73BD6E0E61A : unsigned __int32
{
  TMS320C55_null = 0x0,
  TMS320C55_abdst = 0x1,
  TMS320C55_abs1 = 0x2,
  TMS320C55_abs2 = 0x3,
  TMS320C55_add1 = 0x4,
  TMS320C55_add2 = 0x5,
  TMS320C55_add3 = 0x6,
  TMS320C55_add4 = 0x7,
  TMS320C55_addv1 = 0x8,
  TMS320C55_addv2 = 0x9,
  TMS320C55_addrv1 = 0xA,
  TMS320C55_addrv2 = 0xB,
  TMS320C55_maxdiff = 0xC,
  TMS320C55_dmaxdiff = 0xD,
  TMS320C55_mindiff = 0xE,
  TMS320C55_dmindiff = 0xF,
  TMS320C55_addsubcc4 = 0x10,
  TMS320C55_addsubcc5 = 0x11,
  TMS320C55_addsub2cc = 0x12,
  TMS320C55_sftcc = 0x13,
  TMS320C55_subc2 = 0x14,
  TMS320C55_subc3 = 0x15,
  TMS320C55_addsub = 0x16,
  TMS320C55_subadd = 0x17,
  TMS320C55_mpy_mpy = 0x18,
  TMS320C55_mpy_mpyr = 0x19,
  TMS320C55_mpy_mpy40 = 0x1A,
  TMS320C55_mpy_mpyr40 = 0x1B,
  TMS320C55_mac_mpy = 0x1C,
  TMS320C55_macr_mpyr = 0x1D,
  TMS320C55_mac40_mpy40 = 0x1E,
  TMS320C55_macr40_mpyr40 = 0x1F,
  TMS320C55_mas_mpy = 0x20,
  TMS320C55_masr_mpyr = 0x21,
  TMS320C55_mas40_mpy40 = 0x22,
  TMS320C55_masr40_mpyr40 = 0x23,
  TMS320C55_amar_mpy = 0x24,
  TMS320C55_amar_mpyr = 0x25,
  TMS320C55_amar_mpy40 = 0x26,
  TMS320C55_amar_mpyr40 = 0x27,
  TMS320C55_mac_mac = 0x28,
  TMS320C55_macr_macr = 0x29,
  TMS320C55_mac40_mac40 = 0x2A,
  TMS320C55_macr40_macr40 = 0x2B,
  TMS320C55_mas_mac = 0x2C,
  TMS320C55_masr_macr = 0x2D,
  TMS320C55_mas40_mac40 = 0x2E,
  TMS320C55_masr40_macr40 = 0x2F,
  TMS320C55_amar_mac = 0x30,
  TMS320C55_amar_macr = 0x31,
  TMS320C55_amar_mac40 = 0x32,
  TMS320C55_amar_macr40 = 0x33,
  TMS320C55_mas_mas = 0x34,
  TMS320C55_masr_masr = 0x35,
  TMS320C55_mas40_mas40 = 0x36,
  TMS320C55_masr40_masr40 = 0x37,
  TMS320C55_amar_mas = 0x38,
  TMS320C55_amar_masr = 0x39,
  TMS320C55_amar_mas40 = 0x3A,
  TMS320C55_amar_masr40 = 0x3B,
  TMS320C55_mpy_mac = 0x3C,
  TMS320C55_mpyr_macr = 0x3D,
  TMS320C55_mpy40_mac40 = 0x3E,
  TMS320C55_mpyr40_macr40 = 0x3F,
  TMS320C55_amar3 = 0x40,
  TMS320C55_firsadd = 0x41,
  TMS320C55_firssub = 0x42,
  TMS320C55_mpym_mov = 0x43,
  TMS320C55_mpymr_mov = 0x44,
  TMS320C55_macm_mov = 0x45,
  TMS320C55_macmr_mov = 0x46,
  TMS320C55_masm_mov = 0x47,
  TMS320C55_masmr_mov = 0x48,
  TMS320C55_add_mov = 0x49,
  TMS320C55_sub_mov = 0x4A,
  TMS320C55_mov_mov = 0x4B,
  TMS320C55_mov_aadd = 0x4C,
  TMS320C55_mov_add = 0x4D,
  TMS320C55_amar_amar = 0x4E,
  TMS320C55_add_asub = 0x4F,
  TMS320C55_btst_mov = 0x50,
  TMS320C55_mov_asub = 0x51,
  TMS320C55_lms = 0x52,
  TMS320C55_max1 = 0x53,
  TMS320C55_max2 = 0x54,
  TMS320C55_min1 = 0x55,
  TMS320C55_min2 = 0x56,
  TMS320C55_cmp = 0x57,
  TMS320C55_cmpu = 0x58,
  TMS320C55_aadd = 0x59,
  TMS320C55_asub = 0x5A,
  TMS320C55_amov = 0x5B,
  TMS320C55_amar1 = 0x5C,
  TMS320C55_sqr1 = 0x5D,
  TMS320C55_sqr2 = 0x5E,
  TMS320C55_sqrr1 = 0x5F,
  TMS320C55_sqrr2 = 0x60,
  TMS320C55_mpy1 = 0x61,
  TMS320C55_mpy2 = 0x62,
  TMS320C55_mpy3 = 0x63,
  TMS320C55_mpyr1 = 0x64,
  TMS320C55_mpyr2 = 0x65,
  TMS320C55_mpyr3 = 0x66,
  TMS320C55_mpyk2 = 0x67,
  TMS320C55_mpyk3 = 0x68,
  TMS320C55_mpykr2 = 0x69,
  TMS320C55_mpykr3 = 0x6A,
  TMS320C55_mpym2 = 0x6B,
  TMS320C55_mpym3 = 0x6C,
  TMS320C55_mpymr2 = 0x6D,
  TMS320C55_mpymr3 = 0x6E,
  TMS320C55_mpym403 = 0x6F,
  TMS320C55_mpymr403 = 0x70,
  TMS320C55_mpymu3 = 0x71,
  TMS320C55_mpymru3 = 0x72,
  TMS320C55_sqrm = 0x73,
  TMS320C55_sqrmr = 0x74,
  TMS320C55_mpymk = 0x75,
  TMS320C55_mpymkr = 0x76,
  TMS320C55_sqa1 = 0x77,
  TMS320C55_sqa2 = 0x78,
  TMS320C55_sqar1 = 0x79,
  TMS320C55_sqar2 = 0x7A,
  TMS320C55_mac3 = 0x7B,
  TMS320C55_mac4 = 0x7C,
  TMS320C55_macr3 = 0x7D,
  TMS320C55_macr4 = 0x7E,
  TMS320C55_mack3 = 0x7F,
  TMS320C55_mack4 = 0x80,
  TMS320C55_mackr3 = 0x81,
  TMS320C55_mackr4 = 0x82,
  TMS320C55_macm2 = 0x83,
  TMS320C55_macm3 = 0x84,
  TMS320C55_macm4 = 0x85,
  TMS320C55_macmr2 = 0x86,
  TMS320C55_macmr3 = 0x87,
  TMS320C55_macmr4 = 0x88,
  TMS320C55_macm403 = 0x89,
  TMS320C55_macm404 = 0x8A,
  TMS320C55_macmr403 = 0x8B,
  TMS320C55_macmr404 = 0x8C,
  TMS320C55_macmz = 0x8D,
  TMS320C55_macmrz = 0x8E,
  TMS320C55_sqam2 = 0x8F,
  TMS320C55_sqam3 = 0x90,
  TMS320C55_sqamr2 = 0x91,
  TMS320C55_sqamr3 = 0x92,
  TMS320C55_macmk3 = 0x93,
  TMS320C55_macmk4 = 0x94,
  TMS320C55_macmkr3 = 0x95,
  TMS320C55_macmkr4 = 0x96,
  TMS320C55_sqs1 = 0x97,
  TMS320C55_sqs2 = 0x98,
  TMS320C55_sqsr1 = 0x99,
  TMS320C55_sqsr2 = 0x9A,
  TMS320C55_mas2 = 0x9B,
  TMS320C55_mas3 = 0x9C,
  TMS320C55_masr2 = 0x9D,
  TMS320C55_masr3 = 0x9E,
  TMS320C55_masm2 = 0x9F,
  TMS320C55_masm3 = 0xA0,
  TMS320C55_masm4 = 0xA1,
  TMS320C55_masmr2 = 0xA2,
  TMS320C55_masmr3 = 0xA3,
  TMS320C55_masmr4 = 0xA4,
  TMS320C55_masm403 = 0xA5,
  TMS320C55_masm404 = 0xA6,
  TMS320C55_masmr403 = 0xA7,
  TMS320C55_masmr404 = 0xA8,
  TMS320C55_sqsm2 = 0xA9,
  TMS320C55_sqsm3 = 0xAA,
  TMS320C55_sqsmr2 = 0xAB,
  TMS320C55_sqsmr3 = 0xAC,
  TMS320C55_neg1 = 0xAD,
  TMS320C55_neg2 = 0xAE,
  TMS320C55_mant_nexp = 0xAF,
  TMS320C55_exp = 0xB0,
  TMS320C55_cmpand = 0xB1,
  TMS320C55_cmpandu = 0xB2,
  TMS320C55_cmpor = 0xB3,
  TMS320C55_cmporu = 0xB4,
  TMS320C55_round1 = 0xB5,
  TMS320C55_round2 = 0xB6,
  TMS320C55_sat1 = 0xB7,
  TMS320C55_sat2 = 0xB8,
  TMS320C55_satr1 = 0xB9,
  TMS320C55_satr2 = 0xBA,
  TMS320C55_sfts2 = 0xBB,
  TMS320C55_sfts3 = 0xBC,
  TMS320C55_sftsc2 = 0xBD,
  TMS320C55_sftsc3 = 0xBE,
  TMS320C55_sqdst = 0xBF,
  TMS320C55_sub1 = 0xC0,
  TMS320C55_sub2 = 0xC1,
  TMS320C55_sub3 = 0xC2,
  TMS320C55_sub4 = 0xC3,
  TMS320C55_band = 0xC4,
  TMS320C55_bfxpa = 0xC5,
  TMS320C55_bfxtr = 0xC6,
  TMS320C55_btst = 0xC7,
  TMS320C55_bnot = 0xC8,
  TMS320C55_bclr2 = 0xC9,
  TMS320C55_bset2 = 0xCA,
  TMS320C55_btstset = 0xCB,
  TMS320C55_btstclr = 0xCC,
  TMS320C55_btstnot = 0xCD,
  TMS320C55_btstp = 0xCE,
  TMS320C55_bclr1 = 0xCF,
  TMS320C55_bset1 = 0xD0,
  TMS320C55_amar2 = 0xD1,
  TMS320C55_popboth = 0xD2,
  TMS320C55_pshboth = 0xD3,
  TMS320C55_bcnt = 0xD4,
  TMS320C55_not1 = 0xD5,
  TMS320C55_not2 = 0xD6,
  TMS320C55_and1 = 0xD7,
  TMS320C55_and2 = 0xD8,
  TMS320C55_and3 = 0xD9,
  TMS320C55_or1 = 0xDA,
  TMS320C55_or2 = 0xDB,
  TMS320C55_or3 = 0xDC,
  TMS320C55_xor1 = 0xDD,
  TMS320C55_xor2 = 0xDE,
  TMS320C55_xor3 = 0xDF,
  TMS320C55_sftl2 = 0xE0,
  TMS320C55_sftl3 = 0xE1,
  TMS320C55_rol = 0xE2,
  TMS320C55_ror = 0xE3,
  TMS320C55_swap = 0xE4,
  TMS320C55_swapp = 0xE5,
  TMS320C55_swap4 = 0xE6,
  TMS320C55_mov2 = 0xE7,
  TMS320C55_mov3 = 0xE8,
  TMS320C55_mov402 = 0xE9,
  TMS320C55_delay = 0xEA,
  TMS320C55_pop1 = 0xEB,
  TMS320C55_pop2 = 0xEC,
  TMS320C55_psh1 = 0xED,
  TMS320C55_psh2 = 0xEE,
  TMS320C55_bcc = 0xEF,
  TMS320C55_bccu = 0xF0,
  TMS320C55_b = 0xF1,
  TMS320C55_callcc = 0xF2,
  TMS320C55_call = 0xF3,
  TMS320C55_xcc = 0xF4,
  TMS320C55_xccpart = 0xF5,
  TMS320C55_idle = 0xF6,
  TMS320C55_nop = 0xF7,
  TMS320C55_nop_16 = 0xF8,
  TMS320C55_rptblocal = 0xF9,
  TMS320C55_rptb = 0xFA,
  TMS320C55_rptcc = 0xFB,
  TMS320C55_rpt = 0xFC,
  TMS320C55_rptadd = 0xFD,
  TMS320C55_rptsub = 0xFE,
  TMS320C55_retcc = 0xFF,
  TMS320C55_ret = 0x100,
  TMS320C55_reti = 0x101,
  TMS320C55_intr = 0x102,
  TMS320C55_reset = 0x103,
  TMS320C55_trap = 0x104,
  TMS320C55_last = 0x105,
};

/* 1776 */
enum _EB3E0D64FD1E2D25F11CBF2CB3D02109 : unsigned __int32
{
  TRIMEDIA_null = 0x0,
  TRIMEDIA_igtri = 0x1,
  TRIMEDIA_igeqi = 0x2,
  TRIMEDIA_ilesi = 0x3,
  TRIMEDIA_ineqi = 0x4,
  TRIMEDIA_ieqli = 0x5,
  TRIMEDIA_iaddi = 0x6,
  TRIMEDIA_ild16d = 0x7,
  TRIMEDIA_ld32d = 0x8,
  TRIMEDIA_uld8d = 0x9,
  TRIMEDIA_lsri = 0xA,
  TRIMEDIA_asri = 0xB,
  TRIMEDIA_asli = 0xC,
  TRIMEDIA_iadd = 0xD,
  TRIMEDIA_isub = 0xE,
  TRIMEDIA_igeq = 0xF,
  TRIMEDIA_igtr = 0x10,
  TRIMEDIA_bitand = 0x11,
  TRIMEDIA_bitor = 0x12,
  TRIMEDIA_asr = 0x13,
  TRIMEDIA_asl = 0x14,
  TRIMEDIA_ifloat = 0x15,
  TRIMEDIA_ifixrz = 0x16,
  TRIMEDIA_fadd = 0x17,
  TRIMEDIA_imin = 0x18,
  TRIMEDIA_imax = 0x19,
  TRIMEDIA_iavgonep = 0x1A,
  TRIMEDIA_ume8uu = 0x1B,
  TRIMEDIA_imul = 0x1C,
  TRIMEDIA_fmul = 0x1D,
  TRIMEDIA_h_st8d = 0x1E,
  TRIMEDIA_h_st16d = 0x1F,
  TRIMEDIA_h_st32d = 0x20,
  TRIMEDIA_isubi = 0x21,
  TRIMEDIA_ugtr = 0x22,
  TRIMEDIA_ugtri = 0x23,
  TRIMEDIA_ugeq = 0x24,
  TRIMEDIA_ugeqi = 0x25,
  TRIMEDIA_ieql = 0x26,
  TRIMEDIA_ueqli = 0x27,
  TRIMEDIA_ineq = 0x28,
  TRIMEDIA_uneqi = 0x29,
  TRIMEDIA_ulesi = 0x2A,
  TRIMEDIA_ileqi = 0x2B,
  TRIMEDIA_uleqi = 0x2C,
  TRIMEDIA_h_iabs = 0x2D,
  TRIMEDIA_carry = 0x2E,
  TRIMEDIA_izero = 0x2F,
  TRIMEDIA_inonzero = 0x30,
  TRIMEDIA_bitxor = 0x31,
  TRIMEDIA_bitandinv = 0x32,
  TRIMEDIA_bitinv = 0x33,
  TRIMEDIA_sex16 = 0x34,
  TRIMEDIA_packbytes = 0x35,
  TRIMEDIA_pack16lsb = 0x36,
  TRIMEDIA_pack16msb = 0x37,
  TRIMEDIA_ubytesel = 0x38,
  TRIMEDIA_ibytesel = 0x39,
  TRIMEDIA_mergelsb = 0x3A,
  TRIMEDIA_mergemsb = 0x3B,
  TRIMEDIA_ume8ii = 0x3C,
  TRIMEDIA_h_dspiabs = 0x3D,
  TRIMEDIA_dspiadd = 0x3E,
  TRIMEDIA_dspuadd = 0x3F,
  TRIMEDIA_dspisub = 0x40,
  TRIMEDIA_dspusub = 0x41,
  TRIMEDIA_dspidualadd = 0x42,
  TRIMEDIA_dspidualsub = 0x43,
  TRIMEDIA_h_dspidualabs = 0x44,
  TRIMEDIA_quadavg = 0x45,
  TRIMEDIA_iclipi = 0x46,
  TRIMEDIA_uclipi = 0x47,
  TRIMEDIA_uclipu = 0x48,
  TRIMEDIA_iflip = 0x49,
  TRIMEDIA_dspuquadaddui = 0x4A,
  TRIMEDIA_quadumin = 0x4B,
  TRIMEDIA_quadumax = 0x4C,
  TRIMEDIA_dualiclipi = 0x4D,
  TRIMEDIA_dualuclipi = 0x4E,
  TRIMEDIA_quadumulmsb = 0x4F,
  TRIMEDIA_ufir8uu = 0x50,
  TRIMEDIA_ifir8ui = 0x51,
  TRIMEDIA_ifir8ii = 0x52,
  TRIMEDIA_ifir16 = 0x53,
  TRIMEDIA_ufir16 = 0x54,
  TRIMEDIA_dspidualmul = 0x55,
  TRIMEDIA_lsr = 0x56,
  TRIMEDIA_rol = 0x57,
  TRIMEDIA_roli = 0x58,
  TRIMEDIA_funshift1 = 0x59,
  TRIMEDIA_funshift2 = 0x5A,
  TRIMEDIA_funshift3 = 0x5B,
  TRIMEDIA_dualasr = 0x5C,
  TRIMEDIA_mergedual16lsb = 0x5D,
  TRIMEDIA_fdiv = 0x5E,
  TRIMEDIA_fdivflags = 0x5F,
  TRIMEDIA_fsqrt = 0x60,
  TRIMEDIA_fsqrtflags = 0x61,
  TRIMEDIA_faddflags = 0x62,
  TRIMEDIA_fsub = 0x63,
  TRIMEDIA_fsubflags = 0x64,
  TRIMEDIA_fabsval = 0x65,
  TRIMEDIA_fabsvalflags = 0x66,
  TRIMEDIA_ifloatrz = 0x67,
  TRIMEDIA_ifloatrzflags = 0x68,
  TRIMEDIA_ufloatrz = 0x69,
  TRIMEDIA_ufloatrzflags = 0x6A,
  TRIMEDIA_ifixieee = 0x6B,
  TRIMEDIA_ifixieeeflags = 0x6C,
  TRIMEDIA_ufixieee = 0x6D,
  TRIMEDIA_ufixieeeflags = 0x6E,
  TRIMEDIA_ufixrz = 0x6F,
  TRIMEDIA_ufixrzflags = 0x70,
  TRIMEDIA_ufloat = 0x71,
  TRIMEDIA_ufloatflags = 0x72,
  TRIMEDIA_ifixrzflags = 0x73,
  TRIMEDIA_ifloatflags = 0x74,
  TRIMEDIA_umul = 0x75,
  TRIMEDIA_imulm = 0x76,
  TRIMEDIA_umulm = 0x77,
  TRIMEDIA_dspimul = 0x78,
  TRIMEDIA_dspumul = 0x79,
  TRIMEDIA_fmulflags = 0x7A,
  TRIMEDIA_fgtr = 0x7B,
  TRIMEDIA_fgtrflags = 0x7C,
  TRIMEDIA_fgeq = 0x7D,
  TRIMEDIA_fgeqflags = 0x7E,
  TRIMEDIA_feql = 0x7F,
  TRIMEDIA_feqlflags = 0x80,
  TRIMEDIA_fneq = 0x81,
  TRIMEDIA_fneqflags = 0x82,
  TRIMEDIA_fsign = 0x83,
  TRIMEDIA_fsignflags = 0x84,
  TRIMEDIA_cycles = 0x85,
  TRIMEDIA_hicycles = 0x86,
  TRIMEDIA_readdpc = 0x87,
  TRIMEDIA_readspc = 0x88,
  TRIMEDIA_readpcsw = 0x89,
  TRIMEDIA_writespc = 0x8A,
  TRIMEDIA_writedpc = 0x8B,
  TRIMEDIA_writepcsw = 0x8C,
  TRIMEDIA_curcycles = 0x8D,
  TRIMEDIA_jmpt = 0x8E,
  TRIMEDIA_ijmpt = 0x8F,
  TRIMEDIA_jmpi = 0x90,
  TRIMEDIA_ijmpi = 0x91,
  TRIMEDIA_jmpf = 0x92,
  TRIMEDIA_ijmpf = 0x93,
  TRIMEDIA_iclr = 0x94,
  TRIMEDIA_uimm = 0x95,
  TRIMEDIA_ild8d = 0x96,
  TRIMEDIA_ild8r = 0x97,
  TRIMEDIA_uld8r = 0x98,
  TRIMEDIA_ild16r = 0x99,
  TRIMEDIA_ild16x = 0x9A,
  TRIMEDIA_uld16d = 0x9B,
  TRIMEDIA_uld16r = 0x9C,
  TRIMEDIA_uld16x = 0x9D,
  TRIMEDIA_ld32r = 0x9E,
  TRIMEDIA_ld32x = 0x9F,
  TRIMEDIA_rdtag = 0xA0,
  TRIMEDIA_rdstatus = 0xA1,
  TRIMEDIA_dcb = 0xA2,
  TRIMEDIA_dinvalid = 0xA3,
  TRIMEDIA_prefd = 0xA4,
  TRIMEDIA_prefr = 0xA5,
  TRIMEDIA_pref16x = 0xA6,
  TRIMEDIA_pref32x = 0xA7,
  TRIMEDIA_allocd = 0xA8,
  TRIMEDIA_allocr = 0xA9,
  TRIMEDIA_allocx = 0xAA,
  TRIMEDIA_nop = 0xAB,
  TRIMEDIA_alloc = 0xAC,
  TRIMEDIA_dspiabs = 0xAD,
  TRIMEDIA_dspidualabs = 0xAE,
  TRIMEDIA_iabs = 0xAF,
  TRIMEDIA_ild16 = 0xB0,
  TRIMEDIA_ild8 = 0xB1,
  TRIMEDIA_ineg = 0xB2,
  TRIMEDIA_ld32 = 0xB3,
  TRIMEDIA_pref = 0xB4,
  TRIMEDIA_sex8 = 0xB5,
  TRIMEDIA_st16 = 0xB6,
  TRIMEDIA_st16d = 0xB7,
  TRIMEDIA_st32 = 0xB8,
  TRIMEDIA_st32d = 0xB9,
  TRIMEDIA_st8 = 0xBA,
  TRIMEDIA_st8d = 0xBB,
  TRIMEDIA_uld16 = 0xBC,
  TRIMEDIA_uld8 = 0xBD,
  TRIMEDIA_zex16 = 0xBE,
  TRIMEDIA_zex8 = 0xBF,
  TRIMEDIA_ident = 0xC0,
  TRIMEDIA_iles = 0xC1,
  TRIMEDIA_ileq = 0xC2,
  TRIMEDIA_ules = 0xC3,
  TRIMEDIA_uleq = 0xC4,
  TRIMEDIA_fles = 0xC5,
  TRIMEDIA_fleq = 0xC6,
  TRIMEDIA_ueql = 0xC7,
  TRIMEDIA_uneq = 0xC8,
  TRIMEDIA_flesflags = 0xC9,
  TRIMEDIA_fleqflags = 0xCA,
  TRIMEDIA_borrow = 0xCB,
  TRIMEDIA_umin = 0xCC,
  TRIMEDIA_lsl = 0xCD,
  TRIMEDIA_lsli = 0xCE,
  TRIMEDIA_last = 0xCF,
};

/* 1777 */
enum _5B6463B381419A9B06110325DC6B6ED4 : unsigned __int32
{
  NEC_78K_0_null = 0x0,
  NEC_78K_0_mov = 0x1,
  NEC_78K_0_xch = 0x2,
  NEC_78K_0_movw = 0x3,
  NEC_78K_0_xchw = 0x4,
  NEC_78K_0_add = 0x5,
  NEC_78K_0_addc = 0x6,
  NEC_78K_0_sub = 0x7,
  NEC_78K_0_subc = 0x8,
  NEC_78K_0_and = 0x9,
  NEC_78K_0_or = 0xA,
  NEC_78K_0_xor = 0xB,
  NEC_78K_0_cmp = 0xC,
  NEC_78K_0_addw = 0xD,
  NEC_78K_0_subw = 0xE,
  NEC_78K_0_cmpw = 0xF,
  NEC_78K_0_mulu = 0x10,
  NEC_78K_0_divuw = 0x11,
  NEC_78K_0_inc = 0x12,
  NEC_78K_0_dec = 0x13,
  NEC_78K_0_incw = 0x14,
  NEC_78K_0_decw = 0x15,
  NEC_78K_0_ror = 0x16,
  NEC_78K_0_rol = 0x17,
  NEC_78K_0_rorc = 0x18,
  NEC_78K_0_rolc = 0x19,
  NEC_78K_0_ror4 = 0x1A,
  NEC_78K_0_rol4 = 0x1B,
  NEC_78K_0_adjba = 0x1C,
  NEC_78K_0_adjbs = 0x1D,
  NEC_78K_0_mov1 = 0x1E,
  NEC_78K_0_and1 = 0x1F,
  NEC_78K_0_or1 = 0x20,
  NEC_78K_0_xor1 = 0x21,
  NEC_78K_0_set1 = 0x22,
  NEC_78K_0_clr1 = 0x23,
  NEC_78K_0_not1 = 0x24,
  NEC_78K_0_call = 0x25,
  NEC_78K_0_callf = 0x26,
  NEC_78K_0_callt = 0x27,
  NEC_78K_0_brk = 0x28,
  NEC_78K_0_ret = 0x29,
  NEC_78K_0_retb = 0x2A,
  NEC_78K_0_reti = 0x2B,
  NEC_78K_0_push = 0x2C,
  NEC_78K_0_pop = 0x2D,
  NEC_78K_0_br = 0x2E,
  NEC_78K_0_bc = 0x2F,
  NEC_78K_0_bnc = 0x30,
  NEC_78K_0_bz = 0x31,
  NEC_78K_0_bnz = 0x32,
  NEC_78K_0_bt = 0x33,
  NEC_78K_0_bf = 0x34,
  NEC_78K_0_btclr = 0x35,
  NEC_78K_0_dbnz = 0x36,
  NEC_78K_0_sel = 0x37,
  NEC_78K_0_nop = 0x38,
  NEC_78K_0_EI = 0x39,
  NEC_78K_0_DI = 0x3A,
  NEC_78K_0_HALT = 0x3B,
  NEC_78K_0_STOP = 0x3C,
  NEC_78K_0_last = 0x3D,
};

/* 1778 */
enum _C85ED03CB25EDB5A1C1E15779164BD61 : unsigned __int32
{
  NEC_78K_0S_null = 0x0,
  NEC_78K_0S_cmp = 0x1,
  NEC_78K_0S_xor = 0x2,
  NEC_78K_0S_and = 0x3,
  NEC_78K_0S_or = 0x4,
  NEC_78K_0S_add = 0x5,
  NEC_78K_0S_sub = 0x6,
  NEC_78K_0S_addc = 0x7,
  NEC_78K_0S_subc = 0x8,
  NEC_78K_0S_subw = 0x9,
  NEC_78K_0S_addw = 0xA,
  NEC_78K_0S_cmpw = 0xB,
  NEC_78K_0S_inc = 0xC,
  NEC_78K_0S_dec = 0xD,
  NEC_78K_0S_incw = 0xE,
  NEC_78K_0S_decw = 0xF,
  NEC_78K_0S_ror = 0x10,
  NEC_78K_0S_rol = 0x11,
  NEC_78K_0S_rorc = 0x12,
  NEC_78K_0S_rolc = 0x13,
  NEC_78K_0S_call = 0x14,
  NEC_78K_0S_callt = 0x15,
  NEC_78K_0S_ret = 0x16,
  NEC_78K_0S_reti = 0x17,
  NEC_78K_0S_mov = 0x18,
  NEC_78K_0S_xch = 0x19,
  NEC_78K_0S_xchw = 0x1A,
  NEC_78K_0S_set1 = 0x1B,
  NEC_78K_0S_clr1 = 0x1C,
  NEC_78K_0S_not1 = 0x1D,
  NEC_78K_0S_push = 0x1E,
  NEC_78K_0S_pop = 0x1F,
  NEC_78K_0S_movw = 0x20,
  NEC_78K_0S_br = 0x21,
  NEC_78K_0S_bc = 0x22,
  NEC_78K_0S_bnc = 0x23,
  NEC_78K_0S_bz = 0x24,
  NEC_78K_0S_bnz = 0x25,
  NEC_78K_0S_bt = 0x26,
  NEC_78K_0S_bf = 0x27,
  NEC_78K_0S_dbnz = 0x28,
  NEC_78K_0S_nop = 0x29,
  NEC_78K_0S_EI = 0x2A,
  NEC_78K_0S_DI = 0x2B,
  NEC_78K_0S_HALT = 0x2C,
  NEC_78K_0S_STOP = 0x2D,
  NEC_78K_0S_last = 0x2E,
};

/* 1779 */
enum m16c_itype_t : unsigned __int32
{
  M16C_null = 0x0,
  M16C_abs = 0x1,
  M16C_adc = 0x2,
  M16C_adcf = 0x3,
  M16C_add = 0x4,
  M16C_adjnz = 0x5,
  M16C_and = 0x6,
  M16C_band = 0x7,
  M16C_bclr = 0x8,
  M16C_bmcnd = 0x9,
  M16C_bmgeu = 0xA,
  M16C_bmgtu = 0xB,
  M16C_bmeq = 0xC,
  M16C_bmn = 0xD,
  M16C_bmle = 0xE,
  M16C_bmo = 0xF,
  M16C_bmge = 0x10,
  M16C_bmltu = 0x11,
  M16C_bmleu = 0x12,
  M16C_bmne = 0x13,
  M16C_bmpz = 0x14,
  M16C_bmgt = 0x15,
  M16C_bmno = 0x16,
  M16C_bmlt = 0x17,
  M16C_bnand = 0x18,
  M16C_bnor = 0x19,
  M16C_bnot = 0x1A,
  M16C_bntst = 0x1B,
  M16C_bnxor = 0x1C,
  M16C_bor = 0x1D,
  M16C_brk = 0x1E,
  M16C_bset = 0x1F,
  M16C_btst = 0x20,
  M16C_btstc = 0x21,
  M16C_btsts = 0x22,
  M16C_bxor = 0x23,
  M16C_cmp = 0x24,
  M16C_dadc = 0x25,
  M16C_dadd = 0x26,
  M16C_dec = 0x27,
  M16C_div = 0x28,
  M16C_divu = 0x29,
  M16C_divx = 0x2A,
  M16C_dsbb = 0x2B,
  M16C_dsub = 0x2C,
  M16C_enter = 0x2D,
  M16C_exitd = 0x2E,
  M16C_exts = 0x2F,
  M16C_fclr = 0x30,
  M16C_fset = 0x31,
  M16C_inc = 0x32,
  M16C_int = 0x33,
  M16C_into = 0x34,
  M16C_jcnd = 0x35,
  M16C_jgeu = 0x36,
  M16C_jgtu = 0x37,
  M16C_jeq = 0x38,
  M16C_jn = 0x39,
  M16C_jle = 0x3A,
  M16C_jo = 0x3B,
  M16C_jge = 0x3C,
  M16C_jltu = 0x3D,
  M16C_jleu = 0x3E,
  M16C_jne = 0x3F,
  M16C_jpz = 0x40,
  M16C_jgt = 0x41,
  M16C_jno = 0x42,
  M16C_jlt = 0x43,
  M16C_jmp = 0x44,
  M16C_jmpi = 0x45,
  M16C_jmps = 0x46,
  M16C_jsr = 0x47,
  M16C_jsri = 0x48,
  M16C_jsrs = 0x49,
  M16C_ldc = 0x4A,
  M16C_ldctx = 0x4B,
  M16C_lde = 0x4C,
  M16C_ldintb = 0x4D,
  M16C_ldipl = 0x4E,
  M16C_mov = 0x4F,
  M16C_mova = 0x50,
  M16C_movhh = 0x51,
  M16C_movhl = 0x52,
  M16C_movlh = 0x53,
  M16C_movll = 0x54,
  M16C_mul = 0x55,
  M16C_mulu = 0x56,
  M16C_neg = 0x57,
  M16C_nop = 0x58,
  M16C_not = 0x59,
  M16C_or = 0x5A,
  M16C_pop = 0x5B,
  M16C_popc = 0x5C,
  M16C_popm = 0x5D,
  M16C_push = 0x5E,
  M16C_pusha = 0x5F,
  M16C_pushc = 0x60,
  M16C_pushm = 0x61,
  M16C_reit = 0x62,
  M16C_rmpa = 0x63,
  M16C_rolc = 0x64,
  M16C_rorc = 0x65,
  M16C_rot = 0x66,
  M16C_rts = 0x67,
  M16C_sbb = 0x68,
  M16C_sbjnz = 0x69,
  M16C_sha = 0x6A,
  M16C_shl = 0x6B,
  M16C_smovb = 0x6C,
  M16C_smovf = 0x6D,
  M16C_sstr = 0x6E,
  M16C_stc = 0x6F,
  M16C_stctx = 0x70,
  M16C_ste = 0x71,
  M16C_stnz = 0x72,
  M16C_stz = 0x73,
  M16C_stzx = 0x74,
  M16C_sub = 0x75,
  M16C_tst = 0x76,
  M16C_und = 0x77,
  M16C_wait = 0x78,
  M16C_xchg = 0x79,
  M16C_xor = 0x7A,
  M16C_addx = 0x7B,
  M16C_bitindex = 0x7C,
  M16C_brk2 = 0x7D,
  M16C_clip = 0x7E,
  M16C_cmpx = 0x7F,
  M16C_extz = 0x80,
  M16C_freit = 0x81,
  M16C_indexb = 0x82,
  M16C_indexbd = 0x83,
  M16C_indexbs = 0x84,
  M16C_indexl = 0x85,
  M16C_indexld = 0x86,
  M16C_indexls = 0x87,
  M16C_indexw = 0x88,
  M16C_indexwd = 0x89,
  M16C_indexws = 0x8A,
  M16C_max = 0x8B,
  M16C_min = 0x8C,
  M16C_movx = 0x8D,
  M16C_mulex = 0x8E,
  M16C_sccnd = 0x8F,
  M16C_scgeu = 0x90,
  M16C_scgtu = 0x91,
  M16C_sceq = 0x92,
  M16C_scn = 0x93,
  M16C_scle = 0x94,
  M16C_sco = 0x95,
  M16C_scge = 0x96,
  M16C_scltu = 0x97,
  M16C_scleu = 0x98,
  M16C_scne = 0x99,
  M16C_scpz = 0x9A,
  M16C_scgt = 0x9B,
  M16C_scno = 0x9C,
  M16C_sclt = 0x9D,
  M16C_scmpu = 0x9E,
  M16C_sin = 0x9F,
  M16C_smovu = 0xA0,
  M16C_sout = 0xA1,
  M16C_subx = 0xA2,
  M16C_shanc = 0xA3,
  M16C_shlnc = 0xA4,
  M16C_addf = 0xA5,
  M16C_adsf = 0xA6,
  M16C_cmpf = 0xA7,
  M16C_cnvif = 0xA8,
  M16C_divf = 0xA9,
  M16C_ediv = 0xAA,
  M16C_edivu = 0xAB,
  M16C_edivx = 0xAC,
  M16C_emul = 0xAD,
  M16C_emulu = 0xAE,
  M16C_exiti = 0xAF,
  M16C_index1 = 0xB0,
  M16C_index2 = 0xB1,
  M16C_mulf = 0xB2,
  M16C_mulx = 0xB3,
  M16C_round = 0xB4,
  M16C_stop = 0xB5,
  M16C_subf = 0xB6,
  M16C_suntil = 0xB7,
  M16C_swhile = 0xB8,
  M16C_last = 0xB9,
};

/* 1780 */
enum _7592DA0097C3AE8561024DD32DB398BF : unsigned __int32
{
  m32r_null = 0x0,
  m32r_add = 0x1,
  m32r_add3 = 0x2,
  m32r_addi = 0x3,
  m32r_addv = 0x4,
  m32r_addv3 = 0x5,
  m32r_addx = 0x6,
  m32r_and = 0x7,
  m32r_and3 = 0x8,
  m32r_bc = 0x9,
  m32r_beq = 0xA,
  m32r_beqz = 0xB,
  m32r_bgez = 0xC,
  m32r_bgtz = 0xD,
  m32r_bl = 0xE,
  m32r_blez = 0xF,
  m32r_bltz = 0x10,
  m32r_bnc = 0x11,
  m32r_bne = 0x12,
  m32r_bnez = 0x13,
  m32r_bra = 0x14,
  m32r_cmp = 0x15,
  m32r_cmpi = 0x16,
  m32r_cmpu = 0x17,
  m32r_cmpui = 0x18,
  m32r_div = 0x19,
  m32r_divu = 0x1A,
  m32r_jl = 0x1B,
  m32r_jmp = 0x1C,
  m32r_ld = 0x1D,
  m32r_ld24 = 0x1E,
  m32r_ldb = 0x1F,
  m32r_ldh = 0x20,
  m32r_ldi = 0x21,
  m32r_ldub = 0x22,
  m32r_lduh = 0x23,
  m32r_lock = 0x24,
  m32r_machi = 0x25,
  m32r_maclo = 0x26,
  m32r_macwhi = 0x27,
  m32r_macwlo = 0x28,
  m32r_mul = 0x29,
  m32r_mulhi = 0x2A,
  m32r_mullo = 0x2B,
  m32r_mulwhi = 0x2C,
  m32r_mulwlo = 0x2D,
  m32r_mv = 0x2E,
  m32r_mvfachi = 0x2F,
  m32r_mvfaclo = 0x30,
  m32r_mvfacmi = 0x31,
  m32r_mvfc = 0x32,
  m32r_mvtachi = 0x33,
  m32r_mvtaclo = 0x34,
  m32r_mvtc = 0x35,
  m32r_neg = 0x36,
  m32r_nop = 0x37,
  m32r_not = 0x38,
  m32r_or = 0x39,
  m32r_or3 = 0x3A,
  m32r_push = 0x3B,
  m32r_pop = 0x3C,
  m32r_rac = 0x3D,
  m32r_rach = 0x3E,
  m32r_rem = 0x3F,
  m32r_remu = 0x40,
  m32r_rte = 0x41,
  m32r_seth = 0x42,
  m32r_sll = 0x43,
  m32r_sll3 = 0x44,
  m32r_slli = 0x45,
  m32r_sra = 0x46,
  m32r_sra3 = 0x47,
  m32r_srai = 0x48,
  m32r_srl = 0x49,
  m32r_srl3 = 0x4A,
  m32r_srli = 0x4B,
  m32r_st = 0x4C,
  m32r_stb = 0x4D,
  m32r_sth = 0x4E,
  m32r_sub = 0x4F,
  m32r_subv = 0x50,
  m32r_subx = 0x51,
  m32r_trap = 0x52,
  m32r_unlock = 0x53,
  m32r_xor = 0x54,
  m32r_xor3 = 0x55,
  m32rx_bcl = 0x56,
  m32rx_bncl = 0x57,
  m32rx_cmpeq = 0x58,
  m32rx_cmpz = 0x59,
  m32rx_divh = 0x5A,
  m32rx_jc = 0x5B,
  m32rx_jnc = 0x5C,
  m32rx_machi = 0x5D,
  m32rx_maclo = 0x5E,
  m32rx_macwhi = 0x5F,
  m32rx_macwlo = 0x60,
  m32rx_mulhi = 0x61,
  m32rx_mullo = 0x62,
  m32rx_mulwhi = 0x63,
  m32rx_mulwlo = 0x64,
  m32rx_mvfachi = 0x65,
  m32rx_mvfaclo = 0x66,
  m32rx_mvfacmi = 0x67,
  m32rx_mvtachi = 0x68,
  m32rx_mvtaclo = 0x69,
  m32rx_rac = 0x6A,
  m32rx_rach = 0x6B,
  m32rx_satb = 0x6C,
  m32rx_sath = 0x6D,
  m32rx_sat = 0x6E,
  m32rx_pcmpbz = 0x6F,
  m32rx_sadd = 0x70,
  m32rx_macwu1 = 0x71,
  m32rx_msblo = 0x72,
  m32rx_mulwu1 = 0x73,
  m32rx_maclh1 = 0x74,
  m32rx_sc = 0x75,
  m32rx_snc = 0x76,
  m32r_fadd = 0x77,
  m32r_fsub = 0x78,
  m32r_fmul = 0x79,
  m32r_fdiv = 0x7A,
  m32r_fmadd = 0x7B,
  m32r_fmsub = 0x7C,
  m32r_itof = 0x7D,
  m32r_utof = 0x7E,
  m32r_ftoi = 0x7F,
  m32r_ftos = 0x80,
  m32r_fcmp = 0x81,
  m32r_fcmpe = 0x82,
  m32r_bset = 0x83,
  m32r_bclr = 0x84,
  m32r_btst = 0x85,
  m32r_setpsw = 0x86,
  m32r_clrpsw = 0x87,
  m32r_last = 0x88,
};

/* 1781 */
enum _28B773E1B8BE2E4EF6096F078CBAE501 : unsigned __int32
{
  m740_null = 0x0,
  m740_adc = 0x1,
  m740_and = 0x2,
  m740_asl = 0x3,
  m740_bbc = 0x4,
  m740_bbs = 0x5,
  m740_bcc = 0x6,
  m740_bcs = 0x7,
  m740_beq = 0x8,
  m740_bit = 0x9,
  m740_bmi = 0xA,
  m740_bne = 0xB,
  m740_bpl = 0xC,
  m740_bra = 0xD,
  m740_brk = 0xE,
  m740_bvc = 0xF,
  m740_bvs = 0x10,
  m740_clb = 0x11,
  m740_clc = 0x12,
  m740_cld = 0x13,
  m740_cli = 0x14,
  m740_clt = 0x15,
  m740_clv = 0x16,
  m740_cmp = 0x17,
  m740_com = 0x18,
  m740_cpx = 0x19,
  m740_cpy = 0x1A,
  m740_dec = 0x1B,
  m740_dex = 0x1C,
  m740_dey = 0x1D,
  m740_div = 0x1E,
  m740_eor = 0x1F,
  m740_inc = 0x20,
  m740_inx = 0x21,
  m740_iny = 0x22,
  m740_jmp = 0x23,
  m740_jsr = 0x24,
  m740_lda = 0x25,
  m740_ldm = 0x26,
  m740_ldx = 0x27,
  m740_ldy = 0x28,
  m740_lsr = 0x29,
  m740_mul = 0x2A,
  m740_nop = 0x2B,
  m740_ora = 0x2C,
  m740_pha = 0x2D,
  m740_php = 0x2E,
  m740_pla = 0x2F,
  m740_plp = 0x30,
  m740_rol = 0x31,
  m740_ror = 0x32,
  m740_rrf = 0x33,
  m740_rti = 0x34,
  m740_rts = 0x35,
  m740_sbc = 0x36,
  m740_seb = 0x37,
  m740_sec = 0x38,
  m740_sed = 0x39,
  m740_sei = 0x3A,
  m740_set = 0x3B,
  m740_sta = 0x3C,
  m740_stp = 0x3D,
  m740_stx = 0x3E,
  m740_sty = 0x3F,
  m740_tax = 0x40,
  m740_tay = 0x41,
  m740_tst = 0x42,
  m740_tsx = 0x43,
  m740_txa = 0x44,
  m740_txs = 0x45,
  m740_tya = 0x46,
  m740_wit = 0x47,
  m740_last = 0x48,
};

/* 1782 */
enum _EDE12DD9CAD2C3BA38E6D4F45B165FDD : unsigned __int32
{
  m7700_null = 0x0,
  m7700_adc = 0x1,
  m7700_and = 0x2,
  m7700_asl = 0x3,
  m7700_bbc = 0x4,
  m7700_bbs = 0x5,
  m7700_bcc = 0x6,
  m7700_bcs = 0x7,
  m7700_beq = 0x8,
  m7700_bmi = 0x9,
  m7700_bne = 0xA,
  m7700_bpl = 0xB,
  m7700_bra = 0xC,
  m7700_brk = 0xD,
  m7700_bvc = 0xE,
  m7700_bvs = 0xF,
  m7700_clb = 0x10,
  m7700_clc = 0x11,
  m7700_cli = 0x12,
  m7700_clm = 0x13,
  m7700_clp = 0x14,
  m7700_clv = 0x15,
  m7700_cmp = 0x16,
  m7700_cpx = 0x17,
  m7700_cpy = 0x18,
  m7700_dec = 0x19,
  m7700_dex = 0x1A,
  m7700_dey = 0x1B,
  m7700_div = 0x1C,
  m7700_eor = 0x1D,
  m7700_inc = 0x1E,
  m7700_inx = 0x1F,
  m7700_iny = 0x20,
  m7700_jmp = 0x21,
  m7700_jsr = 0x22,
  m7700_lda = 0x23,
  m7700_ldm = 0x24,
  m7700_ldt = 0x25,
  m7700_ldx = 0x26,
  m7700_ldy = 0x27,
  m7700_lsr = 0x28,
  m7700_mpy = 0x29,
  m7700_mvn = 0x2A,
  m7700_mvp = 0x2B,
  m7700_nop = 0x2C,
  m7700_ora = 0x2D,
  m7700_pea = 0x2E,
  m7700_pei = 0x2F,
  m7700_per = 0x30,
  m7700_pha = 0x31,
  m7700_phb = 0x32,
  m7700_phd = 0x33,
  m7700_phg = 0x34,
  m7700_php = 0x35,
  m7700_pht = 0x36,
  m7700_phx = 0x37,
  m7700_phy = 0x38,
  m7700_pla = 0x39,
  m7700_plb = 0x3A,
  m7700_pld = 0x3B,
  m7700_plp = 0x3C,
  m7700_plt = 0x3D,
  m7700_plx = 0x3E,
  m7700_ply = 0x3F,
  m7700_psh = 0x40,
  m7700_pul = 0x41,
  m7700_rla = 0x42,
  m7700_rol = 0x43,
  m7700_ror = 0x44,
  m7700_rti = 0x45,
  m7700_rtl = 0x46,
  m7700_rts = 0x47,
  m7700_sbc = 0x48,
  m7700_seb = 0x49,
  m7700_sec = 0x4A,
  m7700_sei = 0x4B,
  m7700_sem = 0x4C,
  m7700_sep = 0x4D,
  m7700_sta = 0x4E,
  m7700_stp = 0x4F,
  m7700_stx = 0x50,
  m7700_sty = 0x51,
  m7700_tad = 0x52,
  m7700_tas = 0x53,
  m7700_tax = 0x54,
  m7700_tay = 0x55,
  m7700_tbd = 0x56,
  m7700_tbs = 0x57,
  m7700_tbx = 0x58,
  m7700_tby = 0x59,
  m7700_tda = 0x5A,
  m7700_tdb = 0x5B,
  m7700_tsa = 0x5C,
  m7700_tsb = 0x5D,
  m7700_tsx = 0x5E,
  m7700_txa = 0x5F,
  m7700_txb = 0x60,
  m7700_txs = 0x61,
  m7700_txy = 0x62,
  m7700_tya = 0x63,
  m7700_tyb = 0x64,
  m7700_tyx = 0x65,
  m7700_wit = 0x66,
  m7700_xab = 0x67,
  m7750_asr = 0x68,
  m7750_divs = 0x69,
  m7750_exts = 0x6A,
  m7750_extz = 0x6B,
  m7750_mpys = 0x6C,
  m7700_last = 0x6D,
};

/* 1783 */
enum _C1D2E47DA2E2EAC5B98337296A36150C : unsigned __int32
{
  m7900_null = 0x0,
  m7900_abs = 0x1,
  m7900_absd = 0x2,
  m7900_adc = 0x3,
  m7900_adcb = 0x4,
  m7900_adcd = 0x5,
  m7900_add = 0x6,
  m7900_addb = 0x7,
  m7900_addd = 0x8,
  m7900_addm = 0x9,
  m7900_addmb = 0xA,
  m7900_addmd = 0xB,
  m7900_adds = 0xC,
  m7900_addx = 0xD,
  m7900_addy = 0xE,
  m7900_and = 0xF,
  m7900_andb = 0x10,
  m7900_andm = 0x11,
  m7900_andmb = 0x12,
  m7900_andmd = 0x13,
  m7900_asl = 0x14,
  m7900_asln = 0x15,
  m7900_asldn = 0x16,
  m7900_asr = 0x17,
  m7900_asrn = 0x18,
  m7900_asrdn = 0x19,
  m7900_bbc = 0x1A,
  m7900_bbcb = 0x1B,
  m7900_bbs = 0x1C,
  m7900_bbsb = 0x1D,
  m7900_bcc = 0x1E,
  m7900_bcs = 0x1F,
  m7900_beq = 0x20,
  m7900_bge = 0x21,
  m7900_bgt = 0x22,
  m7900_bgtu = 0x23,
  m7900_ble = 0x24,
  m7900_bleu = 0x25,
  m7900_blt = 0x26,
  m7900_bmi = 0x27,
  m7900_bne = 0x28,
  m7900_bpl = 0x29,
  m7900_bra = 0x2A,
  m7900_bral = 0x2B,
  m7900_brk = 0x2C,
  m7900_bsc = 0x2D,
  m7900_bsr = 0x2E,
  m7900_bss = 0x2F,
  m7900_bvc = 0x30,
  m7900_bvs = 0x31,
  m7900_cbeq = 0x32,
  m7900_cbeqb = 0x33,
  m7900_cbne = 0x34,
  m7900_cbneb = 0x35,
  m7900_clc = 0x36,
  m7900_cli = 0x37,
  m7900_clm = 0x38,
  m7900_clp = 0x39,
  m7900_clr = 0x3A,
  m7900_clrb = 0x3B,
  m7900_clrm = 0x3C,
  m7900_clrmb = 0x3D,
  m7900_clrx = 0x3E,
  m7900_clry = 0x3F,
  m7900_clv = 0x40,
  m7900_cmp = 0x41,
  m7900_cmpb = 0x42,
  m7900_cmpd = 0x43,
  m7900_cmpm = 0x44,
  m7900_cmpmb = 0x45,
  m7900_cmpmd = 0x46,
  m7900_cpx = 0x47,
  m7900_cpy = 0x48,
  m7900_debne = 0x49,
  m7900_dec = 0x4A,
  m7900_dex = 0x4B,
  m7900_dey = 0x4C,
  m7900_div = 0x4D,
  m7900_divs = 0x4E,
  m7900_dxbne = 0x4F,
  m7900_dybne = 0x50,
  m7900_eor = 0x51,
  m7900_eorb = 0x52,
  m7900_eorm = 0x53,
  m7900_eormb = 0x54,
  m7900_eormd = 0x55,
  m7900_exts = 0x56,
  m7900_extsd = 0x57,
  m7900_extz = 0x58,
  m7900_extzd = 0x59,
  m7900_inc = 0x5A,
  m7900_inx = 0x5B,
  m7900_iny = 0x5C,
  m7900_jmp = 0x5D,
  m7900_jmpl = 0x5E,
  m7900_jsr = 0x5F,
  m7900_jsrl = 0x60,
  m7900_lda = 0x61,
  m7900_ldab = 0x62,
  m7900_ldad = 0x63,
  m7900_lddn = 0x64,
  m7900_ldt = 0x65,
  m7900_ldx = 0x66,
  m7900_ldxb = 0x67,
  m7900_ldy = 0x68,
  m7900_ldyb = 0x69,
  m7900_lsr = 0x6A,
  m7900_lsrn = 0x6B,
  m7900_lsrdn = 0x6C,
  m7900_movm = 0x6D,
  m7900_movmb = 0x6E,
  m7900_movr = 0x6F,
  m7900_movrb = 0x70,
  m7900_mpy = 0x71,
  m7900_mpys = 0x72,
  m7900_mvn = 0x73,
  m7900_mvp = 0x74,
  m7900_neg = 0x75,
  m7900_negd = 0x76,
  m7900_nop = 0x77,
  m7900_ora = 0x78,
  m7900_orab = 0x79,
  m7900_oram = 0x7A,
  m7900_oramb = 0x7B,
  m7900_oramd = 0x7C,
  m7900_pea = 0x7D,
  m7900_pei = 0x7E,
  m7900_per = 0x7F,
  m7900_pha = 0x80,
  m7900_phb = 0x81,
  m7900_phd = 0x82,
  m7900_phdn = 0x83,
  m7900_phg = 0x84,
  m7900_phldn = 0x85,
  m7900_php = 0x86,
  m7900_pht = 0x87,
  m7900_phx = 0x88,
  m7900_phy = 0x89,
  m7900_pla = 0x8A,
  m7900_plb = 0x8B,
  m7900_pld = 0x8C,
  m7900_pldn = 0x8D,
  m7900_plp = 0x8E,
  m7900_plt = 0x8F,
  m7900_plx = 0x90,
  m7900_ply = 0x91,
  m7900_psh = 0x92,
  m7900_pul = 0x93,
  m7900_rla = 0x94,
  m7900_rmpa = 0x95,
  m7900_rol = 0x96,
  m7900_roln = 0x97,
  m7900_roldn = 0x98,
  m7900_ror = 0x99,
  m7900_rorn = 0x9A,
  m7900_rordn = 0x9B,
  m7900_rti = 0x9C,
  m7900_rtl = 0x9D,
  m7900_rtld = 0x9E,
  m7900_rts = 0x9F,
  m7900_rtsdn = 0xA0,
  m7900_sbc = 0xA1,
  m7900_sbcb = 0xA2,
  m7900_sbcd = 0xA3,
  m7900_sec = 0xA4,
  m7900_sei = 0xA5,
  m7900_sem = 0xA6,
  m7900_sep = 0xA7,
  m7900_sta = 0xA8,
  m7900_stab = 0xA9,
  m7900_stad = 0xAA,
  m7900_stp = 0xAB,
  m7900_stx = 0xAC,
  m7900_sty = 0xAD,
  m7900_sub = 0xAE,
  m7900_subb = 0xAF,
  m7900_subd = 0xB0,
  m7900_subm = 0xB1,
  m7900_submb = 0xB2,
  m7900_submd = 0xB3,
  m7900_subs = 0xB4,
  m7900_subx = 0xB5,
  m7900_suby = 0xB6,
  m7900_tadn = 0xB7,
  m7900_tas = 0xB8,
  m7900_tax = 0xB9,
  m7900_tay = 0xBA,
  m7900_tbdn = 0xBB,
  m7900_tbs = 0xBC,
  m7900_tbx = 0xBD,
  m7900_tby = 0xBE,
  m7900_tdan = 0xBF,
  m7900_tdbn = 0xC0,
  m7900_tds = 0xC1,
  m7900_tsa = 0xC2,
  m7900_tsb = 0xC3,
  m7900_tsd = 0xC4,
  m7900_tsx = 0xC5,
  m7900_txa = 0xC6,
  m7900_txb = 0xC7,
  m7900_txs = 0xC8,
  m7900_txy = 0xC9,
  m7900_tya = 0xCA,
  m7900_tyb = 0xCB,
  m7900_tyx = 0xCC,
  m7900_wit = 0xCD,
  m7900_xab = 0xCE,
  m7900_last = 0xCF,
};

/* 1784 */
enum _F0E7DCDA850A951FAF4B95795C1FC42C : unsigned __int32
{
  st9_null = 0x0,
  st9_ld = 0x1,
  st9_ldw = 0x2,
  st9_ldpp = 0x3,
  st9_ldpd = 0x4,
  st9_lddp = 0x5,
  st9_lddd = 0x6,
  st9_add = 0x7,
  st9_addw = 0x8,
  st9_adc = 0x9,
  st9_adcw = 0xA,
  st9_sub = 0xB,
  st9_subw = 0xC,
  st9_sbc = 0xD,
  st9_sbcw = 0xE,
  st9_and = 0xF,
  st9_andw = 0x10,
  st9_or = 0x11,
  st9_orw = 0x12,
  st9_xor = 0x13,
  st9_xorw = 0x14,
  st9_cp = 0x15,
  st9_cpw = 0x16,
  st9_tm = 0x17,
  st9_tmw = 0x18,
  st9_tcm = 0x19,
  st9_tcmw = 0x1A,
  st9_inc = 0x1B,
  st9_incw = 0x1C,
  st9_dec = 0x1D,
  st9_decw = 0x1E,
  st9_sla = 0x1F,
  st9_slaw = 0x20,
  st9_sra = 0x21,
  st9_sraw = 0x22,
  st9_rrc = 0x23,
  st9_rrcw = 0x24,
  st9_rlc = 0x25,
  st9_rlcw = 0x26,
  st9_ror = 0x27,
  st9_rol = 0x28,
  st9_clr = 0x29,
  st9_cpl = 0x2A,
  st9_swap = 0x2B,
  st9_da = 0x2C,
  st9_push = 0x2D,
  st9_pushw = 0x2E,
  st9_pea = 0x2F,
  st9_pop = 0x30,
  st9_popw = 0x31,
  st9_pushu = 0x32,
  st9_pushuw = 0x33,
  st9_peau = 0x34,
  st9_popu = 0x35,
  st9_popuw = 0x36,
  st9_link = 0x37,
  st9_unlink = 0x38,
  st9_linku = 0x39,
  st9_unlinku = 0x3A,
  st9_mul = 0x3B,
  st9_div = 0x3C,
  st9_divws = 0x3D,
  st9_bset = 0x3E,
  st9_bres = 0x3F,
  st9_bcpl = 0x40,
  st9_btset = 0x41,
  st9_bld = 0x42,
  st9_band = 0x43,
  st9_bor = 0x44,
  st9_bxor = 0x45,
  st9_ret = 0x46,
  st9_rets = 0x47,
  st9_iret = 0x48,
  st9_jrcc = 0x49,
  st9_jpcc = 0x4A,
  st9_jp = 0x4B,
  st9_jps = 0x4C,
  st9_call = 0x4D,
  st9_calls = 0x4E,
  st9_btjf = 0x4F,
  st9_btjt = 0x50,
  st9_djnz = 0x51,
  st9_dwjnz = 0x52,
  st9_cpjfi = 0x53,
  st9_cpjti = 0x54,
  st9_xch = 0x55,
  st9_srp = 0x56,
  st9_srp0 = 0x57,
  st9_srp1 = 0x58,
  st9_spp = 0x59,
  st9_ext = 0x5A,
  st9_ei = 0x5B,
  st9_di = 0x5C,
  st9_scf = 0x5D,
  st9_rcf = 0x5E,
  st9_ccf = 0x5F,
  st9_spm = 0x60,
  st9_sdm = 0x61,
  st9_nop = 0x62,
  st9_wfi = 0x63,
  st9_halt = 0x64,
  st9_etrap = 0x65,
  st9_eret = 0x66,
  st9_ald = 0x67,
  st9_aldw = 0x68,
  st9_last = 0x69,
};

/* 1785 */
enum _1C028A4CD0C7B57357247010273269CB : unsigned __int32
{
  fr_null = 0x0,
  fr_add = 0x1,
  fr_add2 = 0x2,
  fr_addc = 0x3,
  fr_addn = 0x4,
  fr_addn2 = 0x5,
  fr_sub = 0x6,
  fr_subc = 0x7,
  fr_subn = 0x8,
  fr_cmp = 0x9,
  fr_cmp2 = 0xA,
  fr_and = 0xB,
  fr_andh = 0xC,
  fr_andb = 0xD,
  fr_or = 0xE,
  fr_orh = 0xF,
  fr_orb = 0x10,
  fr_eor = 0x11,
  fr_eorh = 0x12,
  fr_eorb = 0x13,
  fr_bandl = 0x14,
  fr_bandh = 0x15,
  fr_borl = 0x16,
  fr_borh = 0x17,
  fr_beorl = 0x18,
  fr_beorh = 0x19,
  fr_btstl = 0x1A,
  fr_btsth = 0x1B,
  fr_mul = 0x1C,
  fr_mulu = 0x1D,
  fr_mulh = 0x1E,
  fr_muluh = 0x1F,
  fr_div0s = 0x20,
  fr_div0u = 0x21,
  fr_div1 = 0x22,
  fr_div2 = 0x23,
  fr_div3 = 0x24,
  fr_div4s = 0x25,
  fr_lsl = 0x26,
  fr_lsl2 = 0x27,
  fr_lsr = 0x28,
  fr_lsr2 = 0x29,
  fr_asr = 0x2A,
  fr_asr2 = 0x2B,
  fr_ldi_32 = 0x2C,
  fr_ldi_20 = 0x2D,
  fr_ldi_8 = 0x2E,
  fr_ld = 0x2F,
  fr_lduh = 0x30,
  fr_ldub = 0x31,
  fr_st = 0x32,
  fr_sth = 0x33,
  fr_stb = 0x34,
  fr_mov = 0x35,
  fr_jmp = 0x36,
  fr_call = 0x37,
  fr_ret = 0x38,
  fr_int = 0x39,
  fr_inte = 0x3A,
  fr_reti = 0x3B,
  fr_bra = 0x3C,
  fr_bno = 0x3D,
  fr_beq = 0x3E,
  fr_bne = 0x3F,
  fr_bc = 0x40,
  fr_bnc = 0x41,
  fr_bn = 0x42,
  fr_bp = 0x43,
  fr_bv = 0x44,
  fr_bnv = 0x45,
  fr_blt = 0x46,
  fr_bge = 0x47,
  fr_ble = 0x48,
  fr_bgt = 0x49,
  fr_bls = 0x4A,
  fr_bhi = 0x4B,
  fr_dmov = 0x4C,
  fr_dmovh = 0x4D,
  fr_dmovb = 0x4E,
  fr_ldres = 0x4F,
  fr_stres = 0x50,
  fr_copop = 0x51,
  fr_copld = 0x52,
  fr_copst = 0x53,
  fr_copsv = 0x54,
  fr_nop = 0x55,
  fr_andccr = 0x56,
  fr_orccr = 0x57,
  fr_stilm = 0x58,
  fr_addsp = 0x59,
  fr_extsb = 0x5A,
  fr_extub = 0x5B,
  fr_extsh = 0x5C,
  fr_extuh = 0x5D,
  fr_ldm0 = 0x5E,
  fr_ldm1 = 0x5F,
  fr_stm0 = 0x60,
  fr_stm1 = 0x61,
  fr_enter = 0x62,
  fr_leave = 0x63,
  fr_xchb = 0x64,
  fr_last = 0x65,
};

/* 1786 */
enum _9495053A46892065888CD0D59D9ABC73 : unsigned __int32
{
  ALPHA_null = 0x0,
  ALPHA_addf = 0x1,
  ALPHA_addg = 0x2,
  ALPHA_addl = 0x3,
  ALPHA_addl_v = 0x4,
  ALPHA_addq = 0x5,
  ALPHA_addq_v = 0x6,
  ALPHA_adds = 0x7,
  ALPHA_addt = 0x8,
  ALPHA_amask = 0x9,
  ALPHA_and = 0xA,
  ALPHA_beq = 0xB,
  ALPHA_bge = 0xC,
  ALPHA_bgt = 0xD,
  ALPHA_bic = 0xE,
  ALPHA_bis = 0xF,
  ALPHA_blbc = 0x10,
  ALPHA_blbs = 0x11,
  ALPHA_ble = 0x12,
  ALPHA_blt = 0x13,
  ALPHA_bne = 0x14,
  ALPHA_br = 0x15,
  ALPHA_bsr = 0x16,
  ALPHA_call_pal = 0x17,
  ALPHA_cmoveq = 0x18,
  ALPHA_cmovge = 0x19,
  ALPHA_cmovgt = 0x1A,
  ALPHA_cmovlbc = 0x1B,
  ALPHA_cmovlbs = 0x1C,
  ALPHA_cmovle = 0x1D,
  ALPHA_cmovlt = 0x1E,
  ALPHA_cmovne = 0x1F,
  ALPHA_cmpbge = 0x20,
  ALPHA_cmpeq = 0x21,
  ALPHA_cmpgeq = 0x22,
  ALPHA_cmpgle = 0x23,
  ALPHA_cmpglt = 0x24,
  ALPHA_cmple = 0x25,
  ALPHA_cmplt = 0x26,
  ALPHA_cmpteq = 0x27,
  ALPHA_cmptle = 0x28,
  ALPHA_cmptlt = 0x29,
  ALPHA_cmptun = 0x2A,
  ALPHA_cmpule = 0x2B,
  ALPHA_cmpult = 0x2C,
  ALPHA_cpys = 0x2D,
  ALPHA_cpyse = 0x2E,
  ALPHA_cpysn = 0x2F,
  ALPHA_ctlz = 0x30,
  ALPHA_ctpop = 0x31,
  ALPHA_cttz = 0x32,
  ALPHA_cvtdg = 0x33,
  ALPHA_cvtgd = 0x34,
  ALPHA_cvtgf = 0x35,
  ALPHA_cvtgq = 0x36,
  ALPHA_cvtlq = 0x37,
  ALPHA_cvtqf = 0x38,
  ALPHA_cvtqg = 0x39,
  ALPHA_cvtql = 0x3A,
  ALPHA_cvtqs = 0x3B,
  ALPHA_cvtqt = 0x3C,
  ALPHA_cvtst = 0x3D,
  ALPHA_cvttq = 0x3E,
  ALPHA_cvtts = 0x3F,
  ALPHA_divf = 0x40,
  ALPHA_divg = 0x41,
  ALPHA_divs = 0x42,
  ALPHA_divt = 0x43,
  ALPHA_ecb = 0x44,
  ALPHA_eqv = 0x45,
  ALPHA_excb = 0x46,
  ALPHA_extbl = 0x47,
  ALPHA_extlh = 0x48,
  ALPHA_extll = 0x49,
  ALPHA_extqh = 0x4A,
  ALPHA_extql = 0x4B,
  ALPHA_extwh = 0x4C,
  ALPHA_extwl = 0x4D,
  ALPHA_fbeq = 0x4E,
  ALPHA_fbge = 0x4F,
  ALPHA_fbgt = 0x50,
  ALPHA_fble = 0x51,
  ALPHA_fblt = 0x52,
  ALPHA_fbne = 0x53,
  ALPHA_fcmoveq = 0x54,
  ALPHA_fcmovge = 0x55,
  ALPHA_fcmovgt = 0x56,
  ALPHA_fcmovle = 0x57,
  ALPHA_fcmovlt = 0x58,
  ALPHA_fcmovne = 0x59,
  ALPHA_fetch = 0x5A,
  ALPHA_fetch_m = 0x5B,
  ALPHA_ftois = 0x5C,
  ALPHA_ftoit = 0x5D,
  ALPHA_implver = 0x5E,
  ALPHA_insbl = 0x5F,
  ALPHA_inslh = 0x60,
  ALPHA_insll = 0x61,
  ALPHA_insqh = 0x62,
  ALPHA_insql = 0x63,
  ALPHA_inswh = 0x64,
  ALPHA_inswl = 0x65,
  ALPHA_itoff = 0x66,
  ALPHA_itofs = 0x67,
  ALPHA_itoft = 0x68,
  ALPHA_jmp = 0x69,
  ALPHA_jsr = 0x6A,
  ALPHA_jsr_coroutine = 0x6B,
  ALPHA_lda = 0x6C,
  ALPHA_ldah = 0x6D,
  ALPHA_ldbu = 0x6E,
  ALPHA_ldwu = 0x6F,
  ALPHA_ldf = 0x70,
  ALPHA_ldg = 0x71,
  ALPHA_ldl = 0x72,
  ALPHA_ldl_l = 0x73,
  ALPHA_ldq = 0x74,
  ALPHA_ldq_l = 0x75,
  ALPHA_ldq_u = 0x76,
  ALPHA_lds = 0x77,
  ALPHA_ldt = 0x78,
  ALPHA_maxsb8 = 0x79,
  ALPHA_maxsw4 = 0x7A,
  ALPHA_maxub8 = 0x7B,
  ALPHA_maxuw4 = 0x7C,
  ALPHA_mb = 0x7D,
  ALPHA_mf_fpcr = 0x7E,
  ALPHA_minsb8 = 0x7F,
  ALPHA_minsw4 = 0x80,
  ALPHA_minub8 = 0x81,
  ALPHA_minuw4 = 0x82,
  ALPHA_mskbl = 0x83,
  ALPHA_msklh = 0x84,
  ALPHA_mskll = 0x85,
  ALPHA_mskqh = 0x86,
  ALPHA_mskql = 0x87,
  ALPHA_mskwh = 0x88,
  ALPHA_mskwl = 0x89,
  ALPHA_mt_fpcr = 0x8A,
  ALPHA_mulf = 0x8B,
  ALPHA_mulg = 0x8C,
  ALPHA_mull = 0x8D,
  ALPHA_mull_v = 0x8E,
  ALPHA_mulq = 0x8F,
  ALPHA_mulq_v = 0x90,
  ALPHA_muls = 0x91,
  ALPHA_mult = 0x92,
  ALPHA_ornot = 0x93,
  ALPHA_perr = 0x94,
  ALPHA_pklb = 0x95,
  ALPHA_pkwb = 0x96,
  ALPHA_rc = 0x97,
  ALPHA_ret = 0x98,
  ALPHA_rpcc = 0x99,
  ALPHA_rs = 0x9A,
  ALPHA_s4addl = 0x9B,
  ALPHA_s4addq = 0x9C,
  ALPHA_s4subl = 0x9D,
  ALPHA_s4subq = 0x9E,
  ALPHA_s8addl = 0x9F,
  ALPHA_s8addq = 0xA0,
  ALPHA_s8subl = 0xA1,
  ALPHA_s8subq = 0xA2,
  ALPHA_sextb = 0xA3,
  ALPHA_sextw = 0xA4,
  ALPHA_sll = 0xA5,
  ALPHA_sqrtf = 0xA6,
  ALPHA_sqrtg = 0xA7,
  ALPHA_sqrts = 0xA8,
  ALPHA_sqrtt = 0xA9,
  ALPHA_sra = 0xAA,
  ALPHA_srl = 0xAB,
  ALPHA_stb = 0xAC,
  ALPHA_stf = 0xAD,
  ALPHA_stg = 0xAE,
  ALPHA_sts = 0xAF,
  ALPHA_stl = 0xB0,
  ALPHA_stl_c = 0xB1,
  ALPHA_stq = 0xB2,
  ALPHA_stq_c = 0xB3,
  ALPHA_stq_u = 0xB4,
  ALPHA_stt = 0xB5,
  ALPHA_stw = 0xB6,
  ALPHA_subf = 0xB7,
  ALPHA_subg = 0xB8,
  ALPHA_subl = 0xB9,
  ALPHA_subl_v = 0xBA,
  ALPHA_subq = 0xBB,
  ALPHA_subq_v = 0xBC,
  ALPHA_subs = 0xBD,
  ALPHA_subt = 0xBE,
  ALPHA_trapb = 0xBF,
  ALPHA_umulh = 0xC0,
  ALPHA_unpkbl = 0xC1,
  ALPHA_unpkbw = 0xC2,
  ALPHA_wh64 = 0xC3,
  ALPHA_wmb = 0xC4,
  ALPHA_xor = 0xC5,
  ALPHA_zap = 0xC6,
  ALPHA_zapnot = 0xC7,
  ALPHA_unop = 0xC8,
  ALPHA_nop = 0xC9,
  ALPHA_fnop = 0xCA,
  ALPHA_clr = 0xCB,
  ALPHA_fabs = 0xCC,
  ALPHA_fclr = 0xCD,
  ALPHA_fmov = 0xCE,
  ALPHA_fneg = 0xCF,
  ALPHA_mov = 0xD0,
  ALPHA_negl = 0xD1,
  ALPHA_negl_v = 0xD2,
  ALPHA_negq = 0xD3,
  ALPHA_negq_v = 0xD4,
  ALPHA_negf = 0xD5,
  ALPHA_negg = 0xD6,
  ALPHA_negs = 0xD7,
  ALPHA_negt = 0xD8,
  ALPHA_not = 0xD9,
  ALPHA_sextl = 0xDA,
  ALPHA_or = 0xDB,
  ALPHA_andnot = 0xDC,
  ALPHA_xornot = 0xDD,
  ALPHA_br0 = 0xDE,
  ALPHA_last = 0xDF,
};

/* 1787 */
enum _3533B0089D1D34165233288F4301A5ED : unsigned __int32
{
  KR1878_null = 0x0,
  KR1878_mov = 0x1,
  KR1878_cmp = 0x2,
  KR1878_add = 0x3,
  KR1878_sub = 0x4,
  KR1878_and = 0x5,
  KR1878_or = 0x6,
  KR1878_xor = 0x7,
  KR1878_movl = 0x8,
  KR1878_cmpl = 0x9,
  KR1878_addl = 0xA,
  KR1878_subl = 0xB,
  KR1878_bic = 0xC,
  KR1878_bis = 0xD,
  KR1878_btg = 0xE,
  KR1878_btt = 0xF,
  KR1878_swap = 0x10,
  KR1878_neg = 0x11,
  KR1878_not = 0x12,
  KR1878_shl = 0x13,
  KR1878_shr = 0x14,
  KR1878_shra = 0x15,
  KR1878_rlc = 0x16,
  KR1878_rrc = 0x17,
  KR1878_adc = 0x18,
  KR1878_sbc = 0x19,
  KR1878_ldr = 0x1A,
  KR1878_mtpr = 0x1B,
  KR1878_mfpr = 0x1C,
  KR1878_push = 0x1D,
  KR1878_pop = 0x1E,
  KR1878_sst = 0x1F,
  KR1878_cst = 0x20,
  KR1878_tof = 0x21,
  KR1878_tdc = 0x22,
  KR1878_jmp = 0x23,
  KR1878_jsr = 0x24,
  KR1878_jnz = 0x25,
  KR1878_jz = 0x26,
  KR1878_jns = 0x27,
  KR1878_js = 0x28,
  KR1878_jnc = 0x29,
  KR1878_jc = 0x2A,
  KR1878_ijmp = 0x2B,
  KR1878_ijsr = 0x2C,
  KR1878_rts = 0x2D,
  KR1878_rtsc = 0x2E,
  KR1878_rti = 0x2F,
  KR1878_nop = 0x30,
  KR1878_wait = 0x31,
  KR1878_stop = 0x32,
  KR1878_reset = 0x33,
  KR1878_sksp = 0x34,
  KR1878_last = 0x35,
};

/* 1788 */
enum _C68056E0A34E65469B9AC9E5B5190DBB : unsigned __int32
{
  AD218X_null = 0x0,
  AD218X_amf_01 = 0x1,
  AD218X_amf_03 = 0x2,
  AD218X_amf_02 = 0x3,
  AD218X_amf_04 = 0x4,
  AD218X_amf_05 = 0x5,
  AD218X_amf_06 = 0x6,
  AD218X_amf_07 = 0x7,
  AD218X_amf_08 = 0x8,
  AD218X_amf_09 = 0x9,
  AD218X_amf_0a = 0xA,
  AD218X_amf_0b = 0xB,
  AD218X_amf_0c = 0xC,
  AD218X_amf_0d = 0xD,
  AD218X_amf_0e = 0xE,
  AD218X_amf_0f = 0xF,
  AD218X_amf_10 = 0x10,
  AD218X_amf_11 = 0x11,
  AD218X_amf_12 = 0x12,
  AD218X_amf_13 = 0x13,
  AD218X_amf_14 = 0x14,
  AD218X_amf_15 = 0x15,
  AD218X_amf_16 = 0x16,
  AD218X_amf_17 = 0x17,
  AD218X_amf_18 = 0x18,
  AD218X_amf_19 = 0x19,
  AD218X_amf_1a = 0x1A,
  AD218X_amf_1b = 0x1B,
  AD218X_amf_1c = 0x1C,
  AD218X_amf_1d = 0x1D,
  AD218X_amf_1e = 0x1E,
  AD218X_amf_1f = 0x1F,
  AD218X_shft_0 = 0x20,
  AD218X_shft_1 = 0x21,
  AD218X_shft_2 = 0x22,
  AD218X_shft_3 = 0x23,
  AD218X_shft_4 = 0x24,
  AD218X_shft_5 = 0x25,
  AD218X_shft_6 = 0x26,
  AD218X_shft_7 = 0x27,
  AD218X_shft_8 = 0x28,
  AD218X_shft_9 = 0x29,
  AD218X_shft_a = 0x2A,
  AD218X_shft_b = 0x2B,
  AD218X_shft_c = 0x2C,
  AD218X_shft_d = 0x2D,
  AD218X_shft_e = 0x2E,
  AD218X_shft_f = 0x2F,
  AD218X_alu_00 = 0x30,
  AD218X_alu_01 = 0x31,
  AD218X_alu_02 = 0x32,
  AD218X_alu_03 = 0x33,
  AD218X_alu_04 = 0x34,
  AD218X_alu_05 = 0x35,
  AD218X_alu_06 = 0x36,
  AD218X_alu_07 = 0x37,
  AD218X_alu_08 = 0x38,
  AD218X_alu_09 = 0x39,
  AD218X_alu_0a = 0x3A,
  AD218X_alu_0b = 0x3B,
  AD218X_alu_0c = 0x3C,
  AD218X_alu_0d = 0x3D,
  AD218X_alu_0e = 0x3E,
  AD218X_alu_0f = 0x3F,
  AD218X_alu_10 = 0x40,
  AD218X_alu_11 = 0x41,
  AD218X_alu_12 = 0x42,
  AD218X_alu_13 = 0x43,
  AD218X_alu_14 = 0x44,
  AD218X_alu_15 = 0x45,
  AD218X_alu_16 = 0x46,
  AD218X_alu_17 = 0x47,
  AD218X_alu_18 = 0x48,
  AD218X_alu_19 = 0x49,
  AD218X_alu_1a = 0x4A,
  AD218X_alu_1b = 0x4B,
  AD218X_alu_1c = 0x4C,
  AD218X_alu_1d = 0x4D,
  AD218X_mac_0 = 0x4E,
  AD218X_mac_1 = 0x4F,
  AD218X_mac_2 = 0x50,
  AD218X_mac_3 = 0x51,
  AD218X_mac_4 = 0x52,
  AD218X_mac_5 = 0x53,
  AD218X_mac_6 = 0x54,
  AD218X_mac_7 = 0x55,
  AD218X_mac_8 = 0x56,
  AD218X_mac_9 = 0x57,
  AD218X_mac_a = 0x58,
  AD218X_mac_b = 0x59,
  AD218X_amf = 0x5A,
  AD218X_shft = 0x5B,
  AD218X_shifter_0 = 0x5C,
  AD218X_shifter_1 = 0x5D,
  AD218X_shifter_2 = 0x5E,
  AD218X_shifter_3 = 0x5F,
  AD218X_shifter_4 = 0x60,
  AD218X_shifter_5 = 0x61,
  AD218X_shifter_6 = 0x62,
  AD218X_shifter_7 = 0x63,
  AD218X_move_0 = 0x64,
  AD218X_move_1 = 0x65,
  AD218X_move_2 = 0x66,
  AD218X_move_3 = 0x67,
  AD218X_move_4 = 0x68,
  AD218X_move_5 = 0x69,
  AD218X_move_6 = 0x6A,
  AD218X_move_7 = 0x6B,
  AD218X_move_8 = 0x6C,
  AD218X_move_9 = 0x6D,
  AD218X_move_a = 0x6E,
  AD218X_move_b = 0x6F,
  AD218X_jump = 0x70,
  AD218X_jump_1 = 0x71,
  AD218X_jump_2 = 0x72,
  AD218X_jump_3 = 0x73,
  AD218X_jump_4 = 0x74,
  AD218X_call = 0x75,
  AD218X_call_1 = 0x76,
  AD218X_call_2 = 0x77,
  AD218X_rts = 0x78,
  AD218X_rts_cond = 0x79,
  AD218X_rti = 0x7A,
  AD218X_rti_cond = 0x7B,
  AD218X_nop = 0x7C,
  AD218X_do = 0x7D,
  AD218X_idle = 0x7E,
  AD218X_idle_1 = 0x7F,
  AD218X_flag_out = 0x80,
  AD218X_stack_ctl = 0x81,
  AD218X_mode_ctl = 0x82,
  AD218X_tops_w = 0x83,
  AD218X_tops_r = 0x84,
  AD218X_ints_dis = 0x85,
  AD218X_ints_ena = 0x86,
  AD218X_modify = 0x87,
  AD218X_double_move = 0x88,
  AD218X_amf_move_0 = 0x89,
  AD218X_amf_move_1 = 0x8A,
  AD218X_amf_move_2 = 0x8B,
  AD218X_amf_move_3 = 0x8C,
  AD218X_amf_move_4 = 0x8D,
  AD218X_amf_move_5 = 0x8E,
  AD218X_amf_move_6 = 0x8F,
  AD218X_amf_move_7 = 0x90,
  AD218X_amf_move_8 = 0x91,
  AD218X_amf_move_9 = 0x92,
  AD218X_amf_move_a = 0x93,
  AD218X_last = 0x94,
};

/* 1789 */
enum _6FF5CD92DCE62DB0AD5B6A8B5D740018 : unsigned __int32
{
  OAK_Dsp_null = 0x0,
  OAK_Dsp_proc = 0x1,
  OAK_Dsp_or = 0x2,
  OAK_Dsp_and = 0x3,
  OAK_Dsp_xor = 0x4,
  OAK_Dsp_add = 0x5,
  OAK_Dsp_alm_tst0 = 0x6,
  OAK_Dsp_alm_tst1 = 0x7,
  OAK_Dsp_cmp = 0x8,
  OAK_Dsp_sub = 0x9,
  OAK_Dsp_alm_msu = 0xA,
  OAK_Dsp_addh = 0xB,
  OAK_Dsp_addl = 0xC,
  OAK_Dsp_subh = 0xD,
  OAK_Dsp_subl = 0xE,
  OAK_Dsp_sqr = 0xF,
  OAK_Dsp_sqra = 0x10,
  OAK_Dsp_cmpu = 0x11,
  OAK_Dsp_shr = 0x12,
  OAK_Dsp_shr4 = 0x13,
  OAK_Dsp_shl = 0x14,
  OAK_Dsp_shl4 = 0x15,
  OAK_Dsp_ror = 0x16,
  OAK_Dsp_rol = 0x17,
  OAK_Dsp_clr = 0x18,
  OAK_Dsp_mod_reserved = 0x19,
  OAK_Dsp_not = 0x1A,
  OAK_Dsp_neg = 0x1B,
  OAK_Dsp_rnd = 0x1C,
  OAK_Dsp_pacr = 0x1D,
  OAK_Dsp_clrr = 0x1E,
  OAK_Dsp_inc = 0x1F,
  OAK_Dsp_dec = 0x20,
  OAK_Dsp_copy = 0x21,
  OAK_Dsp_norm = 0x22,
  OAK_Dsp_divs = 0x23,
  OAK_Dsp_set = 0x24,
  OAK_Dsp_rst = 0x25,
  OAK_Dsp_chng = 0x26,
  OAK_Dsp_addv = 0x27,
  OAK_Dsp_alb_tst0 = 0x28,
  OAK_Dsp_alb_tst1 = 0x29,
  OAK_Dsp_cmpv = 0x2A,
  OAK_Dsp_subv = 0x2B,
  OAK_Dsp_maxd = 0x2C,
  OAK_Dsp_max = 0x2D,
  OAK_Dsp_min = 0x2E,
  OAK_Dsp_lim = 0x2F,
  OAK_Dsp_mpy = 0x30,
  OAK_Dsp_mpysu = 0x31,
  OAK_Dsp_mac = 0x32,
  OAK_Dsp_macus = 0x33,
  OAK_Dsp_maa = 0x34,
  OAK_Dsp_macuu = 0x35,
  OAK_Dsp_macsu = 0x36,
  OAK_Dsp_maasu = 0x37,
  OAK_Dsp_mpyi = 0x38,
  OAK_Dsp_msu = 0x39,
  OAK_Dsp_tstb = 0x3A,
  OAK_Dsp_shfc = 0x3B,
  OAK_Dsp_shfi = 0x3C,
  OAK_Dsp_exp = 0x3D,
  OAK_Dsp_mov = 0x3E,
  OAK_Dsp_movp = 0x3F,
  OAK_Dsp_movs = 0x40,
  OAK_Dsp_movsi = 0x41,
  OAK_Dsp_movr = 0x42,
  OAK_Dsp_movd = 0x43,
  OAK_Dsp_push = 0x44,
  OAK_Dsp_pop = 0x45,
  OAK_Dsp_swap = 0x46,
  OAK_Dsp_banke = 0x47,
  OAK_Dsp_rep = 0x48,
  OAK_Dsp_bkrep = 0x49,
  OAK_Dsp_break = 0x4A,
  OAK_Dsp_br = 0x4B,
  OAK_Dsp_brr = 0x4C,
  OAK_Dsp_br_u = 0x4D,
  OAK_Dsp_brr_u = 0x4E,
  OAK_Dsp_call = 0x4F,
  OAK_Dsp_callr = 0x50,
  OAK_Dsp_calla = 0x51,
  OAK_Dsp_ret = 0x52,
  OAK_Dsp_ret_u = 0x53,
  OAK_Dsp_retd = 0x54,
  OAK_Dsp_reti = 0x55,
  OAK_Dsp_reti_u = 0x56,
  OAK_Dsp_retid = 0x57,
  OAK_Dsp_rets = 0x58,
  OAK_Dsp_cntx = 0x59,
  OAK_Dsp_nop = 0x5A,
  OAK_Dsp_modr = 0x5B,
  OAK_Dsp_dint = 0x5C,
  OAK_Dsp_eint = 0x5D,
  OAK_Dsp_trap = 0x5E,
  OAK_Dsp_lpg = 0x5F,
  OAK_Dsp_load = 0x60,
  OAK_Dsp_mov_eu = 0x61,
  OAK_Dsp_last = 0x62,
};

/* 1790 */
enum _7D2E628AE302D35528CA806CA05E5F16 : unsigned __int32
{
  T900_null = 0x0,
  T900_ld = 0x1,
  T900_ldw = 0x2,
  T900_push = 0x3,
  T900_pushw = 0x4,
  T900_pop = 0x5,
  T900_popw = 0x6,
  T900_lda = 0x7,
  T900_ldar = 0x8,
  T900_ex = 0x9,
  T900_mirr = 0xA,
  T900_ldi = 0xB,
  T900_ldiw = 0xC,
  T900_ldir = 0xD,
  T900_ldirw = 0xE,
  T900_ldd = 0xF,
  T900_lddw = 0x10,
  T900_lddr = 0x11,
  T900_lddrw = 0x12,
  T900_cpi = 0x13,
  T900_cpir = 0x14,
  T900_cpd = 0x15,
  T900_cpdr = 0x16,
  T900_add = 0x17,
  T900_addw = 0x18,
  T900_adc = 0x19,
  T900_adcw = 0x1A,
  T900_sub = 0x1B,
  T900_subw = 0x1C,
  T900_sbc = 0x1D,
  T900_sbcw = 0x1E,
  T900_cp = 0x1F,
  T900_cpw = 0x20,
  T900_inc = 0x21,
  T900_incw = 0x22,
  T900_dec = 0x23,
  T900_decw = 0x24,
  T900_neg = 0x25,
  T900_extz = 0x26,
  T900_exts = 0x27,
  T900_daa = 0x28,
  T900_paa = 0x29,
  T900_cpl = 0x2A,
  T900_mul = 0x2B,
  T900_muls = 0x2C,
  T900_div = 0x2D,
  T900_divs = 0x2E,
  T900_mula = 0x2F,
  T900_minc1 = 0x30,
  T900_minc2 = 0x31,
  T900_minc4 = 0x32,
  T900_mdec1 = 0x33,
  T900_mdec2 = 0x34,
  T900_mdec4 = 0x35,
  T900_and = 0x36,
  T900_andw = 0x37,
  T900_or = 0x38,
  T900_orw = 0x39,
  T900_xor = 0x3A,
  T900_xorw = 0x3B,
  T900_ldcf = 0x3C,
  T900_stcf = 0x3D,
  T900_andcf = 0x3E,
  T900_orcf = 0x3F,
  T900_xorcf = 0x40,
  T900_rcf = 0x41,
  T900_scf = 0x42,
  T900_ccf = 0x43,
  T900_zcf = 0x44,
  T900_bit = 0x45,
  T900_res = 0x46,
  T900_set = 0x47,
  T900_chg = 0x48,
  T900_tset = 0x49,
  T900_bs1f = 0x4A,
  T900_bs1b = 0x4B,
  T900_nop = 0x4C,
  T900_ei = 0x4D,
  T900_di = 0x4E,
  T900_swi = 0x4F,
  T900_halt = 0x50,
  T900_ldc = 0x51,
  T900_ldx = 0x52,
  T900_link = 0x53,
  T900_unlk = 0x54,
  T900_ldf = 0x55,
  T900_incf = 0x56,
  T900_decf = 0x57,
  T900_scc = 0x58,
  T900_rlc = 0x59,
  T900_rlc_mem = 0x5A,
  T900_rlcw_mem = 0x5B,
  T900_rrc = 0x5C,
  T900_rrc_mem = 0x5D,
  T900_rrcw_mem = 0x5E,
  T900_rl = 0x5F,
  T900_rl_mem = 0x60,
  T900_rlw_mem = 0x61,
  T900_rr = 0x62,
  T900_rr_mem = 0x63,
  T900_rrw_mem = 0x64,
  T900_sla = 0x65,
  T900_sla_mem = 0x66,
  T900_slaw_mem = 0x67,
  T900_sra = 0x68,
  T900_sra_mem = 0x69,
  T900_sraw_mem = 0x6A,
  T900_sll = 0x6B,
  T900_sll_mem = 0x6C,
  T900_sllw_mem = 0x6D,
  T900_srl = 0x6E,
  T900_srl_mem = 0x6F,
  T900_srlw_mem = 0x70,
  T900_rld = 0x71,
  T900_rrd = 0x72,
  T900_jp = 0x73,
  T900_jp_cond = 0x74,
  T900_jr = 0x75,
  T900_jr_cond = 0x76,
  T900_jrl = 0x77,
  T900_jrl_cond = 0x78,
  T900_call = 0x79,
  T900_calr = 0x7A,
  T900_djnz = 0x7B,
  T900_ret = 0x7C,
  T900_ret_cond = 0x7D,
  T900_retd = 0x7E,
  T900_reti = 0x7F,
  T900_max = 0x80,
  T900_normal = 0x81,
  T900_last = 0x82,
};

/* 1791 */
enum _639195EAA19AF7270991831C59DF6BBF : unsigned __int32
{
  C39_null = 0x0,
  C39_adc = 0x1,
  C39_add = 0x2,
  C39_anc = 0x3,
  C39_and = 0x4,
  C39_ane = 0x5,
  C39_arr = 0x6,
  C39_asl = 0x7,
  C39_asr = 0x8,
  C39_bar = 0x9,
  C39_bas = 0xA,
  C39_bbr = 0xB,
  C39_bbs = 0xC,
  C39_bcc = 0xD,
  C39_bcs = 0xE,
  C39_beq = 0xF,
  C39_bit = 0x10,
  C39_bmi = 0x11,
  C39_bne = 0x12,
  C39_bpl = 0x13,
  C39_bra = 0x14,
  C39_brk = 0x15,
  C39_bvc = 0x16,
  C39_bvs = 0x17,
  C39_clc = 0x18,
  C39_cld = 0x19,
  C39_cli = 0x1A,
  C39_clv = 0x1B,
  C39_clw = 0x1C,
  C39_cmp = 0x1D,
  C39_cpx = 0x1E,
  C39_cpy = 0x1F,
  C39_dcp = 0x20,
  C39_dec = 0x21,
  C39_dex = 0x22,
  C39_dey = 0x23,
  C39_eor = 0x24,
  C39_exc = 0x25,
  C39_inc = 0x26,
  C39_ini = 0x27,
  C39_inx = 0x28,
  C39_iny = 0x29,
  C39_isb = 0x2A,
  C39_jmp = 0x2B,
  C39_jpi = 0x2C,
  C39_jsb = 0x2D,
  C39_jsr = 0x2E,
  C39_lab = 0x2F,
  C39_lae = 0x30,
  C39_lai = 0x31,
  C39_lan = 0x32,
  C39_lax = 0x33,
  C39_lda = 0x34,
  C39_ldx = 0x35,
  C39_ldy = 0x36,
  C39_lii = 0x37,
  C39_lsr = 0x38,
  C39_lxa = 0x39,
  C39_mpa = 0x3A,
  C39_mpy = 0x3B,
  C39_neg = 0x3C,
  C39_nop = 0x3D,
  C39_nxt = 0x3E,
  C39_ora = 0x3F,
  C39_pha = 0x40,
  C39_phi = 0x41,
  C39_php = 0x42,
  C39_phw = 0x43,
  C39_phx = 0x44,
  C39_phy = 0x45,
  C39_pia = 0x46,
  C39_pla = 0x47,
  C39_pli = 0x48,
  C39_plp = 0x49,
  C39_plw = 0x4A,
  C39_plx = 0x4B,
  C39_ply = 0x4C,
  C39_psh = 0x4D,
  C39_pul = 0x4E,
  C39_rba = 0x4F,
  C39_rla = 0x50,
  C39_rmb = 0x51,
  C39_rnd = 0x52,
  C39_rol = 0x53,
  C39_ror = 0x54,
  C39_rra = 0x55,
  C39_rti = 0x56,
  C39_rts = 0x57,
  C39_sax = 0x58,
  C39_sba = 0x59,
  C39_sbc = 0x5A,
  C39_sbx = 0x5B,
  C39_sec = 0x5C,
  C39_sed = 0x5D,
  C39_sei = 0x5E,
  C39_sha = 0x5F,
  C39_shs = 0x60,
  C39_shx = 0x61,
  C39_shy = 0x62,
  C39_slo = 0x63,
  C39_smb = 0x64,
  C39_sre = 0x65,
  C39_sta = 0x66,
  C39_sti = 0x67,
  C39_stx = 0x68,
  C39_sty = 0x69,
  C39_tax = 0x6A,
  C39_tay = 0x6B,
  C39_taw = 0x6C,
  C39_tip = 0x6D,
  C39_tsx = 0x6E,
  C39_twa = 0x6F,
  C39_txa = 0x70,
  C39_txs = 0x71,
  C39_tya = 0x72,
  C39_last = 0x73,
};

/* 1792 */
enum _94A42225DA7B79B57C74D8E69075BD91 : unsigned __int32
{
  CR16_null = 0x0,
  CR16_addb = 0x1,
  CR16_addw = 0x2,
  CR16_addub = 0x3,
  CR16_adduw = 0x4,
  CR16_addcb = 0x5,
  CR16_addcw = 0x6,
  CR16_andb = 0x7,
  CR16_andw = 0x8,
  CR16_ashub = 0x9,
  CR16_ashuw = 0xA,
  CR16_beq = 0xB,
  CR16_bne = 0xC,
  CR16_bcs = 0xD,
  CR16_bcc = 0xE,
  CR16_bhi = 0xF,
  CR16_bls = 0x10,
  CR16_bgt = 0x11,
  CR16_ble = 0x12,
  CR16_bfs = 0x13,
  CR16_bfc = 0x14,
  CR16_blo = 0x15,
  CR16_bhs = 0x16,
  CR16_blt = 0x17,
  CR16_bge = 0x18,
  CR16_br = 0x19,
  CR16_bal = 0x1A,
  CR16_cmpb = 0x1B,
  CR16_cmpw = 0x1C,
  CR16_beq1b = 0x1D,
  CR16_beq1w = 0x1E,
  CR16_beq0b = 0x1F,
  CR16_beq0w = 0x20,
  CR16_bne1b = 0x21,
  CR16_bne1w = 0x22,
  CR16_bne0b = 0x23,
  CR16_bne0w = 0x24,
  CR16_di = 0x25,
  CR16_ei = 0x26,
  CR16_excp = 0x27,
  CR16_jeq = 0x28,
  CR16_jne = 0x29,
  CR16_jcs = 0x2A,
  CR16_jcc = 0x2B,
  CR16_jhi = 0x2C,
  CR16_jls = 0x2D,
  CR16_jgt = 0x2E,
  CR16_jle = 0x2F,
  CR16_jfs = 0x30,
  CR16_jfc = 0x31,
  CR16_jlo = 0x32,
  CR16_jhs = 0x33,
  CR16_jlt = 0x34,
  CR16_jge = 0x35,
  CR16_jump = 0x36,
  CR16_jal = 0x37,
  CR16_loadb = 0x38,
  CR16_loadw = 0x39,
  CR16_loadm = 0x3A,
  CR16_lpr = 0x3B,
  CR16_lshb = 0x3C,
  CR16_lshw = 0x3D,
  CR16_movb = 0x3E,
  CR16_movw = 0x3F,
  CR16_movxb = 0x40,
  CR16_movzb = 0x41,
  CR16_movd = 0x42,
  CR16_mulb = 0x43,
  CR16_mulw = 0x44,
  CR16_mulsb = 0x45,
  CR16_mulsw = 0x46,
  CR16_muluw = 0x47,
  CR16_nop = 0x48,
  CR16_orb = 0x49,
  CR16_orw = 0x4A,
  CR16_push = 0x4B,
  CR16_pop = 0x4C,
  CR16_popret = 0x4D,
  CR16_retx = 0x4E,
  CR16_seq = 0x4F,
  CR16_sne = 0x50,
  CR16_scs = 0x51,
  CR16_scc = 0x52,
  CR16_shi = 0x53,
  CR16_sls = 0x54,
  CR16_sgt = 0x55,
  CR16_sle = 0x56,
  CR16_sfs = 0x57,
  CR16_sfc = 0x58,
  CR16_slo = 0x59,
  CR16_shs = 0x5A,
  CR16_slt = 0x5B,
  CR16_sge = 0x5C,
  CR16_spr = 0x5D,
  CR16_storb = 0x5E,
  CR16_storw = 0x5F,
  CR16_storm = 0x60,
  CR16_subb = 0x61,
  CR16_subw = 0x62,
  CR16_subcb = 0x63,
  CR16_subcw = 0x64,
  CR16_tbit = 0x65,
  CR16_tbitb = 0x66,
  CR16_tbitw = 0x67,
  CR16_sbitb = 0x68,
  CR16_sbitw = 0x69,
  CR16_cbitb = 0x6A,
  CR16_cbitw = 0x6B,
  CR16_wait = 0x6C,
  CR16_eiwait = 0x6D,
  CR16_xorb = 0x6E,
  CR16_xorw = 0x6F,
  CR16_last = 0x70,
};

/* 1793 */
enum _3FDFCB95F2753C79F6E41FB03999C998 : unsigned __int32
{
  mn102_null = 0x0,
  mn102_add = 0x1,
  mn102_addc = 0x2,
  mn102_addnf = 0x3,
  mn102_and = 0x4,
  mn102_asr = 0x5,
  mn102_bcc = 0x6,
  mn102_bccx = 0x7,
  mn102_bclr = 0x8,
  mn102_bcs = 0x9,
  mn102_bcsx = 0xA,
  mn102_beq = 0xB,
  mn102_beqx = 0xC,
  mn102_bge = 0xD,
  mn102_bgex = 0xE,
  mn102_bgt = 0xF,
  mn102_bgtx = 0x10,
  mn102_bhi = 0x11,
  mn102_bhix = 0x12,
  mn102_ble = 0x13,
  mn102_blex = 0x14,
  mn102_bls = 0x15,
  mn102_blsx = 0x16,
  mn102_blt = 0x17,
  mn102_bltx = 0x18,
  mn102_bnc = 0x19,
  mn102_bncx = 0x1A,
  mn102_bne = 0x1B,
  mn102_bnex = 0x1C,
  mn102_bns = 0x1D,
  mn102_bnsx = 0x1E,
  mn102_bra = 0x1F,
  mn102_bset = 0x20,
  mn102_btst = 0x21,
  mn102_bvc = 0x22,
  mn102_bvcx = 0x23,
  mn102_bvs = 0x24,
  mn102_bvsx = 0x25,
  mn102_cmp = 0x26,
  mn102_divu = 0x27,
  mn102_ext = 0x28,
  mn102_extx = 0x29,
  mn102_extxb = 0x2A,
  mn102_extxbu = 0x2B,
  mn102_extxu = 0x2C,
  mn102_jmp = 0x2D,
  mn102_jsr = 0x2E,
  mn102_lsr = 0x2F,
  mn102_mov = 0x30,
  mn102_movb = 0x31,
  mn102_movbu = 0x32,
  mn102_movx = 0x33,
  mn102_mul = 0x34,
  mn102_mulq = 0x35,
  mn102_mulqh = 0x36,
  mn102_mulql = 0x37,
  mn102_mulu = 0x38,
  mn102_nop = 0x39,
  mn102_not = 0x3A,
  mn102_or = 0x3B,
  mn102_pxst = 0x3C,
  mn102_rol = 0x3D,
  mn102_ror = 0x3E,
  mn102_rti = 0x3F,
  mn102_rts = 0x40,
  mn102_sub = 0x41,
  mn102_subc = 0x42,
  mn102_tbnz = 0x43,
  mn102_tbz = 0x44,
  mn102_xor = 0x45,
  mn102_last = 0x46,
};

/* 1794 */
enum _9AD262722AB1BD11DCBD94EE84EF9EE0 : unsigned __int32
{
  PPC_null = 0x0,
  PPC_add = 0x1,
  PPC_addc = 0x2,
  PPC_adde = 0x3,
  PPC_addi = 0x4,
  PPC_addic = 0x5,
  PPC_addis = 0x6,
  PPC_addme = 0x7,
  PPC_addze = 0x8,
  PPC_and = 0x9,
  PPC_andc = 0xA,
  PPC_andi = 0xB,
  PPC_andis = 0xC,
  PPC_b = 0xD,
  PPC_bc = 0xE,
  PPC_bcctr = 0xF,
  PPC_bclr = 0x10,
  PPC_cmp = 0x11,
  PPC_cmpi = 0x12,
  PPC_cmpl = 0x13,
  PPC_cmpli = 0x14,
  PPC_cntlzd = 0x15,
  PPC_cntlzw = 0x16,
  PPC_crand = 0x17,
  PPC_crandc = 0x18,
  PPC_creqv = 0x19,
  PPC_crnand = 0x1A,
  PPC_crnor = 0x1B,
  PPC_cror = 0x1C,
  PPC_crorc = 0x1D,
  PPC_crxor = 0x1E,
  PPC_dcba = 0x1F,
  PPC_dcbf = 0x20,
  PPC_dcbi = 0x21,
  PPC_dcbst = 0x22,
  PPC_dcbt = 0x23,
  PPC_dcbtst = 0x24,
  PPC_dcbz = 0x25,
  PPC_divd = 0x26,
  PPC_divdu = 0x27,
  PPC_divw = 0x28,
  PPC_divwu = 0x29,
  PPC_eciwx = 0x2A,
  PPC_ecowx = 0x2B,
  PPC_eieio = 0x2C,
  PPC_eqv = 0x2D,
  PPC_extsb = 0x2E,
  PPC_extsh = 0x2F,
  PPC_extsw = 0x30,
  PPC_fabs = 0x31,
  PPC_fadd = 0x32,
  PPC_fadds = 0x33,
  PPC_fcfid = 0x34,
  PPC_fcmpo = 0x35,
  PPC_fcmpu = 0x36,
  PPC_fctid = 0x37,
  PPC_fctidz = 0x38,
  PPC_fctiw = 0x39,
  PPC_fctiwz = 0x3A,
  PPC_fdiv = 0x3B,
  PPC_fdivs = 0x3C,
  PPC_fmadd = 0x3D,
  PPC_fmadds = 0x3E,
  PPC_fmr = 0x3F,
  PPC_fmsub = 0x40,
  PPC_fmsubs = 0x41,
  PPC_fmul = 0x42,
  PPC_fmuls = 0x43,
  PPC_fnabs = 0x44,
  PPC_fneg = 0x45,
  PPC_fnmadd = 0x46,
  PPC_fnmadds = 0x47,
  PPC_fnmsub = 0x48,
  PPC_fnmsubs = 0x49,
  PPC_fres = 0x4A,
  PPC_frsp = 0x4B,
  PPC_frsqrte = 0x4C,
  PPC_fsel = 0x4D,
  PPC_fsqrt = 0x4E,
  PPC_fsqrts = 0x4F,
  PPC_fsub = 0x50,
  PPC_fsubs = 0x51,
  PPC_icbi = 0x52,
  PPC_isync = 0x53,
  PPC_lbz = 0x54,
  PPC_lbzu = 0x55,
  PPC_lbzux = 0x56,
  PPC_lbzx = 0x57,
  PPC_ld = 0x58,
  PPC_ldarx = 0x59,
  PPC_ldu = 0x5A,
  PPC_ldux = 0x5B,
  PPC_ldx = 0x5C,
  PPC_lfd = 0x5D,
  PPC_lfdu = 0x5E,
  PPC_lfdux = 0x5F,
  PPC_lfdx = 0x60,
  PPC_lfs = 0x61,
  PPC_lfsu = 0x62,
  PPC_lfsux = 0x63,
  PPC_lfsx = 0x64,
  PPC_lha = 0x65,
  PPC_lhau = 0x66,
  PPC_lhaux = 0x67,
  PPC_lhax = 0x68,
  PPC_lhbrx = 0x69,
  PPC_lhz = 0x6A,
  PPC_lhzu = 0x6B,
  PPC_lhzux = 0x6C,
  PPC_lhzx = 0x6D,
  PPC_lmw = 0x6E,
  PPC_lswi = 0x6F,
  PPC_lswx = 0x70,
  PPC_lwa = 0x71,
  PPC_lwarx = 0x72,
  PPC_lwaux = 0x73,
  PPC_lwax = 0x74,
  PPC_lwbrx = 0x75,
  PPC_lwz = 0x76,
  PPC_lwzu = 0x77,
  PPC_lwzux = 0x78,
  PPC_lwzx = 0x79,
  PPC_mcrf = 0x7A,
  PPC_mcrfs = 0x7B,
  PPC_mcrxr = 0x7C,
  PPC_mfcr = 0x7D,
  PPC_mffs = 0x7E,
  PPC_mfmsr = 0x7F,
  PPC_mfspr = 0x80,
  PPC_mfsr = 0x81,
  PPC_mfsrin = 0x82,
  PPC_mftb = 0x83,
  PPC_mtcrf = 0x84,
  PPC_mtfsb0 = 0x85,
  PPC_mtfsb1 = 0x86,
  PPC_mtfsf = 0x87,
  PPC_mtfsfi = 0x88,
  PPC_mtmsr = 0x89,
  PPC_mtmsrd = 0x8A,
  PPC_mtspr = 0x8B,
  PPC_mtsr = 0x8C,
  PPC_mtsrd = 0x8D,
  PPC_mtsrdin = 0x8E,
  PPC_mtsrin = 0x8F,
  PPC_mulhd = 0x90,
  PPC_mulhdu = 0x91,
  PPC_mulhw = 0x92,
  PPC_mulhwu = 0x93,
  PPC_mulld = 0x94,
  PPC_mulli = 0x95,
  PPC_mullw = 0x96,
  PPC_nand = 0x97,
  PPC_neg = 0x98,
  PPC_nor = 0x99,
  PPC_or = 0x9A,
  PPC_orc = 0x9B,
  PPC_ori = 0x9C,
  PPC_oris = 0x9D,
  PPC_rfi = 0x9E,
  PPC_rfid = 0x9F,
  PPC_rldcl = 0xA0,
  PPC_rldcr = 0xA1,
  PPC_rldic = 0xA2,
  PPC_rldicl = 0xA3,
  PPC_rldicr = 0xA4,
  PPC_rldimi = 0xA5,
  PPC_rlwimi = 0xA6,
  PPC_rlwinm = 0xA7,
  PPC_rlwnm = 0xA8,
  PPC_sc = 0xA9,
  PPC_slbia = 0xAA,
  PPC_slbie = 0xAB,
  PPC_sld = 0xAC,
  PPC_slw = 0xAD,
  PPC_srad = 0xAE,
  PPC_sradi = 0xAF,
  PPC_sraw = 0xB0,
  PPC_srawi = 0xB1,
  PPC_srd = 0xB2,
  PPC_srw = 0xB3,
  PPC_stb = 0xB4,
  PPC_stbu = 0xB5,
  PPC_stbux = 0xB6,
  PPC_stbx = 0xB7,
  PPC_std = 0xB8,
  PPC_stdcx = 0xB9,
  PPC_stdu = 0xBA,
  PPC_stdux = 0xBB,
  PPC_stdx = 0xBC,
  PPC_stfd = 0xBD,
  PPC_stfdu = 0xBE,
  PPC_stfdux = 0xBF,
  PPC_stfdx = 0xC0,
  PPC_stfiwx = 0xC1,
  PPC_stfs = 0xC2,
  PPC_stfsu = 0xC3,
  PPC_stfsux = 0xC4,
  PPC_stfsx = 0xC5,
  PPC_sth = 0xC6,
  PPC_sthbrx = 0xC7,
  PPC_sthu = 0xC8,
  PPC_sthux = 0xC9,
  PPC_sthx = 0xCA,
  PPC_stmw = 0xCB,
  PPC_stswi = 0xCC,
  PPC_stswx = 0xCD,
  PPC_stw = 0xCE,
  PPC_stwbrx = 0xCF,
  PPC_stwcx = 0xD0,
  PPC_stwu = 0xD1,
  PPC_stwux = 0xD2,
  PPC_stwx = 0xD3,
  PPC_subf = 0xD4,
  PPC_subfc = 0xD5,
  PPC_subfe = 0xD6,
  PPC_subfic = 0xD7,
  PPC_subfme = 0xD8,
  PPC_subfze = 0xD9,
  PPC_sync = 0xDA,
  PPC_td = 0xDB,
  PPC_tdi = 0xDC,
  PPC_tlbia = 0xDD,
  PPC_tlbie = 0xDE,
  PPC_tlbsync = 0xDF,
  PPC_tw = 0xE0,
  PPC_twi = 0xE1,
  PPC_xor = 0xE2,
  PPC_xori = 0xE3,
  PPC_xoris = 0xE4,
  PPC_last_basic = 0xE4,
  PPC_cmpwi = 0xE5,
  PPC_cmpw = 0xE6,
  PPC_cmplwi = 0xE7,
  PPC_cmplw = 0xE8,
  PPC_cmpdi = 0xE9,
  PPC_cmpd = 0xEA,
  PPC_cmpldi = 0xEB,
  PPC_cmpld = 0xEC,
  PPC_trap = 0xED,
  PPC_trapd = 0xEE,
  PPC_twlgt = 0xEF,
  PPC_twllt = 0xF0,
  PPC_tweq = 0xF1,
  PPC_twlge = 0xF2,
  PPC_twlle = 0xF3,
  PPC_twgt = 0xF4,
  PPC_twge = 0xF5,
  PPC_twlt = 0xF6,
  PPC_twle = 0xF7,
  PPC_twne = 0xF8,
  PPC_twlgti = 0xF9,
  PPC_twllti = 0xFA,
  PPC_tweqi = 0xFB,
  PPC_twlgei = 0xFC,
  PPC_twllei = 0xFD,
  PPC_twgti = 0xFE,
  PPC_twgei = 0xFF,
  PPC_twlti = 0x100,
  PPC_twlei = 0x101,
  PPC_twnei = 0x102,
  PPC_tdlgt = 0x103,
  PPC_tdllt = 0x104,
  PPC_tdeq = 0x105,
  PPC_tdlge = 0x106,
  PPC_tdlle = 0x107,
  PPC_tdgt = 0x108,
  PPC_tdge = 0x109,
  PPC_tdlt = 0x10A,
  PPC_tdle = 0x10B,
  PPC_tdne = 0x10C,
  PPC_tdlgti = 0x10D,
  PPC_tdllti = 0x10E,
  PPC_tdeqi = 0x10F,
  PPC_tdlgei = 0x110,
  PPC_tdllei = 0x111,
  PPC_tdgti = 0x112,
  PPC_tdgei = 0x113,
  PPC_tdlti = 0x114,
  PPC_tdlei = 0x115,
  PPC_tdnei = 0x116,
  PPC_nop = 0x117,
  PPC_not = 0x118,
  PPC_mr = 0x119,
  PPC_subi = 0x11A,
  PPC_subic = 0x11B,
  PPC_subis = 0x11C,
  PPC_li = 0x11D,
  PPC_lis = 0x11E,
  PPC_crset = 0x11F,
  PPC_crnot = 0x120,
  PPC_crmove = 0x121,
  PPC_crclr = 0x122,
  PPC_mtxer = 0x123,
  PPC_mtlr = 0x124,
  PPC_mtctr = 0x125,
  PPC_mtdsisr = 0x126,
  PPC_mtdar = 0x127,
  PPC_mtdec = 0x128,
  PPC_mtsrr0 = 0x129,
  PPC_mtsrr1 = 0x12A,
  PPC_mtsprg0 = 0x12B,
  PPC_mtsprg1 = 0x12C,
  PPC_mtsprg2 = 0x12D,
  PPC_mtsprg3 = 0x12E,
  PPC_mttbl = 0x12F,
  PPC_mttbu = 0x130,
  PPC_mfxer = 0x131,
  PPC_mflr = 0x132,
  PPC_mfctr = 0x133,
  PPC_mfdsisr = 0x134,
  PPC_mfdar = 0x135,
  PPC_mfdec = 0x136,
  PPC_mfsrr0 = 0x137,
  PPC_mfsrr1 = 0x138,
  PPC_mfsprg0 = 0x139,
  PPC_mfsprg1 = 0x13A,
  PPC_mfsprg2 = 0x13B,
  PPC_mfsprg3 = 0x13C,
  PPC_mftbl = 0x13D,
  PPC_mftbu = 0x13E,
  PPC_mfpvr = 0x13F,
  PPC_balways = 0x140,
  PPC_bt = 0x141,
  PPC_bf = 0x142,
  PPC_bdnz = 0x143,
  PPC_bdnzt = 0x144,
  PPC_bdnzf = 0x145,
  PPC_bdz = 0x146,
  PPC_bdzt = 0x147,
  PPC_bdzf = 0x148,
  PPC_blt = 0x149,
  PPC_ble = 0x14A,
  PPC_beq = 0x14B,
  PPC_bge = 0x14C,
  PPC_bgt = 0x14D,
  PPC_bne = 0x14E,
  PPC_bso = 0x14F,
  PPC_bns = 0x150,
  PPC_extlwi = 0x151,
  PPC_extrwi = 0x152,
  PPC_inslwi = 0x153,
  PPC_insrwi = 0x154,
  PPC_rotlwi = 0x155,
  PPC_rotrwi = 0x156,
  PPC_rotlw = 0x157,
  PPC_slwi = 0x158,
  PPC_srwi = 0x159,
  PPC_clrlwi = 0x15A,
  PPC_clrrwi = 0x15B,
  PPC_clrlslwi = 0x15C,
  PPC_dccci = 0x15D,
  PPC_dcread = 0x15E,
  PPC_icbt = 0x15F,
  PPC_iccci = 0x160,
  PPC_icread = 0x161,
  PPC_mfdcr = 0x162,
  PPC_mtdcr = 0x163,
  PPC_rfci = 0x164,
  PPC_tlbre = 0x165,
  PPC_tlbsx = 0x166,
  PPC_tlbwe = 0x167,
  PPC_wrtee = 0x168,
  PPC_wrteei = 0x169,
  PPC_abs = 0x16A,
  PPC_clcs = 0x16B,
  PPC_clf = 0x16C,
  PPC_cli = 0x16D,
  PPC_dclst = 0x16E,
  PPC_div = 0x16F,
  PPC_divs = 0x170,
  PPC_doz = 0x171,
  PPC_dozi = 0x172,
  PPC_frsqrtes = 0x173,
  PPC_hrfid = 0x174,
  PPC_lscbx = 0x175,
  PPC_maskg = 0x176,
  PPC_maskir = 0x177,
  PPC_mfsri = 0x178,
  PPC_mul = 0x179,
  PPC_nabs = 0x17A,
  PPC_popcntb = 0x17B,
  PPC_rac = 0x17C,
  PPC_rfsvc = 0x17D,
  PPC_rlmi = 0x17E,
  PPC_rrib = 0x17F,
  PPC_slbmfee = 0x180,
  PPC_slbmfev = 0x181,
  PPC_slbmte = 0x182,
  PPC_sle = 0x183,
  PPC_sleq = 0x184,
  PPC_sliq = 0x185,
  PPC_slliq = 0x186,
  PPC_sllq = 0x187,
  PPC_slq = 0x188,
  PPC_sraiq = 0x189,
  PPC_sraq = 0x18A,
  PPC_sre = 0x18B,
  PPC_srea = 0x18C,
  PPC_sreq = 0x18D,
  PPC_sriq = 0x18E,
  PPC_srliq = 0x18F,
  PPC_srlq = 0x190,
  PPC_srq = 0x191,
  PPC_mtocrf = 0x192,
  PPC_mfocrf = 0x193,
  PPC_isel = 0x194,
  PPC_isellt = 0x195,
  PPC_iselgt = 0x196,
  PPC_iseleq = 0x197,
  PPC_dcblc = 0x198,
  PPC_dcbtls = 0x199,
  PPC_dcbtstls = 0x19A,
  PPC_icblc = 0x19B,
  PPC_icbtls = 0x19C,
  PPC_tlbivax = 0x19D,
  PPC_rfdi = 0x19E,
  PPC_tlbld = 0x19F,
  PPC_tlbli = 0x1A0,
  PPC_brinc = 0x1A1,
  PPC_evabs = 0x1A2,
  PPC_evaddiw = 0x1A3,
  PPC_evaddsmiaaw = 0x1A4,
  PPC_evaddssiaaw = 0x1A5,
  PPC_evaddumiaaw = 0x1A6,
  PPC_evaddusiaaw = 0x1A7,
  PPC_evaddw = 0x1A8,
  PPC_evand = 0x1A9,
  PPC_evandc = 0x1AA,
  PPC_evcmpeq = 0x1AB,
  PPC_evcmpgts = 0x1AC,
  PPC_evcmpgtu = 0x1AD,
  PPC_evcmplts = 0x1AE,
  PPC_evcmpltu = 0x1AF,
  PPC_evcntlsw = 0x1B0,
  PPC_evcntlzw = 0x1B1,
  PPC_evdivws = 0x1B2,
  PPC_evdivwu = 0x1B3,
  PPC_eveqv = 0x1B4,
  PPC_evextsb = 0x1B5,
  PPC_evextsh = 0x1B6,
  PPC_evldd = 0x1B7,
  PPC_evlddx = 0x1B8,
  PPC_evldh = 0x1B9,
  PPC_evldhx = 0x1BA,
  PPC_evldw = 0x1BB,
  PPC_evldwx = 0x1BC,
  PPC_evlhhesplat = 0x1BD,
  PPC_evlhhesplatx = 0x1BE,
  PPC_evlhhossplat = 0x1BF,
  PPC_evlhhossplatx = 0x1C0,
  PPC_evlhhousplat = 0x1C1,
  PPC_evlhhousplatx = 0x1C2,
  PPC_evlwhe = 0x1C3,
  PPC_evlwhex = 0x1C4,
  PPC_evlwhos = 0x1C5,
  PPC_evlwhosx = 0x1C6,
  PPC_evlwhou = 0x1C7,
  PPC_evlwhoux = 0x1C8,
  PPC_evlwhsplat = 0x1C9,
  PPC_evlwhsplatx = 0x1CA,
  PPC_evlwwsplat = 0x1CB,
  PPC_evlwwsplatx = 0x1CC,
  PPC_evmergehi = 0x1CD,
  PPC_evmergehilo = 0x1CE,
  PPC_evmergelo = 0x1CF,
  PPC_evmergelohi = 0x1D0,
  PPC_evmhegsmfaa = 0x1D1,
  PPC_evmhegsmfan = 0x1D2,
  PPC_evmhegsmiaa = 0x1D3,
  PPC_evmhegsmian = 0x1D4,
  PPC_evmhegumiaa = 0x1D5,
  PPC_evmhegumian = 0x1D6,
  PPC_evmhesmf = 0x1D7,
  PPC_evmhesmfa = 0x1D8,
  PPC_evmhesmfaaw = 0x1D9,
  PPC_evmhesmfanw = 0x1DA,
  PPC_evmhesmi = 0x1DB,
  PPC_evmhesmia = 0x1DC,
  PPC_evmhesmiaaw = 0x1DD,
  PPC_evmhesmianw = 0x1DE,
  PPC_evmhessf = 0x1DF,
  PPC_evmhessfa = 0x1E0,
  PPC_evmhessfaaw = 0x1E1,
  PPC_evmhessfanw = 0x1E2,
  PPC_evmhessiaaw = 0x1E3,
  PPC_evmhessianw = 0x1E4,
  PPC_evmheumi = 0x1E5,
  PPC_evmheumia = 0x1E6,
  PPC_evmheumiaaw = 0x1E7,
  PPC_evmheumianw = 0x1E8,
  PPC_evmheusiaaw = 0x1E9,
  PPC_evmheusianw = 0x1EA,
  PPC_evmhogsmfaa = 0x1EB,
  PPC_evmhogsmfan = 0x1EC,
  PPC_evmhogsmiaa = 0x1ED,
  PPC_evmhogsmian = 0x1EE,
  PPC_evmhogumiaa = 0x1EF,
  PPC_evmhogumian = 0x1F0,
  PPC_evmhosmf = 0x1F1,
  PPC_evmhosmfa = 0x1F2,
  PPC_evmhosmfaaw = 0x1F3,
  PPC_evmhosmfanw = 0x1F4,
  PPC_evmhosmi = 0x1F5,
  PPC_evmhosmia = 0x1F6,
  PPC_evmhosmiaaw = 0x1F7,
  PPC_evmhosmianw = 0x1F8,
  PPC_evmhossf = 0x1F9,
  PPC_evmhossfa = 0x1FA,
  PPC_evmhossfaaw = 0x1FB,
  PPC_evmhossfanw = 0x1FC,
  PPC_evmhossiaaw = 0x1FD,
  PPC_evmhossianw = 0x1FE,
  PPC_evmhoumi = 0x1FF,
  PPC_evmhoumia = 0x200,
  PPC_evmhoumiaaw = 0x201,
  PPC_evmhoumianw = 0x202,
  PPC_evmhousiaaw = 0x203,
  PPC_evmhousianw = 0x204,
  PPC_evmra = 0x205,
  PPC_evmwhsmf = 0x206,
  PPC_evmwhsmfa = 0x207,
  PPC_evmwhsmi = 0x208,
  PPC_evmwhsmia = 0x209,
  PPC_evmwhssf = 0x20A,
  PPC_evmwhssfa = 0x20B,
  PPC_evmwhumi = 0x20C,
  PPC_evmwhumia = 0x20D,
  PPC_evmwlsmiaaw = 0x20E,
  PPC_evmwlsmianw = 0x20F,
  PPC_evmwlssiaaw = 0x210,
  PPC_evmwlssianw = 0x211,
  PPC_evmwlumi = 0x212,
  PPC_evmwlumia = 0x213,
  PPC_evmwlumiaaw = 0x214,
  PPC_evmwlumianw = 0x215,
  PPC_evmwlusiaaw = 0x216,
  PPC_evmwlusianw = 0x217,
  PPC_evmwsmf = 0x218,
  PPC_evmwsmfa = 0x219,
  PPC_evmwsmfaa = 0x21A,
  PPC_evmwsmfan = 0x21B,
  PPC_evmwsmi = 0x21C,
  PPC_evmwsmia = 0x21D,
  PPC_evmwsmiaa = 0x21E,
  PPC_evmwsmian = 0x21F,
  PPC_evmwssf = 0x220,
  PPC_evmwssfa = 0x221,
  PPC_evmwssfaa = 0x222,
  PPC_evmwssfan = 0x223,
  PPC_evmwumi = 0x224,
  PPC_evmwumia = 0x225,
  PPC_evmwumiaa = 0x226,
  PPC_evmwumian = 0x227,
  PPC_evnand = 0x228,
  PPC_evneg = 0x229,
  PPC_evnor = 0x22A,
  PPC_evor = 0x22B,
  PPC_evorc = 0x22C,
  PPC_evrlw = 0x22D,
  PPC_evrlwi = 0x22E,
  PPC_evrndw = 0x22F,
  PPC_evsel = 0x230,
  PPC_evslw = 0x231,
  PPC_evslwi = 0x232,
  PPC_evsplatfi = 0x233,
  PPC_evsplati = 0x234,
  PPC_evsrwis = 0x235,
  PPC_evsrwiu = 0x236,
  PPC_evsrws = 0x237,
  PPC_evsrwu = 0x238,
  PPC_evstdd = 0x239,
  PPC_evstddx = 0x23A,
  PPC_evstdh = 0x23B,
  PPC_evstdhx = 0x23C,
  PPC_evstdw = 0x23D,
  PPC_evstdwx = 0x23E,
  PPC_evstwhe = 0x23F,
  PPC_evstwhex = 0x240,
  PPC_evstwho = 0x241,
  PPC_evstwhox = 0x242,
  PPC_evstwwe = 0x243,
  PPC_evstwwex = 0x244,
  PPC_evstwwo = 0x245,
  PPC_evstwwox = 0x246,
  PPC_evsubfsmiaaw = 0x247,
  PPC_evsubfssiaaw = 0x248,
  PPC_evsubfumiaaw = 0x249,
  PPC_evsubfusiaaw = 0x24A,
  PPC_evsubfw = 0x24B,
  PPC_evsubifw = 0x24C,
  PPC_evxor = 0x24D,
  PPC_efdabs = 0x24E,
  PPC_efdadd = 0x24F,
  PPC_efdcfs = 0x250,
  PPC_efdcfsf = 0x251,
  PPC_efdcfsi = 0x252,
  PPC_efdcfsid = 0x253,
  PPC_efdcfuf = 0x254,
  PPC_efdcfui = 0x255,
  PPC_efdcfuid = 0x256,
  PPC_efdcmpeq = 0x257,
  PPC_efdcmpgt = 0x258,
  PPC_efdcmplt = 0x259,
  PPC_efdctsf = 0x25A,
  PPC_efdctsi = 0x25B,
  PPC_efdctsidz = 0x25C,
  PPC_efdctsiz = 0x25D,
  PPC_efdctuf = 0x25E,
  PPC_efdctui = 0x25F,
  PPC_efdctuidz = 0x260,
  PPC_efdctuiz = 0x261,
  PPC_efddiv = 0x262,
  PPC_efdmul = 0x263,
  PPC_efdnabs = 0x264,
  PPC_efdneg = 0x265,
  PPC_efdsub = 0x266,
  PPC_efdtsteq = 0x267,
  PPC_efdtstgt = 0x268,
  PPC_efdtstlt = 0x269,
  PPC_efscfd = 0x26A,
  PPC_efsabs = 0x26B,
  PPC_efsadd = 0x26C,
  PPC_efscfsf = 0x26D,
  PPC_efscfsi = 0x26E,
  PPC_efscfuf = 0x26F,
  PPC_efscfui = 0x270,
  PPC_efscmpeq = 0x271,
  PPC_efscmpgt = 0x272,
  PPC_efscmplt = 0x273,
  PPC_efsctsf = 0x274,
  PPC_efsctsi = 0x275,
  PPC_efsctsiz = 0x276,
  PPC_efsctuf = 0x277,
  PPC_efsctui = 0x278,
  PPC_efsctuiz = 0x279,
  PPC_efsdiv = 0x27A,
  PPC_efsmul = 0x27B,
  PPC_efsnabs = 0x27C,
  PPC_efsneg = 0x27D,
  PPC_efssub = 0x27E,
  PPC_efststeq = 0x27F,
  PPC_efststgt = 0x280,
  PPC_efststlt = 0x281,
  PPC_evfsabs = 0x282,
  PPC_evfsadd = 0x283,
  PPC_evfscfsf = 0x284,
  PPC_evfscfsi = 0x285,
  PPC_evfscfuf = 0x286,
  PPC_evfscfui = 0x287,
  PPC_evfscmpeq = 0x288,
  PPC_evfscmpgt = 0x289,
  PPC_evfscmplt = 0x28A,
  PPC_evfsctsf = 0x28B,
  PPC_evfsctsi = 0x28C,
  PPC_evfsctsiz = 0x28D,
  PPC_evfsctuf = 0x28E,
  PPC_evfsctui = 0x28F,
  PPC_evfsctuiz = 0x290,
  PPC_evfsdiv = 0x291,
  PPC_evfsmul = 0x292,
  PPC_evfsnabs = 0x293,
  PPC_evfsneg = 0x294,
  PPC_evfssub = 0x295,
  PPC_evfststeq = 0x296,
  PPC_evfststgt = 0x297,
  PPC_evfststlt = 0x298,
  PPC_bpermd = 0x299,
  PPC_divde = 0x29A,
  PPC_divdeu = 0x29B,
  PPC_ldbrx = 0x29C,
  PPC_prtyd = 0x29D,
  PPC_stdbrx = 0x29E,
  PPC_cmpb = 0x29F,
  PPC_divwe = 0x2A0,
  PPC_divweu = 0x2A1,
  PPC_lbarx = 0x2A2,
  PPC_lharx = 0x2A3,
  PPC_popcntd = 0x2A4,
  PPC_popcntw = 0x2A5,
  PPC_prtyw = 0x2A6,
  PPC_stbcx = 0x2A7,
  PPC_sthcx = 0x2A8,
  PPC_addg6s = 0x2A9,
  PPC_cbcdtd = 0x2AA,
  PPC_cdtbcd = 0x2AB,
  PPC_dadd = 0x2AC,
  PPC_daddq = 0x2AD,
  PPC_dcffix = 0x2AE,
  PPC_dcffixq = 0x2AF,
  PPC_dcmpo = 0x2B0,
  PPC_dcmpoq = 0x2B1,
  PPC_dcmpu = 0x2B2,
  PPC_dcmpuq = 0x2B3,
  PPC_dctdp = 0x2B4,
  PPC_dctfix = 0x2B5,
  PPC_dctfixq = 0x2B6,
  PPC_dctqpq = 0x2B7,
  PPC_ddedpd = 0x2B8,
  PPC_ddedpdq = 0x2B9,
  PPC_ddiv = 0x2BA,
  PPC_ddivq = 0x2BB,
  PPC_denbcd = 0x2BC,
  PPC_denbcdq = 0x2BD,
  PPC_diex = 0x2BE,
  PPC_diexq = 0x2BF,
  PPC_dmul = 0x2C0,
  PPC_dmulq = 0x2C1,
  PPC_dqua = 0x2C2,
  PPC_dquai = 0x2C3,
  PPC_dquaiq = 0x2C4,
  PPC_dquaq = 0x2C5,
  PPC_drdpq = 0x2C6,
  PPC_drintn = 0x2C7,
  PPC_drintnq = 0x2C8,
  PPC_drintx = 0x2C9,
  PPC_drintxq = 0x2CA,
  PPC_drrnd = 0x2CB,
  PPC_drrndq = 0x2CC,
  PPC_drsp = 0x2CD,
  PPC_dscli = 0x2CE,
  PPC_dscliq = 0x2CF,
  PPC_dscri = 0x2D0,
  PPC_dscriq = 0x2D1,
  PPC_dsub = 0x2D2,
  PPC_dsubq = 0x2D3,
  PPC_dtstdc = 0x2D4,
  PPC_dtstdcq = 0x2D5,
  PPC_dtstdg = 0x2D6,
  PPC_dtstdgq = 0x2D7,
  PPC_dtstex = 0x2D8,
  PPC_dtstexq = 0x2D9,
  PPC_dtstsf = 0x2DA,
  PPC_dtstsfq = 0x2DB,
  PPC_dxex = 0x2DC,
  PPC_dxexq = 0x2DD,
  PPC_dsn = 0x2DE,
  PPC_lbdx = 0x2DF,
  PPC_lddx = 0x2E0,
  PPC_lfddx = 0x2E1,
  PPC_lhdx = 0x2E2,
  PPC_lwdx = 0x2E3,
  PPC_stbdx = 0x2E4,
  PPC_stddx = 0x2E5,
  PPC_stfddx = 0x2E6,
  PPC_sthdx = 0x2E7,
  PPC_stwdx = 0x2E8,
  PPC_mbar = 0x2E9,
  PPC_rfmci = 0x2EA,
  PPC_tlbilx = 0x2EB,
  PPC_dci = 0x2EC,
  PPC_ici = 0x2ED,
  PPC_mfdcrux = 0x2EE,
  PPC_mfdcrx = 0x2EF,
  PPC_mtdcrux = 0x2F0,
  PPC_mtdcrx = 0x2F1,
  PPC_dnh = 0x2F2,
  PPC_ehpriv = 0x2F3,
  PPC_rfgi = 0x2F4,
  PPC_msgclr = 0x2F5,
  PPC_msgsnd = 0x2F6,
  PPC_dcbfep = 0x2F7,
  PPC_dcbstep = 0x2F8,
  PPC_dcbtep = 0x2F9,
  PPC_dcbtstep = 0x2FA,
  PPC_dcbzep = 0x2FB,
  PPC_evlddepx = 0x2FC,
  PPC_evstddepx = 0x2FD,
  PPC_icbiep = 0x2FE,
  PPC_lbepx = 0x2FF,
  PPC_lfdepx = 0x300,
  PPC_lhepx = 0x301,
  PPC_lvepx = 0x302,
  PPC_lvepxl = 0x303,
  PPC_lwepx = 0x304,
  PPC_stbepx = 0x305,
  PPC_stfdepx = 0x306,
  PPC_sthepx = 0x307,
  PPC_stvepx = 0x308,
  PPC_stvepxl = 0x309,
  PPC_stwepx = 0x30A,
  PPC_ldepx = 0x30B,
  PPC_stdepx = 0x30C,
  PPC_mfpmr = 0x30D,
  PPC_mtpmr = 0x30E,
  PPC_mftmr = 0x30F,
  PPC_mttmr = 0x310,
  PPC_tlbsrx = 0x311,
  PPC_fcfids = 0x312,
  PPC_fcfidu = 0x313,
  PPC_fcfidus = 0x314,
  PPC_fctidu = 0x315,
  PPC_fctiduz = 0x316,
  PPC_fctiwu = 0x317,
  PPC_fctiwuz = 0x318,
  PPC_ftdiv = 0x319,
  PPC_ftsqrt = 0x31A,
  PPC_lfiwax = 0x31B,
  PPC_lfiwzx = 0x31C,
  PPC_lfdp = 0x31D,
  PPC_lfdpx = 0x31E,
  PPC_stfdp = 0x31F,
  PPC_stfdpx = 0x320,
  PPC_fcpsgn = 0x321,
  PPC_fre = 0x322,
  PPC_frim = 0x323,
  PPC_frin = 0x324,
  PPC_frip = 0x325,
  PPC_friz = 0x326,
  PPC_macchw = 0x327,
  PPC_macchws = 0x328,
  PPC_macchwsu = 0x329,
  PPC_macchwu = 0x32A,
  PPC_machhw = 0x32B,
  PPC_machhws = 0x32C,
  PPC_machhwsu = 0x32D,
  PPC_machhwu = 0x32E,
  PPC_maclhw = 0x32F,
  PPC_maclhws = 0x330,
  PPC_maclhwsu = 0x331,
  PPC_maclhwu = 0x332,
  PPC_mulchw = 0x333,
  PPC_mulchwu = 0x334,
  PPC_mulhhw = 0x335,
  PPC_mulhhwu = 0x336,
  PPC_mullhw = 0x337,
  PPC_mullhwu = 0x338,
  PPC_nmacchw = 0x339,
  PPC_nmacchws = 0x33A,
  PPC_nmachhw = 0x33B,
  PPC_nmachhws = 0x33C,
  PPC_nmaclhw = 0x33D,
  PPC_nmaclhws = 0x33E,
  PPC_dlmzb = 0x33F,
  PPC_lq = 0x340,
  PPC_stq = 0x341,
  PPC_doze = 0x342,
  PPC_lbzcix = 0x343,
  PPC_ldcix = 0x344,
  PPC_lhzcix = 0x345,
  PPC_lwzcix = 0x346,
  PPC_nap = 0x347,
  PPC_rvwinkle = 0x348,
  PPC_slbfee = 0x349,
  PPC_sleep = 0x34A,
  PPC_stbcix = 0x34B,
  PPC_stdcix = 0x34C,
  PPC_sthcix = 0x34D,
  PPC_stwcix = 0x34E,
  PPC_tlbiel = 0x34F,
  PPC_lvebx = 0x350,
  PPC_lvehx = 0x351,
  PPC_lvewx = 0x352,
  PPC_lvsl = 0x353,
  PPC_lvsr = 0x354,
  PPC_lvx = 0x355,
  PPC_lvxl = 0x356,
  PPC_mfvscr = 0x357,
  PPC_mtvscr = 0x358,
  PPC_stvebx = 0x359,
  PPC_stvehx = 0x35A,
  PPC_stvewx = 0x35B,
  PPC_stvx = 0x35C,
  PPC_stvxl = 0x35D,
  PPC_vaddcuw = 0x35E,
  PPC_vaddfp = 0x35F,
  PPC_vaddsbs = 0x360,
  PPC_vaddshs = 0x361,
  PPC_vaddsws = 0x362,
  PPC_vaddubm = 0x363,
  PPC_vaddubs = 0x364,
  PPC_vadduhm = 0x365,
  PPC_vadduhs = 0x366,
  PPC_vadduwm = 0x367,
  PPC_vadduws = 0x368,
  PPC_vand = 0x369,
  PPC_vandc = 0x36A,
  PPC_vavgsb = 0x36B,
  PPC_vavgsh = 0x36C,
  PPC_vavgsw = 0x36D,
  PPC_vavgub = 0x36E,
  PPC_vavguh = 0x36F,
  PPC_vavguw = 0x370,
  PPC_vcfsx = 0x371,
  PPC_vcfux = 0x372,
  PPC_vcmpbfp = 0x373,
  PPC_vcmpeqfp = 0x374,
  PPC_vcmpequb = 0x375,
  PPC_vcmpequh = 0x376,
  PPC_vcmpequw = 0x377,
  PPC_vcmpgefp = 0x378,
  PPC_vcmpgtfp = 0x379,
  PPC_vcmpgtsb = 0x37A,
  PPC_vcmpgtsh = 0x37B,
  PPC_vcmpgtsw = 0x37C,
  PPC_vcmpgtub = 0x37D,
  PPC_vcmpgtuh = 0x37E,
  PPC_vcmpgtuw = 0x37F,
  PPC_vctsxs = 0x380,
  PPC_vctuxs = 0x381,
  PPC_vexptefp = 0x382,
  PPC_vlogefp = 0x383,
  PPC_vmaddfp = 0x384,
  PPC_vmaxfp = 0x385,
  PPC_vmaxsb = 0x386,
  PPC_vmaxsh = 0x387,
  PPC_vmaxsw = 0x388,
  PPC_vmaxub = 0x389,
  PPC_vmaxuh = 0x38A,
  PPC_vmaxuw = 0x38B,
  PPC_vmhaddshs = 0x38C,
  PPC_vmhraddshs = 0x38D,
  PPC_vminfp = 0x38E,
  PPC_vminsb = 0x38F,
  PPC_vminsh = 0x390,
  PPC_vminsw = 0x391,
  PPC_vminub = 0x392,
  PPC_vminuh = 0x393,
  PPC_vminuw = 0x394,
  PPC_vmladduhm = 0x395,
  PPC_vmrghb = 0x396,
  PPC_vmrghh = 0x397,
  PPC_vmrghw = 0x398,
  PPC_vmrglb = 0x399,
  PPC_vmrglh = 0x39A,
  PPC_vmrglw = 0x39B,
  PPC_vmsummbm = 0x39C,
  PPC_vmsumshm = 0x39D,
  PPC_vmsumshs = 0x39E,
  PPC_vmsumubm = 0x39F,
  PPC_vmsumuhm = 0x3A0,
  PPC_vmsumuhs = 0x3A1,
  PPC_vmulesb = 0x3A2,
  PPC_vmulesh = 0x3A3,
  PPC_vmuleub = 0x3A4,
  PPC_vmuleuh = 0x3A5,
  PPC_vmulosb = 0x3A6,
  PPC_vmulosh = 0x3A7,
  PPC_vmuloub = 0x3A8,
  PPC_vmulouh = 0x3A9,
  PPC_vnmsubfp = 0x3AA,
  PPC_vnor = 0x3AB,
  PPC_vor = 0x3AC,
  PPC_vperm = 0x3AD,
  PPC_vpkpx = 0x3AE,
  PPC_vpkshss = 0x3AF,
  PPC_vpkshus = 0x3B0,
  PPC_vpkswss = 0x3B1,
  PPC_vpkswus = 0x3B2,
  PPC_vpkuhum = 0x3B3,
  PPC_vpkuhus = 0x3B4,
  PPC_vpkuwum = 0x3B5,
  PPC_vpkuwus = 0x3B6,
  PPC_vrefp = 0x3B7,
  PPC_vrfim = 0x3B8,
  PPC_vrfin = 0x3B9,
  PPC_vrfip = 0x3BA,
  PPC_vrfiz = 0x3BB,
  PPC_vrlb = 0x3BC,
  PPC_vrlh = 0x3BD,
  PPC_vrlw = 0x3BE,
  PPC_vrsqrtefp = 0x3BF,
  PPC_vsel = 0x3C0,
  PPC_vsl = 0x3C1,
  PPC_vslb = 0x3C2,
  PPC_vsldoi = 0x3C3,
  PPC_vslh = 0x3C4,
  PPC_vslo = 0x3C5,
  PPC_vslw = 0x3C6,
  PPC_vspltb = 0x3C7,
  PPC_vsplth = 0x3C8,
  PPC_vspltisb = 0x3C9,
  PPC_vspltish = 0x3CA,
  PPC_vspltisw = 0x3CB,
  PPC_vspltw = 0x3CC,
  PPC_vsr = 0x3CD,
  PPC_vsrab = 0x3CE,
  PPC_vsrah = 0x3CF,
  PPC_vsraw = 0x3D0,
  PPC_vsrb = 0x3D1,
  PPC_vsrh = 0x3D2,
  PPC_vsro = 0x3D3,
  PPC_vsrw = 0x3D4,
  PPC_vsubcuw = 0x3D5,
  PPC_vsubfp = 0x3D6,
  PPC_vsubsbs = 0x3D7,
  PPC_vsubshs = 0x3D8,
  PPC_vsubsws = 0x3D9,
  PPC_vsububm = 0x3DA,
  PPC_vsububs = 0x3DB,
  PPC_vsubuhm = 0x3DC,
  PPC_vsubuhs = 0x3DD,
  PPC_vsubuwm = 0x3DE,
  PPC_vsubuws = 0x3DF,
  PPC_vsum2sws = 0x3E0,
  PPC_vsum4sbs = 0x3E1,
  PPC_vsum4shs = 0x3E2,
  PPC_vsum4ubs = 0x3E3,
  PPC_vsumsws = 0x3E4,
  PPC_vupkhpx = 0x3E5,
  PPC_vupkhsb = 0x3E6,
  PPC_vupkhsh = 0x3E7,
  PPC_vupklpx = 0x3E8,
  PPC_vupklsb = 0x3E9,
  PPC_vupklsh = 0x3EA,
  PPC_vxor = 0x3EB,
  PPC_lxsdx = 0x3EC,
  PPC_lxvd2x = 0x3ED,
  PPC_lxvdsx = 0x3EE,
  PPC_lxvw4x = 0x3EF,
  PPC_stxsdx = 0x3F0,
  PPC_stxvd2x = 0x3F1,
  PPC_stxvw4x = 0x3F2,
  PPC_xsabsdp = 0x3F3,
  PPC_xsadddp = 0x3F4,
  PPC_xscmpodp = 0x3F5,
  PPC_xscmpudp = 0x3F6,
  PPC_xscpsgndp = 0x3F7,
  PPC_xscvdpsp = 0x3F8,
  PPC_xscvdpsxds = 0x3F9,
  PPC_xscvdpsxws = 0x3FA,
  PPC_xscvdpuxds = 0x3FB,
  PPC_xscvdpuxws = 0x3FC,
  PPC_xscvspdp = 0x3FD,
  PPC_xscvsxddp = 0x3FE,
  PPC_xscvuxddp = 0x3FF,
  PPC_xsdivdp = 0x400,
  PPC_xsmaddadp = 0x401,
  PPC_xsmaddmdp = 0x402,
  PPC_xsmaxdp = 0x403,
  PPC_xsmindp = 0x404,
  PPC_xsmsubadp = 0x405,
  PPC_xsmsubmdp = 0x406,
  PPC_xsmuldp = 0x407,
  PPC_xsnabsdp = 0x408,
  PPC_xsnegdp = 0x409,
  PPC_xsnmaddadp = 0x40A,
  PPC_xsnmaddmdp = 0x40B,
  PPC_xsnmsubadp = 0x40C,
  PPC_xsnmsubmdp = 0x40D,
  PPC_xsrdpi = 0x40E,
  PPC_xsrdpic = 0x40F,
  PPC_xsrdpim = 0x410,
  PPC_xsrdpip = 0x411,
  PPC_xsrdpiz = 0x412,
  PPC_xsredp = 0x413,
  PPC_xsrsqrtedp = 0x414,
  PPC_xssqrtdp = 0x415,
  PPC_xssubdp = 0x416,
  PPC_xstdivdp = 0x417,
  PPC_xstsqrtdp = 0x418,
  PPC_xvabsdp = 0x419,
  PPC_xvabssp = 0x41A,
  PPC_xvadddp = 0x41B,
  PPC_xvaddsp = 0x41C,
  PPC_xvcmpeqdp = 0x41D,
  PPC_xvcmpeqsp = 0x41E,
  PPC_xvcmpgedp = 0x41F,
  PPC_xvcmpgesp = 0x420,
  PPC_xvcmpgtdp = 0x421,
  PPC_xvcmpgtsp = 0x422,
  PPC_xvcpsgndp = 0x423,
  PPC_xvcpsgnsp = 0x424,
  PPC_xvcvdpsp = 0x425,
  PPC_xvcvdpsxds = 0x426,
  PPC_xvcvdpsxws = 0x427,
  PPC_xvcvdpuxds = 0x428,
  PPC_xvcvdpuxws = 0x429,
  PPC_xvcvspdp = 0x42A,
  PPC_xvcvspsxds = 0x42B,
  PPC_xvcvspsxws = 0x42C,
  PPC_xvcvspuxds = 0x42D,
  PPC_xvcvspuxws = 0x42E,
  PPC_xvcvsxddp = 0x42F,
  PPC_xvcvsxdsp = 0x430,
  PPC_xvcvsxwdp = 0x431,
  PPC_xvcvsxwsp = 0x432,
  PPC_xvcvuxddp = 0x433,
  PPC_xvcvuxdsp = 0x434,
  PPC_xvcvuxwdp = 0x435,
  PPC_xvcvuxwsp = 0x436,
  PPC_xvdivdp = 0x437,
  PPC_xvdivsp = 0x438,
  PPC_xvmaddadp = 0x439,
  PPC_xvmaddasp = 0x43A,
  PPC_xvmaddmdp = 0x43B,
  PPC_xvmaddmsp = 0x43C,
  PPC_xvmaxdp = 0x43D,
  PPC_xvmaxsp = 0x43E,
  PPC_xvmindp = 0x43F,
  PPC_xvminsp = 0x440,
  PPC_xvmsubadp = 0x441,
  PPC_xvmsubasp = 0x442,
  PPC_xvmsubmdp = 0x443,
  PPC_xvmsubmsp = 0x444,
  PPC_xvmuldp = 0x445,
  PPC_xvmulsp = 0x446,
  PPC_xvnabsdp = 0x447,
  PPC_xvnabssp = 0x448,
  PPC_xvnegdp = 0x449,
  PPC_xvnegsp = 0x44A,
  PPC_xvnmaddadp = 0x44B,
  PPC_xvnmaddasp = 0x44C,
  PPC_xvnmaddmdp = 0x44D,
  PPC_xvnmaddmsp = 0x44E,
  PPC_xvnmsubadp = 0x44F,
  PPC_xvnmsubasp = 0x450,
  PPC_xvnmsubmdp = 0x451,
  PPC_xvnmsubmsp = 0x452,
  PPC_xvrdpi = 0x453,
  PPC_xvrdpic = 0x454,
  PPC_xvrdpim = 0x455,
  PPC_xvrdpip = 0x456,
  PPC_xvrdpiz = 0x457,
  PPC_xvredp = 0x458,
  PPC_xvresp = 0x459,
  PPC_xvrspi = 0x45A,
  PPC_xvrspic = 0x45B,
  PPC_xvrspim = 0x45C,
  PPC_xvrspip = 0x45D,
  PPC_xvrspiz = 0x45E,
  PPC_xvrsqrtedp = 0x45F,
  PPC_xvrsqrtesp = 0x460,
  PPC_xvsqrtdp = 0x461,
  PPC_xvsqrtsp = 0x462,
  PPC_xvsubdp = 0x463,
  PPC_xvsubsp = 0x464,
  PPC_xvtdivdp = 0x465,
  PPC_xvtdivsp = 0x466,
  PPC_xvtsqrtdp = 0x467,
  PPC_xvtsqrtsp = 0x468,
  PPC_xxland = 0x469,
  PPC_xxlandc = 0x46A,
  PPC_xxlnor = 0x46B,
  PPC_xxlor = 0x46C,
  PPC_xxlxor = 0x46D,
  PPC_xxmrghw = 0x46E,
  PPC_xxmrglw = 0x46F,
  PPC_xxpermdi = 0x470,
  PPC_xxsel = 0x471,
  PPC_xxsldwi = 0x472,
  PPC_xxspltw = 0x473,
  PPC_wait = 0x474,
  PPC_dss = 0x475,
  PPC_dssall = 0x476,
  PPC_dst = 0x477,
  PPC_dstt = 0x478,
  PPC_dstst = 0x479,
  PPC_dststt = 0x47A,
  PPC_lvlx = 0x47B,
  PPC_lvlxl = 0x47C,
  PPC_lvrx = 0x47D,
  PPC_lvrxl = 0x47E,
  PPC_stvlx = 0x47F,
  PPC_stvlxl = 0x480,
  PPC_stvrx = 0x481,
  PPC_stvrxl = 0x482,
  PPC_add16i = 0x483,
  PPC_add2i = 0x484,
  PPC_add2is = 0x485,
  PPC_and2i = 0x486,
  PPC_and2is = 0x487,
  PPC_cmp16i = 0x488,
  PPC_cmph = 0x489,
  PPC_cmph16i = 0x48A,
  PPC_cmphl = 0x48B,
  PPC_cmphl16i = 0x48C,
  PPC_cmpl16i = 0x48D,
  PPC_mull2i = 0x48E,
  PPC_or2i = 0x48F,
  PPC_or2is = 0x490,
  PPC_rlw = 0x491,
  PPC_rlwi = 0x492,
  PPC_bclri = 0x493,
  PPC_bgeni = 0x494,
  PPC_bmaski = 0x495,
  PPC_bseti = 0x496,
  PPC_btsti = 0x497,
  PPC_extzb = 0x498,
  PPC_extzh = 0x499,
  PPC_illegal = 0x49A,
  PPC_mfar = 0x49B,
  PPC_mtar = 0x49C,
  PPC_sub = 0x49D,
  PPC_sub16i = 0x49E,
  PPC_sub2i = 0x49F,
  PPC_sub2is = 0x4A0,
  PPC_extldi = 0x4A1,
  PPC_extrdi = 0x4A2,
  PPC_insrdi = 0x4A3,
  PPC_rotldi = 0x4A4,
  PPC_rotrdi = 0x4A5,
  PPC_rotld = 0x4A6,
  PPC_sldi = 0x4A7,
  PPC_srdi = 0x4A8,
  PPC_clrldi = 0x4A9,
  PPC_clrrdi = 0x4AA,
  PPC_clrlsldi = 0x4AB,
  PPC_xnop = 0x4AC,
  PPC_hnop = 0x4AD,
  PPC_dcbfl = 0x4AE,
  PPC_dcbflp = 0x4AF,
  PPC_dcbtt = 0x4B0,
  PPC_dcbtstt = 0x4B1,
  PPC_lwsync = 0x4B2,
  PPC_ptesync = 0x4B3,
  PPC_waitrsv = 0x4B4,
  PPC_waitimpl = 0x4B5,
  PPC_evmr = 0x4B6,
  PPC_evnot = 0x4B7,
  PPC_mtcr = 0x4B8,
  PPC_xvmovdp = 0x4B9,
  PPC_xvmovsp = 0x4BA,
  PPC_xxspltd = 0x4BB,
  PPC_xxmrghd = 0x4BC,
  PPC_xxmrgld = 0x4BD,
  PPC_xxswapd = 0x4BE,
  PPC_dcbz128 = 0x4BF,
  PPC_mtmsree = 0x4C0,
  PPC_vcfpsxws = 0x4C1,
  PPC_vcfpuxws = 0x4C2,
  PPC_vcsxwfp = 0x4C3,
  PPC_vcuxwfp = 0x4C4,
  PPC_vmaddcfp = 0x4C5,
  PPC_vmsum3fp = 0x4C6,
  PPC_vmsum4fp = 0x4C7,
  PPC_vmulfp = 0x4C8,
  PPC_vpermwi = 0x4C9,
  PPC_vpkd3d = 0x4CA,
  PPC_vrlimi = 0x4CB,
  PPC_vupkd3d = 0x4CC,
  PPC_ps_cmpu0 = 0x4CD,
  PPC_psq_lx = 0x4CE,
  PPC_psq_stx = 0x4CF,
  PPC_ps_sum0 = 0x4D0,
  PPC_ps_sum1 = 0x4D1,
  PPC_ps_muls0 = 0x4D2,
  PPC_ps_muls1 = 0x4D3,
  PPC_ps_madds0 = 0x4D4,
  PPC_ps_madds1 = 0x4D5,
  PPC_ps_div = 0x4D6,
  PPC_ps_sub = 0x4D7,
  PPC_ps_add = 0x4D8,
  PPC_ps_sel = 0x4D9,
  PPC_ps_res = 0x4DA,
  PPC_ps_mul = 0x4DB,
  PPC_ps_rsqrte = 0x4DC,
  PPC_ps_msub = 0x4DD,
  PPC_ps_madd = 0x4DE,
  PPC_ps_nmsub = 0x4DF,
  PPC_ps_nmadd = 0x4E0,
  PPC_ps_cmpo0 = 0x4E1,
  PPC_psq_lux = 0x4E2,
  PPC_psq_stux = 0x4E3,
  PPC_ps_neg = 0x4E4,
  PPC_ps_cmpu1 = 0x4E5,
  PPC_ps_mr = 0x4E6,
  PPC_ps_cmpo1 = 0x4E7,
  PPC_ps_nabs = 0x4E8,
  PPC_ps_abs = 0x4E9,
  PPC_ps_merge00 = 0x4EA,
  PPC_ps_merge01 = 0x4EB,
  PPC_ps_merge10 = 0x4EC,
  PPC_ps_merge11 = 0x4ED,
  PPC_dcbz_l = 0x4EE,
  PPC_psq_l = 0x4EF,
  PPC_psq_lu = 0x4F0,
  PPC_psq_st = 0x4F1,
  PPC_psq_stu = 0x4F2,
  PPC_evfsmadd = 0x4F3,
  PPC_evfsmsub = 0x4F4,
  PPC_evfssqrt = 0x4F5,
  PPC_evfsnmadd = 0x4F6,
  PPC_evfsnmsub = 0x4F7,
  PPC_evfsmax = 0x4F8,
  PPC_evfsmin = 0x4F9,
  PPC_evfsaddsub = 0x4FA,
  PPC_evfssubadd = 0x4FB,
  PPC_evfssum = 0x4FC,
  PPC_evfsdiff = 0x4FD,
  PPC_evfssumdiff = 0x4FE,
  PPC_evfsdiffsum = 0x4FF,
  PPC_evfsaddx = 0x500,
  PPC_evfssubx = 0x501,
  PPC_evfsaddsubx = 0x502,
  PPC_evfssubaddx = 0x503,
  PPC_evfsmulx = 0x504,
  PPC_evfsmule = 0x505,
  PPC_evfsmulo = 0x506,
  PPC_evfscfh = 0x507,
  PPC_evfscth = 0x508,
  PPC_efsmax = 0x509,
  PPC_efsmin = 0x50A,
  PPC_efsmadd = 0x50B,
  PPC_efsmsub = 0x50C,
  PPC_efssqrt = 0x50D,
  PPC_efsnmadd = 0x50E,
  PPC_efsnmsub = 0x50F,
  PPC_efscfh = 0x510,
  PPC_efscth = 0x511,
  PPC_lmvgprw = 0x512,
  PPC_stmvgprw = 0x513,
  PPC_lmvsprw = 0x514,
  PPC_stmvsprw = 0x515,
  PPC_lmvsrrw = 0x516,
  PPC_stmvsrrw = 0x517,
  PPC_lmvcsrrw = 0x518,
  PPC_stmvcsrrw = 0x519,
  PPC_lmvdsrrw = 0x51A,
  PPC_stmvdsrrw = 0x51B,
  PPC_lmvmcsrrw = 0x51C,
  PPC_stmvmcsrrw = 0x51D,
  PPC_evdotpwcssi = 0x51E,
  PPC_evdotpwcsmi = 0x51F,
  PPC_evdotpwcssfr = 0x520,
  PPC_evdotpwcssf = 0x521,
  PPC_evdotpwgasmf = 0x522,
  PPC_evdotpwxgasmf = 0x523,
  PPC_evdotpwgasmfr = 0x524,
  PPC_evdotpwxgasmfr = 0x525,
  PPC_evdotpwgssmf = 0x526,
  PPC_evdotpwxgssmf = 0x527,
  PPC_evdotpwgssmfr = 0x528,
  PPC_evdotpwxgssmfr = 0x529,
  PPC_evdotpwcssiaaw3 = 0x52A,
  PPC_evdotpwcsmiaaw3 = 0x52B,
  PPC_evdotpwcssfraaw3 = 0x52C,
  PPC_evdotpwcssfaaw3 = 0x52D,
  PPC_evdotpwgasmfaa3 = 0x52E,
  PPC_evdotpwxgasmfaa3 = 0x52F,
  PPC_evdotpwgasmfraa3 = 0x530,
  PPC_evdotpwxgasmfraa3 = 0x531,
  PPC_evdotpwgssmfaa3 = 0x532,
  PPC_evdotpwxgssmfaa3 = 0x533,
  PPC_evdotpwgssmfraa3 = 0x534,
  PPC_evdotpwxgssmfraa3 = 0x535,
  PPC_evdotpwcssia = 0x536,
  PPC_evdotpwcsmia = 0x537,
  PPC_evdotpwcssfra = 0x538,
  PPC_evdotpwcssfa = 0x539,
  PPC_evdotpwgasmfa = 0x53A,
  PPC_evdotpwxgasmfa = 0x53B,
  PPC_evdotpwgasmfra = 0x53C,
  PPC_evdotpwxgasmfra = 0x53D,
  PPC_evdotpwgssmfa = 0x53E,
  PPC_evdotpwxgssmfa = 0x53F,
  PPC_evdotpwgssmfra = 0x540,
  PPC_evdotpwxgssmfra = 0x541,
  PPC_evdotpwcssiaaw = 0x542,
  PPC_evdotpwcsmiaaw = 0x543,
  PPC_evdotpwcssfraaw = 0x544,
  PPC_evdotpwcssfaaw = 0x545,
  PPC_evdotpwgasmfaa = 0x546,
  PPC_evdotpwxgasmfaa = 0x547,
  PPC_evdotpwgasmfraa = 0x548,
  PPC_evdotpwxgasmfraa = 0x549,
  PPC_evdotpwgssmfaa = 0x54A,
  PPC_evdotpwxgssmfaa = 0x54B,
  PPC_evdotpwgssmfraa = 0x54C,
  PPC_evdotpwxgssmfraa = 0x54D,
  PPC_evdotphihcssi = 0x54E,
  PPC_evdotplohcssi = 0x54F,
  PPC_evdotphihcssf = 0x550,
  PPC_evdotplohcssf = 0x551,
  PPC_evdotphihcsmi = 0x552,
  PPC_evdotplohcsmi = 0x553,
  PPC_evdotphihcssfr = 0x554,
  PPC_evdotplohcssfr = 0x555,
  PPC_evdotphihcssiaaw3 = 0x556,
  PPC_evdotplohcssiaaw3 = 0x557,
  PPC_evdotphihcssfaaw3 = 0x558,
  PPC_evdotplohcssfaaw3 = 0x559,
  PPC_evdotphihcsmiaaw3 = 0x55A,
  PPC_evdotplohcsmiaaw3 = 0x55B,
  PPC_evdotphihcssfraaw3 = 0x55C,
  PPC_evdotplohcssfraaw3 = 0x55D,
  PPC_evdotphihcssia = 0x55E,
  PPC_evdotplohcssia = 0x55F,
  PPC_evdotphihcssfa = 0x560,
  PPC_evdotplohcssfa = 0x561,
  PPC_evdotphihcsmia = 0x562,
  PPC_evdotplohcsmia = 0x563,
  PPC_evdotphihcssfra = 0x564,
  PPC_evdotplohcssfra = 0x565,
  PPC_evdotphihcssiaaw = 0x566,
  PPC_evdotplohcssiaaw = 0x567,
  PPC_evdotphihcssfaaw = 0x568,
  PPC_evdotplohcssfaaw = 0x569,
  PPC_evdotphihcsmiaaw = 0x56A,
  PPC_evdotplohcsmiaaw = 0x56B,
  PPC_evdotphihcssfraaw = 0x56C,
  PPC_evdotplohcssfraaw = 0x56D,
  PPC_evdotphausi = 0x56E,
  PPC_evdotphassi = 0x56F,
  PPC_evdotphasusi = 0x570,
  PPC_evdotphassf = 0x571,
  PPC_evdotphsssf = 0x572,
  PPC_evdotphaumi = 0x573,
  PPC_evdotphasmi = 0x574,
  PPC_evdotphasumi = 0x575,
  PPC_evdotphassfr = 0x576,
  PPC_evdotphssmi = 0x577,
  PPC_evdotphsssfr = 0x578,
  PPC_evdotphausiaaw3 = 0x579,
  PPC_evdotphassiaaw3 = 0x57A,
  PPC_evdotphasusiaaw3 = 0x57B,
  PPC_evdotphassfaaw3 = 0x57C,
  PPC_evdotphsssiaaw3 = 0x57D,
  PPC_evdotphsssfaaw3 = 0x57E,
  PPC_evdotphaumiaaw3 = 0x57F,
  PPC_evdotphasmiaaw3 = 0x580,
  PPC_evdotphasumiaaw3 = 0x581,
  PPC_evdotphassfraaw3 = 0x582,
  PPC_evdotphssmiaaw3 = 0x583,
  PPC_evdotphsssfraaw3 = 0x584,
  PPC_evdotphausia = 0x585,
  PPC_evdotphassia = 0x586,
  PPC_evdotphasusia = 0x587,
  PPC_evdotphassfa = 0x588,
  PPC_evdotphsssfa = 0x589,
  PPC_evdotphaumia = 0x58A,
  PPC_evdotphasmia = 0x58B,
  PPC_evdotphasumia = 0x58C,
  PPC_evdotphassfra = 0x58D,
  PPC_evdotphssmia = 0x58E,
  PPC_evdotphsssfra = 0x58F,
  PPC_evdotphausiaaw = 0x590,
  PPC_evdotphassiaaw = 0x591,
  PPC_evdotphasusiaaw = 0x592,
  PPC_evdotphassfaaw = 0x593,
  PPC_evdotphsssiaaw = 0x594,
  PPC_evdotphsssfaaw = 0x595,
  PPC_evdotphaumiaaw = 0x596,
  PPC_evdotphasmiaaw = 0x597,
  PPC_evdotphasumiaaw = 0x598,
  PPC_evdotphassfraaw = 0x599,
  PPC_evdotphssmiaaw = 0x59A,
  PPC_evdotphsssfraaw = 0x59B,
  PPC_evdotp4hgaumi = 0x59C,
  PPC_evdotp4hgasmi = 0x59D,
  PPC_evdotp4hgasumi = 0x59E,
  PPC_evdotp4hgasmf = 0x59F,
  PPC_evdotp4hgssmi = 0x5A0,
  PPC_evdotp4hgssmf = 0x5A1,
  PPC_evdotp4hxgasmi = 0x5A2,
  PPC_evdotp4hxgasmf = 0x5A3,
  PPC_evdotpbaumi = 0x5A4,
  PPC_evdotpbasmi = 0x5A5,
  PPC_evdotpbasumi = 0x5A6,
  PPC_evdotp4hxgssmi = 0x5A7,
  PPC_evdotp4hxgssmf = 0x5A8,
  PPC_evdotp4hgaumiaa3 = 0x5A9,
  PPC_evdotp4hgasmiaa3 = 0x5AA,
  PPC_evdotp4hgasumiaa3 = 0x5AB,
  PPC_evdotp4hgasmfaa3 = 0x5AC,
  PPC_evdotp4hgssmiaa3 = 0x5AD,
  PPC_evdotp4hgssmfaa3 = 0x5AE,
  PPC_evdotp4hxgasmiaa3 = 0x5AF,
  PPC_evdotp4hxgasmfaa3 = 0x5B0,
  PPC_evdotpbaumiaaw3 = 0x5B1,
  PPC_evdotpbasmiaaw3 = 0x5B2,
  PPC_evdotpbasumiaaw3 = 0x5B3,
  PPC_evdotp4hxgssmiaa3 = 0x5B4,
  PPC_evdotp4hxgssmfaa3 = 0x5B5,
  PPC_evdotp4hgaumia = 0x5B6,
  PPC_evdotp4hgasmia = 0x5B7,
  PPC_evdotp4hgasumia = 0x5B8,
  PPC_evdotp4hgasmfa = 0x5B9,
  PPC_evdotp4hgssmia = 0x5BA,
  PPC_evdotp4hgssmfa = 0x5BB,
  PPC_evdotp4hxgasmia = 0x5BC,
  PPC_evdotp4hxgasmfa = 0x5BD,
  PPC_evdotpbaumia = 0x5BE,
  PPC_evdotpbasmia = 0x5BF,
  PPC_evdotpbasumia = 0x5C0,
  PPC_evdotp4hxgssmia = 0x5C1,
  PPC_evdotp4hxgssmfa = 0x5C2,
  PPC_evdotp4hgaumiaa = 0x5C3,
  PPC_evdotp4hgasmiaa = 0x5C4,
  PPC_evdotp4hgasumiaa = 0x5C5,
  PPC_evdotp4hgasmfaa = 0x5C6,
  PPC_evdotp4hgssmiaa = 0x5C7,
  PPC_evdotp4hgssmfaa = 0x5C8,
  PPC_evdotp4hxgasmiaa = 0x5C9,
  PPC_evdotp4hxgasmfaa = 0x5CA,
  PPC_evdotpbaumiaaw = 0x5CB,
  PPC_evdotpbasmiaaw = 0x5CC,
  PPC_evdotpbasumiaaw = 0x5CD,
  PPC_evdotp4hxgssmiaa = 0x5CE,
  PPC_evdotp4hxgssmfaa = 0x5CF,
  PPC_evdotpwausi = 0x5D0,
  PPC_evdotpwassi = 0x5D1,
  PPC_evdotpwasusi = 0x5D2,
  PPC_evdotpwaumi = 0x5D3,
  PPC_evdotpwasmi = 0x5D4,
  PPC_evdotpwasumi = 0x5D5,
  PPC_evdotpwssmi = 0x5D6,
  PPC_evdotpwausiaa3 = 0x5D7,
  PPC_evdotpwassiaa3 = 0x5D8,
  PPC_evdotpwasusiaa3 = 0x5D9,
  PPC_evdotpwsssiaa3 = 0x5DA,
  PPC_evdotpwaumiaa3 = 0x5DB,
  PPC_evdotpwasmiaa3 = 0x5DC,
  PPC_evdotpwasumiaa3 = 0x5DD,
  PPC_evdotpwssmiaa3 = 0x5DE,
  PPC_evdotpwausia = 0x5DF,
  PPC_evdotpwassia = 0x5E0,
  PPC_evdotpwasusia = 0x5E1,
  PPC_evdotpwaumia = 0x5E2,
  PPC_evdotpwasmia = 0x5E3,
  PPC_evdotpwasumia = 0x5E4,
  PPC_evdotpwssmia = 0x5E5,
  PPC_evdotpwausiaa = 0x5E6,
  PPC_evdotpwassiaa = 0x5E7,
  PPC_evdotpwasusiaa = 0x5E8,
  PPC_evdotpwsssiaa = 0x5E9,
  PPC_evdotpwaumiaa = 0x5EA,
  PPC_evdotpwasmiaa = 0x5EB,
  PPC_evdotpwasumiaa = 0x5EC,
  PPC_evdotpwssmiaa = 0x5ED,
  PPC_evaddih = 0x5EE,
  PPC_evaddib = 0x5EF,
  PPC_evsubifh = 0x5F0,
  PPC_evsubifb = 0x5F1,
  PPC_evabsb = 0x5F2,
  PPC_evabsh = 0x5F3,
  PPC_evabsd = 0x5F4,
  PPC_evabss = 0x5F5,
  PPC_evabsbs = 0x5F6,
  PPC_evabshs = 0x5F7,
  PPC_evabsds = 0x5F8,
  PPC_evnegwo = 0x5F9,
  PPC_evnegb = 0x5FA,
  PPC_evnegbo = 0x5FB,
  PPC_evnegh = 0x5FC,
  PPC_evnegho = 0x5FD,
  PPC_evnegd = 0x5FE,
  PPC_evnegs = 0x5FF,
  PPC_evnegwos = 0x600,
  PPC_evnegbs = 0x601,
  PPC_evnegbos = 0x602,
  PPC_evneghs = 0x603,
  PPC_evneghos = 0x604,
  PPC_evnegds = 0x605,
  PPC_evextzb = 0x606,
  PPC_evextsbh = 0x607,
  PPC_evextsw = 0x608,
  PPC_evrndhb = 0x609,
  PPC_evrnddw = 0x60A,
  PPC_evrndwhus = 0x60B,
  PPC_evrndwhss = 0x60C,
  PPC_evrndhbus = 0x60D,
  PPC_evrndhbss = 0x60E,
  PPC_evrnddwus = 0x60F,
  PPC_evrnddwss = 0x610,
  PPC_evrndwnh = 0x611,
  PPC_evrndhnb = 0x612,
  PPC_evrnddnw = 0x613,
  PPC_evrndwnhus = 0x614,
  PPC_evrndwnhss = 0x615,
  PPC_evrndhnbus = 0x616,
  PPC_evrndhnbss = 0x617,
  PPC_evrnddnwus = 0x618,
  PPC_evrnddnwss = 0x619,
  PPC_evcntlzh = 0x61A,
  PPC_evcntlsh = 0x61B,
  PPC_evpopcntb = 0x61C,
  PPC_circinc = 0x61D,
  PPC_evunpkhibui = 0x61E,
  PPC_evunpkhibsi = 0x61F,
  PPC_evunpkhihui = 0x620,
  PPC_evunpkhihsi = 0x621,
  PPC_evunpklobui = 0x622,
  PPC_evunpklobsi = 0x623,
  PPC_evunpklohui = 0x624,
  PPC_evunpklohsi = 0x625,
  PPC_evunpklohf = 0x626,
  PPC_evunpkhihf = 0x627,
  PPC_evunpklowgsf = 0x628,
  PPC_evunpkhiwgsf = 0x629,
  PPC_evsatsduw = 0x62A,
  PPC_evsatsdsw = 0x62B,
  PPC_evsatshub = 0x62C,
  PPC_evsatshsb = 0x62D,
  PPC_evsatuwuh = 0x62E,
  PPC_evsatswsh = 0x62F,
  PPC_evsatswuh = 0x630,
  PPC_evsatuhub = 0x631,
  PPC_evsatuduw = 0x632,
  PPC_evsatuwsw = 0x633,
  PPC_evsatshuh = 0x634,
  PPC_evsatuhsh = 0x635,
  PPC_evsatswuw = 0x636,
  PPC_evsatswgsdf = 0x637,
  PPC_evsatsbub = 0x638,
  PPC_evsatubsb = 0x639,
  PPC_evmaxhpuw = 0x63A,
  PPC_evmaxhpsw = 0x63B,
  PPC_evmaxbpuh = 0x63C,
  PPC_evmaxbpsh = 0x63D,
  PPC_evmaxwpud = 0x63E,
  PPC_evmaxwpsd = 0x63F,
  PPC_evminhpuw = 0x640,
  PPC_evminhpsw = 0x641,
  PPC_evminbpuh = 0x642,
  PPC_evminbpsh = 0x643,
  PPC_evminwpud = 0x644,
  PPC_evminwpsd = 0x645,
  PPC_evmaxmagws = 0x646,
  PPC_evsl = 0x647,
  PPC_evsli = 0x648,
  PPC_evsplatie = 0x649,
  PPC_evsplatib = 0x64A,
  PPC_evsplatibe = 0x64B,
  PPC_evsplatih = 0x64C,
  PPC_evsplatihe = 0x64D,
  PPC_evsplatid = 0x64E,
  PPC_evsplatia = 0x64F,
  PPC_evsplatiea = 0x650,
  PPC_evsplatiba = 0x651,
  PPC_evsplatibea = 0x652,
  PPC_evsplatiha = 0x653,
  PPC_evsplatihea = 0x654,
  PPC_evsplatida = 0x655,
  PPC_evsplatfio = 0x656,
  PPC_evsplatfib = 0x657,
  PPC_evsplatfibo = 0x658,
  PPC_evsplatfih = 0x659,
  PPC_evsplatfiho = 0x65A,
  PPC_evsplatfid = 0x65B,
  PPC_evsplatfia = 0x65C,
  PPC_evsplatfioa = 0x65D,
  PPC_evsplatfiba = 0x65E,
  PPC_evsplatfiboa = 0x65F,
  PPC_evsplatfiha = 0x660,
  PPC_evsplatfihoa = 0x661,
  PPC_evsplatfida = 0x662,
  PPC_evcmpgtdu = 0x663,
  PPC_evcmpgtds = 0x664,
  PPC_evcmpltdu = 0x665,
  PPC_evcmpltds = 0x666,
  PPC_evcmpeqd = 0x667,
  PPC_evswapbhilo = 0x668,
  PPC_evswapblohi = 0x669,
  PPC_evswaphhilo = 0x66A,
  PPC_evswaphlohi = 0x66B,
  PPC_evswaphe = 0x66C,
  PPC_evswaphhi = 0x66D,
  PPC_evswaphlo = 0x66E,
  PPC_evswapho = 0x66F,
  PPC_evinsb = 0x670,
  PPC_evxtrb = 0x671,
  PPC_evsplath = 0x672,
  PPC_evsplatb = 0x673,
  PPC_evinsh = 0x674,
  PPC_evclrbe = 0x675,
  PPC_evclrbo = 0x676,
  PPC_evxtrh = 0x677,
  PPC_evclrh = 0x678,
  PPC_evselbitm0 = 0x679,
  PPC_evselbitm1 = 0x67A,
  PPC_evselbit = 0x67B,
  PPC_evperm = 0x67C,
  PPC_evperm2 = 0x67D,
  PPC_evperm3 = 0x67E,
  PPC_evxtrd = 0x67F,
  PPC_evsrbu = 0x680,
  PPC_evsrbs = 0x681,
  PPC_evsrbiu = 0x682,
  PPC_evsrbis = 0x683,
  PPC_evslb = 0x684,
  PPC_evrlb = 0x685,
  PPC_evslbi = 0x686,
  PPC_evrlbi = 0x687,
  PPC_evsrhu = 0x688,
  PPC_evsrhs = 0x689,
  PPC_evsrhiu = 0x68A,
  PPC_evsrhis = 0x68B,
  PPC_evslh = 0x68C,
  PPC_evrlh = 0x68D,
  PPC_evslhi = 0x68E,
  PPC_evrlhi = 0x68F,
  PPC_evsru = 0x690,
  PPC_evsrs = 0x691,
  PPC_evsriu = 0x692,
  PPC_evsris = 0x693,
  PPC_evlvsl = 0x694,
  PPC_evlvsr = 0x695,
  PPC_evsroiu = 0x696,
  PPC_evsloi = 0x697,
  PPC_evsrois = 0x698,
  PPC_evldbx = 0x699,
  PPC_evldb = 0x69A,
  PPC_evlhhsplathx = 0x69B,
  PPC_evlhhsplath = 0x69C,
  PPC_evlwbsplatwx = 0x69D,
  PPC_evlwbsplatw = 0x69E,
  PPC_evlwhsplatwx = 0x69F,
  PPC_evlwhsplatw = 0x6A0,
  PPC_evlbbsplatbx = 0x6A1,
  PPC_evlbbsplatb = 0x6A2,
  PPC_evstdbx = 0x6A3,
  PPC_evstdb = 0x6A4,
  PPC_evlwbex = 0x6A5,
  PPC_evlwbe = 0x6A6,
  PPC_evlwboux = 0x6A7,
  PPC_evlwbou = 0x6A8,
  PPC_evlwbosx = 0x6A9,
  PPC_evlwbos = 0x6AA,
  PPC_evstwbex = 0x6AB,
  PPC_evstwbe = 0x6AC,
  PPC_evstwbox = 0x6AD,
  PPC_evstwbo = 0x6AE,
  PPC_evstwbx = 0x6AF,
  PPC_evstwb = 0x6B0,
  PPC_evsthbx = 0x6B1,
  PPC_evsthb = 0x6B2,
  PPC_evlddmx = 0x6B3,
  PPC_evlddu = 0x6B4,
  PPC_evldwmx = 0x6B5,
  PPC_evldwu = 0x6B6,
  PPC_evldhmx = 0x6B7,
  PPC_evldhu = 0x6B8,
  PPC_evldbmx = 0x6B9,
  PPC_evldbu = 0x6BA,
  PPC_evlhhesplatmx = 0x6BB,
  PPC_evlhhesplatu = 0x6BC,
  PPC_evlhhsplathmx = 0x6BD,
  PPC_evlhhsplathu = 0x6BE,
  PPC_evlhhousplatmx = 0x6BF,
  PPC_evlhhousplatu = 0x6C0,
  PPC_evlhhossplatmx = 0x6C1,
  PPC_evlhhossplatu = 0x6C2,
  PPC_evlwhemx = 0x6C3,
  PPC_evlwheu = 0x6C4,
  PPC_evlwbsplatwmx = 0x6C5,
  PPC_evlwbsplatwu = 0x6C6,
  PPC_evlwhoumx = 0x6C7,
  PPC_evlwhouu = 0x6C8,
  PPC_evlwhosmx = 0x6C9,
  PPC_evlwhosu = 0x6CA,
  PPC_evlwwsplatmx = 0x6CB,
  PPC_evlwwsplatu = 0x6CC,
  PPC_evlwhsplatwmx = 0x6CD,
  PPC_evlwhsplatwu = 0x6CE,
  PPC_evlwhsplatmx = 0x6CF,
  PPC_evlwhsplatu = 0x6D0,
  PPC_evlbbsplatbmx = 0x6D1,
  PPC_evlbbsplatbu = 0x6D2,
  PPC_evstddmx = 0x6D3,
  PPC_evstddu = 0x6D4,
  PPC_evstdwmx = 0x6D5,
  PPC_evstdwu = 0x6D6,
  PPC_evstdhmx = 0x6D7,
  PPC_evstdhu = 0x6D8,
  PPC_evstdbmx = 0x6D9,
  PPC_evstdbu = 0x6DA,
  PPC_evlwbemx = 0x6DB,
  PPC_evlwbeu = 0x6DC,
  PPC_evlwboumx = 0x6DD,
  PPC_evlwbouu = 0x6DE,
  PPC_evlwbosmx = 0x6DF,
  PPC_evlwbosu = 0x6E0,
  PPC_evstwhemx = 0x6E1,
  PPC_evstwheu = 0x6E2,
  PPC_evstwbemx = 0x6E3,
  PPC_evstwbeu = 0x6E4,
  PPC_evstwhomx = 0x6E5,
  PPC_evstwhou = 0x6E6,
  PPC_evstwbomx = 0x6E7,
  PPC_evstwbou = 0x6E8,
  PPC_evstwwemx = 0x6E9,
  PPC_evstwweu = 0x6EA,
  PPC_evstwbmx = 0x6EB,
  PPC_evstwbu = 0x6EC,
  PPC_evstwwomx = 0x6ED,
  PPC_evstwwou = 0x6EE,
  PPC_evsthbmx = 0x6EF,
  PPC_evsthbu = 0x6F0,
  PPC_evmhusi = 0x6F1,
  PPC_evmhssi = 0x6F2,
  PPC_evmhsusi = 0x6F3,
  PPC_evmhssf = 0x6F4,
  PPC_evmhumi = 0x6F5,
  PPC_evmhssfr = 0x6F6,
  PPC_evmhesumi = 0x6F7,
  PPC_evmhosumi = 0x6F8,
  PPC_evmbeumi = 0x6F9,
  PPC_evmbesmi = 0x6FA,
  PPC_evmbesumi = 0x6FB,
  PPC_evmboumi = 0x6FC,
  PPC_evmbosmi = 0x6FD,
  PPC_evmbosumi = 0x6FE,
  PPC_evmhesumia = 0x6FF,
  PPC_evmhosumia = 0x700,
  PPC_evmbeumia = 0x701,
  PPC_evmbesmia = 0x702,
  PPC_evmbesumia = 0x703,
  PPC_evmboumia = 0x704,
  PPC_evmbosmia = 0x705,
  PPC_evmbosumia = 0x706,
  PPC_evmwusiw = 0x707,
  PPC_evmwssiw = 0x708,
  PPC_evmwhssfr = 0x709,
  PPC_evmwehgsmfr = 0x70A,
  PPC_evmwehgsmf = 0x70B,
  PPC_evmwohgsmfr = 0x70C,
  PPC_evmwohgsmf = 0x70D,
  PPC_evmwhssfra = 0x70E,
  PPC_evmwehgsmfra = 0x70F,
  PPC_evmwehgsmfa = 0x710,
  PPC_evmwohgsmfra = 0x711,
  PPC_evmwohgsmfa = 0x712,
  PPC_evaddusiaa = 0x713,
  PPC_evaddssiaa = 0x714,
  PPC_evsubfusiaa = 0x715,
  PPC_evsubfssiaa = 0x716,
  PPC_evaddsmiaa = 0x717,
  PPC_evsubfsmiaa = 0x718,
  PPC_evaddh = 0x719,
  PPC_evaddhss = 0x71A,
  PPC_evsubfh = 0x71B,
  PPC_evsubfhss = 0x71C,
  PPC_evaddhx = 0x71D,
  PPC_evaddhxss = 0x71E,
  PPC_evsubfhx = 0x71F,
  PPC_evsubfhxss = 0x720,
  PPC_evaddd = 0x721,
  PPC_evadddss = 0x722,
  PPC_evsubfd = 0x723,
  PPC_evsubfdss = 0x724,
  PPC_evaddb = 0x725,
  PPC_evaddbss = 0x726,
  PPC_evsubfb = 0x727,
  PPC_evsubfbss = 0x728,
  PPC_evaddsubfh = 0x729,
  PPC_evaddsubfhss = 0x72A,
  PPC_evsubfaddh = 0x72B,
  PPC_evsubfaddhss = 0x72C,
  PPC_evaddsubfhx = 0x72D,
  PPC_evaddsubfhxss = 0x72E,
  PPC_evsubfaddhx = 0x72F,
  PPC_evsubfaddhxss = 0x730,
  PPC_evadddus = 0x731,
  PPC_evaddbus = 0x732,
  PPC_evsubfdus = 0x733,
  PPC_evsubfbus = 0x734,
  PPC_evaddwus = 0x735,
  PPC_evaddwxus = 0x736,
  PPC_evsubfwus = 0x737,
  PPC_evsubfwxus = 0x738,
  PPC_evadd2subf2h = 0x739,
  PPC_evadd2subf2hss = 0x73A,
  PPC_evsubf2add2h = 0x73B,
  PPC_evsubf2add2hss = 0x73C,
  PPC_evaddhus = 0x73D,
  PPC_evaddhxus = 0x73E,
  PPC_evsubfhus = 0x73F,
  PPC_evsubfhxus = 0x740,
  PPC_evaddwss = 0x741,
  PPC_evsubfwss = 0x742,
  PPC_evaddwx = 0x743,
  PPC_evaddwxss = 0x744,
  PPC_evsubfwx = 0x745,
  PPC_evsubfwxss = 0x746,
  PPC_evaddsubfw = 0x747,
  PPC_evaddsubfwss = 0x748,
  PPC_evsubfaddw = 0x749,
  PPC_evsubfaddwss = 0x74A,
  PPC_evaddsubfwx = 0x74B,
  PPC_evaddsubfwxss = 0x74C,
  PPC_evsubfaddwx = 0x74D,
  PPC_evsubfaddwxss = 0x74E,
  PPC_evmar = 0x74F,
  PPC_evsumwu = 0x750,
  PPC_evsumws = 0x751,
  PPC_evsum4bu = 0x752,
  PPC_evsum4bs = 0x753,
  PPC_evsum2hu = 0x754,
  PPC_evsum2hs = 0x755,
  PPC_evdiff2his = 0x756,
  PPC_evsum2his = 0x757,
  PPC_evsumwua = 0x758,
  PPC_evsumwsa = 0x759,
  PPC_evsum4bua = 0x75A,
  PPC_evsum4bsa = 0x75B,
  PPC_evsum2hua = 0x75C,
  PPC_evsum2hsa = 0x75D,
  PPC_evdiff2hisa = 0x75E,
  PPC_evsum2hisa = 0x75F,
  PPC_evsumwuaa = 0x760,
  PPC_evsumwsaa = 0x761,
  PPC_evsum4buaaw = 0x762,
  PPC_evsum4bsaaw = 0x763,
  PPC_evsum2huaaw = 0x764,
  PPC_evsum2hsaaw = 0x765,
  PPC_evdiff2hisaaw = 0x766,
  PPC_evsum2hisaaw = 0x767,
  PPC_evdivwsf = 0x768,
  PPC_evdivwuf = 0x769,
  PPC_evdivs = 0x76A,
  PPC_evdivu = 0x76B,
  PPC_evaddwegsi = 0x76C,
  PPC_evaddwegsf = 0x76D,
  PPC_evsubfwegsi = 0x76E,
  PPC_evsubfwegsf = 0x76F,
  PPC_evaddwogsi = 0x770,
  PPC_evaddwogsf = 0x771,
  PPC_evsubfwogsi = 0x772,
  PPC_evsubfwogsf = 0x773,
  PPC_evaddhhiuw = 0x774,
  PPC_evaddhhisw = 0x775,
  PPC_evsubfhhiuw = 0x776,
  PPC_evsubfhhisw = 0x777,
  PPC_evaddhlouw = 0x778,
  PPC_evaddhlosw = 0x779,
  PPC_evsubfhlouw = 0x77A,
  PPC_evsubfhlosw = 0x77B,
  PPC_evmhesusiaaw = 0x77C,
  PPC_evmhosusiaaw = 0x77D,
  PPC_evmhesumiaaw = 0x77E,
  PPC_evmhosumiaaw = 0x77F,
  PPC_evmbeusiaah = 0x780,
  PPC_evmbessiaah = 0x781,
  PPC_evmbesusiaah = 0x782,
  PPC_evmbousiaah = 0x783,
  PPC_evmbossiaah = 0x784,
  PPC_evmbosusiaah = 0x785,
  PPC_evmbeumiaah = 0x786,
  PPC_evmbesmiaah = 0x787,
  PPC_evmbesumiaah = 0x788,
  PPC_evmboumiaah = 0x789,
  PPC_evmbosmiaah = 0x78A,
  PPC_evmbosumiaah = 0x78B,
  PPC_evmwlusiaaw3 = 0x78C,
  PPC_evmwlssiaaw3 = 0x78D,
  PPC_evmwhssfraaw3 = 0x78E,
  PPC_evmwhssfaaw3 = 0x78F,
  PPC_evmwhssfraaw = 0x790,
  PPC_evmwhssfaaw = 0x791,
  PPC_evmwlumiaaw3 = 0x792,
  PPC_evmwlsmiaaw3 = 0x793,
  PPC_evmwusiaa = 0x794,
  PPC_evmwssiaa = 0x795,
  PPC_evmwehgsmfraa = 0x796,
  PPC_evmwehgsmfaa = 0x797,
  PPC_evmwohgsmfraa = 0x798,
  PPC_evmwohgsmfaa = 0x799,
  PPC_evmhesusianw = 0x79A,
  PPC_evmhosusianw = 0x79B,
  PPC_evmhesumianw = 0x79C,
  PPC_evmhosumianw = 0x79D,
  PPC_evmbeusianh = 0x79E,
  PPC_evmbessianh = 0x79F,
  PPC_evmbesusianh = 0x7A0,
  PPC_evmbousianh = 0x7A1,
  PPC_evmbossianh = 0x7A2,
  PPC_evmbosusianh = 0x7A3,
  PPC_evmbeumianh = 0x7A4,
  PPC_evmbesmianh = 0x7A5,
  PPC_evmbesumianh = 0x7A6,
  PPC_evmboumianh = 0x7A7,
  PPC_evmbosmianh = 0x7A8,
  PPC_evmbosumianh = 0x7A9,
  PPC_evmwlusianw3 = 0x7AA,
  PPC_evmwlssianw3 = 0x7AB,
  PPC_evmwhssfranw3 = 0x7AC,
  PPC_evmwhssfanw3 = 0x7AD,
  PPC_evmwhssfranw = 0x7AE,
  PPC_evmwhssfanw = 0x7AF,
  PPC_evmwlumianw3 = 0x7B0,
  PPC_evmwlsmianw3 = 0x7B1,
  PPC_evmwusian = 0x7B2,
  PPC_evmwssian = 0x7B3,
  PPC_evmwehgsmfran = 0x7B4,
  PPC_evmwehgsmfan = 0x7B5,
  PPC_evmwohgsmfran = 0x7B6,
  PPC_evmwohgsmfan = 0x7B7,
  PPC_evseteqb = 0x7B8,
  PPC_evseteqh = 0x7B9,
  PPC_evseteqw = 0x7BA,
  PPC_evsetgthu = 0x7BB,
  PPC_evsetgths = 0x7BC,
  PPC_evsetgtwu = 0x7BD,
  PPC_evsetgtws = 0x7BE,
  PPC_evsetgtbu = 0x7BF,
  PPC_evsetgtbs = 0x7C0,
  PPC_evsetltbu = 0x7C1,
  PPC_evsetltbs = 0x7C2,
  PPC_evsetlthu = 0x7C3,
  PPC_evsetlths = 0x7C4,
  PPC_evsetltwu = 0x7C5,
  PPC_evsetltws = 0x7C6,
  PPC_evsaduw = 0x7C7,
  PPC_evsadsw = 0x7C8,
  PPC_evsad4ub = 0x7C9,
  PPC_evsad4sb = 0x7CA,
  PPC_evsad2uh = 0x7CB,
  PPC_evsad2sh = 0x7CC,
  PPC_evsaduwa = 0x7CD,
  PPC_evsadswa = 0x7CE,
  PPC_evsad4uba = 0x7CF,
  PPC_evsad4sba = 0x7D0,
  PPC_evsad2uha = 0x7D1,
  PPC_evsad2sha = 0x7D2,
  PPC_evabsdifuw = 0x7D3,
  PPC_evabsdifsw = 0x7D4,
  PPC_evabsdifub = 0x7D5,
  PPC_evabsdifsb = 0x7D6,
  PPC_evabsdifuh = 0x7D7,
  PPC_evabsdifsh = 0x7D8,
  PPC_evsaduwaa = 0x7D9,
  PPC_evsadswaa = 0x7DA,
  PPC_evsad4ubaaw = 0x7DB,
  PPC_evsad4sbaaw = 0x7DC,
  PPC_evsad2uhaaw = 0x7DD,
  PPC_evsad2shaaw = 0x7DE,
  PPC_evpkshubs = 0x7DF,
  PPC_evpkshsbs = 0x7E0,
  PPC_evpkswuhs = 0x7E1,
  PPC_evpkswshs = 0x7E2,
  PPC_evpkuhubs = 0x7E3,
  PPC_evpkuwuhs = 0x7E4,
  PPC_evpkswshilvs = 0x7E5,
  PPC_evpkswgshefrs = 0x7E6,
  PPC_evpkswshfrs = 0x7E7,
  PPC_evpkswshilvfrs = 0x7E8,
  PPC_evpksdswfrs = 0x7E9,
  PPC_evpksdshefrs = 0x7EA,
  PPC_evpkuduws = 0x7EB,
  PPC_evpksdsws = 0x7EC,
  PPC_evpkswgswfrs = 0x7ED,
  PPC_evilveh = 0x7EE,
  PPC_evilveoh = 0x7EF,
  PPC_evilvhih = 0x7F0,
  PPC_evilvhiloh = 0x7F1,
  PPC_evilvloh = 0x7F2,
  PPC_evilvlohih = 0x7F3,
  PPC_evilvoeh = 0x7F4,
  PPC_evilvoh = 0x7F5,
  PPC_evdlveb = 0x7F6,
  PPC_evdlveh = 0x7F7,
  PPC_evdlveob = 0x7F8,
  PPC_evdlveoh = 0x7F9,
  PPC_evdlvob = 0x7FA,
  PPC_evdlvoh = 0x7FB,
  PPC_evdlvoeb = 0x7FC,
  PPC_evdlvoeh = 0x7FD,
  PPC_evmaxbu = 0x7FE,
  PPC_evmaxbs = 0x7FF,
  PPC_evmaxhu = 0x800,
  PPC_evmaxhs = 0x801,
  PPC_evmaxwu = 0x802,
  PPC_evmaxws = 0x803,
  PPC_evmaxdu = 0x804,
  PPC_evmaxds = 0x805,
  PPC_evminbu = 0x806,
  PPC_evminbs = 0x807,
  PPC_evminhu = 0x808,
  PPC_evminhs = 0x809,
  PPC_evminwu = 0x80A,
  PPC_evminws = 0x80B,
  PPC_evmindu = 0x80C,
  PPC_evminds = 0x80D,
  PPC_evavgwu = 0x80E,
  PPC_evavgws = 0x80F,
  PPC_evavgbu = 0x810,
  PPC_evavgbs = 0x811,
  PPC_evavghu = 0x812,
  PPC_evavghs = 0x813,
  PPC_evavgdu = 0x814,
  PPC_evavgds = 0x815,
  PPC_evavgwur = 0x816,
  PPC_evavgwsr = 0x817,
  PPC_evavgbur = 0x818,
  PPC_evavgbsr = 0x819,
  PPC_evavghur = 0x81A,
  PPC_evavghsr = 0x81B,
  PPC_evavgdur = 0x81C,
  PPC_evavgdsr = 0x81D,
  PPC_tdui = 0x81E,
  PPC_tdu = 0x81F,
  PPC_twui = 0x820,
  PPC_twu = 0x821,
  PPC_bctar = 0x822,
  PPC_clrbhrb = 0x823,
  PPC_mfbhrbe = 0x824,
  PPC_mtsle = 0x825,
  PPC_mfvsrd = 0x826,
  PPC_mfvsrwz = 0x827,
  PPC_mtvsrd = 0x828,
  PPC_mtvsrwa = 0x829,
  PPC_mtvsrwz = 0x82A,
  PPC_fmrgew = 0x82B,
  PPC_fmrgow = 0x82C,
  PPC_vpksdss = 0x82D,
  PPC_vpksdus = 0x82E,
  PPC_vpkudus = 0x82F,
  PPC_vpkudum = 0x830,
  PPC_vupkhsw = 0x831,
  PPC_vupklsw = 0x832,
  PPC_vmrgew = 0x833,
  PPC_vmrgow = 0x834,
  PPC_vaddudm = 0x835,
  PPC_vadduqm = 0x836,
  PPC_vaddeuqm = 0x837,
  PPC_vaddcuq = 0x838,
  PPC_vaddecuq = 0x839,
  PPC_vsubudm = 0x83A,
  PPC_vsubuqm = 0x83B,
  PPC_vsubeuqm = 0x83C,
  PPC_vsubcuq = 0x83D,
  PPC_vsubecuq = 0x83E,
  PPC_vmulesw = 0x83F,
  PPC_vmuleuw = 0x840,
  PPC_vmulosw = 0x841,
  PPC_vmulouw = 0x842,
  PPC_vmuluwm = 0x843,
  PPC_vmaxsd = 0x844,
  PPC_vmaxud = 0x845,
  PPC_vminsd = 0x846,
  PPC_vminud = 0x847,
  PPC_vcmpequd = 0x848,
  PPC_vcmpgtsd = 0x849,
  PPC_vcmpgtud = 0x84A,
  PPC_veqv = 0x84B,
  PPC_vnand = 0x84C,
  PPC_vorc = 0x84D,
  PPC_vrld = 0x84E,
  PPC_vsld = 0x84F,
  PPC_vsrd = 0x850,
  PPC_vsrad = 0x851,
  PPC_vcipher = 0x852,
  PPC_vcipherlast = 0x853,
  PPC_vncipher = 0x854,
  PPC_vncipherlast = 0x855,
  PPC_vsbox = 0x856,
  PPC_vshasigmad = 0x857,
  PPC_vshasigmaw = 0x858,
  PPC_vpmsumb = 0x859,
  PPC_vpmsumd = 0x85A,
  PPC_vpmsumh = 0x85B,
  PPC_vpmsumw = 0x85C,
  PPC_vpermxor = 0x85D,
  PPC_vgbbd = 0x85E,
  PPC_vclzb = 0x85F,
  PPC_vclzh = 0x860,
  PPC_vclzw = 0x861,
  PPC_vclzd = 0x862,
  PPC_vpopcntb = 0x863,
  PPC_vpopcntd = 0x864,
  PPC_vpopcnth = 0x865,
  PPC_vpopcntw = 0x866,
  PPC_vbpermq = 0x867,
  PPC_bcdadd = 0x868,
  PPC_bcdsub = 0x869,
  PPC_lxsiwax = 0x86A,
  PPC_lxsspx = 0x86B,
  PPC_lxsiwzx = 0x86C,
  PPC_stxsiwx = 0x86D,
  PPC_stxsspx = 0x86E,
  PPC_xsaddsp = 0x86F,
  PPC_xscvdpspn = 0x870,
  PPC_xscvspdpn = 0x871,
  PPC_xscvsxdsp = 0x872,
  PPC_xscvuxdsp = 0x873,
  PPC_xsdivsp = 0x874,
  PPC_xsmaddasp = 0x875,
  PPC_xsmaddmsp = 0x876,
  PPC_xsmsubasp = 0x877,
  PPC_xsmsubmsp = 0x878,
  PPC_xsmulsp = 0x879,
  PPC_xsnmaddasp = 0x87A,
  PPC_xsnmaddmsp = 0x87B,
  PPC_xsnmsubasp = 0x87C,
  PPC_xsnmsubmsp = 0x87D,
  PPC_xsresp = 0x87E,
  PPC_xsrsp = 0x87F,
  PPC_xsrsqrtesp = 0x880,
  PPC_xssqrtsp = 0x881,
  PPC_xssubsp = 0x882,
  PPC_xxleqv = 0x883,
  PPC_xxlnand = 0x884,
  PPC_xxlorc = 0x885,
  PPC_lqarx = 0x886,
  PPC_stqcx = 0x887,
  PPC_tbegin = 0x888,
  PPC_tend = 0x889,
  PPC_tabort = 0x88A,
  PPC_tabortwc = 0x88B,
  PPC_tabortwci = 0x88C,
  PPC_tabortdc = 0x88D,
  PPC_tabortdci = 0x88E,
  PPC_tsr = 0x88F,
  PPC_tcheck = 0x890,
  PPC_rfebb = 0x891,
  PPC_treclaim = 0x892,
  PPC_trechkpt = 0x893,
  PPC_msgsndp = 0x894,
  PPC_msgclrp = 0x895,
  PPC_dcblq = 0x896,
  PPC_icblq = 0x897,
  PPC_vmr = 0x898,
  PPC_vnot = 0x899,
  PPC_tendall = 0x89A,
  PPC_tsuspend = 0x89B,
  PPC_tresume = 0x89C,
  PPC_mtppr = 0x89D,
  PPC_mfppr = 0x89E,
  PPC_mtppr32 = 0x89F,
  PPC_mfppr32 = 0x8A0,
  PPC_mtic = 0x8A1,
  PPC_mfic = 0x8A2,
  PPC_mtvtb = 0x8A3,
  PPC_mfvtb = 0x8A4,
  PPC_miso = 0x8A5,
  PPC_mdoio = 0x8A6,
  PPC_mdoom = 0x8A7,
  PPC_yield = 0x8A8,
  PPC_addbss = 0x8A9,
  PPC_addhss = 0x8AA,
  PPC_addwss = 0x8AB,
  PPC_addbus = 0x8AC,
  PPC_addhus = 0x8AD,
  PPC_addwus = 0x8AE,
  PPC_mulhss = 0x8AF,
  PPC_mulwss = 0x8B0,
  PPC_mulhus = 0x8B1,
  PPC_mulwus = 0x8B2,
  PPC_sat = 0x8B3,
  PPC_subfbss = 0x8B4,
  PPC_subfhss = 0x8B5,
  PPC_subfwss = 0x8B6,
  PPC_subfbus = 0x8B7,
  PPC_subfhus = 0x8B8,
  PPC_subfwus = 0x8B9,
  PPC_satsbs = 0x8BA,
  PPC_satubs = 0x8BB,
  PPC_satsbu = 0x8BC,
  PPC_satubu = 0x8BD,
  PPC_abssb = 0x8BE,
  PPC_absub = 0x8BF,
  PPC_satshs = 0x8C0,
  PPC_satuhs = 0x8C1,
  PPC_satshu = 0x8C2,
  PPC_satuhu = 0x8C3,
  PPC_abssh = 0x8C4,
  PPC_absuh = 0x8C5,
  PPC_satsws = 0x8C6,
  PPC_satuws = 0x8C7,
  PPC_satswu = 0x8C8,
  PPC_satuwu = 0x8C9,
  PPC_abssw = 0x8CA,
  PPC_absuw = 0x8CB,
  PPC_dni = 0x8CC,
  PPC_slbieg = 0x8CD,
  PPC_slbiag = 0x8CE,
  PPC_slbsync = 0x8CF,
  PPC_addpcis = 0x8D0,
  PPC_lnia = 0x8D1,
  PPC_subpcis = 0x8D2,
  PPC_cmpeqb = 0x8D3,
  PPC_cmprb = 0x8D4,
  PPC_cnttzw = 0x8D5,
  PPC_cnttzd = 0x8D6,
  PPC_darn = 0x8D7,
  PPC_extswsli = 0x8D8,
  PPC_maddhd = 0x8D9,
  PPC_maddhdu = 0x8DA,
  PPC_maddld = 0x8DB,
  PPC_mcrxrx = 0x8DC,
  PPC_setb = 0x8DD,
  PPC_modsd = 0x8DE,
  PPC_modud = 0x8DF,
  PPC_modsw = 0x8E0,
  PPC_moduw = 0x8E1,
  PPC_mfvsrld = 0x8E2,
  PPC_mtvsrdd = 0x8E3,
  PPC_mtvsrws = 0x8E4,
  PPC_scv = 0x8E5,
  PPC_rfscv = 0x8E6,
  PPC_stop = 0x8E7,
  PPC_copy = 0x8E8,
  PPC_paste = 0x8E9,
  PPC_ldat = 0x8EA,
  PPC_lwat = 0x8EB,
  PPC_stdat = 0x8EC,
  PPC_stwat = 0x8ED,
  PPC_cpabort = 0x8EE,
  PPC_wait30 = 0x8EF,
  PPC_dtstsfi = 0x8F0,
  PPC_dtstsfiq = 0x8F1,
  PPC_bcdcfn = 0x8F2,
  PPC_bcdcfz = 0x8F3,
  PPC_bcdctn = 0x8F4,
  PPC_bcdctz = 0x8F5,
  PPC_bcdctsq = 0x8F6,
  PPC_bcdcfsq = 0x8F7,
  PPC_bcdsetsgn = 0x8F8,
  PPC_bcdcpsgn = 0x8F9,
  PPC_bcds = 0x8FA,
  PPC_bcdus = 0x8FB,
  PPC_bcdsr = 0x8FC,
  PPC_bcdtrunc = 0x8FD,
  PPC_bcdutrunc = 0x8FE,
  PPC_vabsdub = 0x8FF,
  PPC_vabsduh = 0x900,
  PPC_vabsduw = 0x901,
  PPC_vbpermd = 0x902,
  PPC_vclzlsbb = 0x903,
  PPC_vctzlsbb = 0x904,
  PPC_vcmpneb = 0x905,
  PPC_vcmpnezb = 0x906,
  PPC_vcmpneh = 0x907,
  PPC_vcmpnezh = 0x908,
  PPC_vcmpnew = 0x909,
  PPC_vcmpnezw = 0x90A,
  PPC_vctzb = 0x90B,
  PPC_vctzh = 0x90C,
  PPC_vctzw = 0x90D,
  PPC_vctzd = 0x90E,
  PPC_vextractub = 0x90F,
  PPC_vextractuh = 0x910,
  PPC_vextractuw = 0x911,
  PPC_vextractd = 0x912,
  PPC_vextsb2w = 0x913,
  PPC_vextsb2d = 0x914,
  PPC_vextsh2w = 0x915,
  PPC_vextsh2d = 0x916,
  PPC_vextsw2d = 0x917,
  PPC_vextublx = 0x918,
  PPC_vextubrx = 0x919,
  PPC_vextuhlx = 0x91A,
  PPC_vextuhrx = 0x91B,
  PPC_vextuwlx = 0x91C,
  PPC_vextuwrx = 0x91D,
  PPC_vinsertb = 0x91E,
  PPC_vinserth = 0x91F,
  PPC_vinsertw = 0x920,
  PPC_vinsertd = 0x921,
  PPC_vmul10uq = 0x922,
  PPC_vmul10euq = 0x923,
  PPC_vmul10cuq = 0x924,
  PPC_vmul10ecuq = 0x925,
  PPC_vnegw = 0x926,
  PPC_vnegd = 0x927,
  PPC_vpermr = 0x928,
  PPC_vprtybw = 0x929,
  PPC_vprtybd = 0x92A,
  PPC_vprtybq = 0x92B,
  PPC_vrlwnm = 0x92C,
  PPC_vrlwmi = 0x92D,
  PPC_vrldnm = 0x92E,
  PPC_vrldmi = 0x92F,
  PPC_vslv = 0x930,
  PPC_vsrv = 0x931,
  PPC_lxsd = 0x932,
  PPC_lxssp = 0x933,
  PPC_lxsibzx = 0x934,
  PPC_lxsihzx = 0x935,
  PPC_lxv = 0x936,
  PPC_lxvb16x = 0x937,
  PPC_lxvh8x = 0x938,
  PPC_lxvl = 0x939,
  PPC_lxvll = 0x93A,
  PPC_lxvwsx = 0x93B,
  PPC_lxvx = 0x93C,
  PPC_stxsd = 0x93D,
  PPC_stxsibx = 0x93E,
  PPC_stxsihx = 0x93F,
  PPC_stxssp = 0x940,
  PPC_stxv = 0x941,
  PPC_stxvb16x = 0x942,
  PPC_stxvh8x = 0x943,
  PPC_stxvl = 0x944,
  PPC_stxvll = 0x945,
  PPC_stxvx = 0x946,
  PPC_xsabsqp = 0x947,
  PPC_xsaddqp = 0x948,
  PPC_xscmpexpqp = 0x949,
  PPC_xscmpoqp = 0x94A,
  PPC_xscmpuqp = 0x94B,
  PPC_xscpsgnqp = 0x94C,
  PPC_xscvdpqp = 0x94D,
  PPC_xscvqpdp = 0x94E,
  PPC_xscvqpsdz = 0x94F,
  PPC_xscvqpswz = 0x950,
  PPC_xscvqpudz = 0x951,
  PPC_xscvqpuwz = 0x952,
  PPC_xscvsdqp = 0x953,
  PPC_xscvudqp = 0x954,
  PPC_xsdivqp = 0x955,
  PPC_xsiexpqp = 0x956,
  PPC_xsmaddqp = 0x957,
  PPC_xsmsubqp = 0x958,
  PPC_xsmulqp = 0x959,
  PPC_xsnabsqp = 0x95A,
  PPC_xsnegqp = 0x95B,
  PPC_xsnmaddqp = 0x95C,
  PPC_xsnmsubqp = 0x95D,
  PPC_xssqrtqp = 0x95E,
  PPC_xssubqp = 0x95F,
  PPC_xsxexpqp = 0x960,
  PPC_xsxsigqp = 0x961,
  PPC_xststdcqp = 0x962,
  PPC_xsrqpxp = 0x963,
  PPC_xsrqpi = 0x964,
  PPC_xscmpeqdp = 0x965,
  PPC_xscmpexpdp = 0x966,
  PPC_xscmpgedp = 0x967,
  PPC_xscmpgtdp = 0x968,
  PPC_xsiexpdp = 0x969,
  PPC_xsmaxcdp = 0x96A,
  PPC_xsmaxjdp = 0x96B,
  PPC_xsmincdp = 0x96C,
  PPC_xsminjdp = 0x96D,
  PPC_xviexpdp = 0x96E,
  PPC_xviexpsp = 0x96F,
  PPC_xxextractuw = 0x970,
  PPC_xxinsertw = 0x971,
  PPC_xxperm = 0x972,
  PPC_xxpermr = 0x973,
  PPC_xxspltib = 0x974,
  PPC_xststdcdp = 0x975,
  PPC_xststdcsp = 0x976,
  PPC_xvtstdcdp = 0x977,
  PPC_xvtstdcsp = 0x978,
  PPC_xsxexpdp = 0x979,
  PPC_xsxsigdp = 0x97A,
  PPC_xscvdphp = 0x97B,
  PPC_xscvhpdp = 0x97C,
  PPC_xvxexpdp = 0x97D,
  PPC_xvxexpsp = 0x97E,
  PPC_xvxsigdp = 0x97F,
  PPC_xvxsigsp = 0x980,
  PPC_xxbrd = 0x981,
  PPC_xxbrh = 0x982,
  PPC_xxbrq = 0x983,
  PPC_xxbrw = 0x984,
  PPC_xvcvhpsp = 0x985,
  PPC_xvcvsphp = 0x986,
  PPC_msgsync = 0x987,
  PPC_addex = 0x988,
  PPC_vmsumudm = 0x989,
  PPC_mffsce = 0x98A,
  PPC_mffscdrn = 0x98B,
  PPC_mffscdrni = 0x98C,
  PPC_mffscrn = 0x98D,
  PPC_mffscrni = 0x98E,
  PPC_mffsl = 0x98F,
  PPC_lbdcbx = 0x990,
  PPC_lhdcbx = 0x991,
  PPC_lwdcbx = 0x992,
  PPC_stbdcbx = 0x993,
  PPC_sthdcbx = 0x994,
  PPC_stwdcbx = 0x995,
  PPC_lbcbx = 0x996,
  PPC_lhcbx = 0x997,
  PPC_lwcbx = 0x998,
  PPC_stbwtx = 0x999,
  PPC_sthwtx = 0x99A,
  PPC_stwwtx = 0x99B,
  PPC_dsncb = 0x99C,
  PPC_ldw = 0x99D,
  PPC_stdw = 0x99E,
  PPC_lqw = 0x99F,
  PPC_stqw = 0x9A0,
  PPC_ldwcb = 0x9A1,
  PPC_ldbrw = 0x9A2,
  PPC_ldwbrw = 0x9A3,
  PPC_stdwwt = 0x9A4,
  PPC_stdbrw = 0x9A5,
  PPC_stdwbrw = 0x9A6,
  PPC_lqdbrw = 0x9A7,
  PPC_stqdbrw = 0x9A8,
  PPC_lwbr = 0x9A9,
  PPC_lhbr = 0x9AA,
  PPC_stwbr = 0x9AB,
  PPC_sthbr = 0x9AC,
  PPC_ldwar = 0x9AD,
  PPC_stdwc = 0x9AE,
  PPC_addb = 0x9AF,
  PPC_addbu = 0x9B0,
  PPC_addh = 0x9B1,
  PPC_addhu = 0x9B2,
  PPC_subfb = 0x9B3,
  PPC_subfbu = 0x9B4,
  PPC_subfh = 0x9B5,
  PPC_subfhu = 0x9B6,
  PPC_byterevw = 0x9B7,
  PPC_byterevh = 0x9B8,
  PPC_hwaccel = 0x9B9,
  PPC_hwacceli = 0x9BA,
  PPC_ordhwaccel = 0x9BB,
  PPC_ordhwacceli = 0x9BC,
  PPC_osmcmd = 0x9BD,
  PPC_mpure = 0x9BE,
  PPC_mpuwe = 0x9BF,
  PPC_mpusync = 0x9C0,
  PPC_efdmax = 0x9C1,
  PPC_efdmin = 0x9C2,
  PPC_efdsqrt = 0x9C3,
  PPC_efdcfh = 0x9C4,
  PPC_efdcth = 0x9C5,
  PPC_last = 0x9C6,
};

/* 1795 */
enum NEC850_Instructions : unsigned __int32
{
  NEC850_NULL = 0x0,
  NEC850_BREAKPOINT = 0x1,
  NEC850_XORI = 0x2,
  NEC850_XOR = 0x3,
  NEC850_TST1 = 0x4,
  NEC850_TST = 0x5,
  NEC850_TRAP = 0x6,
  NEC850_SUBR = 0x7,
  NEC850_SUB = 0x8,
  NEC850_STSR = 0x9,
  NEC850_ST_B = 0xA,
  NEC850_ST_H = 0xB,
  NEC850_ST_W = 0xC,
  NEC850_SST_B = 0xD,
  NEC850_SST_H = 0xE,
  NEC850_SST_W = 0xF,
  NEC850_SLD_B = 0x10,
  NEC850_SLD_H = 0x11,
  NEC850_SLD_W = 0x12,
  NEC850_SHR = 0x13,
  NEC850_SHL = 0x14,
  NEC850_SET1 = 0x15,
  NEC850_SETF = 0x16,
  NEC850_SATSUBR = 0x17,
  NEC850_SATSUBI = 0x18,
  NEC850_SATSUB = 0x19,
  NEC850_SATADD = 0x1A,
  NEC850_SAR = 0x1B,
  NEC850_RETI = 0x1C,
  NEC850_ORI = 0x1D,
  NEC850_OR = 0x1E,
  NEC850_NOT1 = 0x1F,
  NEC850_NOT = 0x20,
  NEC850_NOP = 0x21,
  NEC850_MULHI = 0x22,
  NEC850_MULH = 0x23,
  NEC850_MOVHI = 0x24,
  NEC850_MOVEA = 0x25,
  NEC850_MOV = 0x26,
  NEC850_LDSR = 0x27,
  NEC850_LD_B = 0x28,
  NEC850_LD_H = 0x29,
  NEC850_LD_W = 0x2A,
  NEC850_JR = 0x2B,
  NEC850_JMP = 0x2C,
  NEC850_JARL = 0x2D,
  NEC850_HALT = 0x2E,
  NEC850_EI = 0x2F,
  NEC850_DIVH = 0x30,
  NEC850_DI = 0x31,
  NEC850_CMP = 0x32,
  NEC850_CLR1 = 0x33,
  NEC850_BV = 0x34,
  NEC850_BL = 0x35,
  NEC850_BZ = 0x36,
  NEC850_BNH = 0x37,
  NEC850_BN = 0x38,
  NEC850_BR = 0x39,
  NEC850_BLT = 0x3A,
  NEC850_BLE = 0x3B,
  NEC850_BNV = 0x3C,
  NEC850_BNC = 0x3D,
  NEC850_BNZ = 0x3E,
  NEC850_BH = 0x3F,
  NEC850_BP = 0x40,
  NEC850_BSA = 0x41,
  NEC850_BGE = 0x42,
  NEC850_BGT = 0x43,
  NEC850_ANDI = 0x44,
  NEC850_AND = 0x45,
  NEC850_ADDI = 0x46,
  NEC850_ADD = 0x47,
  NEC850_SWITCH = 0x48,
  NEC850_ZXB = 0x49,
  NEC850_SXB = 0x4A,
  NEC850_ZXH = 0x4B,
  NEC850_SXH = 0x4C,
  NEC850_DISPOSE_r0 = 0x4D,
  NEC850_DISPOSE_r = 0x4E,
  NEC850_CALLT = 0x4F,
  NEC850_DBTRAP = 0x50,
  NEC850_DBRET = 0x51,
  NEC850_CTRET = 0x52,
  NEC850_SASF = 0x53,
  NEC850_PREPARE_sp = 0x54,
  NEC850_PREPARE_i = 0x55,
  NEC850_MUL = 0x56,
  NEC850_MULU = 0x57,
  NEC850_DIVH_r3 = 0x58,
  NEC850_DIVHU = 0x59,
  NEC850_DIV = 0x5A,
  NEC850_DIVU = 0x5B,
  NEC850_BSW = 0x5C,
  NEC850_BSH = 0x5D,
  NEC850_HSW = 0x5E,
  NEC850_CMOV = 0x5F,
  NEC850_SLD_BU = 0x60,
  NEC850_SLD_HU = 0x61,
  NEC850_LD_BU = 0x62,
  NEC850_LD_HU = 0x63,
  NEC850_ADF = 0x64,
  NEC850_HSH = 0x65,
  NEC850_MAC = 0x66,
  NEC850_MACU = 0x67,
  NEC850_SBF = 0x68,
  NEC850_SCH0L = 0x69,
  NEC850_SCH0R = 0x6A,
  NEC850_SCH1L = 0x6B,
  NEC850_SCH1R = 0x6C,
  NEC850_CAXI = 0x6D,
  NEC850_DIVQ = 0x6E,
  NEC850_DIVQU = 0x6F,
  NEC850_EIRET = 0x70,
  NEC850_FERET = 0x71,
  NEC850_FETRAP = 0x72,
  NEC850_RMTRAP = 0x73,
  NEC850_RIE = 0x74,
  NEC850_SYNCE = 0x75,
  NEC850_SYNCM = 0x76,
  NEC850_SYNCP = 0x77,
  NEC850_SYSCALL = 0x78,
  NEC850_CVT_SW = 0x79,
  NEC850_TRNC_SW = 0x7A,
  NEC850_CVT_WS = 0x7B,
  NEC850_LDFC = 0x7C,
  NEC850_LDFF = 0x7D,
  NEC850_STFC = 0x7E,
  NEC850_STFF = 0x7F,
  NEC850_TRFF = 0x80,
  NEC850_ABSF_D = 0x81,
  NEC850_ABSF_S = 0x82,
  NEC850_ADDF_D = 0x83,
  NEC850_ADDF_S = 0x84,
  NEC850_DIVF_D = 0x85,
  NEC850_DIVF_S = 0x86,
  NEC850_MAXF_D = 0x87,
  NEC850_MAXF_S = 0x88,
  NEC850_MINF_D = 0x89,
  NEC850_MINF_S = 0x8A,
  NEC850_MULF_D = 0x8B,
  NEC850_MULF_S = 0x8C,
  NEC850_NEGF_D = 0x8D,
  NEC850_NEGF_S = 0x8E,
  NEC850_RECIPF_D = 0x8F,
  NEC850_RECIPF_S = 0x90,
  NEC850_RSQRTF_D = 0x91,
  NEC850_RSQRTF_S = 0x92,
  NEC850_SQRTF_D = 0x93,
  NEC850_SQRTF_S = 0x94,
  NEC850_SUBF_D = 0x95,
  NEC850_SUBF_S = 0x96,
  NEC850_MADDF_S = 0x97,
  NEC850_MSUBF_S = 0x98,
  NEC850_NMADDF_S = 0x99,
  NEC850_NMSUBF_S = 0x9A,
  NEC850_CEILF_DL = 0x9B,
  NEC850_CEILF_DW = 0x9C,
  NEC850_CEILF_SL = 0x9D,
  NEC850_CEILF_SW = 0x9E,
  NEC850_CEILF_DUL = 0x9F,
  NEC850_CEILF_DUW = 0xA0,
  NEC850_CEILF_SUL = 0xA1,
  NEC850_CEILF_SUW = 0xA2,
  NEC850_CVTF_DL = 0xA3,
  NEC850_CVTF_DS = 0xA4,
  NEC850_CVTF_DUL = 0xA5,
  NEC850_CVTF_DUW = 0xA6,
  NEC850_CVTF_DW = 0xA7,
  NEC850_CVTF_LD = 0xA8,
  NEC850_CVTF_LS = 0xA9,
  NEC850_CVTF_SD = 0xAA,
  NEC850_CVTF_SL = 0xAB,
  NEC850_CVTF_SUL = 0xAC,
  NEC850_CVTF_SUW = 0xAD,
  NEC850_CVTF_SW = 0xAE,
  NEC850_CVTF_ULD = 0xAF,
  NEC850_CVTF_ULS = 0xB0,
  NEC850_CVTF_UWD = 0xB1,
  NEC850_CVTF_UWS = 0xB2,
  NEC850_CVTF_WD = 0xB3,
  NEC850_CVTF_WS = 0xB4,
  NEC850_FLOORF_DL = 0xB5,
  NEC850_FLOORF_DW = 0xB6,
  NEC850_FLOORF_SL = 0xB7,
  NEC850_FLOORF_SW = 0xB8,
  NEC850_FLOORF_DUL = 0xB9,
  NEC850_FLOORF_DUW = 0xBA,
  NEC850_FLOORF_SUL = 0xBB,
  NEC850_FLOORF_SUW = 0xBC,
  NEC850_TRNCF_DL = 0xBD,
  NEC850_TRNCF_DUL = 0xBE,
  NEC850_TRNCF_DUW = 0xBF,
  NEC850_TRNCF_DW = 0xC0,
  NEC850_TRNCF_SL = 0xC1,
  NEC850_TRNCF_SUL = 0xC2,
  NEC850_TRNCF_SUW = 0xC3,
  NEC850_TRNCF_SW = 0xC4,
  NEC850_CMPF_S = 0xC5,
  NEC850_CMPF_D = 0xC6,
  NEC850_CMOVF_S = 0xC7,
  NEC850_CMOVF_D = 0xC8,
  NEC850_TRFSR = 0xC9,
  NEC850_SYNCI = 0xCA,
  NEC850_SNOOZE = 0xCB,
  NEC850_BINS = 0xCC,
  NEC850_ROTL = 0xCD,
  NEC850_LOOP = 0xCE,
  NEC850_LD_DW = 0xCF,
  NEC850_ST_DW = 0xD0,
  NEC850_LDL_W = 0xD1,
  NEC850_STC_W = 0xD2,
  NEC850_CLL = 0xD3,
  NEC850_CACHE = 0xD4,
  NEC850_PREF = 0xD5,
  NEC850_PUSHSP = 0xD6,
  NEC850_POPSP = 0xD7,
  NEC850_CVTF_HS = 0xD8,
  NEC850_CVTF_SH = 0xD9,
  NEC850_FMAF_S = 0xDA,
  NEC850_FMSF_S = 0xDB,
  NEC850_FNMAF_S = 0xDC,
  NEC850_FNMSF_S = 0xDD,
  NEC850_DBPUSH = 0xDE,
  NEC850_DBCP = 0xDF,
  NEC850_DBTAG = 0xE0,
  NEC850_DBHVTRAP = 0xE1,
  NEC850_EST = 0xE2,
  NEC850_DST = 0xE3,
  NEC850_HVTRAP = 0xE4,
  NEC850_HVCALL = 0xE5,
  NEC850_LDVC_SR = 0xE6,
  NEC850_STVC_SR = 0xE7,
  NEC850_LDTC_GR = 0xE8,
  NEC850_STTC_GR = 0xE9,
  NEC850_LDTC_PC = 0xEA,
  NEC850_STTC_PC = 0xEB,
  NEC850_LDTC_SR = 0xEC,
  NEC850_STTC_SR = 0xED,
  NEC850_LDTC_VR = 0xEE,
  NEC850_STTC_VR = 0xEF,
  NEC850_TLBAI = 0xF0,
  NEC850_TLBR = 0xF1,
  NEC850_TLBS = 0xF2,
  NEC850_TLBVI = 0xF3,
  NEC850_TLBW = 0xF4,
  NEC850_LAST_INSTRUCTION = 0xF5,
};

/* 1796 */
enum _16C8DC2CFBF0AAC0932308A6C493011C : unsigned __int32
{
  TRICORE_null = 0x0,
  TRICORE_abs = 0x1,
  TRICORE_abs_b = 0x2,
  TRICORE_abs_h = 0x3,
  TRICORE_absdif = 0x4,
  TRICORE_absdif_b = 0x5,
  TRICORE_absdif_h = 0x6,
  TRICORE_absdifs = 0x7,
  TRICORE_absdifs_h = 0x8,
  TRICORE_abss = 0x9,
  TRICORE_abss_h = 0xA,
  TRICORE_add_b = 0xB,
  TRICORE_add_f = 0xC,
  TRICORE_add_h = 0xD,
  TRICORE_add16 = 0xE,
  TRICORE_add16_a = 0xF,
  TRICORE_add32 = 0x10,
  TRICORE_add32_a = 0x11,
  TRICORE_addc = 0x12,
  TRICORE_addi = 0x13,
  TRICORE_addih = 0x14,
  TRICORE_addih_a = 0x15,
  TRICORE_adds = 0x16,
  TRICORE_adds_h = 0x17,
  TRICORE_adds_hu = 0x18,
  TRICORE_adds_u = 0x19,
  TRICORE_adds16 = 0x1A,
  TRICORE_addsc_at = 0x1B,
  TRICORE_addsc16_a = 0x1C,
  TRICORE_addsc32_a = 0x1D,
  TRICORE_addx = 0x1E,
  TRICORE_and_and_t = 0x1F,
  TRICORE_and_andn_t = 0x20,
  TRICORE_and_eq = 0x21,
  TRICORE_and_ge = 0x22,
  TRICORE_and_ge_u = 0x23,
  TRICORE_and_lt = 0x24,
  TRICORE_and_lt_u = 0x25,
  TRICORE_and_ne = 0x26,
  TRICORE_and_nor_t = 0x27,
  TRICORE_and_or_t = 0x28,
  TRICORE_and_t = 0x29,
  TRICORE_and16 = 0x2A,
  TRICORE_and32 = 0x2B,
  TRICORE_andn = 0x2C,
  TRICORE_andn_t = 0x2D,
  TRICORE_bisr16 = 0x2E,
  TRICORE_bisr32 = 0x2F,
  TRICORE_bmerge = 0x30,
  TRICORE_bsplit = 0x31,
  TRICORE_cachea_i = 0x32,
  TRICORE_cachea_w = 0x33,
  TRICORE_cachea_wi = 0x34,
  TRICORE_cadd16 = 0x35,
  TRICORE_cadd32 = 0x36,
  TRICORE_caddn16 = 0x37,
  TRICORE_caddn32 = 0x38,
  TRICORE_call16 = 0x39,
  TRICORE_call32 = 0x3A,
  TRICORE_calla = 0x3B,
  TRICORE_calli = 0x3C,
  TRICORE_clo = 0x3D,
  TRICORE_clo_h = 0x3E,
  TRICORE_cls = 0x3F,
  TRICORE_cls_h = 0x40,
  TRICORE_clz = 0x41,
  TRICORE_clz_h = 0x42,
  TRICORE_cmov16 = 0x43,
  TRICORE_cmovn16 = 0x44,
  TRICORE_cmp_f = 0x45,
  TRICORE_csub = 0x46,
  TRICORE_csubn = 0x47,
  TRICORE_debug16 = 0x48,
  TRICORE_debug32 = 0x49,
  TRICORE_dextr = 0x4A,
  TRICORE_disable = 0x4B,
  TRICORE_div_f = 0x4C,
  TRICORE_dsync = 0x4D,
  TRICORE_dvadj = 0x4E,
  TRICORE_dvinit = 0x4F,
  TRICORE_dvinit_b = 0x50,
  TRICORE_dvinit_bu = 0x51,
  TRICORE_dvinit_h = 0x52,
  TRICORE_dvinit_hu = 0x53,
  TRICORE_dvinit_u = 0x54,
  TRICORE_dvstep = 0x55,
  TRICORE_dvstep_u = 0x56,
  TRICORE_enable = 0x57,
  TRICORE_eq_a = 0x58,
  TRICORE_eq_b = 0x59,
  TRICORE_eq_h = 0x5A,
  TRICORE_eq_w = 0x5B,
  TRICORE_eq16 = 0x5C,
  TRICORE_eq32 = 0x5D,
  TRICORE_eqany_b = 0x5E,
  TRICORE_eqany_h = 0x5F,
  TRICORE_eqz_a = 0x60,
  TRICORE_extr = 0x61,
  TRICORE_extr_u = 0x62,
  TRICORE_ftoi = 0x63,
  TRICORE_ftoq31 = 0x64,
  TRICORE_ftou = 0x65,
  TRICORE_ge = 0x66,
  TRICORE_ge_a = 0x67,
  TRICORE_ge_u = 0x68,
  TRICORE_imask = 0x69,
  TRICORE_ins_t = 0x6A,
  TRICORE_insert = 0x6B,
  TRICORE_insn_t = 0x6C,
  TRICORE_isync = 0x6D,
  TRICORE_itof = 0x6E,
  TRICORE_ixmax = 0x6F,
  TRICORE_ixmax_u = 0x70,
  TRICORE_ixmin = 0x71,
  TRICORE_ixmin_u = 0x72,
  TRICORE_j16 = 0x73,
  TRICORE_j32 = 0x74,
  TRICORE_ja = 0x75,
  TRICORE_jeq_a = 0x76,
  TRICORE_jeq16 = 0x77,
  TRICORE_jeq32 = 0x78,
  TRICORE_jge = 0x79,
  TRICORE_jge_u = 0x7A,
  TRICORE_jgez16 = 0x7B,
  TRICORE_jgtz16 = 0x7C,
  TRICORE_ji16 = 0x7D,
  TRICORE_ji32 = 0x7E,
  TRICORE_jl = 0x7F,
  TRICORE_jla = 0x80,
  TRICORE_jlez16 = 0x81,
  TRICORE_jli = 0x82,
  TRICORE_jlt = 0x83,
  TRICORE_jlt_u = 0x84,
  TRICORE_jltz16 = 0x85,
  TRICORE_jne_a = 0x86,
  TRICORE_jne16 = 0x87,
  TRICORE_jne32 = 0x88,
  TRICORE_jned = 0x89,
  TRICORE_jnei = 0x8A,
  TRICORE_jnz16 = 0x8B,
  TRICORE_jnz16_a = 0x8C,
  TRICORE_jnz16_t = 0x8D,
  TRICORE_jnz32_a = 0x8E,
  TRICORE_jnz32_t = 0x8F,
  TRICORE_jz16 = 0x90,
  TRICORE_jz16_a = 0x91,
  TRICORE_jz16_t = 0x92,
  TRICORE_jz32_a = 0x93,
  TRICORE_jz32_t = 0x94,
  TRICORE_ld_b = 0x95,
  TRICORE_ld_d = 0x96,
  TRICORE_ld_da = 0x97,
  TRICORE_ld_hu = 0x98,
  TRICORE_ld_q = 0x99,
  TRICORE_ld16_a = 0x9A,
  TRICORE_ld16_bu = 0x9B,
  TRICORE_ld16_h = 0x9C,
  TRICORE_ld16_w = 0x9D,
  TRICORE_ld32_a = 0x9E,
  TRICORE_ld32_bu = 0x9F,
  TRICORE_ld32_h = 0xA0,
  TRICORE_ld32_w = 0xA1,
  TRICORE_ldlcx = 0xA2,
  TRICORE_ldmst = 0xA3,
  TRICORE_lducx = 0xA4,
  TRICORE_lea = 0xA5,
  TRICORE_loop16 = 0xA6,
  TRICORE_loop32 = 0xA7,
  TRICORE_loopu = 0xA8,
  TRICORE_lt_a = 0xA9,
  TRICORE_lt_b = 0xAA,
  TRICORE_lt_bu = 0xAB,
  TRICORE_lt_h = 0xAC,
  TRICORE_lt_hu = 0xAD,
  TRICORE_lt_u = 0xAE,
  TRICORE_lt_w = 0xAF,
  TRICORE_lt_wu = 0xB0,
  TRICORE_lt16 = 0xB1,
  TRICORE_lt32 = 0xB2,
  TRICORE_madd = 0xB3,
  TRICORE_madd_f = 0xB4,
  TRICORE_madd_h = 0xB5,
  TRICORE_madd_q = 0xB6,
  TRICORE_madd_u = 0xB7,
  TRICORE_maddm_h = 0xB8,
  TRICORE_maddms_h = 0xB9,
  TRICORE_maddr_h = 0xBA,
  TRICORE_maddr_q = 0xBB,
  TRICORE_maddrs_h = 0xBC,
  TRICORE_maddrs_q = 0xBD,
  TRICORE_madds = 0xBE,
  TRICORE_madds_h = 0xBF,
  TRICORE_madds_q = 0xC0,
  TRICORE_madds_u = 0xC1,
  TRICORE_maddsu_h = 0xC2,
  TRICORE_maddsum_h = 0xC3,
  TRICORE_maddsums_h = 0xC4,
  TRICORE_maddsur_h = 0xC5,
  TRICORE_maddsurs_h = 0xC6,
  TRICORE_maddsus_h = 0xC7,
  TRICORE_max = 0xC8,
  TRICORE_max_b = 0xC9,
  TRICORE_max_bu = 0xCA,
  TRICORE_max_h = 0xCB,
  TRICORE_max_hu = 0xCC,
  TRICORE_max_u = 0xCD,
  TRICORE_mfcr = 0xCE,
  TRICORE_min = 0xCF,
  TRICORE_min_b = 0xD0,
  TRICORE_min_bu = 0xD1,
  TRICORE_min_h = 0xD2,
  TRICORE_min_hu = 0xD3,
  TRICORE_min_u = 0xD4,
  TRICORE_mov_u = 0xD5,
  TRICORE_mov16 = 0xD6,
  TRICORE_mov16_a = 0xD7,
  TRICORE_mov16_aa = 0xD8,
  TRICORE_mov16_d = 0xD9,
  TRICORE_mov32 = 0xDA,
  TRICORE_mov32_a = 0xDB,
  TRICORE_mov32_aa = 0xDC,
  TRICORE_mov32_d = 0xDD,
  TRICORE_movh = 0xDE,
  TRICORE_movh_a = 0xDF,
  TRICORE_msub = 0xE0,
  TRICORE_msub_f = 0xE1,
  TRICORE_msub_h = 0xE2,
  TRICORE_msub_q = 0xE3,
  TRICORE_msub_u = 0xE4,
  TRICORE_msubad_h = 0xE5,
  TRICORE_msubadm_h = 0xE6,
  TRICORE_msubadms_h = 0xE7,
  TRICORE_msubadr_h = 0xE8,
  TRICORE_msubadrs_h = 0xE9,
  TRICORE_msubads_h = 0xEA,
  TRICORE_msubm_h = 0xEB,
  TRICORE_msubms_h = 0xEC,
  TRICORE_msubr_h = 0xED,
  TRICORE_msubr_q = 0xEE,
  TRICORE_msubrs_h = 0xEF,
  TRICORE_msubrs_q = 0xF0,
  TRICORE_msubs = 0xF1,
  TRICORE_msubs_h = 0xF2,
  TRICORE_msubs_q = 0xF3,
  TRICORE_msubs_u = 0xF4,
  TRICORE_mtcr = 0xF5,
  TRICORE_mul_f = 0xF6,
  TRICORE_mul_h = 0xF7,
  TRICORE_mul_q = 0xF8,
  TRICORE_mul_u = 0xF9,
  TRICORE_mul16 = 0xFA,
  TRICORE_mul32 = 0xFB,
  TRICORE_mulm_h = 0xFC,
  TRICORE_mulms_h = 0xFD,
  TRICORE_mulr_h = 0xFE,
  TRICORE_mulr_q = 0xFF,
  TRICORE_muls = 0x100,
  TRICORE_muls_u = 0x101,
  TRICORE_nand = 0x102,
  TRICORE_nand_t = 0x103,
  TRICORE_ne = 0x104,
  TRICORE_ne_a = 0x105,
  TRICORE_nez_a = 0x106,
  TRICORE_nop16 = 0x107,
  TRICORE_nop32 = 0x108,
  TRICORE_nor_t = 0x109,
  TRICORE_nor16 = 0x10A,
  TRICORE_nor32 = 0x10B,
  TRICORE_or_and_t = 0x10C,
  TRICORE_or_andn_t = 0x10D,
  TRICORE_or_eq = 0x10E,
  TRICORE_or_ge = 0x10F,
  TRICORE_or_ge_u = 0x110,
  TRICORE_or_lt = 0x111,
  TRICORE_or_lt_u = 0x112,
  TRICORE_or_ne = 0x113,
  TRICORE_or_nor_t = 0x114,
  TRICORE_or_or_t = 0x115,
  TRICORE_or_t = 0x116,
  TRICORE_or16 = 0x117,
  TRICORE_or32 = 0x118,
  TRICORE_orn = 0x119,
  TRICORE_orn_t = 0x11A,
  TRICORE_pack = 0x11B,
  TRICORE_parity = 0x11C,
  TRICORE_q31tof = 0x11D,
  TRICORE_qseed_f = 0x11E,
  TRICORE_ret16 = 0x11F,
  TRICORE_ret32 = 0x120,
  TRICORE_rfe16 = 0x121,
  TRICORE_rfe32 = 0x122,
  TRICORE_rfm = 0x123,
  TRICORE_rslcx = 0x124,
  TRICORE_rstv = 0x125,
  TRICORE_rsub16 = 0x126,
  TRICORE_rsub32 = 0x127,
  TRICORE_rsubs = 0x128,
  TRICORE_rsubs_u = 0x129,
  TRICORE_sat16_b = 0x12A,
  TRICORE_sat16_bu = 0x12B,
  TRICORE_sat16_h = 0x12C,
  TRICORE_sat16_hu = 0x12D,
  TRICORE_sat32_b = 0x12E,
  TRICORE_sat32_bu = 0x12F,
  TRICORE_sat32_h = 0x130,
  TRICORE_sat32_hu = 0x131,
  TRICORE_sel = 0x132,
  TRICORE_seln = 0x133,
  TRICORE_sh_and_t = 0x134,
  TRICORE_sh_andn_t = 0x135,
  TRICORE_sh_eq = 0x136,
  TRICORE_sh_ge = 0x137,
  TRICORE_sh_ge_u = 0x138,
  TRICORE_sh_h = 0x139,
  TRICORE_sh_lt = 0x13A,
  TRICORE_sh_lt_u = 0x13B,
  TRICORE_sh_nand_t = 0x13C,
  TRICORE_sh_ne = 0x13D,
  TRICORE_sh_nor_t = 0x13E,
  TRICORE_sh_or_t = 0x13F,
  TRICORE_sh_orn_t = 0x140,
  TRICORE_sh_xnor_t = 0x141,
  TRICORE_sh_xor_t = 0x142,
  TRICORE_sh16 = 0x143,
  TRICORE_sh32 = 0x144,
  TRICORE_sha_h = 0x145,
  TRICORE_sha16 = 0x146,
  TRICORE_sha32 = 0x147,
  TRICORE_shas = 0x148,
  TRICORE_st_d = 0x149,
  TRICORE_st_da = 0x14A,
  TRICORE_st_q = 0x14B,
  TRICORE_st_t = 0x14C,
  TRICORE_st16_a = 0x14D,
  TRICORE_st16_b = 0x14E,
  TRICORE_st16_h = 0x14F,
  TRICORE_st16_w = 0x150,
  TRICORE_st32_a = 0x151,
  TRICORE_st32_b = 0x152,
  TRICORE_st32_h = 0x153,
  TRICORE_st32_w = 0x154,
  TRICORE_stlcx = 0x155,
  TRICORE_stucx = 0x156,
  TRICORE_sub_b = 0x157,
  TRICORE_sub_f = 0x158,
  TRICORE_sub_h = 0x159,
  TRICORE_sub16 = 0x15A,
  TRICORE_sub16_a = 0x15B,
  TRICORE_sub32 = 0x15C,
  TRICORE_sub32_a = 0x15D,
  TRICORE_subc = 0x15E,
  TRICORE_subs_h = 0x15F,
  TRICORE_subs_hu = 0x160,
  TRICORE_subs_u = 0x161,
  TRICORE_subs16 = 0x162,
  TRICORE_subs32 = 0x163,
  TRICORE_subx = 0x164,
  TRICORE_svlcx = 0x165,
  TRICORE_swap_w = 0x166,
  TRICORE_syscall = 0x167,
  TRICORE_tlbdemap = 0x168,
  TRICORE_tlbflush_a = 0x169,
  TRICORE_tlbflush_b = 0x16A,
  TRICORE_tlbmap = 0x16B,
  TRICORE_tlbprobe_a = 0x16C,
  TRICORE_tlbprobe_i = 0x16D,
  TRICORE_trapsv = 0x16E,
  TRICORE_trapv = 0x16F,
  TRICORE_unpack = 0x170,
  TRICORE_updfl = 0x171,
  TRICORE_utof = 0x172,
  TRICORE_xnor = 0x173,
  TRICORE_xnor_t = 0x174,
  TRICORE_xor_eq = 0x175,
  TRICORE_xor_ge = 0x176,
  TRICORE_xor_ge_u = 0x177,
  TRICORE_xor_lt = 0x178,
  TRICORE_xor_lt_u = 0x179,
  TRICORE_xor_ne = 0x17A,
  TRICORE_xor_t = 0x17B,
  TRICORE_xor16 = 0x17C,
  TRICORE_xor32 = 0x17D,
  TRICORE_cachei_i = 0x17E,
  TRICORE_cachei_w = 0x17F,
  TRICORE_cachei_wi = 0x180,
  TRICORE_div = 0x181,
  TRICORE_div_u = 0x182,
  TRICORE_fcall = 0x183,
  TRICORE_fcalla = 0x184,
  TRICORE_fcalli = 0x185,
  TRICORE_fret16 = 0x186,
  TRICORE_fret32 = 0x187,
  TRICORE_ftoiz = 0x188,
  TRICORE_ftoq31z = 0x189,
  TRICORE_ftouz = 0x18A,
  TRICORE_restore = 0x18B,
  TRICORE_crc32 = 0x18C,
  TRICORE_wait = 0x18D,
  TRICORE_cmpswap_w = 0x18E,
  TRICORE_swapmsk_w = 0x18F,
  TRICORE_crc32_b = 0x190,
  TRICORE_crc32l_w = 0x191,
  TRICORE_crcn = 0x192,
  TRICORE_shuffle = 0x193,
  TRICORE_popcnt_w = 0x194,
  TRICORE_lha = 0x195,
  TRICORE_last = 0x196,
};

/* 1797 */
enum _2B42920CFE7D5F7B46449B0399BA2C05 : unsigned __int32
{
  ARC_null = 0x0,
  ARC_ld = 0x1,
  ARC_lr = 0x2,
  ARC_st = 0x3,
  ARC_sr = 0x4,
  ARC_store_instructions = 0x4,
  ARC_flag = 0x5,
  ARC_asr = 0x6,
  ARC_lsr = 0x7,
  ARC_sexb = 0x8,
  ARC_sexw = 0x9,
  ARC_sexh = 0x9,
  ARC_extb = 0xA,
  ARC_extw = 0xB,
  ARC_exth = 0xB,
  ARC_ror = 0xC,
  ARC_rrc = 0xD,
  ARC_b = 0xE,
  ARC_bl = 0xF,
  ARC_lp = 0x10,
  ARC_j = 0x11,
  ARC_jl = 0x12,
  ARC_add = 0x13,
  ARC_adc = 0x14,
  ARC_sub = 0x15,
  ARC_sbc = 0x16,
  ARC_and = 0x17,
  ARC_or = 0x18,
  ARC_bic = 0x19,
  ARC_xor = 0x1A,
  ARC_mov = 0x1B,
  ARC_nop = 0x1C,
  ARC_lsl = 0x1D,
  ARC_rlc = 0x1E,
  ARC_brk = 0x1F,
  ARC_sleep = 0x20,
  ARC_swi = 0x21,
  ARC_asl = 0x22,
  ARC_mul64 = 0x23,
  ARC_mulu64 = 0x24,
  ARC_max = 0x25,
  ARC_min = 0x26,
  ARC_swap = 0x27,
  ARC_norm = 0x28,
  ARC_bbit0 = 0x29,
  ARC_bbit1 = 0x2A,
  ARC_br = 0x2B,
  ARC_pop = 0x2C,
  ARC_push = 0x2D,
  ARC_abs = 0x2E,
  ARC_add1 = 0x2F,
  ARC_add2 = 0x30,
  ARC_add3 = 0x31,
  ARC_bclr = 0x32,
  ARC_bmsk = 0x33,
  ARC_bset = 0x34,
  ARC_btst = 0x35,
  ARC_bxor = 0x36,
  ARC_cmp = 0x37,
  ARC_ex = 0x38,
  ARC_mpy = 0x39,
  ARC_mpyh = 0x3A,
  ARC_mpym = 0x3A,
  ARC_mpyhu = 0x3B,
  ARC_mpyhm = 0x3B,
  ARC_mpyu = 0x3C,
  ARC_neg = 0x3D,
  ARC_not = 0x3E,
  ARC_rcmp = 0x3F,
  ARC_rsub = 0x40,
  ARC_rtie = 0x41,
  ARC_sub1 = 0x42,
  ARC_sub2 = 0x43,
  ARC_sub3 = 0x44,
  ARC_sync = 0x45,
  ARC_trap = 0x46,
  ARC_tst = 0x47,
  ARC_unimp = 0x48,
  ARC_abss = 0x49,
  ARC_abssw = 0x4A,
  ARC_abssh = 0x4A,
  ARC_adds = 0x4B,
  ARC_addsdw = 0x4C,
  ARC_asls = 0x4D,
  ARC_asrs = 0x4E,
  ARC_divaw = 0x4F,
  ARC_negs = 0x50,
  ARC_negsw = 0x51,
  ARC_negsh = 0x51,
  ARC_normw = 0x52,
  ARC_normh = 0x52,
  ARC_rnd16 = 0x53,
  ARC_rndh = 0x53,
  ARC_sat16 = 0x54,
  ARC_sath = 0x54,
  ARC_subs = 0x55,
  ARC_subsdw = 0x56,
  ARC_muldw = 0x57,
  ARC_muludw = 0x58,
  ARC_mulrdw = 0x59,
  ARC_macdw = 0x5A,
  ARC_macudw = 0x5B,
  ARC_macrdw = 0x5C,
  ARC_msubdw = 0x5D,
  ARC_mululw = 0x5E,
  ARC_mullw = 0x5F,
  ARC_mulflw = 0x60,
  ARC_maclw = 0x61,
  ARC_macflw = 0x62,
  ARC_machulw = 0x63,
  ARC_machlw = 0x64,
  ARC_machflw = 0x65,
  ARC_mulhlw = 0x66,
  ARC_mulhflw = 0x67,
  ARC_acm = 0x68,
  ARC_addqbs = 0x69,
  ARC_avgqb = 0x6A,
  ARC_clamp = 0x6B,
  ARC_daddh11 = 0x6C,
  ARC_daddh12 = 0x6D,
  ARC_daddh21 = 0x6E,
  ARC_daddh22 = 0x6F,
  ARC_dexcl1 = 0x70,
  ARC_dexcl2 = 0x71,
  ARC_dmulh11 = 0x72,
  ARC_dmulh12 = 0x73,
  ARC_dmulh21 = 0x74,
  ARC_dmulh22 = 0x75,
  ARC_dsubh11 = 0x76,
  ARC_dsubh12 = 0x77,
  ARC_dsubh21 = 0x78,
  ARC_dsubh22 = 0x79,
  ARC_drsubh11 = 0x7A,
  ARC_drsubh12 = 0x7B,
  ARC_drsubh21 = 0x7C,
  ARC_drsubh22 = 0x7D,
  ARC_fadd = 0x7E,
  ARC_fsadd = 0x7E,
  ARC_fmul = 0x7F,
  ARC_fsmul = 0x7F,
  ARC_fsub = 0x80,
  ARC_fssub = 0x80,
  ARC_fxtr = 0x81,
  ARC_iaddr = 0x82,
  ARC_mpyqb = 0x83,
  ARC_sfxtr = 0x84,
  ARC_pkqb = 0x85,
  ARC_upkqb = 0x86,
  ARC_xpkqb = 0x87,
  ARC_mpyw = 0x88,
  ARC_mpyuw = 0x89,
  ARC_bi = 0x8A,
  ARC_bih = 0x8B,
  ARC_ldi = 0x8C,
  ARC_aex = 0x8D,
  ARC_bmskn = 0x8E,
  ARC_seteq = 0x8F,
  ARC_setne = 0x90,
  ARC_setlt = 0x91,
  ARC_setge = 0x92,
  ARC_setlo = 0x93,
  ARC_seths = 0x94,
  ARC_setle = 0x95,
  ARC_setgt = 0x96,
  ARC_rol = 0x97,
  ARC_llock = 0x98,
  ARC_scond = 0x99,
  ARC_seti = 0x9A,
  ARC_clri = 0x9B,
  ARC_enter = 0x9C,
  ARC_leave = 0x9D,
  ARC_div = 0x9E,
  ARC_divu = 0x9F,
  ARC_rem = 0xA0,
  ARC_remu = 0xA1,
  ARC_asrsr = 0xA2,
  ARC_valgn2h = 0xA3,
  ARC_setacc = 0xA4,
  ARC_mac = 0xA5,
  ARC_macu = 0xA6,
  ARC_dmpyh = 0xA7,
  ARC_dmpyhu = 0xA8,
  ARC_dmach = 0xA9,
  ARC_dmachu = 0xAA,
  ARC_vadd2h = 0xAB,
  ARC_vadds2h = 0xAC,
  ARC_vsub2h = 0xAD,
  ARC_vsubs2h = 0xAE,
  ARC_vaddsub2h = 0xAF,
  ARC_vaddsubs2h = 0xB0,
  ARC_vsubadd2h = 0xB1,
  ARC_vsubadds2h = 0xB2,
  ARC_mpyd = 0xB3,
  ARC_mpydu = 0xB4,
  ARC_macd = 0xB5,
  ARC_macdu = 0xB6,
  ARC_vmpy2h = 0xB7,
  ARC_vmpy2hf = 0xB8,
  ARC_vmpy2hu = 0xB9,
  ARC_vmpy2hfr = 0xBA,
  ARC_vmac2h = 0xBB,
  ARC_vmac2hf = 0xBC,
  ARC_vmac2hu = 0xBD,
  ARC_vmac2hfr = 0xBE,
  ARC_vmpy2hwf = 0xBF,
  ARC_vasl2h = 0xC0,
  ARC_vasls2h = 0xC1,
  ARC_vasr2h = 0xC2,
  ARC_vasrs2h = 0xC3,
  ARC_vlsr2h = 0xC4,
  ARC_vasrsr2h = 0xC5,
  ARC_vadd4b = 0xC6,
  ARC_vmax2h = 0xC7,
  ARC_vsub4b = 0xC8,
  ARC_vmin2h = 0xC9,
  ARC_adcs = 0xCA,
  ARC_sbcs = 0xCB,
  ARC_dmpyhwf = 0xCC,
  ARC_vpack2hl = 0xCD,
  ARC_vpack2hm = 0xCE,
  ARC_dmpyhf = 0xCF,
  ARC_dmpyhfr = 0xD0,
  ARC_dmachf = 0xD1,
  ARC_dmachfr = 0xD2,
  ARC_vperm = 0xD3,
  ARC_bspush = 0xD4,
  ARC_swape = 0xD5,
  ARC_lsl16 = 0xD6,
  ARC_lsr16 = 0xD7,
  ARC_asr16 = 0xD8,
  ARC_asr8 = 0xD9,
  ARC_lsr8 = 0xDA,
  ARC_lsl8 = 0xDB,
  ARC_rol8 = 0xDC,
  ARC_ror8 = 0xDD,
  ARC_ffs = 0xDE,
  ARC_fls = 0xDF,
  ARC_getacc = 0xE0,
  ARC_normacc = 0xE1,
  ARC_satf = 0xE2,
  ARC_vpack2hbl = 0xE3,
  ARC_vpack2hbm = 0xE4,
  ARC_vpack2hblf = 0xE5,
  ARC_vpack2hbmf = 0xE6,
  ARC_vext2bhlf = 0xE7,
  ARC_vext2bhmf = 0xE8,
  ARC_vrep2hl = 0xE9,
  ARC_vrep2hm = 0xEA,
  ARC_vext2bhl = 0xEB,
  ARC_vext2bhm = 0xEC,
  ARC_vsext2bhl = 0xED,
  ARC_vsext2bhm = 0xEE,
  ARC_vabs2h = 0xEF,
  ARC_vabss2h = 0xF0,
  ARC_vneg2h = 0xF1,
  ARC_vnegs2h = 0xF2,
  ARC_vnorm2h = 0xF3,
  ARC_bspeek = 0xF4,
  ARC_bspop = 0xF5,
  ARC_sqrt = 0xF6,
  ARC_sqrtf = 0xF7,
  ARC_aslacc = 0xF8,
  ARC_aslsacc = 0xF9,
  ARC_flagacc = 0xFA,
  ARC_modif = 0xFB,
  ARC_cmpyhnfr = 0xFC,
  ARC_cmpyhfr = 0xFD,
  ARC_cmpychfr = 0xFE,
  ARC_vmsub2hf = 0xFF,
  ARC_vmsub2hfr = 0x100,
  ARC_cmpychnfr = 0x101,
  ARC_cmachnfr = 0x102,
  ARC_cmachfr = 0x103,
  ARC_cmacchnfr = 0x104,
  ARC_cmacchfr = 0x105,
  ARC_mpyf = 0x106,
  ARC_mpyfr = 0x107,
  ARC_macf = 0x108,
  ARC_macfr = 0x109,
  ARC_msubf = 0x10A,
  ARC_msubfr = 0x10B,
  ARC_divf = 0x10C,
  ARC_vmac2hnfr = 0x10D,
  ARC_vmsub2hnfr = 0x10E,
  ARC_mpydf = 0x10F,
  ARC_macdf = 0x110,
  ARC_msubwhfl = 0x111,
  ARC_msubdf = 0x112,
  ARC_dmpyhbl = 0x113,
  ARC_dmpyhbm = 0x114,
  ARC_dmachbl = 0x115,
  ARC_dmachbm = 0x116,
  ARC_msubwhflr = 0x117,
  ARC_cmpyhfmr = 0x118,
  ARC_cbflyhf0r = 0x119,
  ARC_mpywhl = 0x11A,
  ARC_macwhl = 0x11B,
  ARC_mpywhul = 0x11C,
  ARC_macwhul = 0x11D,
  ARC_mpywhfm = 0x11E,
  ARC_mpywhfmr = 0x11F,
  ARC_macwhfm = 0x120,
  ARC_macwhfmr = 0x121,
  ARC_mpywhfl = 0x122,
  ARC_mpywhflr = 0x123,
  ARC_macwhfl = 0x124,
  ARC_macwhflr = 0x125,
  ARC_macwhkl = 0x126,
  ARC_macwhkul = 0x127,
  ARC_mpywhkl = 0x128,
  ARC_mpywhkul = 0x129,
  ARC_msubwhfm = 0x12A,
  ARC_msubwhfmr = 0x12B,
  ARC_cbflyhf1r = 0x12C,
  ARC_fscmp = 0x12D,
  ARC_fscmpf = 0x12E,
  ARC_fsmadd = 0x12F,
  ARC_fsmsub = 0x130,
  ARC_fsdiv = 0x131,
  ARC_fcvt32 = 0x132,
  ARC_fssqrt = 0x133,
  ARC_jli = 0x134,
  ARC_ei = 0x135,
  ARC_kflag = 0x136,
  ARC_wevt = 0x137,
  ARC_last = 0x138,
};

/* 1798 */
enum _2C93FDADBFB653BF4322BBCDC7CB0EE1 : unsigned __int32
{
  TMS28_null = 0x0,
  TMS28_aborti = 0x1,
  TMS28_abs = 0x2,
  TMS28_abstc = 0x3,
  TMS28_add = 0x4,
  TMS28_addb = 0x5,
  TMS28_addcl = 0x6,
  TMS28_addcu = 0x7,
  TMS28_addl = 0x8,
  TMS28_addu = 0x9,
  TMS28_addul = 0xA,
  TMS28_adrk = 0xB,
  TMS28_and = 0xC,
  TMS28_andb = 0xD,
  TMS28_asp = 0xE,
  TMS28_asr = 0xF,
  TMS28_asr64 = 0x10,
  TMS28_asrl = 0x11,
  TMS28_b = 0x12,
  TMS28_banz = 0x13,
  TMS28_bar = 0x14,
  TMS28_bf = 0x15,
  TMS28_c27map = 0x16,
  TMS28_c27obj = 0x17,
  TMS28_c28addr = 0x18,
  TMS28_c28map = 0x19,
  TMS28_c28obj = 0x1A,
  TMS28_clrc = 0x1B,
  TMS28_cmp = 0x1C,
  TMS28_cmp64 = 0x1D,
  TMS28_cmpb = 0x1E,
  TMS28_cmpl = 0x1F,
  TMS28_cmpr = 0x20,
  TMS28_csb = 0x21,
  TMS28_dec = 0x22,
  TMS28_dint = 0x23,
  TMS28_dmac = 0x24,
  TMS28_dmov = 0x25,
  TMS28_eallow = 0x26,
  TMS28_edis = 0x27,
  TMS28_eint = 0x28,
  TMS28_estop0 = 0x29,
  TMS28_estop1 = 0x2A,
  TMS28_ffc = 0x2B,
  TMS28_flip = 0x2C,
  TMS28_iack = 0x2D,
  TMS28_idle = 0x2E,
  TMS28_imacl = 0x2F,
  TMS28_impyal = 0x30,
  TMS28_impyl = 0x31,
  TMS28_impysl = 0x32,
  TMS28_impyxul = 0x33,
  TMS28_in = 0x34,
  TMS28_inc = 0x35,
  TMS28_intr = 0x36,
  TMS28_iret = 0x37,
  TMS28_lb = 0x38,
  TMS28_lc = 0x39,
  TMS28_lcr = 0x3A,
  TMS28_loopnz = 0x3B,
  TMS28_loopz = 0x3C,
  TMS28_lpaddr = 0x3D,
  TMS28_lret = 0x3E,
  TMS28_lrete = 0x3F,
  TMS28_lretr = 0x40,
  TMS28_lsl = 0x41,
  TMS28_lsl64 = 0x42,
  TMS28_lsll = 0x43,
  TMS28_lsr = 0x44,
  TMS28_lsr64 = 0x45,
  TMS28_lsrl = 0x46,
  TMS28_mac = 0x47,
  TMS28_max = 0x48,
  TMS28_maxcul = 0x49,
  TMS28_maxl = 0x4A,
  TMS28_min = 0x4B,
  TMS28_mincul = 0x4C,
  TMS28_minl = 0x4D,
  TMS28_mov = 0x4E,
  TMS28_mova = 0x4F,
  TMS28_movad = 0x50,
  TMS28_movb = 0x51,
  TMS28_movdl = 0x52,
  TMS28_movh = 0x53,
  TMS28_movl = 0x54,
  TMS28_movp = 0x55,
  TMS28_movs = 0x56,
  TMS28_movu = 0x57,
  TMS28_movw = 0x58,
  TMS28_movx = 0x59,
  TMS28_movz = 0x5A,
  TMS28_mpy = 0x5B,
  TMS28_mpya = 0x5C,
  TMS28_mpyb = 0x5D,
  TMS28_mpys = 0x5E,
  TMS28_mpyu = 0x5F,
  TMS28_mpyxu = 0x60,
  TMS28_nasp = 0x61,
  TMS28_neg = 0x62,
  TMS28_neg64 = 0x63,
  TMS28_negtc = 0x64,
  TMS28_nop = 0x65,
  TMS28_norm = 0x66,
  TMS28_not = 0x67,
  TMS28_or = 0x68,
  TMS28_orb = 0x69,
  TMS28_out = 0x6A,
  TMS28_pop = 0x6B,
  TMS28_pread = 0x6C,
  TMS28_push = 0x6D,
  TMS28_pwrite = 0x6E,
  TMS28_qmacl = 0x6F,
  TMS28_qmpyal = 0x70,
  TMS28_qmpyl = 0x71,
  TMS28_qmpysl = 0x72,
  TMS28_qmpyul = 0x73,
  TMS28_qmpyxul = 0x74,
  TMS28_rol = 0x75,
  TMS28_ror = 0x76,
  TMS28_rpt = 0x77,
  TMS28_sat = 0x78,
  TMS28_sat64 = 0x79,
  TMS28_sb = 0x7A,
  TMS28_sbbu = 0x7B,
  TMS28_sbf = 0x7C,
  TMS28_sbrk = 0x7D,
  TMS28_setc = 0x7E,
  TMS28_sfr = 0x7F,
  TMS28_spm = 0x80,
  TMS28_sqra = 0x81,
  TMS28_sqrs = 0x82,
  TMS28_sub = 0x83,
  TMS28_subb = 0x84,
  TMS28_subbl = 0x85,
  TMS28_subcu = 0x86,
  TMS28_subcul = 0x87,
  TMS28_subl = 0x88,
  TMS28_subr = 0x89,
  TMS28_subrl = 0x8A,
  TMS28_subu = 0x8B,
  TMS28_subul = 0x8C,
  TMS28_sxtb = 0x8D,
  TMS28_tbit = 0x8E,
  TMS28_tclr = 0x8F,
  TMS28_test = 0x90,
  TMS28_trap = 0x91,
  TMS28_tset = 0x92,
  TMS28_uout = 0x93,
  TMS28_xb = 0x94,
  TMS28_xbanz = 0x95,
  TMS28_xcall = 0x96,
  TMS28_xmac = 0x97,
  TMS28_xmacd = 0x98,
  TMS28_xor = 0x99,
  TMS28_xorb = 0x9A,
  TMS28_xpread = 0x9B,
  TMS28_xpwrite = 0x9C,
  TMS28_xret = 0x9D,
  TMS28_xretc = 0x9E,
  TMS28_zalr = 0x9F,
  TMS28_zap = 0xA0,
  TMS28_zapa = 0xA1,
  TMS28_last = 0xA2,
};

/* 1799 */
enum _246AA8CB468DD99C5C77ABEC7AED7257 : unsigned __int32
{
  UNSP_null = 0x0,
  UNSP_add = 0x1,
  UNSP_adc = 0x2,
  UNSP_sub = 0x3,
  UNSP_sbc = 0x4,
  UNSP_cmp = 0x5,
  UNSP_cmpc = 0x6,
  UNSP_neg = 0x7,
  UNSP_negc = 0x8,
  UNSP_xor = 0x9,
  UNSP_load = 0xA,
  UNSP_or = 0xB,
  UNSP_and = 0xC,
  UNSP_test = 0xD,
  UNSP_store = 0xE,
  UNSP_add_s = 0xF,
  UNSP_adc_s = 0x10,
  UNSP_sub_s = 0x11,
  UNSP_sbc_s = 0x12,
  UNSP_cmp_s = 0x13,
  UNSP_cmpc_s = 0x14,
  UNSP_neg_s = 0x15,
  UNSP_negc_s = 0x16,
  UNSP_xor_s = 0x17,
  UNSP_load_s = 0x18,
  UNSP_or_s = 0x19,
  UNSP_and_s = 0x1A,
  UNSP_test_s = 0x1B,
  UNSP_store_s = 0x1C,
  UNSP_retf = 0x1D,
  UNSP_reti = 0x1E,
  UNSP_pop = 0x1F,
  UNSP_push = 0x20,
  UNSP_call = 0x21,
  UNSP_goto = 0x22,
  UNSP_nop = 0x23,
  UNSP_exp = 0x24,
  UNSP_jb = 0x25,
  UNSP_jae = 0x26,
  UNSP_jge = 0x27,
  UNSP_jl = 0x28,
  UNSP_jne = 0x29,
  UNSP_je = 0x2A,
  UNSP_jpl = 0x2B,
  UNSP_jmi = 0x2C,
  UNSP_jbe = 0x2D,
  UNSP_ja = 0x2E,
  UNSP_jle = 0x2F,
  UNSP_jg = 0x30,
  UNSP_jvc = 0x31,
  UNSP_jvs = 0x32,
  UNSP_jmp = 0x33,
  UNSP_mulss = 0x34,
  UNSP_mulus = 0x35,
  UNSP_muluu = 0x36,
  UNSP_divs = 0x37,
  UNSP_divq = 0x38,
  UNSP_int1 = 0x39,
  UNSP_int2 = 0x3A,
  UNSP_fir_mov = 0x3B,
  UNSP_fraction = 0x3C,
  UNSP_irq = 0x3D,
  UNSP_secbank = 0x3E,
  UNSP_fiq = 0x3F,
  UNSP_irqnest = 0x40,
  UNSP_break = 0x41,
  UNSP_asr = 0x42,
  UNSP_asror = 0x43,
  UNSP_lsl = 0x44,
  UNSP_lslor = 0x45,
  UNSP_lsr = 0x46,
  UNSP_lsror = 0x47,
  UNSP_rol = 0x48,
  UNSP_ror = 0x49,
  UNSP_tstb = 0x4A,
  UNSP_setb = 0x4B,
  UNSP_clrb = 0x4C,
  UNSP_invb = 0x4D,
  UNSP_last = 0x4E,
};

/* 1800 */
enum _7F86040BB27194B4B6B6A2B46CC5F6D4 : unsigned __int32
{
  DALVIK_UNUSED = 0x0,
  DALVIK_NOP = 0x1,
  DALVIK_MOVE = 0x2,
  DALVIK_MOVE_FROM16 = 0x3,
  DALVIK_MOVE_16 = 0x4,
  DALVIK_MOVE_WIDE = 0x5,
  DALVIK_MOVE_WIDE_FROM16 = 0x6,
  DALVIK_MOVE_WIDE_16 = 0x7,
  DALVIK_MOVE_OBJECT = 0x8,
  DALVIK_MOVE_OBJECT_FROM16 = 0x9,
  DALVIK_MOVE_OBJECT_16 = 0xA,
  DALVIK_MOVE_RESULT = 0xB,
  DALVIK_MOVE_RESULT_WIDE = 0xC,
  DALVIK_MOVE_RESULT_OBJECT = 0xD,
  DALVIK_MOVE_EXCEPTION = 0xE,
  DALVIK_RETURN_VOID = 0xF,
  DALVIK_RETURN = 0x10,
  DALVIK_RETURN_WIDE = 0x11,
  DALVIK_RETURN_OBJECT = 0x12,
  DALVIK_CONST_4 = 0x13,
  DALVIK_CONST_16 = 0x14,
  DALVIK_CONST = 0x15,
  DALVIK_CONST_HIGH16 = 0x16,
  DALVIK_CONST_WIDE_16 = 0x17,
  DALVIK_CONST_WIDE_32 = 0x18,
  DALVIK_CONST_WIDE = 0x19,
  DALVIK_CONST_WIDE_HIGH16 = 0x1A,
  DALVIK_CONST_STRING = 0x1B,
  DALVIK_CONST_STRING_JUMBO = 0x1C,
  DALVIK_CONST_CLASS = 0x1D,
  DALVIK_MONITOR_ENTER = 0x1E,
  DALVIK_MONITOR_EXIT = 0x1F,
  DALVIK_CHECK_CAST = 0x20,
  DALVIK_INSTANCE_OF = 0x21,
  DALVIK_ARRAY_LENGTH = 0x22,
  DALVIK_NEW_INSTANCE = 0x23,
  DALVIK_NEW_ARRAY = 0x24,
  DALVIK_FILLED_NEW_ARRAY = 0x25,
  DALVIK_FILLED_NEW_ARRAY_RANGE = 0x26,
  DALVIK_FILL_ARRAY_DATA = 0x27,
  DALVIK_THROW = 0x28,
  DALVIK_GOTO = 0x29,
  DALVIK_GOTO_16 = 0x2A,
  DALVIK_GOTO_32 = 0x2B,
  DALVIK_PACKED_SWITCH = 0x2C,
  DALVIK_SPARSE_SWITCH = 0x2D,
  DALVIK_CMPL_FLOAT = 0x2E,
  DALVIK_CMPG_FLOAT = 0x2F,
  DALVIK_CMPL_DOUBLE = 0x30,
  DALVIK_CMPG_DOUBLE = 0x31,
  DALVIK_CMP_LONG = 0x32,
  DALVIK_IF_EQ = 0x33,
  DALVIK_IF_NE = 0x34,
  DALVIK_IF_LT = 0x35,
  DALVIK_IF_GE = 0x36,
  DALVIK_IF_GT = 0x37,
  DALVIK_IF_LE = 0x38,
  DALVIK_IF_EQZ = 0x39,
  DALVIK_IF_NEZ = 0x3A,
  DALVIK_IF_LTZ = 0x3B,
  DALVIK_IF_GEZ = 0x3C,
  DALVIK_IF_GTZ = 0x3D,
  DALVIK_IF_LEZ = 0x3E,
  DALVIK_AGET = 0x3F,
  DALVIK_AGET_WIDE = 0x40,
  DALVIK_AGET_OBJECT = 0x41,
  DALVIK_AGET_BOOLEAN = 0x42,
  DALVIK_AGET_BYTE = 0x43,
  DALVIK_AGET_CHAR = 0x44,
  DALVIK_AGET_SHORT = 0x45,
  DALVIK_APUT = 0x46,
  DALVIK_APUT_WIDE = 0x47,
  DALVIK_APUT_OBJECT = 0x48,
  DALVIK_APUT_BOOLEAN = 0x49,
  DALVIK_APUT_BYTE = 0x4A,
  DALVIK_APUT_CHAR = 0x4B,
  DALVIK_APUT_SHORT = 0x4C,
  DALVIK_IGET = 0x4D,
  DALVIK_IGET_WIDE = 0x4E,
  DALVIK_IGET_OBJECT = 0x4F,
  DALVIK_IGET_BOOLEAN = 0x50,
  DALVIK_IGET_BYTE = 0x51,
  DALVIK_IGET_CHAR = 0x52,
  DALVIK_IGET_SHORT = 0x53,
  DALVIK_IPUT = 0x54,
  DALVIK_IPUT_WIDE = 0x55,
  DALVIK_IPUT_OBJECT = 0x56,
  DALVIK_IPUT_BOOLEAN = 0x57,
  DALVIK_IPUT_BYTE = 0x58,
  DALVIK_IPUT_CHAR = 0x59,
  DALVIK_IPUT_SHORT = 0x5A,
  DALVIK_SGET = 0x5B,
  DALVIK_SGET_WIDE = 0x5C,
  DALVIK_SGET_OBJECT = 0x5D,
  DALVIK_SGET_BOOLEAN = 0x5E,
  DALVIK_SGET_BYTE = 0x5F,
  DALVIK_SGET_CHAR = 0x60,
  DALVIK_SGET_SHORT = 0x61,
  DALVIK_SPUT = 0x62,
  DALVIK_SPUT_WIDE = 0x63,
  DALVIK_SPUT_OBJECT = 0x64,
  DALVIK_SPUT_BOOLEAN = 0x65,
  DALVIK_SPUT_BYTE = 0x66,
  DALVIK_SPUT_CHAR = 0x67,
  DALVIK_SPUT_SHORT = 0x68,
  DALVIK_INVOKE_VIRTUAL = 0x69,
  DALVIK_INVOKE_SUPER = 0x6A,
  DALVIK_INVOKE_DIRECT = 0x6B,
  DALVIK_INVOKE_STATIC = 0x6C,
  DALVIK_INVOKE_INTERFACE = 0x6D,
  DALVIK_INVOKE_VIRTUAL_RANGE = 0x6E,
  DALVIK_INVOKE_SUPER_RANGE = 0x6F,
  DALVIK_INVOKE_DIRECT_RANGE = 0x70,
  DALVIK_INVOKE_STATIC_RANGE = 0x71,
  DALVIK_INVOKE_INTERFACE_RANGE = 0x72,
  DALVIK_NEG_INT = 0x73,
  DALVIK_NOT_INT = 0x74,
  DALVIK_NEG_LONG = 0x75,
  DALVIK_NOT_LONG = 0x76,
  DALVIK_NEG_FLOAT = 0x77,
  DALVIK_NEG_DOUBLE = 0x78,
  DALVIK_INT_TO_LONG = 0x79,
  DALVIK_INT_TO_FLOAT = 0x7A,
  DALVIK_INT_TO_DOUBLE = 0x7B,
  DALVIK_LONG_TO_INT = 0x7C,
  DALVIK_LONG_TO_FLOAT = 0x7D,
  DALVIK_LONG_TO_DOUBLE = 0x7E,
  DALVIK_FLOAT_TO_INT = 0x7F,
  DALVIK_FLOAT_TO_LONG = 0x80,
  DALVIK_FLOAT_TO_DOUBLE = 0x81,
  DALVIK_DOUBLE_TO_INT = 0x82,
  DALVIK_DOUBLE_TO_LONG = 0x83,
  DALVIK_DOUBLE_TO_FLOAT = 0x84,
  DALVIK_INT_TO_BYTE = 0x85,
  DALVIK_INT_TO_CHAR = 0x86,
  DALVIK_INT_TO_SHORT = 0x87,
  DALVIK_ADD_INT = 0x88,
  DALVIK_SUB_INT = 0x89,
  DALVIK_MUL_INT = 0x8A,
  DALVIK_DIV_INT = 0x8B,
  DALVIK_REM_INT = 0x8C,
  DALVIK_AND_INT = 0x8D,
  DALVIK_OR_INT = 0x8E,
  DALVIK_XOR_INT = 0x8F,
  DALVIK_SHL_INT = 0x90,
  DALVIK_SHR_INT = 0x91,
  DALVIK_USHR_INT = 0x92,
  DALVIK_ADD_LONG = 0x93,
  DALVIK_SUB_LONG = 0x94,
  DALVIK_MUL_LONG = 0x95,
  DALVIK_DIV_LONG = 0x96,
  DALVIK_REM_LONG = 0x97,
  DALVIK_AND_LONG = 0x98,
  DALVIK_OR_LONG = 0x99,
  DALVIK_XOR_LONG = 0x9A,
  DALVIK_SHL_LONG = 0x9B,
  DALVIK_SHR_LONG = 0x9C,
  DALVIK_USHR_LONG = 0x9D,
  DALVIK_ADD_FLOAT = 0x9E,
  DALVIK_SUB_FLOAT = 0x9F,
  DALVIK_MUL_FLOAT = 0xA0,
  DALVIK_DIV_FLOAT = 0xA1,
  DALVIK_REM_FLOAT = 0xA2,
  DALVIK_ADD_DOUBLE = 0xA3,
  DALVIK_SUB_DOUBLE = 0xA4,
  DALVIK_MUL_DOUBLE = 0xA5,
  DALVIK_DIV_DOUBLE = 0xA6,
  DALVIK_REM_DOUBLE = 0xA7,
  DALVIK_ADD_INT_2ADDR = 0xA8,
  DALVIK_SUB_INT_2ADDR = 0xA9,
  DALVIK_MUL_INT_2ADDR = 0xAA,
  DALVIK_DIV_INT_2ADDR = 0xAB,
  DALVIK_REM_INT_2ADDR = 0xAC,
  DALVIK_AND_INT_2ADDR = 0xAD,
  DALVIK_OR_INT_2ADDR = 0xAE,
  DALVIK_XOR_INT_2ADDR = 0xAF,
  DALVIK_SHL_INT_2ADDR = 0xB0,
  DALVIK_SHR_INT_2ADDR = 0xB1,
  DALVIK_USHR_INT_2ADDR = 0xB2,
  DALVIK_ADD_LONG_2ADDR = 0xB3,
  DALVIK_SUB_LONG_2ADDR = 0xB4,
  DALVIK_MUL_LONG_2ADDR = 0xB5,
  DALVIK_DIV_LONG_2ADDR = 0xB6,
  DALVIK_REM_LONG_2ADDR = 0xB7,
  DALVIK_AND_LONG_2ADDR = 0xB8,
  DALVIK_OR_LONG_2ADDR = 0xB9,
  DALVIK_XOR_LONG_2ADDR = 0xBA,
  DALVIK_SHL_LONG_2ADDR = 0xBB,
  DALVIK_SHR_LONG_2ADDR = 0xBC,
  DALVIK_USHR_LONG_2ADDR = 0xBD,
  DALVIK_ADD_FLOAT_2ADDR = 0xBE,
  DALVIK_SUB_FLOAT_2ADDR = 0xBF,
  DALVIK_MUL_FLOAT_2ADDR = 0xC0,
  DALVIK_DIV_FLOAT_2ADDR = 0xC1,
  DALVIK_REM_FLOAT_2ADDR = 0xC2,
  DALVIK_ADD_DOUBLE_2ADDR = 0xC3,
  DALVIK_SUB_DOUBLE_2ADDR = 0xC4,
  DALVIK_MUL_DOUBLE_2ADDR = 0xC5,
  DALVIK_DIV_DOUBLE_2ADDR = 0xC6,
  DALVIK_REM_DOUBLE_2ADDR = 0xC7,
  DALVIK_ADD_INT_LIT16 = 0xC8,
  DALVIK_RSUB_INT = 0xC9,
  DALVIK_MUL_INT_LIT16 = 0xCA,
  DALVIK_DIV_INT_LIT16 = 0xCB,
  DALVIK_REM_INT_LIT16 = 0xCC,
  DALVIK_AND_INT_LIT16 = 0xCD,
  DALVIK_OR_INT_LIT16 = 0xCE,
  DALVIK_XOR_INT_LIT16 = 0xCF,
  DALVIK_ADD_INT_LIT8 = 0xD0,
  DALVIK_RSUB_INT_LIT8 = 0xD1,
  DALVIK_MUL_INT_LIT8 = 0xD2,
  DALVIK_DIV_INT_LIT8 = 0xD3,
  DALVIK_REM_INT_LIT8 = 0xD4,
  DALVIK_AND_INT_LIT8 = 0xD5,
  DALVIK_OR_INT_LIT8 = 0xD6,
  DALVIK_XOR_INT_LIT8 = 0xD7,
  DALVIK_SHL_INT_LIT8 = 0xD8,
  DALVIK_SHR_INT_LIT8 = 0xD9,
  DALVIK_USHR_INT_LIT8 = 0xDA,
  DALVIK_IGET_VOLATILE = 0xDB,
  DALVIK_IPUT_VOLATILE = 0xDC,
  DALVIK_SGET_VOLATILE = 0xDD,
  DALVIK_SPUT_VOLATILE = 0xDE,
  DALVIK_IGET_OBJECT_VOLATILE = 0xDF,
  DALVIK_IGET_WIDE_VOLATILE = 0xE0,
  DALVIK_IPUT_WIDE_VOLATILE = 0xE1,
  DALVIK_SGET_WIDE_VOLATILE = 0xE2,
  DALVIK_SPUT_WIDE_VOLATILE = 0xE3,
  DALVIK_BREAKPOINT = 0xE4,
  DALVIK_THROW_VERIFICATION_ERROR = 0xE5,
  DALVIK_EXECUTE_INLINE = 0xE6,
  DALVIK_EXECUTE_INLINE_RANGE = 0xE7,
  DALVIK_INVOKE_DIRECT_EMPTY = 0xE8,
  DALVIK_RETURN_VOID_BARRIER = 0xE9,
  DALVIK_IGET_QUICK = 0xEA,
  DALVIK_IGET_WIDE_QUICK = 0xEB,
  DALVIK_IGET_OBJECT_QUICK = 0xEC,
  DALVIK_IPUT_QUICK = 0xED,
  DALVIK_IPUT_WIDE_QUICK = 0xEE,
  DALVIK_IPUT_OBJECT_QUICK = 0xEF,
  DALVIK_INVOKE_VIRTUAL_QUICK = 0xF0,
  DALVIK_INVOKE_VIRTUAL_QUICK_RANGE = 0xF1,
  DALVIK_INVOKE_SUPER_QUICK = 0xF2,
  DALVIK_INVOKE_SUPER_QUICK_RANGE = 0xF3,
  DALVIK_IPUT_OBJECT_VOLATILE = 0xF4,
  DALVIK_SGET_OBJECT_VOLATILE = 0xF5,
  DALVIK_SPUT_OBJECT_VOLATILE = 0xF6,
  DALVIK_INVOKE_POLYMORPHIC = 0xF7,
  DALVIK_INVOKE_POLYMORPHIC_RANGE = 0xF8,
  DALVIK_INVOKE_CUSTOM = 0xF9,
  DALVIK_INVOKE_CUSTOM_RANGE = 0xFA,
  DALVIK_LAST = 0xFB,
};

/* 1801 */
enum _3E426F96F68C120BD73661AAC99B228D : unsigned __int32
{
  s39_null = 0x0,
  s39_a = 0x1,
  s39_ad = 0x2,
  s39_adb = 0x3,
  s39_adbr = 0x4,
  s39_adr = 0x5,
  s39_adtr = 0x6,
  s39_adtra = 0x7,
  s39_ae = 0x8,
  s39_aeb = 0x9,
  s39_aebr = 0xA,
  s39_aer = 0xB,
  s39_afi = 0xC,
  s39_ag = 0xD,
  s39_agf = 0xE,
  s39_agfi = 0xF,
  s39_agfr = 0x10,
  s39_agh = 0x11,
  s39_aghi = 0x12,
  s39_aghik = 0x13,
  s39_agr = 0x14,
  s39_agrk = 0x15,
  s39_agsi = 0x16,
  s39_ah = 0x17,
  s39_ahhhr = 0x18,
  s39_ahhlr = 0x19,
  s39_ahi = 0x1A,
  s39_ahik = 0x1B,
  s39_ahy = 0x1C,
  s39_aih = 0x1D,
  s39_al = 0x1E,
  s39_alc = 0x1F,
  s39_alcg = 0x20,
  s39_alcgr = 0x21,
  s39_alcr = 0x22,
  s39_alfi = 0x23,
  s39_alg = 0x24,
  s39_algf = 0x25,
  s39_algfi = 0x26,
  s39_algfr = 0x27,
  s39_alghsik = 0x28,
  s39_algr = 0x29,
  s39_algrk = 0x2A,
  s39_algsi = 0x2B,
  s39_alhhhr = 0x2C,
  s39_alhhlr = 0x2D,
  s39_alhsik = 0x2E,
  s39_alr = 0x2F,
  s39_alrk = 0x30,
  s39_alsi = 0x31,
  s39_alsih = 0x32,
  s39_alsihn = 0x33,
  s39_aly = 0x34,
  s39_ap = 0x35,
  s39_ar = 0x36,
  s39_ark = 0x37,
  s39_asi = 0x38,
  s39_au = 0x39,
  s39_aur = 0x3A,
  s39_aw = 0x3B,
  s39_awr = 0x3C,
  s39_axbr = 0x3D,
  s39_axr = 0x3E,
  s39_axtr = 0x3F,
  s39_axtra = 0x40,
  s39_ay = 0x41,
  s39_b = 0x42,
  s39_bo = 0x43,
  s39_bh = 0x44,
  s39_bnle = 0x45,
  s39_bl = 0x46,
  s39_bnhe = 0x47,
  s39_blh = 0x48,
  s39_bne = 0x49,
  s39_be = 0x4A,
  s39_bnlh = 0x4B,
  s39_bhe = 0x4C,
  s39_bnl = 0x4D,
  s39_ble = 0x4E,
  s39_bnh = 0x4F,
  s39_bno = 0x50,
  s39_bor = 0x51,
  s39_bhr = 0x52,
  s39_bnler = 0x53,
  s39_blr = 0x54,
  s39_bnher = 0x55,
  s39_blhr = 0x56,
  s39_bner = 0x57,
  s39_ber = 0x58,
  s39_bnlhr = 0x59,
  s39_bher = 0x5A,
  s39_bnlr = 0x5B,
  s39_bler = 0x5C,
  s39_bnhr = 0x5D,
  s39_bnor = 0x5E,
  s39_bakr = 0x5F,
  s39_bal = 0x60,
  s39_balr = 0x61,
  s39_bas = 0x62,
  s39_basr = 0x63,
  s39_bassm = 0x64,
  s39_bc = 0x65,
  s39_bcr = 0x66,
  s39_bct = 0x67,
  s39_bctg = 0x68,
  s39_bctgr = 0x69,
  s39_bctr = 0x6A,
  s39_bi = 0x6B,
  s39_bio = 0x6C,
  s39_bih = 0x6D,
  s39_binle = 0x6E,
  s39_bil = 0x6F,
  s39_binhe = 0x70,
  s39_bilh = 0x71,
  s39_bine = 0x72,
  s39_bie = 0x73,
  s39_binlh = 0x74,
  s39_bihe = 0x75,
  s39_binl = 0x76,
  s39_bile = 0x77,
  s39_binh = 0x78,
  s39_bino = 0x79,
  s39_bic = 0x7A,
  s39_bpp = 0x7B,
  s39_bprp = 0x7C,
  s39_br = 0x7D,
  s39_bras = 0x7E,
  s39_brasl = 0x7F,
  s39_brc = 0x80,
  s39_brcl = 0x81,
  s39_brct = 0x82,
  s39_brctg = 0x83,
  s39_brcth = 0x84,
  s39_brxh = 0x85,
  s39_brxhg = 0x86,
  s39_brxle = 0x87,
  s39_brxlg = 0x88,
  s39_bsa = 0x89,
  s39_bsg = 0x8A,
  s39_bsm = 0x8B,
  s39_bxh = 0x8C,
  s39_bxhg = 0x8D,
  s39_bxle = 0x8E,
  s39_bxleg = 0x8F,
  s39_c = 0x90,
  s39_cd = 0x91,
  s39_cdb = 0x92,
  s39_cdbr = 0x93,
  s39_cdfbr = 0x94,
  s39_cdfbra = 0x95,
  s39_cdfr = 0x96,
  s39_cdftr = 0x97,
  s39_cdgbr = 0x98,
  s39_cdgbra = 0x99,
  s39_cdgr = 0x9A,
  s39_cdgtr = 0x9B,
  s39_cdgtra = 0x9C,
  s39_cdlfbr = 0x9D,
  s39_cdlftr = 0x9E,
  s39_cdlgbr = 0x9F,
  s39_cdlgtr = 0xA0,
  s39_cdpt = 0xA1,
  s39_cdr = 0xA2,
  s39_cds = 0xA3,
  s39_cdsg = 0xA4,
  s39_cdstr = 0xA5,
  s39_cdsy = 0xA6,
  s39_cdtr = 0xA7,
  s39_cdutr = 0xA8,
  s39_cdzt = 0xA9,
  s39_ce = 0xAA,
  s39_ceb = 0xAB,
  s39_cebr = 0xAC,
  s39_cedtr = 0xAD,
  s39_cefbr = 0xAE,
  s39_cefbra = 0xAF,
  s39_cefr = 0xB0,
  s39_cegbr = 0xB1,
  s39_cegbra = 0xB2,
  s39_cegr = 0xB3,
  s39_celfbr = 0xB4,
  s39_celgbr = 0xB5,
  s39_cer = 0xB6,
  s39_cextr = 0xB7,
  s39_cfc = 0xB8,
  s39_cfdbr = 0xB9,
  s39_cfdbra = 0xBA,
  s39_cfdr = 0xBB,
  s39_cfdtr = 0xBC,
  s39_cfebr = 0xBD,
  s39_cfebra = 0xBE,
  s39_cfer = 0xBF,
  s39_cfi = 0xC0,
  s39_cfxbr = 0xC1,
  s39_cfxbra = 0xC2,
  s39_cfxr = 0xC3,
  s39_cfxtr = 0xC4,
  s39_cg = 0xC5,
  s39_cgdbr = 0xC6,
  s39_cgdbra = 0xC7,
  s39_cgdr = 0xC8,
  s39_cgdtr = 0xC9,
  s39_cgdtra = 0xCA,
  s39_cgebr = 0xCB,
  s39_cgebra = 0xCC,
  s39_cger = 0xCD,
  s39_cgf = 0xCE,
  s39_cgfi = 0xCF,
  s39_cgfr = 0xD0,
  s39_cgfrl = 0xD1,
  s39_cgh = 0xD2,
  s39_cghi = 0xD3,
  s39_cghrl = 0xD4,
  s39_cghsi = 0xD5,
  s39_cgib = 0xD6,
  s39_cgibh = 0xD7,
  s39_cgibnhe = 0xD8,
  s39_cgiblh = 0xD9,
  s39_cgibnlh = 0xDA,
  s39_cgibnl = 0xDB,
  s39_cgible = 0xDC,
  s39_cgij = 0xDD,
  s39_cgijh = 0xDE,
  s39_cgijnhe = 0xDF,
  s39_cgijlh = 0xE0,
  s39_cgijnlh = 0xE1,
  s39_cgijnl = 0xE2,
  s39_cgijle = 0xE3,
  s39_cgit = 0xE4,
  s39_cgith = 0xE5,
  s39_cgitnhe = 0xE6,
  s39_cgitlh = 0xE7,
  s39_cgitnlh = 0xE8,
  s39_cgitnl = 0xE9,
  s39_cgitle = 0xEA,
  s39_cgr = 0xEB,
  s39_cgrb = 0xEC,
  s39_cgrbh = 0xED,
  s39_cgrbnhe = 0xEE,
  s39_cgrblh = 0xEF,
  s39_cgrbnlh = 0xF0,
  s39_cgrbnl = 0xF1,
  s39_cgrble = 0xF2,
  s39_cgrj = 0xF3,
  s39_cgrjh = 0xF4,
  s39_cgrjnhe = 0xF5,
  s39_cgrjlh = 0xF6,
  s39_cgrjnlh = 0xF7,
  s39_cgrjnl = 0xF8,
  s39_cgrjle = 0xF9,
  s39_cgrl = 0xFA,
  s39_cgrt = 0xFB,
  s39_cgrth = 0xFC,
  s39_cgrtnhe = 0xFD,
  s39_cgrtlh = 0xFE,
  s39_cgrtnlh = 0xFF,
  s39_cgrtnl = 0x100,
  s39_cgrtle = 0x101,
  s39_cgxbr = 0x102,
  s39_cgxbra = 0x103,
  s39_cgxr = 0x104,
  s39_cgxtr = 0x105,
  s39_cgxtra = 0x106,
  s39_ch = 0x107,
  s39_chf = 0x108,
  s39_chhr = 0x109,
  s39_chhsi = 0x10A,
  s39_chi = 0x10B,
  s39_chlr = 0x10C,
  s39_chrl = 0x10D,
  s39_chsi = 0x10E,
  s39_chy = 0x10F,
  s39_cib = 0x110,
  s39_cibh = 0x111,
  s39_cibnhe = 0x112,
  s39_ciblh = 0x113,
  s39_cibnlh = 0x114,
  s39_cibnl = 0x115,
  s39_cible = 0x116,
  s39_cih = 0x117,
  s39_cij = 0x118,
  s39_cijh = 0x119,
  s39_cijnhe = 0x11A,
  s39_cijlh = 0x11B,
  s39_cijnlh = 0x11C,
  s39_cijnl = 0x11D,
  s39_cijle = 0x11E,
  s39_cit = 0x11F,
  s39_cith = 0x120,
  s39_citnhe = 0x121,
  s39_citlh = 0x122,
  s39_citnlh = 0x123,
  s39_citnl = 0x124,
  s39_citle = 0x125,
  s39_cksm = 0x126,
  s39_cl = 0x127,
  s39_clc = 0x128,
  s39_clcl = 0x129,
  s39_clcle = 0x12A,
  s39_clclu = 0x12B,
  s39_clfdbr = 0x12C,
  s39_clfdtr = 0x12D,
  s39_clfebr = 0x12E,
  s39_clfhsi = 0x12F,
  s39_clfi = 0x130,
  s39_clfit = 0x131,
  s39_clfith = 0x132,
  s39_clfitnhe = 0x133,
  s39_clfitlh = 0x134,
  s39_clfitnlh = 0x135,
  s39_clfitnl = 0x136,
  s39_clfitle = 0x137,
  s39_clfxbr = 0x138,
  s39_clfxtr = 0x139,
  s39_clg = 0x13A,
  s39_clgdbr = 0x13B,
  s39_clgdtr = 0x13C,
  s39_clgebr = 0x13D,
  s39_clgf = 0x13E,
  s39_clgfi = 0x13F,
  s39_clgfr = 0x140,
  s39_clgfrl = 0x141,
  s39_clghrl = 0x142,
  s39_clghsi = 0x143,
  s39_clgib = 0x144,
  s39_clgibh = 0x145,
  s39_clgibnhe = 0x146,
  s39_clgiblh = 0x147,
  s39_clgibnlh = 0x148,
  s39_clgibnl = 0x149,
  s39_clgible = 0x14A,
  s39_clgij = 0x14B,
  s39_clgijh = 0x14C,
  s39_clgijnhe = 0x14D,
  s39_clgijlh = 0x14E,
  s39_clgijnlh = 0x14F,
  s39_clgijnl = 0x150,
  s39_clgijle = 0x151,
  s39_clgit = 0x152,
  s39_clgith = 0x153,
  s39_clgitnhe = 0x154,
  s39_clgitlh = 0x155,
  s39_clgitnlh = 0x156,
  s39_clgitnl = 0x157,
  s39_clgitle = 0x158,
  s39_clgr = 0x159,
  s39_clgrb = 0x15A,
  s39_clgrbh = 0x15B,
  s39_clgrbnhe = 0x15C,
  s39_clgrblh = 0x15D,
  s39_clgrbnlh = 0x15E,
  s39_clgrbnl = 0x15F,
  s39_clgrble = 0x160,
  s39_clgrj = 0x161,
  s39_clgrjh = 0x162,
  s39_clgrjnhe = 0x163,
  s39_clgrjlh = 0x164,
  s39_clgrjnlh = 0x165,
  s39_clgrjnl = 0x166,
  s39_clgrjle = 0x167,
  s39_clgrl = 0x168,
  s39_clgrt = 0x169,
  s39_clgrth = 0x16A,
  s39_clgrtnhe = 0x16B,
  s39_clgrtlh = 0x16C,
  s39_clgrtnlh = 0x16D,
  s39_clgrtnl = 0x16E,
  s39_clgrtle = 0x16F,
  s39_clgt = 0x170,
  s39_clgth = 0x171,
  s39_clgtnhe = 0x172,
  s39_clgtlh = 0x173,
  s39_clgtnlh = 0x174,
  s39_clgtnl = 0x175,
  s39_clgtle = 0x176,
  s39_clgxbr = 0x177,
  s39_clgxtr = 0x178,
  s39_clhf = 0x179,
  s39_clhhr = 0x17A,
  s39_clhhsi = 0x17B,
  s39_clhlr = 0x17C,
  s39_clhrl = 0x17D,
  s39_cli = 0x17E,
  s39_clib = 0x17F,
  s39_clibh = 0x180,
  s39_clibnhe = 0x181,
  s39_cliblh = 0x182,
  s39_clibnlh = 0x183,
  s39_clibnl = 0x184,
  s39_clible = 0x185,
  s39_clih = 0x186,
  s39_clij = 0x187,
  s39_clijh = 0x188,
  s39_clijnhe = 0x189,
  s39_clijlh = 0x18A,
  s39_clijnlh = 0x18B,
  s39_clijnl = 0x18C,
  s39_clijle = 0x18D,
  s39_cliy = 0x18E,
  s39_clm = 0x18F,
  s39_clmh = 0x190,
  s39_clmy = 0x191,
  s39_clr = 0x192,
  s39_clrb = 0x193,
  s39_clrbh = 0x194,
  s39_clrbnhe = 0x195,
  s39_clrblh = 0x196,
  s39_clrbnlh = 0x197,
  s39_clrbnl = 0x198,
  s39_clrble = 0x199,
  s39_clrj = 0x19A,
  s39_clrjh = 0x19B,
  s39_clrjnhe = 0x19C,
  s39_clrjlh = 0x19D,
  s39_clrjnlh = 0x19E,
  s39_clrjnl = 0x19F,
  s39_clrjle = 0x1A0,
  s39_clrl = 0x1A1,
  s39_clrt = 0x1A2,
  s39_clrth = 0x1A3,
  s39_clrtnhe = 0x1A4,
  s39_clrtlh = 0x1A5,
  s39_clrtnlh = 0x1A6,
  s39_clrtnl = 0x1A7,
  s39_clrtle = 0x1A8,
  s39_clst = 0x1A9,
  s39_clt = 0x1AA,
  s39_clth = 0x1AB,
  s39_cltnhe = 0x1AC,
  s39_cltlh = 0x1AD,
  s39_cltnlh = 0x1AE,
  s39_cltnl = 0x1AF,
  s39_cltle = 0x1B0,
  s39_cly = 0x1B1,
  s39_cmpsc = 0x1B2,
  s39_cp = 0x1B3,
  s39_cpdt = 0x1B4,
  s39_cpsdr = 0x1B5,
  s39_cpxt = 0x1B6,
  s39_cpya = 0x1B7,
  s39_cr = 0x1B8,
  s39_crb = 0x1B9,
  s39_crbh = 0x1BA,
  s39_crbnhe = 0x1BB,
  s39_crblh = 0x1BC,
  s39_crbnlh = 0x1BD,
  s39_crbnl = 0x1BE,
  s39_crble = 0x1BF,
  s39_crdte = 0x1C0,
  s39_crj = 0x1C1,
  s39_crjh = 0x1C2,
  s39_crjnhe = 0x1C3,
  s39_crjlh = 0x1C4,
  s39_crjnlh = 0x1C5,
  s39_crjnl = 0x1C6,
  s39_crjle = 0x1C7,
  s39_crl = 0x1C8,
  s39_crt = 0x1C9,
  s39_crth = 0x1CA,
  s39_crtnhe = 0x1CB,
  s39_crtlh = 0x1CC,
  s39_crtnlh = 0x1CD,
  s39_crtnl = 0x1CE,
  s39_crtle = 0x1CF,
  s39_cs = 0x1D0,
  s39_csch = 0x1D1,
  s39_csdtr = 0x1D2,
  s39_csg = 0x1D3,
  s39_csp = 0x1D4,
  s39_cspg = 0x1D5,
  s39_csst = 0x1D6,
  s39_csxtr = 0x1D7,
  s39_csy = 0x1D8,
  s39_cu12 = 0x1D9,
  s39_cu14 = 0x1DA,
  s39_cu21 = 0x1DB,
  s39_cu24 = 0x1DC,
  s39_cu41 = 0x1DD,
  s39_cu42 = 0x1DE,
  s39_cudtr = 0x1DF,
  s39_cuse = 0x1E0,
  s39_cutfu = 0x1E1,
  s39_cuutf = 0x1E2,
  s39_cuxtr = 0x1E3,
  s39_cvb = 0x1E4,
  s39_cvbg = 0x1E5,
  s39_cvby = 0x1E6,
  s39_cvd = 0x1E7,
  s39_cvdg = 0x1E8,
  s39_cvdy = 0x1E9,
  s39_cxbr = 0x1EA,
  s39_cxfbr = 0x1EB,
  s39_cxfbra = 0x1EC,
  s39_cxfr = 0x1ED,
  s39_cxftr = 0x1EE,
  s39_cxgbr = 0x1EF,
  s39_cxgbra = 0x1F0,
  s39_cxgr = 0x1F1,
  s39_cxgtr = 0x1F2,
  s39_cxgtra = 0x1F3,
  s39_cxlfbr = 0x1F4,
  s39_cxlftr = 0x1F5,
  s39_cxlgbr = 0x1F6,
  s39_cxlgtr = 0x1F7,
  s39_cxpt = 0x1F8,
  s39_cxr = 0x1F9,
  s39_cxstr = 0x1FA,
  s39_cxtr = 0x1FB,
  s39_cxutr = 0x1FC,
  s39_cxzt = 0x1FD,
  s39_cy = 0x1FE,
  s39_czdt = 0x1FF,
  s39_czxt = 0x200,
  s39_d = 0x201,
  s39_dd = 0x202,
  s39_ddb = 0x203,
  s39_ddbr = 0x204,
  s39_ddr = 0x205,
  s39_ddtr = 0x206,
  s39_ddtra = 0x207,
  s39_de = 0x208,
  s39_deb = 0x209,
  s39_debr = 0x20A,
  s39_der = 0x20B,
  s39_dfltcc = 0x20C,
  s39_diag = 0x20D,
  s39_didbr = 0x20E,
  s39_diebr = 0x20F,
  s39_dl = 0x210,
  s39_dlg = 0x211,
  s39_dlgr = 0x212,
  s39_dlr = 0x213,
  s39_dp = 0x214,
  s39_dr = 0x215,
  s39_dsg = 0x216,
  s39_dsgf = 0x217,
  s39_dsgfr = 0x218,
  s39_dsgr = 0x219,
  s39_dxbr = 0x21A,
  s39_dxr = 0x21B,
  s39_dxtr = 0x21C,
  s39_dxtra = 0x21D,
  s39_ear = 0x21E,
  s39_ecag = 0x21F,
  s39_ecctr = 0x220,
  s39_ecpga = 0x221,
  s39_ectg = 0x222,
  s39_ed = 0x223,
  s39_edmk = 0x224,
  s39_eedtr = 0x225,
  s39_eextr = 0x226,
  s39_efpc = 0x227,
  s39_epair = 0x228,
  s39_epar = 0x229,
  s39_epctr = 0x22A,
  s39_epsw = 0x22B,
  s39_ereg = 0x22C,
  s39_eregg = 0x22D,
  s39_esair = 0x22E,
  s39_esar = 0x22F,
  s39_esdtr = 0x230,
  s39_esea = 0x231,
  s39_esta = 0x232,
  s39_esxtr = 0x233,
  s39_etnd = 0x234,
  s39_ex = 0x235,
  s39_exrl = 0x236,
  s39_fidbr = 0x237,
  s39_fidbra = 0x238,
  s39_fidr = 0x239,
  s39_fidtr = 0x23A,
  s39_fiebr = 0x23B,
  s39_fiebra = 0x23C,
  s39_fier = 0x23D,
  s39_fixbr = 0x23E,
  s39_fixbra = 0x23F,
  s39_fixr = 0x240,
  s39_fixtr = 0x241,
  s39_flogr = 0x242,
  s39_hdr = 0x243,
  s39_her = 0x244,
  s39_hsch = 0x245,
  s39_iac = 0x246,
  s39_ic = 0x247,
  s39_icm = 0x248,
  s39_icmh = 0x249,
  s39_icmy = 0x24A,
  s39_icy = 0x24B,
  s39_idte = 0x24C,
  s39_iedtr = 0x24D,
  s39_iextr = 0x24E,
  s39_iihf = 0x24F,
  s39_iihh = 0x250,
  s39_iihl = 0x251,
  s39_iilf = 0x252,
  s39_iilh = 0x253,
  s39_iill = 0x254,
  s39_ipk = 0x255,
  s39_ipm = 0x256,
  s39_ipte = 0x257,
  s39_irbm = 0x258,
  s39_iske = 0x259,
  s39_ivsk = 0x25A,
  s39_j = 0x25B,
  s39_jo = 0x25C,
  s39_jh = 0x25D,
  s39_jnle = 0x25E,
  s39_jl = 0x25F,
  s39_jnhe = 0x260,
  s39_jlh = 0x261,
  s39_jne = 0x262,
  s39_je = 0x263,
  s39_jnlh = 0x264,
  s39_jhe = 0x265,
  s39_jnl = 0x266,
  s39_jle = 0x267,
  s39_jnh = 0x268,
  s39_jno = 0x269,
  s39_jg = 0x26A,
  s39_jgo = 0x26B,
  s39_jgh = 0x26C,
  s39_jgnle = 0x26D,
  s39_jgl = 0x26E,
  s39_jgnhe = 0x26F,
  s39_jglh = 0x270,
  s39_jgne = 0x271,
  s39_jge = 0x272,
  s39_jgnlh = 0x273,
  s39_jghe = 0x274,
  s39_jgnl = 0x275,
  s39_jgle = 0x276,
  s39_jgnh = 0x277,
  s39_jgno = 0x278,
  s39_kdb = 0x279,
  s39_kdbr = 0x27A,
  s39_kdsa = 0x27B,
  s39_kdtr = 0x27C,
  s39_keb = 0x27D,
  s39_kebr = 0x27E,
  s39_kimd = 0x27F,
  s39_klmd = 0x280,
  s39_km = 0x281,
  s39_kma = 0x282,
  s39_kmac = 0x283,
  s39_kmc = 0x284,
  s39_kmctr = 0x285,
  s39_kmf = 0x286,
  s39_kmo = 0x287,
  s39_kxbr = 0x288,
  s39_kxtr = 0x289,
  s39_l = 0x28A,
  s39_la = 0x28B,
  s39_laa = 0x28C,
  s39_laag = 0x28D,
  s39_laal = 0x28E,
  s39_laalg = 0x28F,
  s39_lae = 0x290,
  s39_laey = 0x291,
  s39_lam = 0x292,
  s39_lamy = 0x293,
  s39_lan = 0x294,
  s39_lang = 0x295,
  s39_lao = 0x296,
  s39_laog = 0x297,
  s39_larl = 0x298,
  s39_lasp = 0x299,
  s39_lat = 0x29A,
  s39_lax = 0x29B,
  s39_laxg = 0x29C,
  s39_lay = 0x29D,
  s39_lb = 0x29E,
  s39_lbh = 0x29F,
  s39_lbr = 0x2A0,
  s39_lcbb = 0x2A1,
  s39_lcctl = 0x2A2,
  s39_lcdbr = 0x2A3,
  s39_lcdfr = 0x2A4,
  s39_lcdr = 0x2A5,
  s39_lcebr = 0x2A6,
  s39_lcer = 0x2A7,
  s39_lcgfr = 0x2A8,
  s39_lcgr = 0x2A9,
  s39_lcr = 0x2AA,
  s39_lctl = 0x2AB,
  s39_lctlg = 0x2AC,
  s39_lcxbr = 0x2AD,
  s39_lcxr = 0x2AE,
  s39_ld = 0x2AF,
  s39_lde = 0x2B0,
  s39_ldeb = 0x2B1,
  s39_ldebr = 0x2B2,
  s39_lder = 0x2B3,
  s39_ldetr = 0x2B4,
  s39_ldgr = 0x2B5,
  s39_ldr = 0x2B6,
  s39_ldrv = 0x2B7,
  s39_ldxbr = 0x2B8,
  s39_ldxbra = 0x2B9,
  s39_ldxr = 0x2BA,
  s39_ldxtr = 0x2BB,
  s39_ldy = 0x2BC,
  s39_le = 0x2BD,
  s39_ledbr = 0x2BE,
  s39_ledbra = 0x2BF,
  s39_ledr = 0x2C0,
  s39_ledtr = 0x2C1,
  s39_ler = 0x2C2,
  s39_lerv = 0x2C3,
  s39_lexbr = 0x2C4,
  s39_lexbra = 0x2C5,
  s39_lexr = 0x2C6,
  s39_ley = 0x2C7,
  s39_lfas = 0x2C8,
  s39_lfh = 0x2C9,
  s39_lfhat = 0x2CA,
  s39_lfpc = 0x2CB,
  s39_lg = 0x2CC,
  s39_lgat = 0x2CD,
  s39_lgb = 0x2CE,
  s39_lgbr = 0x2CF,
  s39_lgdr = 0x2D0,
  s39_lgf = 0x2D1,
  s39_lgfi = 0x2D2,
  s39_lgfr = 0x2D3,
  s39_lgfrl = 0x2D4,
  s39_lgg = 0x2D5,
  s39_lgh = 0x2D6,
  s39_lghi = 0x2D7,
  s39_lghr = 0x2D8,
  s39_lghrl = 0x2D9,
  s39_lgr = 0x2DA,
  s39_lgrl = 0x2DB,
  s39_lgsc = 0x2DC,
  s39_lh = 0x2DD,
  s39_lhh = 0x2DE,
  s39_lhi = 0x2DF,
  s39_lhr = 0x2E0,
  s39_lhrl = 0x2E1,
  s39_lhy = 0x2E2,
  s39_llc = 0x2E3,
  s39_llch = 0x2E4,
  s39_llcr = 0x2E5,
  s39_llgc = 0x2E6,
  s39_llgcr = 0x2E7,
  s39_llgf = 0x2E8,
  s39_llgfat = 0x2E9,
  s39_llgfr = 0x2EA,
  s39_llgfrl = 0x2EB,
  s39_llgfsg = 0x2EC,
  s39_llgh = 0x2ED,
  s39_llghr = 0x2EE,
  s39_llghrl = 0x2EF,
  s39_llgt = 0x2F0,
  s39_llgtat = 0x2F1,
  s39_llgtr = 0x2F2,
  s39_llh = 0x2F3,
  s39_llhh = 0x2F4,
  s39_llhr = 0x2F5,
  s39_llhrl = 0x2F6,
  s39_llihf = 0x2F7,
  s39_llihh = 0x2F8,
  s39_llihl = 0x2F9,
  s39_llilf = 0x2FA,
  s39_llilh = 0x2FB,
  s39_llill = 0x2FC,
  s39_llzrgf = 0x2FD,
  s39_lm = 0x2FE,
  s39_lmd = 0x2FF,
  s39_lmg = 0x300,
  s39_lmh = 0x301,
  s39_lmy = 0x302,
  s39_lndbr = 0x303,
  s39_lndfr = 0x304,
  s39_lndr = 0x305,
  s39_lnebr = 0x306,
  s39_lner = 0x307,
  s39_lngfr = 0x308,
  s39_lngr = 0x309,
  s39_lnr = 0x30A,
  s39_lnxbr = 0x30B,
  s39_lnxr = 0x30C,
  s39_loc = 0x30D,
  s39_loco = 0x30E,
  s39_loch = 0x30F,
  s39_locnle = 0x310,
  s39_locl = 0x311,
  s39_locnhe = 0x312,
  s39_loclh = 0x313,
  s39_locne = 0x314,
  s39_loce = 0x315,
  s39_locnlh = 0x316,
  s39_loche = 0x317,
  s39_locnl = 0x318,
  s39_locle = 0x319,
  s39_locnh = 0x31A,
  s39_locno = 0x31B,
  s39_locfh = 0x31C,
  s39_locfho = 0x31D,
  s39_locfhh = 0x31E,
  s39_locfhnle = 0x31F,
  s39_locfhl = 0x320,
  s39_locfhnhe = 0x321,
  s39_locfhlh = 0x322,
  s39_locfhne = 0x323,
  s39_locfhe = 0x324,
  s39_locfhnlh = 0x325,
  s39_locfhhe = 0x326,
  s39_locfhnl = 0x327,
  s39_locfhle = 0x328,
  s39_locfhnh = 0x329,
  s39_locfhno = 0x32A,
  s39_locfhr = 0x32B,
  s39_locfhro = 0x32C,
  s39_locfhrh = 0x32D,
  s39_locfhrnle = 0x32E,
  s39_locfhrl = 0x32F,
  s39_locfhrnhe = 0x330,
  s39_locfhrlh = 0x331,
  s39_locfhrne = 0x332,
  s39_locfhre = 0x333,
  s39_locfhrnlh = 0x334,
  s39_locfhrhe = 0x335,
  s39_locfhrnl = 0x336,
  s39_locfhrle = 0x337,
  s39_locfhrnh = 0x338,
  s39_locfhrno = 0x339,
  s39_locg = 0x33A,
  s39_locgo = 0x33B,
  s39_locgh = 0x33C,
  s39_locgnle = 0x33D,
  s39_locgl = 0x33E,
  s39_locgnhe = 0x33F,
  s39_locglh = 0x340,
  s39_locgne = 0x341,
  s39_locge = 0x342,
  s39_locgnlh = 0x343,
  s39_locghe = 0x344,
  s39_locgnl = 0x345,
  s39_locgle = 0x346,
  s39_locgnh = 0x347,
  s39_locgno = 0x348,
  s39_locghi = 0x349,
  s39_locghio = 0x34A,
  s39_locghih = 0x34B,
  s39_locghinle = 0x34C,
  s39_locghil = 0x34D,
  s39_locghinhe = 0x34E,
  s39_locghilh = 0x34F,
  s39_locghine = 0x350,
  s39_locghie = 0x351,
  s39_locghinlh = 0x352,
  s39_locghihe = 0x353,
  s39_locghinl = 0x354,
  s39_locghile = 0x355,
  s39_locghinh = 0x356,
  s39_locghino = 0x357,
  s39_locgr = 0x358,
  s39_locgro = 0x359,
  s39_locgrh = 0x35A,
  s39_locgrnle = 0x35B,
  s39_locgrl = 0x35C,
  s39_locgrnhe = 0x35D,
  s39_locgrlh = 0x35E,
  s39_locgrne = 0x35F,
  s39_locgre = 0x360,
  s39_locgrnlh = 0x361,
  s39_locgrhe = 0x362,
  s39_locgrnl = 0x363,
  s39_locgrle = 0x364,
  s39_locgrnh = 0x365,
  s39_locgrno = 0x366,
  s39_lochhi = 0x367,
  s39_lochhio = 0x368,
  s39_lochhih = 0x369,
  s39_lochhinle = 0x36A,
  s39_lochhil = 0x36B,
  s39_lochhinhe = 0x36C,
  s39_lochhilh = 0x36D,
  s39_lochhine = 0x36E,
  s39_lochhie = 0x36F,
  s39_lochhinlh = 0x370,
  s39_lochhihe = 0x371,
  s39_lochhinl = 0x372,
  s39_lochhile = 0x373,
  s39_lochhinh = 0x374,
  s39_lochhino = 0x375,
  s39_lochi = 0x376,
  s39_lochio = 0x377,
  s39_lochih = 0x378,
  s39_lochinle = 0x379,
  s39_lochil = 0x37A,
  s39_lochinhe = 0x37B,
  s39_lochilh = 0x37C,
  s39_lochine = 0x37D,
  s39_lochie = 0x37E,
  s39_lochinlh = 0x37F,
  s39_lochihe = 0x380,
  s39_lochinl = 0x381,
  s39_lochile = 0x382,
  s39_lochinh = 0x383,
  s39_lochino = 0x384,
  s39_locr = 0x385,
  s39_locro = 0x386,
  s39_locrh = 0x387,
  s39_locrnle = 0x388,
  s39_locrl = 0x389,
  s39_locrnhe = 0x38A,
  s39_locrlh = 0x38B,
  s39_locrne = 0x38C,
  s39_locre = 0x38D,
  s39_locrnlh = 0x38E,
  s39_locrhe = 0x38F,
  s39_locrnl = 0x390,
  s39_locrle = 0x391,
  s39_locrnh = 0x392,
  s39_locrno = 0x393,
  s39_lpctl = 0x394,
  s39_lpd = 0x395,
  s39_lpdbr = 0x396,
  s39_lpdfr = 0x397,
  s39_lpdg = 0x398,
  s39_lpdr = 0x399,
  s39_lpebr = 0x39A,
  s39_lper = 0x39B,
  s39_lpgfr = 0x39C,
  s39_lpgr = 0x39D,
  s39_lpp = 0x39E,
  s39_lpq = 0x39F,
  s39_lpr = 0x3A0,
  s39_lpsw = 0x3A1,
  s39_lpswe = 0x3A2,
  s39_lptea = 0x3A3,
  s39_lpxbr = 0x3A4,
  s39_lpxr = 0x3A5,
  s39_lr = 0x3A6,
  s39_lra = 0x3A7,
  s39_lrag = 0x3A8,
  s39_lray = 0x3A9,
  s39_lrdr = 0x3AA,
  s39_lrer = 0x3AB,
  s39_lrl = 0x3AC,
  s39_lrv = 0x3AD,
  s39_lrvg = 0x3AE,
  s39_lrvgr = 0x3AF,
  s39_lrvh = 0x3B0,
  s39_lrvr = 0x3B1,
  s39_lsctl = 0x3B2,
  s39_lt = 0x3B3,
  s39_ltdbr = 0x3B4,
  s39_ltdr = 0x3B5,
  s39_ltdtr = 0x3B6,
  s39_ltebr = 0x3B7,
  s39_lter = 0x3B8,
  s39_ltg = 0x3B9,
  s39_ltgf = 0x3BA,
  s39_ltgfr = 0x3BB,
  s39_ltgr = 0x3BC,
  s39_ltr = 0x3BD,
  s39_ltxbr = 0x3BE,
  s39_ltxr = 0x3BF,
  s39_ltxtr = 0x3C0,
  s39_lura = 0x3C1,
  s39_lurag = 0x3C2,
  s39_lxd = 0x3C3,
  s39_lxdb = 0x3C4,
  s39_lxdbr = 0x3C5,
  s39_lxdr = 0x3C6,
  s39_lxdtr = 0x3C7,
  s39_lxe = 0x3C8,
  s39_lxeb = 0x3C9,
  s39_lxebr = 0x3CA,
  s39_lxer = 0x3CB,
  s39_lxr = 0x3CC,
  s39_ly = 0x3CD,
  s39_lzdr = 0x3CE,
  s39_lzer = 0x3CF,
  s39_lzrf = 0x3D0,
  s39_lzrg = 0x3D1,
  s39_lzxr = 0x3D2,
  s39_m = 0x3D3,
  s39_mad = 0x3D4,
  s39_madb = 0x3D5,
  s39_madbr = 0x3D6,
  s39_madr = 0x3D7,
  s39_mae = 0x3D8,
  s39_maeb = 0x3D9,
  s39_maebr = 0x3DA,
  s39_maer = 0x3DB,
  s39_may = 0x3DC,
  s39_mayh = 0x3DD,
  s39_mayhr = 0x3DE,
  s39_mayl = 0x3DF,
  s39_maylr = 0x3E0,
  s39_mayr = 0x3E1,
  s39_mc = 0x3E2,
  s39_md = 0x3E3,
  s39_mdb = 0x3E4,
  s39_mdbr = 0x3E5,
  s39_mde = 0x3E6,
  s39_mdeb = 0x3E7,
  s39_mdebr = 0x3E8,
  s39_mder = 0x3E9,
  s39_mdr = 0x3EA,
  s39_mdtr = 0x3EB,
  s39_mdtra = 0x3EC,
  s39_me = 0x3ED,
  s39_mee = 0x3EE,
  s39_meeb = 0x3EF,
  s39_meebr = 0x3F0,
  s39_meer = 0x3F1,
  s39_mer = 0x3F2,
  s39_mfy = 0x3F3,
  s39_mg = 0x3F4,
  s39_mgh = 0x3F5,
  s39_mghi = 0x3F6,
  s39_mgrk = 0x3F7,
  s39_mh = 0x3F8,
  s39_mhi = 0x3F9,
  s39_mhy = 0x3FA,
  s39_ml = 0x3FB,
  s39_mlg = 0x3FC,
  s39_mlgr = 0x3FD,
  s39_mlr = 0x3FE,
  s39_mp = 0x3FF,
  s39_mr = 0x400,
  s39_ms = 0x401,
  s39_msc = 0x402,
  s39_msch = 0x403,
  s39_msd = 0x404,
  s39_msdb = 0x405,
  s39_msdbr = 0x406,
  s39_msdr = 0x407,
  s39_mse = 0x408,
  s39_mseb = 0x409,
  s39_msebr = 0x40A,
  s39_mser = 0x40B,
  s39_msfi = 0x40C,
  s39_msg = 0x40D,
  s39_msgc = 0x40E,
  s39_msgf = 0x40F,
  s39_msgfi = 0x410,
  s39_msgfr = 0x411,
  s39_msgr = 0x412,
  s39_msgrkc = 0x413,
  s39_msr = 0x414,
  s39_msrkc = 0x415,
  s39_msta = 0x416,
  s39_msy = 0x417,
  s39_mvc = 0x418,
  s39_mvcdk = 0x419,
  s39_mvcin = 0x41A,
  s39_mvck = 0x41B,
  s39_mvcl = 0x41C,
  s39_mvcle = 0x41D,
  s39_mvclu = 0x41E,
  s39_mvcos = 0x41F,
  s39_mvcp = 0x420,
  s39_mvcrl = 0x421,
  s39_mvcs = 0x422,
  s39_mvcsk = 0x423,
  s39_mvghi = 0x424,
  s39_mvhhi = 0x425,
  s39_mvhi = 0x426,
  s39_mvi = 0x427,
  s39_mviy = 0x428,
  s39_mvn = 0x429,
  s39_mvo = 0x42A,
  s39_mvpg = 0x42B,
  s39_mvst = 0x42C,
  s39_mvz = 0x42D,
  s39_mxbr = 0x42E,
  s39_mxd = 0x42F,
  s39_mxdb = 0x430,
  s39_mxdbr = 0x431,
  s39_mxdr = 0x432,
  s39_mxr = 0x433,
  s39_mxtr = 0x434,
  s39_mxtra = 0x435,
  s39_my = 0x436,
  s39_myh = 0x437,
  s39_myhr = 0x438,
  s39_myl = 0x439,
  s39_mylr = 0x43A,
  s39_myr = 0x43B,
  s39_n = 0x43C,
  s39_nc = 0x43D,
  s39_ncgrk = 0x43E,
  s39_ncrk = 0x43F,
  s39_ng = 0x440,
  s39_ngr = 0x441,
  s39_ngrk = 0x442,
  s39_ni = 0x443,
  s39_niai = 0x444,
  s39_nihf = 0x445,
  s39_nihh = 0x446,
  s39_nihl = 0x447,
  s39_nilf = 0x448,
  s39_nilh = 0x449,
  s39_nill = 0x44A,
  s39_niy = 0x44B,
  s39_nngrk = 0x44C,
  s39_nnrk = 0x44D,
  s39_nogrk = 0x44E,
  s39_nop = 0x44F,
  s39_nopr = 0x450,
  s39_nork = 0x451,
  s39_nr = 0x452,
  s39_nrk = 0x453,
  s39_ntstg = 0x454,
  s39_nxgrk = 0x455,
  s39_nxrk = 0x456,
  s39_ny = 0x457,
  s39_o = 0x458,
  s39_oc = 0x459,
  s39_ocgrk = 0x45A,
  s39_ocrk = 0x45B,
  s39_og = 0x45C,
  s39_ogr = 0x45D,
  s39_ogrk = 0x45E,
  s39_oi = 0x45F,
  s39_oihf = 0x460,
  s39_oihh = 0x461,
  s39_oihl = 0x462,
  s39_oilf = 0x463,
  s39_oilh = 0x464,
  s39_oill = 0x465,
  s39_oiy = 0x466,
  s39_or = 0x467,
  s39_ork = 0x468,
  s39_oy = 0x469,
  s39_pack = 0x46A,
  s39_palb = 0x46B,
  s39_pc = 0x46C,
  s39_pcc = 0x46D,
  s39_pckmo = 0x46E,
  s39_pfd = 0x46F,
  s39_pfdrl = 0x470,
  s39_pfmf = 0x471,
  s39_pfpo = 0x472,
  s39_pgin = 0x473,
  s39_pgout = 0x474,
  s39_pka = 0x475,
  s39_pku = 0x476,
  s39_plo = 0x477,
  s39_popcnt = 0x478,
  s39_ppa = 0x479,
  s39_ppno = 0x47A,
  s39_pr = 0x47B,
  s39_prno = 0x47C,
  s39_pt = 0x47D,
  s39_ptf = 0x47E,
  s39_ptff = 0x47F,
  s39_pti = 0x480,
  s39_ptlb = 0x481,
  s39_qadtr = 0x482,
  s39_qaxtr = 0x483,
  s39_qctri = 0x484,
  s39_qsi = 0x485,
  s39_rchp = 0x486,
  s39_risbg = 0x487,
  s39_risbgn = 0x488,
  s39_risbhg = 0x489,
  s39_risblg = 0x48A,
  s39_rll = 0x48B,
  s39_rllg = 0x48C,
  s39_rnsbg = 0x48D,
  s39_rosbg = 0x48E,
  s39_rp = 0x48F,
  s39_rrbe = 0x490,
  s39_rrbm = 0x491,
  s39_rrdtr = 0x492,
  s39_rrxtr = 0x493,
  s39_rsch = 0x494,
  s39_rxsbg = 0x495,
  s39_s = 0x496,
  s39_sac = 0x497,
  s39_sacf = 0x498,
  s39_sal = 0x499,
  s39_sam24 = 0x49A,
  s39_sam31 = 0x49B,
  s39_sam64 = 0x49C,
  s39_sar = 0x49D,
  s39_scctr = 0x49E,
  s39_schm = 0x49F,
  s39_sck = 0x4A0,
  s39_sckc = 0x4A1,
  s39_sckpf = 0x4A2,
  s39_sd = 0x4A3,
  s39_sdb = 0x4A4,
  s39_sdbr = 0x4A5,
  s39_sdr = 0x4A6,
  s39_sdtr = 0x4A7,
  s39_sdtra = 0x4A8,
  s39_se = 0x4A9,
  s39_seb = 0x4AA,
  s39_sebr = 0x4AB,
  s39_selgr = 0x4AC,
  s39_selgro = 0x4AD,
  s39_selgrh = 0x4AE,
  s39_selgrnle = 0x4AF,
  s39_selgrl = 0x4B0,
  s39_selgrnhe = 0x4B1,
  s39_selgrlh = 0x4B2,
  s39_selgrne = 0x4B3,
  s39_selgre = 0x4B4,
  s39_selgrnlh = 0x4B5,
  s39_selgrhe = 0x4B6,
  s39_selgrnl = 0x4B7,
  s39_selgrle = 0x4B8,
  s39_selgrnh = 0x4B9,
  s39_selgrno = 0x4BA,
  s39_selhhhr = 0x4BB,
  s39_selhhhro = 0x4BC,
  s39_selhhhrh = 0x4BD,
  s39_selhhhrnle = 0x4BE,
  s39_selhhhrl = 0x4BF,
  s39_selhhhrnhe = 0x4C0,
  s39_selhhhrlh = 0x4C1,
  s39_selhhhrne = 0x4C2,
  s39_selhhhre = 0x4C3,
  s39_selhhhrnlh = 0x4C4,
  s39_selhhhrhe = 0x4C5,
  s39_selhhhrnl = 0x4C6,
  s39_selhhhrle = 0x4C7,
  s39_selhhhrnh = 0x4C8,
  s39_selhhhrno = 0x4C9,
  s39_selr = 0x4CA,
  s39_selro = 0x4CB,
  s39_selrh = 0x4CC,
  s39_selrnle = 0x4CD,
  s39_selrl = 0x4CE,
  s39_selrnhe = 0x4CF,
  s39_selrlh = 0x4D0,
  s39_selrne = 0x4D1,
  s39_selre = 0x4D2,
  s39_selrnlh = 0x4D3,
  s39_selrhe = 0x4D4,
  s39_selrnl = 0x4D5,
  s39_selrle = 0x4D6,
  s39_selrnh = 0x4D7,
  s39_selrno = 0x4D8,
  s39_ser = 0x4D9,
  s39_sfasr = 0x4DA,
  s39_sfpc = 0x4DB,
  s39_sg = 0x4DC,
  s39_sgf = 0x4DD,
  s39_sgfr = 0x4DE,
  s39_sgh = 0x4DF,
  s39_sgr = 0x4E0,
  s39_sgrk = 0x4E1,
  s39_sh = 0x4E2,
  s39_shhhr = 0x4E3,
  s39_shhlr = 0x4E4,
  s39_shy = 0x4E5,
  s39_sie = 0x4E6,
  s39_siga = 0x4E7,
  s39_sigp = 0x4E8,
  s39_sl = 0x4E9,
  s39_sla = 0x4EA,
  s39_slag = 0x4EB,
  s39_slak = 0x4EC,
  s39_slb = 0x4ED,
  s39_slbg = 0x4EE,
  s39_slbgr = 0x4EF,
  s39_slbr = 0x4F0,
  s39_slda = 0x4F1,
  s39_sldl = 0x4F2,
  s39_sldt = 0x4F3,
  s39_slfi = 0x4F4,
  s39_slg = 0x4F5,
  s39_slgf = 0x4F6,
  s39_slgfi = 0x4F7,
  s39_slgfr = 0x4F8,
  s39_slgr = 0x4F9,
  s39_slgrk = 0x4FA,
  s39_slhhhr = 0x4FB,
  s39_slhhlr = 0x4FC,
  s39_sll = 0x4FD,
  s39_sllg = 0x4FE,
  s39_sllk = 0x4FF,
  s39_slr = 0x500,
  s39_slrk = 0x501,
  s39_slxt = 0x502,
  s39_sly = 0x503,
  s39_sortl = 0x504,
  s39_sp = 0x505,
  s39_spctr = 0x506,
  s39_spka = 0x507,
  s39_spm = 0x508,
  s39_spt = 0x509,
  s39_spx = 0x50A,
  s39_sqd = 0x50B,
  s39_sqdb = 0x50C,
  s39_sqdbr = 0x50D,
  s39_sqdr = 0x50E,
  s39_sqe = 0x50F,
  s39_sqeb = 0x510,
  s39_sqebr = 0x511,
  s39_sqer = 0x512,
  s39_sqxbr = 0x513,
  s39_sqxr = 0x514,
  s39_sr = 0x515,
  s39_sra = 0x516,
  s39_srag = 0x517,
  s39_srak = 0x518,
  s39_srda = 0x519,
  s39_srdl = 0x51A,
  s39_srdt = 0x51B,
  s39_srk = 0x51C,
  s39_srl = 0x51D,
  s39_srlg = 0x51E,
  s39_srlk = 0x51F,
  s39_srnm = 0x520,
  s39_srnmb = 0x521,
  s39_srnmt = 0x522,
  s39_srp = 0x523,
  s39_srst = 0x524,
  s39_srstu = 0x525,
  s39_srxt = 0x526,
  s39_ssair = 0x527,
  s39_ssar = 0x528,
  s39_ssch = 0x529,
  s39_sske = 0x52A,
  s39_ssm = 0x52B,
  s39_st = 0x52C,
  s39_stam = 0x52D,
  s39_stamy = 0x52E,
  s39_stap = 0x52F,
  s39_stc = 0x530,
  s39_stch = 0x531,
  s39_stck = 0x532,
  s39_stckc = 0x533,
  s39_stcke = 0x534,
  s39_stckf = 0x535,
  s39_stcm = 0x536,
  s39_stcmh = 0x537,
  s39_stcmy = 0x538,
  s39_stcps = 0x539,
  s39_stcrw = 0x53A,
  s39_stctg = 0x53B,
  s39_stctl = 0x53C,
  s39_stcy = 0x53D,
  s39_std = 0x53E,
  s39_stdrv = 0x53F,
  s39_stdy = 0x540,
  s39_ste = 0x541,
  s39_sterv = 0x542,
  s39_stey = 0x543,
  s39_stfh = 0x544,
  s39_stfl = 0x545,
  s39_stfle = 0x546,
  s39_stfpc = 0x547,
  s39_stg = 0x548,
  s39_stgrl = 0x549,
  s39_stgsc = 0x54A,
  s39_sth = 0x54B,
  s39_sthh = 0x54C,
  s39_sthrl = 0x54D,
  s39_sthy = 0x54E,
  s39_stidp = 0x54F,
  s39_stm = 0x550,
  s39_stmg = 0x551,
  s39_stmh = 0x552,
  s39_stmy = 0x553,
  s39_stnsm = 0x554,
  s39_stoc = 0x555,
  s39_stoco = 0x556,
  s39_stoch = 0x557,
  s39_stocnle = 0x558,
  s39_stocl = 0x559,
  s39_stocnhe = 0x55A,
  s39_stoclh = 0x55B,
  s39_stocne = 0x55C,
  s39_stoce = 0x55D,
  s39_stocnlh = 0x55E,
  s39_stoche = 0x55F,
  s39_stocnl = 0x560,
  s39_stocle = 0x561,
  s39_stocnh = 0x562,
  s39_stocno = 0x563,
  s39_stocfh = 0x564,
  s39_stocfho = 0x565,
  s39_stocfhh = 0x566,
  s39_stocfhnle = 0x567,
  s39_stocfhl = 0x568,
  s39_stocfhnhe = 0x569,
  s39_stocfhlh = 0x56A,
  s39_stocfhne = 0x56B,
  s39_stocfhe = 0x56C,
  s39_stocfhnlh = 0x56D,
  s39_stocfhhe = 0x56E,
  s39_stocfhnl = 0x56F,
  s39_stocfhle = 0x570,
  s39_stocfhnh = 0x571,
  s39_stocfhno = 0x572,
  s39_stocg = 0x573,
  s39_stocgo = 0x574,
  s39_stocgh = 0x575,
  s39_stocgnle = 0x576,
  s39_stocgl = 0x577,
  s39_stocgnhe = 0x578,
  s39_stocglh = 0x579,
  s39_stocgne = 0x57A,
  s39_stocge = 0x57B,
  s39_stocgnlh = 0x57C,
  s39_stocghe = 0x57D,
  s39_stocgnl = 0x57E,
  s39_stocgle = 0x57F,
  s39_stocgnh = 0x580,
  s39_stocgno = 0x581,
  s39_stosm = 0x582,
  s39_stpq = 0x583,
  s39_stpt = 0x584,
  s39_stpx = 0x585,
  s39_strag = 0x586,
  s39_strl = 0x587,
  s39_strv = 0x588,
  s39_strvg = 0x589,
  s39_strvh = 0x58A,
  s39_stsch = 0x58B,
  s39_stsi = 0x58C,
  s39_stura = 0x58D,
  s39_sturg = 0x58E,
  s39_sty = 0x58F,
  s39_su = 0x590,
  s39_sur = 0x591,
  s39_svc = 0x592,
  s39_sw = 0x593,
  s39_swr = 0x594,
  s39_sxbr = 0x595,
  s39_sxr = 0x596,
  s39_sxtr = 0x597,
  s39_sxtra = 0x598,
  s39_sy = 0x599,
  s39_tabort = 0x59A,
  s39_tam = 0x59B,
  s39_tar = 0x59C,
  s39_tb = 0x59D,
  s39_tbdr = 0x59E,
  s39_tbedr = 0x59F,
  s39_tbegin = 0x5A0,
  s39_tbeginc = 0x5A1,
  s39_tcdb = 0x5A2,
  s39_tceb = 0x5A3,
  s39_tcxb = 0x5A4,
  s39_tdcdt = 0x5A5,
  s39_tdcet = 0x5A6,
  s39_tdcxt = 0x5A7,
  s39_tdgdt = 0x5A8,
  s39_tdget = 0x5A9,
  s39_tdgxt = 0x5AA,
  s39_tend = 0x5AB,
  s39_thder = 0x5AC,
  s39_thdr = 0x5AD,
  s39_tm = 0x5AE,
  s39_tmhh = 0x5AF,
  s39_tmhl = 0x5B0,
  s39_tmlh = 0x5B1,
  s39_tmll = 0x5B2,
  s39_tmy = 0x5B3,
  s39_tp = 0x5B4,
  s39_tpei = 0x5B5,
  s39_tpi = 0x5B6,
  s39_tprot = 0x5B7,
  s39_tr = 0x5B8,
  s39_trace = 0x5B9,
  s39_tracg = 0x5BA,
  s39_trap2 = 0x5BB,
  s39_trap4 = 0x5BC,
  s39_tre = 0x5BD,
  s39_troo = 0x5BE,
  s39_trot = 0x5BF,
  s39_trt = 0x5C0,
  s39_trte = 0x5C1,
  s39_trto = 0x5C2,
  s39_trtr = 0x5C3,
  s39_trtre = 0x5C4,
  s39_trtt = 0x5C5,
  s39_ts = 0x5C6,
  s39_tsch = 0x5C7,
  s39_unpk = 0x5C8,
  s39_unpka = 0x5C9,
  s39_unpku = 0x5CA,
  s39_upt = 0x5CB,
  s39_va = 0x5CC,
  s39_vab = 0x5CD,
  s39_vac = 0x5CE,
  s39_vacc = 0x5CF,
  s39_vaccb = 0x5D0,
  s39_vaccc = 0x5D1,
  s39_vacccq = 0x5D2,
  s39_vaccf = 0x5D3,
  s39_vaccg = 0x5D4,
  s39_vacch = 0x5D5,
  s39_vaccq = 0x5D6,
  s39_vacq = 0x5D7,
  s39_vaf = 0x5D8,
  s39_vag = 0x5D9,
  s39_vah = 0x5DA,
  s39_vap = 0x5DB,
  s39_vaq = 0x5DC,
  s39_vavg = 0x5DD,
  s39_vavgb = 0x5DE,
  s39_vavgf = 0x5DF,
  s39_vavgg = 0x5E0,
  s39_vavgh = 0x5E1,
  s39_vavgl = 0x5E2,
  s39_vavglb = 0x5E3,
  s39_vavglf = 0x5E4,
  s39_vavglg = 0x5E5,
  s39_vavglh = 0x5E6,
  s39_vbperm = 0x5E7,
  s39_vcdg = 0x5E8,
  s39_vcdgb = 0x5E9,
  s39_vcdlg = 0x5EA,
  s39_vcdlgb = 0x5EB,
  s39_vcefb = 0x5EC,
  s39_vcelfb = 0x5ED,
  s39_vceq = 0x5EE,
  s39_vceqb = 0x5EF,
  s39_vceqbs = 0x5F0,
  s39_vceqf = 0x5F1,
  s39_vceqfs = 0x5F2,
  s39_vceqg = 0x5F3,
  s39_vceqgs = 0x5F4,
  s39_vceqh = 0x5F5,
  s39_vceqhs = 0x5F6,
  s39_vcfeb = 0x5F7,
  s39_vcfpl = 0x5F8,
  s39_vcfps = 0x5F9,
  s39_vcgd = 0x5FA,
  s39_vcgdb = 0x5FB,
  s39_vch = 0x5FC,
  s39_vchb = 0x5FD,
  s39_vchbs = 0x5FE,
  s39_vchf = 0x5FF,
  s39_vchfs = 0x600,
  s39_vchg = 0x601,
  s39_vchgs = 0x602,
  s39_vchh = 0x603,
  s39_vchhs = 0x604,
  s39_vchl = 0x605,
  s39_vchlb = 0x606,
  s39_vchlbs = 0x607,
  s39_vchlf = 0x608,
  s39_vchlfs = 0x609,
  s39_vchlg = 0x60A,
  s39_vchlgs = 0x60B,
  s39_vchlh = 0x60C,
  s39_vchlhs = 0x60D,
  s39_vcksm = 0x60E,
  s39_vclfeb = 0x60F,
  s39_vclfp = 0x610,
  s39_vclgd = 0x611,
  s39_vclgdb = 0x612,
  s39_vclz = 0x613,
  s39_vclzb = 0x614,
  s39_vclzf = 0x615,
  s39_vclzg = 0x616,
  s39_vclzh = 0x617,
  s39_vcp = 0x618,
  s39_vcsfp = 0x619,
  s39_vctz = 0x61A,
  s39_vctzb = 0x61B,
  s39_vctzf = 0x61C,
  s39_vctzg = 0x61D,
  s39_vctzh = 0x61E,
  s39_vcvb = 0x61F,
  s39_vcvbg = 0x620,
  s39_vcvd = 0x621,
  s39_vcvdg = 0x622,
  s39_vdp = 0x623,
  s39_vec = 0x624,
  s39_vecb = 0x625,
  s39_vecf = 0x626,
  s39_vecg = 0x627,
  s39_vech = 0x628,
  s39_vecl = 0x629,
  s39_veclb = 0x62A,
  s39_veclf = 0x62B,
  s39_veclg = 0x62C,
  s39_veclh = 0x62D,
  s39_verim = 0x62E,
  s39_verimb = 0x62F,
  s39_verimf = 0x630,
  s39_verimg = 0x631,
  s39_verimh = 0x632,
  s39_verll = 0x633,
  s39_verllb = 0x634,
  s39_verllf = 0x635,
  s39_verllg = 0x636,
  s39_verllh = 0x637,
  s39_verllv = 0x638,
  s39_verllvb = 0x639,
  s39_verllvf = 0x63A,
  s39_verllvg = 0x63B,
  s39_verllvh = 0x63C,
  s39_vesl = 0x63D,
  s39_veslb = 0x63E,
  s39_veslf = 0x63F,
  s39_veslg = 0x640,
  s39_veslh = 0x641,
  s39_veslv = 0x642,
  s39_veslvb = 0x643,
  s39_veslvf = 0x644,
  s39_veslvg = 0x645,
  s39_veslvh = 0x646,
  s39_vesra = 0x647,
  s39_vesrab = 0x648,
  s39_vesraf = 0x649,
  s39_vesrag = 0x64A,
  s39_vesrah = 0x64B,
  s39_vesrav = 0x64C,
  s39_vesravb = 0x64D,
  s39_vesravf = 0x64E,
  s39_vesravg = 0x64F,
  s39_vesravh = 0x650,
  s39_vesrl = 0x651,
  s39_vesrlb = 0x652,
  s39_vesrlf = 0x653,
  s39_vesrlg = 0x654,
  s39_vesrlh = 0x655,
  s39_vesrlv = 0x656,
  s39_vesrlvb = 0x657,
  s39_vesrlvf = 0x658,
  s39_vesrlvg = 0x659,
  s39_vesrlvh = 0x65A,
  s39_vfa = 0x65B,
  s39_vfadb = 0x65C,
  s39_vfae = 0x65D,
  s39_vfaeb = 0x65E,
  s39_vfaebs = 0x65F,
  s39_vfaef = 0x660,
  s39_vfaefs = 0x661,
  s39_vfaeh = 0x662,
  s39_vfaehs = 0x663,
  s39_vfaezb = 0x664,
  s39_vfaezbs = 0x665,
  s39_vfaezf = 0x666,
  s39_vfaezfs = 0x667,
  s39_vfaezh = 0x668,
  s39_vfaezhs = 0x669,
  s39_vfasb = 0x66A,
  s39_vfce = 0x66B,
  s39_vfcedb = 0x66C,
  s39_vfcedbs = 0x66D,
  s39_vfcesb = 0x66E,
  s39_vfcesbs = 0x66F,
  s39_vfch = 0x670,
  s39_vfchdb = 0x671,
  s39_vfchdbs = 0x672,
  s39_vfche = 0x673,
  s39_vfchedb = 0x674,
  s39_vfchedbs = 0x675,
  s39_vfchesb = 0x676,
  s39_vfchesbs = 0x677,
  s39_vfchsb = 0x678,
  s39_vfchsbs = 0x679,
  s39_vfd = 0x67A,
  s39_vfddb = 0x67B,
  s39_vfdsb = 0x67C,
  s39_vfee = 0x67D,
  s39_vfeeb = 0x67E,
  s39_vfeebs = 0x67F,
  s39_vfeef = 0x680,
  s39_vfeefs = 0x681,
  s39_vfeeh = 0x682,
  s39_vfeehs = 0x683,
  s39_vfeezb = 0x684,
  s39_vfeezbs = 0x685,
  s39_vfeezf = 0x686,
  s39_vfeezfs = 0x687,
  s39_vfeezh = 0x688,
  s39_vfeezhs = 0x689,
  s39_vfene = 0x68A,
  s39_vfeneb = 0x68B,
  s39_vfenebs = 0x68C,
  s39_vfenef = 0x68D,
  s39_vfenefs = 0x68E,
  s39_vfeneh = 0x68F,
  s39_vfenehs = 0x690,
  s39_vfenezb = 0x691,
  s39_vfenezbs = 0x692,
  s39_vfenezf = 0x693,
  s39_vfenezfs = 0x694,
  s39_vfenezh = 0x695,
  s39_vfenezhs = 0x696,
  s39_vfi = 0x697,
  s39_vfidb = 0x698,
  s39_vfisb = 0x699,
  s39_vfkedb = 0x69A,
  s39_vfkedbs = 0x69B,
  s39_vfkesb = 0x69C,
  s39_vfkesbs = 0x69D,
  s39_vfkhdb = 0x69E,
  s39_vfkhdbs = 0x69F,
  s39_vfkhedb = 0x6A0,
  s39_vfkhedbs = 0x6A1,
  s39_vfkhesb = 0x6A2,
  s39_vfkhesbs = 0x6A3,
  s39_vfkhsb = 0x6A4,
  s39_vfkhsbs = 0x6A5,
  s39_vflcdb = 0x6A6,
  s39_vflcsb = 0x6A7,
  s39_vfll = 0x6A8,
  s39_vflls = 0x6A9,
  s39_vflndb = 0x6AA,
  s39_vflnsb = 0x6AB,
  s39_vflpdb = 0x6AC,
  s39_vflpsb = 0x6AD,
  s39_vflr = 0x6AE,
  s39_vflrd = 0x6AF,
  s39_vfm = 0x6B0,
  s39_vfma = 0x6B1,
  s39_vfmadb = 0x6B2,
  s39_vfmasb = 0x6B3,
  s39_vfmax = 0x6B4,
  s39_vfmaxdb = 0x6B5,
  s39_vfmaxsb = 0x6B6,
  s39_vfmdb = 0x6B7,
  s39_vfmin = 0x6B8,
  s39_vfmindb = 0x6B9,
  s39_vfminsb = 0x6BA,
  s39_vfms = 0x6BB,
  s39_vfmsb = 0x6BC,
  s39_vfmsdb = 0x6BD,
  s39_vfmssb = 0x6BE,
  s39_vfnma = 0x6BF,
  s39_vfnmadb = 0x6C0,
  s39_vfnmasb = 0x6C1,
  s39_vfnms = 0x6C2,
  s39_vfnmsdb = 0x6C3,
  s39_vfnmssb = 0x6C4,
  s39_vfpso = 0x6C5,
  s39_vfpsodb = 0x6C6,
  s39_vfpsosb = 0x6C7,
  s39_vfs = 0x6C8,
  s39_vfsdb = 0x6C9,
  s39_vfsq = 0x6CA,
  s39_vfsqdb = 0x6CB,
  s39_vfsqsb = 0x6CC,
  s39_vfssb = 0x6CD,
  s39_vftci = 0x6CE,
  s39_vftcidb = 0x6CF,
  s39_vftcisb = 0x6D0,
  s39_vgbm = 0x6D1,
  s39_vgef = 0x6D2,
  s39_vgeg = 0x6D3,
  s39_vgfm = 0x6D4,
  s39_vgfma = 0x6D5,
  s39_vgfmab = 0x6D6,
  s39_vgfmaf = 0x6D7,
  s39_vgfmag = 0x6D8,
  s39_vgfmah = 0x6D9,
  s39_vgfmb = 0x6DA,
  s39_vgfmf = 0x6DB,
  s39_vgfmg = 0x6DC,
  s39_vgfmh = 0x6DD,
  s39_vgm = 0x6DE,
  s39_vgmb = 0x6DF,
  s39_vgmf = 0x6E0,
  s39_vgmg = 0x6E1,
  s39_vgmh = 0x6E2,
  s39_vistr = 0x6E3,
  s39_vistrb = 0x6E4,
  s39_vistrbs = 0x6E5,
  s39_vistrf = 0x6E6,
  s39_vistrfs = 0x6E7,
  s39_vistrh = 0x6E8,
  s39_vistrhs = 0x6E9,
  s39_vl = 0x6EA,
  s39_vlbb = 0x6EB,
  s39_vlbr = 0x6EC,
  s39_vlbrf = 0x6ED,
  s39_vlbrg = 0x6EE,
  s39_vlbrh = 0x6EF,
  s39_vlbrq = 0x6F0,
  s39_vlbrrep = 0x6F1,
  s39_vlbrrepf = 0x6F2,
  s39_vlbrrepg = 0x6F3,
  s39_vlbrreph = 0x6F4,
  s39_vlc = 0x6F5,
  s39_vlcb = 0x6F6,
  s39_vlcf = 0x6F7,
  s39_vlcg = 0x6F8,
  s39_vlch = 0x6F9,
  s39_vlde = 0x6FA,
  s39_vldeb = 0x6FB,
  s39_vleb = 0x6FC,
  s39_vlebrf = 0x6FD,
  s39_vlebrg = 0x6FE,
  s39_vlebrh = 0x6FF,
  s39_vled = 0x700,
  s39_vledb = 0x701,
  s39_vlef = 0x702,
  s39_vleg = 0x703,
  s39_vleh = 0x704,
  s39_vleib = 0x705,
  s39_vleif = 0x706,
  s39_vleig = 0x707,
  s39_vleih = 0x708,
  s39_vler = 0x709,
  s39_vlerf = 0x70A,
  s39_vlerg = 0x70B,
  s39_vlerh = 0x70C,
  s39_vlgv = 0x70D,
  s39_vlgvb = 0x70E,
  s39_vlgvf = 0x70F,
  s39_vlgvg = 0x710,
  s39_vlgvh = 0x711,
  s39_vlip = 0x712,
  s39_vll = 0x713,
  s39_vllebrz = 0x714,
  s39_vllebrze = 0x715,
  s39_vllebrzf = 0x716,
  s39_vllebrzg = 0x717,
  s39_vllebrzh = 0x718,
  s39_vllez = 0x719,
  s39_vllezb = 0x71A,
  s39_vllezf = 0x71B,
  s39_vllezg = 0x71C,
  s39_vllezh = 0x71D,
  s39_vllezlf = 0x71E,
  s39_vlm = 0x71F,
  s39_vlp = 0x720,
  s39_vlpb = 0x721,
  s39_vlpf = 0x722,
  s39_vlpg = 0x723,
  s39_vlph = 0x724,
  s39_vlr = 0x725,
  s39_vlrep = 0x726,
  s39_vlrepb = 0x727,
  s39_vlrepf = 0x728,
  s39_vlrepg = 0x729,
  s39_vlreph = 0x72A,
  s39_vlrl = 0x72B,
  s39_vlrlr = 0x72C,
  s39_vlvg = 0x72D,
  s39_vlvgb = 0x72E,
  s39_vlvgf = 0x72F,
  s39_vlvgg = 0x730,
  s39_vlvgh = 0x731,
  s39_vlvgp = 0x732,
  s39_vmae = 0x733,
  s39_vmaeb = 0x734,
  s39_vmaef = 0x735,
  s39_vmaeh = 0x736,
  s39_vmah = 0x737,
  s39_vmahb = 0x738,
  s39_vmahf = 0x739,
  s39_vmahh = 0x73A,
  s39_vmal = 0x73B,
  s39_vmalb = 0x73C,
  s39_vmale = 0x73D,
  s39_vmaleb = 0x73E,
  s39_vmalef = 0x73F,
  s39_vmaleh = 0x740,
  s39_vmalf = 0x741,
  s39_vmalh = 0x742,
  s39_vmalhb = 0x743,
  s39_vmalhf = 0x744,
  s39_vmalhh = 0x745,
  s39_vmalhw = 0x746,
  s39_vmalo = 0x747,
  s39_vmalob = 0x748,
  s39_vmalof = 0x749,
  s39_vmaloh = 0x74A,
  s39_vmao = 0x74B,
  s39_vmaob = 0x74C,
  s39_vmaof = 0x74D,
  s39_vmaoh = 0x74E,
  s39_vme = 0x74F,
  s39_vmeb = 0x750,
  s39_vmef = 0x751,
  s39_vmeh = 0x752,
  s39_vmh = 0x753,
  s39_vmhb = 0x754,
  s39_vmhf = 0x755,
  s39_vmhh = 0x756,
  s39_vml = 0x757,
  s39_vmlb = 0x758,
  s39_vmle = 0x759,
  s39_vmleb = 0x75A,
  s39_vmlef = 0x75B,
  s39_vmleh = 0x75C,
  s39_vmlf = 0x75D,
  s39_vmlh = 0x75E,
  s39_vmlhb = 0x75F,
  s39_vmlhf = 0x760,
  s39_vmlhh = 0x761,
  s39_vmlhw = 0x762,
  s39_vmlo = 0x763,
  s39_vmlob = 0x764,
  s39_vmlof = 0x765,
  s39_vmloh = 0x766,
  s39_vmn = 0x767,
  s39_vmnb = 0x768,
  s39_vmnf = 0x769,
  s39_vmng = 0x76A,
  s39_vmnh = 0x76B,
  s39_vmnl = 0x76C,
  s39_vmnlb = 0x76D,
  s39_vmnlf = 0x76E,
  s39_vmnlg = 0x76F,
  s39_vmnlh = 0x770,
  s39_vmo = 0x771,
  s39_vmob = 0x772,
  s39_vmof = 0x773,
  s39_vmoh = 0x774,
  s39_vmp = 0x775,
  s39_vmrh = 0x776,
  s39_vmrhb = 0x777,
  s39_vmrhf = 0x778,
  s39_vmrhg = 0x779,
  s39_vmrhh = 0x77A,
  s39_vmrl = 0x77B,
  s39_vmrlb = 0x77C,
  s39_vmrlf = 0x77D,
  s39_vmrlg = 0x77E,
  s39_vmrlh = 0x77F,
  s39_vmsl = 0x780,
  s39_vmslg = 0x781,
  s39_vmsp = 0x782,
  s39_vmx = 0x783,
  s39_vmxb = 0x784,
  s39_vmxf = 0x785,
  s39_vmxg = 0x786,
  s39_vmxh = 0x787,
  s39_vmxl = 0x788,
  s39_vmxlb = 0x789,
  s39_vmxlf = 0x78A,
  s39_vmxlg = 0x78B,
  s39_vmxlh = 0x78C,
  s39_vn = 0x78D,
  s39_vnc = 0x78E,
  s39_vnn = 0x78F,
  s39_vno = 0x790,
  s39_vnot = 0x791,
  s39_vnx = 0x792,
  s39_vo = 0x793,
  s39_voc = 0x794,
  s39_vone = 0x795,
  s39_vpdi = 0x796,
  s39_vperm = 0x797,
  s39_vpk = 0x798,
  s39_vpkf = 0x799,
  s39_vpkg = 0x79A,
  s39_vpkh = 0x79B,
  s39_vpkls = 0x79C,
  s39_vpklsf = 0x79D,
  s39_vpklsfs = 0x79E,
  s39_vpklsg = 0x79F,
  s39_vpklsgs = 0x7A0,
  s39_vpklsh = 0x7A1,
  s39_vpklshs = 0x7A2,
  s39_vpks = 0x7A3,
  s39_vpksf = 0x7A4,
  s39_vpksfs = 0x7A5,
  s39_vpksg = 0x7A6,
  s39_vpksgs = 0x7A7,
  s39_vpksh = 0x7A8,
  s39_vpkshs = 0x7A9,
  s39_vpkz = 0x7AA,
  s39_vpopct = 0x7AB,
  s39_vpopctb = 0x7AC,
  s39_vpopctf = 0x7AD,
  s39_vpopctg = 0x7AE,
  s39_vpopcth = 0x7AF,
  s39_vpsop = 0x7B0,
  s39_vrep = 0x7B1,
  s39_vrepb = 0x7B2,
  s39_vrepf = 0x7B3,
  s39_vrepg = 0x7B4,
  s39_vreph = 0x7B5,
  s39_vrepi = 0x7B6,
  s39_vrepib = 0x7B7,
  s39_vrepif = 0x7B8,
  s39_vrepig = 0x7B9,
  s39_vrepih = 0x7BA,
  s39_vrp = 0x7BB,
  s39_vs = 0x7BC,
  s39_vsb = 0x7BD,
  s39_vsbcbi = 0x7BE,
  s39_vsbcbiq = 0x7BF,
  s39_vsbi = 0x7C0,
  s39_vsbiq = 0x7C1,
  s39_vscbi = 0x7C2,
  s39_vscbib = 0x7C3,
  s39_vscbif = 0x7C4,
  s39_vscbig = 0x7C5,
  s39_vscbih = 0x7C6,
  s39_vscbiq = 0x7C7,
  s39_vscef = 0x7C8,
  s39_vsceg = 0x7C9,
  s39_vsdp = 0x7CA,
  s39_vseg = 0x7CB,
  s39_vsegb = 0x7CC,
  s39_vsegf = 0x7CD,
  s39_vsegh = 0x7CE,
  s39_vsel = 0x7CF,
  s39_vsf = 0x7D0,
  s39_vsg = 0x7D1,
  s39_vsh = 0x7D2,
  s39_vsl = 0x7D3,
  s39_vslb = 0x7D4,
  s39_vsld = 0x7D5,
  s39_vsldb = 0x7D6,
  s39_vsp = 0x7D7,
  s39_vsq = 0x7D8,
  s39_vsra = 0x7D9,
  s39_vsrab = 0x7DA,
  s39_vsrd = 0x7DB,
  s39_vsrl = 0x7DC,
  s39_vsrlb = 0x7DD,
  s39_vsrp = 0x7DE,
  s39_vst = 0x7DF,
  s39_vstbr = 0x7E0,
  s39_vstbrf = 0x7E1,
  s39_vstbrg = 0x7E2,
  s39_vstbrh = 0x7E3,
  s39_vstbrq = 0x7E4,
  s39_vsteb = 0x7E5,
  s39_vstebrf = 0x7E6,
  s39_vstebrg = 0x7E7,
  s39_vstebrh = 0x7E8,
  s39_vstef = 0x7E9,
  s39_vsteg = 0x7EA,
  s39_vsteh = 0x7EB,
  s39_vster = 0x7EC,
  s39_vsterf = 0x7ED,
  s39_vsterg = 0x7EE,
  s39_vsterh = 0x7EF,
  s39_vstl = 0x7F0,
  s39_vstm = 0x7F1,
  s39_vstrc = 0x7F2,
  s39_vstrcb = 0x7F3,
  s39_vstrcbs = 0x7F4,
  s39_vstrcf = 0x7F5,
  s39_vstrcfs = 0x7F6,
  s39_vstrch = 0x7F7,
  s39_vstrchs = 0x7F8,
  s39_vstrczb = 0x7F9,
  s39_vstrczbs = 0x7FA,
  s39_vstrczf = 0x7FB,
  s39_vstrczfs = 0x7FC,
  s39_vstrczh = 0x7FD,
  s39_vstrczhs = 0x7FE,
  s39_vstrl = 0x7FF,
  s39_vstrlr = 0x800,
  s39_vstrs = 0x801,
  s39_vstrsb = 0x802,
  s39_vstrsf = 0x803,
  s39_vstrsh = 0x804,
  s39_vstrszb = 0x805,
  s39_vstrszf = 0x806,
  s39_vstrszh = 0x807,
  s39_vsum = 0x808,
  s39_vsumb = 0x809,
  s39_vsumg = 0x80A,
  s39_vsumgf = 0x80B,
  s39_vsumgh = 0x80C,
  s39_vsumh = 0x80D,
  s39_vsumq = 0x80E,
  s39_vsumqf = 0x80F,
  s39_vsumqg = 0x810,
  s39_vtm = 0x811,
  s39_vtp = 0x812,
  s39_vuph = 0x813,
  s39_vuphb = 0x814,
  s39_vuphf = 0x815,
  s39_vuphh = 0x816,
  s39_vupkz = 0x817,
  s39_vupl = 0x818,
  s39_vuplb = 0x819,
  s39_vuplf = 0x81A,
  s39_vuplh = 0x81B,
  s39_vuplhb = 0x81C,
  s39_vuplhf = 0x81D,
  s39_vuplhh = 0x81E,
  s39_vuplhw = 0x81F,
  s39_vupll = 0x820,
  s39_vupllb = 0x821,
  s39_vupllf = 0x822,
  s39_vupllh = 0x823,
  s39_vzero = 0x824,
  s39_wcdgb = 0x825,
  s39_wcdlgb = 0x826,
  s39_wcefb = 0x827,
  s39_wcelfb = 0x828,
  s39_wcfeb = 0x829,
  s39_wcgdb = 0x82A,
  s39_wclfeb = 0x82B,
  s39_wclgdb = 0x82C,
  s39_wfadb = 0x82D,
  s39_wfasb = 0x82E,
  s39_wfaxb = 0x82F,
  s39_wfc = 0x830,
  s39_wfcdb = 0x831,
  s39_wfcedb = 0x832,
  s39_wfcedbs = 0x833,
  s39_wfcesb = 0x834,
  s39_wfcesbs = 0x835,
  s39_wfcexb = 0x836,
  s39_wfcexbs = 0x837,
  s39_wfchdb = 0x838,
  s39_wfchdbs = 0x839,
  s39_wfchedb = 0x83A,
  s39_wfchedbs = 0x83B,
  s39_wfchesb = 0x83C,
  s39_wfchesbs = 0x83D,
  s39_wfchexb = 0x83E,
  s39_wfchexbs = 0x83F,
  s39_wfchsb = 0x840,
  s39_wfchsbs = 0x841,
  s39_wfchxb = 0x842,
  s39_wfchxbs = 0x843,
  s39_wfcsb = 0x844,
  s39_wfcxb = 0x845,
  s39_wfddb = 0x846,
  s39_wfdsb = 0x847,
  s39_wfdxb = 0x848,
  s39_wfidb = 0x849,
  s39_wfisb = 0x84A,
  s39_wfixb = 0x84B,
  s39_wfk = 0x84C,
  s39_wfkdb = 0x84D,
  s39_wfkedb = 0x84E,
  s39_wfkedbs = 0x84F,
  s39_wfkesb = 0x850,
  s39_wfkesbs = 0x851,
  s39_wfkexb = 0x852,
  s39_wfkexbs = 0x853,
  s39_wfkhdb = 0x854,
  s39_wfkhdbs = 0x855,
  s39_wfkhedb = 0x856,
  s39_wfkhedbs = 0x857,
  s39_wfkhesb = 0x858,
  s39_wfkhesbs = 0x859,
  s39_wfkhexb = 0x85A,
  s39_wfkhexbs = 0x85B,
  s39_wfkhsb = 0x85C,
  s39_wfkhsbs = 0x85D,
  s39_wfkhxb = 0x85E,
  s39_wfkhxbs = 0x85F,
  s39_wfksb = 0x860,
  s39_wfkxb = 0x861,
  s39_wflcdb = 0x862,
  s39_wflcsb = 0x863,
  s39_wflcxb = 0x864,
  s39_wflld = 0x865,
  s39_wflls = 0x866,
  s39_wflndb = 0x867,
  s39_wflnsb = 0x868,
  s39_wflnxb = 0x869,
  s39_wflpdb = 0x86A,
  s39_wflpsb = 0x86B,
  s39_wflpxb = 0x86C,
  s39_wflrd = 0x86D,
  s39_wflrx = 0x86E,
  s39_wfmadb = 0x86F,
  s39_wfmasb = 0x870,
  s39_wfmaxb = 0x871,
  s39_wfmaxdb = 0x872,
  s39_wfmaxsb = 0x873,
  s39_wfmaxxb = 0x874,
  s39_wfmdb = 0x875,
  s39_wfmindb = 0x876,
  s39_wfminsb = 0x877,
  s39_wfminxb = 0x878,
  s39_wfmsb = 0x879,
  s39_wfmsdb = 0x87A,
  s39_wfmssb = 0x87B,
  s39_wfmsxb = 0x87C,
  s39_wfmxb = 0x87D,
  s39_wfnmadb = 0x87E,
  s39_wfnmasb = 0x87F,
  s39_wfnmaxb = 0x880,
  s39_wfnmsdb = 0x881,
  s39_wfnmssb = 0x882,
  s39_wfnmsxb = 0x883,
  s39_wfpsodb = 0x884,
  s39_wfpsosb = 0x885,
  s39_wfpsoxb = 0x886,
  s39_wfsdb = 0x887,
  s39_wfsqdb = 0x888,
  s39_wfsqsb = 0x889,
  s39_wfsqxb = 0x88A,
  s39_wfssb = 0x88B,
  s39_wfsxb = 0x88C,
  s39_wftcidb = 0x88D,
  s39_wftcisb = 0x88E,
  s39_wftcixb = 0x88F,
  s39_wldeb = 0x890,
  s39_wledb = 0x891,
  s39_x = 0x892,
  s39_xc = 0x893,
  s39_xg = 0x894,
  s39_xgr = 0x895,
  s39_xgrk = 0x896,
  s39_xi = 0x897,
  s39_xihf = 0x898,
  s39_xilf = 0x899,
  s39_xiy = 0x89A,
  s39_xr = 0x89B,
  s39_xrk = 0x89C,
  s39_xsch = 0x89D,
  s39_xy = 0x89E,
  s39_zap = 0x89F,
  s39_vx = 0x8A0,
  s39_last = 0x8A1,
};

/* 1802 */
enum _A2DB697AD6D9D37E30232284EFAA35E7 : unsigned __int32
{
  RISCV_null = 0x0,
  RISCV_lui = 0x1,
  RISCV_auipc = 0x2,
  RISCV_jal = 0x3,
  RISCV_jalr = 0x4,
  RISCV_beq = 0x5,
  RISCV_bne = 0x6,
  RISCV_blt = 0x7,
  RISCV_bge = 0x8,
  RISCV_bltu = 0x9,
  RISCV_bgeu = 0xA,
  RISCV_lb = 0xB,
  RISCV_lh = 0xC,
  RISCV_lw = 0xD,
  RISCV_lbu = 0xE,
  RISCV_lhu = 0xF,
  RISCV_sb = 0x10,
  RISCV_sh = 0x11,
  RISCV_sw = 0x12,
  RISCV_addi = 0x13,
  RISCV_slti = 0x14,
  RISCV_sltiu = 0x15,
  RISCV_xori = 0x16,
  RISCV_ori = 0x17,
  RISCV_andi = 0x18,
  RISCV_slli = 0x19,
  RISCV_srli = 0x1A,
  RISCV_srai = 0x1B,
  RISCV_add = 0x1C,
  RISCV_sub = 0x1D,
  RISCV_sll = 0x1E,
  RISCV_slt = 0x1F,
  RISCV_sltu = 0x20,
  RISCV_xor = 0x21,
  RISCV_srl = 0x22,
  RISCV_sra = 0x23,
  RISCV_or = 0x24,
  RISCV_and = 0x25,
  RISCV_fence = 0x26,
  RISCV_ecall = 0x27,
  RISCV_ebreak = 0x28,
  RISCV_uret = 0x29,
  RISCV_sret = 0x2A,
  RISCV_mret = 0x2B,
  RISCV_wfi = 0x2C,
  RISCV_sfence = 0x2D,
  RISCV_hfenceb = 0x2E,
  RISCV_hfenceg = 0x2F,
  RISCV_lwu = 0x30,
  RISCV_ld = 0x31,
  RISCV_sd = 0x32,
  RISCV_addiw = 0x33,
  RISCV_slliw = 0x34,
  RISCV_srliw = 0x35,
  RISCV_sraiw = 0x36,
  RISCV_addw = 0x37,
  RISCV_subw = 0x38,
  RISCV_sllw = 0x39,
  RISCV_sltw = 0x3A,
  RISCV_srlw = 0x3B,
  RISCV_sraw = 0x3C,
  RISCV_fencei = 0x3D,
  RISCV_csrrw = 0x3E,
  RISCV_csrrs = 0x3F,
  RISCV_csrrc = 0x40,
  RISCV_csrrwi = 0x41,
  RISCV_csrrsi = 0x42,
  RISCV_csrrci = 0x43,
  RISCV_mul = 0x44,
  RISCV_mulh = 0x45,
  RISCV_mulhsu = 0x46,
  RISCV_mulhu = 0x47,
  RISCV_div = 0x48,
  RISCV_divu = 0x49,
  RISCV_rem = 0x4A,
  RISCV_remu = 0x4B,
  RISCV_mulw = 0x4C,
  RISCV_divw = 0x4D,
  RISCV_divuw = 0x4E,
  RISCV_remw = 0x4F,
  RISCV_remuw = 0x50,
  RISCV_lr = 0x51,
  RISCV_sc = 0x52,
  RISCV_amoswap = 0x53,
  RISCV_amoadd = 0x54,
  RISCV_amoxor = 0x55,
  RISCV_amoand = 0x56,
  RISCV_amoor = 0x57,
  RISCV_amomin = 0x58,
  RISCV_amomax = 0x59,
  RISCV_amominu = 0x5A,
  RISCV_amomaxu = 0x5B,
  RISCV_flw = 0x5C,
  RISCV_fsw = 0x5D,
  RISCV_fmadd = 0x5E,
  RISCV_fmsub = 0x5F,
  RISCV_fnmsub = 0x60,
  RISCV_fnmadd = 0x61,
  RISCV_fadd = 0x62,
  RISCV_fsub = 0x63,
  RISCV_fmul = 0x64,
  RISCV_fdiv = 0x65,
  RISCV_fsqrt = 0x66,
  RISCV_fsgnj = 0x67,
  RISCV_fsgnjn = 0x68,
  RISCV_fsgnjx = 0x69,
  RISCV_fmin = 0x6A,
  RISCV_fmax = 0x6B,
  RISCV_fcvtf2f = 0x6C,
  RISCV_fcvtf2i = 0x6D,
  RISCV_fcvti2f = 0x6E,
  RISCV_fmv = 0x6F,
  RISCV_feq = 0x70,
  RISCV_flt = 0x71,
  RISCV_fle = 0x72,
  RISCV_fclass = 0x73,
  RISCV_fld = 0x74,
  RISCV_fsd = 0x75,
  RISCV_flq = 0x76,
  RISCV_fsq = 0x77,
  RISCV_nop = 0x78,
  RISCV_li = 0x79,
  RISCV_mv = 0x7A,
  RISCV_not = 0x7B,
  RISCV_neg = 0x7C,
  RISCV_negw = 0x7D,
  RISCV_sext = 0x7E,
  RISCV_seqz = 0x7F,
  RISCV_snez = 0x80,
  RISCV_sltz = 0x81,
  RISCV_sgtz = 0x82,
  RISCV_fabs = 0x83,
  RISCV_fneg = 0x84,
  RISCV_beqz = 0x85,
  RISCV_bnez = 0x86,
  RISCV_blez = 0x87,
  RISCV_bgez = 0x88,
  RISCV_bltz = 0x89,
  RISCV_bgtz = 0x8A,
  RISCV_j = 0x8B,
  RISCV_jr = 0x8C,
  RISCV_ret = 0x8D,
  RISCV_rdinstret = 0x8E,
  RISCV_rdcycle = 0x8F,
  RISCV_rdtime = 0x90,
  RISCV_rdinstreth = 0x91,
  RISCV_rdcycleh = 0x92,
  RISCV_rdtimeh = 0x93,
  RISCV_csrr = 0x94,
  RISCV_csrw = 0x95,
  RISCV_csrs = 0x96,
  RISCV_csrc = 0x97,
  RISCV_csrwi = 0x98,
  RISCV_csrsi = 0x99,
  RISCV_csrci = 0x9A,
  RISCV_frcsr = 0x9B,
  RISCV_fscsr = 0x9C,
  RISCV_frrm = 0x9D,
  RISCV_fsrm = 0x9E,
  RISCV_frflags = 0x9F,
  RISCV_fsflags = 0xA0,
  RISCV_la = 0xA1,
  RISCV_call = 0xA2,
  RISCV_tail = 0xA3,
  RISCV_jump = 0xA4,
  RISCV_last = 0xA5,
};

/* 1803 */
enum _F38E503CBA2F570685D3BDA361855189 : unsigned __int32
{
  RL78_null = 0x0,
  RL78_subw = 0x1,
  RL78_movw = 0x2,
  RL78_call = 0x3,
  RL78_clrw = 0x4,
  RL78_addw = 0x5,
  RL78_ret = 0x6,
  RL78_sel = 0x7,
  RL78_push = 0x8,
  RL78_onew = 0x9,
  RL78_incw = 0xA,
  RL78_cmpw = 0xB,
  RL78_bnz = 0xC,
  RL78_clrb = 0xD,
  RL78_and = 0xE,
  RL78_or = 0xF,
  RL78_br = 0x10,
  RL78_pop = 0x11,
  RL78_cmp = 0x12,
  RL78_decw = 0x13,
  RL78_inc = 0x14,
  RL78_bz = 0x15,
  RL78_sknz = 0x16,
  RL78_sknh = 0x17,
  RL78_skh = 0x18,
  RL78_xor1 = 0x19,
  RL78_or1 = 0x1A,
  RL78_and1 = 0x1B,
  RL78_mov1 = 0x1C,
  RL78_clr1 = 0x1D,
  RL78_set1 = 0x1E,
  RL78_not1 = 0x1F,
  RL78_skc = 0x20,
  RL78_sknc = 0x21,
  RL78_skz = 0x22,
  RL78_mov = 0x23,
  RL78_btclr = 0x24,
  RL78_bt = 0x25,
  RL78_bf = 0x26,
  RL78_shl = 0x27,
  RL78_shr = 0x28,
  RL78_sar = 0x29,
  RL78_shlw = 0x2A,
  RL78_shrw = 0x2B,
  RL78_sarw = 0x2C,
  RL78_bc = 0x2D,
  RL78_bnc = 0x2E,
  RL78_bh = 0x2F,
  RL78_bnh = 0x30,
  RL78_add = 0x31,
  RL78_addc = 0x32,
  RL78_sub = 0x33,
  RL78_subc = 0x34,
  RL78_xor = 0x35,
  RL78_xch = 0x36,
  RL78_dec = 0x37,
  RL78_rolwc = 0x38,
  RL78_xchw = 0x39,
  RL78_cmps = 0x3A,
  RL78_movs = 0x3B,
  RL78_halt = 0x3C,
  RL78_cmp0 = 0x3D,
  RL78_mulu = 0x3E,
  RL78_oneb = 0x3F,
  RL78_ror = 0x40,
  RL78_rol = 0x41,
  RL78_rorc = 0x42,
  RL78_rolc = 0x43,
  RL78_brk = 0x44,
  RL78_retb = 0x45,
  RL78_reti = 0x46,
  RL78_stop = 0x47,
  RL78_nop = 0x48,
  RL78_callt = 0x49,
  RL78_mulhu = 0x4A,
  RL78_mulh = 0x4B,
  RL78_divhu = 0x4C,
  RL78_divwu = 0x4D,
  RL78_machu = 0x4E,
  RL78_mach = 0x4F,
  RL78_last = 0x50,
};

/* 1804 */
enum _843ED0767DD041B1C1206079A348FC2D : unsigned __int32
{
  RX_null = 0x0,
  RX_abs = 0x1,
  RX_adc = 0x2,
  RX_add = 0x3,
  RX_and = 0x4,
  RX_bra = 0x5,
  RX_brk = 0x6,
  RX_bclr = 0x7,
  RX_bfmov = 0x8,
  RX_bfmovz = 0x9,
  RX_beq = 0xA,
  RX_bne = 0xB,
  RX_bgeu = 0xC,
  RX_bltu = 0xD,
  RX_bgtu = 0xE,
  RX_bleu = 0xF,
  RX_bpz = 0x10,
  RX_bn = 0x11,
  RX_bge = 0x12,
  RX_blt = 0x13,
  RX_bgt = 0x14,
  RX_ble = 0x15,
  RX_bo = 0x16,
  RX_bno = 0x17,
  RX_bmeq = 0x18,
  RX_bmne = 0x19,
  RX_bmgeu = 0x1A,
  RX_bmltu = 0x1B,
  RX_bmgtu = 0x1C,
  RX_bmleu = 0x1D,
  RX_bmpz = 0x1E,
  RX_bmn = 0x1F,
  RX_bmge = 0x20,
  RX_bmlt = 0x21,
  RX_bmgt = 0x22,
  RX_bmle = 0x23,
  RX_bmo = 0x24,
  RX_bmno = 0x25,
  RX_bnot = 0x26,
  RX_bset = 0x27,
  RX_bsr = 0x28,
  RX_btst = 0x29,
  RX_clrpsw = 0x2A,
  RX_cmp = 0x2B,
  RX_div = 0x2C,
  RX_divu = 0x2D,
  RX_emaca = 0x2E,
  RX_emsba = 0x2F,
  RX_emula = 0x30,
  RX_emul = 0x31,
  RX_emulu = 0x32,
  RX_fadd = 0x33,
  RX_fcmp = 0x34,
  RX_fdiv = 0x35,
  RX_fmul = 0x36,
  RX_fsqrt = 0x37,
  RX_fsub = 0x38,
  RX_ftoi = 0x39,
  RX_ftou = 0x3A,
  RX_int = 0x3B,
  RX_itof = 0x3C,
  RX_jmp = 0x3D,
  RX_jsr = 0x3E,
  RX_machi = 0x3F,
  RX_maclo = 0x40,
  RX_maclh = 0x41,
  RX_max = 0x42,
  RX_min = 0x43,
  RX_mov = 0x44,
  RX_movco = 0x45,
  RX_movli = 0x46,
  RX_movu = 0x47,
  RX_msbhi = 0x48,
  RX_msblo = 0x49,
  RX_msblh = 0x4A,
  RX_mul = 0x4B,
  RX_mulhi = 0x4C,
  RX_mullo = 0x4D,
  RX_mullh = 0x4E,
  RX_mvfachi = 0x4F,
  RX_mvfaclo = 0x50,
  RX_mvfacmi = 0x51,
  RX_mvfacgu = 0x52,
  RX_mvfc = 0x53,
  RX_mvtacgu = 0x54,
  RX_mvtachi = 0x55,
  RX_mvtaclo = 0x56,
  RX_mvtc = 0x57,
  RX_mvtipl = 0x58,
  RX_neg = 0x59,
  RX_nop = 0x5A,
  RX_not = 0x5B,
  RX_or = 0x5C,
  RX_pop = 0x5D,
  RX_popc = 0x5E,
  RX_popm = 0x5F,
  RX_push = 0x60,
  RX_pushc = 0x61,
  RX_pushm = 0x62,
  RX_racl = 0x63,
  RX_rdacl = 0x64,
  RX_racw = 0x65,
  RX_rdacw = 0x66,
  RX_revl = 0x67,
  RX_revw = 0x68,
  RX_rmpa = 0x69,
  RX_rolc = 0x6A,
  RX_rorc = 0x6B,
  RX_rotl = 0x6C,
  RX_rotr = 0x6D,
  RX_round = 0x6E,
  RX_rstr = 0x6F,
  RX_rte = 0x70,
  RX_rtfi = 0x71,
  RX_rts = 0x72,
  RX_rtsd = 0x73,
  RX_sat = 0x74,
  RX_satr = 0x75,
  RX_save = 0x76,
  RX_sbb = 0x77,
  RX_sceq = 0x78,
  RX_scne = 0x79,
  RX_scgeu = 0x7A,
  RX_scltu = 0x7B,
  RX_scgtu = 0x7C,
  RX_scleu = 0x7D,
  RX_scpz = 0x7E,
  RX_scn = 0x7F,
  RX_scge = 0x80,
  RX_sclt = 0x81,
  RX_scgt = 0x82,
  RX_scle = 0x83,
  RX_sco = 0x84,
  RX_scno = 0x85,
  RX_scmpu = 0x86,
  RX_setpsw = 0x87,
  RX_shar = 0x88,
  RX_shll = 0x89,
  RX_shlr = 0x8A,
  RX_smovb = 0x8B,
  RX_smovf = 0x8C,
  RX_smovu = 0x8D,
  RX_sstr = 0x8E,
  RX_stnz = 0x8F,
  RX_stz = 0x90,
  RX_sub = 0x91,
  RX_suntil = 0x92,
  RX_swhile = 0x93,
  RX_tst = 0x94,
  RX_utof = 0x95,
  RX_wait = 0x96,
  RX_xchg = 0x97,
  RX_xor = 0x98,
  RX_dabs = 0x99,
  RX_dadd = 0x9A,
  RX_dcmpun = 0x9B,
  RX_dcmpeq = 0x9C,
  RX_dcmplt = 0x9D,
  RX_dcmple = 0x9E,
  RX_ddiv = 0x9F,
  RX_dmov = 0xA0,
  RX_dmul = 0xA1,
  RX_dneg = 0xA2,
  RX_dpopm = 0xA3,
  RX_dpushm = 0xA4,
  RX_dround = 0xA5,
  RX_dsqrt = 0xA6,
  RX_dsub = 0xA7,
  RX_dtof = 0xA8,
  RX_dtoi = 0xA9,
  RX_dtou = 0xAA,
  RX_ftod = 0xAB,
  RX_itod = 0xAC,
  RX_mvfdc = 0xAD,
  RX_mvfdr = 0xAE,
  RX_mvtdc = 0xAF,
  RX_utod = 0xB0,
  RX_last = 0xB1,
};

/* 1805 */
enum _E48B04531105C4BF04A8F99B593AFF02 : unsigned __int32
{
  XTENSA_null = 0x0,
  XTENSA_abs = 0x1,
  XTENSA_add = 0x2,
  XTENSA_addi = 0x3,
  XTENSA_addmi = 0x4,
  XTENSA_addx2 = 0x5,
  XTENSA_addx4 = 0x6,
  XTENSA_addx8 = 0x7,
  XTENSA_and = 0x8,
  XTENSA_ball = 0x9,
  XTENSA_bany = 0xA,
  XTENSA_bbc = 0xB,
  XTENSA_bbs = 0xC,
  XTENSA_bbci = 0xD,
  XTENSA_bbsi = 0xE,
  XTENSA_beq = 0xF,
  XTENSA_beqi = 0x10,
  XTENSA_beqz = 0x11,
  XTENSA_bge = 0x12,
  XTENSA_bgei = 0x13,
  XTENSA_bgeu = 0x14,
  XTENSA_bgeui = 0x15,
  XTENSA_bgez = 0x16,
  XTENSA_blt = 0x17,
  XTENSA_blti = 0x18,
  XTENSA_bltu = 0x19,
  XTENSA_bltui = 0x1A,
  XTENSA_bltz = 0x1B,
  XTENSA_bnall = 0x1C,
  XTENSA_bnone = 0x1D,
  XTENSA_bne = 0x1E,
  XTENSA_bnei = 0x1F,
  XTENSA_bnez = 0x20,
  XTENSA_break = 0x21,
  XTENSA_call0 = 0x22,
  XTENSA_call4 = 0x23,
  XTENSA_call8 = 0x24,
  XTENSA_call12 = 0x25,
  XTENSA_callx0 = 0x26,
  XTENSA_callx4 = 0x27,
  XTENSA_callx8 = 0x28,
  XTENSA_callx12 = 0x29,
  XTENSA_dsync = 0x2A,
  XTENSA_entry = 0x2B,
  XTENSA_esync = 0x2C,
  XTENSA_excw = 0x2D,
  XTENSA_extui = 0x2E,
  XTENSA_extw = 0x2F,
  XTENSA_isync = 0x30,
  XTENSA_j = 0x31,
  XTENSA_jx = 0x32,
  XTENSA_loop = 0x33,
  XTENSA_loopgtz = 0x34,
  XTENSA_loopnez = 0x35,
  XTENSA_lsi = 0x36,
  XTENSA_lsx = 0x37,
  XTENSA_l8ui = 0x38,
  XTENSA_l16si = 0x39,
  XTENSA_l16ui = 0x3A,
  XTENSA_l32i = 0x3B,
  XTENSA_l32r = 0x3C,
  XTENSA_max = 0x3D,
  XTENSA_maxu = 0x3E,
  XTENSA_memw = 0x3F,
  XTENSA_min = 0x40,
  XTENSA_minu = 0x41,
  XTENSA_mov = 0x42,
  XTENSA_moveqz = 0x43,
  XTENSA_movgez = 0x44,
  XTENSA_movi = 0x45,
  XTENSA_movltz = 0x46,
  XTENSA_movnez = 0x47,
  XTENSA_mul16s = 0x48,
  XTENSA_mul16u = 0x49,
  XTENSA_mull = 0x4A,
  XTENSA_neg = 0x4B,
  XTENSA_nsa = 0x4C,
  XTENSA_nsau = 0x4D,
  XTENSA_nop = 0x4E,
  XTENSA_or = 0x4F,
  XTENSA_ret = 0x50,
  XTENSA_retw = 0x51,
  XTENSA_rfe = 0x52,
  XTENSA_rfi = 0x53,
  XTENSA_rsil = 0x54,
  XTENSA_rsr = 0x55,
  XTENSA_rsync = 0x56,
  XTENSA_s8i = 0x57,
  XTENSA_s16i = 0x58,
  XTENSA_s32i = 0x59,
  XTENSA_s32ri = 0x5A,
  XTENSA_sext = 0x5B,
  XTENSA_sll = 0x5C,
  XTENSA_slli = 0x5D,
  XTENSA_sra = 0x5E,
  XTENSA_srai = 0x5F,
  XTENSA_src = 0x60,
  XTENSA_srl = 0x61,
  XTENSA_srli = 0x62,
  XTENSA_ssa8b = 0x63,
  XTENSA_ssa8l = 0x64,
  XTENSA_ssai = 0x65,
  XTENSA_ssl = 0x66,
  XTENSA_ssr = 0x67,
  XTENSA_sub = 0x68,
  XTENSA_subx2 = 0x69,
  XTENSA_subx4 = 0x6A,
  XTENSA_subx8 = 0x6B,
  XTENSA_waiti = 0x6C,
  XTENSA_wdtlb = 0x6D,
  XTENSA_witlb = 0x6E,
  XTENSA_wsr = 0x6F,
  XTENSA_xor = 0x70,
  XTENSA_xsr = 0x71,
  XTENSA_last = 0x72,
};

/* 1806 */
typedef __int16 regnum_t;

/* 1807 */
enum RegNo : unsigned __int32
{
  R_none = 0xFFFFFFFF,
  R_ax = 0x0,
  R_cx = 0x1,
  R_dx = 0x2,
  R_bx = 0x3,
  R_sp = 0x4,
  R_bp = 0x5,
  R_si = 0x6,
  R_di = 0x7,
  R_r8 = 0x8,
  R_r9 = 0x9,
  R_r10 = 0xA,
  R_r11 = 0xB,
  R_r12 = 0xC,
  R_r13 = 0xD,
  R_r14 = 0xE,
  R_r15 = 0xF,
  R_al = 0x10,
  R_cl = 0x11,
  R_dl = 0x12,
  R_bl = 0x13,
  R_ah = 0x14,
  R_ch = 0x15,
  R_dh = 0x16,
  R_bh = 0x17,
  R_spl = 0x18,
  R_bpl = 0x19,
  R_sil = 0x1A,
  R_dil = 0x1B,
  R_ip = 0x1C,
  R_es = 0x1D,
  R_cs = 0x1E,
  R_ss = 0x1F,
  R_ds = 0x20,
  R_fs = 0x21,
  R_gs = 0x22,
  R_cf = 0x23,
  R_zf = 0x24,
  R_sf = 0x25,
  R_of = 0x26,
  R_pf = 0x27,
  R_af = 0x28,
  R_tf = 0x29,
  R_if = 0x2A,
  R_df = 0x2B,
  R_efl = 0x2C,
  R_st0 = 0x2D,
  R_st1 = 0x2E,
  R_st2 = 0x2F,
  R_st3 = 0x30,
  R_st4 = 0x31,
  R_st5 = 0x32,
  R_st6 = 0x33,
  R_st7 = 0x34,
  R_fpctrl = 0x35,
  R_fpstat = 0x36,
  R_fptags = 0x37,
  R_mm0 = 0x38,
  R_mm1 = 0x39,
  R_mm2 = 0x3A,
  R_mm3 = 0x3B,
  R_mm4 = 0x3C,
  R_mm5 = 0x3D,
  R_mm6 = 0x3E,
  R_mm7 = 0x3F,
  R_xmm0 = 0x40,
  R_xmm1 = 0x41,
  R_xmm2 = 0x42,
  R_xmm3 = 0x43,
  R_xmm4 = 0x44,
  R_xmm5 = 0x45,
  R_xmm6 = 0x46,
  R_xmm7 = 0x47,
  R_xmm8 = 0x48,
  R_xmm9 = 0x49,
  R_xmm10 = 0x4A,
  R_xmm11 = 0x4B,
  R_xmm12 = 0x4C,
  R_xmm13 = 0x4D,
  R_xmm14 = 0x4E,
  R_xmm15 = 0x4F,
  R_mxcsr = 0x50,
  R_ymm0 = 0x51,
  R_ymm1 = 0x52,
  R_ymm2 = 0x53,
  R_ymm3 = 0x54,
  R_ymm4 = 0x55,
  R_ymm5 = 0x56,
  R_ymm6 = 0x57,
  R_ymm7 = 0x58,
  R_ymm8 = 0x59,
  R_ymm9 = 0x5A,
  R_ymm10 = 0x5B,
  R_ymm11 = 0x5C,
  R_ymm12 = 0x5D,
  R_ymm13 = 0x5E,
  R_ymm14 = 0x5F,
  R_ymm15 = 0x60,
  R_bnd0 = 0x61,
  R_bnd1 = 0x62,
  R_bnd2 = 0x63,
  R_bnd3 = 0x64,
  R_xmm16 = 0x65,
  R_xmm17 = 0x66,
  R_xmm18 = 0x67,
  R_xmm19 = 0x68,
  R_xmm20 = 0x69,
  R_xmm21 = 0x6A,
  R_xmm22 = 0x6B,
  R_xmm23 = 0x6C,
  R_xmm24 = 0x6D,
  R_xmm25 = 0x6E,
  R_xmm26 = 0x6F,
  R_xmm27 = 0x70,
  R_xmm28 = 0x71,
  R_xmm29 = 0x72,
  R_xmm30 = 0x73,
  R_xmm31 = 0x74,
  R_ymm16 = 0x75,
  R_ymm17 = 0x76,
  R_ymm18 = 0x77,
  R_ymm19 = 0x78,
  R_ymm20 = 0x79,
  R_ymm21 = 0x7A,
  R_ymm22 = 0x7B,
  R_ymm23 = 0x7C,
  R_ymm24 = 0x7D,
  R_ymm25 = 0x7E,
  R_ymm26 = 0x7F,
  R_ymm27 = 0x80,
  R_ymm28 = 0x81,
  R_ymm29 = 0x82,
  R_ymm30 = 0x83,
  R_ymm31 = 0x84,
  R_zmm0 = 0x85,
  R_zmm1 = 0x86,
  R_zmm2 = 0x87,
  R_zmm3 = 0x88,
  R_zmm4 = 0x89,
  R_zmm5 = 0x8A,
  R_zmm6 = 0x8B,
  R_zmm7 = 0x8C,
  R_zmm8 = 0x8D,
  R_zmm9 = 0x8E,
  R_zmm10 = 0x8F,
  R_zmm11 = 0x90,
  R_zmm12 = 0x91,
  R_zmm13 = 0x92,
  R_zmm14 = 0x93,
  R_zmm15 = 0x94,
  R_zmm16 = 0x95,
  R_zmm17 = 0x96,
  R_zmm18 = 0x97,
  R_zmm19 = 0x98,
  R_zmm20 = 0x99,
  R_zmm21 = 0x9A,
  R_zmm22 = 0x9B,
  R_zmm23 = 0x9C,
  R_zmm24 = 0x9D,
  R_zmm25 = 0x9E,
  R_zmm26 = 0x9F,
  R_zmm27 = 0xA0,
  R_zmm28 = 0xA1,
  R_zmm29 = 0xA2,
  R_zmm30 = 0xA3,
  R_zmm31 = 0xA4,
  R_k0 = 0xA5,
  R_k1 = 0xA6,
  R_k2 = 0xA7,
  R_k3 = 0xA8,
  R_k4 = 0xA9,
  R_k5 = 0xAA,
  R_k6 = 0xAB,
  R_k7 = 0xAC,
  R_last = 0xAD,
};

/* 1808 */
struct fbase_reg_t
{
  ea_t value;
  ea_t minea;
  int16 reg;
};

/* 1809 */
struct pushreg_t
{
  ea_t ea;
  sval_t off;
  sval_t width;
  regnum_t reg;
  uint16 flags;
};

/* 1811 */
struct __cppobj qvector_pushreg_t_
{
  pushreg_t *array;
  size_t n;
  size_t alloc;
};

/* 1814 */
struct __cppobj qvector_qvector_unsigned_long_long__
{
  qvector_unsigned_long_long_ *array;
  size_t n;
  size_t alloc;
};

/* 1817 */
typedef qvector_qvector_unsigned_long_long__ pushinfo_t__pop_info_t;

/* 1810 */
struct __cppobj pushinfo_t
{
  int flags;
  qvector_pushreg_t_ psi;
  ssize_t bpidx;
  uint32 spoiled;
  eavec_t prolog_insns;
  pushinfo_t__pop_info_t pops;
  int eh_type;
  ea_t eh_info;
  sval_t xmm_stkoff;
  sval_t reg_stkoff;
  int xmm_nsaved;
  int reg_nsaved;
  int cb;
};

/* 1812 */
typedef pushreg_t *qvector_pushreg_t___iterator;

/* 1813 */
typedef pushreg_t *qvector_pushreg_t___const_iterator;

/* 1815 */
typedef qvector_unsigned_long_long_ *qvector_qvector_unsigned_long_long____iterator;

/* 1816 */
typedef qvector_unsigned_long_long_ *qvector_qvector_unsigned_long_long____const_iterator;

/* 1818 */
enum spec_func_type_t : unsigned __int32
{
  SF_NONE = 0x0,
  SF_EH_PROLOG = 0x1,
  SF_SEH_PROLOG = 0x2,
  SF_SEH_EPILOG = 0x3,
  SF_ALLOCA = 0x4,
  SF_CHK = 0x5,
  SF_SYSINIT = 0x6,
  SF_EH_EPILOG = 0x7,
  SF_LSTRCATN = 0x8,
};

/* 1819 */
typedef const regval_t *__cdecl _5DC973CEB2655A80446E64E85C580C7E(const char *, const regval_t *);

/* 1820 */
struct mmtype_t
{
  const char *name;
  const type_t *type;
  const type_t *fields;
  tinfo_t tif;
};

/* 1821 */
enum pc_module_t__event_codes_t : unsigned __int32
{
  ev_set_difbase = 0xBB8,
  ev_restore_pushinfo = 0xBB9,
  ev_save_pushinfo = 0xBBA,
  ev_prolog_analyzed = 0xBBB,
  ev_verify_epilog = 0xBBC,
  obsolete_ev_find_reg_value = 0xBBD,
  ev_dbgtools_path = 0xBBE,
  ev_is_get_pc_thunk = 0xBBF,
  ev_vxd_loaded = 0xBC0,
  ev_get_borland_template_node = 0xBC1,
  ev_clear_borland_template_node = 0xBC2,
  ev_borland_template = 0xBC3,
  ev_get_segval = 0xBC4,
  ev_get_idpflags = 0xBC5,
  ev_get_ret_target = 0xBC6,
  ev_set_ret_target = 0xBC7,
  ev_del_ret_target = 0xBC8,
};

/* 1828 */
struct _EBEF71244791381780396B181B40BFD1
{
  bool (*ptr)(void);
  size_t adj;
};

/* 1829 */
typedef _EBEF71244791381780396B181B40BFD1 jump_pattern_t__check_insn_t;

/* 1823 */
struct __cppobj qvector_op_t_
{
  op_t *array;
  size_t n;
  size_t alloc;
};

/* 1826 */
typedef qvector_op_t_ tracked_regs_t;

/* 1822 */
struct __cppobj jump_pattern_t
{
  jump_pattern_t_vtbl *__vftable /*VFT*/;
  bool modifying_r32_spoils_r64;
  insn_t insn;
  switch_info_t *si;
  ea_t eas[16];
  bool skip[16];
  int non_spoiled_reg;
  jump_pattern_t__check_insn_t check[16];
  bool stop_matching;
  bool in_linear_flow;
  ea_t block_end;
  const char (*depends)[4];
  eavec_t remote_code;
  eavec_t extra_insn_eas;
  tracked_regs_t regs;
};

/* 1824 */
typedef op_t *qvector_op_t___iterator;

/* 1825 */
typedef op_t *qvector_op_t___const_iterator;

/* 1827 */
/*struct jump_pattern_t_vtbl
{
  void (__fastcall *process_delay_slot)(const jump_pattern_t *__hidden this, ea_t *, bool);
  bool (__fastcall *equal_ops)(const jump_pattern_t *__hidden this, const op_t *x, const op_t *y);
  bool (__fastcall *handle_mov)(jump_pattern_t *__hidden this, tracked_regs_t *);
  void (__fastcall *check_spoiled)(const jump_pattern_t *__hidden this, tracked_regs_t *_regs);
  op_dtype_t (__fastcall *extend_dtype)(const jump_pattern_t *__hidden this, const op_t *op);
  bool (__fastcall *jpi0)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpi1)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpi2)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpi3)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpi4)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpi5)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpi6)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpi7)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpi8)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpi9)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpia)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpib)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpic)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpid)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpie)(jump_pattern_t *__hidden this);
  bool (__fastcall *jpif)(jump_pattern_t *__hidden this);
  bool (__fastcall *pre_jpi)(jump_pattern_t *__hidden this, int);
  void (__fastcall *_del_jump_pattern_t)(jump_pattern_t *__hidden this);
};
*/

/* 1830 */
enum _94D4D585A38CDA12BD4A7F760DAFD340 : unsigned __int32
{
  JT_NONE = 0x0,
  JT_SWITCH = 0x1,
  JT_CALL = 0x2,
};

/* 1831 */
typedef int __cdecl is_pattern_t(switch_info_t *, const insn_t *, procmod_t *);

/* 1832 */
typedef int __cdecl table_checker_t(switch_info_t *, ea_t, int, procmod_t *);

/* 1833 */
struct no_regs_t
{
};

/* 1838 */
#pragma pack(push, 8)
struct __cppobj std__less_unsigned_long_long_
{
};
#pragma pack(pop)

/* 1915 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P__
{
};
#pragma pack(pop)

/* 1852 */
typedef std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P_ std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____Node;

/* 1853 */
typedef std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____Node *std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____Nodeptr;

/* 1854 */
typedef std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____Nodeptr std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______Nodeptr;

/* 1859 */
typedef size_t std___Simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____size_type;

/* 1860 */
typedef std___Simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____size_type std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____size_type;

/* 1856 */
#pragma pack(push, 8)
struct __cppobj std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long___ : std___Container_base
{
  std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______Nodeptr _Myhead;
  std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____size_type _Mysize;
};
#pragma pack(pop)

/* 1919 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____true_ : std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P__
{
  std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long___ _Myval2;
};
#pragma pack(pop)

/* 1918 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__less_unsigned_long_long___std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____true___true_ : std__less_unsigned_long_long_
{
  std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____true_ _Myval2;
};
#pragma pack(pop)

/* 1837 */
#pragma pack(push, 8)
struct __cppobj std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false__
{
  std___Compressed_pair_std__less_unsigned_long_long___std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____true___true_ _Mypair;
};
#pragma pack(pop)

/* 1836 */
#pragma pack(push, 8)
struct __cppobj std__map_unsigned_long_long__unsigned_long_long_ : std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false__
{
};
#pragma pack(pop)

/* 1924 */
typedef std__map_unsigned_long_long__unsigned_long_long_ backward_flow_iterator_t_State__Ctrl___visited_t;

/* 2004 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P__
{
};
#pragma pack(pop)

/* 1941 */
typedef std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P_ std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____Node;

/* 1942 */
typedef std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____Node *std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____Nodeptr;

/* 1943 */
typedef std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____Nodeptr std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______Nodeptr;

/* 1948 */
typedef size_t std___Simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____size_type;

/* 1949 */
typedef std___Simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____size_type std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____size_type;

/* 1945 */
#pragma pack(push, 8)
struct __cppobj std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___ : std___Container_base
{
  std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______Nodeptr _Myhead;
  std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____size_type _Mysize;
};
#pragma pack(pop)

/* 2008 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____true_ : std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P__
{
  std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___ _Myval2;
};
#pragma pack(pop)

/* 2007 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__less_unsigned_long_long___std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____true___true_ : std__less_unsigned_long_long_
{
  std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____true_ _Myval2;
};
#pragma pack(pop)

/* 1926 */
#pragma pack(push, 8)
struct __cppobj std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false__
{
  std___Compressed_pair_std__less_unsigned_long_long___std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P____std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____true___true_ _Mypair;
};
#pragma pack(pop)

/* 1925 */
#pragma pack(push, 8)
struct __cppobj std__map_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_ : std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false__
{
};
#pragma pack(pop)

/* 2013 */
typedef std__map_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_ backward_flow_iterator_t_no_regs_t__simple_bfi_t___waiting_t;

/* 1835 */
struct __cppobj backward_flow_iterator_t_no_regs_t__simple_bfi_t_
{
  ea_t cur_ea;
  no_regs_t *regs;
  simple_bfi_t *ctrl;
  bool only_near;
  uint max_insn_cnt;
  func_t *pfn;
  const segment_t *seg;
  ea_t start_ea;
  ea_t cur_end;
  uint insn_cnt;
  backward_flow_iterator_t_State__Ctrl___visited_t visited;
  backward_flow_iterator_t_no_regs_t__simple_bfi_t___waiting_t waiting;
};

/* 1834 */
struct __cppobj simple_bfi_t : backward_flow_iterator_t_no_regs_t__simple_bfi_t_
{
  no_regs_t regs_;
};

/* 1839 */
typedef std__less_unsigned_long_long_ std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false___key_compare;

/* 1840 */
typedef std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false___key_compare std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____key_compare;

/* 1841 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long__
{
};
#pragma pack(pop)

/* 1842 */
#pragma pack(push, 8)
struct __cppobj std__pair_const_unsigned_long_long__unsigned_long_long_
{
  const unsigned __int64 first;
  unsigned __int64 second;
};
#pragma pack(pop)

/* 1843 */
typedef std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long__ std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false___allocator_type;

/* 1844 */
typedef std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false___allocator_type std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____allocator_type;

/* 1855 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______Nodeptr std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______Nodeptr;

/* 1847 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ : std___Iterator_base0
{
  std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______Nodeptr _Ptr;
};
#pragma pack(pop)

/* 1846 */
#pragma pack(push, 8)
struct __cppobj std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____
{
};
#pragma pack(pop)

/* 1845 */
#pragma pack(push, 8)
struct __cppobj std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ : std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____
{
};
#pragma pack(pop)

/* 1849 */
typedef std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P_ *std___Rebind_pointer_t_void__P__std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P__;

/* 1850 */
typedef std___Rebind_pointer_t_void__P__std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P__ std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P____Nodeptr;

/* 1851 */
typedef std__pair_const_unsigned_long_long__unsigned_long_long_ std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P___value_type;

/* 1848 */
#pragma pack(push, 8)
struct __cppobj std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P_
{
  std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P____Nodeptr _Left;
  std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P____Nodeptr _Parent;
  std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P____Nodeptr _Right;
  char _Color;
  char _Isnil;
  std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P___value_type _Myval;
};
#pragma pack(pop)

/* 1857 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______Unchecked_const_iterator;

/* 1858 */
#pragma pack(push, 8)
struct std___Tree_id_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P___P_
{
  std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P_ *_Parent;
  std___Tree_child _Child;
};
#pragma pack(pop)

/* 1861 */
typedef std__pair_const_unsigned_long_long__unsigned_long_long_ std___Simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____value_type;

/* 1862 */
typedef std___Simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____value_type std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____value_type;

/* 1863 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____value_type std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______value_type;

/* 1864 */
typedef const std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______value_type *std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______reference;

/* 1865 */
typedef const std___Simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____value_type *std___Simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____const_pointer;

/* 1866 */
typedef std___Simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____const_pointer std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____const_pointer;

/* 1867 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____const_pointer std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______pointer;

/* 1868 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____value_type std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______value_type;

/* 1869 */
typedef const std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______value_type *std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______reference;

/* 1870 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____const_pointer std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______pointer;

/* 1871 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____value_type std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______value_type;

/* 1872 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______value_type *std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______reference;

/* 1873 */
typedef std___Simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____value_type *std___Simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____pointer;

/* 1874 */
typedef std___Simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____pointer std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____pointer;

/* 1875 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____pointer std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______pointer;

/* 1876 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____
{
};
#pragma pack(pop)

/* 1877 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____value_type std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______value_type;

/* 1878 */
typedef std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______value_type *std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______reference;

/* 1879 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____pointer std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______pointer;

/* 1880 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____iterator;

/* 1881 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____const_iterator;

/* 1882 */
typedef std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false_____Unchecked_iterator;

/* 1883 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false_____Unchecked_const_iterator;

/* 1884 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____
{
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ current;
};
#pragma pack(pop)

/* 1885 */
typedef std__pair_const_unsigned_long_long__unsigned_long_long_ *std___Iter_ref_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____;

/* 1886 */
typedef std___Iter_ref_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____ std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______reference;

/* 1887 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______pointer std___Iterator_traits_base_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______pointer;

/* 1888 */
typedef std___Iterator_traits_base_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______pointer std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______pointer;

/* 1889 */
typedef __int64 std___Iter_diff_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____;

/* 1890 */
typedef std___Iter_diff_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____ std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______difference_type;

/* 1891 */
typedef std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____ std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____reverse_iterator;

/* 1892 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ current;
};
#pragma pack(pop)

/* 1893 */
typedef const std__pair_const_unsigned_long_long__unsigned_long_long_ *std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____;

/* 1894 */
typedef std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______reference;

/* 1895 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______pointer std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______pointer;

/* 1896 */
typedef std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______pointer std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______pointer;

/* 1897 */
typedef __int64 std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____;

/* 1898 */
typedef std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_______difference_type;

/* 1899 */
typedef std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____ std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____const_reverse_iterator;

/* 1900 */
typedef size_t std___Default_allocator_traits_std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long_____size_type;

/* 1901 */
typedef std___Default_allocator_traits_std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long_____size_type std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____size_type;

/* 1902 */
struct std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false___value_compare;

/* 1903 */
typedef struct std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false___value_compare std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____value_compare;

/* 1904 */
typedef std__pair_const_unsigned_long_long__unsigned_long_long_ std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false___value_type;

/* 1905 */
typedef std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false___value_type std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____value_type;

/* 1906 */
#pragma pack(push, 8)
struct __cppobj std__initializer_list_std__pair_const_unsigned_long_long__unsigned_long_long__
{
  std__pair_const_unsigned_long_long__unsigned_long_long_ *_First;
  std__pair_const_unsigned_long_long__unsigned_long_long_ *_Last;
};
#pragma pack(pop)

/* 1907 */
typedef std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P_ std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P____value_type;

/* 1908 */
typedef std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P____value_type std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P_____value_type;

/* 1909 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P_____value_type *std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P_____pointer;

/* 1910 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P_____pointer std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false_____Nodeptr;

/* 1911 */
typedef unsigned __int64 std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false___key_type;

/* 1912 */
typedef std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false___key_type std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____key_type;

/* 1913 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____
{
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ first;
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ second;
};
#pragma pack(pop)

/* 1914 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long______std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long_____
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ first;
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long____ second;
};
#pragma pack(pop)

/* 1916 */
typedef std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__unsigned_long_long___void__P__ std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false_____Alnode;

/* 1917 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__unsigned_long_long___ std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false_____Scary_val;

/* 1920 */
typedef std___Tree_std___Tmap_traits_unsigned_long_long__unsigned_long_long__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__unsigned_long_long____false____allocator_type std__map_unsigned_long_long__unsigned_long_long___allocator_type;

/* 1921 */
typedef std__less_unsigned_long_long_ std__map_unsigned_long_long__unsigned_long_long___key_compare;

/* 1922 */
typedef unsigned __int64 std__map_unsigned_long_long__unsigned_long_long___mapped_type;

/* 1923 */
typedef unsigned __int64 std__map_unsigned_long_long__unsigned_long_long___key_type;

/* 1927 */
typedef std__less_unsigned_long_long_ std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false___key_compare;

/* 1928 */
typedef std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false___key_compare std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____key_compare;

/* 1929 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__
{
};
#pragma pack(pop)

/* 1931 */
struct __cppobj backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t
{
  no_regs_t regs;
  uint insn_cnt;
};

/* 1930 */
#pragma pack(push, 8)
struct __cppobj std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_
{
  const unsigned __int64 first;
  backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t second;
};
#pragma pack(pop)

/* 1932 */
typedef std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__ std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false___allocator_type;

/* 1933 */
typedef std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false___allocator_type std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____allocator_type;

/* 1944 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______Nodeptr std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______Nodeptr;

/* 1936 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ : std___Iterator_base0
{
  std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______Nodeptr _Ptr;
};
#pragma pack(pop)

/* 1935 */
#pragma pack(push, 8)
struct __cppobj std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____
{
};
#pragma pack(pop)

/* 1934 */
#pragma pack(push, 8)
struct __cppobj std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ : std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____
{
};
#pragma pack(pop)

/* 1938 */
typedef std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P_ *std___Rebind_pointer_t_void__P__std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P__;

/* 1939 */
typedef std___Rebind_pointer_t_void__P__std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P__ std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P____Nodeptr;

/* 1940 */
typedef std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_ std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P___value_type;

/* 1937 */
#pragma pack(push, 8)
struct __cppobj std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P_
{
  std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P____Nodeptr _Left;
  std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P____Nodeptr _Parent;
  std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P____Nodeptr _Right;
  char _Color;
  char _Isnil;
  std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P___value_type _Myval;
};
#pragma pack(pop)

/* 1946 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______Unchecked_const_iterator;

/* 1947 */
#pragma pack(push, 8)
struct std___Tree_id_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P___P_
{
  std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P_ *_Parent;
  std___Tree_child _Child;
};
#pragma pack(pop)

/* 1950 */
typedef std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_ std___Simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____value_type;

/* 1951 */
typedef std___Simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____value_type std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____value_type;

/* 1952 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____value_type std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______value_type;

/* 1953 */
typedef const std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______value_type *std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______reference;

/* 1954 */
typedef const std___Simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____value_type *std___Simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____const_pointer;

/* 1955 */
typedef std___Simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____const_pointer std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____const_pointer;

/* 1956 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____const_pointer std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______pointer;

/* 1957 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____value_type std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______value_type;

/* 1958 */
typedef const std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______value_type *std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______reference;

/* 1959 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____const_pointer std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______pointer;

/* 1960 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____value_type std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______value_type;

/* 1961 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______value_type *std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______reference;

/* 1962 */
typedef std___Simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____value_type *std___Simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____pointer;

/* 1963 */
typedef std___Simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____pointer std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____pointer;

/* 1964 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____pointer std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______pointer;

/* 1965 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____
{
};
#pragma pack(pop)

/* 1966 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____value_type std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______value_type;

/* 1967 */
typedef std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______value_type *std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______reference;

/* 1968 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____pointer std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______pointer;

/* 1969 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____iterator;

/* 1970 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____const_iterator;

/* 1971 */
typedef std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false_____Unchecked_iterator;

/* 1972 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false_____Unchecked_const_iterator;

/* 1973 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____
{
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ current;
};
#pragma pack(pop)

/* 1974 */
typedef std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_ *std___Iter_ref_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____;

/* 1975 */
typedef std___Iter_ref_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____ std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______reference;

/* 1976 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______pointer std___Iterator_traits_base_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______pointer;

/* 1977 */
typedef std___Iterator_traits_base_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______pointer std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______pointer;

/* 1978 */
typedef __int64 std___Iter_diff_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____;

/* 1979 */
typedef std___Iter_diff_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____ std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______difference_type;

/* 1980 */
typedef std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____ std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____reverse_iterator;

/* 1981 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ current;
};
#pragma pack(pop)

/* 1982 */
typedef const std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_ *std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____;

/* 1983 */
typedef std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______reference;

/* 1984 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______pointer std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______pointer;

/* 1985 */
typedef std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______pointer std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______pointer;

/* 1986 */
typedef __int64 std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____;

/* 1987 */
typedef std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_______difference_type;

/* 1988 */
typedef std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____ std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____const_reverse_iterator;

/* 1989 */
typedef size_t std___Default_allocator_traits_std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____size_type;

/* 1990 */
typedef std___Default_allocator_traits_std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____size_type std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____size_type;

/* 1991 */
struct std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false___value_compare;

/* 1992 */
typedef struct std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false___value_compare std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____value_compare;

/* 1993 */
typedef std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_ std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false___value_type;

/* 1994 */
typedef std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false___value_type std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____value_type;

/* 1995 */
#pragma pack(push, 8)
struct __cppobj std__initializer_list_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__
{
  std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_ *_First;
  std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_ *_Last;
};
#pragma pack(pop)

/* 1996 */
typedef std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P_ std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P____value_type;

/* 1997 */
typedef std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P____value_type std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P_____value_type;

/* 1998 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P_____value_type *std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P_____pointer;

/* 1999 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P_____pointer std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false_____Nodeptr;

/* 2000 */
typedef unsigned __int64 std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false___key_type;

/* 2001 */
typedef std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false___key_type std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____key_type;

/* 2002 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____
{
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ first;
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ second;
};
#pragma pack(pop)

/* 2003 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t______std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t_____
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ first;
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____ second;
};
#pragma pack(pop)

/* 2005 */
typedef std__allocator_std___Tree_node_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___void__P__ std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false_____Alnode;

/* 2006 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___ std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false_____Scary_val;

/* 2009 */
typedef std___Tree_std___Tmap_traits_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t__std__less_unsigned_long_long___std__allocator_std__pair_const_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t____false____allocator_type std__map_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___allocator_type;

/* 2010 */
typedef std__less_unsigned_long_long_ std__map_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___key_compare;

/* 2011 */
typedef backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t std__map_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___mapped_type;

/* 2012 */
typedef unsigned __int64 std__map_unsigned_long_long__backward_flow_iterator_t_no_regs_t__simple_bfi_t___state_t___key_type;

/* 2017 */
struct ida_movable_type_token_t_
{
};

/* 2018 */
typedef error_t __cdecl lx_resolver_t(lexer_t *, void *, token_t *, sval_t *);

/* 2019 */
struct __cppobj cast_t
{
  bool is_unsigned;
  int size;
};

/* 2021 */
union lex_value_t___511FB7214E5937D85C36537DA5D3C419
{
  int64 val;
  uint64 uval;
};

/* 2020 */
struct __cppobj lex_value_t
{
  bool is_unsigned;
  union
  {
    int64 val;
    uint64 uval;
  };
};

/* 2022 */
typedef error_t __cdecl lx_parse_cast_t(lexer_t *, cast_t *, token_t *);

/* 2023 */
typedef int __cdecl _AF4ED28A64411848F4EED41572FA4CE1(void *, const char *, int, const char *);

/* 2024 */
typedef int __cdecl _223DCB884574D5DE586AD2D6B7376847(void *, const char *);

/* 2025 */
typedef int __cdecl _2C0E99206E7908236DCABCB2B91A8D4F(void *, const char *, const char *, int, bool, bool);

/* 2027 */
struct __cppobj qvector_token_t_
{
  token_t *array;
  size_t n;
  size_t alloc;
};

/* 2026 */
struct __cppobj qstack_token_t_ : qvector_token_t_
{
};

/* 2028 */
typedef token_t *qvector_token_t___iterator;

/* 2029 */
typedef token_t *qvector_token_t___const_iterator;

/* 2030 */
typedef qstack_token_t_ tokenstack_t;

/* 2031 */
struct loader_t
{
  uint32 version;
  uint32 flags;
  int (__cdecl *accept_file)(qstring *, qstring *, linput_t *, const char *);
  void (__cdecl *load_file)(linput_t *, ushort, const char *);
  int (__cdecl *save_file)(FILE *, const char *);
  int (__cdecl *move_segm)(ea_t, ea_t, asize_t, const char *);
  int (__cdecl *process_archive)(qstring *, linput_t *, qstring *, ushort *, const char *, const char *, qstring *);
};

/* 2032 */
struct ida_movable_type_load_info_t_
{
};

/* 2033 */
enum ofile_type_t : unsigned __int32
{
  OFILE_MAP = 0x0,
  OFILE_EXE = 0x1,
  OFILE_IDC = 0x2,
  OFILE_LST = 0x3,
  OFILE_ASM = 0x4,
  OFILE_DIF = 0x5,
};

/* 2034 */
struct impinfo_t
{
  const char *dllname;
  void (__cdecl *func)(uval_t, const char *, uval_t);
  uval_t node;
};

/* 2035 */
typedef int __cdecl _C30EB94D24F7ADA96604ED228E11FEED(linput_t *, impinfo_t *);

/* 2036 */
struct __cppobj idadll_t
{
  void *dllinfo[10];
  void *entry;
};

/* 2037 */
struct __cppobj idp_name_t
{
  qstring lname;
  qstring sname;
  bool hidden;
};

/* 2038 */
struct ida_movable_type_idp_name_t_
{
};

/* 2039 */
struct __cppobj qvector_idp_name_t_
{
  idp_name_t *array;
  size_t n;
  size_t alloc;
};

/* 2040 */
typedef idp_name_t *qvector_idp_name_t___iterator;

/* 2041 */
typedef idp_name_t *qvector_idp_name_t___const_iterator;

/* 2042 */
typedef qvector_idp_name_t_ idp_names_t;

/* 2043 */
struct __cppobj idp_desc_t
{
  qstring path;
  time_t mtime;
  qstring family;
  idp_names_t names;
  bool is_script;
  bool checked;
};

/* 2044 */
struct ida_movable_type_idp_desc_t_
{
};

/* 2045 */
struct __cppobj qvector_idp_desc_t_
{
  idp_desc_t *array;
  size_t n;
  size_t alloc;
};

/* 2046 */
typedef idp_desc_t *qvector_idp_desc_t___iterator;

/* 2047 */
typedef idp_desc_t *qvector_idp_desc_t___const_iterator;

/* 2048 */
typedef qvector_idp_desc_t_ idp_descs_t;

/* 2049 */
struct plugin_info_t
{
  plugin_info_t *next;
  char *path;
  char *org_name;
  char *name;
  ushort org_hotkey;
  ushort hotkey;
  size_t arg;
  plugin_t *entry;
  idadll_t dllmem;
  int flags;
  char *comment;
};

/* 2050 */
struct __cppobj dbg_info_t
{
  plugin_info_t *pi;
  debugger_t *dbg;
};

/* 2051 */
struct ida_movable_type_dbg_info_t_
{
};

/* 2053 */
typedef snapshot_t **qvector_snapshot_t__P___iterator;

/* 2054 */
typedef snapshot_t **qvector_snapshot_t__P___const_iterator;

/* 2056 */
struct ida_movable_type_snapshot_t_
{
};

/* 2057 */
enum path_type_t : unsigned __int32
{
  PATH_TYPE_CMD = 0x0,
  PATH_TYPE_IDB = 0x1,
  PATH_TYPE_ID0 = 0x2,
};

/* 2058 */
struct MD5Context
{
  uint32 buf[4];
  uint32 bits[2];
  unsigned __int8 in[64];
};

/* 2059 */
struct __cppobj segm_move_info_t
{
  ea_t from;
  ea_t to;
  size_t size;
};

/* 2060 */
struct ida_movable_type_segm_move_info_t_
{
};

/* 2062 */
typedef segm_move_info_t *qvector_segm_move_info_t___iterator;

/* 2063 */
typedef segm_move_info_t *qvector_segm_move_info_t___const_iterator;

/* 2067 */
struct __cppobj lochist_t
{
  void *ud;
  lochist_entry_t cur;
  netnode node;
  uint32 flags;
};

/* 2068 */
struct expanded_area_t;

/* 2069 */
struct ida_movable_type_lochist_entry_t_
{
};

/* 2070 */
struct __cppobj qvector_lochist_entry_t_
{
  lochist_entry_t *array;
  size_t n;
  size_t alloc;
};

/* 2071 */
typedef lochist_entry_t *qvector_lochist_entry_t___iterator;

/* 2072 */
typedef lochist_entry_t *qvector_lochist_entry_t___const_iterator;

/* 2073 */
typedef qvector_lochist_entry_t_ lochist_entry_vec_t;

/* 2074 */
struct ida_movable_type_lochist_t_
{
};

/* 2075 */
struct __cppobj bookmarks_t
{
};

/* 2076 */
enum _EXCEPTION_DISPOSITION : unsigned __int32
{
  ExceptionContinueExecution = 0x0,
  ExceptionContinueSearch = 0x1,
  ExceptionNestedException = 0x2,
  ExceptionCollidedUnwind = 0x3,
};

/* 2077 */
typedef _EXCEPTION_DISPOSITION EXCEPTION_DISPOSITION;

/* 2088 */
typedef unsigned __int32 DWORD;

/* 2161 */
typedef void *PVOID;

/* 2139 */
typedef unsigned __int64 ULONG_PTR;

/* 2078 */
struct _EXCEPTION_RECORD
{
  DWORD ExceptionCode;
  DWORD ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  PVOID ExceptionAddress;
  DWORD NumberParameters;
  ULONG_PTR ExceptionInformation[15];
};

/* 2157 */
typedef unsigned __int64 DWORD64;

/* 2091 */
typedef unsigned __int16 WORD;

/* 2090 */
typedef unsigned __int8 BYTE;

/* 2273 */
typedef unsigned __int64 ULONGLONG;

/* 2272 */
typedef __int64 LONGLONG;

/* 2327 */
struct __declspec(align(16)) _M128A
{
  ULONGLONG Low;
  LONGLONG High;
};

/* 2328 */
typedef _M128A M128A;

/* 2330 */
struct __declspec(align(16)) _XSAVE_FORMAT
{
  WORD ControlWord;
  WORD StatusWord;
  BYTE TagWord;
  BYTE Reserved1;
  WORD ErrorOpcode;
  DWORD ErrorOffset;
  WORD ErrorSelector;
  WORD Reserved2;
  DWORD DataOffset;
  WORD DataSelector;
  WORD Reserved3;
  DWORD MxCsr;
  DWORD MxCsr_Mask;
  M128A FloatRegisters[8];
  M128A XmmRegisters[16];
  BYTE Reserved4[96];
};

/* 2331 */
typedef _XSAVE_FORMAT XSAVE_FORMAT;

/* 2349 */
typedef XSAVE_FORMAT XMM_SAVE_AREA32;

/* 2351 */
struct _8B3A610AEB0C47756C1D570CE19BF51D
{
  M128A Header[2];
  M128A Legacy[8];
  M128A Xmm0;
  M128A Xmm1;
  M128A Xmm2;
  M128A Xmm3;
  M128A Xmm4;
  M128A Xmm5;
  M128A Xmm6;
  M128A Xmm7;
  M128A Xmm8;
  M128A Xmm9;
  M128A Xmm10;
  M128A Xmm11;
  M128A Xmm12;
  M128A Xmm13;
  M128A Xmm14;
  M128A Xmm15;
};

/* 2352 */
union _CONTEXT___8025DFDFE77BC942FFD833580971BF6A
{
  XMM_SAVE_AREA32 FltSave;
  struct
  {
    M128A Header[2];
    M128A Legacy[8];
    M128A Xmm0;
    M128A Xmm1;
    M128A Xmm2;
    M128A Xmm3;
    M128A Xmm4;
    M128A Xmm5;
    M128A Xmm6;
    M128A Xmm7;
    M128A Xmm8;
    M128A Xmm9;
    M128A Xmm10;
    M128A Xmm11;
    M128A Xmm12;
    M128A Xmm13;
    M128A Xmm14;
    M128A Xmm15;
  };
};

/* 2079 */
struct __declspec(align(16)) _CONTEXT
{
  DWORD64 P1Home;
  DWORD64 P2Home;
  DWORD64 P3Home;
  DWORD64 P4Home;
  DWORD64 P5Home;
  DWORD64 P6Home;
  DWORD ContextFlags;
  DWORD MxCsr;
  WORD SegCs;
  WORD SegDs;
  WORD SegEs;
  WORD SegFs;
  WORD SegGs;
  WORD SegSs;
  DWORD EFlags;
  DWORD64 Dr0;
  DWORD64 Dr1;
  DWORD64 Dr2;
  DWORD64 Dr3;
  DWORD64 Dr6;
  DWORD64 Dr7;
  DWORD64 Rax;
  DWORD64 Rcx;
  DWORD64 Rdx;
  DWORD64 Rbx;
  DWORD64 Rsp;
  DWORD64 Rbp;
  DWORD64 Rsi;
  DWORD64 Rdi;
  DWORD64 R8;
  DWORD64 R9;
  DWORD64 R10;
  DWORD64 R11;
  DWORD64 R12;
  DWORD64 R13;
  DWORD64 R14;
  DWORD64 R15;
  DWORD64 Rip;
  union
  {
    XMM_SAVE_AREA32 FltSave;
    struct
    {
      M128A Header[2];
      M128A Legacy[8];
      M128A Xmm0;
      M128A Xmm1;
      M128A Xmm2;
      M128A Xmm3;
      M128A Xmm4;
      M128A Xmm5;
      M128A Xmm6;
      M128A Xmm7;
      M128A Xmm8;
      M128A Xmm9;
      M128A Xmm10;
      M128A Xmm11;
      M128A Xmm12;
      M128A Xmm13;
      M128A Xmm14;
      M128A Xmm15;
    };
  };
  M128A VectorRegister[26];
  DWORD64 VectorControl;
  DWORD64 DebugControl;
  DWORD64 LastBranchToRip;
  DWORD64 LastBranchFromRip;
  DWORD64 LastExceptionToRip;
  DWORD64 LastExceptionFromRip;
};

/* 2357 */
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *PRUNTIME_FUNCTION;

/* 2320 */
typedef EXCEPTION_DISPOSITION (__cdecl *PEXCEPTION_ROUTINE)(_EXCEPTION_RECORD *, PVOID, _CONTEXT *, PVOID);

/* 2365 */
typedef _UNWIND_HISTORY_TABLE *PUNWIND_HISTORY_TABLE;

/* 2080 */
struct _DISPATCHER_CONTEXT
{
  DWORD64 ControlPc;
  DWORD64 ImageBase;
  PRUNTIME_FUNCTION FunctionEntry;
  DWORD64 EstablisherFrame;
  DWORD64 TargetIp;
  PCONTEXT ContextRecord;
  PEXCEPTION_ROUTINE LanguageHandler;
  PVOID HandlerData;
  PUNWIND_HISTORY_TABLE HistoryTable;
  DWORD ScopeIndex;
  DWORD Fill0;
};

/* 2081 */
typedef unsigned __int32 ULONG;

/* 2082 */
typedef ULONG *PULONG;

/* 2083 */
typedef unsigned __int16 USHORT;

/* 2084 */
typedef USHORT *PUSHORT;

/* 2085 */
typedef unsigned __int8 UCHAR;

/* 2086 */
typedef UCHAR *PUCHAR;

/* 2087 */
typedef char *PSZ;

/* 2089 */
typedef int BOOL;

/* 2092 */
typedef float FLOAT;

/* 2093 */
typedef FLOAT *PFLOAT;

/* 2094 */
typedef BOOL *PBOOL;

/* 2095 */
typedef BOOL *LPBOOL;

/* 2096 */
typedef BYTE *PBYTE;

/* 2097 */
typedef BYTE *LPBYTE;

/* 2098 */
typedef int *PINT;

/* 2099 */
typedef int *LPINT;

/* 2100 */
typedef WORD *PWORD;

/* 2101 */
typedef WORD *LPWORD;

/* 2102 */
typedef __int32 *LPLONG;

/* 2103 */
typedef DWORD *PDWORD;

/* 2104 */
typedef DWORD *LPDWORD;

/* 2105 */
typedef void *LPVOID;

/* 2106 */
typedef const void *LPCVOID;

/* 2107 */
typedef int INT;

/* 2108 */
typedef unsigned int UINT;

/* 2109 */
typedef unsigned int *PUINT;

/* 2110 */
typedef unsigned __int64 POINTER_64_INT;

/* 2111 */
typedef char INT8;

/* 2112 */
typedef char *PINT8;

/* 2113 */
typedef __int16 INT16;

/* 2114 */
typedef __int16 *PINT16;

/* 2115 */
typedef int INT32;

/* 2116 */
typedef int *PINT32;

/* 2117 */
typedef __int64 INT64;

/* 2118 */
typedef __int64 *PINT64;

/* 2119 */
typedef unsigned __int8 UINT8;

/* 2120 */
typedef unsigned __int8 *PUINT8;

/* 2121 */
typedef unsigned __int16 UINT16;

/* 2122 */
typedef unsigned __int16 *PUINT16;

/* 2123 */
typedef unsigned int UINT32;

/* 2124 */
typedef unsigned int *PUINT32;

/* 2125 */
typedef unsigned __int64 UINT64;

/* 2126 */
typedef unsigned __int64 *PUINT64;

/* 2127 */
typedef int LONG32;

/* 2128 */
typedef int *PLONG32;

/* 2129 */
typedef unsigned int ULONG32;

/* 2130 */
typedef unsigned int *PULONG32;

/* 2131 */
typedef unsigned int DWORD32;

/* 2132 */
typedef unsigned int *PDWORD32;

/* 2133 */
typedef __int64 INT_PTR;

/* 2134 */
typedef __int64 *PINT_PTR;

/* 2135 */
typedef unsigned __int64 UINT_PTR;

/* 2136 */
typedef unsigned __int64 *PUINT_PTR;

/* 2137 */
typedef __int64 LONG_PTR;

/* 2138 */
typedef __int64 *PLONG_PTR;

/* 2140 */
typedef unsigned __int64 *PULONG_PTR;

/* 2141 */
typedef __int64 SHANDLE_PTR;

/* 2142 */
typedef unsigned __int64 HANDLE_PTR;

/* 2143 */
typedef unsigned int UHALF_PTR;

/* 2144 */
typedef unsigned int *PUHALF_PTR;

/* 2145 */
typedef int HALF_PTR;

/* 2146 */
typedef int *PHALF_PTR;

/* 2147 */
typedef ULONG_PTR SIZE_T;

/* 2148 */
typedef ULONG_PTR *PSIZE_T;

/* 2149 */
typedef LONG_PTR SSIZE_T;

/* 2150 */
typedef LONG_PTR *PSSIZE_T;

/* 2151 */
typedef ULONG_PTR DWORD_PTR;

/* 2152 */
typedef ULONG_PTR *PDWORD_PTR;

/* 2153 */
typedef __int64 LONG64;

/* 2154 */
typedef __int64 *PLONG64;

/* 2155 */
typedef unsigned __int64 ULONG64;

/* 2156 */
typedef unsigned __int64 *PULONG64;

/* 2158 */
typedef unsigned __int64 *PDWORD64;

/* 2159 */
typedef ULONG_PTR KAFFINITY;

/* 2160 */
typedef KAFFINITY *PKAFFINITY;

/* 2162 */
typedef void *_1C570C147E8FD4E17AEC961E98942760;

/* 2163 */
typedef char CHAR;

/* 2164 */
typedef __int16 SHORT;

/* 2165 */
typedef __int32 LONG;

/* 2166 */
typedef __int16 WCHAR;

/* 2167 */
typedef WCHAR *PWCHAR;

/* 2168 */
typedef WCHAR *LPWCH;

/* 2169 */
typedef WCHAR *PWCH;

/* 2170 */
typedef const WCHAR *LPCWCH;

/* 2171 */
typedef const WCHAR *PCWCH;

/* 2172 */
typedef WCHAR *NWPSTR;

/* 2173 */
typedef WCHAR *LPWSTR;

/* 2174 */
typedef WCHAR *PWSTR;

/* 2175 */
typedef PWSTR *PZPWSTR;

/* 2176 */
typedef const PWSTR *PCZPWSTR;

/* 2177 */
typedef WCHAR *LPUWSTR;

/* 2178 */
typedef WCHAR *PUWSTR;

/* 2179 */
typedef const WCHAR *LPCWSTR;

/* 2180 */
typedef const WCHAR *PCWSTR;

/* 2181 */
typedef PCWSTR *PZPCWSTR;

/* 2182 */
typedef const PCWSTR *PCZPCWSTR;

/* 2183 */
typedef const WCHAR *LPCUWSTR;

/* 2184 */
typedef const WCHAR *PCUWSTR;

/* 2185 */
typedef WCHAR *PZZWSTR;

/* 2186 */
typedef const WCHAR *PCZZWSTR;

/* 2187 */
typedef WCHAR *PUZZWSTR;

/* 2188 */
typedef const WCHAR *PCUZZWSTR;

/* 2189 */
typedef WCHAR *PNZWCH;

/* 2190 */
typedef const WCHAR *PCNZWCH;

/* 2191 */
typedef WCHAR *PUNZWCH;

/* 2192 */
typedef const WCHAR *PCUNZWCH;

/* 2193 */
typedef const WCHAR *LPCWCHAR;

/* 2194 */
typedef const WCHAR *PCWCHAR;

/* 2195 */
typedef const WCHAR *LPCUWCHAR;

/* 2196 */
typedef const WCHAR *PCUWCHAR;

/* 2197 */
typedef unsigned __int32 UCSCHAR;

/* 2198 */
typedef UCSCHAR *PUCSCHAR;

/* 2199 */
typedef const UCSCHAR *PCUCSCHAR;

/* 2200 */
typedef UCSCHAR *PUCSSTR;

/* 2201 */
typedef UCSCHAR *PUUCSSTR;

/* 2202 */
typedef const UCSCHAR *PCUCSSTR;

/* 2203 */
typedef const UCSCHAR *PCUUCSSTR;

/* 2204 */
typedef UCSCHAR *PUUCSCHAR;

/* 2205 */
typedef const UCSCHAR *PCUUCSCHAR;

/* 2206 */
typedef CHAR *PCHAR;

/* 2207 */
typedef CHAR *LPCH;

/* 2208 */
typedef CHAR *PCH;

/* 2209 */
typedef const CHAR *LPCCH;

/* 2210 */
typedef const CHAR *PCCH;

/* 2211 */
typedef CHAR *NPSTR;

/* 2212 */
typedef CHAR *LPSTR;

/* 2213 */
typedef CHAR *PSTR;

/* 2214 */
typedef PSTR *PZPSTR;

/* 2215 */
typedef const PSTR *PCZPSTR;

/* 2216 */
typedef const CHAR *LPCSTR;

/* 2217 */
typedef const CHAR *PCSTR;

/* 2218 */
typedef PCSTR *PZPCSTR;

/* 2219 */
typedef const PCSTR *PCZPCSTR;

/* 2220 */
typedef CHAR *PZZSTR;

/* 2221 */
typedef const CHAR *PCZZSTR;

/* 2222 */
typedef CHAR *PNZCH;

/* 2223 */
typedef const CHAR *PCNZCH;

/* 2224 */
typedef char TCHAR;

/* 2225 */
typedef char *PTCHAR;

/* 2226 */
typedef unsigned __int8 TBYTE;

/* 2227 */
typedef unsigned __int8 *PTBYTE;

/* 2228 */
typedef LPCH LPTCH;

/* 2229 */
typedef LPCH PTCH;

/* 2230 */
typedef LPCCH LPCTCH;

/* 2231 */
typedef LPCCH PCTCH;

/* 2232 */
typedef LPSTR PTSTR;

/* 2233 */
typedef LPSTR LPTSTR;

/* 2234 */
typedef LPSTR PUTSTR;

/* 2235 */
typedef LPSTR LPUTSTR;

/* 2236 */
typedef LPCSTR PCTSTR;

/* 2237 */
typedef LPCSTR LPCTSTR;

/* 2238 */
typedef LPCSTR PCUTSTR;

/* 2239 */
typedef LPCSTR LPCUTSTR;

/* 2240 */
typedef PZZSTR PZZTSTR;

/* 2241 */
typedef PZZSTR PUZZTSTR;

/* 2242 */
typedef PCZZSTR PCZZTSTR;

/* 2243 */
typedef PCZZSTR PCUZZTSTR;

/* 2244 */
typedef PZPSTR PZPTSTR;

/* 2245 */
typedef PNZCH PNZTCH;

/* 2246 */
typedef PNZCH PUNZTCH;

/* 2247 */
typedef PCNZCH PCNZTCH;

/* 2248 */
typedef PCNZCH PCUNZTCH;

/* 2249 */
typedef SHORT *PSHORT;

/* 2250 */
typedef LONG *PLONG;

/* 2251 */
struct _PROCESSOR_NUMBER
{
  WORD Group;
  BYTE Number;
  BYTE Reserved;
};

/* 2252 */
typedef _PROCESSOR_NUMBER PROCESSOR_NUMBER;

/* 2253 */
typedef _PROCESSOR_NUMBER *PPROCESSOR_NUMBER;

/* 2254 */
struct _GROUP_AFFINITY
{
  KAFFINITY Mask;
  WORD Group;
  WORD Reserved[3];
};

/* 2255 */
typedef _GROUP_AFFINITY GROUP_AFFINITY;

/* 2256 */
typedef _GROUP_AFFINITY *PGROUP_AFFINITY;

/* 2257 */
typedef void *HANDLE;

/* 2258 */
typedef HANDLE *PHANDLE;

/* 2259 */
typedef BYTE FCHAR;

/* 2260 */
typedef WORD FSHORT;

/* 2261 */
typedef DWORD FLONG;

/* 2262 */
typedef __int32 HRESULT;

/* 2263 */
typedef char CCHAR;

/* 2264 */
typedef DWORD LCID;

/* 2265 */
typedef PDWORD PLCID;

/* 2266 */
typedef WORD LANGID;

/* 2267 */
enum COMPARTMENT_ID : unsigned __int32
{
  UNSPECIFIED_COMPARTMENT_ID = 0x0,
  DEFAULT_COMPARTMENT_ID = 0x1,
};

/* 2268 */
typedef COMPARTMENT_ID *PCOMPARTMENT_ID;

/* 2269 */
struct _FLOAT128
{
  __int64 LowPart;
  __int64 HighPart;
};

/* 2270 */
typedef _FLOAT128 FLOAT128;

/* 2271 */
typedef FLOAT128 *PFLOAT128;

/* 2274 */
typedef LONGLONG *PLONGLONG;

/* 2275 */
typedef ULONGLONG *PULONGLONG;

/* 2276 */
typedef LONGLONG USN;

/* 2278 */
struct _LARGE_INTEGER___0B914BD3CE83B8CFCF233613356AE5AB
{
  DWORD LowPart;
  LONG HighPart;
};

/* 2277 */
union _LARGE_INTEGER
{
  struct
  {
    DWORD LowPart;
    LONG HighPart;
  };
  _LARGE_INTEGER___0B914BD3CE83B8CFCF233613356AE5AB u;
  LONGLONG QuadPart;
};

/* 2279 */
typedef _LARGE_INTEGER LARGE_INTEGER;

/* 2280 */
typedef LARGE_INTEGER *PLARGE_INTEGER;

/* 2282 */
struct _ULARGE_INTEGER___295194D6FDE9D459FF51E3106CEEE6CC
{
  DWORD LowPart;
  DWORD HighPart;
};

/* 2281 */
union _ULARGE_INTEGER
{
  struct
  {
    DWORD LowPart;
    DWORD HighPart;
  };
  _ULARGE_INTEGER___295194D6FDE9D459FF51E3106CEEE6CC u;
  ULONGLONG QuadPart;
};

/* 2283 */
typedef _ULARGE_INTEGER ULARGE_INTEGER;

/* 2284 */
typedef ULARGE_INTEGER *PULARGE_INTEGER;

/* 2285 */
typedef LONG_PTR RTL_REFERENCE_COUNT;

/* 2286 */
typedef LONG_PTR *PRTL_REFERENCE_COUNT;

/* 2287 */
typedef LONG RTL_REFERENCE_COUNT32;

/* 2288 */
typedef LONG *PRTL_REFERENCE_COUNT32;

/* 2289 */
struct _LUID
{
  DWORD LowPart;
  LONG HighPart;
};

/* 2290 */
typedef _LUID LUID;

/* 2291 */
typedef _LUID *PLUID;

/* 2292 */
typedef ULONGLONG DWORDLONG;

/* 2293 */
typedef DWORDLONG *PDWORDLONG;

/* 2294 */
typedef BYTE BOOLEAN;

/* 2295 */
typedef BOOLEAN *PBOOLEAN;

/* 2296 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 2297 */
typedef _LIST_ENTRY LIST_ENTRY;

/* 2298 */
typedef _LIST_ENTRY *PLIST_ENTRY;

/* 2299 */
typedef _LIST_ENTRY *PRLIST_ENTRY;

/* 2300 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 2301 */
typedef _SINGLE_LIST_ENTRY SINGLE_LIST_ENTRY;

/* 2302 */
typedef _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;

/* 2303 */
struct LIST_ENTRY32
{
  DWORD Flink;
  DWORD Blink;
};

/* 2304 */
typedef LIST_ENTRY32 *PLIST_ENTRY32;

/* 2305 */
struct LIST_ENTRY64
{
  ULONGLONG Flink;
  ULONGLONG Blink;
};

/* 2306 */
typedef LIST_ENTRY64 *PLIST_ENTRY64;

/* 2307 */
struct _GUID
{
  unsigned __int32 Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 2308 */
typedef _GUID GUID;

/* 2309 */
typedef GUID *LPGUID;

/* 2310 */
typedef const GUID *LPCGUID;

/* 2311 */
typedef GUID IID;

/* 2312 */
typedef IID *LPIID;

/* 2313 */
typedef GUID CLSID;

/* 2314 */
typedef CLSID *LPCLSID;

/* 2315 */
typedef GUID FMTID;

/* 2316 */
typedef FMTID *LPFMTID;

/* 2317 */
struct _OBJECTID
{
  GUID Lineage;
  DWORD Uniquifier;
};

/* 2318 */
typedef _OBJECTID OBJECTID;

/* 2319 */
typedef EXCEPTION_DISPOSITION __cdecl _EE06435D791A7D0585A3F5F131982D64(_EXCEPTION_RECORD *, PVOID, _CONTEXT *, PVOID);

/* 2321 */
struct _ENUM_FLAG_INTEGER_FOR_SIZE_1_
{
};

/* 2322 */
struct _ENUM_FLAG_INTEGER_FOR_SIZE_2_
{
};

/* 2323 */
struct _ENUM_FLAG_INTEGER_FOR_SIZE_4_
{
};

/* 2324 */
struct _ENUM_FLAG_INTEGER_FOR_SIZE_8_
{
};

/* 2325 */
typedef ULONG_PTR KSPIN_LOCK;

/* 2326 */
typedef KSPIN_LOCK *PKSPIN_LOCK;

/* 2329 */
typedef _M128A *PM128A;

/* 2332 */
typedef _XSAVE_FORMAT *PXSAVE_FORMAT;

/* 2333 */
struct _XSAVE_CET_U_FORMAT
{
  DWORD64 Ia32CetUMsr;
  DWORD64 Ia32Pl3SspMsr;
};

/* 2334 */
typedef _XSAVE_CET_U_FORMAT XSAVE_CET_U_FORMAT;

/* 2335 */
typedef _XSAVE_CET_U_FORMAT *PXSAVE_CET_U_FORMAT;

/* 2336 */
struct __declspec(align(8)) _XSAVE_AREA_HEADER
{
  DWORD64 Mask;
  DWORD64 CompactionMask;
  DWORD64 Reserved2[6];
};

/* 2337 */
typedef _XSAVE_AREA_HEADER XSAVE_AREA_HEADER;

/* 2338 */
typedef _XSAVE_AREA_HEADER *PXSAVE_AREA_HEADER;

/* 2339 */
struct __declspec(align(16)) _XSAVE_AREA
{
  XSAVE_FORMAT LegacyState;
  XSAVE_AREA_HEADER Header;
};

/* 2340 */
typedef _XSAVE_AREA XSAVE_AREA;

/* 2341 */
typedef _XSAVE_AREA *PXSAVE_AREA;

/* 2342 */
struct _XSTATE_CONTEXT
{
  DWORD64 Mask;
  DWORD Length;
  DWORD Reserved1;
  PXSAVE_AREA Area;
  PVOID Buffer;
};

/* 2343 */
typedef _XSTATE_CONTEXT XSTATE_CONTEXT;

/* 2344 */
typedef _XSTATE_CONTEXT *PXSTATE_CONTEXT;

/* 2346 */
struct _SCOPE_TABLE_AMD64___AEBEF9CF03D90DA9BD5BAD919F892283
{
  DWORD BeginAddress;
  DWORD EndAddress;
  DWORD HandlerAddress;
  DWORD JumpTarget;
};

/* 2345 */
struct _SCOPE_TABLE_AMD64
{
  DWORD Count;
  _SCOPE_TABLE_AMD64___AEBEF9CF03D90DA9BD5BAD919F892283 ScopeRecord[1];
};

/* 2347 */
typedef _SCOPE_TABLE_AMD64 SCOPE_TABLE_AMD64;

/* 2348 */
typedef _SCOPE_TABLE_AMD64 *PSCOPE_TABLE_AMD64;

/* 2350 */
typedef XSAVE_FORMAT *PXMM_SAVE_AREA32;

/* 2353 */
typedef _CONTEXT CONTEXT;

/* 3434 */
#pragma pack(push, 4)
union _IMAGE_RUNTIME_FUNCTION_ENTRY___8E0A60A2DAA7D27352B4BE14956F6EAE
{
  DWORD UnwindInfoAddress;
  DWORD UnwindData;
};
#pragma pack(pop)

/* 2355 */
#pragma pack(push, 4)
struct _IMAGE_RUNTIME_FUNCTION_ENTRY
{
  DWORD BeginAddress;
  DWORD EndAddress;
  #pragma pack(push, 4)
  union
  {
    DWORD UnwindInfoAddress;
    DWORD UnwindData;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 2356 */
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY RUNTIME_FUNCTION;

/* 2358 */
typedef SCOPE_TABLE_AMD64 SCOPE_TABLE;

/* 2359 */
typedef SCOPE_TABLE_AMD64 *PSCOPE_TABLE;

/* 2360 */
struct _UNWIND_HISTORY_TABLE_ENTRY
{
  DWORD64 ImageBase;
  PRUNTIME_FUNCTION FunctionEntry;
};

/* 2361 */
typedef _UNWIND_HISTORY_TABLE_ENTRY UNWIND_HISTORY_TABLE_ENTRY;

/* 2362 */
typedef _UNWIND_HISTORY_TABLE_ENTRY *PUNWIND_HISTORY_TABLE_ENTRY;

/* 2363 */
struct _UNWIND_HISTORY_TABLE
{
  DWORD Count;
  BYTE LocalHint;
  BYTE GlobalHint;
  BYTE Search;
  BYTE Once;
  DWORD64 LowAddress;
  DWORD64 HighAddress;
  UNWIND_HISTORY_TABLE_ENTRY Entry[12];
};

/* 2364 */
typedef _UNWIND_HISTORY_TABLE UNWIND_HISTORY_TABLE;

/* 2366 */
typedef PRUNTIME_FUNCTION __cdecl GET_RUNTIME_FUNCTION_CALLBACK(DWORD64, PVOID);

/* 2367 */
typedef GET_RUNTIME_FUNCTION_CALLBACK *PGET_RUNTIME_FUNCTION_CALLBACK;

/* 2368 */
typedef DWORD __cdecl OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK(HANDLE, PVOID, PDWORD, PRUNTIME_FUNCTION *);

/* 2369 */
typedef OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK *POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK;

/* 2370 */
typedef _DISPATCHER_CONTEXT DISPATCHER_CONTEXT;

/* 2371 */
typedef _DISPATCHER_CONTEXT *PDISPATCHER_CONTEXT;

/* 2372 */
typedef LONG (__cdecl *PEXCEPTION_FILTER)(_EXCEPTION_POINTERS *, PVOID);

/* 2373 */
typedef void (__cdecl *PTERMINATION_HANDLER)(BOOLEAN, PVOID);

/* 2375 */
struct _5813CBACEBCD7EB2D1A50052721CB338
{
  PM128A Xmm0;
  PM128A Xmm1;
  PM128A Xmm2;
  PM128A Xmm3;
  PM128A Xmm4;
  PM128A Xmm5;
  PM128A Xmm6;
  PM128A Xmm7;
  PM128A Xmm8;
  PM128A Xmm9;
  PM128A Xmm10;
  PM128A Xmm11;
  PM128A Xmm12;
  PM128A Xmm13;
  PM128A Xmm14;
  PM128A Xmm15;
};

/* 2376 */
union _KNONVOLATILE_CONTEXT_POINTERS___4C940C1D04ED6E0FA4259925A0783C75
{
  PM128A FloatingContext[16];
  struct
  {
    PM128A Xmm0;
    PM128A Xmm1;
    PM128A Xmm2;
    PM128A Xmm3;
    PM128A Xmm4;
    PM128A Xmm5;
    PM128A Xmm6;
    PM128A Xmm7;
    PM128A Xmm8;
    PM128A Xmm9;
    PM128A Xmm10;
    PM128A Xmm11;
    PM128A Xmm12;
    PM128A Xmm13;
    PM128A Xmm14;
    PM128A Xmm15;
  };
};

/* 2377 */
struct _FAEAD0B6DE8C3E663F9C84A0EA317232
{
  PDWORD64 Rax;
  PDWORD64 Rcx;
  PDWORD64 Rdx;
  PDWORD64 Rbx;
  PDWORD64 Rsp;
  PDWORD64 Rbp;
  PDWORD64 Rsi;
  PDWORD64 Rdi;
  PDWORD64 R8;
  PDWORD64 R9;
  PDWORD64 R10;
  PDWORD64 R11;
  PDWORD64 R12;
  PDWORD64 R13;
  PDWORD64 R14;
  PDWORD64 R15;
};

/* 2378 */
union _KNONVOLATILE_CONTEXT_POINTERS___FA2959FC6C6AC532662CCE355387EAC6
{
  PDWORD64 IntegerContext[16];
  struct
  {
    PDWORD64 Rax;
    PDWORD64 Rcx;
    PDWORD64 Rdx;
    PDWORD64 Rbx;
    PDWORD64 Rsp;
    PDWORD64 Rbp;
    PDWORD64 Rsi;
    PDWORD64 Rdi;
    PDWORD64 R8;
    PDWORD64 R9;
    PDWORD64 R10;
    PDWORD64 R11;
    PDWORD64 R12;
    PDWORD64 R13;
    PDWORD64 R14;
    PDWORD64 R15;
  };
};

/* 2374 */
struct _KNONVOLATILE_CONTEXT_POINTERS
{
  union
  {
    PM128A FloatingContext[16];
    struct
    {
      PM128A Xmm0;
      PM128A Xmm1;
      PM128A Xmm2;
      PM128A Xmm3;
      PM128A Xmm4;
      PM128A Xmm5;
      PM128A Xmm6;
      PM128A Xmm7;
      PM128A Xmm8;
      PM128A Xmm9;
      PM128A Xmm10;
      PM128A Xmm11;
      PM128A Xmm12;
      PM128A Xmm13;
      PM128A Xmm14;
      PM128A Xmm15;
    };
  };
  union
  {
    PDWORD64 IntegerContext[16];
    struct
    {
      PDWORD64 Rax;
      PDWORD64 Rcx;
      PDWORD64 Rdx;
      PDWORD64 Rbx;
      PDWORD64 Rsp;
      PDWORD64 Rbp;
      PDWORD64 Rsi;
      PDWORD64 Rdi;
      PDWORD64 R8;
      PDWORD64 R9;
      PDWORD64 R10;
      PDWORD64 R11;
      PDWORD64 R12;
      PDWORD64 R13;
      PDWORD64 R14;
      PDWORD64 R15;
    };
  };
};

/* 2379 */
typedef _KNONVOLATILE_CONTEXT_POINTERS KNONVOLATILE_CONTEXT_POINTERS;

/* 2380 */
typedef _KNONVOLATILE_CONTEXT_POINTERS *PKNONVOLATILE_CONTEXT_POINTERS;

/* 2382 */
struct _SCOPE_TABLE_ARM___AEBEF9CF03D90DA9BD5BAD919F892283
{
  DWORD BeginAddress;
  DWORD EndAddress;
  DWORD HandlerAddress;
  DWORD JumpTarget;
};

/* 2381 */
struct _SCOPE_TABLE_ARM
{
  DWORD Count;
  _SCOPE_TABLE_ARM___AEBEF9CF03D90DA9BD5BAD919F892283 ScopeRecord[1];
};

/* 2383 */
typedef _SCOPE_TABLE_ARM SCOPE_TABLE_ARM;

/* 2384 */
typedef _SCOPE_TABLE_ARM *PSCOPE_TABLE_ARM;

/* 2386 */
struct _SCOPE_TABLE_ARM64___AEBEF9CF03D90DA9BD5BAD919F892283
{
  DWORD BeginAddress;
  DWORD EndAddress;
  DWORD HandlerAddress;
  DWORD JumpTarget;
};

/* 2385 */
struct _SCOPE_TABLE_ARM64
{
  DWORD Count;
  _SCOPE_TABLE_ARM64___AEBEF9CF03D90DA9BD5BAD919F892283 ScopeRecord[1];
};

/* 2387 */
typedef _SCOPE_TABLE_ARM64 SCOPE_TABLE_ARM64;

/* 2388 */
typedef _SCOPE_TABLE_ARM64 *PSCOPE_TABLE_ARM64;

/* 2389 */
struct _KNONVOLATILE_CONTEXT_POINTERS_ARM64
{
  PDWORD64 X19;
  PDWORD64 X20;
  PDWORD64 X21;
  PDWORD64 X22;
  PDWORD64 X23;
  PDWORD64 X24;
  PDWORD64 X25;
  PDWORD64 X26;
  PDWORD64 X27;
  PDWORD64 X28;
  PDWORD64 Fp;
  PDWORD64 Lr;
  PDWORD64 D8;
  PDWORD64 D9;
  PDWORD64 D10;
  PDWORD64 D11;
  PDWORD64 D12;
  PDWORD64 D13;
  PDWORD64 D14;
  PDWORD64 D15;
};

/* 2390 */
typedef _KNONVOLATILE_CONTEXT_POINTERS_ARM64 KNONVOLATILE_CONTEXT_POINTERS_ARM64;

/* 2391 */
typedef _KNONVOLATILE_CONTEXT_POINTERS_ARM64 *PKNONVOLATILE_CONTEXT_POINTERS_ARM64;

/* 2393 */
struct _AE2973057922CF8FEA1D3B09D0719A51
{
  BYTE BaseMid;
  BYTE Flags1;
  BYTE Flags2;
  BYTE BaseHi;
};

/* 2394 */
struct _A3BAC9569453E46653D4C53B8339026E
{
  unsigned __int32 BaseMid : 8;
  unsigned __int32 Type : 5;
  unsigned __int32 Dpl : 2;
  unsigned __int32 Pres : 1;
  unsigned __int32 LimitHi : 4;
  unsigned __int32 Sys : 1;
  unsigned __int32 Reserved_0 : 1;
  unsigned __int32 Default_Big : 1;
  unsigned __int32 Granularity : 1;
  unsigned __int32 BaseHi : 8;
};

/* 2395 */
union _LDT_ENTRY___4A55B64DEEFB63B09A05523A0EA37EAD
{
  _AE2973057922CF8FEA1D3B09D0719A51 Bytes;
  _A3BAC9569453E46653D4C53B8339026E Bits;
};

/* 2392 */
struct _LDT_ENTRY
{
  WORD LimitLow;
  WORD BaseLow;
  _LDT_ENTRY___4A55B64DEEFB63B09A05523A0EA37EAD HighWord;
};

/* 2396 */
typedef _LDT_ENTRY LDT_ENTRY;

/* 2397 */
typedef _LDT_ENTRY *PLDT_ENTRY;

/* 2398 */
struct _WOW64_FLOATING_SAVE_AREA
{
  DWORD ControlWord;
  DWORD StatusWord;
  DWORD TagWord;
  DWORD ErrorOffset;
  DWORD ErrorSelector;
  DWORD DataOffset;
  DWORD DataSelector;
  BYTE RegisterArea[80];
  DWORD Cr0NpxState;
};

/* 2399 */
typedef _WOW64_FLOATING_SAVE_AREA WOW64_FLOATING_SAVE_AREA;

/* 2400 */
typedef WOW64_FLOATING_SAVE_AREA *PWOW64_FLOATING_SAVE_AREA;

/* 2401 */
#pragma pack(push, 4)
struct _WOW64_CONTEXT
{
  DWORD ContextFlags;
  DWORD Dr0;
  DWORD Dr1;
  DWORD Dr2;
  DWORD Dr3;
  DWORD Dr6;
  DWORD Dr7;
  WOW64_FLOATING_SAVE_AREA FloatSave;
  DWORD SegGs;
  DWORD SegFs;
  DWORD SegEs;
  DWORD SegDs;
  DWORD Edi;
  DWORD Esi;
  DWORD Ebx;
  DWORD Edx;
  DWORD Ecx;
  DWORD Eax;
  DWORD Ebp;
  DWORD Eip;
  DWORD SegCs;
  DWORD EFlags;
  DWORD Esp;
  DWORD SegSs;
  BYTE ExtendedRegisters[512];
};
#pragma pack(pop)

/* 2402 */
typedef _WOW64_CONTEXT WOW64_CONTEXT;

/* 2403 */
typedef WOW64_CONTEXT *PWOW64_CONTEXT;

/* 2405 */
union _WOW64_LDT_ENTRY___4A55B64DEEFB63B09A05523A0EA37EAD
{
  _AE2973057922CF8FEA1D3B09D0719A51 Bytes;
  _A3BAC9569453E46653D4C53B8339026E Bits;
};

/* 2404 */
struct _WOW64_LDT_ENTRY
{
  WORD LimitLow;
  WORD BaseLow;
  _WOW64_LDT_ENTRY___4A55B64DEEFB63B09A05523A0EA37EAD HighWord;
};

/* 2406 */
typedef _WOW64_LDT_ENTRY WOW64_LDT_ENTRY;

/* 2407 */
typedef _WOW64_LDT_ENTRY *PWOW64_LDT_ENTRY;

/* 2408 */
struct _WOW64_DESCRIPTOR_TABLE_ENTRY
{
  DWORD Selector;
  WOW64_LDT_ENTRY Descriptor;
};

/* 2409 */
typedef _WOW64_DESCRIPTOR_TABLE_ENTRY WOW64_DESCRIPTOR_TABLE_ENTRY;

/* 2410 */
typedef _WOW64_DESCRIPTOR_TABLE_ENTRY *PWOW64_DESCRIPTOR_TABLE_ENTRY;

/* 2413 */
struct _EXCEPTION_RECORD32
{
  DWORD ExceptionCode;
  DWORD ExceptionFlags;
  DWORD ExceptionRecord;
  DWORD ExceptionAddress;
  DWORD NumberParameters;
  DWORD ExceptionInformation[15];
};

/* 2414 */
typedef _EXCEPTION_RECORD32 EXCEPTION_RECORD32;

/* 2415 */
typedef _EXCEPTION_RECORD32 *PEXCEPTION_RECORD32;

/* 2416 */
struct _EXCEPTION_RECORD64
{
  DWORD ExceptionCode;
  DWORD ExceptionFlags;
  DWORD64 ExceptionRecord;
  DWORD64 ExceptionAddress;
  DWORD NumberParameters;
  DWORD __unusedAlignment;
  DWORD64 ExceptionInformation[15];
};

/* 2417 */
typedef _EXCEPTION_RECORD64 EXCEPTION_RECORD64;

/* 2418 */
typedef _EXCEPTION_RECORD64 *PEXCEPTION_RECORD64;

/* 2419 */
typedef _EXCEPTION_POINTERS EXCEPTION_POINTERS;

/* 2420 */
typedef _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;

/* 2421 */
typedef PVOID PACCESS_TOKEN;

/* 2422 */
typedef PVOID PSECURITY_DESCRIPTOR;

/* 2423 */
typedef PVOID PSID;

/* 2424 */
typedef PVOID PCLAIMS_BLOB;

/* 2425 */
typedef DWORD ACCESS_MASK;

/* 2426 */
typedef ACCESS_MASK *PACCESS_MASK;

/* 2427 */
struct _GENERIC_MAPPING
{
  ACCESS_MASK GenericRead;
  ACCESS_MASK GenericWrite;
  ACCESS_MASK GenericExecute;
  ACCESS_MASK GenericAll;
};

/* 2428 */
typedef _GENERIC_MAPPING GENERIC_MAPPING;

/* 2429 */
typedef GENERIC_MAPPING *PGENERIC_MAPPING;

/* 2430 */
#pragma pack(push, 4)
struct _LUID_AND_ATTRIBUTES
{
  LUID Luid;
  DWORD Attributes;
};
#pragma pack(pop)

/* 2431 */
typedef _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES;

/* 2432 */
typedef _LUID_AND_ATTRIBUTES *PLUID_AND_ATTRIBUTES;

/* 2433 */
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];

/* 2434 */
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;

/* 2435 */
struct _SID_IDENTIFIER_AUTHORITY
{
  BYTE Value[6];
};

/* 2436 */
typedef _SID_IDENTIFIER_AUTHORITY SID_IDENTIFIER_AUTHORITY;

/* 2437 */
typedef _SID_IDENTIFIER_AUTHORITY *PSID_IDENTIFIER_AUTHORITY;

/* 2438 */
struct _SID
{
  BYTE Revision;
  BYTE SubAuthorityCount;
  SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  DWORD SubAuthority[1];
};

/* 2439 */
typedef _SID SID;

/* 2440 */
typedef _SID *PISID;

/* 2441 */
union _SE_SID
{
  SID Sid;
  BYTE Buffer[68];
};

/* 2442 */
typedef _SE_SID SE_SID;

/* 2443 */
typedef _SE_SID *PSE_SID;

/* 2444 */
enum _SID_NAME_USE : unsigned __int32
{
  SidTypeUser = 0x1,
  SidTypeGroup = 0x2,
  SidTypeDomain = 0x3,
  SidTypeAlias = 0x4,
  SidTypeWellKnownGroup = 0x5,
  SidTypeDeletedAccount = 0x6,
  SidTypeInvalid = 0x7,
  SidTypeUnknown = 0x8,
  SidTypeComputer = 0x9,
  SidTypeLabel = 0xA,
  SidTypeLogonSession = 0xB,
};

/* 2445 */
typedef _SID_NAME_USE SID_NAME_USE;

/* 2446 */
typedef _SID_NAME_USE *PSID_NAME_USE;

/* 2447 */
struct _SID_AND_ATTRIBUTES
{
  PSID Sid;
  DWORD Attributes;
};

/* 2448 */
typedef _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES;

/* 2449 */
typedef _SID_AND_ATTRIBUTES *PSID_AND_ATTRIBUTES;

/* 2450 */
typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];

/* 2451 */
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;

/* 2452 */
typedef ULONG_PTR SID_HASH_ENTRY;

/* 2453 */
typedef ULONG_PTR *PSID_HASH_ENTRY;

/* 2454 */
struct _SID_AND_ATTRIBUTES_HASH
{
  DWORD SidCount;
  PSID_AND_ATTRIBUTES SidAttr;
  SID_HASH_ENTRY Hash[32];
};

/* 2455 */
typedef _SID_AND_ATTRIBUTES_HASH SID_AND_ATTRIBUTES_HASH;

/* 2456 */
typedef _SID_AND_ATTRIBUTES_HASH *PSID_AND_ATTRIBUTES_HASH;

/* 2457 */
enum WELL_KNOWN_SID_TYPE : unsigned __int32
{
  WinNullSid = 0x0,
  WinWorldSid = 0x1,
  WinLocalSid = 0x2,
  WinCreatorOwnerSid = 0x3,
  WinCreatorGroupSid = 0x4,
  WinCreatorOwnerServerSid = 0x5,
  WinCreatorGroupServerSid = 0x6,
  WinNtAuthoritySid = 0x7,
  WinDialupSid = 0x8,
  WinNetworkSid = 0x9,
  WinBatchSid = 0xA,
  WinInteractiveSid = 0xB,
  WinServiceSid = 0xC,
  WinAnonymousSid = 0xD,
  WinProxySid = 0xE,
  WinEnterpriseControllersSid = 0xF,
  WinSelfSid = 0x10,
  WinAuthenticatedUserSid = 0x11,
  WinRestrictedCodeSid = 0x12,
  WinTerminalServerSid = 0x13,
  WinRemoteLogonIdSid = 0x14,
  WinLogonIdsSid = 0x15,
  WinLocalSystemSid = 0x16,
  WinLocalServiceSid = 0x17,
  WinNetworkServiceSid = 0x18,
  WinBuiltinDomainSid = 0x19,
  WinBuiltinAdministratorsSid = 0x1A,
  WinBuiltinUsersSid = 0x1B,
  WinBuiltinGuestsSid = 0x1C,
  WinBuiltinPowerUsersSid = 0x1D,
  WinBuiltinAccountOperatorsSid = 0x1E,
  WinBuiltinSystemOperatorsSid = 0x1F,
  WinBuiltinPrintOperatorsSid = 0x20,
  WinBuiltinBackupOperatorsSid = 0x21,
  WinBuiltinReplicatorSid = 0x22,
  WinBuiltinPreWindows2000CompatibleAccessSid = 0x23,
  WinBuiltinRemoteDesktopUsersSid = 0x24,
  WinBuiltinNetworkConfigurationOperatorsSid = 0x25,
  WinAccountAdministratorSid = 0x26,
  WinAccountGuestSid = 0x27,
  WinAccountKrbtgtSid = 0x28,
  WinAccountDomainAdminsSid = 0x29,
  WinAccountDomainUsersSid = 0x2A,
  WinAccountDomainGuestsSid = 0x2B,
  WinAccountComputersSid = 0x2C,
  WinAccountControllersSid = 0x2D,
  WinAccountCertAdminsSid = 0x2E,
  WinAccountSchemaAdminsSid = 0x2F,
  WinAccountEnterpriseAdminsSid = 0x30,
  WinAccountPolicyAdminsSid = 0x31,
  WinAccountRasAndIasServersSid = 0x32,
  WinNTLMAuthenticationSid = 0x33,
  WinDigestAuthenticationSid = 0x34,
  WinSChannelAuthenticationSid = 0x35,
  WinThisOrganizationSid = 0x36,
  WinOtherOrganizationSid = 0x37,
  WinBuiltinIncomingForestTrustBuildersSid = 0x38,
  WinBuiltinPerfMonitoringUsersSid = 0x39,
  WinBuiltinPerfLoggingUsersSid = 0x3A,
  WinBuiltinAuthorizationAccessSid = 0x3B,
  WinBuiltinTerminalServerLicenseServersSid = 0x3C,
  WinBuiltinDCOMUsersSid = 0x3D,
  WinBuiltinIUsersSid = 0x3E,
  WinIUserSid = 0x3F,
  WinBuiltinCryptoOperatorsSid = 0x40,
  WinUntrustedLabelSid = 0x41,
  WinLowLabelSid = 0x42,
  WinMediumLabelSid = 0x43,
  WinHighLabelSid = 0x44,
  WinSystemLabelSid = 0x45,
  WinWriteRestrictedCodeSid = 0x46,
  WinCreatorOwnerRightsSid = 0x47,
  WinCacheablePrincipalsGroupSid = 0x48,
  WinNonCacheablePrincipalsGroupSid = 0x49,
  WinEnterpriseReadonlyControllersSid = 0x4A,
  WinAccountReadonlyControllersSid = 0x4B,
  WinBuiltinEventLogReadersGroup = 0x4C,
  WinNewEnterpriseReadonlyControllersSid = 0x4D,
  WinBuiltinCertSvcDComAccessGroup = 0x4E,
  WinMediumPlusLabelSid = 0x4F,
  WinLocalLogonSid = 0x50,
  WinConsoleLogonSid = 0x51,
  WinThisOrganizationCertificateSid = 0x52,
  WinApplicationPackageAuthoritySid = 0x53,
  WinBuiltinAnyPackageSid = 0x54,
  WinCapabilityInternetClientSid = 0x55,
  WinCapabilityInternetClientServerSid = 0x56,
  WinCapabilityPrivateNetworkClientServerSid = 0x57,
  WinCapabilityPicturesLibrarySid = 0x58,
  WinCapabilityVideosLibrarySid = 0x59,
  WinCapabilityMusicLibrarySid = 0x5A,
  WinCapabilityDocumentsLibrarySid = 0x5B,
  WinCapabilitySharedUserCertificatesSid = 0x5C,
  WinCapabilityEnterpriseAuthenticationSid = 0x5D,
  WinCapabilityRemovableStorageSid = 0x5E,
  WinBuiltinRDSRemoteAccessServersSid = 0x5F,
  WinBuiltinRDSEndpointServersSid = 0x60,
  WinBuiltinRDSManagementServersSid = 0x61,
  WinUserModeDriversSid = 0x62,
  WinBuiltinHyperVAdminsSid = 0x63,
  WinAccountCloneableControllersSid = 0x64,
  WinBuiltinAccessControlAssistanceOperatorsSid = 0x65,
  WinBuiltinRemoteManagementUsersSid = 0x66,
  WinAuthenticationAuthorityAssertedSid = 0x67,
  WinAuthenticationServiceAssertedSid = 0x68,
  WinLocalAccountSid = 0x69,
  WinLocalAccountAndAdministratorSid = 0x6A,
  WinAccountProtectedUsersSid = 0x6B,
  WinCapabilityAppointmentsSid = 0x6C,
  WinCapabilityContactsSid = 0x6D,
  WinAccountDefaultSystemManagedSid = 0x6E,
  WinBuiltinDefaultSystemManagedGroupSid = 0x6F,
  WinBuiltinStorageReplicaAdminsSid = 0x70,
  WinAccountKeyAdminsSid = 0x71,
  WinAccountEnterpriseKeyAdminsSid = 0x72,
  WinAuthenticationKeyTrustSid = 0x73,
  WinAuthenticationKeyPropertyMFASid = 0x74,
  WinAuthenticationKeyPropertyAttestationSid = 0x75,
  WinAuthenticationFreshKeyAuthSid = 0x76,
  WinBuiltinDeviceOwnersSid = 0x77,
};

/* 2458 */
struct _ACL
{
  BYTE AclRevision;
  BYTE Sbz1;
  WORD AclSize;
  WORD AceCount;
  WORD Sbz2;
};

/* 2459 */
typedef _ACL ACL;

/* 2460 */
typedef ACL *PACL;

/* 2461 */
struct _ACE_HEADER
{
  BYTE AceType;
  BYTE AceFlags;
  WORD AceSize;
};

/* 2462 */
typedef _ACE_HEADER ACE_HEADER;

/* 2463 */
typedef ACE_HEADER *PACE_HEADER;

/* 2464 */
struct _ACCESS_ALLOWED_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2465 */
typedef _ACCESS_ALLOWED_ACE ACCESS_ALLOWED_ACE;

/* 2466 */
typedef ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;

/* 2467 */
struct _ACCESS_DENIED_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2468 */
typedef _ACCESS_DENIED_ACE ACCESS_DENIED_ACE;

/* 2469 */
typedef ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;

/* 2470 */
struct _SYSTEM_AUDIT_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2471 */
typedef _SYSTEM_AUDIT_ACE SYSTEM_AUDIT_ACE;

/* 2472 */
typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;

/* 2473 */
struct _SYSTEM_ALARM_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2474 */
typedef _SYSTEM_ALARM_ACE SYSTEM_ALARM_ACE;

/* 2475 */
typedef SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE;

/* 2476 */
struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2477 */
typedef _SYSTEM_RESOURCE_ATTRIBUTE_ACE SYSTEM_RESOURCE_ATTRIBUTE_ACE;

/* 2478 */
typedef _SYSTEM_RESOURCE_ATTRIBUTE_ACE *PSYSTEM_RESOURCE_ATTRIBUTE_ACE;

/* 2479 */
struct _SYSTEM_SCOPED_POLICY_ID_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2480 */
typedef _SYSTEM_SCOPED_POLICY_ID_ACE SYSTEM_SCOPED_POLICY_ID_ACE;

/* 2481 */
typedef _SYSTEM_SCOPED_POLICY_ID_ACE *PSYSTEM_SCOPED_POLICY_ID_ACE;

/* 2482 */
struct _SYSTEM_MANDATORY_LABEL_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2483 */
typedef _SYSTEM_MANDATORY_LABEL_ACE SYSTEM_MANDATORY_LABEL_ACE;

/* 2484 */
typedef _SYSTEM_MANDATORY_LABEL_ACE *PSYSTEM_MANDATORY_LABEL_ACE;

/* 2485 */
struct _SYSTEM_PROCESS_TRUST_LABEL_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2486 */
typedef _SYSTEM_PROCESS_TRUST_LABEL_ACE SYSTEM_PROCESS_TRUST_LABEL_ACE;

/* 2487 */
typedef _SYSTEM_PROCESS_TRUST_LABEL_ACE *PSYSTEM_PROCESS_TRUST_LABEL_ACE;

/* 2488 */
struct _SYSTEM_ACCESS_FILTER_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2489 */
typedef _SYSTEM_ACCESS_FILTER_ACE SYSTEM_ACCESS_FILTER_ACE;

/* 2490 */
typedef _SYSTEM_ACCESS_FILTER_ACE *PSYSTEM_ACCESS_FILTER_ACE;

/* 2491 */
struct _ACCESS_ALLOWED_OBJECT_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD Flags;
  GUID ObjectType;
  GUID InheritedObjectType;
  DWORD SidStart;
};

/* 2492 */
typedef _ACCESS_ALLOWED_OBJECT_ACE ACCESS_ALLOWED_OBJECT_ACE;

/* 2493 */
typedef _ACCESS_ALLOWED_OBJECT_ACE *PACCESS_ALLOWED_OBJECT_ACE;

/* 2494 */
struct _ACCESS_DENIED_OBJECT_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD Flags;
  GUID ObjectType;
  GUID InheritedObjectType;
  DWORD SidStart;
};

/* 2495 */
typedef _ACCESS_DENIED_OBJECT_ACE ACCESS_DENIED_OBJECT_ACE;

/* 2496 */
typedef _ACCESS_DENIED_OBJECT_ACE *PACCESS_DENIED_OBJECT_ACE;

/* 2497 */
struct _SYSTEM_AUDIT_OBJECT_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD Flags;
  GUID ObjectType;
  GUID InheritedObjectType;
  DWORD SidStart;
};

/* 2498 */
typedef _SYSTEM_AUDIT_OBJECT_ACE SYSTEM_AUDIT_OBJECT_ACE;

/* 2499 */
typedef _SYSTEM_AUDIT_OBJECT_ACE *PSYSTEM_AUDIT_OBJECT_ACE;

/* 2500 */
struct _SYSTEM_ALARM_OBJECT_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD Flags;
  GUID ObjectType;
  GUID InheritedObjectType;
  DWORD SidStart;
};

/* 2501 */
typedef _SYSTEM_ALARM_OBJECT_ACE SYSTEM_ALARM_OBJECT_ACE;

/* 2502 */
typedef _SYSTEM_ALARM_OBJECT_ACE *PSYSTEM_ALARM_OBJECT_ACE;

/* 2503 */
struct _ACCESS_ALLOWED_CALLBACK_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2504 */
typedef _ACCESS_ALLOWED_CALLBACK_ACE ACCESS_ALLOWED_CALLBACK_ACE;

/* 2505 */
typedef _ACCESS_ALLOWED_CALLBACK_ACE *PACCESS_ALLOWED_CALLBACK_ACE;

/* 2506 */
struct _ACCESS_DENIED_CALLBACK_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2507 */
typedef _ACCESS_DENIED_CALLBACK_ACE ACCESS_DENIED_CALLBACK_ACE;

/* 2508 */
typedef _ACCESS_DENIED_CALLBACK_ACE *PACCESS_DENIED_CALLBACK_ACE;

/* 2509 */
struct _SYSTEM_AUDIT_CALLBACK_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2510 */
typedef _SYSTEM_AUDIT_CALLBACK_ACE SYSTEM_AUDIT_CALLBACK_ACE;

/* 2511 */
typedef _SYSTEM_AUDIT_CALLBACK_ACE *PSYSTEM_AUDIT_CALLBACK_ACE;

/* 2512 */
struct _SYSTEM_ALARM_CALLBACK_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

/* 2513 */
typedef _SYSTEM_ALARM_CALLBACK_ACE SYSTEM_ALARM_CALLBACK_ACE;

/* 2514 */
typedef _SYSTEM_ALARM_CALLBACK_ACE *PSYSTEM_ALARM_CALLBACK_ACE;

/* 2515 */
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD Flags;
  GUID ObjectType;
  GUID InheritedObjectType;
  DWORD SidStart;
};

/* 2516 */
typedef _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

/* 2517 */
typedef _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

/* 2518 */
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD Flags;
  GUID ObjectType;
  GUID InheritedObjectType;
  DWORD SidStart;
};

/* 2519 */
typedef _ACCESS_DENIED_CALLBACK_OBJECT_ACE ACCESS_DENIED_CALLBACK_OBJECT_ACE;

/* 2520 */
typedef _ACCESS_DENIED_CALLBACK_OBJECT_ACE *PACCESS_DENIED_CALLBACK_OBJECT_ACE;

/* 2521 */
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD Flags;
  GUID ObjectType;
  GUID InheritedObjectType;
  DWORD SidStart;
};

/* 2522 */
typedef _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

/* 2523 */
typedef _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

/* 2524 */
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE
{
  ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD Flags;
  GUID ObjectType;
  GUID InheritedObjectType;
  DWORD SidStart;
};

/* 2525 */
typedef _SYSTEM_ALARM_CALLBACK_OBJECT_ACE SYSTEM_ALARM_CALLBACK_OBJECT_ACE;

/* 2526 */
typedef _SYSTEM_ALARM_CALLBACK_OBJECT_ACE *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;

/* 2527 */
enum _ACL_INFORMATION_CLASS : unsigned __int32
{
  AclRevisionInformation = 0x1,
  AclSizeInformation = 0x2,
};

/* 2528 */
typedef _ACL_INFORMATION_CLASS ACL_INFORMATION_CLASS;

/* 2529 */
struct _ACL_REVISION_INFORMATION
{
  DWORD AclRevision;
};

/* 2530 */
typedef _ACL_REVISION_INFORMATION ACL_REVISION_INFORMATION;

/* 2531 */
typedef ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION;

/* 2532 */
struct _ACL_SIZE_INFORMATION
{
  DWORD AceCount;
  DWORD AclBytesInUse;
  DWORD AclBytesFree;
};

/* 2533 */
typedef _ACL_SIZE_INFORMATION ACL_SIZE_INFORMATION;

/* 2534 */
typedef ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION;

/* 2535 */
typedef WORD SECURITY_DESCRIPTOR_CONTROL;

/* 2536 */
typedef WORD *PSECURITY_DESCRIPTOR_CONTROL;

/* 2537 */
struct _SECURITY_DESCRIPTOR_RELATIVE
{
  BYTE Revision;
  BYTE Sbz1;
  SECURITY_DESCRIPTOR_CONTROL Control;
  DWORD Owner;
  DWORD Group;
  DWORD Sacl;
  DWORD Dacl;
};

/* 2538 */
typedef _SECURITY_DESCRIPTOR_RELATIVE SECURITY_DESCRIPTOR_RELATIVE;

/* 2539 */
typedef _SECURITY_DESCRIPTOR_RELATIVE *PISECURITY_DESCRIPTOR_RELATIVE;

/* 2540 */
struct _SECURITY_DESCRIPTOR
{
  BYTE Revision;
  BYTE Sbz1;
  SECURITY_DESCRIPTOR_CONTROL Control;
  PSID Owner;
  PSID Group;
  PACL Sacl;
  PACL Dacl;
};

/* 2541 */
typedef _SECURITY_DESCRIPTOR SECURITY_DESCRIPTOR;

/* 2542 */
typedef _SECURITY_DESCRIPTOR *PISECURITY_DESCRIPTOR;

/* 2543 */
struct _SECURITY_OBJECT_AI_PARAMS
{
  DWORD Size;
  DWORD ConstraintMask;
};

/* 2544 */
typedef _SECURITY_OBJECT_AI_PARAMS SECURITY_OBJECT_AI_PARAMS;

/* 2545 */
typedef _SECURITY_OBJECT_AI_PARAMS *PSECURITY_OBJECT_AI_PARAMS;

/* 2546 */
struct _OBJECT_TYPE_LIST
{
  WORD Level;
  WORD Sbz;
  GUID *ObjectType;
};

/* 2547 */
typedef _OBJECT_TYPE_LIST OBJECT_TYPE_LIST;

/* 2548 */
typedef _OBJECT_TYPE_LIST *POBJECT_TYPE_LIST;

/* 2549 */
enum _AUDIT_EVENT_TYPE : unsigned __int32
{
  AuditEventObjectAccess = 0x0,
  AuditEventDirectoryServiceAccess = 0x1,
};

/* 2550 */
typedef _AUDIT_EVENT_TYPE AUDIT_EVENT_TYPE;

/* 2551 */
typedef _AUDIT_EVENT_TYPE *PAUDIT_EVENT_TYPE;

/* 2552 */
struct _PRIVILEGE_SET
{
  DWORD PrivilegeCount;
  DWORD Control;
  LUID_AND_ATTRIBUTES Privilege[1];
};

/* 2553 */
typedef _PRIVILEGE_SET PRIVILEGE_SET;

/* 2554 */
typedef _PRIVILEGE_SET *PPRIVILEGE_SET;

/* 2555 */
enum _ACCESS_REASON_TYPE : unsigned __int32
{
  AccessReasonNone = 0x0,
  AccessReasonAllowedAce = 0x10000,
  AccessReasonDeniedAce = 0x20000,
  AccessReasonAllowedParentAce = 0x30000,
  AccessReasonDeniedParentAce = 0x40000,
  AccessReasonNotGrantedByCape = 0x50000,
  AccessReasonNotGrantedByParentCape = 0x60000,
  AccessReasonNotGrantedToAppContainer = 0x70000,
  AccessReasonMissingPrivilege = 0x100000,
  AccessReasonFromPrivilege = 0x200000,
  AccessReasonIntegrityLevel = 0x300000,
  AccessReasonOwnership = 0x400000,
  AccessReasonNullDacl = 0x500000,
  AccessReasonEmptyDacl = 0x600000,
  AccessReasonNoSD = 0x700000,
  AccessReasonNoGrant = 0x800000,
  AccessReasonTrustLabel = 0x900000,
  AccessReasonFilterAce = 0xA00000,
};

/* 2556 */
typedef _ACCESS_REASON_TYPE ACCESS_REASON_TYPE;

/* 2557 */
typedef DWORD ACCESS_REASON;

/* 2558 */
struct _ACCESS_REASONS
{
  ACCESS_REASON Data[32];
};

/* 2559 */
typedef _ACCESS_REASONS ACCESS_REASONS;

/* 2560 */
typedef _ACCESS_REASONS *PACCESS_REASONS;

/* 2561 */
struct _SE_SECURITY_DESCRIPTOR
{
  DWORD Size;
  DWORD Flags;
  PSECURITY_DESCRIPTOR SecurityDescriptor;
};

/* 2562 */
typedef _SE_SECURITY_DESCRIPTOR SE_SECURITY_DESCRIPTOR;

/* 2563 */
typedef _SE_SECURITY_DESCRIPTOR *PSE_SECURITY_DESCRIPTOR;

/* 2564 */
struct _SE_ACCESS_REQUEST
{
  DWORD Size;
  PSE_SECURITY_DESCRIPTOR SeSecurityDescriptor;
  ACCESS_MASK DesiredAccess;
  ACCESS_MASK PreviouslyGrantedAccess;
  PSID PrincipalSelfSid;
  PGENERIC_MAPPING GenericMapping;
  DWORD ObjectTypeListCount;
  POBJECT_TYPE_LIST ObjectTypeList;
};

/* 2565 */
typedef _SE_ACCESS_REQUEST SE_ACCESS_REQUEST;

/* 2566 */
typedef _SE_ACCESS_REQUEST *PSE_ACCESS_REQUEST;

/* 2567 */
struct _SE_ACCESS_REPLY
{
  DWORD Size;
  DWORD ResultListCount;
  PACCESS_MASK GrantedAccess;
  PDWORD AccessStatus;
  PACCESS_REASONS AccessReason;
  PPRIVILEGE_SET *Privileges;
};

/* 2568 */
typedef _SE_ACCESS_REPLY SE_ACCESS_REPLY;

/* 2569 */
typedef _SE_ACCESS_REPLY *PSE_ACCESS_REPLY;

/* 2570 */
enum _SECURITY_IMPERSONATION_LEVEL : unsigned __int32
{
  SecurityAnonymous = 0x0,
  SecurityIdentification = 0x1,
  SecurityImpersonation = 0x2,
  SecurityDelegation = 0x3,
};

/* 2571 */
typedef _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;

/* 2572 */
typedef _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;

/* 2573 */
enum _TOKEN_TYPE : unsigned __int32
{
  TokenPrimary = 0x1,
  TokenImpersonation = 0x2,
};

/* 2574 */
typedef _TOKEN_TYPE TOKEN_TYPE;

/* 2575 */
typedef TOKEN_TYPE *PTOKEN_TYPE;

/* 2576 */
enum _TOKEN_ELEVATION_TYPE : unsigned __int32
{
  TokenElevationTypeDefault = 0x1,
  TokenElevationTypeFull = 0x2,
  TokenElevationTypeLimited = 0x3,
};

/* 2577 */
typedef _TOKEN_ELEVATION_TYPE TOKEN_ELEVATION_TYPE;

/* 2578 */
typedef _TOKEN_ELEVATION_TYPE *PTOKEN_ELEVATION_TYPE;

/* 2579 */
enum _TOKEN_INFORMATION_CLASS : unsigned __int32
{
  TokenUser = 0x1,
  TokenGroups = 0x2,
  TokenPrivileges = 0x3,
  TokenOwner = 0x4,
  TokenPrimaryGroup = 0x5,
  TokenDefaultDacl = 0x6,
  TokenSource = 0x7,
  TokenType = 0x8,
  TokenImpersonationLevel = 0x9,
  TokenStatistics = 0xA,
  TokenRestrictedSids = 0xB,
  TokenSessionId = 0xC,
  TokenGroupsAndPrivileges = 0xD,
  TokenSessionReference = 0xE,
  TokenSandBoxInert = 0xF,
  TokenAuditPolicy = 0x10,
  TokenOrigin = 0x11,
  TokenElevationType = 0x12,
  TokenLinkedToken = 0x13,
  TokenElevation = 0x14,
  TokenHasRestrictions = 0x15,
  TokenAccessInformation = 0x16,
  TokenVirtualizationAllowed = 0x17,
  TokenVirtualizationEnabled = 0x18,
  TokenIntegrityLevel = 0x19,
  TokenUIAccess = 0x1A,
  TokenMandatoryPolicy = 0x1B,
  TokenLogonSid = 0x1C,
  TokenIsAppContainer = 0x1D,
  TokenCapabilities = 0x1E,
  TokenAppContainerSid = 0x1F,
  TokenAppContainerNumber = 0x20,
  TokenUserClaimAttributes = 0x21,
  TokenDeviceClaimAttributes = 0x22,
  TokenRestrictedUserClaimAttributes = 0x23,
  TokenRestrictedDeviceClaimAttributes = 0x24,
  TokenDeviceGroups = 0x25,
  TokenRestrictedDeviceGroups = 0x26,
  TokenSecurityAttributes = 0x27,
  TokenIsRestricted = 0x28,
  TokenProcessTrustLevel = 0x29,
  TokenPrivateNameSpace = 0x2A,
  TokenSingletonAttributes = 0x2B,
  TokenBnoIsolation = 0x2C,
  TokenChildProcessFlags = 0x2D,
  TokenIsLessPrivilegedAppContainer = 0x2E,
  TokenIsSandboxed = 0x2F,
  TokenOriginatingProcessTrustLevel = 0x30,
  MaxTokenInfoClass = 0x31,
};

/* 2580 */
typedef _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;

/* 2581 */
typedef _TOKEN_INFORMATION_CLASS *PTOKEN_INFORMATION_CLASS;

/* 2582 */
struct _TOKEN_USER
{
  SID_AND_ATTRIBUTES User;
};

/* 2583 */
typedef _TOKEN_USER TOKEN_USER;

/* 2584 */
typedef _TOKEN_USER *PTOKEN_USER;

/* 2586 */
union _SE_TOKEN_USER___F5E98B4F76FAACF7031760F1DEA230FC
{
  TOKEN_USER TokenUser;
  SID_AND_ATTRIBUTES User;
};

/* 2587 */
union _SE_TOKEN_USER___5CA11C7D954FC986D58E1B423D36FFDC
{
  SID Sid;
  BYTE Buffer[68];
};

/* 2585 */
struct _SE_TOKEN_USER
{
  union
  {
    TOKEN_USER TokenUser;
    SID_AND_ATTRIBUTES User;
  };
  union
  {
    SID Sid;
    BYTE Buffer[68];
  };
};

/* 2588 */
typedef _SE_TOKEN_USER SE_TOKEN_USER;

/* 2589 */
typedef _SE_TOKEN_USER PSE_TOKEN_USER;

/* 2590 */
struct _TOKEN_GROUPS
{
  DWORD GroupCount;
  SID_AND_ATTRIBUTES Groups[1];
};

/* 2591 */
typedef _TOKEN_GROUPS TOKEN_GROUPS;

/* 2592 */
typedef _TOKEN_GROUPS *PTOKEN_GROUPS;

/* 2593 */
struct _TOKEN_PRIVILEGES
{
  DWORD PrivilegeCount;
  LUID_AND_ATTRIBUTES Privileges[1];
};

/* 2594 */
typedef _TOKEN_PRIVILEGES TOKEN_PRIVILEGES;

/* 2595 */
typedef _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;

/* 2596 */
struct _TOKEN_OWNER
{
  PSID Owner;
};

/* 2597 */
typedef _TOKEN_OWNER TOKEN_OWNER;

/* 2598 */
typedef _TOKEN_OWNER *PTOKEN_OWNER;

/* 2599 */
struct _TOKEN_PRIMARY_GROUP
{
  PSID PrimaryGroup;
};

/* 2600 */
typedef _TOKEN_PRIMARY_GROUP TOKEN_PRIMARY_GROUP;

/* 2601 */
typedef _TOKEN_PRIMARY_GROUP *PTOKEN_PRIMARY_GROUP;

/* 2602 */
struct _TOKEN_DEFAULT_DACL
{
  PACL DefaultDacl;
};

/* 2603 */
typedef _TOKEN_DEFAULT_DACL TOKEN_DEFAULT_DACL;

/* 2604 */
typedef _TOKEN_DEFAULT_DACL *PTOKEN_DEFAULT_DACL;

/* 2605 */
struct _TOKEN_USER_CLAIMS
{
  PCLAIMS_BLOB UserClaims;
};

/* 2606 */
typedef _TOKEN_USER_CLAIMS TOKEN_USER_CLAIMS;

/* 2607 */
typedef _TOKEN_USER_CLAIMS *PTOKEN_USER_CLAIMS;

/* 2608 */
struct _TOKEN_DEVICE_CLAIMS
{
  PCLAIMS_BLOB DeviceClaims;
};

/* 2609 */
typedef _TOKEN_DEVICE_CLAIMS TOKEN_DEVICE_CLAIMS;

/* 2610 */
typedef _TOKEN_DEVICE_CLAIMS *PTOKEN_DEVICE_CLAIMS;

/* 2611 */
struct _TOKEN_GROUPS_AND_PRIVILEGES
{
  DWORD SidCount;
  DWORD SidLength;
  PSID_AND_ATTRIBUTES Sids;
  DWORD RestrictedSidCount;
  DWORD RestrictedSidLength;
  PSID_AND_ATTRIBUTES RestrictedSids;
  DWORD PrivilegeCount;
  DWORD PrivilegeLength;
  PLUID_AND_ATTRIBUTES Privileges;
  LUID AuthenticationId;
};

/* 2612 */
typedef _TOKEN_GROUPS_AND_PRIVILEGES TOKEN_GROUPS_AND_PRIVILEGES;

/* 2613 */
typedef _TOKEN_GROUPS_AND_PRIVILEGES *PTOKEN_GROUPS_AND_PRIVILEGES;

/* 2614 */
struct _TOKEN_LINKED_TOKEN
{
  HANDLE LinkedToken;
};

/* 2615 */
typedef _TOKEN_LINKED_TOKEN TOKEN_LINKED_TOKEN;

/* 2616 */
typedef _TOKEN_LINKED_TOKEN *PTOKEN_LINKED_TOKEN;

/* 2617 */
struct _TOKEN_ELEVATION
{
  DWORD TokenIsElevated;
};

/* 2618 */
typedef _TOKEN_ELEVATION TOKEN_ELEVATION;

/* 2619 */
typedef _TOKEN_ELEVATION *PTOKEN_ELEVATION;

/* 2620 */
struct _TOKEN_MANDATORY_LABEL
{
  SID_AND_ATTRIBUTES Label;
};

/* 2621 */
typedef _TOKEN_MANDATORY_LABEL TOKEN_MANDATORY_LABEL;

/* 2622 */
typedef _TOKEN_MANDATORY_LABEL *PTOKEN_MANDATORY_LABEL;

/* 2623 */
struct _TOKEN_MANDATORY_POLICY
{
  DWORD Policy;
};

/* 2624 */
typedef _TOKEN_MANDATORY_POLICY TOKEN_MANDATORY_POLICY;

/* 2625 */
typedef _TOKEN_MANDATORY_POLICY *PTOKEN_MANDATORY_POLICY;

/* 2626 */
typedef PVOID PSECURITY_ATTRIBUTES_OPAQUE;

/* 2627 */
struct _TOKEN_ACCESS_INFORMATION
{
  PSID_AND_ATTRIBUTES_HASH SidHash;
  PSID_AND_ATTRIBUTES_HASH RestrictedSidHash;
  PTOKEN_PRIVILEGES Privileges;
  LUID AuthenticationId;
  TOKEN_TYPE TokenType;
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  TOKEN_MANDATORY_POLICY MandatoryPolicy;
  DWORD Flags;
  DWORD AppContainerNumber;
  PSID PackageSid;
  PSID_AND_ATTRIBUTES_HASH CapabilitiesHash;
  PSID TrustLevelSid;
  PSECURITY_ATTRIBUTES_OPAQUE SecurityAttributes;
};

/* 2628 */
typedef _TOKEN_ACCESS_INFORMATION TOKEN_ACCESS_INFORMATION;

/* 2629 */
typedef _TOKEN_ACCESS_INFORMATION *PTOKEN_ACCESS_INFORMATION;

/* 2630 */
struct _TOKEN_AUDIT_POLICY
{
  BYTE PerUserPolicy[30];
};

/* 2631 */
typedef _TOKEN_AUDIT_POLICY TOKEN_AUDIT_POLICY;

/* 2632 */
typedef _TOKEN_AUDIT_POLICY *PTOKEN_AUDIT_POLICY;

/* 2633 */
struct _TOKEN_SOURCE
{
  CHAR SourceName[8];
  LUID SourceIdentifier;
};

/* 2634 */
typedef _TOKEN_SOURCE TOKEN_SOURCE;

/* 2635 */
typedef _TOKEN_SOURCE *PTOKEN_SOURCE;

/* 2636 */
struct _TOKEN_STATISTICS
{
  LUID TokenId;
  LUID AuthenticationId;
  LARGE_INTEGER ExpirationTime;
  TOKEN_TYPE TokenType;
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  DWORD DynamicCharged;
  DWORD DynamicAvailable;
  DWORD GroupCount;
  DWORD PrivilegeCount;
  LUID ModifiedId;
};

/* 2637 */
typedef _TOKEN_STATISTICS TOKEN_STATISTICS;

/* 2638 */
typedef _TOKEN_STATISTICS *PTOKEN_STATISTICS;

/* 2639 */
struct _TOKEN_CONTROL
{
  LUID TokenId;
  LUID AuthenticationId;
  LUID ModifiedId;
  TOKEN_SOURCE TokenSource;
};

/* 2640 */
typedef _TOKEN_CONTROL TOKEN_CONTROL;

/* 2641 */
typedef _TOKEN_CONTROL *PTOKEN_CONTROL;

/* 2642 */
struct _TOKEN_ORIGIN
{
  LUID OriginatingLogonSession;
};

/* 2643 */
typedef _TOKEN_ORIGIN TOKEN_ORIGIN;

/* 2644 */
typedef _TOKEN_ORIGIN *PTOKEN_ORIGIN;

/* 2645 */
enum _MANDATORY_LEVEL : unsigned __int32
{
  MandatoryLevelUntrusted = 0x0,
  MandatoryLevelLow = 0x1,
  MandatoryLevelMedium = 0x2,
  MandatoryLevelHigh = 0x3,
  MandatoryLevelSystem = 0x4,
  MandatoryLevelSecureProcess = 0x5,
  MandatoryLevelCount = 0x6,
};

/* 2646 */
typedef _MANDATORY_LEVEL MANDATORY_LEVEL;

/* 2647 */
typedef _MANDATORY_LEVEL *PMANDATORY_LEVEL;

/* 2648 */
struct _TOKEN_APPCONTAINER_INFORMATION
{
  PSID TokenAppContainer;
};

/* 2649 */
typedef _TOKEN_APPCONTAINER_INFORMATION TOKEN_APPCONTAINER_INFORMATION;

/* 2650 */
typedef _TOKEN_APPCONTAINER_INFORMATION *PTOKEN_APPCONTAINER_INFORMATION;

/* 2651 */
struct _TOKEN_SID_INFORMATION
{
  PSID Sid;
};

/* 2652 */
typedef _TOKEN_SID_INFORMATION TOKEN_SID_INFORMATION;

/* 2653 */
typedef _TOKEN_SID_INFORMATION *PTOKEN_SID_INFORMATION;

/* 2654 */
struct _TOKEN_BNO_ISOLATION_INFORMATION
{
  PWSTR IsolationPrefix;
  BOOLEAN IsolationEnabled;
};

/* 2655 */
typedef _TOKEN_BNO_ISOLATION_INFORMATION TOKEN_BNO_ISOLATION_INFORMATION;

/* 2656 */
typedef _TOKEN_BNO_ISOLATION_INFORMATION *PTOKEN_BNO_ISOLATION_INFORMATION;

/* 2657 */
struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
{
  DWORD64 Version;
  PWSTR Name;
};

/* 2658 */
typedef _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE;

/* 2659 */
typedef _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE *PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE;

/* 2660 */
struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
{
  PVOID pValue;
  DWORD ValueLength;
};

/* 2661 */
typedef _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;

/* 2662 */
typedef _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE *PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;

/* 2664 */
union _CLAIM_SECURITY_ATTRIBUTE_V1___9D06E66596D2F403644E74768BC21264
{
  PLONG64 pInt64;
  PDWORD64 pUint64;
  PWSTR *ppString;
  PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn;
  PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString;
};

/* 2663 */
struct _CLAIM_SECURITY_ATTRIBUTE_V1
{
  PWSTR Name;
  WORD ValueType;
  WORD Reserved;
  DWORD Flags;
  DWORD ValueCount;
  _CLAIM_SECURITY_ATTRIBUTE_V1___9D06E66596D2F403644E74768BC21264 Values;
};

/* 2665 */
typedef _CLAIM_SECURITY_ATTRIBUTE_V1 CLAIM_SECURITY_ATTRIBUTE_V1;

/* 2666 */
typedef _CLAIM_SECURITY_ATTRIBUTE_V1 *PCLAIM_SECURITY_ATTRIBUTE_V1;

/* 2668 */
union _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1___980039CADE3C96E6EA936992968C6F5C
{
  DWORD pInt64[1];
  DWORD pUint64[1];
  DWORD ppString[1];
  DWORD pFqbn[1];
  DWORD pOctetString[1];
};

/* 2667 */
struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1
{
  DWORD Name;
  WORD ValueType;
  WORD Reserved;
  DWORD Flags;
  DWORD ValueCount;
  _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1___980039CADE3C96E6EA936992968C6F5C Values;
};

/* 2669 */
typedef _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1;

/* 2670 */
typedef _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 *PCLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1;

/* 2672 */
union _CLAIM_SECURITY_ATTRIBUTES_INFORMATION___A782A26146F232936242A16156D893CD
{
  PCLAIM_SECURITY_ATTRIBUTE_V1 pAttributeV1;
};

/* 2671 */
struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION
{
  WORD Version;
  WORD Reserved;
  DWORD AttributeCount;
  _CLAIM_SECURITY_ATTRIBUTES_INFORMATION___A782A26146F232936242A16156D893CD Attribute;
};

/* 2673 */
typedef _CLAIM_SECURITY_ATTRIBUTES_INFORMATION CLAIM_SECURITY_ATTRIBUTES_INFORMATION;

/* 2674 */
typedef _CLAIM_SECURITY_ATTRIBUTES_INFORMATION *PCLAIM_SECURITY_ATTRIBUTES_INFORMATION;

/* 2675 */
typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;

/* 2676 */
typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE;

/* 2677 */
struct _SECURITY_QUALITY_OF_SERVICE
{
  DWORD Length;
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;
  BOOLEAN EffectiveOnly;
};

/* 2678 */
typedef _SECURITY_QUALITY_OF_SERVICE SECURITY_QUALITY_OF_SERVICE;

/* 2679 */
typedef _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;

/* 2680 */
struct _SE_IMPERSONATION_STATE
{
  PACCESS_TOKEN Token;
  BOOLEAN CopyOnOpen;
  BOOLEAN EffectiveOnly;
  SECURITY_IMPERSONATION_LEVEL Level;
};

/* 2681 */
typedef _SE_IMPERSONATION_STATE SE_IMPERSONATION_STATE;

/* 2682 */
typedef _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;

/* 2683 */
typedef DWORD SECURITY_INFORMATION;

/* 2684 */
typedef DWORD *PSECURITY_INFORMATION;

/* 2685 */
typedef BYTE SE_SIGNING_LEVEL;

/* 2686 */
typedef BYTE *PSE_SIGNING_LEVEL;

/* 2687 */
enum _SE_IMAGE_SIGNATURE_TYPE : unsigned __int32
{
  SeImageSignatureNone = 0x0,
  SeImageSignatureEmbedded = 0x1,
  SeImageSignatureCache = 0x2,
  SeImageSignatureCatalogCached = 0x3,
  SeImageSignatureCatalogNotCached = 0x4,
  SeImageSignatureCatalogHint = 0x5,
  SeImageSignaturePackageCatalog = 0x6,
};

/* 2688 */
typedef _SE_IMAGE_SIGNATURE_TYPE SE_IMAGE_SIGNATURE_TYPE;

/* 2689 */
typedef _SE_IMAGE_SIGNATURE_TYPE *PSE_IMAGE_SIGNATURE_TYPE;

/* 2690 */
enum _SE_LEARNING_MODE_DATA_TYPE : unsigned __int32
{
  SeLearningModeInvalidType = 0x0,
  SeLearningModeSettings = 0x1,
  SeLearningModeMax = 0x2,
};

/* 2691 */
typedef _SE_LEARNING_MODE_DATA_TYPE SE_LEARNING_MODE_DATA_TYPE;

/* 2692 */
struct _SECURITY_CAPABILITIES
{
  PSID AppContainerSid;
  PSID_AND_ATTRIBUTES Capabilities;
  DWORD CapabilityCount;
  DWORD Reserved;
};

/* 2693 */
typedef _SECURITY_CAPABILITIES SECURITY_CAPABILITIES;

/* 2694 */
typedef _SECURITY_CAPABILITIES *PSECURITY_CAPABILITIES;

/* 2695 */
typedef _SECURITY_CAPABILITIES *LPSECURITY_CAPABILITIES;

/* 2696 */
struct _JOB_SET_ARRAY
{
  HANDLE JobHandle;
  DWORD MemberLevel;
  DWORD Flags;
};

/* 2697 */
typedef _JOB_SET_ARRAY JOB_SET_ARRAY;

/* 2698 */
typedef _JOB_SET_ARRAY *PJOB_SET_ARRAY;

/* 2699 */
struct _EXCEPTION_REGISTRATION_RECORD
{
  _EXCEPTION_REGISTRATION_RECORD *Next;
  PEXCEPTION_ROUTINE Handler;
};

/* 2700 */
typedef _EXCEPTION_REGISTRATION_RECORD EXCEPTION_REGISTRATION_RECORD;

/* 2701 */
typedef EXCEPTION_REGISTRATION_RECORD *PEXCEPTION_REGISTRATION_RECORD;

/* 2703 */
union _NT_TIB___4F592BB387BBBAD2B76D6EEE6EFB58F3
{
  PVOID FiberData;
  DWORD Version;
};

/* 2702 */
struct _NT_TIB
{
  _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  PVOID StackBase;
  PVOID StackLimit;
  PVOID SubSystemTib;
  union
  {
    PVOID FiberData;
    DWORD Version;
  };
  PVOID ArbitraryUserPointer;
  _NT_TIB *Self;
};

/* 2704 */
typedef _NT_TIB NT_TIB;

/* 2705 */
typedef NT_TIB *PNT_TIB;

/* 2707 */
union _NT_TIB32___36B74FAB262AB83958B69319F9AD6700
{
  DWORD FiberData;
  DWORD Version;
};

/* 2706 */
struct _NT_TIB32
{
  DWORD ExceptionList;
  DWORD StackBase;
  DWORD StackLimit;
  DWORD SubSystemTib;
  union
  {
    DWORD FiberData;
    DWORD Version;
  };
  DWORD ArbitraryUserPointer;
  DWORD Self;
};

/* 2708 */
typedef _NT_TIB32 NT_TIB32;

/* 2709 */
typedef _NT_TIB32 *PNT_TIB32;

/* 2711 */
union _NT_TIB64___A58BD77A585D2445D581DF07685A0FEF
{
  DWORD64 FiberData;
  DWORD Version;
};

/* 2710 */
struct _NT_TIB64
{
  DWORD64 ExceptionList;
  DWORD64 StackBase;
  DWORD64 StackLimit;
  DWORD64 SubSystemTib;
  union
  {
    DWORD64 FiberData;
    DWORD Version;
  };
  DWORD64 ArbitraryUserPointer;
  DWORD64 Self;
};

/* 2712 */
typedef _NT_TIB64 NT_TIB64;

/* 2713 */
typedef _NT_TIB64 *PNT_TIB64;

/* 2714 */
struct _UMS_CREATE_THREAD_ATTRIBUTES
{
  DWORD UmsVersion;
  PVOID UmsContext;
  PVOID UmsCompletionList;
};

/* 2715 */
typedef _UMS_CREATE_THREAD_ATTRIBUTES UMS_CREATE_THREAD_ATTRIBUTES;

/* 2716 */
typedef _UMS_CREATE_THREAD_ATTRIBUTES *PUMS_CREATE_THREAD_ATTRIBUTES;

/* 2717 */
struct _WOW64_ARCHITECTURE_INFORMATION
{
  unsigned __int32 Machine : 16;
  unsigned __int32 KernelMode : 1;
  unsigned __int32 UserMode : 1;
  unsigned __int32 Native : 1;
  unsigned __int32 Process : 1;
  unsigned __int32 ReservedZero0 : 12;
};

/* 2718 */
typedef _WOW64_ARCHITECTURE_INFORMATION WOW64_ARCHITECTURE_INFORMATION;

/* 2719 */
struct _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET
{
  ULONG_PTR TargetAddress;
  ULONG_PTR Flags;
};

/* 2720 */
typedef _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET PROCESS_DYNAMIC_EH_CONTINUATION_TARGET;

/* 2721 */
typedef _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET *PPROCESS_DYNAMIC_EH_CONTINUATION_TARGET;

/* 2722 */
struct _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION
{
  WORD NumberOfTargets;
  WORD Reserved;
  DWORD Reserved2;
  PPROCESS_DYNAMIC_EH_CONTINUATION_TARGET Targets;
};

/* 2723 */
typedef _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION;

/* 2724 */
typedef _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION *PPROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION;

/* 2725 */
struct _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE
{
  ULONG_PTR BaseAddress;
  SIZE_T Size;
  DWORD Flags;
};

/* 2726 */
typedef _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE;

/* 2727 */
typedef _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE *PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE;

/* 2728 */
struct _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION
{
  WORD NumberOfRanges;
  WORD Reserved;
  DWORD Reserved2;
  PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE Ranges;
};

/* 2729 */
typedef _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION;

/* 2730 */
typedef _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION *PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION;

/* 2731 */
struct _QUOTA_LIMITS
{
  SIZE_T PagedPoolLimit;
  SIZE_T NonPagedPoolLimit;
  SIZE_T MinimumWorkingSetSize;
  SIZE_T MaximumWorkingSetSize;
  SIZE_T PagefileLimit;
  LARGE_INTEGER TimeLimit;
};

/* 2732 */
typedef _QUOTA_LIMITS QUOTA_LIMITS;

/* 2733 */
typedef _QUOTA_LIMITS *PQUOTA_LIMITS;

/* 2735 */
struct _RATE_QUOTA_LIMIT___79FA692AF2D868318B7516C685A0638E
{
  unsigned __int32 RatePercent : 7;
  unsigned __int32 Reserved0 : 25;
};

/* 2734 */
union _RATE_QUOTA_LIMIT
{
  DWORD RateData;
  struct
  {
    unsigned __int32 RatePercent : 7;
    unsigned __int32 Reserved0 : 25;
  };
};

/* 2736 */
typedef _RATE_QUOTA_LIMIT RATE_QUOTA_LIMIT;

/* 2737 */
typedef _RATE_QUOTA_LIMIT *PRATE_QUOTA_LIMIT;

/* 2738 */
struct _QUOTA_LIMITS_EX
{
  SIZE_T PagedPoolLimit;
  SIZE_T NonPagedPoolLimit;
  SIZE_T MinimumWorkingSetSize;
  SIZE_T MaximumWorkingSetSize;
  SIZE_T PagefileLimit;
  LARGE_INTEGER TimeLimit;
  SIZE_T WorkingSetLimit;
  SIZE_T Reserved2;
  SIZE_T Reserved3;
  SIZE_T Reserved4;
  DWORD Flags;
  RATE_QUOTA_LIMIT CpuRateLimit;
};

/* 2739 */
typedef _QUOTA_LIMITS_EX QUOTA_LIMITS_EX;

/* 2740 */
typedef _QUOTA_LIMITS_EX *PQUOTA_LIMITS_EX;

/* 2741 */
struct _IO_COUNTERS
{
  ULONGLONG ReadOperationCount;
  ULONGLONG WriteOperationCount;
  ULONGLONG OtherOperationCount;
  ULONGLONG ReadTransferCount;
  ULONGLONG WriteTransferCount;
  ULONGLONG OtherTransferCount;
};

/* 2742 */
typedef _IO_COUNTERS IO_COUNTERS;

/* 2743 */
typedef IO_COUNTERS *PIO_COUNTERS;

/* 2744 */
enum _HARDWARE_COUNTER_TYPE : unsigned __int32
{
  PMCCounter = 0x0,
  MaxHardwareCounterType = 0x1,
};

/* 2745 */
typedef _HARDWARE_COUNTER_TYPE HARDWARE_COUNTER_TYPE;

/* 2746 */
typedef _HARDWARE_COUNTER_TYPE *PHARDWARE_COUNTER_TYPE;

/* 2747 */
enum _PROCESS_MITIGATION_POLICY : unsigned __int32
{
  ProcessDEPPolicy = 0x0,
  ProcessASLRPolicy = 0x1,
  ProcessDynamicCodePolicy = 0x2,
  ProcessStrictHandleCheckPolicy = 0x3,
  ProcessSystemCallDisablePolicy = 0x4,
  ProcessMitigationOptionsMask = 0x5,
  ProcessExtensionPointDisablePolicy = 0x6,
  ProcessControlFlowGuardPolicy = 0x7,
  ProcessSignaturePolicy = 0x8,
  ProcessFontDisablePolicy = 0x9,
  ProcessImageLoadPolicy = 0xA,
  ProcessSystemCallFilterPolicy = 0xB,
  ProcessPayloadRestrictionPolicy = 0xC,
  ProcessChildProcessPolicy = 0xD,
  ProcessSideChannelIsolationPolicy = 0xE,
  ProcessUserShadowStackPolicy = 0xF,
  MaxProcessMitigationPolicy = 0x10,
};

/* 2748 */
typedef _PROCESS_MITIGATION_POLICY PROCESS_MITIGATION_POLICY;

/* 2749 */
typedef _PROCESS_MITIGATION_POLICY *PPROCESS_MITIGATION_POLICY;

/* 2751 */
struct _5FDB0C128CAE6B510A580B0DF7449C28
{
  unsigned __int32 EnableBottomUpRandomization : 1;
  unsigned __int32 EnableForceRelocateImages : 1;
  unsigned __int32 EnableHighEntropy : 1;
  unsigned __int32 DisallowStrippedImages : 1;
  unsigned __int32 ReservedFlags : 28;
};

/* 2752 */
union _PROCESS_MITIGATION_ASLR_POLICY___EF23D35D4AFD2CAFE17C817A6832F69D
{
  DWORD Flags;
  struct
  {
    unsigned __int32 EnableBottomUpRandomization : 1;
    unsigned __int32 EnableForceRelocateImages : 1;
    unsigned __int32 EnableHighEntropy : 1;
    unsigned __int32 DisallowStrippedImages : 1;
    unsigned __int32 ReservedFlags : 28;
  };
};

/* 2750 */
struct _PROCESS_MITIGATION_ASLR_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 EnableBottomUpRandomization : 1;
      unsigned __int32 EnableForceRelocateImages : 1;
      unsigned __int32 EnableHighEntropy : 1;
      unsigned __int32 DisallowStrippedImages : 1;
      unsigned __int32 ReservedFlags : 28;
    };
  };
};

/* 2753 */
typedef _PROCESS_MITIGATION_ASLR_POLICY PROCESS_MITIGATION_ASLR_POLICY;

/* 2754 */
typedef _PROCESS_MITIGATION_ASLR_POLICY *PPROCESS_MITIGATION_ASLR_POLICY;

/* 2756 */
struct _7C60618F8DDAB6C9415DCB902B86CBEA
{
  unsigned __int32 Enable : 1;
  unsigned __int32 DisableAtlThunkEmulation : 1;
  unsigned __int32 ReservedFlags : 30;
};

/* 2757 */
union _PROCESS_MITIGATION_DEP_POLICY___FD136180483B4938AC5BD93E37872B76
{
  DWORD Flags;
  struct
  {
    unsigned __int32 Enable : 1;
    unsigned __int32 DisableAtlThunkEmulation : 1;
    unsigned __int32 ReservedFlags : 30;
  };
};

/* 2755 */
struct _PROCESS_MITIGATION_DEP_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 Enable : 1;
      unsigned __int32 DisableAtlThunkEmulation : 1;
      unsigned __int32 ReservedFlags : 30;
    };
  };
  BOOLEAN Permanent;
};

/* 2758 */
typedef _PROCESS_MITIGATION_DEP_POLICY PROCESS_MITIGATION_DEP_POLICY;

/* 2759 */
typedef _PROCESS_MITIGATION_DEP_POLICY *PPROCESS_MITIGATION_DEP_POLICY;

/* 2761 */
struct _E68E69178BF9C90E9AD3136A5DA83667
{
  unsigned __int32 RaiseExceptionOnInvalidHandleReference : 1;
  unsigned __int32 HandleExceptionsPermanentlyEnabled : 1;
  unsigned __int32 ReservedFlags : 30;
};

/* 2762 */
union _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY___FD33BDC57BCEB8233764351EEFC4E5C6
{
  DWORD Flags;
  struct
  {
    unsigned __int32 RaiseExceptionOnInvalidHandleReference : 1;
    unsigned __int32 HandleExceptionsPermanentlyEnabled : 1;
    unsigned __int32 ReservedFlags : 30;
  };
};

/* 2760 */
struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 RaiseExceptionOnInvalidHandleReference : 1;
      unsigned __int32 HandleExceptionsPermanentlyEnabled : 1;
      unsigned __int32 ReservedFlags : 30;
    };
  };
};

/* 2763 */
typedef _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY;

/* 2764 */
typedef _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY *PPROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY;

/* 2766 */
struct _ECCC25BC343ABE0853F526697984729A
{
  unsigned __int32 DisallowWin32kSystemCalls : 1;
  unsigned __int32 AuditDisallowWin32kSystemCalls : 1;
  unsigned __int32 ReservedFlags : 30;
};

/* 2767 */
union _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY___AD9536122EB431DA68DD4C2B47022529
{
  DWORD Flags;
  struct
  {
    unsigned __int32 DisallowWin32kSystemCalls : 1;
    unsigned __int32 AuditDisallowWin32kSystemCalls : 1;
    unsigned __int32 ReservedFlags : 30;
  };
};

/* 2765 */
struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 DisallowWin32kSystemCalls : 1;
      unsigned __int32 AuditDisallowWin32kSystemCalls : 1;
      unsigned __int32 ReservedFlags : 30;
    };
  };
};

/* 2768 */
typedef _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;

/* 2769 */
typedef _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY *PPROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;

/* 2771 */
struct _19436C2F0C0C306A8BFD7B32BBC2825D
{
  unsigned __int32 DisableExtensionPoints : 1;
  unsigned __int32 ReservedFlags : 31;
};

/* 2772 */
union _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY___33429AB7D8029A757D69069187804440
{
  DWORD Flags;
  struct
  {
    unsigned __int32 DisableExtensionPoints : 1;
    unsigned __int32 ReservedFlags : 31;
  };
};

/* 2770 */
struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 DisableExtensionPoints : 1;
      unsigned __int32 ReservedFlags : 31;
    };
  };
};

/* 2773 */
typedef _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;

/* 2774 */
typedef _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY *PPROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;

/* 2776 */
struct _5FAD416589472B5F3944026CEEE6AAA8
{
  unsigned __int32 ProhibitDynamicCode : 1;
  unsigned __int32 AllowThreadOptOut : 1;
  unsigned __int32 AllowRemoteDowngrade : 1;
  unsigned __int32 AuditProhibitDynamicCode : 1;
  unsigned __int32 ReservedFlags : 28;
};

/* 2777 */
union _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY___B4E19A71168CE34C20DDB8F98D338030
{
  DWORD Flags;
  struct
  {
    unsigned __int32 ProhibitDynamicCode : 1;
    unsigned __int32 AllowThreadOptOut : 1;
    unsigned __int32 AllowRemoteDowngrade : 1;
    unsigned __int32 AuditProhibitDynamicCode : 1;
    unsigned __int32 ReservedFlags : 28;
  };
};

/* 2775 */
struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 ProhibitDynamicCode : 1;
      unsigned __int32 AllowThreadOptOut : 1;
      unsigned __int32 AllowRemoteDowngrade : 1;
      unsigned __int32 AuditProhibitDynamicCode : 1;
      unsigned __int32 ReservedFlags : 28;
    };
  };
};

/* 2778 */
typedef _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY PROCESS_MITIGATION_DYNAMIC_CODE_POLICY;

/* 2779 */
typedef _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY *PPROCESS_MITIGATION_DYNAMIC_CODE_POLICY;

/* 2781 */
struct _A8AB85F54C41EDC76E4CA93812102570
{
  unsigned __int32 EnableControlFlowGuard : 1;
  unsigned __int32 EnableExportSuppression : 1;
  unsigned __int32 StrictMode : 1;
  unsigned __int32 ReservedFlags : 29;
};

/* 2782 */
union _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY___2FA0893F5F94738320789EE0A61135E4
{
  DWORD Flags;
  struct
  {
    unsigned __int32 EnableControlFlowGuard : 1;
    unsigned __int32 EnableExportSuppression : 1;
    unsigned __int32 StrictMode : 1;
    unsigned __int32 ReservedFlags : 29;
  };
};

/* 2780 */
struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 EnableControlFlowGuard : 1;
      unsigned __int32 EnableExportSuppression : 1;
      unsigned __int32 StrictMode : 1;
      unsigned __int32 ReservedFlags : 29;
    };
  };
};

/* 2783 */
typedef _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY;

/* 2784 */
typedef _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY *PPROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY;

/* 2786 */
struct _0F0214169AB7574E621E68810485F6AA
{
  unsigned __int32 MicrosoftSignedOnly : 1;
  unsigned __int32 StoreSignedOnly : 1;
  unsigned __int32 MitigationOptIn : 1;
  unsigned __int32 AuditMicrosoftSignedOnly : 1;
  unsigned __int32 AuditStoreSignedOnly : 1;
  unsigned __int32 ReservedFlags : 27;
};

/* 2787 */
union _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY___70C6A6FD2FD0CF4EFFD8E31632FF14D1
{
  DWORD Flags;
  struct
  {
    unsigned __int32 MicrosoftSignedOnly : 1;
    unsigned __int32 StoreSignedOnly : 1;
    unsigned __int32 MitigationOptIn : 1;
    unsigned __int32 AuditMicrosoftSignedOnly : 1;
    unsigned __int32 AuditStoreSignedOnly : 1;
    unsigned __int32 ReservedFlags : 27;
  };
};

/* 2785 */
struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 MicrosoftSignedOnly : 1;
      unsigned __int32 StoreSignedOnly : 1;
      unsigned __int32 MitigationOptIn : 1;
      unsigned __int32 AuditMicrosoftSignedOnly : 1;
      unsigned __int32 AuditStoreSignedOnly : 1;
      unsigned __int32 ReservedFlags : 27;
    };
  };
};

/* 2788 */
typedef _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY;

/* 2789 */
typedef _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY *PPROCESS_MITIGATION_BINARY_SIGNATURE_POLICY;

/* 2791 */
struct _7B9E08C8598B8FD88043C3528403CCC6
{
  unsigned __int32 DisableNonSystemFonts : 1;
  unsigned __int32 AuditNonSystemFontLoading : 1;
  unsigned __int32 ReservedFlags : 30;
};

/* 2792 */
union _PROCESS_MITIGATION_FONT_DISABLE_POLICY___A466DDF007E94507B09CD23EE821B6F2
{
  DWORD Flags;
  struct
  {
    unsigned __int32 DisableNonSystemFonts : 1;
    unsigned __int32 AuditNonSystemFontLoading : 1;
    unsigned __int32 ReservedFlags : 30;
  };
};

/* 2790 */
struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 DisableNonSystemFonts : 1;
      unsigned __int32 AuditNonSystemFontLoading : 1;
      unsigned __int32 ReservedFlags : 30;
    };
  };
};

/* 2793 */
typedef _PROCESS_MITIGATION_FONT_DISABLE_POLICY PROCESS_MITIGATION_FONT_DISABLE_POLICY;

/* 2794 */
typedef _PROCESS_MITIGATION_FONT_DISABLE_POLICY *PPROCESS_MITIGATION_FONT_DISABLE_POLICY;

/* 2796 */
struct _9CBE11374487F3865B332FC10B1917E9
{
  unsigned __int32 NoRemoteImages : 1;
  unsigned __int32 NoLowMandatoryLabelImages : 1;
  unsigned __int32 PreferSystem32Images : 1;
  unsigned __int32 AuditNoRemoteImages : 1;
  unsigned __int32 AuditNoLowMandatoryLabelImages : 1;
  unsigned __int32 ReservedFlags : 27;
};

/* 2797 */
union _PROCESS_MITIGATION_IMAGE_LOAD_POLICY___F1DB64D83105ED650921E8060312C7D8
{
  DWORD Flags;
  struct
  {
    unsigned __int32 NoRemoteImages : 1;
    unsigned __int32 NoLowMandatoryLabelImages : 1;
    unsigned __int32 PreferSystem32Images : 1;
    unsigned __int32 AuditNoRemoteImages : 1;
    unsigned __int32 AuditNoLowMandatoryLabelImages : 1;
    unsigned __int32 ReservedFlags : 27;
  };
};

/* 2795 */
struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 NoRemoteImages : 1;
      unsigned __int32 NoLowMandatoryLabelImages : 1;
      unsigned __int32 PreferSystem32Images : 1;
      unsigned __int32 AuditNoRemoteImages : 1;
      unsigned __int32 AuditNoLowMandatoryLabelImages : 1;
      unsigned __int32 ReservedFlags : 27;
    };
  };
};

/* 2798 */
typedef _PROCESS_MITIGATION_IMAGE_LOAD_POLICY PROCESS_MITIGATION_IMAGE_LOAD_POLICY;

/* 2799 */
typedef _PROCESS_MITIGATION_IMAGE_LOAD_POLICY *PPROCESS_MITIGATION_IMAGE_LOAD_POLICY;

/* 2801 */
struct _EB76E570FF9173CCCE9422B212669AE9
{
  unsigned __int32 FilterId : 4;
  unsigned __int32 ReservedFlags : 28;
};

/* 2802 */
union _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY___4A990042AB6F435BCDDE2B1E73AF4442
{
  DWORD Flags;
  struct
  {
    unsigned __int32 FilterId : 4;
    unsigned __int32 ReservedFlags : 28;
  };
};

/* 2800 */
struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 FilterId : 4;
      unsigned __int32 ReservedFlags : 28;
    };
  };
};

/* 2803 */
typedef _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY;

/* 2804 */
typedef _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY *PPROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY;

/* 2806 */
struct _EE101F0F638C26522B1A81AB53DEE5B5
{
  unsigned __int32 EnableExportAddressFilter : 1;
  unsigned __int32 AuditExportAddressFilter : 1;
  unsigned __int32 EnableExportAddressFilterPlus : 1;
  unsigned __int32 AuditExportAddressFilterPlus : 1;
  unsigned __int32 EnableImportAddressFilter : 1;
  unsigned __int32 AuditImportAddressFilter : 1;
  unsigned __int32 EnableRopStackPivot : 1;
  unsigned __int32 AuditRopStackPivot : 1;
  unsigned __int32 EnableRopCallerCheck : 1;
  unsigned __int32 AuditRopCallerCheck : 1;
  unsigned __int32 EnableRopSimExec : 1;
  unsigned __int32 AuditRopSimExec : 1;
  unsigned __int32 ReservedFlags : 20;
};

/* 2807 */
union _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY___662A0C451AAED41D63A8BDF38CF1AF82
{
  DWORD Flags;
  struct
  {
    unsigned __int32 EnableExportAddressFilter : 1;
    unsigned __int32 AuditExportAddressFilter : 1;
    unsigned __int32 EnableExportAddressFilterPlus : 1;
    unsigned __int32 AuditExportAddressFilterPlus : 1;
    unsigned __int32 EnableImportAddressFilter : 1;
    unsigned __int32 AuditImportAddressFilter : 1;
    unsigned __int32 EnableRopStackPivot : 1;
    unsigned __int32 AuditRopStackPivot : 1;
    unsigned __int32 EnableRopCallerCheck : 1;
    unsigned __int32 AuditRopCallerCheck : 1;
    unsigned __int32 EnableRopSimExec : 1;
    unsigned __int32 AuditRopSimExec : 1;
    unsigned __int32 ReservedFlags : 20;
  };
};

/* 2805 */
struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 EnableExportAddressFilter : 1;
      unsigned __int32 AuditExportAddressFilter : 1;
      unsigned __int32 EnableExportAddressFilterPlus : 1;
      unsigned __int32 AuditExportAddressFilterPlus : 1;
      unsigned __int32 EnableImportAddressFilter : 1;
      unsigned __int32 AuditImportAddressFilter : 1;
      unsigned __int32 EnableRopStackPivot : 1;
      unsigned __int32 AuditRopStackPivot : 1;
      unsigned __int32 EnableRopCallerCheck : 1;
      unsigned __int32 AuditRopCallerCheck : 1;
      unsigned __int32 EnableRopSimExec : 1;
      unsigned __int32 AuditRopSimExec : 1;
      unsigned __int32 ReservedFlags : 20;
    };
  };
};

/* 2808 */
typedef _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY;

/* 2809 */
typedef _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY *PPROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY;

/* 2811 */
struct _E26BF190AEDEAEBDFA1411F4A18494DD
{
  unsigned __int32 NoChildProcessCreation : 1;
  unsigned __int32 AuditNoChildProcessCreation : 1;
  unsigned __int32 AllowSecureProcessCreation : 1;
  unsigned __int32 ReservedFlags : 29;
};

/* 2812 */
union _PROCESS_MITIGATION_CHILD_PROCESS_POLICY___1A60AB6814E02BE900E9811249F44F13
{
  DWORD Flags;
  struct
  {
    unsigned __int32 NoChildProcessCreation : 1;
    unsigned __int32 AuditNoChildProcessCreation : 1;
    unsigned __int32 AllowSecureProcessCreation : 1;
    unsigned __int32 ReservedFlags : 29;
  };
};

/* 2810 */
struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 NoChildProcessCreation : 1;
      unsigned __int32 AuditNoChildProcessCreation : 1;
      unsigned __int32 AllowSecureProcessCreation : 1;
      unsigned __int32 ReservedFlags : 29;
    };
  };
};

/* 2813 */
typedef _PROCESS_MITIGATION_CHILD_PROCESS_POLICY PROCESS_MITIGATION_CHILD_PROCESS_POLICY;

/* 2814 */
typedef _PROCESS_MITIGATION_CHILD_PROCESS_POLICY *PPROCESS_MITIGATION_CHILD_PROCESS_POLICY;

/* 2816 */
struct _C0C2FE754DCA8EA4F7B2DAD88EA93C70
{
  unsigned __int32 SmtBranchTargetIsolation : 1;
  unsigned __int32 IsolateSecurityDomain : 1;
  unsigned __int32 DisablePageCombine : 1;
  unsigned __int32 SpeculativeStoreBypassDisable : 1;
  unsigned __int32 ReservedFlags : 28;
};

/* 2817 */
union _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY___B3E481CD684705DFC321378EBAD5261E
{
  DWORD Flags;
  struct
  {
    unsigned __int32 SmtBranchTargetIsolation : 1;
    unsigned __int32 IsolateSecurityDomain : 1;
    unsigned __int32 DisablePageCombine : 1;
    unsigned __int32 SpeculativeStoreBypassDisable : 1;
    unsigned __int32 ReservedFlags : 28;
  };
};

/* 2815 */
struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 SmtBranchTargetIsolation : 1;
      unsigned __int32 IsolateSecurityDomain : 1;
      unsigned __int32 DisablePageCombine : 1;
      unsigned __int32 SpeculativeStoreBypassDisable : 1;
      unsigned __int32 ReservedFlags : 28;
    };
  };
};

/* 2818 */
typedef _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY;

/* 2819 */
typedef _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY *PPROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY;

/* 2821 */
struct _EF94547E2C3C64E7F73C980C5BD2F5D8
{
  unsigned __int32 EnableUserShadowStack : 1;
  unsigned __int32 AuditUserShadowStack : 1;
  unsigned __int32 SetContextIpValidation : 1;
  unsigned __int32 AuditSetContextIpValidation : 1;
  unsigned __int32 EnableUserShadowStackStrictMode : 1;
  unsigned __int32 BlockNonCetBinaries : 1;
  unsigned __int32 BlockNonCetBinariesNonEhcont : 1;
  unsigned __int32 AuditBlockNonCetBinaries : 1;
  unsigned __int32 CetDynamicApisOutOfProcOnly : 1;
  unsigned __int32 SetContextIpValidationRelaxedMode : 1;
  unsigned __int32 ReservedFlags : 22;
};

/* 2822 */
union _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY___5D8775A7512CE1BF8AA67C836AC34CF6
{
  DWORD Flags;
  struct
  {
    unsigned __int32 EnableUserShadowStack : 1;
    unsigned __int32 AuditUserShadowStack : 1;
    unsigned __int32 SetContextIpValidation : 1;
    unsigned __int32 AuditSetContextIpValidation : 1;
    unsigned __int32 EnableUserShadowStackStrictMode : 1;
    unsigned __int32 BlockNonCetBinaries : 1;
    unsigned __int32 BlockNonCetBinariesNonEhcont : 1;
    unsigned __int32 AuditBlockNonCetBinaries : 1;
    unsigned __int32 CetDynamicApisOutOfProcOnly : 1;
    unsigned __int32 SetContextIpValidationRelaxedMode : 1;
    unsigned __int32 ReservedFlags : 22;
  };
};

/* 2820 */
struct _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY
{
  union
  {
    DWORD Flags;
    struct
    {
      unsigned __int32 EnableUserShadowStack : 1;
      unsigned __int32 AuditUserShadowStack : 1;
      unsigned __int32 SetContextIpValidation : 1;
      unsigned __int32 AuditSetContextIpValidation : 1;
      unsigned __int32 EnableUserShadowStackStrictMode : 1;
      unsigned __int32 BlockNonCetBinaries : 1;
      unsigned __int32 BlockNonCetBinariesNonEhcont : 1;
      unsigned __int32 AuditBlockNonCetBinaries : 1;
      unsigned __int32 CetDynamicApisOutOfProcOnly : 1;
      unsigned __int32 SetContextIpValidationRelaxedMode : 1;
      unsigned __int32 ReservedFlags : 22;
    };
  };
};

/* 2823 */
typedef _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY;

/* 2824 */
typedef _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY *PPROCESS_MITIGATION_USER_SHADOW_STACK_POLICY;

/* 2825 */
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
{
  LARGE_INTEGER TotalUserTime;
  LARGE_INTEGER TotalKernelTime;
  LARGE_INTEGER ThisPeriodTotalUserTime;
  LARGE_INTEGER ThisPeriodTotalKernelTime;
  DWORD TotalPageFaultCount;
  DWORD TotalProcesses;
  DWORD ActiveProcesses;
  DWORD TotalTerminatedProcesses;
};

/* 2826 */
typedef _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

/* 2827 */
typedef _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

/* 2828 */
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION
{
  LARGE_INTEGER PerProcessUserTimeLimit;
  LARGE_INTEGER PerJobUserTimeLimit;
  DWORD LimitFlags;
  SIZE_T MinimumWorkingSetSize;
  SIZE_T MaximumWorkingSetSize;
  DWORD ActiveProcessLimit;
  ULONG_PTR Affinity;
  DWORD PriorityClass;
  DWORD SchedulingClass;
};

/* 2829 */
typedef _JOBOBJECT_BASIC_LIMIT_INFORMATION JOBOBJECT_BASIC_LIMIT_INFORMATION;

/* 2830 */
typedef _JOBOBJECT_BASIC_LIMIT_INFORMATION *PJOBOBJECT_BASIC_LIMIT_INFORMATION;

/* 2831 */
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION
{
  JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
  IO_COUNTERS IoInfo;
  SIZE_T ProcessMemoryLimit;
  SIZE_T JobMemoryLimit;
  SIZE_T PeakProcessMemoryUsed;
  SIZE_T PeakJobMemoryUsed;
};

/* 2832 */
typedef _JOBOBJECT_EXTENDED_LIMIT_INFORMATION JOBOBJECT_EXTENDED_LIMIT_INFORMATION;

/* 2833 */
typedef _JOBOBJECT_EXTENDED_LIMIT_INFORMATION *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;

/* 2834 */
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST
{
  DWORD NumberOfAssignedProcesses;
  DWORD NumberOfProcessIdsInList;
  ULONG_PTR ProcessIdList[1];
};

/* 2835 */
typedef _JOBOBJECT_BASIC_PROCESS_ID_LIST JOBOBJECT_BASIC_PROCESS_ID_LIST;

/* 2836 */
typedef _JOBOBJECT_BASIC_PROCESS_ID_LIST *PJOBOBJECT_BASIC_PROCESS_ID_LIST;

/* 2837 */
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS
{
  DWORD UIRestrictionsClass;
};

/* 2838 */
typedef _JOBOBJECT_BASIC_UI_RESTRICTIONS JOBOBJECT_BASIC_UI_RESTRICTIONS;

/* 2839 */
typedef _JOBOBJECT_BASIC_UI_RESTRICTIONS *PJOBOBJECT_BASIC_UI_RESTRICTIONS;

/* 2840 */
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION
{
  DWORD SecurityLimitFlags;
  HANDLE JobToken;
  PTOKEN_GROUPS SidsToDisable;
  PTOKEN_PRIVILEGES PrivilegesToDelete;
  PTOKEN_GROUPS RestrictedSids;
};

/* 2841 */
typedef _JOBOBJECT_SECURITY_LIMIT_INFORMATION JOBOBJECT_SECURITY_LIMIT_INFORMATION;

/* 2842 */
typedef _JOBOBJECT_SECURITY_LIMIT_INFORMATION *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;

/* 2843 */
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION
{
  DWORD EndOfJobTimeAction;
};

/* 2844 */
typedef _JOBOBJECT_END_OF_JOB_TIME_INFORMATION JOBOBJECT_END_OF_JOB_TIME_INFORMATION;

/* 2845 */
typedef _JOBOBJECT_END_OF_JOB_TIME_INFORMATION *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;

/* 2846 */
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT
{
  PVOID CompletionKey;
  HANDLE CompletionPort;
};

/* 2847 */
typedef _JOBOBJECT_ASSOCIATE_COMPLETION_PORT JOBOBJECT_ASSOCIATE_COMPLETION_PORT;

/* 2848 */
typedef _JOBOBJECT_ASSOCIATE_COMPLETION_PORT *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;

/* 2849 */
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
{
  JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  IO_COUNTERS IoInfo;
};

/* 2850 */
typedef _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

/* 2851 */
typedef _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

/* 2852 */
struct _JOBOBJECT_JOBSET_INFORMATION
{
  DWORD MemberLevel;
};

/* 2853 */
typedef _JOBOBJECT_JOBSET_INFORMATION JOBOBJECT_JOBSET_INFORMATION;

/* 2854 */
typedef _JOBOBJECT_JOBSET_INFORMATION *PJOBOBJECT_JOBSET_INFORMATION;

/* 2855 */
enum _JOBOBJECT_RATE_CONTROL_TOLERANCE : unsigned __int32
{
  ToleranceLow = 0x1,
  ToleranceMedium = 0x2,
  ToleranceHigh = 0x3,
};

/* 2856 */
typedef _JOBOBJECT_RATE_CONTROL_TOLERANCE JOBOBJECT_RATE_CONTROL_TOLERANCE;

/* 2857 */
typedef _JOBOBJECT_RATE_CONTROL_TOLERANCE *PJOBOBJECT_RATE_CONTROL_TOLERANCE;

/* 2858 */
enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL : unsigned __int32
{
  ToleranceIntervalShort = 0x1,
  ToleranceIntervalMedium = 0x2,
  ToleranceIntervalLong = 0x3,
};

/* 2859 */
typedef _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL;

/* 2860 */
typedef _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL *PJOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL;

/* 2861 */
struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION
{
  DWORD64 IoReadBytesLimit;
  DWORD64 IoWriteBytesLimit;
  LARGE_INTEGER PerJobUserTimeLimit;
  DWORD64 JobMemoryLimit;
  JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
  JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
  DWORD LimitFlags;
};

/* 2862 */
typedef _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION;

/* 2863 */
typedef _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION *PJOBOBJECT_NOTIFICATION_LIMIT_INFORMATION;

/* 2865 */
union JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2___24D5DC675E3913B8B06B55B4E2DB0C90
{
  DWORD64 JobHighMemoryLimit;
  DWORD64 JobMemoryLimit;
};

/* 2866 */
union JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2___7F0F891057759C60E9CD030D0A5BE1F8
{
  JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
  JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
};

/* 2867 */
union JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2___6DB75D7626B6ECEE1E30DEEE34E471B9
{
  JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
  JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL CpuRateControlToleranceInterval;
};

/* 2864 */
struct JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2
{
  DWORD64 IoReadBytesLimit;
  DWORD64 IoWriteBytesLimit;
  LARGE_INTEGER PerJobUserTimeLimit;
  union
  {
    DWORD64 JobHighMemoryLimit;
    DWORD64 JobMemoryLimit;
  };
  union
  {
    JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
  };
  union
  {
    JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
    JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL CpuRateControlToleranceInterval;
  };
  DWORD LimitFlags;
  JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlTolerance;
  DWORD64 JobLowMemoryLimit;
  JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL IoRateControlToleranceInterval;
  JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlTolerance;
  JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL NetRateControlToleranceInterval;
};

/* 2868 */
struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION
{
  DWORD LimitFlags;
  DWORD ViolationLimitFlags;
  DWORD64 IoReadBytes;
  DWORD64 IoReadBytesLimit;
  DWORD64 IoWriteBytes;
  DWORD64 IoWriteBytesLimit;
  LARGE_INTEGER PerJobUserTime;
  LARGE_INTEGER PerJobUserTimeLimit;
  DWORD64 JobMemory;
  DWORD64 JobMemoryLimit;
  JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
  JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
};

/* 2869 */
typedef _JOBOBJECT_LIMIT_VIOLATION_INFORMATION JOBOBJECT_LIMIT_VIOLATION_INFORMATION;

/* 2870 */
typedef _JOBOBJECT_LIMIT_VIOLATION_INFORMATION *PJOBOBJECT_LIMIT_VIOLATION_INFORMATION;

/* 2872 */
union JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2___24D5DC675E3913B8B06B55B4E2DB0C90
{
  DWORD64 JobHighMemoryLimit;
  DWORD64 JobMemoryLimit;
};

/* 2873 */
union JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2___7F0F891057759C60E9CD030D0A5BE1F8
{
  JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
  JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
};

/* 2874 */
union JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2___2A64B77520F2A34D7924D1A56C664C3F
{
  JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
  JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlToleranceLimit;
};

/* 2871 */
struct JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2
{
  DWORD LimitFlags;
  DWORD ViolationLimitFlags;
  DWORD64 IoReadBytes;
  DWORD64 IoReadBytesLimit;
  DWORD64 IoWriteBytes;
  DWORD64 IoWriteBytesLimit;
  LARGE_INTEGER PerJobUserTime;
  LARGE_INTEGER PerJobUserTimeLimit;
  DWORD64 JobMemory;
  union
  {
    DWORD64 JobHighMemoryLimit;
    DWORD64 JobMemoryLimit;
  };
  union
  {
    JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
  };
  union
  {
    JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
    JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlToleranceLimit;
  };
  DWORD64 JobLowMemoryLimit;
  JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlTolerance;
  JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlToleranceLimit;
  JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlTolerance;
  JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlToleranceLimit;
};

/* 2876 */
struct _0C012E7FB514E07FED75904D822698CF
{
  WORD MinRate;
  WORD MaxRate;
};

/* 2877 */
union _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION___0A78906577EB6A018A7D48DE378D86E6
{
  DWORD CpuRate;
  DWORD Weight;
  struct
  {
    WORD MinRate;
    WORD MaxRate;
  };
};

/* 2875 */
struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION
{
  DWORD ControlFlags;
  union
  {
    DWORD CpuRate;
    DWORD Weight;
    struct
    {
      WORD MinRate;
      WORD MaxRate;
    };
  };
};

/* 2878 */
typedef _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION JOBOBJECT_CPU_RATE_CONTROL_INFORMATION;

/* 2879 */
typedef _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION *PJOBOBJECT_CPU_RATE_CONTROL_INFORMATION;

/* 2880 */
enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS : unsigned __int32
{
  JOB_OBJECT_NET_RATE_CONTROL_ENABLE = 0x1,
  JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = 0x2,
  JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = 0x4,
  JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = 0x7,
};

/* 2881 */
typedef char __C_ASSERT__[1];

/* 2882 */
struct JOBOBJECT_NET_RATE_CONTROL_INFORMATION
{
  DWORD64 MaxBandwidth;
  JOB_OBJECT_NET_RATE_CONTROL_FLAGS ControlFlags;
  BYTE DscpTag;
};

/* 2883 */
enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS : unsigned __int32
{
  JOB_OBJECT_IO_RATE_CONTROL_ENABLE = 0x1,
  JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME = 0x2,
  JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL = 0x4,
  JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP = 0x8,
  JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = 0xF,
};

/* 2884 */
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE
{
  LONG64 MaxIops;
  LONG64 MaxBandwidth;
  LONG64 ReservationIops;
  PWSTR VolumeName;
  DWORD BaseIoSize;
  JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
  WORD VolumeNameLength;
};

/* 2885 */
typedef JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V1;

/* 2886 */
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2
{
  LONG64 MaxIops;
  LONG64 MaxBandwidth;
  LONG64 ReservationIops;
  PWSTR VolumeName;
  DWORD BaseIoSize;
  JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
  WORD VolumeNameLength;
  LONG64 CriticalReservationIops;
  LONG64 ReservationBandwidth;
  LONG64 CriticalReservationBandwidth;
  LONG64 MaxTimePercent;
  LONG64 ReservationTimePercent;
  LONG64 CriticalReservationTimePercent;
};

/* 2887 */
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3
{
  LONG64 MaxIops;
  LONG64 MaxBandwidth;
  LONG64 ReservationIops;
  PWSTR VolumeName;
  DWORD BaseIoSize;
  JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
  WORD VolumeNameLength;
  LONG64 CriticalReservationIops;
  LONG64 ReservationBandwidth;
  LONG64 CriticalReservationBandwidth;
  LONG64 MaxTimePercent;
  LONG64 ReservationTimePercent;
  LONG64 CriticalReservationTimePercent;
  LONG64 SoftMaxIops;
  LONG64 SoftMaxBandwidth;
  LONG64 SoftMaxTimePercent;
  LONG64 LimitExcessNotifyIops;
  LONG64 LimitExcessNotifyBandwidth;
  LONG64 LimitExcessNotifyTimePercent;
};

/* 2888 */
enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS : unsigned __int32
{
  JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE = 0x1,
  JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE = 0x2,
  JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS = 0x3,
};

/* 2889 */
struct _JOBOBJECT_IO_ATTRIBUTION_STATS
{
  ULONG_PTR IoCount;
  ULONGLONG TotalNonOverlappedQueueTime;
  ULONGLONG TotalNonOverlappedServiceTime;
  ULONGLONG TotalSize;
};

/* 2890 */
typedef _JOBOBJECT_IO_ATTRIBUTION_STATS JOBOBJECT_IO_ATTRIBUTION_STATS;

/* 2891 */
typedef _JOBOBJECT_IO_ATTRIBUTION_STATS *PJOBOBJECT_IO_ATTRIBUTION_STATS;

/* 2892 */
struct _JOBOBJECT_IO_ATTRIBUTION_INFORMATION
{
  DWORD ControlFlags;
  JOBOBJECT_IO_ATTRIBUTION_STATS ReadStats;
  JOBOBJECT_IO_ATTRIBUTION_STATS WriteStats;
};

/* 2893 */
typedef _JOBOBJECT_IO_ATTRIBUTION_INFORMATION JOBOBJECT_IO_ATTRIBUTION_INFORMATION;

/* 2894 */
typedef _JOBOBJECT_IO_ATTRIBUTION_INFORMATION *PJOBOBJECT_IO_ATTRIBUTION_INFORMATION;

/* 2895 */
enum _JOBOBJECTINFOCLASS : unsigned __int32
{
  JobObjectBasicAccountingInformation = 0x1,
  JobObjectBasicLimitInformation = 0x2,
  JobObjectBasicProcessIdList = 0x3,
  JobObjectBasicUIRestrictions = 0x4,
  JobObjectSecurityLimitInformation = 0x5,
  JobObjectEndOfJobTimeInformation = 0x6,
  JobObjectAssociateCompletionPortInformation = 0x7,
  JobObjectBasicAndIoAccountingInformation = 0x8,
  JobObjectExtendedLimitInformation = 0x9,
  JobObjectJobSetInformation = 0xA,
  JobObjectGroupInformation = 0xB,
  JobObjectNotificationLimitInformation = 0xC,
  JobObjectLimitViolationInformation = 0xD,
  JobObjectGroupInformationEx = 0xE,
  JobObjectCpuRateControlInformation = 0xF,
  JobObjectCompletionFilter = 0x10,
  JobObjectCompletionCounter = 0x11,
  JobObjectReserved1Information = 0x12,
  JobObjectReserved2Information = 0x13,
  JobObjectReserved3Information = 0x14,
  JobObjectReserved4Information = 0x15,
  JobObjectReserved5Information = 0x16,
  JobObjectReserved6Information = 0x17,
  JobObjectReserved7Information = 0x18,
  JobObjectReserved8Information = 0x19,
  JobObjectReserved9Information = 0x1A,
  JobObjectReserved10Information = 0x1B,
  JobObjectReserved11Information = 0x1C,
  JobObjectReserved12Information = 0x1D,
  JobObjectReserved13Information = 0x1E,
  JobObjectReserved14Information = 0x1F,
  JobObjectNetRateControlInformation = 0x20,
  JobObjectNotificationLimitInformation2 = 0x21,
  JobObjectLimitViolationInformation2 = 0x22,
  JobObjectCreateSilo = 0x23,
  JobObjectSiloBasicInformation = 0x24,
  JobObjectReserved15Information = 0x25,
  JobObjectReserved16Information = 0x26,
  JobObjectReserved17Information = 0x27,
  JobObjectReserved18Information = 0x28,
  JobObjectReserved19Information = 0x29,
  JobObjectReserved20Information = 0x2A,
  JobObjectReserved21Information = 0x2B,
  JobObjectReserved22Information = 0x2C,
  JobObjectReserved23Information = 0x2D,
  JobObjectReserved24Information = 0x2E,
  JobObjectReserved25Information = 0x2F,
  MaxJobObjectInfoClass = 0x30,
};

/* 2896 */
typedef _JOBOBJECTINFOCLASS JOBOBJECTINFOCLASS;

/* 2897 */
struct _SILOOBJECT_BASIC_INFORMATION
{
  DWORD SiloId;
  DWORD SiloParentId;
  DWORD NumberOfProcesses;
  BOOLEAN IsInServerSilo;
  BYTE Reserved[3];
};

/* 2898 */
typedef _SILOOBJECT_BASIC_INFORMATION SILOOBJECT_BASIC_INFORMATION;

/* 2899 */
typedef _SILOOBJECT_BASIC_INFORMATION *PSILOOBJECT_BASIC_INFORMATION;

/* 2900 */
enum _SERVERSILO_STATE : unsigned __int32
{
  SERVERSILO_INITING = 0x0,
  SERVERSILO_STARTED = 0x1,
  SERVERSILO_SHUTTING_DOWN = 0x2,
  SERVERSILO_TERMINATING = 0x3,
  SERVERSILO_TERMINATED = 0x4,
};

/* 2901 */
typedef _SERVERSILO_STATE SERVERSILO_STATE;

/* 2902 */
typedef _SERVERSILO_STATE *PSERVERSILO_STATE;

/* 2903 */
struct _SERVERSILO_BASIC_INFORMATION
{
  DWORD ServiceSessionId;
  SERVERSILO_STATE State;
  DWORD ExitStatus;
  BOOLEAN IsDownlevelContainer;
  PVOID ApiSetSchema;
  PVOID HostApiSetSchema;
};

/* 2904 */
typedef _SERVERSILO_BASIC_INFORMATION SERVERSILO_BASIC_INFORMATION;

/* 2905 */
typedef _SERVERSILO_BASIC_INFORMATION *PSERVERSILO_BASIC_INFORMATION;

/* 2906 */
enum _FIRMWARE_TYPE : unsigned __int32
{
  FirmwareTypeUnknown = 0x0,
  FirmwareTypeBios = 0x1,
  FirmwareTypeUefi = 0x2,
  FirmwareTypeMax = 0x3,
};

/* 2907 */
typedef _FIRMWARE_TYPE FIRMWARE_TYPE;

/* 2908 */
typedef _FIRMWARE_TYPE *PFIRMWARE_TYPE;

/* 2909 */
enum _LOGICAL_PROCESSOR_RELATIONSHIP : unsigned __int32
{
  RelationProcessorCore = 0x0,
  RelationNumaNode = 0x1,
  RelationCache = 0x2,
  RelationProcessorPackage = 0x3,
  RelationGroup = 0x4,
  RelationAll = 0xFFFF,
};

/* 2910 */
typedef _LOGICAL_PROCESSOR_RELATIONSHIP LOGICAL_PROCESSOR_RELATIONSHIP;

/* 2911 */
enum _PROCESSOR_CACHE_TYPE : unsigned __int32
{
  CacheUnified = 0x0,
  CacheInstruction = 0x1,
  CacheData = 0x2,
  CacheTrace = 0x3,
};

/* 2912 */
typedef _PROCESSOR_CACHE_TYPE PROCESSOR_CACHE_TYPE;

/* 2913 */
struct _CACHE_DESCRIPTOR
{
  BYTE Level;
  BYTE Associativity;
  WORD LineSize;
  DWORD Size;
  PROCESSOR_CACHE_TYPE Type;
};

/* 2914 */
typedef _CACHE_DESCRIPTOR CACHE_DESCRIPTOR;

/* 2915 */
typedef _CACHE_DESCRIPTOR *PCACHE_DESCRIPTOR;

/* 2917 */
struct _91BE8B12E17010F0620FEFDE5E6D353E
{
  BYTE Flags;
};

/* 2918 */
struct _3CDD4E41B95D6674BCA9CBF95BB4D431
{
  DWORD NodeNumber;
};

/* 2919 */
union _SYSTEM_LOGICAL_PROCESSOR_INFORMATION___A72591C6312B90667A3E1A9E7D6F3CE1
{
  _91BE8B12E17010F0620FEFDE5E6D353E ProcessorCore;
  _3CDD4E41B95D6674BCA9CBF95BB4D431 NumaNode;
  CACHE_DESCRIPTOR Cache;
  ULONGLONG Reserved[2];
};

/* 2916 */
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION
{
  ULONG_PTR ProcessorMask;
  LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  union
  {
    _91BE8B12E17010F0620FEFDE5E6D353E ProcessorCore;
    _3CDD4E41B95D6674BCA9CBF95BB4D431 NumaNode;
    CACHE_DESCRIPTOR Cache;
    ULONGLONG Reserved[2];
  };
};

/* 2920 */
typedef _SYSTEM_LOGICAL_PROCESSOR_INFORMATION SYSTEM_LOGICAL_PROCESSOR_INFORMATION;

/* 2921 */
typedef _SYSTEM_LOGICAL_PROCESSOR_INFORMATION *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;

/* 2922 */
struct _PROCESSOR_RELATIONSHIP
{
  BYTE Flags;
  BYTE EfficiencyClass;
  BYTE Reserved[20];
  WORD GroupCount;
  GROUP_AFFINITY GroupMask[1];
};

/* 2923 */
typedef _PROCESSOR_RELATIONSHIP PROCESSOR_RELATIONSHIP;

/* 2924 */
typedef _PROCESSOR_RELATIONSHIP *PPROCESSOR_RELATIONSHIP;

/* 2925 */
struct _NUMA_NODE_RELATIONSHIP
{
  DWORD NodeNumber;
  BYTE Reserved[20];
  GROUP_AFFINITY GroupMask;
};

/* 2926 */
typedef _NUMA_NODE_RELATIONSHIP NUMA_NODE_RELATIONSHIP;

/* 2927 */
typedef _NUMA_NODE_RELATIONSHIP *PNUMA_NODE_RELATIONSHIP;

/* 2928 */
struct _CACHE_RELATIONSHIP
{
  BYTE Level;
  BYTE Associativity;
  WORD LineSize;
  DWORD CacheSize;
  PROCESSOR_CACHE_TYPE Type;
  BYTE Reserved[20];
  GROUP_AFFINITY GroupMask;
};

/* 2929 */
typedef _CACHE_RELATIONSHIP CACHE_RELATIONSHIP;

/* 2930 */
typedef _CACHE_RELATIONSHIP *PCACHE_RELATIONSHIP;

/* 2931 */
struct _PROCESSOR_GROUP_INFO
{
  BYTE MaximumProcessorCount;
  BYTE ActiveProcessorCount;
  BYTE Reserved[38];
  KAFFINITY ActiveProcessorMask;
};

/* 2932 */
typedef _PROCESSOR_GROUP_INFO PROCESSOR_GROUP_INFO;

/* 2933 */
typedef _PROCESSOR_GROUP_INFO *PPROCESSOR_GROUP_INFO;

/* 2934 */
struct _GROUP_RELATIONSHIP
{
  WORD MaximumGroupCount;
  WORD ActiveGroupCount;
  BYTE Reserved[20];
  PROCESSOR_GROUP_INFO GroupInfo[1];
};

/* 2935 */
typedef _GROUP_RELATIONSHIP GROUP_RELATIONSHIP;

/* 2936 */
typedef _GROUP_RELATIONSHIP *PGROUP_RELATIONSHIP;

/* 2938 */
union _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX___197D4A2D4E66A1B805F54436C362DBE8
{
  PROCESSOR_RELATIONSHIP Processor;
  NUMA_NODE_RELATIONSHIP NumaNode;
  CACHE_RELATIONSHIP Cache;
  GROUP_RELATIONSHIP Group;
};

/* 2937 */
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
{
  LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  DWORD Size;
  union
  {
    PROCESSOR_RELATIONSHIP Processor;
    NUMA_NODE_RELATIONSHIP NumaNode;
    CACHE_RELATIONSHIP Cache;
    GROUP_RELATIONSHIP Group;
  };
};

/* 2939 */
typedef _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;

/* 2940 */
typedef _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;

/* 2941 */
enum _CPU_SET_INFORMATION_TYPE : unsigned __int32
{
  CpuSetInformation = 0x0,
};

/* 2942 */
typedef _CPU_SET_INFORMATION_TYPE CPU_SET_INFORMATION_TYPE;

/* 2943 */
typedef _CPU_SET_INFORMATION_TYPE *PCPU_SET_INFORMATION_TYPE;

/* 2945 */
struct _E2FC796E7F2D840DF2C457E32E2CE7FB
{
  unsigned __int8 Parked : 1;
  unsigned __int8 Allocated : 1;
  unsigned __int8 AllocatedToTargetProcess : 1;
  unsigned __int8 RealTime : 1;
  unsigned __int8 ReservedFlags : 4;
};

/* 2946 */
union _657BB06EF05633356CF4CD431076EE5F
{
  BYTE AllFlags;
  struct
  {
    unsigned __int8 Parked : 1;
    unsigned __int8 Allocated : 1;
    unsigned __int8 AllocatedToTargetProcess : 1;
    unsigned __int8 RealTime : 1;
    unsigned __int8 ReservedFlags : 4;
  };
};

/* 2947 */
union _737796C66F638B60D7AE7CF23E72B833
{
  DWORD Reserved;
  BYTE SchedulingClass;
};

/* 2948 */
struct _F655080F086C2BFA46941FA1A6DAACEC
{
  DWORD Id;
  WORD Group;
  BYTE LogicalProcessorIndex;
  BYTE CoreIndex;
  BYTE LastLevelCacheIndex;
  BYTE NumaNodeIndex;
  BYTE EfficiencyClass;
  union
  {
    BYTE AllFlags;
    struct
    {
      unsigned __int8 Parked : 1;
      unsigned __int8 Allocated : 1;
      unsigned __int8 AllocatedToTargetProcess : 1;
      unsigned __int8 RealTime : 1;
      unsigned __int8 ReservedFlags : 4;
    };
  };
  union
  {
    DWORD Reserved;
    BYTE SchedulingClass;
  };
  DWORD64 AllocationTag;
};

/* 2949 */
union _SYSTEM_CPU_SET_INFORMATION___4C07F9F4DAD68F59647F76D6630D6FCA
{
  _F655080F086C2BFA46941FA1A6DAACEC CpuSet;
};

/* 2944 */
struct _SYSTEM_CPU_SET_INFORMATION
{
  DWORD Size;
  CPU_SET_INFORMATION_TYPE Type;
  union
  {
    _F655080F086C2BFA46941FA1A6DAACEC CpuSet;
  };
};

/* 2950 */
typedef _SYSTEM_CPU_SET_INFORMATION SYSTEM_CPU_SET_INFORMATION;

/* 2951 */
typedef _SYSTEM_CPU_SET_INFORMATION *PSYSTEM_CPU_SET_INFORMATION;

/* 2952 */
struct _SYSTEM_POOL_ZEROING_INFORMATION
{
  BOOLEAN PoolZeroingSupportPresent;
};

/* 2953 */
typedef _SYSTEM_POOL_ZEROING_INFORMATION SYSTEM_POOL_ZEROING_INFORMATION;

/* 2954 */
typedef _SYSTEM_POOL_ZEROING_INFORMATION *PSYSTEM_POOL_ZEROING_INFORMATION;

/* 2955 */
struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
{
  DWORD64 CycleTime;
};

/* 2956 */
typedef _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;

/* 2957 */
typedef _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION *PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;

/* 2958 */
struct _XSTATE_FEATURE
{
  DWORD Offset;
  DWORD Size;
};

/* 2959 */
typedef _XSTATE_FEATURE XSTATE_FEATURE;

/* 2960 */
typedef _XSTATE_FEATURE *PXSTATE_FEATURE;

/* 2962 */
struct _62654262369868C0312B20411168132E
{
  unsigned __int32 OptimizedSave : 1;
  unsigned __int32 CompactionEnabled : 1;
};

/* 2963 */
union _XSTATE_CONFIGURATION___0E174CAD3789465778ACEBD04EE85B1A
{
  DWORD ControlFlags;
  struct
  {
    unsigned __int32 OptimizedSave : 1;
    unsigned __int32 CompactionEnabled : 1;
  };
};

/* 2961 */
struct _XSTATE_CONFIGURATION
{
  DWORD64 EnabledFeatures;
  DWORD64 EnabledVolatileFeatures;
  DWORD Size;
  union
  {
    DWORD ControlFlags;
    struct
    {
      unsigned __int32 OptimizedSave : 1;
      unsigned __int32 CompactionEnabled : 1;
    };
  };
  XSTATE_FEATURE Features[64];
  DWORD64 EnabledSupervisorFeatures;
  DWORD64 AlignedFeatures;
  DWORD AllFeatureSize;
  DWORD AllFeatures[64];
  DWORD64 EnabledUserVisibleSupervisorFeatures;
};

/* 2964 */
typedef _XSTATE_CONFIGURATION XSTATE_CONFIGURATION;

/* 2965 */
typedef _XSTATE_CONFIGURATION *PXSTATE_CONFIGURATION;

/* 2966 */
struct _MEMORY_BASIC_INFORMATION
{
  PVOID BaseAddress;
  PVOID AllocationBase;
  DWORD AllocationProtect;
  WORD PartitionId;
  SIZE_T RegionSize;
  DWORD State;
  DWORD Protect;
  DWORD Type;
};

/* 2967 */
typedef _MEMORY_BASIC_INFORMATION MEMORY_BASIC_INFORMATION;

/* 2968 */
typedef _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;

/* 2969 */
struct _MEMORY_BASIC_INFORMATION32
{
  DWORD BaseAddress;
  DWORD AllocationBase;
  DWORD AllocationProtect;
  DWORD RegionSize;
  DWORD State;
  DWORD Protect;
  DWORD Type;
};

/* 2970 */
typedef _MEMORY_BASIC_INFORMATION32 MEMORY_BASIC_INFORMATION32;

/* 2971 */
typedef _MEMORY_BASIC_INFORMATION32 *PMEMORY_BASIC_INFORMATION32;

/* 2972 */
struct __declspec(align(16)) _MEMORY_BASIC_INFORMATION64
{
  ULONGLONG BaseAddress;
  ULONGLONG AllocationBase;
  DWORD AllocationProtect;
  DWORD __alignment1;
  ULONGLONG RegionSize;
  DWORD State;
  DWORD Protect;
  DWORD Type;
  DWORD __alignment2;
};

/* 2973 */
typedef _MEMORY_BASIC_INFORMATION64 MEMORY_BASIC_INFORMATION64;

/* 2974 */
typedef _MEMORY_BASIC_INFORMATION64 *PMEMORY_BASIC_INFORMATION64;

/* 2975 */
struct _CFG_CALL_TARGET_INFO
{
  ULONG_PTR Offset;
  ULONG_PTR Flags;
};

/* 2976 */
typedef _CFG_CALL_TARGET_INFO CFG_CALL_TARGET_INFO;

/* 2977 */
typedef _CFG_CALL_TARGET_INFO *PCFG_CALL_TARGET_INFO;

/* 2978 */
struct _MEM_ADDRESS_REQUIREMENTS
{
  PVOID LowestStartingAddress;
  PVOID HighestEndingAddress;
  SIZE_T Alignment;
};

/* 2979 */
typedef _MEM_ADDRESS_REQUIREMENTS MEM_ADDRESS_REQUIREMENTS;

/* 2980 */
typedef _MEM_ADDRESS_REQUIREMENTS *PMEM_ADDRESS_REQUIREMENTS;

/* 2981 */
enum MEM_EXTENDED_PARAMETER_TYPE : unsigned __int32
{
  MemExtendedParameterInvalidType = 0x0,
  MemExtendedParameterAddressRequirements = 0x1,
  MemExtendedParameterNumaNode = 0x2,
  MemExtendedParameterPartitionHandle = 0x3,
  MemExtendedParameterUserPhysicalHandle = 0x4,
  MemExtendedParameterAttributeFlags = 0x5,
  MemExtendedParameterMax = 0x6,
};

/* 2982 */
typedef MEM_EXTENDED_PARAMETER_TYPE *PMEM_EXTENDED_PARAMETER_TYPE;

/* 2984 */
struct MEM_EXTENDED_PARAMETER___373F0C482CA2C07D4A7B2B94C5EA8081
{
  unsigned __int64 Type : 8;
  unsigned __int64 Reserved : 56;
};

/* 2985 */
union MEM_EXTENDED_PARAMETER___A0403279FD043597B1263DCA6F7108AC
{
  DWORD64 ULong64;
  PVOID Pointer;
  SIZE_T Size;
  HANDLE Handle;
  DWORD ULong;
};

/* 2983 */
struct __declspec(align(8)) MEM_EXTENDED_PARAMETER
{
  struct
  {
    unsigned __int64 Type : 8;
    unsigned __int64 Reserved : 56;
  };
  union
  {
    DWORD64 ULong64;
    PVOID Pointer;
    SIZE_T Size;
    HANDLE Handle;
    DWORD ULong;
  };
};

/* 2986 */
typedef MEM_EXTENDED_PARAMETER *PMEM_EXTENDED_PARAMETER;

/* 2987 */
enum MEM_SECTION_EXTENDED_PARAMETER_TYPE : unsigned __int32
{
  MemSectionExtendedParameterInvalidType = 0x0,
  MemSectionExtendedParameterUserPhysicalFlags = 0x1,
  MemSectionExtendedParameterNumaNode = 0x2,
  MemSectionExtendedParameterMax = 0x3,
};

/* 2988 */
typedef MEM_SECTION_EXTENDED_PARAMETER_TYPE *PMEM_SECTION_EXTENDED_PARAMETER_TYPE;

/* 2989 */
struct _ENCLAVE_CREATE_INFO_SGX
{
  BYTE Secs[4096];
};

/* 2990 */
typedef _ENCLAVE_CREATE_INFO_SGX ENCLAVE_CREATE_INFO_SGX;

/* 2991 */
typedef _ENCLAVE_CREATE_INFO_SGX *PENCLAVE_CREATE_INFO_SGX;

/* 2992 */
struct _ENCLAVE_INIT_INFO_SGX
{
  BYTE SigStruct[1808];
  BYTE Reserved1[240];
  BYTE EInitToken[304];
  BYTE Reserved2[1744];
};

/* 2993 */
typedef _ENCLAVE_INIT_INFO_SGX ENCLAVE_INIT_INFO_SGX;

/* 2994 */
typedef _ENCLAVE_INIT_INFO_SGX *PENCLAVE_INIT_INFO_SGX;

/* 2995 */
struct _ENCLAVE_CREATE_INFO_VBS
{
  DWORD Flags;
  BYTE OwnerID[32];
};

/* 2996 */
typedef _ENCLAVE_CREATE_INFO_VBS ENCLAVE_CREATE_INFO_VBS;

/* 2997 */
typedef _ENCLAVE_CREATE_INFO_VBS *PENCLAVE_CREATE_INFO_VBS;

/* 2998 */
struct _ENCLAVE_CREATE_INFO_VBS_BASIC
{
  DWORD Flags;
  BYTE OwnerID[32];
};

/* 2999 */
typedef _ENCLAVE_CREATE_INFO_VBS_BASIC ENCLAVE_CREATE_INFO_VBS_BASIC;

/* 3000 */
typedef _ENCLAVE_CREATE_INFO_VBS_BASIC *PENCLAVE_CREATE_INFO_VBS_BASIC;

/* 3001 */
struct _ENCLAVE_LOAD_DATA_VBS_BASIC
{
  DWORD PageType;
};

/* 3002 */
typedef _ENCLAVE_LOAD_DATA_VBS_BASIC ENCLAVE_LOAD_DATA_VBS_BASIC;

/* 3003 */
typedef _ENCLAVE_LOAD_DATA_VBS_BASIC *PENCLAVE_LOAD_DATA_VBS_BASIC;

/* 3005 */
union _ENCLAVE_INIT_INFO_VBS_BASIC___E986470CD2C6DC02ADF7706A4698918A
{
  HANDLE SignatureInfoHandle;
  ULONGLONG Unused;
};

/* 3004 */
struct _ENCLAVE_INIT_INFO_VBS_BASIC
{
  BYTE FamilyId[16];
  BYTE ImageId[16];
  ULONGLONG EnclaveSize;
  DWORD EnclaveSvn;
  DWORD Reserved;
  union
  {
    HANDLE SignatureInfoHandle;
    ULONGLONG Unused;
  };
};

/* 3006 */
typedef _ENCLAVE_INIT_INFO_VBS_BASIC ENCLAVE_INIT_INFO_VBS_BASIC;

/* 3007 */
typedef _ENCLAVE_INIT_INFO_VBS_BASIC *PENCLAVE_INIT_INFO_VBS_BASIC;

/* 3008 */
struct _ENCLAVE_INIT_INFO_VBS
{
  DWORD Length;
  DWORD ThreadCount;
};

/* 3009 */
typedef _ENCLAVE_INIT_INFO_VBS ENCLAVE_INIT_INFO_VBS;

/* 3010 */
typedef _ENCLAVE_INIT_INFO_VBS *PENCLAVE_INIT_INFO_VBS;

/* 3011 */
typedef PVOID __cdecl ENCLAVE_TARGET_FUNCTION(PVOID);

/* 3012 */
typedef ENCLAVE_TARGET_FUNCTION *PENCLAVE_TARGET_FUNCTION;

/* 3013 */
typedef PENCLAVE_TARGET_FUNCTION LPENCLAVE_TARGET_FUNCTION;

/* 3014 */
struct _FILE_ID_128
{
  BYTE Identifier[16];
};

/* 3015 */
typedef _FILE_ID_128 FILE_ID_128;

/* 3016 */
typedef _FILE_ID_128 *PFILE_ID_128;

/* 3017 */
struct _FILE_NOTIFY_INFORMATION
{
  DWORD NextEntryOffset;
  DWORD Action;
  DWORD FileNameLength;
  WCHAR FileName[1];
};

/* 3018 */
typedef _FILE_NOTIFY_INFORMATION FILE_NOTIFY_INFORMATION;

/* 3019 */
typedef _FILE_NOTIFY_INFORMATION *PFILE_NOTIFY_INFORMATION;

/* 3020 */
struct _FILE_NOTIFY_EXTENDED_INFORMATION
{
  DWORD NextEntryOffset;
  DWORD Action;
  LARGE_INTEGER CreationTime;
  LARGE_INTEGER LastModificationTime;
  LARGE_INTEGER LastChangeTime;
  LARGE_INTEGER LastAccessTime;
  LARGE_INTEGER AllocatedLength;
  LARGE_INTEGER FileSize;
  DWORD FileAttributes;
  DWORD ReparsePointTag;
  LARGE_INTEGER FileId;
  LARGE_INTEGER ParentFileId;
  DWORD FileNameLength;
  WCHAR FileName[1];
};

/* 3021 */
typedef _FILE_NOTIFY_EXTENDED_INFORMATION FILE_NOTIFY_EXTENDED_INFORMATION;

/* 3022 */
typedef _FILE_NOTIFY_EXTENDED_INFORMATION *PFILE_NOTIFY_EXTENDED_INFORMATION;

/* 3023 */
union _FILE_SEGMENT_ELEMENT
{
  void *Buffer;
  ULONGLONG Alignment;
};

/* 3024 */
typedef _FILE_SEGMENT_ELEMENT FILE_SEGMENT_ELEMENT;

/* 3025 */
typedef _FILE_SEGMENT_ELEMENT *PFILE_SEGMENT_ELEMENT;

/* 3027 */
struct _REPARSE_GUID_DATA_BUFFER___4C09336C782BA41E0611EC60EFCB5A31
{
  BYTE DataBuffer[1];
};

/* 3026 */
struct _REPARSE_GUID_DATA_BUFFER
{
  DWORD ReparseTag;
  WORD ReparseDataLength;
  WORD Reserved;
  GUID ReparseGuid;
  _REPARSE_GUID_DATA_BUFFER___4C09336C782BA41E0611EC60EFCB5A31 GenericReparseBuffer;
};

/* 3028 */
typedef _REPARSE_GUID_DATA_BUFFER REPARSE_GUID_DATA_BUFFER;

/* 3029 */
typedef _REPARSE_GUID_DATA_BUFFER *PREPARSE_GUID_DATA_BUFFER;

/* 3030 */
struct _SCRUB_DATA_INPUT
{
  DWORD Size;
  DWORD Flags;
  DWORD MaximumIos;
  DWORD ObjectId[4];
  DWORD Reserved[25];
  BYTE ResumeContext[816];
};

/* 3031 */
typedef _SCRUB_DATA_INPUT SCRUB_DATA_INPUT;

/* 3032 */
typedef _SCRUB_DATA_INPUT *PSCRUB_DATA_INPUT;

/* 3033 */
struct _SCRUB_PARITY_EXTENT
{
  LONGLONG Offset;
  ULONGLONG Length;
};

/* 3034 */
typedef _SCRUB_PARITY_EXTENT SCRUB_PARITY_EXTENT;

/* 3035 */
typedef _SCRUB_PARITY_EXTENT *PSCRUB_PARITY_EXTENT;

/* 3036 */
struct _SCRUB_PARITY_EXTENT_DATA
{
  WORD Size;
  WORD Flags;
  WORD NumberOfParityExtents;
  WORD MaximumNumberOfParityExtents;
  SCRUB_PARITY_EXTENT ParityExtents[1];
};

/* 3037 */
typedef _SCRUB_PARITY_EXTENT_DATA SCRUB_PARITY_EXTENT_DATA;

/* 3038 */
typedef _SCRUB_PARITY_EXTENT_DATA *PSCRUB_PARITY_EXTENT_DATA;

/* 3039 */
struct _SCRUB_DATA_OUTPUT
{
  DWORD Size;
  DWORD Flags;
  DWORD Status;
  ULONGLONG ErrorFileOffset;
  ULONGLONG ErrorLength;
  ULONGLONG NumberOfBytesRepaired;
  ULONGLONG NumberOfBytesFailed;
  ULONGLONG InternalFileReference;
  WORD ResumeContextLength;
  WORD ParityExtentDataOffset;
  DWORD Reserved[9];
  ULONGLONG NumberOfMetadataBytesProcessed;
  ULONGLONG NumberOfDataBytesProcessed;
  ULONGLONG TotalNumberOfMetadataBytesInUse;
  ULONGLONG TotalNumberOfDataBytesInUse;
  BYTE ResumeContext[816];
};

/* 3040 */
typedef _SCRUB_DATA_OUTPUT SCRUB_DATA_OUTPUT;

/* 3041 */
typedef _SCRUB_DATA_OUTPUT *PSCRUB_DATA_OUTPUT;

/* 3042 */
enum _SharedVirtualDiskSupportType : unsigned __int32
{
  SharedVirtualDisksUnsupported = 0x0,
  SharedVirtualDisksSupported = 0x1,
  SharedVirtualDiskSnapshotsSupported = 0x3,
  SharedVirtualDiskCDPSnapshotsSupported = 0x7,
};

/* 3043 */
typedef _SharedVirtualDiskSupportType SharedVirtualDiskSupportType;

/* 3044 */
enum _SharedVirtualDiskHandleState : unsigned __int32
{
  SharedVirtualDiskHandleStateNone = 0x0,
  SharedVirtualDiskHandleStateFileShared = 0x1,
  SharedVirtualDiskHandleStateHandleShared = 0x3,
};

/* 3045 */
typedef _SharedVirtualDiskHandleState SharedVirtualDiskHandleState;

/* 3046 */
struct _SHARED_VIRTUAL_DISK_SUPPORT
{
  SharedVirtualDiskSupportType SharedVirtualDiskSupport;
  SharedVirtualDiskHandleState HandleState;
};

/* 3047 */
typedef _SHARED_VIRTUAL_DISK_SUPPORT SHARED_VIRTUAL_DISK_SUPPORT;

/* 3048 */
typedef _SHARED_VIRTUAL_DISK_SUPPORT *PSHARED_VIRTUAL_DISK_SUPPORT;

/* 3049 */
struct _REARRANGE_FILE_DATA
{
  ULONGLONG SourceStartingOffset;
  ULONGLONG TargetOffset;
  HANDLE SourceFileHandle;
  DWORD Length;
  DWORD Flags;
};

/* 3050 */
typedef _REARRANGE_FILE_DATA REARRANGE_FILE_DATA;

/* 3051 */
typedef _REARRANGE_FILE_DATA *PREARRANGE_FILE_DATA;

/* 3052 */
struct _REARRANGE_FILE_DATA32
{
  ULONGLONG SourceStartingOffset;
  ULONGLONG TargetOffset;
  UINT32 SourceFileHandle;
  DWORD Length;
  DWORD Flags;
};

/* 3053 */
typedef _REARRANGE_FILE_DATA32 REARRANGE_FILE_DATA32;

/* 3054 */
typedef _REARRANGE_FILE_DATA32 *PREARRANGE_FILE_DATA32;

/* 3055 */
struct _SHUFFLE_FILE_DATA
{
  LONGLONG StartingOffset;
  LONGLONG Length;
  DWORD Flags;
};

/* 3056 */
typedef _SHUFFLE_FILE_DATA SHUFFLE_FILE_DATA;

/* 3057 */
typedef _SHUFFLE_FILE_DATA *PSHUFFLE_FILE_DATA;

/* 3058 */
struct _NETWORK_APP_INSTANCE_EA
{
  GUID AppInstanceID;
  DWORD CsvFlags;
};

/* 3059 */
typedef _NETWORK_APP_INSTANCE_EA NETWORK_APP_INSTANCE_EA;

/* 3060 */
typedef _NETWORK_APP_INSTANCE_EA *PNETWORK_APP_INSTANCE_EA;

/* 3061 */
enum _SYSTEM_POWER_STATE : unsigned __int32
{
  PowerSystemUnspecified = 0x0,
  PowerSystemWorking = 0x1,
  PowerSystemSleeping1 = 0x2,
  PowerSystemSleeping2 = 0x3,
  PowerSystemSleeping3 = 0x4,
  PowerSystemHibernate = 0x5,
  PowerSystemShutdown = 0x6,
  PowerSystemMaximum = 0x7,
};

/* 3062 */
typedef _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;

/* 3063 */
typedef _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;

/* 3064 */
enum POWER_ACTION : unsigned __int32
{
  PowerActionNone = 0x0,
  PowerActionReserved = 0x1,
  PowerActionSleep = 0x2,
  PowerActionHibernate = 0x3,
  PowerActionShutdown = 0x4,
  PowerActionShutdownReset = 0x5,
  PowerActionShutdownOff = 0x6,
  PowerActionWarmEject = 0x7,
  PowerActionDisplayOff = 0x8,
};

/* 3065 */
typedef POWER_ACTION *PPOWER_ACTION;

/* 3066 */
enum _DEVICE_POWER_STATE : unsigned __int32
{
  PowerDeviceUnspecified = 0x0,
  PowerDeviceD0 = 0x1,
  PowerDeviceD1 = 0x2,
  PowerDeviceD2 = 0x3,
  PowerDeviceD3 = 0x4,
  PowerDeviceMaximum = 0x5,
};

/* 3067 */
typedef _DEVICE_POWER_STATE DEVICE_POWER_STATE;

/* 3068 */
typedef _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;

/* 3069 */
enum _MONITOR_DISPLAY_STATE : unsigned __int32
{
  PowerMonitorOff = 0x0,
  PowerMonitorOn = 0x1,
  PowerMonitorDim = 0x2,
};

/* 3070 */
typedef _MONITOR_DISPLAY_STATE MONITOR_DISPLAY_STATE;

/* 3071 */
typedef _MONITOR_DISPLAY_STATE *PMONITOR_DISPLAY_STATE;

/* 3072 */
enum _USER_ACTIVITY_PRESENCE : unsigned __int32
{
  PowerUserPresent = 0x0,
  PowerUserNotPresent = 0x1,
  PowerUserInactive = 0x2,
  PowerUserMaximum = 0x3,
  PowerUserInvalid = 0x3,
};

/* 3073 */
typedef _USER_ACTIVITY_PRESENCE USER_ACTIVITY_PRESENCE;

/* 3074 */
typedef _USER_ACTIVITY_PRESENCE *PUSER_ACTIVITY_PRESENCE;

/* 3075 */
typedef DWORD EXECUTION_STATE;

/* 3076 */
typedef DWORD *PEXECUTION_STATE;

/* 3077 */
enum LATENCY_TIME : unsigned __int32
{
  LT_DONT_CARE = 0x0,
  LT_LOWEST_LATENCY = 0x1,
};

/* 3078 */
enum _POWER_REQUEST_TYPE : unsigned __int32
{
  PowerRequestDisplayRequired = 0x0,
  PowerRequestSystemRequired = 0x1,
  PowerRequestAwayModeRequired = 0x2,
  PowerRequestExecutionRequired = 0x3,
};

/* 3079 */
typedef _POWER_REQUEST_TYPE POWER_REQUEST_TYPE;

/* 3080 */
typedef _POWER_REQUEST_TYPE *PPOWER_REQUEST_TYPE;

/* 3081 */
struct CM_Power_Data_s
{
  DWORD PD_Size;
  DEVICE_POWER_STATE PD_MostRecentPowerState;
  DWORD PD_Capabilities;
  DWORD PD_D1Latency;
  DWORD PD_D2Latency;
  DWORD PD_D3Latency;
  DEVICE_POWER_STATE PD_PowerStateMapping[7];
  SYSTEM_POWER_STATE PD_DeepestSystemWake;
};

/* 3082 */
typedef CM_Power_Data_s CM_POWER_DATA;

/* 3083 */
typedef CM_Power_Data_s *PCM_POWER_DATA;

/* 3084 */
enum POWER_INFORMATION_LEVEL : unsigned __int32
{
  SystemPowerPolicyAc = 0x0,
  SystemPowerPolicyDc = 0x1,
  VerifySystemPolicyAc = 0x2,
  VerifySystemPolicyDc = 0x3,
  SystemPowerCapabilities = 0x4,
  SystemBatteryState = 0x5,
  SystemPowerStateHandler = 0x6,
  ProcessorStateHandler = 0x7,
  SystemPowerPolicyCurrent = 0x8,
  AdministratorPowerPolicy = 0x9,
  SystemReserveHiberFile = 0xA,
  ProcessorInformation = 0xB,
  SystemPowerInformation = 0xC,
  ProcessorStateHandler2 = 0xD,
  LastWakeTime = 0xE,
  LastSleepTime = 0xF,
  SystemExecutionState = 0x10,
  SystemPowerStateNotifyHandler = 0x11,
  ProcessorPowerPolicyAc = 0x12,
  ProcessorPowerPolicyDc = 0x13,
  VerifyProcessorPowerPolicyAc = 0x14,
  VerifyProcessorPowerPolicyDc = 0x15,
  ProcessorPowerPolicyCurrent = 0x16,
  SystemPowerStateLogging = 0x17,
  SystemPowerLoggingEntry = 0x18,
  SetPowerSettingValue = 0x19,
  NotifyUserPowerSetting = 0x1A,
  PowerInformationLevelUnused0 = 0x1B,
  SystemMonitorHiberBootPowerOff = 0x1C,
  SystemVideoState = 0x1D,
  TraceApplicationPowerMessage = 0x1E,
  TraceApplicationPowerMessageEnd = 0x1F,
  ProcessorPerfStates = 0x20,
  ProcessorIdleStates = 0x21,
  ProcessorCap = 0x22,
  SystemWakeSource = 0x23,
  SystemHiberFileInformation = 0x24,
  TraceServicePowerMessage = 0x25,
  ProcessorLoad = 0x26,
  PowerShutdownNotification = 0x27,
  MonitorCapabilities = 0x28,
  SessionPowerInit = 0x29,
  SessionDisplayState = 0x2A,
  PowerRequestCreate = 0x2B,
  PowerRequestAction = 0x2C,
  GetPowerRequestList = 0x2D,
  ProcessorInformationEx = 0x2E,
  NotifyUserModeLegacyPowerEvent = 0x2F,
  GroupPark = 0x30,
  ProcessorIdleDomains = 0x31,
  WakeTimerList = 0x32,
  SystemHiberFileSize = 0x33,
  ProcessorIdleStatesHv = 0x34,
  ProcessorPerfStatesHv = 0x35,
  ProcessorPerfCapHv = 0x36,
  ProcessorSetIdle = 0x37,
  LogicalProcessorIdling = 0x38,
  UserPresence = 0x39,
  PowerSettingNotificationName = 0x3A,
  GetPowerSettingValue = 0x3B,
  IdleResiliency = 0x3C,
  SessionRITState = 0x3D,
  SessionConnectNotification = 0x3E,
  SessionPowerCleanup = 0x3F,
  SessionLockState = 0x40,
  SystemHiberbootState = 0x41,
  PlatformInformation = 0x42,
  PdcInvocation = 0x43,
  MonitorInvocation = 0x44,
  FirmwareTableInformationRegistered = 0x45,
  SetShutdownSelectedTime = 0x46,
  SuspendResumeInvocation = 0x47,
  PlmPowerRequestCreate = 0x48,
  ScreenOff = 0x49,
  CsDeviceNotification = 0x4A,
  PlatformRole = 0x4B,
  LastResumePerformance = 0x4C,
  DisplayBurst = 0x4D,
  ExitLatencySamplingPercentage = 0x4E,
  RegisterSpmPowerSettings = 0x4F,
  PlatformIdleStates = 0x50,
  ProcessorIdleVeto = 0x51,
  PlatformIdleVeto = 0x52,
  SystemBatteryStatePrecise = 0x53,
  ThermalEvent = 0x54,
  PowerRequestActionInternal = 0x55,
  BatteryDeviceState = 0x56,
  PowerInformationInternal = 0x57,
  ThermalStandby = 0x58,
  SystemHiberFileType = 0x59,
  PhysicalPowerButtonPress = 0x5A,
  QueryPotentialDripsConstraint = 0x5B,
  EnergyTrackerCreate = 0x5C,
  EnergyTrackerQuery = 0x5D,
  UpdateBlackBoxRecorder = 0x5E,
  SessionAllowExternalDmaDevices = 0x5F,
  PowerInformationLevelMaximum = 0x60,
};

/* 3085 */
enum POWER_USER_PRESENCE_TYPE : unsigned __int32
{
  UserNotPresent = 0x0,
  UserPresent = 0x1,
  UserUnknown = 0xFF,
};

/* 3086 */
typedef POWER_USER_PRESENCE_TYPE *PPOWER_USER_PRESENCE_TYPE;

/* 3087 */
struct _POWER_USER_PRESENCE
{
  POWER_USER_PRESENCE_TYPE UserPresence;
};

/* 3088 */
typedef _POWER_USER_PRESENCE POWER_USER_PRESENCE;

/* 3089 */
typedef _POWER_USER_PRESENCE *PPOWER_USER_PRESENCE;

/* 3090 */
struct _POWER_SESSION_CONNECT
{
  BOOLEAN Connected;
  BOOLEAN Console;
};

/* 3091 */
typedef _POWER_SESSION_CONNECT POWER_SESSION_CONNECT;

/* 3092 */
typedef _POWER_SESSION_CONNECT *PPOWER_SESSION_CONNECT;

/* 3093 */
struct _POWER_SESSION_TIMEOUTS
{
  DWORD InputTimeout;
  DWORD DisplayTimeout;
};

/* 3094 */
typedef _POWER_SESSION_TIMEOUTS POWER_SESSION_TIMEOUTS;

/* 3095 */
typedef _POWER_SESSION_TIMEOUTS *PPOWER_SESSION_TIMEOUTS;

/* 3096 */
struct _POWER_SESSION_RIT_STATE
{
  BOOLEAN Active;
  DWORD LastInputTime;
};

/* 3097 */
typedef _POWER_SESSION_RIT_STATE POWER_SESSION_RIT_STATE;

/* 3098 */
typedef _POWER_SESSION_RIT_STATE *PPOWER_SESSION_RIT_STATE;

/* 3099 */
struct _POWER_SESSION_WINLOGON
{
  DWORD SessionId;
  BOOLEAN Console;
  BOOLEAN Locked;
};

/* 3100 */
typedef _POWER_SESSION_WINLOGON POWER_SESSION_WINLOGON;

/* 3101 */
typedef _POWER_SESSION_WINLOGON *PPOWER_SESSION_WINLOGON;

/* 3102 */
struct _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES
{
  BOOLEAN IsAllowed;
};

/* 3103 */
typedef _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES;

/* 3104 */
typedef _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES *PPOWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES;

/* 3105 */
struct _POWER_IDLE_RESILIENCY
{
  DWORD CoalescingTimeout;
  DWORD IdleResiliencyPeriod;
};

/* 3106 */
typedef _POWER_IDLE_RESILIENCY POWER_IDLE_RESILIENCY;

/* 3107 */
typedef _POWER_IDLE_RESILIENCY *PPOWER_IDLE_RESILIENCY;

/* 3108 */
enum POWER_MONITOR_REQUEST_REASON : unsigned __int32
{
  MonitorRequestReasonUnknown = 0x0,
  MonitorRequestReasonPowerButton = 0x1,
  MonitorRequestReasonRemoteConnection = 0x2,
  MonitorRequestReasonScMonitorpower = 0x3,
  MonitorRequestReasonUserInput = 0x4,
  MonitorRequestReasonAcDcDisplayBurst = 0x5,
  MonitorRequestReasonUserDisplayBurst = 0x6,
  MonitorRequestReasonPoSetSystemState = 0x7,
  MonitorRequestReasonSetThreadExecutionState = 0x8,
  MonitorRequestReasonFullWake = 0x9,
  MonitorRequestReasonSessionUnlock = 0xA,
  MonitorRequestReasonScreenOffRequest = 0xB,
  MonitorRequestReasonIdleTimeout = 0xC,
  MonitorRequestReasonPolicyChange = 0xD,
  MonitorRequestReasonSleepButton = 0xE,
  MonitorRequestReasonLid = 0xF,
  MonitorRequestReasonBatteryCountChange = 0x10,
  MonitorRequestReasonGracePeriod = 0x11,
  MonitorRequestReasonPnP = 0x12,
  MonitorRequestReasonDP = 0x13,
  MonitorRequestReasonSxTransition = 0x14,
  MonitorRequestReasonSystemIdle = 0x15,
  MonitorRequestReasonNearProximity = 0x16,
  MonitorRequestReasonThermalStandby = 0x17,
  MonitorRequestReasonResumePdc = 0x18,
  MonitorRequestReasonResumeS4 = 0x19,
  MonitorRequestReasonTerminal = 0x1A,
  MonitorRequestReasonPdcSignal = 0x1B,
  MonitorRequestReasonAcDcDisplayBurstSuppressed = 0x1C,
  MonitorRequestReasonSystemStateEntered = 0x1D,
  MonitorRequestReasonWinrt = 0x1E,
  MonitorRequestReasonUserInputKeyboard = 0x1F,
  MonitorRequestReasonUserInputMouse = 0x20,
  MonitorRequestReasonUserInputTouch = 0x21,
  MonitorRequestReasonUserInputPen = 0x22,
  MonitorRequestReasonUserInputAccelerometer = 0x23,
  MonitorRequestReasonUserInputHid = 0x24,
  MonitorRequestReasonUserInputPoUserPresent = 0x25,
  MonitorRequestReasonUserInputSessionSwitch = 0x26,
  MonitorRequestReasonUserInputInitialization = 0x27,
  MonitorRequestReasonPdcSignalWindowsMobilePwrNotif = 0x28,
  MonitorRequestReasonPdcSignalWindowsMobileShell = 0x29,
  MonitorRequestReasonPdcSignalHeyCortana = 0x2A,
  MonitorRequestReasonPdcSignalHolographicShell = 0x2B,
  MonitorRequestReasonPdcSignalFingerprint = 0x2C,
  MonitorRequestReasonDirectedDrips = 0x2D,
  MonitorRequestReasonDim = 0x2E,
  MonitorRequestReasonBuiltinPanel = 0x2F,
  MonitorRequestReasonDisplayRequiredUnDim = 0x30,
  MonitorRequestReasonBatteryCountChangeSuppressed = 0x31,
  MonitorRequestReasonResumeModernStandby = 0x32,
  MonitorRequestReasonMax = 0x33,
};

/* 3109 */
enum _POWER_MONITOR_REQUEST_TYPE : unsigned __int32
{
  MonitorRequestTypeOff = 0x0,
  MonitorRequestTypeOnAndPresent = 0x1,
  MonitorRequestTypeToggleOn = 0x2,
};

/* 3110 */
typedef _POWER_MONITOR_REQUEST_TYPE POWER_MONITOR_REQUEST_TYPE;

/* 3111 */
struct _POWER_MONITOR_INVOCATION
{
  BOOLEAN Console;
  POWER_MONITOR_REQUEST_REASON RequestReason;
};

/* 3112 */
typedef _POWER_MONITOR_INVOCATION POWER_MONITOR_INVOCATION;

/* 3113 */
typedef _POWER_MONITOR_INVOCATION *PPOWER_MONITOR_INVOCATION;

/* 3114 */
struct _RESUME_PERFORMANCE
{
  DWORD PostTimeMs;
  ULONGLONG TotalResumeTimeMs;
  ULONGLONG ResumeCompleteTimestamp;
};

/* 3115 */
typedef _RESUME_PERFORMANCE RESUME_PERFORMANCE;

/* 3116 */
typedef _RESUME_PERFORMANCE *PRESUME_PERFORMANCE;

/* 3117 */
enum SYSTEM_POWER_CONDITION : unsigned __int32
{
  PoAc = 0x0,
  PoDc = 0x1,
  PoHot = 0x2,
  PoConditionMaximum = 0x3,
};

/* 3118 */
struct SET_POWER_SETTING_VALUE
{
  DWORD Version;
  GUID Guid;
  SYSTEM_POWER_CONDITION PowerCondition;
  DWORD DataLength;
  BYTE Data[1];
};

/* 3119 */
typedef SET_POWER_SETTING_VALUE *PSET_POWER_SETTING_VALUE;

/* 3120 */
struct NOTIFY_USER_POWER_SETTING
{
  GUID Guid;
};

/* 3121 */
typedef NOTIFY_USER_POWER_SETTING *PNOTIFY_USER_POWER_SETTING;

/* 3122 */
struct _APPLICATIONLAUNCH_SETTING_VALUE
{
  LARGE_INTEGER ActivationTime;
  DWORD Flags;
  DWORD ButtonInstanceID;
};

/* 3123 */
typedef _APPLICATIONLAUNCH_SETTING_VALUE APPLICATIONLAUNCH_SETTING_VALUE;

/* 3124 */
typedef _APPLICATIONLAUNCH_SETTING_VALUE *PAPPLICATIONLAUNCH_SETTING_VALUE;

/* 3125 */
enum _POWER_PLATFORM_ROLE : unsigned __int32
{
  PlatformRoleUnspecified = 0x0,
  PlatformRoleDesktop = 0x1,
  PlatformRoleMobile = 0x2,
  PlatformRoleWorkstation = 0x3,
  PlatformRoleEnterpriseServer = 0x4,
  PlatformRoleSOHOServer = 0x5,
  PlatformRoleAppliancePC = 0x6,
  PlatformRolePerformanceServer = 0x7,
  PlatformRoleSlate = 0x8,
  PlatformRoleMaximum = 0x9,
};

/* 3126 */
typedef _POWER_PLATFORM_ROLE POWER_PLATFORM_ROLE;

/* 3127 */
typedef _POWER_PLATFORM_ROLE *PPOWER_PLATFORM_ROLE;

/* 3128 */
struct _POWER_PLATFORM_INFORMATION
{
  BOOLEAN AoAc;
};

/* 3129 */
typedef _POWER_PLATFORM_INFORMATION POWER_PLATFORM_INFORMATION;

/* 3130 */
typedef _POWER_PLATFORM_INFORMATION *PPOWER_PLATFORM_INFORMATION;

/* 3131 */
struct BATTERY_REPORTING_SCALE
{
  DWORD Granularity;
  DWORD Capacity;
};

/* 3132 */
typedef BATTERY_REPORTING_SCALE *PBATTERY_REPORTING_SCALE;

/* 3133 */
struct PPM_WMI_LEGACY_PERFSTATE
{
  DWORD Frequency;
  DWORD Flags;
  DWORD PercentFrequency;
};

/* 3134 */
typedef PPM_WMI_LEGACY_PERFSTATE *PPPM_WMI_LEGACY_PERFSTATE;

/* 3135 */
struct PPM_WMI_IDLE_STATE
{
  DWORD Latency;
  DWORD Power;
  DWORD TimeCheck;
  BYTE PromotePercent;
  BYTE DemotePercent;
  BYTE StateType;
  BYTE Reserved;
  DWORD StateFlags;
  DWORD Context;
  DWORD IdleHandler;
  DWORD Reserved1;
};

/* 3136 */
typedef PPM_WMI_IDLE_STATE *PPPM_WMI_IDLE_STATE;

/* 3137 */
struct PPM_WMI_IDLE_STATES
{
  DWORD Type;
  DWORD Count;
  DWORD TargetState;
  DWORD OldState;
  DWORD64 TargetProcessors;
  PPM_WMI_IDLE_STATE State[1];
};

/* 3138 */
typedef PPM_WMI_IDLE_STATES *PPPM_WMI_IDLE_STATES;

/* 3139 */
struct PPM_WMI_IDLE_STATES_EX
{
  DWORD Type;
  DWORD Count;
  DWORD TargetState;
  DWORD OldState;
  PVOID TargetProcessors;
  PPM_WMI_IDLE_STATE State[1];
};

/* 3140 */
typedef PPM_WMI_IDLE_STATES_EX *PPPM_WMI_IDLE_STATES_EX;

/* 3141 */
struct PPM_WMI_PERF_STATE
{
  DWORD Frequency;
  DWORD Power;
  BYTE PercentFrequency;
  BYTE IncreaseLevel;
  BYTE DecreaseLevel;
  BYTE Type;
  DWORD IncreaseTime;
  DWORD DecreaseTime;
  DWORD64 Control;
  DWORD64 Status;
  DWORD HitCount;
  DWORD Reserved1;
  DWORD64 Reserved2;
  DWORD64 Reserved3;
};

/* 3142 */
typedef PPM_WMI_PERF_STATE *PPPM_WMI_PERF_STATE;

/* 3143 */
struct PPM_WMI_PERF_STATES
{
  DWORD Count;
  DWORD MaxFrequency;
  DWORD CurrentState;
  DWORD MaxPerfState;
  DWORD MinPerfState;
  DWORD LowestPerfState;
  DWORD ThermalConstraint;
  BYTE BusyAdjThreshold;
  BYTE PolicyType;
  BYTE Type;
  BYTE Reserved;
  DWORD TimerInterval;
  DWORD64 TargetProcessors;
  DWORD PStateHandler;
  DWORD PStateContext;
  DWORD TStateHandler;
  DWORD TStateContext;
  DWORD FeedbackHandler;
  DWORD Reserved1;
  DWORD64 Reserved2;
  PPM_WMI_PERF_STATE State[1];
};

/* 3144 */
typedef PPM_WMI_PERF_STATES *PPPM_WMI_PERF_STATES;

/* 3145 */
struct PPM_WMI_PERF_STATES_EX
{
  DWORD Count;
  DWORD MaxFrequency;
  DWORD CurrentState;
  DWORD MaxPerfState;
  DWORD MinPerfState;
  DWORD LowestPerfState;
  DWORD ThermalConstraint;
  BYTE BusyAdjThreshold;
  BYTE PolicyType;
  BYTE Type;
  BYTE Reserved;
  DWORD TimerInterval;
  PVOID TargetProcessors;
  DWORD PStateHandler;
  DWORD PStateContext;
  DWORD TStateHandler;
  DWORD TStateContext;
  DWORD FeedbackHandler;
  DWORD Reserved1;
  DWORD64 Reserved2;
  PPM_WMI_PERF_STATE State[1];
};

/* 3146 */
typedef PPM_WMI_PERF_STATES_EX *PPPM_WMI_PERF_STATES_EX;

/* 3147 */
struct PPM_IDLE_STATE_ACCOUNTING
{
  DWORD IdleTransitions;
  DWORD FailedTransitions;
  DWORD InvalidBucketIndex;
  DWORD64 TotalTime;
  DWORD IdleTimeBuckets[6];
};

/* 3148 */
typedef PPM_IDLE_STATE_ACCOUNTING *PPPM_IDLE_STATE_ACCOUNTING;

/* 3149 */
struct PPM_IDLE_ACCOUNTING
{
  DWORD StateCount;
  DWORD TotalTransitions;
  DWORD ResetCount;
  DWORD64 StartTime;
  PPM_IDLE_STATE_ACCOUNTING State[1];
};

/* 3150 */
typedef PPM_IDLE_ACCOUNTING *PPPM_IDLE_ACCOUNTING;

/* 3151 */
struct PPM_IDLE_STATE_BUCKET_EX
{
  DWORD64 TotalTimeUs;
  DWORD MinTimeUs;
  DWORD MaxTimeUs;
  DWORD Count;
};

/* 3152 */
typedef PPM_IDLE_STATE_BUCKET_EX *PPPM_IDLE_STATE_BUCKET_EX;

/* 3153 */
struct PPM_IDLE_STATE_ACCOUNTING_EX
{
  DWORD64 TotalTime;
  DWORD IdleTransitions;
  DWORD FailedTransitions;
  DWORD InvalidBucketIndex;
  DWORD MinTimeUs;
  DWORD MaxTimeUs;
  DWORD CancelledTransitions;
  PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[16];
};

/* 3154 */
typedef PPM_IDLE_STATE_ACCOUNTING_EX *PPPM_IDLE_STATE_ACCOUNTING_EX;

/* 3155 */
struct PPM_IDLE_ACCOUNTING_EX
{
  DWORD StateCount;
  DWORD TotalTransitions;
  DWORD ResetCount;
  DWORD AbortCount;
  DWORD64 StartTime;
  PPM_IDLE_STATE_ACCOUNTING_EX State[1];
};

/* 3156 */
typedef PPM_IDLE_ACCOUNTING_EX *PPPM_IDLE_ACCOUNTING_EX;

/* 3157 */
struct PPM_PERFSTATE_EVENT
{
  DWORD State;
  DWORD Status;
  DWORD Latency;
  DWORD Speed;
  DWORD Processor;
};

/* 3158 */
typedef PPM_PERFSTATE_EVENT *PPPM_PERFSTATE_EVENT;

/* 3159 */
struct PPM_PERFSTATE_DOMAIN_EVENT
{
  DWORD State;
  DWORD Latency;
  DWORD Speed;
  DWORD64 Processors;
};

/* 3160 */
typedef PPM_PERFSTATE_DOMAIN_EVENT *PPPM_PERFSTATE_DOMAIN_EVENT;

/* 3161 */
struct PPM_IDLESTATE_EVENT
{
  DWORD NewState;
  DWORD OldState;
  DWORD64 Processors;
};

/* 3162 */
typedef PPM_IDLESTATE_EVENT *PPPM_IDLESTATE_EVENT;

/* 3163 */
struct PPM_THERMALCHANGE_EVENT
{
  DWORD ThermalConstraint;
  DWORD64 Processors;
};

/* 3164 */
typedef PPM_THERMALCHANGE_EVENT *PPPM_THERMALCHANGE_EVENT;

/* 3165 */
struct PPM_THERMAL_POLICY_EVENT
{
  BYTE Mode;
  DWORD64 Processors;
};

/* 3166 */
typedef PPM_THERMAL_POLICY_EVENT *PPPM_THERMAL_POLICY_EVENT;

/* 3167 */
struct POWER_ACTION_POLICY
{
  POWER_ACTION Action;
  DWORD Flags;
  DWORD EventCode;
};

/* 3168 */
typedef POWER_ACTION_POLICY *PPOWER_ACTION_POLICY;

/* 3169 */
struct SYSTEM_POWER_LEVEL
{
  BOOLEAN Enable;
  BYTE Spare[3];
  DWORD BatteryLevel;
  POWER_ACTION_POLICY PowerPolicy;
  SYSTEM_POWER_STATE MinSystemState;
};

/* 3170 */
typedef SYSTEM_POWER_LEVEL *PSYSTEM_POWER_LEVEL;

/* 3171 */
struct _SYSTEM_POWER_POLICY
{
  DWORD Revision;
  POWER_ACTION_POLICY PowerButton;
  POWER_ACTION_POLICY SleepButton;
  POWER_ACTION_POLICY LidClose;
  SYSTEM_POWER_STATE LidOpenWake;
  DWORD Reserved;
  POWER_ACTION_POLICY Idle;
  DWORD IdleTimeout;
  BYTE IdleSensitivity;
  BYTE DynamicThrottle;
  BYTE Spare2[2];
  SYSTEM_POWER_STATE MinSleep;
  SYSTEM_POWER_STATE MaxSleep;
  SYSTEM_POWER_STATE ReducedLatencySleep;
  DWORD WinLogonFlags;
  DWORD Spare3;
  DWORD DozeS4Timeout;
  DWORD BroadcastCapacityResolution;
  SYSTEM_POWER_LEVEL DischargePolicy[4];
  DWORD VideoTimeout;
  BOOLEAN VideoDimDisplay;
  DWORD VideoReserved[3];
  DWORD SpindownTimeout;
  BOOLEAN OptimizeForPower;
  BYTE FanThrottleTolerance;
  BYTE ForcedThrottle;
  BYTE MinThrottle;
  POWER_ACTION_POLICY OverThrottled;
};

/* 3172 */
typedef _SYSTEM_POWER_POLICY SYSTEM_POWER_POLICY;

/* 3173 */
typedef _SYSTEM_POWER_POLICY *PSYSTEM_POWER_POLICY;

/* 3174 */
struct PROCESSOR_IDLESTATE_INFO
{
  DWORD TimeCheck;
  BYTE DemotePercent;
  BYTE PromotePercent;
  BYTE Spare[2];
};

/* 3175 */
typedef PROCESSOR_IDLESTATE_INFO *PPROCESSOR_IDLESTATE_INFO;

/* 3177 */
struct _12EDD93CAC4208332C3108DBB4839320
{
  unsigned __int16 AllowScaling : 1;
  unsigned __int16 Disabled : 1;
  unsigned __int16 Reserved : 14;
};

/* 3178 */
union PROCESSOR_IDLESTATE_POLICY___92CEA922AA6C5711F3A617A61DD3E595
{
  WORD AsWORD;
  struct
  {
    unsigned __int16 AllowScaling : 1;
    unsigned __int16 Disabled : 1;
    unsigned __int16 Reserved : 14;
  };
};

/* 3176 */
struct PROCESSOR_IDLESTATE_POLICY
{
  WORD Revision;
  PROCESSOR_IDLESTATE_POLICY___92CEA922AA6C5711F3A617A61DD3E595 Flags;
  DWORD PolicyCount;
  PROCESSOR_IDLESTATE_INFO Policy[3];
};

/* 3179 */
typedef PROCESSOR_IDLESTATE_POLICY *PPROCESSOR_IDLESTATE_POLICY;

/* 3180 */
struct _PROCESSOR_POWER_POLICY_INFO
{
  DWORD TimeCheck;
  DWORD DemoteLimit;
  DWORD PromoteLimit;
  BYTE DemotePercent;
  BYTE PromotePercent;
  BYTE Spare[2];
  unsigned __int32 AllowDemotion : 1;
  unsigned __int32 AllowPromotion : 1;
  unsigned __int32 Reserved : 30;
};

/* 3181 */
typedef _PROCESSOR_POWER_POLICY_INFO PROCESSOR_POWER_POLICY_INFO;

/* 3182 */
typedef _PROCESSOR_POWER_POLICY_INFO *PPROCESSOR_POWER_POLICY_INFO;

/* 3183 */
struct _PROCESSOR_POWER_POLICY
{
  DWORD Revision;
  BYTE DynamicThrottle;
  BYTE Spare[3];
  unsigned __int32 DisableCStates : 1;
  unsigned __int32 Reserved : 31;
  DWORD PolicyCount;
  PROCESSOR_POWER_POLICY_INFO Policy[3];
};

/* 3184 */
typedef _PROCESSOR_POWER_POLICY PROCESSOR_POWER_POLICY;

/* 3185 */
typedef _PROCESSOR_POWER_POLICY *PPROCESSOR_POWER_POLICY;

/* 3187 */
struct _006192E8E41FD8F2EA1B27D51D7CA475
{
  unsigned __int8 NoDomainAccounting : 1;
  unsigned __int8 IncreasePolicy : 2;
  unsigned __int8 DecreasePolicy : 2;
  unsigned __int8 Reserved : 3;
};

/* 3188 */
union _CDD487EB51D46C5701426B2D522638C3
{
  BYTE AsBYTE;
  struct
  {
    unsigned __int8 NoDomainAccounting : 1;
    unsigned __int8 IncreasePolicy : 2;
    unsigned __int8 DecreasePolicy : 2;
    unsigned __int8 Reserved : 3;
  };
};

/* 3189 */
union PROCESSOR_PERFSTATE_POLICY___023BDF5A3E405C5FDBB98FDB10D7DC6F
{
  BYTE Spare;
  _CDD487EB51D46C5701426B2D522638C3 Flags;
};

/* 3186 */
struct PROCESSOR_PERFSTATE_POLICY
{
  DWORD Revision;
  BYTE MaxThrottle;
  BYTE MinThrottle;
  BYTE BusyAdjThreshold;
  union
  {
    BYTE Spare;
    _CDD487EB51D46C5701426B2D522638C3 Flags;
  };
  DWORD TimeCheck;
  DWORD IncreaseTime;
  DWORD DecreaseTime;
  DWORD IncreasePercent;
  DWORD DecreasePercent;
};

/* 3190 */
typedef PROCESSOR_PERFSTATE_POLICY *PPROCESSOR_PERFSTATE_POLICY;

/* 3191 */
struct _ADMINISTRATOR_POWER_POLICY
{
  SYSTEM_POWER_STATE MinSleep;
  SYSTEM_POWER_STATE MaxSleep;
  DWORD MinVideoTimeout;
  DWORD MaxVideoTimeout;
  DWORD MinSpindownTimeout;
  DWORD MaxSpindownTimeout;
};

/* 3192 */
typedef _ADMINISTRATOR_POWER_POLICY ADMINISTRATOR_POWER_POLICY;

/* 3193 */
typedef _ADMINISTRATOR_POWER_POLICY *PADMINISTRATOR_POWER_POLICY;

/* 3194 */
enum _HIBERFILE_BUCKET_SIZE : unsigned __int32
{
  HiberFileBucket1GB = 0x0,
  HiberFileBucket2GB = 0x1,
  HiberFileBucket4GB = 0x2,
  HiberFileBucket8GB = 0x3,
  HiberFileBucket16GB = 0x4,
  HiberFileBucket32GB = 0x5,
  HiberFileBucketUnlimited = 0x6,
  HiberFileBucketMax = 0x7,
};

/* 3195 */
typedef _HIBERFILE_BUCKET_SIZE HIBERFILE_BUCKET_SIZE;

/* 3196 */
typedef _HIBERFILE_BUCKET_SIZE *PHIBERFILE_BUCKET_SIZE;

/* 3197 */
struct _HIBERFILE_BUCKET
{
  DWORD64 MaxPhysicalMemory;
  DWORD PhysicalMemoryPercent[3];
};

/* 3198 */
typedef _HIBERFILE_BUCKET HIBERFILE_BUCKET;

/* 3199 */
typedef _HIBERFILE_BUCKET *PHIBERFILE_BUCKET;

/* 3200 */
struct SYSTEM_POWER_CAPABILITIES
{
  BOOLEAN PowerButtonPresent;
  BOOLEAN SleepButtonPresent;
  BOOLEAN LidPresent;
  BOOLEAN SystemS1;
  BOOLEAN SystemS2;
  BOOLEAN SystemS3;
  BOOLEAN SystemS4;
  BOOLEAN SystemS5;
  BOOLEAN HiberFilePresent;
  BOOLEAN FullWake;
  BOOLEAN VideoDimPresent;
  BOOLEAN ApmPresent;
  BOOLEAN UpsPresent;
  BOOLEAN ThermalControl;
  BOOLEAN ProcessorThrottle;
  BYTE ProcessorMinThrottle;
  BYTE ProcessorMaxThrottle;
  BOOLEAN FastSystemS4;
  BOOLEAN Hiberboot;
  BOOLEAN WakeAlarmPresent;
  BOOLEAN AoAc;
  BOOLEAN DiskSpinDown;
  BYTE HiberFileType;
  BOOLEAN AoAcConnectivitySupported;
  BYTE spare3[6];
  BOOLEAN SystemBatteriesPresent;
  BOOLEAN BatteriesAreShortTerm;
  BATTERY_REPORTING_SCALE BatteryScale[3];
  SYSTEM_POWER_STATE AcOnLineWake;
  SYSTEM_POWER_STATE SoftLidWake;
  SYSTEM_POWER_STATE RtcWake;
  SYSTEM_POWER_STATE MinDeviceWakeState;
  SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

/* 3201 */
typedef SYSTEM_POWER_CAPABILITIES *PSYSTEM_POWER_CAPABILITIES;

/* 3202 */
struct SYSTEM_BATTERY_STATE
{
  BOOLEAN AcOnLine;
  BOOLEAN BatteryPresent;
  BOOLEAN Charging;
  BOOLEAN Discharging;
  BOOLEAN Spare1[3];
  BYTE Tag;
  DWORD MaxCapacity;
  DWORD RemainingCapacity;
  DWORD Rate;
  DWORD EstimatedTime;
  DWORD DefaultAlert1;
  DWORD DefaultAlert2;
};

/* 3203 */
typedef SYSTEM_BATTERY_STATE *PSYSTEM_BATTERY_STATE;

/* 3204 */
#pragma pack(push, 2)
struct _IMAGE_DOS_HEADER
{
  WORD e_magic;
  WORD e_cblp;
  WORD e_cp;
  WORD e_crlc;
  WORD e_cparhdr;
  WORD e_minalloc;
  WORD e_maxalloc;
  WORD e_ss;
  WORD e_sp;
  WORD e_csum;
  WORD e_ip;
  WORD e_cs;
  WORD e_lfarlc;
  WORD e_ovno;
  WORD e_res[4];
  WORD e_oemid;
  WORD e_oeminfo;
  WORD e_res2[10];
  LONG e_lfanew;
};
#pragma pack(pop)

/* 3205 */
typedef _IMAGE_DOS_HEADER IMAGE_DOS_HEADER;

/* 3206 */
typedef _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;

/* 3207 */
#pragma pack(push, 2)
struct _IMAGE_OS2_HEADER
{
  WORD ne_magic;
  CHAR ne_ver;
  CHAR ne_rev;
  WORD ne_enttab;
  WORD ne_cbenttab;
  LONG ne_crc;
  WORD ne_flags;
  WORD ne_autodata;
  WORD ne_heap;
  WORD ne_stack;
  LONG ne_csip;
  LONG ne_sssp;
  WORD ne_cseg;
  WORD ne_cmod;
  WORD ne_cbnrestab;
  WORD ne_segtab;
  WORD ne_rsrctab;
  WORD ne_restab;
  WORD ne_modtab;
  WORD ne_imptab;
  LONG ne_nrestab;
  WORD ne_cmovent;
  WORD ne_align;
  WORD ne_cres;
  BYTE ne_exetyp;
  BYTE ne_flagsothers;
  WORD ne_pretthunks;
  WORD ne_psegrefbytes;
  WORD ne_swaparea;
  WORD ne_expver;
};
#pragma pack(pop)

/* 3208 */
typedef _IMAGE_OS2_HEADER IMAGE_OS2_HEADER;

/* 3209 */
typedef _IMAGE_OS2_HEADER *PIMAGE_OS2_HEADER;

/* 3210 */
#pragma pack(push, 2)
struct _IMAGE_VXD_HEADER
{
  WORD e32_magic;
  BYTE e32_border;
  BYTE e32_worder;
  DWORD e32_level;
  WORD e32_cpu;
  WORD e32_os;
  DWORD e32_ver;
  DWORD e32_mflags;
  DWORD e32_mpages;
  DWORD e32_startobj;
  DWORD e32_eip;
  DWORD e32_stackobj;
  DWORD e32_esp;
  DWORD e32_pagesize;
  DWORD e32_lastpagesize;
  DWORD e32_fixupsize;
  DWORD e32_fixupsum;
  DWORD e32_ldrsize;
  DWORD e32_ldrsum;
  DWORD e32_objtab;
  DWORD e32_objcnt;
  DWORD e32_objmap;
  DWORD e32_itermap;
  DWORD e32_rsrctab;
  DWORD e32_rsrccnt;
  DWORD e32_restab;
  DWORD e32_enttab;
  DWORD e32_dirtab;
  DWORD e32_dircnt;
  DWORD e32_fpagetab;
  DWORD e32_frectab;
  DWORD e32_impmod;
  DWORD e32_impmodcnt;
  DWORD e32_impproc;
  DWORD e32_pagesum;
  DWORD e32_datapage;
  DWORD e32_preload;
  DWORD e32_nrestab;
  DWORD e32_cbnrestab;
  DWORD e32_nressum;
  DWORD e32_autodata;
  DWORD e32_debuginfo;
  DWORD e32_debuglen;
  DWORD e32_instpreload;
  DWORD e32_instdemand;
  DWORD e32_heapsize;
  BYTE e32_res3[12];
  DWORD e32_winresoff;
  DWORD e32_winreslen;
  WORD e32_devid;
  WORD e32_ddkver;
};
#pragma pack(pop)

/* 3211 */
typedef _IMAGE_VXD_HEADER IMAGE_VXD_HEADER;

/* 3212 */
typedef _IMAGE_VXD_HEADER *PIMAGE_VXD_HEADER;

/* 3213 */
#pragma pack(push, 4)
struct _IMAGE_FILE_HEADER
{
  WORD Machine;
  WORD NumberOfSections;
  DWORD TimeDateStamp;
  DWORD PointerToSymbolTable;
  DWORD NumberOfSymbols;
  WORD SizeOfOptionalHeader;
  WORD Characteristics;
};
#pragma pack(pop)

/* 3214 */
typedef _IMAGE_FILE_HEADER IMAGE_FILE_HEADER;

/* 3215 */
typedef _IMAGE_FILE_HEADER *PIMAGE_FILE_HEADER;

/* 3216 */
#pragma pack(push, 4)
struct _IMAGE_DATA_DIRECTORY
{
  DWORD VirtualAddress;
  DWORD Size;
};
#pragma pack(pop)

/* 3217 */
typedef _IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY;

/* 3218 */
typedef _IMAGE_DATA_DIRECTORY *PIMAGE_DATA_DIRECTORY;

/* 3219 */
#pragma pack(push, 4)
struct _IMAGE_OPTIONAL_HEADER
{
  WORD Magic;
  BYTE MajorLinkerVersion;
  BYTE MinorLinkerVersion;
  DWORD SizeOfCode;
  DWORD SizeOfInitializedData;
  DWORD SizeOfUninitializedData;
  DWORD AddressOfEntryPoint;
  DWORD BaseOfCode;
  DWORD BaseOfData;
  DWORD ImageBase;
  DWORD SectionAlignment;
  DWORD FileAlignment;
  WORD MajorOperatingSystemVersion;
  WORD MinorOperatingSystemVersion;
  WORD MajorImageVersion;
  WORD MinorImageVersion;
  WORD MajorSubsystemVersion;
  WORD MinorSubsystemVersion;
  DWORD Win32VersionValue;
  DWORD SizeOfImage;
  DWORD SizeOfHeaders;
  DWORD CheckSum;
  WORD Subsystem;
  WORD DllCharacteristics;
  DWORD SizeOfStackReserve;
  DWORD SizeOfStackCommit;
  DWORD SizeOfHeapReserve;
  DWORD SizeOfHeapCommit;
  DWORD LoaderFlags;
  DWORD NumberOfRvaAndSizes;
  IMAGE_DATA_DIRECTORY DataDirectory[16];
};
#pragma pack(pop)

/* 3220 */
typedef _IMAGE_OPTIONAL_HEADER IMAGE_OPTIONAL_HEADER32;

/* 3221 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;

/* 3222 */
#pragma pack(push, 4)
struct _IMAGE_ROM_OPTIONAL_HEADER
{
  WORD Magic;
  BYTE MajorLinkerVersion;
  BYTE MinorLinkerVersion;
  DWORD SizeOfCode;
  DWORD SizeOfInitializedData;
  DWORD SizeOfUninitializedData;
  DWORD AddressOfEntryPoint;
  DWORD BaseOfCode;
  DWORD BaseOfData;
  DWORD BaseOfBss;
  DWORD GprMask;
  DWORD CprMask[4];
  DWORD GpValue;
};
#pragma pack(pop)

/* 3223 */
typedef _IMAGE_ROM_OPTIONAL_HEADER IMAGE_ROM_OPTIONAL_HEADER;

/* 3224 */
typedef _IMAGE_ROM_OPTIONAL_HEADER *PIMAGE_ROM_OPTIONAL_HEADER;

/* 3225 */
#pragma pack(push, 4)
struct _IMAGE_OPTIONAL_HEADER64
{
  WORD Magic;
  BYTE MajorLinkerVersion;
  BYTE MinorLinkerVersion;
  DWORD SizeOfCode;
  DWORD SizeOfInitializedData;
  DWORD SizeOfUninitializedData;
  DWORD AddressOfEntryPoint;
  DWORD BaseOfCode;
  ULONGLONG ImageBase;
  DWORD SectionAlignment;
  DWORD FileAlignment;
  WORD MajorOperatingSystemVersion;
  WORD MinorOperatingSystemVersion;
  WORD MajorImageVersion;
  WORD MinorImageVersion;
  WORD MajorSubsystemVersion;
  WORD MinorSubsystemVersion;
  DWORD Win32VersionValue;
  DWORD SizeOfImage;
  DWORD SizeOfHeaders;
  DWORD CheckSum;
  WORD Subsystem;
  WORD DllCharacteristics;
  ULONGLONG SizeOfStackReserve;
  ULONGLONG SizeOfStackCommit;
  ULONGLONG SizeOfHeapReserve;
  ULONGLONG SizeOfHeapCommit;
  DWORD LoaderFlags;
  DWORD NumberOfRvaAndSizes;
  IMAGE_DATA_DIRECTORY DataDirectory[16];
};
#pragma pack(pop)

/* 3226 */
typedef _IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER64;

/* 3227 */
typedef _IMAGE_OPTIONAL_HEADER64 *PIMAGE_OPTIONAL_HEADER64;

/* 3228 */
typedef IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER;

/* 3229 */
typedef PIMAGE_OPTIONAL_HEADER64 PIMAGE_OPTIONAL_HEADER;

/* 3230 */
#pragma pack(push, 4)
struct _IMAGE_NT_HEADERS64
{
  DWORD Signature;
  IMAGE_FILE_HEADER FileHeader;
  IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};
#pragma pack(pop)

/* 3231 */
typedef _IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS64;

/* 3232 */
typedef _IMAGE_NT_HEADERS64 *PIMAGE_NT_HEADERS64;

/* 3233 */
#pragma pack(push, 4)
struct _IMAGE_NT_HEADERS
{
  DWORD Signature;
  IMAGE_FILE_HEADER FileHeader;
  IMAGE_OPTIONAL_HEADER32 OptionalHeader;
};
#pragma pack(pop)

/* 3234 */
typedef _IMAGE_NT_HEADERS IMAGE_NT_HEADERS32;

/* 3235 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

/* 3236 */
#pragma pack(push, 4)
struct _IMAGE_ROM_HEADERS
{
  IMAGE_FILE_HEADER FileHeader;
  IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};
#pragma pack(pop)

/* 3237 */
typedef _IMAGE_ROM_HEADERS IMAGE_ROM_HEADERS;

/* 3238 */
typedef _IMAGE_ROM_HEADERS *PIMAGE_ROM_HEADERS;

/* 3239 */
typedef IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS;

/* 3240 */
typedef PIMAGE_NT_HEADERS64 PIMAGE_NT_HEADERS;

/* 3241 */
#pragma pack(push, 4)
struct ANON_OBJECT_HEADER
{
  WORD Sig1;
  WORD Sig2;
  WORD Version;
  WORD Machine;
  DWORD TimeDateStamp;
  CLSID ClassID;
  DWORD SizeOfData;
};
#pragma pack(pop)

/* 3242 */
#pragma pack(push, 4)
struct ANON_OBJECT_HEADER_V2
{
  WORD Sig1;
  WORD Sig2;
  WORD Version;
  WORD Machine;
  DWORD TimeDateStamp;
  CLSID ClassID;
  DWORD SizeOfData;
  DWORD Flags;
  DWORD MetaDataSize;
  DWORD MetaDataOffset;
};
#pragma pack(pop)

/* 3243 */
#pragma pack(push, 4)
struct ANON_OBJECT_HEADER_BIGOBJ
{
  WORD Sig1;
  WORD Sig2;
  WORD Version;
  WORD Machine;
  DWORD TimeDateStamp;
  CLSID ClassID;
  DWORD SizeOfData;
  DWORD Flags;
  DWORD MetaDataSize;
  DWORD MetaDataOffset;
  DWORD NumberOfSections;
  DWORD PointerToSymbolTable;
  DWORD NumberOfSymbols;
};
#pragma pack(pop)

/* 3245 */
#pragma pack(push, 4)
union _IMAGE_SECTION_HEADER___B20B6FDCB4F1775194C54A2EDD59D5CE
{
  DWORD PhysicalAddress;
  DWORD VirtualSize;
};
#pragma pack(pop)

/* 3244 */
#pragma pack(push, 4)
struct _IMAGE_SECTION_HEADER
{
  BYTE Name[8];
  _IMAGE_SECTION_HEADER___B20B6FDCB4F1775194C54A2EDD59D5CE Misc;
  DWORD VirtualAddress;
  DWORD SizeOfRawData;
  DWORD PointerToRawData;
  DWORD PointerToRelocations;
  DWORD PointerToLinenumbers;
  WORD NumberOfRelocations;
  WORD NumberOfLinenumbers;
  DWORD Characteristics;
};
#pragma pack(pop)

/* 3246 */
typedef _IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER;

/* 3247 */
typedef _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;

/* 3249 */
#pragma pack(push, 2)
struct _971F672DC66B184EF61B29BB35386FAB
{
  DWORD Short;
  DWORD Long;
};
#pragma pack(pop)

/* 3250 */
#pragma pack(push, 2)
union _IMAGE_SYMBOL___DE3AFBD7AC8D9D18ABFE421162305292
{
  BYTE ShortName[8];
  _971F672DC66B184EF61B29BB35386FAB Name;
  DWORD LongName[2];
};
#pragma pack(pop)

/* 3248 */
#pragma pack(push, 2)
struct _IMAGE_SYMBOL
{
  _IMAGE_SYMBOL___DE3AFBD7AC8D9D18ABFE421162305292 N;
  DWORD Value;
  SHORT SectionNumber;
  WORD Type;
  BYTE StorageClass;
  BYTE NumberOfAuxSymbols;
};
#pragma pack(pop)

/* 3251 */
typedef _IMAGE_SYMBOL IMAGE_SYMBOL;

/* 3252 */
typedef IMAGE_SYMBOL *PIMAGE_SYMBOL;

/* 3254 */
#pragma pack(push, 2)
union _IMAGE_SYMBOL_EX___DE3AFBD7AC8D9D18ABFE421162305292
{
  BYTE ShortName[8];
  _971F672DC66B184EF61B29BB35386FAB Name;
  DWORD LongName[2];
};
#pragma pack(pop)

/* 3253 */
#pragma pack(push, 2)
struct _IMAGE_SYMBOL_EX
{
  _IMAGE_SYMBOL_EX___DE3AFBD7AC8D9D18ABFE421162305292 N;
  DWORD Value;
  LONG SectionNumber;
  WORD Type;
  BYTE StorageClass;
  BYTE NumberOfAuxSymbols;
};
#pragma pack(pop)

/* 3255 */
typedef _IMAGE_SYMBOL_EX IMAGE_SYMBOL_EX;

/* 3256 */
typedef IMAGE_SYMBOL_EX *PIMAGE_SYMBOL_EX;

/* 3257 */
#pragma pack(push, 2)
struct IMAGE_AUX_SYMBOL_TOKEN_DEF
{
  BYTE bAuxType;
  BYTE bReserved;
  DWORD SymbolTableIndex;
  BYTE rgbReserved[12];
};
#pragma pack(pop)

/* 3258 */
typedef IMAGE_AUX_SYMBOL_TOKEN_DEF *PIMAGE_AUX_SYMBOL_TOKEN_DEF;

/* 3260 */
#pragma pack(push, 2)
struct _F8A07DB83731266CE981FF5BAD62F05F
{
  WORD Linenumber;
  WORD Size;
};
#pragma pack(pop)

/* 3261 */
#pragma pack(push, 2)
union _1180E8A9723E3D60053FF928AEC5AEC6
{
  _F8A07DB83731266CE981FF5BAD62F05F LnSz;
  DWORD TotalSize;
};
#pragma pack(pop)

/* 3262 */
#pragma pack(push, 2)
struct _7E853AFA19D46F1D1426A7C4ACE93405
{
  DWORD PointerToLinenumber;
  DWORD PointerToNextFunction;
};
#pragma pack(pop)

/* 3263 */
#pragma pack(push, 2)
struct _8FB65F16DAE9F8292AA06E665C2A880E
{
  WORD Dimension[4];
};
#pragma pack(pop)

/* 3264 */
#pragma pack(push, 2)
union _9960A4B9B2F8A839702CFE4E98B853A5
{
  _7E853AFA19D46F1D1426A7C4ACE93405 Function;
  _8FB65F16DAE9F8292AA06E665C2A880E Array;
};
#pragma pack(pop)

/* 3265 */
#pragma pack(push, 2)
struct _IMAGE_AUX_SYMBOL___99A09626C0B327B801309162952BF118
{
  DWORD TagIndex;
  _1180E8A9723E3D60053FF928AEC5AEC6 Misc;
  _9960A4B9B2F8A839702CFE4E98B853A5 FcnAry;
  WORD TvIndex;
};
#pragma pack(pop)

/* 3266 */
#pragma pack(push, 2)
struct _IMAGE_AUX_SYMBOL___E31B0C8FAB087F6C1EB948B5A6818D63
{
  BYTE Name[18];
};
#pragma pack(pop)

/* 3267 */
#pragma pack(push, 2)
struct _IMAGE_AUX_SYMBOL___7C6297ADB1522AE012833A8C9F9B34B5
{
  DWORD Length;
  WORD NumberOfRelocations;
  WORD NumberOfLinenumbers;
  DWORD CheckSum;
  SHORT Number;
  BYTE Selection;
  BYTE bReserved;
  SHORT HighNumber;
};
#pragma pack(pop)

/* 3268 */
#pragma pack(push, 2)
struct _IMAGE_AUX_SYMBOL___3AD4DEB8505F041CB6DF52E290B0756F
{
  DWORD crc;
  BYTE rgbReserved[14];
};
#pragma pack(pop)

/* 3259 */
#pragma pack(push, 2)
union _IMAGE_AUX_SYMBOL
{
  _IMAGE_AUX_SYMBOL___99A09626C0B327B801309162952BF118 Sym;
  _IMAGE_AUX_SYMBOL___E31B0C8FAB087F6C1EB948B5A6818D63 File;
  _IMAGE_AUX_SYMBOL___7C6297ADB1522AE012833A8C9F9B34B5 Section;
  IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
  _IMAGE_AUX_SYMBOL___3AD4DEB8505F041CB6DF52E290B0756F CRC;
};
#pragma pack(pop)

/* 3269 */
typedef _IMAGE_AUX_SYMBOL IMAGE_AUX_SYMBOL;

/* 3270 */
typedef IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;

/* 3272 */
#pragma pack(push, 2)
struct _IMAGE_AUX_SYMBOL_EX___7E1D480B97423AA8E833650CEF32C85E
{
  DWORD WeakDefaultSymIndex;
  DWORD WeakSearchType;
  BYTE rgbReserved[12];
};
#pragma pack(pop)

/* 3273 */
#pragma pack(push, 2)
struct _IMAGE_AUX_SYMBOL_EX___7F2A680108A16A6223B29324A81F8BAB
{
  BYTE Name[20];
};
#pragma pack(pop)

/* 3274 */
#pragma pack(push, 2)
struct _IMAGE_AUX_SYMBOL_EX___3527ECF91F93989322DD305E5AF9CF65
{
  DWORD Length;
  WORD NumberOfRelocations;
  WORD NumberOfLinenumbers;
  DWORD CheckSum;
  SHORT Number;
  BYTE Selection;
  BYTE bReserved;
  SHORT HighNumber;
  BYTE rgbReserved[2];
};
#pragma pack(pop)

/* 3275 */
#pragma pack(push, 2)
struct _IMAGE_AUX_SYMBOL_EX___F5EEF4289C9728E28354AD824FFA2064
{
  IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
  BYTE rgbReserved[2];
};
#pragma pack(pop)

/* 3276 */
#pragma pack(push, 2)
struct _IMAGE_AUX_SYMBOL_EX___A98B7E4D8FC2E1BB0BA4A96D48F8B6DC
{
  DWORD crc;
  BYTE rgbReserved[16];
};
#pragma pack(pop)

/* 3271 */
#pragma pack(push, 2)
union _IMAGE_AUX_SYMBOL_EX
{
  _IMAGE_AUX_SYMBOL_EX___7E1D480B97423AA8E833650CEF32C85E Sym;
  _IMAGE_AUX_SYMBOL_EX___7F2A680108A16A6223B29324A81F8BAB File;
  _IMAGE_AUX_SYMBOL_EX___3527ECF91F93989322DD305E5AF9CF65 Section;
  #pragma pack(push, 2)
  struct
  {
    IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
    BYTE rgbReserved[2];
  };
  #pragma pack(pop)
  _IMAGE_AUX_SYMBOL_EX___A98B7E4D8FC2E1BB0BA4A96D48F8B6DC CRC;
};
#pragma pack(pop)

/* 3277 */
typedef _IMAGE_AUX_SYMBOL_EX IMAGE_AUX_SYMBOL_EX;

/* 3278 */
typedef IMAGE_AUX_SYMBOL_EX *PIMAGE_AUX_SYMBOL_EX;

/* 3279 */
enum IMAGE_AUX_SYMBOL_TYPE : unsigned __int32
{
  IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 0x1,
};

/* 3281 */
#pragma pack(push, 2)
union _IMAGE_RELOCATION___2EB1567E979FC6E3EBD596876A027ED1
{
  DWORD VirtualAddress;
  DWORD RelocCount;
};
#pragma pack(pop)

/* 3280 */
#pragma pack(push, 2)
struct _IMAGE_RELOCATION
{
  #pragma pack(push, 2)
  union
  {
    DWORD VirtualAddress;
    DWORD RelocCount;
  };
  #pragma pack(pop)
  DWORD SymbolTableIndex;
  WORD Type;
};
#pragma pack(pop)

/* 3282 */
typedef _IMAGE_RELOCATION IMAGE_RELOCATION;

/* 3283 */
typedef IMAGE_RELOCATION *PIMAGE_RELOCATION;

/* 3285 */
#pragma pack(push, 2)
union _IMAGE_LINENUMBER___DA78A16261B4BEF6A303D7389260D886
{
  DWORD SymbolTableIndex;
  DWORD VirtualAddress;
};
#pragma pack(pop)

/* 3284 */
#pragma pack(push, 2)
struct _IMAGE_LINENUMBER
{
  _IMAGE_LINENUMBER___DA78A16261B4BEF6A303D7389260D886 Type;
  WORD Linenumber;
};
#pragma pack(pop)

/* 3286 */
typedef _IMAGE_LINENUMBER IMAGE_LINENUMBER;

/* 3287 */
typedef IMAGE_LINENUMBER *PIMAGE_LINENUMBER;

/* 3288 */
#pragma pack(push, 4)
struct _IMAGE_BASE_RELOCATION
{
  DWORD VirtualAddress;
  DWORD SizeOfBlock;
};
#pragma pack(pop)

/* 3289 */
typedef _IMAGE_BASE_RELOCATION IMAGE_BASE_RELOCATION;

/* 3290 */
typedef IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION;

/* 3291 */
#pragma pack(push, 4)
struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  BYTE Name[16];
  BYTE Date[12];
  BYTE UserID[6];
  BYTE GroupID[6];
  BYTE Mode[8];
  BYTE Size[10];
  BYTE EndHeader[2];
};
#pragma pack(pop)

/* 3292 */
typedef _IMAGE_ARCHIVE_MEMBER_HEADER IMAGE_ARCHIVE_MEMBER_HEADER;

/* 3293 */
typedef _IMAGE_ARCHIVE_MEMBER_HEADER *PIMAGE_ARCHIVE_MEMBER_HEADER;

/* 3294 */
#pragma pack(push, 4)
struct _IMAGE_EXPORT_DIRECTORY
{
  DWORD Characteristics;
  DWORD TimeDateStamp;
  WORD MajorVersion;
  WORD MinorVersion;
  DWORD Name;
  DWORD Base;
  DWORD NumberOfFunctions;
  DWORD NumberOfNames;
  DWORD AddressOfFunctions;
  DWORD AddressOfNames;
  DWORD AddressOfNameOrdinals;
};
#pragma pack(pop)

/* 3295 */
typedef _IMAGE_EXPORT_DIRECTORY IMAGE_EXPORT_DIRECTORY;

/* 3296 */
typedef _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;

/* 3297 */
#pragma pack(push, 4)
struct _IMAGE_IMPORT_BY_NAME
{
  WORD Hint;
  CHAR Name[1];
};
#pragma pack(pop)

/* 3298 */
typedef _IMAGE_IMPORT_BY_NAME IMAGE_IMPORT_BY_NAME;

/* 3299 */
typedef _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;

/* 3301 */
#pragma pack(push, 8)
union _IMAGE_THUNK_DATA64___A353DE2894FC33A63C1ED01FD652CC1F
{
  ULONGLONG ForwarderString;
  ULONGLONG Function;
  ULONGLONG Ordinal;
  ULONGLONG AddressOfData;
};
#pragma pack(pop)

/* 3300 */
#pragma pack(push, 8)
struct _IMAGE_THUNK_DATA64
{
  _IMAGE_THUNK_DATA64___A353DE2894FC33A63C1ED01FD652CC1F u1;
};
#pragma pack(pop)

/* 3302 */
typedef _IMAGE_THUNK_DATA64 IMAGE_THUNK_DATA64;

/* 3303 */
typedef IMAGE_THUNK_DATA64 *PIMAGE_THUNK_DATA64;

/* 3305 */
#pragma pack(push, 4)
union _IMAGE_THUNK_DATA32___D4D343E3E3F3D59BBD61641B4D60CB2A
{
  DWORD ForwarderString;
  DWORD Function;
  DWORD Ordinal;
  DWORD AddressOfData;
};
#pragma pack(pop)

/* 3304 */
#pragma pack(push, 4)
struct _IMAGE_THUNK_DATA32
{
  _IMAGE_THUNK_DATA32___D4D343E3E3F3D59BBD61641B4D60CB2A u1;
};
#pragma pack(pop)

/* 3306 */
typedef _IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA32;

/* 3307 */
typedef IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32;

/* 3308 */
typedef void (__cdecl *PIMAGE_TLS_CALLBACK)(PVOID, DWORD, PVOID);

/* 3310 */
#pragma pack(push, 4)
struct _C95BA7EA5F85079EC657DF089F04F24D
{
  unsigned __int32 Reserved0 : 20;
  unsigned __int32 Alignment : 4;
  unsigned __int32 Reserved1 : 8;
};
#pragma pack(pop)

/* 3311 */
#pragma pack(push, 4)
union _IMAGE_TLS_DIRECTORY64___3BFF79CBF6517510E85FD75955602401
{
  DWORD Characteristics;
  #pragma pack(push, 4)
  struct
  {
    unsigned __int32 Reserved0 : 20;
    unsigned __int32 Alignment : 4;
    unsigned __int32 Reserved1 : 8;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3309 */
#pragma pack(push, 4)
struct _IMAGE_TLS_DIRECTORY64
{
  ULONGLONG StartAddressOfRawData;
  ULONGLONG EndAddressOfRawData;
  ULONGLONG AddressOfIndex;
  ULONGLONG AddressOfCallBacks;
  DWORD SizeOfZeroFill;
  #pragma pack(push, 4)
  union
  {
    DWORD Characteristics;
    #pragma pack(push, 4)
    struct
    {
      unsigned __int32 Reserved0 : 20;
      unsigned __int32 Alignment : 4;
      unsigned __int32 Reserved1 : 8;
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3312 */
typedef _IMAGE_TLS_DIRECTORY64 IMAGE_TLS_DIRECTORY64;

/* 3313 */
typedef IMAGE_TLS_DIRECTORY64 *PIMAGE_TLS_DIRECTORY64;

/* 3315 */
#pragma pack(push, 4)
union _IMAGE_TLS_DIRECTORY32___3BFF79CBF6517510E85FD75955602401
{
  DWORD Characteristics;
  #pragma pack(push, 4)
  struct
  {
    unsigned __int32 Reserved0 : 20;
    unsigned __int32 Alignment : 4;
    unsigned __int32 Reserved1 : 8;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3314 */
#pragma pack(push, 4)
struct _IMAGE_TLS_DIRECTORY32
{
  DWORD StartAddressOfRawData;
  DWORD EndAddressOfRawData;
  DWORD AddressOfIndex;
  DWORD AddressOfCallBacks;
  DWORD SizeOfZeroFill;
  #pragma pack(push, 4)
  union
  {
    DWORD Characteristics;
    #pragma pack(push, 4)
    struct
    {
      unsigned __int32 Reserved0 : 20;
      unsigned __int32 Alignment : 4;
      unsigned __int32 Reserved1 : 8;
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3316 */
typedef _IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY32;

/* 3317 */
typedef IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY32;

/* 3318 */
typedef IMAGE_THUNK_DATA64 IMAGE_THUNK_DATA;

/* 3319 */
typedef PIMAGE_THUNK_DATA64 PIMAGE_THUNK_DATA;

/* 3320 */
typedef IMAGE_TLS_DIRECTORY64 IMAGE_TLS_DIRECTORY;

/* 3321 */
typedef PIMAGE_TLS_DIRECTORY64 PIMAGE_TLS_DIRECTORY;

/* 3323 */
#pragma pack(push, 4)
union _IMAGE_IMPORT_DESCRIPTOR___C8792122BD3539A55438287892A93E11
{
  DWORD Characteristics;
  DWORD OriginalFirstThunk;
};
#pragma pack(pop)

/* 3322 */
#pragma pack(push, 4)
struct _IMAGE_IMPORT_DESCRIPTOR
{
  #pragma pack(push, 4)
  union
  {
    DWORD Characteristics;
    DWORD OriginalFirstThunk;
  };
  #pragma pack(pop)
  DWORD TimeDateStamp;
  DWORD ForwarderChain;
  DWORD Name;
  DWORD FirstThunk;
};
#pragma pack(pop)

/* 3324 */
typedef _IMAGE_IMPORT_DESCRIPTOR IMAGE_IMPORT_DESCRIPTOR;

/* 3325 */
typedef IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;

/* 3326 */
#pragma pack(push, 4)
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  DWORD TimeDateStamp;
  WORD OffsetModuleName;
  WORD NumberOfModuleForwarderRefs;
};
#pragma pack(pop)

/* 3327 */
typedef _IMAGE_BOUND_IMPORT_DESCRIPTOR IMAGE_BOUND_IMPORT_DESCRIPTOR;

/* 3328 */
typedef _IMAGE_BOUND_IMPORT_DESCRIPTOR *PIMAGE_BOUND_IMPORT_DESCRIPTOR;

/* 3329 */
#pragma pack(push, 4)
struct _IMAGE_BOUND_FORWARDER_REF
{
  DWORD TimeDateStamp;
  WORD OffsetModuleName;
  WORD Reserved;
};
#pragma pack(pop)

/* 3330 */
typedef _IMAGE_BOUND_FORWARDER_REF IMAGE_BOUND_FORWARDER_REF;

/* 3331 */
typedef _IMAGE_BOUND_FORWARDER_REF *PIMAGE_BOUND_FORWARDER_REF;

/* 3333 */
#pragma pack(push, 4)
struct _B7274AF74BBCA74F18F23DF8227DBA49
{
  unsigned __int32 RvaBased : 1;
  unsigned __int32 ReservedAttributes : 31;
};
#pragma pack(pop)

/* 3334 */
#pragma pack(push, 4)
union _IMAGE_DELAYLOAD_DESCRIPTOR___9046E4C7D059E43F244FD172AEF6AF0D
{
  DWORD AllAttributes;
  #pragma pack(push, 4)
  struct
  {
    unsigned __int32 RvaBased : 1;
    unsigned __int32 ReservedAttributes : 31;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3332 */
#pragma pack(push, 4)
struct _IMAGE_DELAYLOAD_DESCRIPTOR
{
  _IMAGE_DELAYLOAD_DESCRIPTOR___9046E4C7D059E43F244FD172AEF6AF0D Attributes;
  DWORD DllNameRVA;
  DWORD ModuleHandleRVA;
  DWORD ImportAddressTableRVA;
  DWORD ImportNameTableRVA;
  DWORD BoundImportAddressTableRVA;
  DWORD UnloadInformationTableRVA;
  DWORD TimeDateStamp;
};
#pragma pack(pop)

/* 3335 */
typedef _IMAGE_DELAYLOAD_DESCRIPTOR IMAGE_DELAYLOAD_DESCRIPTOR;

/* 3336 */
typedef _IMAGE_DELAYLOAD_DESCRIPTOR *PIMAGE_DELAYLOAD_DESCRIPTOR;

/* 3337 */
typedef const IMAGE_DELAYLOAD_DESCRIPTOR *PCIMAGE_DELAYLOAD_DESCRIPTOR;

/* 3338 */
#pragma pack(push, 4)
struct _IMAGE_RESOURCE_DIRECTORY
{
  DWORD Characteristics;
  DWORD TimeDateStamp;
  WORD MajorVersion;
  WORD MinorVersion;
  WORD NumberOfNamedEntries;
  WORD NumberOfIdEntries;
};
#pragma pack(pop)

/* 3339 */
typedef _IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY;

/* 3340 */
typedef _IMAGE_RESOURCE_DIRECTORY *PIMAGE_RESOURCE_DIRECTORY;

/* 3342 */
#pragma pack(push, 4)
struct _F1340E5351F3949C7FFEE8AEB0584375
{
  unsigned __int32 NameOffset : 31;
  unsigned __int32 NameIsString : 1;
};
#pragma pack(pop)

/* 3343 */
#pragma pack(push, 4)
union _IMAGE_RESOURCE_DIRECTORY_ENTRY___A0A516DD47125A4E74292661543AC098
{
  #pragma pack(push, 4)
  struct
  {
    unsigned __int32 NameOffset : 31;
    unsigned __int32 NameIsString : 1;
  };
  #pragma pack(pop)
  DWORD Name;
  WORD Id;
};
#pragma pack(pop)

/* 3344 */
#pragma pack(push, 4)
struct _547C47D15293E95249DF75F7BF757526
{
  unsigned __int32 OffsetToDirectory : 31;
  unsigned __int32 DataIsDirectory : 1;
};
#pragma pack(pop)

/* 3345 */
#pragma pack(push, 4)
union _IMAGE_RESOURCE_DIRECTORY_ENTRY___D318A949D2AEB9EBF3E43D786E93C450
{
  DWORD OffsetToData;
  #pragma pack(push, 4)
  struct
  {
    unsigned __int32 OffsetToDirectory : 31;
    unsigned __int32 DataIsDirectory : 1;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3341 */
#pragma pack(push, 4)
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  #pragma pack(push, 4)
  union
  {
    #pragma pack(push, 4)
    struct
    {
      unsigned __int32 NameOffset : 31;
      unsigned __int32 NameIsString : 1;
    };
    #pragma pack(pop)
    DWORD Name;
    WORD Id;
  };
  #pragma pack(pop)
  #pragma pack(push, 4)
  union
  {
    DWORD OffsetToData;
    #pragma pack(push, 4)
    struct
    {
      unsigned __int32 OffsetToDirectory : 31;
      unsigned __int32 DataIsDirectory : 1;
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3346 */
typedef _IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY;

/* 3347 */
typedef _IMAGE_RESOURCE_DIRECTORY_ENTRY *PIMAGE_RESOURCE_DIRECTORY_ENTRY;

/* 3348 */
#pragma pack(push, 4)
struct _IMAGE_RESOURCE_DIRECTORY_STRING
{
  WORD Length;
  CHAR NameString[1];
};
#pragma pack(pop)

/* 3349 */
typedef _IMAGE_RESOURCE_DIRECTORY_STRING IMAGE_RESOURCE_DIRECTORY_STRING;

/* 3350 */
typedef _IMAGE_RESOURCE_DIRECTORY_STRING *PIMAGE_RESOURCE_DIRECTORY_STRING;

/* 3351 */
#pragma pack(push, 4)
struct _IMAGE_RESOURCE_DIR_STRING_U
{
  WORD Length;
  WCHAR NameString[1];
};
#pragma pack(pop)

/* 3352 */
typedef _IMAGE_RESOURCE_DIR_STRING_U IMAGE_RESOURCE_DIR_STRING_U;

/* 3353 */
typedef _IMAGE_RESOURCE_DIR_STRING_U *PIMAGE_RESOURCE_DIR_STRING_U;

/* 3354 */
#pragma pack(push, 4)
struct _IMAGE_RESOURCE_DATA_ENTRY
{
  DWORD OffsetToData;
  DWORD Size;
  DWORD CodePage;
  DWORD Reserved;
};
#pragma pack(pop)

/* 3355 */
typedef _IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY;

/* 3356 */
typedef _IMAGE_RESOURCE_DATA_ENTRY *PIMAGE_RESOURCE_DATA_ENTRY;

/* 3357 */
#pragma pack(push, 4)
struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY
{
  WORD Flags;
  WORD Catalog;
  DWORD CatalogOffset;
  DWORD Reserved;
};
#pragma pack(pop)

/* 3358 */
typedef _IMAGE_LOAD_CONFIG_CODE_INTEGRITY IMAGE_LOAD_CONFIG_CODE_INTEGRITY;

/* 3359 */
typedef _IMAGE_LOAD_CONFIG_CODE_INTEGRITY *PIMAGE_LOAD_CONFIG_CODE_INTEGRITY;

/* 3360 */
#pragma pack(push, 4)
struct _IMAGE_DYNAMIC_RELOCATION_TABLE
{
  DWORD Version;
  DWORD Size;
};
#pragma pack(pop)

/* 3361 */
typedef _IMAGE_DYNAMIC_RELOCATION_TABLE IMAGE_DYNAMIC_RELOCATION_TABLE;

/* 3362 */
typedef _IMAGE_DYNAMIC_RELOCATION_TABLE *PIMAGE_DYNAMIC_RELOCATION_TABLE;

/* 3363 */
#pragma pack(push, 1)
struct _IMAGE_DYNAMIC_RELOCATION32
{
  DWORD Symbol;
  DWORD BaseRelocSize;
};
#pragma pack(pop)

/* 3364 */
typedef _IMAGE_DYNAMIC_RELOCATION32 IMAGE_DYNAMIC_RELOCATION32;

/* 3365 */
typedef _IMAGE_DYNAMIC_RELOCATION32 *PIMAGE_DYNAMIC_RELOCATION32;

/* 3366 */
#pragma pack(push, 1)
struct _IMAGE_DYNAMIC_RELOCATION64
{
  ULONGLONG Symbol;
  DWORD BaseRelocSize;
};
#pragma pack(pop)

/* 3367 */
typedef _IMAGE_DYNAMIC_RELOCATION64 IMAGE_DYNAMIC_RELOCATION64;

/* 3368 */
typedef _IMAGE_DYNAMIC_RELOCATION64 *PIMAGE_DYNAMIC_RELOCATION64;

/* 3369 */
#pragma pack(push, 1)
struct _IMAGE_DYNAMIC_RELOCATION32_V2
{
  DWORD HeaderSize;
  DWORD FixupInfoSize;
  DWORD Symbol;
  DWORD SymbolGroup;
  DWORD Flags;
};
#pragma pack(pop)

/* 3370 */
typedef _IMAGE_DYNAMIC_RELOCATION32_V2 IMAGE_DYNAMIC_RELOCATION32_V2;

/* 3371 */
typedef _IMAGE_DYNAMIC_RELOCATION32_V2 *PIMAGE_DYNAMIC_RELOCATION32_V2;

/* 3372 */
#pragma pack(push, 1)
struct _IMAGE_DYNAMIC_RELOCATION64_V2
{
  DWORD HeaderSize;
  DWORD FixupInfoSize;
  ULONGLONG Symbol;
  DWORD SymbolGroup;
  DWORD Flags;
};
#pragma pack(pop)

/* 3373 */
typedef _IMAGE_DYNAMIC_RELOCATION64_V2 IMAGE_DYNAMIC_RELOCATION64_V2;

/* 3374 */
typedef _IMAGE_DYNAMIC_RELOCATION64_V2 *PIMAGE_DYNAMIC_RELOCATION64_V2;

/* 3375 */
typedef IMAGE_DYNAMIC_RELOCATION64 IMAGE_DYNAMIC_RELOCATION;

/* 3376 */
typedef PIMAGE_DYNAMIC_RELOCATION64 PIMAGE_DYNAMIC_RELOCATION;

/* 3377 */
typedef IMAGE_DYNAMIC_RELOCATION64_V2 IMAGE_DYNAMIC_RELOCATION_V2;

/* 3378 */
typedef PIMAGE_DYNAMIC_RELOCATION64_V2 PIMAGE_DYNAMIC_RELOCATION_V2;

/* 3379 */
#pragma pack(push, 1)
struct _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER
{
  BYTE PrologueByteCount;
};
#pragma pack(pop)

/* 3380 */
typedef _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER;

/* 3381 */
typedef IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER *PIMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER;

/* 3382 */
#pragma pack(push, 1)
struct _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER
{
  DWORD EpilogueCount;
  BYTE EpilogueByteCount;
  BYTE BranchDescriptorElementSize;
  WORD BranchDescriptorCount;
};
#pragma pack(pop)

/* 3383 */
typedef _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER;

/* 3384 */
typedef IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER *PIMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER;

/* 3385 */
#pragma pack(push, 1)
struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION
{
  unsigned __int32 PageRelativeOffset : 12;
  unsigned __int32 IndirectCall : 1;
  unsigned __int32 IATIndex : 19;
};
#pragma pack(pop)

/* 3386 */
typedef _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION;

/* 3387 */
typedef IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION *PIMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION;

/* 3388 */
#pragma pack(push, 1)
struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION
{
  unsigned __int16 PageRelativeOffset : 12;
  unsigned __int16 IndirectCall : 1;
  unsigned __int16 RexWPrefix : 1;
  unsigned __int16 CfgCheck : 1;
  unsigned __int16 Reserved : 1;
};
#pragma pack(pop)

/* 3389 */
typedef _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION;

/* 3390 */
typedef IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION *PIMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION;

/* 3391 */
#pragma pack(push, 1)
struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION
{
  unsigned __int16 PageRelativeOffset : 12;
  unsigned __int16 RegisterNumber : 4;
};
#pragma pack(pop)

/* 3392 */
typedef _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION;

/* 3393 */
typedef IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION *PIMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION;

/* 3394 */
#pragma pack(push, 4)
struct _IMAGE_LOAD_CONFIG_DIRECTORY32
{
  DWORD Size;
  DWORD TimeDateStamp;
  WORD MajorVersion;
  WORD MinorVersion;
  DWORD GlobalFlagsClear;
  DWORD GlobalFlagsSet;
  DWORD CriticalSectionDefaultTimeout;
  DWORD DeCommitFreeBlockThreshold;
  DWORD DeCommitTotalFreeThreshold;
  DWORD LockPrefixTable;
  DWORD MaximumAllocationSize;
  DWORD VirtualMemoryThreshold;
  DWORD ProcessHeapFlags;
  DWORD ProcessAffinityMask;
  WORD CSDVersion;
  WORD DependentLoadFlags;
  DWORD EditList;
  DWORD SecurityCookie;
  DWORD SEHandlerTable;
  DWORD SEHandlerCount;
  DWORD GuardCFCheckFunctionPointer;
  DWORD GuardCFDispatchFunctionPointer;
  DWORD GuardCFFunctionTable;
  DWORD GuardCFFunctionCount;
  DWORD GuardFlags;
  IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity;
  DWORD GuardAddressTakenIatEntryTable;
  DWORD GuardAddressTakenIatEntryCount;
  DWORD GuardLongJumpTargetTable;
  DWORD GuardLongJumpTargetCount;
  DWORD DynamicValueRelocTable;
  DWORD CHPEMetadataPointer;
  DWORD GuardRFFailureRoutine;
  DWORD GuardRFFailureRoutineFunctionPointer;
  DWORD DynamicValueRelocTableOffset;
  WORD DynamicValueRelocTableSection;
  WORD Reserved2;
  DWORD GuardRFVerifyStackPointerFunctionPointer;
  DWORD HotPatchTableOffset;
  DWORD Reserved3;
  DWORD EnclaveConfigurationPointer;
  DWORD VolatileMetadataPointer;
  DWORD GuardEHContinuationTable;
  DWORD GuardEHContinuationCount;
};
#pragma pack(pop)

/* 3395 */
typedef _IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY32;

/* 3396 */
typedef _IMAGE_LOAD_CONFIG_DIRECTORY32 *PIMAGE_LOAD_CONFIG_DIRECTORY32;

/* 3397 */
#pragma pack(push, 4)
struct _IMAGE_LOAD_CONFIG_DIRECTORY64
{
  DWORD Size;
  DWORD TimeDateStamp;
  WORD MajorVersion;
  WORD MinorVersion;
  DWORD GlobalFlagsClear;
  DWORD GlobalFlagsSet;
  DWORD CriticalSectionDefaultTimeout;
  ULONGLONG DeCommitFreeBlockThreshold;
  ULONGLONG DeCommitTotalFreeThreshold;
  ULONGLONG LockPrefixTable;
  ULONGLONG MaximumAllocationSize;
  ULONGLONG VirtualMemoryThreshold;
  ULONGLONG ProcessAffinityMask;
  DWORD ProcessHeapFlags;
  WORD CSDVersion;
  WORD DependentLoadFlags;
  ULONGLONG EditList;
  ULONGLONG SecurityCookie;
  ULONGLONG SEHandlerTable;
  ULONGLONG SEHandlerCount;
  ULONGLONG GuardCFCheckFunctionPointer;
  ULONGLONG GuardCFDispatchFunctionPointer;
  ULONGLONG GuardCFFunctionTable;
  ULONGLONG GuardCFFunctionCount;
  DWORD GuardFlags;
  IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity;
  ULONGLONG GuardAddressTakenIatEntryTable;
  ULONGLONG GuardAddressTakenIatEntryCount;
  ULONGLONG GuardLongJumpTargetTable;
  ULONGLONG GuardLongJumpTargetCount;
  ULONGLONG DynamicValueRelocTable;
  ULONGLONG CHPEMetadataPointer;
  ULONGLONG GuardRFFailureRoutine;
  ULONGLONG GuardRFFailureRoutineFunctionPointer;
  DWORD DynamicValueRelocTableOffset;
  WORD DynamicValueRelocTableSection;
  WORD Reserved2;
  ULONGLONG GuardRFVerifyStackPointerFunctionPointer;
  DWORD HotPatchTableOffset;
  DWORD Reserved3;
  ULONGLONG EnclaveConfigurationPointer;
  ULONGLONG VolatileMetadataPointer;
  ULONGLONG GuardEHContinuationTable;
  ULONGLONG GuardEHContinuationCount;
};
#pragma pack(pop)

/* 3398 */
typedef _IMAGE_LOAD_CONFIG_DIRECTORY64 IMAGE_LOAD_CONFIG_DIRECTORY64;

/* 3399 */
typedef _IMAGE_LOAD_CONFIG_DIRECTORY64 *PIMAGE_LOAD_CONFIG_DIRECTORY64;

/* 3400 */
typedef IMAGE_LOAD_CONFIG_DIRECTORY64 IMAGE_LOAD_CONFIG_DIRECTORY;

/* 3401 */
typedef PIMAGE_LOAD_CONFIG_DIRECTORY64 PIMAGE_LOAD_CONFIG_DIRECTORY;

/* 3402 */
#pragma pack(push, 4)
struct _IMAGE_HOT_PATCH_INFO
{
  DWORD Version;
  DWORD Size;
  DWORD SequenceNumber;
  DWORD BaseImageList;
  DWORD BaseImageCount;
  DWORD BufferOffset;
  DWORD ExtraPatchSize;
};
#pragma pack(pop)

/* 3403 */
typedef _IMAGE_HOT_PATCH_INFO IMAGE_HOT_PATCH_INFO;

/* 3404 */
typedef _IMAGE_HOT_PATCH_INFO *PIMAGE_HOT_PATCH_INFO;

/* 3405 */
#pragma pack(push, 4)
struct _IMAGE_HOT_PATCH_BASE
{
  DWORD SequenceNumber;
  DWORD Flags;
  DWORD OriginalTimeDateStamp;
  DWORD OriginalCheckSum;
  DWORD CodeIntegrityInfo;
  DWORD CodeIntegritySize;
  DWORD PatchTable;
  DWORD BufferOffset;
};
#pragma pack(pop)

/* 3406 */
typedef _IMAGE_HOT_PATCH_BASE IMAGE_HOT_PATCH_BASE;

/* 3407 */
typedef _IMAGE_HOT_PATCH_BASE *PIMAGE_HOT_PATCH_BASE;

/* 3408 */
#pragma pack(push, 4)
struct _IMAGE_HOT_PATCH_HASHES
{
  BYTE SHA256[32];
  BYTE SHA1[20];
};
#pragma pack(pop)

/* 3409 */
typedef _IMAGE_HOT_PATCH_HASHES IMAGE_HOT_PATCH_HASHES;

/* 3410 */
typedef _IMAGE_HOT_PATCH_HASHES *PIMAGE_HOT_PATCH_HASHES;

/* 3411 */
#pragma pack(push, 4)
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  DWORD FuncStart;
  unsigned __int32 PrologLen : 8;
  unsigned __int32 FuncLen : 22;
  unsigned __int32 ThirtyTwoBit : 1;
  unsigned __int32 ExceptionFlag : 1;
};
#pragma pack(pop)

/* 3412 */
typedef _IMAGE_CE_RUNTIME_FUNCTION_ENTRY IMAGE_CE_RUNTIME_FUNCTION_ENTRY;

/* 3413 */
typedef _IMAGE_CE_RUNTIME_FUNCTION_ENTRY *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;

/* 3415 */
#pragma pack(push, 4)
struct _F914DF356338B35978CCEA78F97B3D4F
{
  unsigned __int32 Flag : 2;
  unsigned __int32 FunctionLength : 11;
  unsigned __int32 Ret : 2;
  unsigned __int32 H : 1;
  unsigned __int32 Reg : 3;
  unsigned __int32 R : 1;
  unsigned __int32 L : 1;
  unsigned __int32 C : 1;
  unsigned __int32 StackAdjust : 10;
};
#pragma pack(pop)

/* 3416 */
#pragma pack(push, 4)
union _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY___40EF8B5EADD7A1EA5B4C64A8F5FEAC1B
{
  DWORD UnwindData;
  #pragma pack(push, 4)
  struct
  {
    unsigned __int32 Flag : 2;
    unsigned __int32 FunctionLength : 11;
    unsigned __int32 Ret : 2;
    unsigned __int32 H : 1;
    unsigned __int32 Reg : 3;
    unsigned __int32 R : 1;
    unsigned __int32 L : 1;
    unsigned __int32 C : 1;
    unsigned __int32 StackAdjust : 10;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3414 */
#pragma pack(push, 4)
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY
{
  DWORD BeginAddress;
  #pragma pack(push, 4)
  union
  {
    DWORD UnwindData;
    #pragma pack(push, 4)
    struct
    {
      unsigned __int32 Flag : 2;
      unsigned __int32 FunctionLength : 11;
      unsigned __int32 Ret : 2;
      unsigned __int32 H : 1;
      unsigned __int32 Reg : 3;
      unsigned __int32 R : 1;
      unsigned __int32 L : 1;
      unsigned __int32 C : 1;
      unsigned __int32 StackAdjust : 10;
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3417 */
typedef _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY IMAGE_ARM_RUNTIME_FUNCTION_ENTRY;

/* 3418 */
typedef _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY *PIMAGE_ARM_RUNTIME_FUNCTION_ENTRY;

/* 3419 */
enum ARM64_FNPDATA_FLAGS : unsigned __int32
{
  PdataRefToFullXdata = 0x0,
  PdataPackedUnwindFunction = 0x1,
  PdataPackedUnwindFragment = 0x2,
};

/* 3420 */
enum ARM64_FNPDATA_CR : unsigned __int32
{
  PdataCrUnchained = 0x0,
  PdataCrUnchainedSavedLr = 0x1,
  PdataCrChainedWithPac = 0x2,
  PdataCrChained = 0x3,
};

/* 3422 */
#pragma pack(push, 4)
struct _E4A7DBD5A253E3617D685B674E63E69E
{
  unsigned __int32 Flag : 2;
  unsigned __int32 FunctionLength : 11;
  unsigned __int32 RegF : 3;
  unsigned __int32 RegI : 4;
  unsigned __int32 H : 1;
  unsigned __int32 CR : 2;
  unsigned __int32 FrameSize : 9;
};
#pragma pack(pop)

/* 3423 */
#pragma pack(push, 4)
union _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY___753D12A4F228928B8D07C64DF63FE1B7
{
  DWORD UnwindData;
  #pragma pack(push, 4)
  struct
  {
    unsigned __int32 Flag : 2;
    unsigned __int32 FunctionLength : 11;
    unsigned __int32 RegF : 3;
    unsigned __int32 RegI : 4;
    unsigned __int32 H : 1;
    unsigned __int32 CR : 2;
    unsigned __int32 FrameSize : 9;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3421 */
#pragma pack(push, 4)
struct _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY
{
  DWORD BeginAddress;
  #pragma pack(push, 4)
  union
  {
    DWORD UnwindData;
    #pragma pack(push, 4)
    struct
    {
      unsigned __int32 Flag : 2;
      unsigned __int32 FunctionLength : 11;
      unsigned __int32 RegF : 3;
      unsigned __int32 RegI : 4;
      unsigned __int32 H : 1;
      unsigned __int32 CR : 2;
      unsigned __int32 FrameSize : 9;
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3424 */
typedef _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY;

/* 3425 */
typedef _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY *PIMAGE_ARM64_RUNTIME_FUNCTION_ENTRY;

/* 3427 */
#pragma pack(push, 4)
struct IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA___E3D3C95A7B50C509F6DC3E4A33151861
{
  unsigned __int32 FunctionLength : 18;
  unsigned __int32 Version : 2;
  unsigned __int32 ExceptionDataPresent : 1;
  unsigned __int32 EpilogInHeader : 1;
  unsigned __int32 EpilogCount : 5;
  unsigned __int32 CodeWords : 5;
};
#pragma pack(pop)

/* 3426 */
#pragma pack(push, 4)
union IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA
{
  DWORD HeaderData;
  #pragma pack(push, 4)
  struct
  {
    unsigned __int32 FunctionLength : 18;
    unsigned __int32 Version : 2;
    unsigned __int32 ExceptionDataPresent : 1;
    unsigned __int32 EpilogInHeader : 1;
    unsigned __int32 EpilogCount : 5;
    unsigned __int32 CodeWords : 5;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3428 */
#pragma pack(push, 4)
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  ULONGLONG BeginAddress;
  ULONGLONG EndAddress;
  ULONGLONG ExceptionHandler;
  ULONGLONG HandlerData;
  ULONGLONG PrologEndAddress;
};
#pragma pack(pop)

/* 3429 */
typedef _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

/* 3430 */
typedef _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

/* 3431 */
#pragma pack(push, 4)
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  DWORD BeginAddress;
  DWORD EndAddress;
  DWORD ExceptionHandler;
  DWORD HandlerData;
  DWORD PrologEndAddress;
};
#pragma pack(pop)

/* 3432 */
typedef _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

/* 3433 */
typedef _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

/* 3435 */
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY *_PIMAGE_RUNTIME_FUNCTION_ENTRY;

/* 3436 */
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

/* 3437 */
typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

/* 3438 */
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY;

/* 3439 */
typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY;

/* 3440 */
#pragma pack(push, 4)
struct _IMAGE_ENCLAVE_CONFIG32
{
  DWORD Size;
  DWORD MinimumRequiredConfigSize;
  DWORD PolicyFlags;
  DWORD NumberOfImports;
  DWORD ImportList;
  DWORD ImportEntrySize;
  BYTE FamilyID[16];
  BYTE ImageID[16];
  DWORD ImageVersion;
  DWORD SecurityVersion;
  DWORD EnclaveSize;
  DWORD NumberOfThreads;
  DWORD EnclaveFlags;
};
#pragma pack(pop)

/* 3441 */
typedef _IMAGE_ENCLAVE_CONFIG32 IMAGE_ENCLAVE_CONFIG32;

/* 3442 */
typedef _IMAGE_ENCLAVE_CONFIG32 *PIMAGE_ENCLAVE_CONFIG32;

/* 3443 */
#pragma pack(push, 4)
struct _IMAGE_ENCLAVE_CONFIG64
{
  DWORD Size;
  DWORD MinimumRequiredConfigSize;
  DWORD PolicyFlags;
  DWORD NumberOfImports;
  DWORD ImportList;
  DWORD ImportEntrySize;
  BYTE FamilyID[16];
  BYTE ImageID[16];
  DWORD ImageVersion;
  DWORD SecurityVersion;
  ULONGLONG EnclaveSize;
  DWORD NumberOfThreads;
  DWORD EnclaveFlags;
};
#pragma pack(pop)

/* 3444 */
typedef _IMAGE_ENCLAVE_CONFIG64 IMAGE_ENCLAVE_CONFIG64;

/* 3445 */
typedef _IMAGE_ENCLAVE_CONFIG64 *PIMAGE_ENCLAVE_CONFIG64;

/* 3446 */
typedef IMAGE_ENCLAVE_CONFIG64 IMAGE_ENCLAVE_CONFIG;

/* 3447 */
typedef PIMAGE_ENCLAVE_CONFIG64 PIMAGE_ENCLAVE_CONFIG;

/* 3448 */
#pragma pack(push, 4)
struct _IMAGE_ENCLAVE_IMPORT
{
  DWORD MatchType;
  DWORD MinimumSecurityVersion;
  BYTE UniqueOrAuthorID[32];
  BYTE FamilyID[16];
  BYTE ImageID[16];
  DWORD ImportName;
  DWORD Reserved;
};
#pragma pack(pop)

/* 3449 */
typedef _IMAGE_ENCLAVE_IMPORT IMAGE_ENCLAVE_IMPORT;

/* 3450 */
typedef _IMAGE_ENCLAVE_IMPORT *PIMAGE_ENCLAVE_IMPORT;

/* 3451 */
#pragma pack(push, 4)
struct _IMAGE_DEBUG_DIRECTORY
{
  DWORD Characteristics;
  DWORD TimeDateStamp;
  WORD MajorVersion;
  WORD MinorVersion;
  DWORD Type;
  DWORD SizeOfData;
  DWORD AddressOfRawData;
  DWORD PointerToRawData;
};
#pragma pack(pop)

/* 3452 */
typedef _IMAGE_DEBUG_DIRECTORY IMAGE_DEBUG_DIRECTORY;

/* 3453 */
typedef _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;

/* 3454 */
#pragma pack(push, 4)
struct _IMAGE_COFF_SYMBOLS_HEADER
{
  DWORD NumberOfSymbols;
  DWORD LvaToFirstSymbol;
  DWORD NumberOfLinenumbers;
  DWORD LvaToFirstLinenumber;
  DWORD RvaToFirstByteOfCode;
  DWORD RvaToLastByteOfCode;
  DWORD RvaToFirstByteOfData;
  DWORD RvaToLastByteOfData;
};
#pragma pack(pop)

/* 3455 */
typedef _IMAGE_COFF_SYMBOLS_HEADER IMAGE_COFF_SYMBOLS_HEADER;

/* 3456 */
typedef _IMAGE_COFF_SYMBOLS_HEADER *PIMAGE_COFF_SYMBOLS_HEADER;

/* 3457 */
#pragma pack(push, 4)
struct _FPO_DATA
{
  DWORD ulOffStart;
  DWORD cbProcSize;
  DWORD cdwLocals;
  WORD cdwParams;
  unsigned __int16 cbProlog : 8;
  unsigned __int16 cbRegs : 3;
  unsigned __int16 fHasSEH : 1;
  unsigned __int16 fUseBP : 1;
  unsigned __int16 reserved : 1;
  unsigned __int16 cbFrame : 2;
};
#pragma pack(pop)

/* 3458 */
typedef _FPO_DATA FPO_DATA;

/* 3459 */
typedef _FPO_DATA *PFPO_DATA;

/* 3460 */
#pragma pack(push, 4)
struct _IMAGE_DEBUG_MISC
{
  DWORD DataType;
  DWORD Length;
  BOOLEAN Unicode;
  BYTE Reserved[3];
  BYTE Data[1];
};
#pragma pack(pop)

/* 3461 */
typedef _IMAGE_DEBUG_MISC IMAGE_DEBUG_MISC;

/* 3462 */
typedef _IMAGE_DEBUG_MISC *PIMAGE_DEBUG_MISC;

/* 3463 */
#pragma pack(push, 4)
struct _IMAGE_FUNCTION_ENTRY
{
  DWORD StartingAddress;
  DWORD EndingAddress;
  DWORD EndOfPrologue;
};
#pragma pack(pop)

/* 3464 */
typedef _IMAGE_FUNCTION_ENTRY IMAGE_FUNCTION_ENTRY;

/* 3465 */
typedef _IMAGE_FUNCTION_ENTRY *PIMAGE_FUNCTION_ENTRY;

/* 3467 */
#pragma pack(push, 4)
union _IMAGE_FUNCTION_ENTRY64___3D77D7EA71DF37DBAEF11B4582D443AA
{
  ULONGLONG EndOfPrologue;
  ULONGLONG UnwindInfoAddress;
};
#pragma pack(pop)

/* 3466 */
#pragma pack(push, 4)
struct _IMAGE_FUNCTION_ENTRY64
{
  ULONGLONG StartingAddress;
  ULONGLONG EndingAddress;
  #pragma pack(push, 4)
  union
  {
    ULONGLONG EndOfPrologue;
    ULONGLONG UnwindInfoAddress;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 3468 */
typedef _IMAGE_FUNCTION_ENTRY64 IMAGE_FUNCTION_ENTRY64;

/* 3469 */
typedef _IMAGE_FUNCTION_ENTRY64 *PIMAGE_FUNCTION_ENTRY64;

/* 3470 */
#pragma pack(push, 4)
struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  WORD Signature;
  WORD Flags;
  WORD Machine;
  WORD Characteristics;
  DWORD TimeDateStamp;
  DWORD CheckSum;
  DWORD ImageBase;
  DWORD SizeOfImage;
  DWORD NumberOfSections;
  DWORD ExportedNamesSize;
  DWORD DebugDirectorySize;
  DWORD SectionAlignment;
  DWORD Reserved[2];
};
#pragma pack(pop)

/* 3471 */
typedef _IMAGE_SEPARATE_DEBUG_HEADER IMAGE_SEPARATE_DEBUG_HEADER;

/* 3472 */
typedef _IMAGE_SEPARATE_DEBUG_HEADER *PIMAGE_SEPARATE_DEBUG_HEADER;

/* 3473 */
#pragma pack(push, 4)
struct _NON_PAGED_DEBUG_INFO
{
  WORD Signature;
  WORD Flags;
  DWORD Size;
  WORD Machine;
  WORD Characteristics;
  DWORD TimeDateStamp;
  DWORD CheckSum;
  DWORD SizeOfImage;
  ULONGLONG ImageBase;
};
#pragma pack(pop)

/* 3474 */
typedef _NON_PAGED_DEBUG_INFO NON_PAGED_DEBUG_INFO;

/* 3475 */
typedef _NON_PAGED_DEBUG_INFO *PNON_PAGED_DEBUG_INFO;

/* 3476 */
#pragma pack(push, 4)
struct _ImageArchitectureHeader
{
  unsigned __int32 AmaskValue : 1;
  __int32 : 7;
  unsigned __int32 AmaskShift : 8;
  __int32 : 16;
  DWORD FirstEntryRVA;
};
#pragma pack(pop)

/* 3477 */
typedef _ImageArchitectureHeader IMAGE_ARCHITECTURE_HEADER;

/* 3478 */
typedef _ImageArchitectureHeader *PIMAGE_ARCHITECTURE_HEADER;

/* 3479 */
#pragma pack(push, 4)
struct _ImageArchitectureEntry
{
  DWORD FixupInstRVA;
  DWORD NewInst;
};
#pragma pack(pop)

/* 3480 */
typedef _ImageArchitectureEntry IMAGE_ARCHITECTURE_ENTRY;

/* 3481 */
typedef _ImageArchitectureEntry *PIMAGE_ARCHITECTURE_ENTRY;

/* 3483 */
union IMPORT_OBJECT_HEADER___F13446938FF52D319F41757B924F73DA
{
  WORD Ordinal;
  WORD Hint;
};

/* 3482 */
struct IMPORT_OBJECT_HEADER
{
  WORD Sig1;
  WORD Sig2;
  WORD Version;
  WORD Machine;
  DWORD TimeDateStamp;
  DWORD SizeOfData;
  union
  {
    WORD Ordinal;
    WORD Hint;
  };
  unsigned __int16 Type : 2;
  unsigned __int16 NameType : 3;
  unsigned __int16 Reserved : 11;
};

/* 3484 */
enum IMPORT_OBJECT_TYPE : unsigned __int32
{
  IMPORT_OBJECT_CODE = 0x0,
  IMPORT_OBJECT_DATA = 0x1,
  IMPORT_OBJECT_CONST = 0x2,
};

/* 3485 */
enum IMPORT_OBJECT_NAME_TYPE : unsigned __int32
{
  IMPORT_OBJECT_ORDINAL = 0x0,
  IMPORT_OBJECT_NAME = 0x1,
  IMPORT_OBJECT_NAME_NO_PREFIX = 0x2,
  IMPORT_OBJECT_NAME_UNDECORATE = 0x3,
  IMPORT_OBJECT_NAME_EXPORTAS = 0x4,
};

/* 3486 */
enum ReplacesCorHdrNumericDefines : unsigned __int32
{
  COMIMAGE_FLAGS_ILONLY = 0x1,
  COMIMAGE_FLAGS_32BITREQUIRED = 0x2,
  COMIMAGE_FLAGS_IL_LIBRARY = 0x4,
  COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x8,
  COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x10,
  COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
  COMIMAGE_FLAGS_32BITPREFERRED = 0x20000,
  COR_VERSION_MAJOR_V2 = 0x2,
  COR_VERSION_MAJOR = 0x2,
  COR_VERSION_MINOR = 0x5,
  COR_DELETED_NAME_LENGTH = 0x8,
  COR_VTABLEGAP_NAME_LENGTH = 0x8,
  NATIVE_TYPE_MAX_CB = 0x1,
  COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 0xFF,
  IMAGE_COR_MIH_METHODRVA = 0x1,
  IMAGE_COR_MIH_EHRVA = 0x2,
  IMAGE_COR_MIH_BASICBLOCK = 0x8,
  COR_VTABLE_32BIT = 0x1,
  COR_VTABLE_64BIT = 0x2,
  COR_VTABLE_FROM_UNMANAGED = 0x4,
  COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 0x8,
  COR_VTABLE_CALL_MOST_DERIVED = 0x10,
  IMAGE_COR_EATJ_THUNK_SIZE = 0x20,
  MAX_CLASS_NAME = 0x400,
  MAX_PACKAGE_NAME = 0x400,
};

/* 3488 */
union IMAGE_COR20_HEADER___E1FE6205D93F2F82192FEC2E33E07792
{
  DWORD EntryPointToken;
  DWORD EntryPointRVA;
};

/* 3487 */
struct IMAGE_COR20_HEADER
{
  DWORD cb;
  WORD MajorRuntimeVersion;
  WORD MinorRuntimeVersion;
  IMAGE_DATA_DIRECTORY MetaData;
  DWORD Flags;
  union
  {
    DWORD EntryPointToken;
    DWORD EntryPointRVA;
  };
  IMAGE_DATA_DIRECTORY Resources;
  IMAGE_DATA_DIRECTORY StrongNameSignature;
  IMAGE_DATA_DIRECTORY CodeManagerTable;
  IMAGE_DATA_DIRECTORY VTableFixups;
  IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
  IMAGE_DATA_DIRECTORY ManagedNativeHeader;
};

/* 3489 */
typedef IMAGE_COR20_HEADER *PIMAGE_COR20_HEADER;

/* 3490 */
struct __declspec(align(16)) _SLIST_ENTRY
{
  _SLIST_ENTRY *Next;
};

/* 3491 */
typedef _SLIST_ENTRY SLIST_ENTRY;

/* 3492 */
typedef _SLIST_ENTRY *PSLIST_ENTRY;

/* 3494 */
struct _SLIST_HEADER___58A6F92BB08CDF4126C396F1D5AF624E
{
  ULONGLONG Alignment;
  ULONGLONG Region;
};

/* 3495 */
struct _SLIST_HEADER___F9F9EB832D628D73E611400623F67F2B
{
  unsigned __int64 Depth : 16;
  unsigned __int64 Sequence : 48;
  unsigned __int64 Reserved : 4;
  unsigned __int64 NextEntry : 60;
};

/* 3493 */
union __declspec(align(16)) _SLIST_HEADER
{
  struct
  {
    ULONGLONG Alignment;
    ULONGLONG Region;
  };
  _SLIST_HEADER___F9F9EB832D628D73E611400623F67F2B HeaderX64;
};

/* 3496 */
typedef _SLIST_HEADER SLIST_HEADER;

/* 3497 */
typedef _SLIST_HEADER *PSLIST_HEADER;

/* 3498 */
union _RTL_RUN_ONCE
{
  PVOID Ptr;
};

/* 3499 */
typedef _RTL_RUN_ONCE RTL_RUN_ONCE;

/* 3500 */
typedef _RTL_RUN_ONCE *PRTL_RUN_ONCE;

/* 3501 */
struct _RTL_BARRIER
{
  DWORD Reserved1;
  DWORD Reserved2;
  ULONG_PTR Reserved3[2];
  DWORD Reserved4;
  DWORD Reserved5;
};

/* 3502 */
typedef _RTL_BARRIER RTL_BARRIER;

/* 3503 */
typedef _RTL_BARRIER *PRTL_BARRIER;

/* 3504 */
struct _MESSAGE_RESOURCE_ENTRY
{
  WORD Length;
  WORD Flags;
  BYTE Text[1];
};

/* 3505 */
typedef _MESSAGE_RESOURCE_ENTRY MESSAGE_RESOURCE_ENTRY;

/* 3506 */
typedef _MESSAGE_RESOURCE_ENTRY *PMESSAGE_RESOURCE_ENTRY;

/* 3507 */
struct _MESSAGE_RESOURCE_BLOCK
{
  DWORD LowId;
  DWORD HighId;
  DWORD OffsetToEntries;
};

/* 3508 */
typedef _MESSAGE_RESOURCE_BLOCK MESSAGE_RESOURCE_BLOCK;

/* 3509 */
typedef _MESSAGE_RESOURCE_BLOCK *PMESSAGE_RESOURCE_BLOCK;

/* 3510 */
struct _MESSAGE_RESOURCE_DATA
{
  DWORD NumberOfBlocks;
  MESSAGE_RESOURCE_BLOCK Blocks[1];
};

/* 3511 */
typedef _MESSAGE_RESOURCE_DATA MESSAGE_RESOURCE_DATA;

/* 3512 */
typedef _MESSAGE_RESOURCE_DATA *PMESSAGE_RESOURCE_DATA;

/* 3513 */
struct _OSVERSIONINFOA
{
  DWORD dwOSVersionInfoSize;
  DWORD dwMajorVersion;
  DWORD dwMinorVersion;
  DWORD dwBuildNumber;
  DWORD dwPlatformId;
  CHAR szCSDVersion[128];
};

/* 3514 */
typedef _OSVERSIONINFOA OSVERSIONINFOA;

/* 3515 */
typedef _OSVERSIONINFOA *POSVERSIONINFOA;

/* 3516 */
typedef _OSVERSIONINFOA *LPOSVERSIONINFOA;

/* 3517 */
struct _OSVERSIONINFOW
{
  DWORD dwOSVersionInfoSize;
  DWORD dwMajorVersion;
  DWORD dwMinorVersion;
  DWORD dwBuildNumber;
  DWORD dwPlatformId;
  WCHAR szCSDVersion[128];
};

/* 3518 */
typedef _OSVERSIONINFOW OSVERSIONINFOW;

/* 3519 */
typedef _OSVERSIONINFOW *POSVERSIONINFOW;

/* 3520 */
typedef _OSVERSIONINFOW *LPOSVERSIONINFOW;

/* 3521 */
typedef _OSVERSIONINFOW RTL_OSVERSIONINFOW;

/* 3522 */
typedef _OSVERSIONINFOW *PRTL_OSVERSIONINFOW;

/* 3523 */
typedef OSVERSIONINFOA OSVERSIONINFO;

/* 3524 */
typedef POSVERSIONINFOA POSVERSIONINFO;

/* 3525 */
typedef LPOSVERSIONINFOA LPOSVERSIONINFO;

/* 3526 */
struct _OSVERSIONINFOEXA
{
  DWORD dwOSVersionInfoSize;
  DWORD dwMajorVersion;
  DWORD dwMinorVersion;
  DWORD dwBuildNumber;
  DWORD dwPlatformId;
  CHAR szCSDVersion[128];
  WORD wServicePackMajor;
  WORD wServicePackMinor;
  WORD wSuiteMask;
  BYTE wProductType;
  BYTE wReserved;
};

/* 3527 */
typedef _OSVERSIONINFOEXA OSVERSIONINFOEXA;

/* 3528 */
typedef _OSVERSIONINFOEXA *POSVERSIONINFOEXA;

/* 3529 */
typedef _OSVERSIONINFOEXA *LPOSVERSIONINFOEXA;

/* 3530 */
struct _OSVERSIONINFOEXW
{
  DWORD dwOSVersionInfoSize;
  DWORD dwMajorVersion;
  DWORD dwMinorVersion;
  DWORD dwBuildNumber;
  DWORD dwPlatformId;
  WCHAR szCSDVersion[128];
  WORD wServicePackMajor;
  WORD wServicePackMinor;
  WORD wSuiteMask;
  BYTE wProductType;
  BYTE wReserved;
};

/* 3531 */
typedef _OSVERSIONINFOEXW OSVERSIONINFOEXW;

/* 3532 */
typedef _OSVERSIONINFOEXW *POSVERSIONINFOEXW;

/* 3533 */
typedef _OSVERSIONINFOEXW *LPOSVERSIONINFOEXW;

/* 3534 */
typedef _OSVERSIONINFOEXW RTL_OSVERSIONINFOEXW;

/* 3535 */
typedef _OSVERSIONINFOEXW *PRTL_OSVERSIONINFOEXW;

/* 3536 */
typedef OSVERSIONINFOEXA OSVERSIONINFOEX;

/* 3537 */
typedef POSVERSIONINFOEXA POSVERSIONINFOEX;

/* 3538 */
typedef LPOSVERSIONINFOEXA LPOSVERSIONINFOEX;

/* 3539 */
enum _RTL_UMS_THREAD_INFO_CLASS : unsigned __int32
{
  UmsThreadInvalidInfoClass = 0x0,
  UmsThreadUserContext = 0x1,
  UmsThreadPriority = 0x2,
  UmsThreadAffinity = 0x3,
  UmsThreadTeb = 0x4,
  UmsThreadIsSuspended = 0x5,
  UmsThreadIsTerminated = 0x6,
  UmsThreadMaxInfoClass = 0x7,
};

/* 3540 */
typedef _RTL_UMS_THREAD_INFO_CLASS RTL_UMS_THREAD_INFO_CLASS;

/* 3541 */
typedef _RTL_UMS_THREAD_INFO_CLASS *PRTL_UMS_THREAD_INFO_CLASS;

/* 3542 */
enum _RTL_UMS_SCHEDULER_REASON : unsigned __int32
{
  UmsSchedulerStartup = 0x0,
  UmsSchedulerThreadBlocked = 0x1,
  UmsSchedulerThreadYield = 0x2,
};

/* 3543 */
typedef _RTL_UMS_SCHEDULER_REASON RTL_UMS_SCHEDULER_REASON;

/* 3544 */
typedef _RTL_UMS_SCHEDULER_REASON *PRTL_UMS_SCHEDULER_REASON;

/* 3545 */
typedef void __cdecl _E937256249A7FF14986945CD2F539EE0(RTL_UMS_SCHEDULER_REASON, ULONG_PTR, PVOID);

/* 3546 */
typedef void (__cdecl *PRTL_UMS_SCHEDULER_ENTRY_POINT)(RTL_UMS_SCHEDULER_REASON, ULONG_PTR, PVOID);

/* 3547 */
enum _OS_DEPLOYEMENT_STATE_VALUES : unsigned __int32
{
  OS_DEPLOYMENT_STANDARD = 0x1,
  OS_DEPLOYMENT_COMPACT = 0x2,
};

/* 3548 */
typedef _OS_DEPLOYEMENT_STATE_VALUES OS_DEPLOYEMENT_STATE_VALUES;

/* 3549 */
struct _NV_MEMORY_RANGE
{
  void *BaseAddress;
  SIZE_T Length;
};

/* 3550 */
typedef _NV_MEMORY_RANGE NV_MEMORY_RANGE;

/* 3551 */
typedef _NV_MEMORY_RANGE *PNV_MEMORY_RANGE;

/* 3552 */
struct CORRELATION_VECTOR
{
  CHAR Version;
  CHAR Vector[129];
};

/* 3553 */
typedef CORRELATION_VECTOR *PCORRELATION_VECTOR;

/* 3554 */
struct _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG
{
  DWORD Size;
  PCWSTR TriggerId;
};

/* 3555 */
typedef _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG;

/* 3556 */
typedef _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG *PCUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG;

/* 3557 */
enum _IMAGE_POLICY_ENTRY_TYPE : unsigned __int32
{
  ImagePolicyEntryTypeNone = 0x0,
  ImagePolicyEntryTypeBool = 0x1,
  ImagePolicyEntryTypeInt8 = 0x2,
  ImagePolicyEntryTypeUInt8 = 0x3,
  ImagePolicyEntryTypeInt16 = 0x4,
  ImagePolicyEntryTypeUInt16 = 0x5,
  ImagePolicyEntryTypeInt32 = 0x6,
  ImagePolicyEntryTypeUInt32 = 0x7,
  ImagePolicyEntryTypeInt64 = 0x8,
  ImagePolicyEntryTypeUInt64 = 0x9,
  ImagePolicyEntryTypeAnsiString = 0xA,
  ImagePolicyEntryTypeUnicodeString = 0xB,
  ImagePolicyEntryTypeOverride = 0xC,
  ImagePolicyEntryTypeMaximum = 0xD,
};

/* 3558 */
typedef _IMAGE_POLICY_ENTRY_TYPE IMAGE_POLICY_ENTRY_TYPE;

/* 3559 */
enum _IMAGE_POLICY_ID : unsigned __int32
{
  ImagePolicyIdNone = 0x0,
  ImagePolicyIdEtw = 0x1,
  ImagePolicyIdDebug = 0x2,
  ImagePolicyIdCrashDump = 0x3,
  ImagePolicyIdCrashDumpKey = 0x4,
  ImagePolicyIdCrashDumpKeyGuid = 0x5,
  ImagePolicyIdParentSd = 0x6,
  ImagePolicyIdParentSdRev = 0x7,
  ImagePolicyIdSvn = 0x8,
  ImagePolicyIdDeviceId = 0x9,
  ImagePolicyIdCapability = 0xA,
  ImagePolicyIdScenarioId = 0xB,
  ImagePolicyIdMaximum = 0xC,
};

/* 3560 */
typedef _IMAGE_POLICY_ID IMAGE_POLICY_ID;

/* 3562 */
union _IMAGE_POLICY_ENTRY___3C333738E8F6485347B0F0631B642D30
{
  const void *None;
  BOOLEAN BoolValue;
  INT8 Int8Value;
  UINT8 UInt8Value;
  INT16 Int16Value;
  UINT16 UInt16Value;
  INT32 Int32Value;
  UINT32 UInt32Value;
  INT64 Int64Value;
  UINT64 UInt64Value;
  PCSTR AnsiStringValue;
  PCWSTR UnicodeStringValue;
};

/* 3561 */
struct _IMAGE_POLICY_ENTRY
{
  IMAGE_POLICY_ENTRY_TYPE Type;
  IMAGE_POLICY_ID PolicyId;
  _IMAGE_POLICY_ENTRY___3C333738E8F6485347B0F0631B642D30 u;
};

/* 3563 */
typedef _IMAGE_POLICY_ENTRY IMAGE_POLICY_ENTRY;

/* 3564 */
typedef const IMAGE_POLICY_ENTRY *PCIMAGE_POLICY_ENTRY;

/* 3565 */
struct _IMAGE_POLICY_METADATA
{
  BYTE Version;
  BYTE Reserved0[7];
  ULONGLONG ApplicationId;
};

/* 3566 */
typedef _IMAGE_POLICY_METADATA IMAGE_POLICY_METADATA;

/* 3567 */
typedef const IMAGE_POLICY_METADATA *PCIMAGE_POLICY_METADATA;

/* 3568 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  WORD Type;
  WORD CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  LIST_ENTRY ProcessLocksList;
  DWORD EntryCount;
  DWORD ContentionCount;
  DWORD Flags;
  WORD CreatorBackTraceIndexHigh;
  WORD SpareWORD;
};

/* 3570 */
typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 3569 */
#pragma pack(push, 8)
struct _RTL_CRITICAL_SECTION
{
  PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
  LONG LockCount;
  LONG RecursionCount;
  HANDLE OwningThread;
  HANDLE LockSemaphore;
  ULONG_PTR SpinCount;
};
#pragma pack(pop)

/* 3571 */
typedef _RTL_CRITICAL_SECTION_DEBUG RTL_CRITICAL_SECTION_DEBUG;

/* 3572 */
typedef _RTL_CRITICAL_SECTION_DEBUG RTL_RESOURCE_DEBUG;

/* 3573 */
typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_RESOURCE_DEBUG;

/* 3574 */
typedef _RTL_CRITICAL_SECTION RTL_CRITICAL_SECTION;

/* 3575 */
typedef _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;

/* 3576 */
struct _RTL_SRWLOCK
{
  PVOID Ptr;
};

/* 3577 */
typedef _RTL_SRWLOCK RTL_SRWLOCK;

/* 3578 */
typedef _RTL_SRWLOCK *PRTL_SRWLOCK;

/* 3579 */
struct _RTL_CONDITION_VARIABLE
{
  PVOID Ptr;
};

/* 3580 */
typedef _RTL_CONDITION_VARIABLE RTL_CONDITION_VARIABLE;

/* 3581 */
typedef _RTL_CONDITION_VARIABLE *PRTL_CONDITION_VARIABLE;

/* 3582 */
typedef void (__cdecl *PAPCFUNC)(ULONG_PTR);

/* 3583 */
typedef LONG (__cdecl *PVECTORED_EXCEPTION_HANDLER)(_EXCEPTION_POINTERS *);

/* 3584 */
enum _HEAP_INFORMATION_CLASS : unsigned __int32
{
  HeapCompatibilityInformation = 0x0,
  HeapEnableTerminationOnCorruption = 0x1,
  HeapOptimizeResources = 0x3,
};

/* 3585 */
typedef _HEAP_INFORMATION_CLASS HEAP_INFORMATION_CLASS;

/* 3586 */
struct _HEAP_OPTIMIZE_RESOURCES_INFORMATION
{
  DWORD Version;
  DWORD Flags;
};

/* 3587 */
typedef _HEAP_OPTIMIZE_RESOURCES_INFORMATION HEAP_OPTIMIZE_RESOURCES_INFORMATION;

/* 3588 */
typedef _HEAP_OPTIMIZE_RESOURCES_INFORMATION *PHEAP_OPTIMIZE_RESOURCES_INFORMATION;

/* 3589 */
typedef void (__cdecl *WAITORTIMERCALLBACKFUNC)(PVOID, BOOLEAN);

/* 3590 */
typedef void (__cdecl *WORKERCALLBACKFUNC)(PVOID);

/* 3591 */
typedef void (__cdecl *APC_CALLBACK_FUNCTION)(DWORD, PVOID, PVOID);

/* 3592 */
typedef WAITORTIMERCALLBACKFUNC WAITORTIMERCALLBACK;

/* 3593 */
typedef void (__cdecl *PFLS_CALLBACK_FUNCTION)(PVOID);

/* 3594 */
typedef BOOLEAN (__cdecl *PSECURE_MEMORY_CACHE_CALLBACK)(PVOID, SIZE_T);

/* 3595 */
enum _ACTIVATION_CONTEXT_INFO_CLASS : unsigned __int32
{
  ActivationContextBasicInformation = 0x1,
  ActivationContextDetailedInformation = 0x2,
  AssemblyDetailedInformationInActivationContext = 0x3,
  FileInformationInAssemblyOfAssemblyInActivationContext = 0x4,
  RunlevelInformationInActivationContext = 0x5,
  CompatibilityInformationInActivationContext = 0x6,
  ActivationContextManifestResourceName = 0x7,
  MaxActivationContextInfoClass = 0x8,
  AssemblyDetailedInformationInActivationContxt = 0x3,
  FileInformationInAssemblyOfAssemblyInActivationContxt = 0x4,
};

/* 3596 */
typedef _ACTIVATION_CONTEXT_INFO_CLASS ACTIVATION_CONTEXT_INFO_CLASS;

/* 3597 */
struct _ACTIVATION_CONTEXT_QUERY_INDEX
{
  DWORD ulAssemblyIndex;
  DWORD ulFileIndexInAssembly;
};

/* 3598 */
typedef _ACTIVATION_CONTEXT_QUERY_INDEX ACTIVATION_CONTEXT_QUERY_INDEX;

/* 3599 */
typedef _ACTIVATION_CONTEXT_QUERY_INDEX *PACTIVATION_CONTEXT_QUERY_INDEX;

/* 3600 */
typedef const _ACTIVATION_CONTEXT_QUERY_INDEX *PCACTIVATION_CONTEXT_QUERY_INDEX;

/* 3601 */
struct _ASSEMBLY_FILE_DETAILED_INFORMATION
{
  DWORD ulFlags;
  DWORD ulFilenameLength;
  DWORD ulPathLength;
  PCWSTR lpFileName;
  PCWSTR lpFilePath;
};

/* 3602 */
typedef _ASSEMBLY_FILE_DETAILED_INFORMATION ASSEMBLY_FILE_DETAILED_INFORMATION;

/* 3603 */
typedef _ASSEMBLY_FILE_DETAILED_INFORMATION *PASSEMBLY_FILE_DETAILED_INFORMATION;

/* 3604 */
typedef const ASSEMBLY_FILE_DETAILED_INFORMATION *PCASSEMBLY_FILE_DETAILED_INFORMATION;

/* 3605 */
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
{
  DWORD ulFlags;
  DWORD ulEncodedAssemblyIdentityLength;
  DWORD ulManifestPathType;
  DWORD ulManifestPathLength;
  LARGE_INTEGER liManifestLastWriteTime;
  DWORD ulPolicyPathType;
  DWORD ulPolicyPathLength;
  LARGE_INTEGER liPolicyLastWriteTime;
  DWORD ulMetadataSatelliteRosterIndex;
  DWORD ulManifestVersionMajor;
  DWORD ulManifestVersionMinor;
  DWORD ulPolicyVersionMajor;
  DWORD ulPolicyVersionMinor;
  DWORD ulAssemblyDirectoryNameLength;
  PCWSTR lpAssemblyEncodedAssemblyIdentity;
  PCWSTR lpAssemblyManifestPath;
  PCWSTR lpAssemblyPolicyPath;
  PCWSTR lpAssemblyDirectoryName;
  DWORD ulFileCount;
};

/* 3606 */
typedef _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

/* 3607 */
typedef _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

/* 3608 */
typedef const _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

/* 3609 */
enum ACTCTX_REQUESTED_RUN_LEVEL : unsigned __int32
{
  ACTCTX_RUN_LEVEL_UNSPECIFIED = 0x0,
  ACTCTX_RUN_LEVEL_AS_INVOKER = 0x1,
  ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 0x2,
  ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 0x3,
  ACTCTX_RUN_LEVEL_NUMBERS = 0x4,
};

/* 3610 */
struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
{
  DWORD ulFlags;
  ACTCTX_REQUESTED_RUN_LEVEL RunLevel;
  DWORD UiAccess;
};

/* 3611 */
typedef _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;

/* 3612 */
typedef _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION *PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;

/* 3613 */
typedef const _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION *PCACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;

/* 3614 */
enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE : unsigned __int32
{
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0x0,
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 0x1,
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 0x2,
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MAXVERSIONTESTED = 0x3,
};

/* 3615 */
struct _COMPATIBILITY_CONTEXT_ELEMENT
{
  GUID Id;
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type;
  ULONGLONG MaxVersionTested;
};

/* 3616 */
typedef _COMPATIBILITY_CONTEXT_ELEMENT COMPATIBILITY_CONTEXT_ELEMENT;

/* 3617 */
typedef _COMPATIBILITY_CONTEXT_ELEMENT *PCOMPATIBILITY_CONTEXT_ELEMENT;

/* 3618 */
typedef const _COMPATIBILITY_CONTEXT_ELEMENT *PCCOMPATIBILITY_CONTEXT_ELEMENT;

/* 3619 */
struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION
{
  DWORD ElementCount;
};

/* 3620 */
typedef _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;

/* 3621 */
typedef _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION *PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;

/* 3622 */
typedef const _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION *PCACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;

/* 3623 */
struct _SUPPORTED_OS_INFO
{
  WORD MajorVersion;
  WORD MinorVersion;
};

/* 3624 */
typedef _SUPPORTED_OS_INFO SUPPORTED_OS_INFO;

/* 3625 */
typedef _SUPPORTED_OS_INFO *PSUPPORTED_OS_INFO;

/* 3626 */
struct _MAXVERSIONTESTED_INFO
{
  ULONGLONG MaxVersionTested;
};

/* 3627 */
typedef _MAXVERSIONTESTED_INFO MAXVERSIONTESTED_INFO;

/* 3628 */
typedef _MAXVERSIONTESTED_INFO *PMAXVERSIONTESTED_INFO;

/* 3629 */
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION
{
  DWORD dwFlags;
  DWORD ulFormatVersion;
  DWORD ulAssemblyCount;
  DWORD ulRootManifestPathType;
  DWORD ulRootManifestPathChars;
  DWORD ulRootConfigurationPathType;
  DWORD ulRootConfigurationPathChars;
  DWORD ulAppDirPathType;
  DWORD ulAppDirPathChars;
  PCWSTR lpRootManifestPath;
  PCWSTR lpRootConfigurationPath;
  PCWSTR lpAppDirPath;
};

/* 3630 */
typedef _ACTIVATION_CONTEXT_DETAILED_INFORMATION ACTIVATION_CONTEXT_DETAILED_INFORMATION;

/* 3631 */
typedef _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PACTIVATION_CONTEXT_DETAILED_INFORMATION;

/* 3632 */
typedef const _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_DETAILED_INFORMATION;

/* 3633 */
struct _HARDWARE_COUNTER_DATA
{
  HARDWARE_COUNTER_TYPE Type;
  DWORD Reserved;
  DWORD64 Value;
};

/* 3634 */
typedef _HARDWARE_COUNTER_DATA HARDWARE_COUNTER_DATA;

/* 3635 */
typedef _HARDWARE_COUNTER_DATA *PHARDWARE_COUNTER_DATA;

/* 3636 */
struct _PERFORMANCE_DATA
{
  WORD Size;
  BYTE Version;
  BYTE HwCountersCount;
  DWORD ContextSwitchCount;
  DWORD64 WaitReasonBitMap;
  DWORD64 CycleTime;
  DWORD RetryCount;
  DWORD Reserved;
  HARDWARE_COUNTER_DATA HwCounters[16];
};

/* 3637 */
typedef _PERFORMANCE_DATA PERFORMANCE_DATA;

/* 3638 */
typedef _PERFORMANCE_DATA *PPERFORMANCE_DATA;

/* 3639 */
struct _EVENTLOGRECORD
{
  DWORD Length;
  DWORD Reserved;
  DWORD RecordNumber;
  DWORD TimeGenerated;
  DWORD TimeWritten;
  DWORD EventID;
  WORD EventType;
  WORD NumStrings;
  WORD EventCategory;
  WORD ReservedFlags;
  DWORD ClosingRecordNumber;
  DWORD StringOffset;
  DWORD UserSidLength;
  DWORD UserSidOffset;
  DWORD DataLength;
  DWORD DataOffset;
};

/* 3640 */
typedef _EVENTLOGRECORD EVENTLOGRECORD;

/* 3641 */
typedef _EVENTLOGRECORD *PEVENTLOGRECORD;

/* 3642 */
struct _EVENTSFORLOGFILE
{
  DWORD ulSize;
  WCHAR szLogicalLogFile[256];
  DWORD ulNumRecords;
};

/* 3643 */
typedef _EVENTSFORLOGFILE EVENTSFORLOGFILE;

/* 3644 */
typedef _EVENTSFORLOGFILE *PEVENTSFORLOGFILE;

/* 3645 */
struct _PACKEDEVENTINFO
{
  DWORD ulSize;
  DWORD ulNumEventsForLogFile;
};

/* 3646 */
typedef _PACKEDEVENTINFO PACKEDEVENTINFO;

/* 3647 */
typedef _PACKEDEVENTINFO *PPACKEDEVENTINFO;

/* 3648 */
enum _CM_SERVICE_NODE_TYPE : unsigned __int32
{
  DriverType = 0x1,
  FileSystemType = 0x2,
  Win32ServiceOwnProcess = 0x10,
  Win32ServiceShareProcess = 0x20,
  AdapterType = 0x4,
  RecognizerType = 0x8,
};

/* 3649 */
typedef _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;

/* 3650 */
enum _CM_SERVICE_LOAD_TYPE : unsigned __int32
{
  BootLoad = 0x0,
  SystemLoad = 0x1,
  AutoLoad = 0x2,
  DemandLoad = 0x3,
  DisableLoad = 0x4,
};

/* 3651 */
typedef _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;

/* 3652 */
enum _CM_ERROR_CONTROL_TYPE : unsigned __int32
{
  IgnoreError = 0x0,
  NormalError = 0x1,
  SevereError = 0x2,
  CriticalError = 0x3,
};

/* 3653 */
typedef _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;

/* 3654 */
struct _TAPE_ERASE
{
  DWORD Type;
  BOOLEAN Immediate;
};

/* 3655 */
typedef _TAPE_ERASE TAPE_ERASE;

/* 3656 */
typedef _TAPE_ERASE *PTAPE_ERASE;

/* 3657 */
struct _TAPE_PREPARE
{
  DWORD Operation;
  BOOLEAN Immediate;
};

/* 3658 */
typedef _TAPE_PREPARE TAPE_PREPARE;

/* 3659 */
typedef _TAPE_PREPARE *PTAPE_PREPARE;

/* 3660 */
struct _TAPE_WRITE_MARKS
{
  DWORD Type;
  DWORD Count;
  BOOLEAN Immediate;
};

/* 3661 */
typedef _TAPE_WRITE_MARKS TAPE_WRITE_MARKS;

/* 3662 */
typedef _TAPE_WRITE_MARKS *PTAPE_WRITE_MARKS;

/* 3663 */
struct _TAPE_GET_POSITION
{
  DWORD Type;
  DWORD Partition;
  LARGE_INTEGER Offset;
};

/* 3664 */
typedef _TAPE_GET_POSITION TAPE_GET_POSITION;

/* 3665 */
typedef _TAPE_GET_POSITION *PTAPE_GET_POSITION;

/* 3666 */
struct _TAPE_SET_POSITION
{
  DWORD Method;
  DWORD Partition;
  LARGE_INTEGER Offset;
  BOOLEAN Immediate;
};

/* 3667 */
typedef _TAPE_SET_POSITION TAPE_SET_POSITION;

/* 3668 */
typedef _TAPE_SET_POSITION *PTAPE_SET_POSITION;

/* 3669 */
struct _TAPE_GET_DRIVE_PARAMETERS
{
  BOOLEAN ECC;
  BOOLEAN Compression;
  BOOLEAN DataPadding;
  BOOLEAN ReportSetmarks;
  DWORD DefaultBlockSize;
  DWORD MaximumBlockSize;
  DWORD MinimumBlockSize;
  DWORD MaximumPartitionCount;
  DWORD FeaturesLow;
  DWORD FeaturesHigh;
  DWORD EOTWarningZoneSize;
};

/* 3670 */
typedef _TAPE_GET_DRIVE_PARAMETERS TAPE_GET_DRIVE_PARAMETERS;

/* 3671 */
typedef _TAPE_GET_DRIVE_PARAMETERS *PTAPE_GET_DRIVE_PARAMETERS;

/* 3672 */
struct _TAPE_SET_DRIVE_PARAMETERS
{
  BOOLEAN ECC;
  BOOLEAN Compression;
  BOOLEAN DataPadding;
  BOOLEAN ReportSetmarks;
  DWORD EOTWarningZoneSize;
};

/* 3673 */
typedef _TAPE_SET_DRIVE_PARAMETERS TAPE_SET_DRIVE_PARAMETERS;

/* 3674 */
typedef _TAPE_SET_DRIVE_PARAMETERS *PTAPE_SET_DRIVE_PARAMETERS;

/* 3675 */
struct _TAPE_GET_MEDIA_PARAMETERS
{
  LARGE_INTEGER Capacity;
  LARGE_INTEGER Remaining;
  DWORD BlockSize;
  DWORD PartitionCount;
  BOOLEAN WriteProtected;
};

/* 3676 */
typedef _TAPE_GET_MEDIA_PARAMETERS TAPE_GET_MEDIA_PARAMETERS;

/* 3677 */
typedef _TAPE_GET_MEDIA_PARAMETERS *PTAPE_GET_MEDIA_PARAMETERS;

/* 3678 */
struct _TAPE_SET_MEDIA_PARAMETERS
{
  DWORD BlockSize;
};

/* 3679 */
typedef _TAPE_SET_MEDIA_PARAMETERS TAPE_SET_MEDIA_PARAMETERS;

/* 3680 */
typedef _TAPE_SET_MEDIA_PARAMETERS *PTAPE_SET_MEDIA_PARAMETERS;

/* 3681 */
struct _TAPE_CREATE_PARTITION
{
  DWORD Method;
  DWORD Count;
  DWORD Size;
};

/* 3682 */
typedef _TAPE_CREATE_PARTITION TAPE_CREATE_PARTITION;

/* 3683 */
typedef _TAPE_CREATE_PARTITION *PTAPE_CREATE_PARTITION;

/* 3684 */
struct _TAPE_WMI_OPERATIONS
{
  DWORD Method;
  DWORD DataBufferSize;
  PVOID DataBuffer;
};

/* 3685 */
typedef _TAPE_WMI_OPERATIONS TAPE_WMI_OPERATIONS;

/* 3686 */
typedef _TAPE_WMI_OPERATIONS *PTAPE_WMI_OPERATIONS;

/* 3687 */
enum _TAPE_DRIVE_PROBLEM_TYPE : unsigned __int32
{
  TapeDriveProblemNone = 0x0,
  TapeDriveReadWriteWarning = 0x1,
  TapeDriveReadWriteError = 0x2,
  TapeDriveReadWarning = 0x3,
  TapeDriveWriteWarning = 0x4,
  TapeDriveReadError = 0x5,
  TapeDriveWriteError = 0x6,
  TapeDriveHardwareError = 0x7,
  TapeDriveUnsupportedMedia = 0x8,
  TapeDriveScsiConnectionError = 0x9,
  TapeDriveTimetoClean = 0xA,
  TapeDriveCleanDriveNow = 0xB,
  TapeDriveMediaLifeExpired = 0xC,
  TapeDriveSnappedTape = 0xD,
};

/* 3688 */
typedef _TAPE_DRIVE_PROBLEM_TYPE TAPE_DRIVE_PROBLEM_TYPE;

/* 3689 */
typedef GUID UOW;

/* 3690 */
typedef GUID *PUOW;

/* 3691 */
typedef GUID CRM_PROTOCOL_ID;

/* 3692 */
typedef GUID *PCRM_PROTOCOL_ID;

/* 3693 */
typedef ULONG NOTIFICATION_MASK;

/* 3694 */
struct _TRANSACTION_NOTIFICATION
{
  PVOID TransactionKey;
  ULONG TransactionNotification;
  LARGE_INTEGER TmVirtualClock;
  ULONG ArgumentLength;
};

/* 3695 */
typedef _TRANSACTION_NOTIFICATION TRANSACTION_NOTIFICATION;

/* 3696 */
typedef _TRANSACTION_NOTIFICATION *PTRANSACTION_NOTIFICATION;

/* 3697 */
struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT
{
  GUID EnlistmentId;
  UOW UOW;
};

/* 3698 */
typedef _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;

/* 3699 */
typedef _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT *PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;

/* 3700 */
struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT
{
  GUID TmIdentity;
  ULONG Flags;
};

/* 3701 */
typedef _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;

/* 3702 */
typedef _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT *PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;

/* 3703 */
typedef ULONG SAVEPOINT_ID;

/* 3704 */
typedef ULONG *PSAVEPOINT_ID;

/* 3705 */
struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT
{
  SAVEPOINT_ID SavepointId;
};

/* 3706 */
typedef _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;

/* 3707 */
typedef _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT *PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;

/* 3708 */
struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT
{
  ULONG PropagationCookie;
  GUID UOW;
  GUID TmIdentity;
  ULONG BufferLength;
};

/* 3709 */
typedef _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;

/* 3710 */
typedef _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT *PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;

/* 3711 */
struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT
{
  ULONG MarshalCookie;
  GUID UOW;
};

/* 3712 */
typedef _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;

/* 3713 */
typedef _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT *PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;

/* 3714 */
typedef TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT TRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT;

/* 3715 */
typedef TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT *PTRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT;

/* 3716 */
struct _KCRM_MARSHAL_HEADER
{
  ULONG VersionMajor;
  ULONG VersionMinor;
  ULONG NumProtocols;
  ULONG Unused;
};

/* 3717 */
typedef _KCRM_MARSHAL_HEADER KCRM_MARSHAL_HEADER;

/* 3718 */
typedef _KCRM_MARSHAL_HEADER *PKCRM_MARSHAL_HEADER;

/* 3719 */
typedef _KCRM_MARSHAL_HEADER *PRKCRM_MARSHAL_HEADER;

/* 3720 */
struct _KCRM_TRANSACTION_BLOB
{
  UOW UOW;
  GUID TmIdentity;
  ULONG IsolationLevel;
  ULONG IsolationFlags;
  ULONG Timeout;
  WCHAR Description[64];
};

/* 3721 */
typedef _KCRM_TRANSACTION_BLOB KCRM_TRANSACTION_BLOB;

/* 3722 */
typedef _KCRM_TRANSACTION_BLOB *PKCRM_TRANSACTION_BLOB;

/* 3723 */
typedef _KCRM_TRANSACTION_BLOB *PRKCRM_TRANSACTION_BLOB;

/* 3724 */
struct _KCRM_PROTOCOL_BLOB
{
  CRM_PROTOCOL_ID ProtocolId;
  ULONG StaticInfoLength;
  ULONG TransactionIdInfoLength;
  ULONG Unused1;
  ULONG Unused2;
};

/* 3725 */
typedef _KCRM_PROTOCOL_BLOB KCRM_PROTOCOL_BLOB;

/* 3726 */
typedef _KCRM_PROTOCOL_BLOB *PKCRM_PROTOCOL_BLOB;

/* 3727 */
typedef _KCRM_PROTOCOL_BLOB *PRKCRM_PROTOCOL_BLOB;

/* 3728 */
enum _TRANSACTION_OUTCOME : unsigned __int32
{
  TransactionOutcomeUndetermined = 0x1,
  TransactionOutcomeCommitted = 0x2,
  TransactionOutcomeAborted = 0x3,
};

/* 3729 */
typedef _TRANSACTION_OUTCOME TRANSACTION_OUTCOME;

/* 3730 */
enum _TRANSACTION_STATE : unsigned __int32
{
  TransactionStateNormal = 0x1,
  TransactionStateIndoubt = 0x2,
  TransactionStateCommittedNotify = 0x3,
};

/* 3731 */
typedef _TRANSACTION_STATE TRANSACTION_STATE;

/* 3732 */
struct _TRANSACTION_BASIC_INFORMATION
{
  GUID TransactionId;
  DWORD State;
  DWORD Outcome;
};

/* 3733 */
typedef _TRANSACTION_BASIC_INFORMATION TRANSACTION_BASIC_INFORMATION;

/* 3734 */
typedef _TRANSACTION_BASIC_INFORMATION *PTRANSACTION_BASIC_INFORMATION;

/* 3735 */
struct _TRANSACTIONMANAGER_BASIC_INFORMATION
{
  GUID TmIdentity;
  LARGE_INTEGER VirtualClock;
};

/* 3736 */
typedef _TRANSACTIONMANAGER_BASIC_INFORMATION TRANSACTIONMANAGER_BASIC_INFORMATION;

/* 3737 */
typedef _TRANSACTIONMANAGER_BASIC_INFORMATION *PTRANSACTIONMANAGER_BASIC_INFORMATION;

/* 3738 */
struct _TRANSACTIONMANAGER_LOG_INFORMATION
{
  GUID LogIdentity;
};

/* 3739 */
typedef _TRANSACTIONMANAGER_LOG_INFORMATION TRANSACTIONMANAGER_LOG_INFORMATION;

/* 3740 */
typedef _TRANSACTIONMANAGER_LOG_INFORMATION *PTRANSACTIONMANAGER_LOG_INFORMATION;

/* 3741 */
struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION
{
  DWORD LogPathLength;
  WCHAR LogPath[1];
};

/* 3742 */
typedef _TRANSACTIONMANAGER_LOGPATH_INFORMATION TRANSACTIONMANAGER_LOGPATH_INFORMATION;

/* 3743 */
typedef _TRANSACTIONMANAGER_LOGPATH_INFORMATION *PTRANSACTIONMANAGER_LOGPATH_INFORMATION;

/* 3744 */
struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION
{
  ULONGLONG LastRecoveredLsn;
};

/* 3745 */
typedef _TRANSACTIONMANAGER_RECOVERY_INFORMATION TRANSACTIONMANAGER_RECOVERY_INFORMATION;

/* 3746 */
typedef _TRANSACTIONMANAGER_RECOVERY_INFORMATION *PTRANSACTIONMANAGER_RECOVERY_INFORMATION;

/* 3747 */
struct _TRANSACTIONMANAGER_OLDEST_INFORMATION
{
  GUID OldestTransactionGuid;
};

/* 3748 */
typedef _TRANSACTIONMANAGER_OLDEST_INFORMATION TRANSACTIONMANAGER_OLDEST_INFORMATION;

/* 3749 */
typedef _TRANSACTIONMANAGER_OLDEST_INFORMATION *PTRANSACTIONMANAGER_OLDEST_INFORMATION;

/* 3750 */
struct _TRANSACTION_PROPERTIES_INFORMATION
{
  DWORD IsolationLevel;
  DWORD IsolationFlags;
  LARGE_INTEGER Timeout;
  DWORD Outcome;
  DWORD DescriptionLength;
  WCHAR Description[1];
};

/* 3751 */
typedef _TRANSACTION_PROPERTIES_INFORMATION TRANSACTION_PROPERTIES_INFORMATION;

/* 3752 */
typedef _TRANSACTION_PROPERTIES_INFORMATION *PTRANSACTION_PROPERTIES_INFORMATION;

/* 3753 */
struct _TRANSACTION_BIND_INFORMATION
{
  HANDLE TmHandle;
};

/* 3754 */
typedef _TRANSACTION_BIND_INFORMATION TRANSACTION_BIND_INFORMATION;

/* 3755 */
typedef _TRANSACTION_BIND_INFORMATION *PTRANSACTION_BIND_INFORMATION;

/* 3756 */
struct _TRANSACTION_ENLISTMENT_PAIR
{
  GUID EnlistmentId;
  GUID ResourceManagerId;
};

/* 3757 */
typedef _TRANSACTION_ENLISTMENT_PAIR TRANSACTION_ENLISTMENT_PAIR;

/* 3758 */
typedef _TRANSACTION_ENLISTMENT_PAIR *PTRANSACTION_ENLISTMENT_PAIR;

/* 3759 */
struct _TRANSACTION_ENLISTMENTS_INFORMATION
{
  DWORD NumberOfEnlistments;
  TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1];
};

/* 3760 */
typedef _TRANSACTION_ENLISTMENTS_INFORMATION TRANSACTION_ENLISTMENTS_INFORMATION;

/* 3761 */
typedef _TRANSACTION_ENLISTMENTS_INFORMATION *PTRANSACTION_ENLISTMENTS_INFORMATION;

/* 3762 */
struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
{
  TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
};

/* 3763 */
typedef _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;

/* 3764 */
typedef _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION *PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;

/* 3765 */
struct _RESOURCEMANAGER_BASIC_INFORMATION
{
  GUID ResourceManagerId;
  DWORD DescriptionLength;
  WCHAR Description[1];
};

/* 3766 */
typedef _RESOURCEMANAGER_BASIC_INFORMATION RESOURCEMANAGER_BASIC_INFORMATION;

/* 3767 */
typedef _RESOURCEMANAGER_BASIC_INFORMATION *PRESOURCEMANAGER_BASIC_INFORMATION;

/* 3768 */
struct _RESOURCEMANAGER_COMPLETION_INFORMATION
{
  HANDLE IoCompletionPortHandle;
  ULONG_PTR CompletionKey;
};

/* 3769 */
typedef _RESOURCEMANAGER_COMPLETION_INFORMATION RESOURCEMANAGER_COMPLETION_INFORMATION;

/* 3770 */
typedef _RESOURCEMANAGER_COMPLETION_INFORMATION *PRESOURCEMANAGER_COMPLETION_INFORMATION;

/* 3771 */
enum _TRANSACTION_INFORMATION_CLASS : unsigned __int32
{
  TransactionBasicInformation = 0x0,
  TransactionPropertiesInformation = 0x1,
  TransactionEnlistmentInformation = 0x2,
  TransactionSuperiorEnlistmentInformation = 0x3,
  TransactionBindInformation = 0x4,
  TransactionDTCPrivateInformation = 0x5,
};

/* 3772 */
typedef _TRANSACTION_INFORMATION_CLASS TRANSACTION_INFORMATION_CLASS;

/* 3773 */
enum _TRANSACTIONMANAGER_INFORMATION_CLASS : unsigned __int32
{
  TransactionManagerBasicInformation = 0x0,
  TransactionManagerLogInformation = 0x1,
  TransactionManagerLogPathInformation = 0x2,
  TransactionManagerRecoveryInformation = 0x4,
  TransactionManagerOnlineProbeInformation = 0x3,
  TransactionManagerOldestTransactionInformation = 0x5,
};

/* 3774 */
typedef _TRANSACTIONMANAGER_INFORMATION_CLASS TRANSACTIONMANAGER_INFORMATION_CLASS;

/* 3775 */
enum _RESOURCEMANAGER_INFORMATION_CLASS : unsigned __int32
{
  ResourceManagerBasicInformation = 0x0,
  ResourceManagerCompletionInformation = 0x1,
};

/* 3776 */
typedef _RESOURCEMANAGER_INFORMATION_CLASS RESOURCEMANAGER_INFORMATION_CLASS;

/* 3777 */
struct _ENLISTMENT_BASIC_INFORMATION
{
  GUID EnlistmentId;
  GUID TransactionId;
  GUID ResourceManagerId;
};

/* 3778 */
typedef _ENLISTMENT_BASIC_INFORMATION ENLISTMENT_BASIC_INFORMATION;

/* 3779 */
typedef _ENLISTMENT_BASIC_INFORMATION *PENLISTMENT_BASIC_INFORMATION;

/* 3780 */
struct _ENLISTMENT_CRM_INFORMATION
{
  GUID CrmTransactionManagerId;
  GUID CrmResourceManagerId;
  GUID CrmEnlistmentId;
};

/* 3781 */
typedef _ENLISTMENT_CRM_INFORMATION ENLISTMENT_CRM_INFORMATION;

/* 3782 */
typedef _ENLISTMENT_CRM_INFORMATION *PENLISTMENT_CRM_INFORMATION;

/* 3783 */
enum _ENLISTMENT_INFORMATION_CLASS : unsigned __int32
{
  EnlistmentBasicInformation = 0x0,
  EnlistmentRecoveryInformation = 0x1,
  EnlistmentCrmInformation = 0x2,
};

/* 3784 */
typedef _ENLISTMENT_INFORMATION_CLASS ENLISTMENT_INFORMATION_CLASS;

/* 3785 */
struct _TRANSACTION_LIST_ENTRY
{
  UOW UOW;
};

/* 3786 */
typedef _TRANSACTION_LIST_ENTRY TRANSACTION_LIST_ENTRY;

/* 3787 */
typedef _TRANSACTION_LIST_ENTRY *PTRANSACTION_LIST_ENTRY;

/* 3788 */
struct _TRANSACTION_LIST_INFORMATION
{
  DWORD NumberOfTransactions;
  TRANSACTION_LIST_ENTRY TransactionInformation[1];
};

/* 3789 */
typedef _TRANSACTION_LIST_INFORMATION TRANSACTION_LIST_INFORMATION;

/* 3790 */
typedef _TRANSACTION_LIST_INFORMATION *PTRANSACTION_LIST_INFORMATION;

/* 3791 */
enum _KTMOBJECT_TYPE : unsigned __int32
{
  KTMOBJECT_TRANSACTION = 0x0,
  KTMOBJECT_TRANSACTION_MANAGER = 0x1,
  KTMOBJECT_RESOURCE_MANAGER = 0x2,
  KTMOBJECT_ENLISTMENT = 0x3,
  KTMOBJECT_INVALID = 0x4,
};

/* 3792 */
typedef _KTMOBJECT_TYPE KTMOBJECT_TYPE;

/* 3793 */
typedef _KTMOBJECT_TYPE *PKTMOBJECT_TYPE;

/* 3794 */
struct _KTMOBJECT_CURSOR
{
  GUID LastQuery;
  DWORD ObjectIdCount;
  GUID ObjectIds[1];
};

/* 3795 */
typedef _KTMOBJECT_CURSOR KTMOBJECT_CURSOR;

/* 3796 */
typedef _KTMOBJECT_CURSOR *PKTMOBJECT_CURSOR;

/* 3797 */
typedef DWORD TP_VERSION;

/* 3798 */
typedef DWORD *PTP_VERSION;

/* 3799 */
struct _TP_CALLBACK_INSTANCE;

/* 3800 */
typedef struct _TP_CALLBACK_INSTANCE TP_CALLBACK_INSTANCE;

/* 3801 */
typedef _TP_CALLBACK_INSTANCE *PTP_CALLBACK_INSTANCE;

/* 3802 */
typedef void (__cdecl *PTP_SIMPLE_CALLBACK)(PTP_CALLBACK_INSTANCE, PVOID);

/* 3803 */
struct _TP_POOL;

/* 3804 */
typedef struct _TP_POOL TP_POOL;

/* 3805 */
typedef _TP_POOL *PTP_POOL;

/* 3806 */
enum _TP_CALLBACK_PRIORITY : unsigned __int32
{
  TP_CALLBACK_PRIORITY_HIGH = 0x0,
  TP_CALLBACK_PRIORITY_NORMAL = 0x1,
  TP_CALLBACK_PRIORITY_LOW = 0x2,
  TP_CALLBACK_PRIORITY_INVALID = 0x3,
  TP_CALLBACK_PRIORITY_COUNT = 0x3,
};

/* 3807 */
typedef _TP_CALLBACK_PRIORITY TP_CALLBACK_PRIORITY;

/* 3808 */
struct _TP_POOL_STACK_INFORMATION
{
  SIZE_T StackReserve;
  SIZE_T StackCommit;
};

/* 3809 */
typedef _TP_POOL_STACK_INFORMATION TP_POOL_STACK_INFORMATION;

/* 3810 */
typedef _TP_POOL_STACK_INFORMATION *PTP_POOL_STACK_INFORMATION;

/* 3811 */
struct _TP_CLEANUP_GROUP;

/* 3812 */
typedef struct _TP_CLEANUP_GROUP TP_CLEANUP_GROUP;

/* 3813 */
typedef _TP_CLEANUP_GROUP *PTP_CLEANUP_GROUP;

/* 3814 */
typedef void (__cdecl *PTP_CLEANUP_GROUP_CANCEL_CALLBACK)(PVOID, PVOID);

/* 3816 */
struct _ACTIVATION_CONTEXT;

/* 3817 */
struct _8C32E5D3ED1763EA38B94549972C5F20
{
  unsigned __int32 LongFunction : 1;
  unsigned __int32 Persistent : 1;
  unsigned __int32 Private : 30;
};

/* 3818 */
union _TP_CALLBACK_ENVIRON_V3___34B3E5F5CB73BCB2FAADC1B6818ABE8D
{
  DWORD Flags;
  _8C32E5D3ED1763EA38B94549972C5F20 s;
};

/* 3815 */
struct _TP_CALLBACK_ENVIRON_V3
{
  TP_VERSION Version;
  PTP_POOL Pool;
  PTP_CLEANUP_GROUP CleanupGroup;
  PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback;
  PVOID RaceDll;
  _ACTIVATION_CONTEXT *ActivationContext;
  PTP_SIMPLE_CALLBACK FinalizationCallback;
  _TP_CALLBACK_ENVIRON_V3___34B3E5F5CB73BCB2FAADC1B6818ABE8D u;
  TP_CALLBACK_PRIORITY CallbackPriority;
  DWORD Size;
};

/* 3819 */
typedef _TP_CALLBACK_ENVIRON_V3 TP_CALLBACK_ENVIRON_V3;

/* 3820 */
typedef TP_CALLBACK_ENVIRON_V3 TP_CALLBACK_ENVIRON;

/* 3821 */
typedef TP_CALLBACK_ENVIRON_V3 *PTP_CALLBACK_ENVIRON;

/* 3822 */
struct _TP_WORK;

/* 3823 */
typedef struct _TP_WORK TP_WORK;

/* 3824 */
typedef _TP_WORK *PTP_WORK;

/* 3825 */
typedef void (__cdecl *PTP_WORK_CALLBACK)(PTP_CALLBACK_INSTANCE, PVOID, PTP_WORK);

/* 3826 */
struct _TP_TIMER;

/* 3827 */
typedef struct _TP_TIMER TP_TIMER;

/* 3828 */
typedef _TP_TIMER *PTP_TIMER;

/* 3829 */
typedef void (__cdecl *PTP_TIMER_CALLBACK)(PTP_CALLBACK_INSTANCE, PVOID, PTP_TIMER);

/* 3830 */
typedef DWORD TP_WAIT_RESULT;

/* 3831 */
struct _TP_WAIT;

/* 3832 */
typedef struct _TP_WAIT TP_WAIT;

/* 3833 */
typedef _TP_WAIT *PTP_WAIT;

/* 3834 */
typedef void (__cdecl *PTP_WAIT_CALLBACK)(PTP_CALLBACK_INSTANCE, PVOID, PTP_WAIT, TP_WAIT_RESULT);

/* 3835 */
struct _TP_IO;

/* 3836 */
typedef struct _TP_IO TP_IO;

/* 3837 */
typedef _TP_IO *PTP_IO;

/* 3838 */
struct _TEB;

/* 3839 */
typedef UINT_PTR WPARAM;

/* 3840 */
typedef LONG_PTR LPARAM;

/* 3841 */
typedef LONG_PTR LRESULT;

/* 3842 */
typedef HANDLE *SPHANDLE;

/* 3843 */
typedef HANDLE *LPHANDLE;

/* 3844 */
typedef HANDLE HGLOBAL;

/* 3845 */
typedef HANDLE HLOCAL;

/* 3846 */
typedef HANDLE GLOBALHANDLE;

/* 3847 */
typedef HANDLE LOCALHANDLE;

/* 3848 */
typedef INT_PTR (*FARPROC)(void);

/* 3849 */
typedef INT_PTR (*NEARPROC)(void);

/* 3850 */
typedef INT_PTR (*PROC)(void);

/* 3851 */
typedef WORD ATOM;

/* 3852 */
struct HKEY__
{
  int unused;
};

/* 3853 */
typedef HKEY__ *HKEY;

/* 3854 */
typedef HKEY *PHKEY;

/* 3855 */
struct HMETAFILE__
{
  int unused;
};

/* 3856 */
typedef HMETAFILE__ *HMETAFILE;

/* 3857 */
struct HINSTANCE__
{
  int unused;
};

/* 3858 */
typedef HINSTANCE__ *HINSTANCE;

/* 3859 */
typedef HINSTANCE HMODULE;

/* 3860 */
struct HRGN__
{
  int unused;
};

/* 3861 */
typedef HRGN__ *HRGN;

/* 3862 */
struct HRSRC__
{
  int unused;
};

/* 3863 */
typedef HRSRC__ *HRSRC;

/* 3864 */
struct HSPRITE__
{
  int unused;
};

/* 3865 */
typedef HSPRITE__ *HSPRITE;

/* 3866 */
struct HLSURF__
{
  int unused;
};

/* 3867 */
typedef HLSURF__ *HLSURF;

/* 3868 */
struct HSTR__
{
  int unused;
};

/* 3869 */
typedef HSTR__ *HSTR;

/* 3870 */
struct HTASK__
{
  int unused;
};

/* 3871 */
typedef HTASK__ *HTASK;

/* 3872 */
struct HWINSTA__
{
  int unused;
};

/* 3873 */
typedef HWINSTA__ *HWINSTA;

/* 3874 */
struct HKL__
{
  int unused;
};

/* 3875 */
typedef HKL__ *HKL;

/* 3876 */
typedef int HFILE;

/* 3877 */
struct _FILETIME
{
  DWORD dwLowDateTime;
  DWORD dwHighDateTime;
};

/* 3878 */
typedef _FILETIME FILETIME;

/* 3879 */
typedef _FILETIME *PFILETIME;

/* 3880 */
typedef _FILETIME *LPFILETIME;

/* 3881 */
struct HWND__
{
  int unused;
};

/* 3882 */
typedef HWND__ *HWND;

/* 3883 */
struct HHOOK__
{
  int unused;
};

/* 3884 */
typedef HHOOK__ *HHOOK;

/* 3885 */
typedef void *HGDIOBJ;

/* 3886 */
struct HACCEL__
{
  int unused;
};

/* 3887 */
typedef HACCEL__ *HACCEL;

/* 3888 */
struct HBITMAP__
{
  int unused;
};

/* 3889 */
typedef HBITMAP__ *HBITMAP;

/* 3890 */
struct HBRUSH__
{
  int unused;
};

/* 3891 */
typedef HBRUSH__ *HBRUSH;

/* 3892 */
struct HCOLORSPACE__
{
  int unused;
};

/* 3893 */
typedef HCOLORSPACE__ *HCOLORSPACE;

/* 3894 */
struct HDC__
{
  int unused;
};

/* 3895 */
typedef HDC__ *HDC;

/* 3896 */
struct HGLRC__
{
  int unused;
};

/* 3897 */
typedef HGLRC__ *HGLRC;

/* 3898 */
struct HDESK__
{
  int unused;
};

/* 3899 */
typedef HDESK__ *HDESK;

/* 3900 */
struct HENHMETAFILE__
{
  int unused;
};

/* 3901 */
typedef HENHMETAFILE__ *HENHMETAFILE;

/* 3902 */
struct HFONT__
{
  int unused;
};

/* 3903 */
typedef HFONT__ *HFONT;

/* 3904 */
struct HICON__
{
  int unused;
};

/* 3905 */
typedef HICON__ *HICON;

/* 3906 */
struct HMENU__
{
  int unused;
};

/* 3907 */
typedef HMENU__ *HMENU;

/* 3908 */
struct HPALETTE__
{
  int unused;
};

/* 3909 */
typedef HPALETTE__ *HPALETTE;

/* 3910 */
struct HPEN__
{
  int unused;
};

/* 3911 */
typedef HPEN__ *HPEN;

/* 3912 */
struct HWINEVENTHOOK__
{
  int unused;
};

/* 3913 */
typedef HWINEVENTHOOK__ *HWINEVENTHOOK;

/* 3914 */
struct HMONITOR__
{
  int unused;
};

/* 3915 */
typedef HMONITOR__ *HMONITOR;

/* 3916 */
struct HUMPD__
{
  int unused;
};

/* 3917 */
typedef HUMPD__ *HUMPD;

/* 3918 */
typedef HICON HCURSOR;

/* 3919 */
typedef DWORD COLORREF;

/* 3920 */
typedef DWORD *LPCOLORREF;

/* 3921 */
struct tagRECT
{
  LONG left;
  LONG top;
  LONG right;
  LONG bottom;
};

/* 3922 */
typedef tagRECT RECT;

/* 3923 */
typedef tagRECT *PRECT;

/* 3924 */
typedef tagRECT *NPRECT;

/* 3925 */
typedef tagRECT *LPRECT;

/* 3926 */
typedef const RECT *LPCRECT;

/* 3927 */
struct _RECTL
{
  LONG left;
  LONG top;
  LONG right;
  LONG bottom;
};

/* 3928 */
typedef _RECTL RECTL;

/* 3929 */
typedef _RECTL *PRECTL;

/* 3930 */
typedef _RECTL *LPRECTL;

/* 3931 */
typedef const RECTL *LPCRECTL;

/* 3932 */
struct tagPOINT
{
  LONG x;
  LONG y;
};

/* 3933 */
typedef tagPOINT POINT;

/* 3934 */
typedef tagPOINT *PPOINT;

/* 3935 */
typedef tagPOINT *NPPOINT;

/* 3936 */
typedef tagPOINT *LPPOINT;

/* 3937 */
struct _POINTL
{
  LONG x;
  LONG y;
};

/* 3938 */
typedef _POINTL POINTL;

/* 3939 */
typedef _POINTL *PPOINTL;

/* 3940 */
struct tagSIZE
{
  LONG cx;
  LONG cy;
};

/* 3941 */
typedef tagSIZE SIZE;

/* 3942 */
typedef tagSIZE *PSIZE;

/* 3943 */
typedef tagSIZE *LPSIZE;

/* 3944 */
typedef SIZE SIZEL;

/* 3945 */
typedef SIZE *PSIZEL;

/* 3946 */
typedef SIZE *LPSIZEL;

/* 3947 */
struct tagPOINTS
{
  SHORT x;
  SHORT y;
};

/* 3948 */
typedef tagPOINTS POINTS;

/* 3949 */
typedef tagPOINTS *PPOINTS;

/* 3950 */
typedef tagPOINTS *LPPOINTS;

/* 3951 */
struct APP_LOCAL_DEVICE_ID
{
  BYTE value[32];
};

/* 3952 */
struct DPI_AWARENESS_CONTEXT__
{
  int unused;
};

/* 3953 */
typedef DPI_AWARENESS_CONTEXT__ *DPI_AWARENESS_CONTEXT;

/* 3954 */
enum DPI_AWARENESS : unsigned __int32
{
  DPI_AWARENESS_INVALID = 0xFFFFFFFF,
  DPI_AWARENESS_UNAWARE = 0x0,
  DPI_AWARENESS_SYSTEM_AWARE = 0x1,
  DPI_AWARENESS_PER_MONITOR_AWARE = 0x2,
};

/* 3955 */
enum DPI_HOSTING_BEHAVIOR : unsigned __int32
{
  DPI_HOSTING_BEHAVIOR_INVALID = 0xFFFFFFFF,
  DPI_HOSTING_BEHAVIOR_DEFAULT = 0x0,
  DPI_HOSTING_BEHAVIOR_MIXED = 0x1,
};

/* 3956 */
struct _SECURITY_ATTRIBUTES
{
  DWORD nLength;
  LPVOID lpSecurityDescriptor;
  BOOL bInheritHandle;
};

/* 3957 */
typedef _SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES;

/* 3958 */
typedef _SECURITY_ATTRIBUTES *PSECURITY_ATTRIBUTES;

/* 3959 */
typedef _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;

/* 3961 */
struct _886A00C7AD3FD5ED6211727A2251497A
{
  DWORD Offset;
  DWORD OffsetHigh;
};

/* 3962 */
union _OVERLAPPED___6E7EFA1536A982BE75506BE32C556979
{
  struct
  {
    DWORD Offset;
    DWORD OffsetHigh;
  };
  PVOID Pointer;
};

/* 3960 */
struct _OVERLAPPED
{
  ULONG_PTR Internal;
  ULONG_PTR InternalHigh;
  union
  {
    struct
    {
      DWORD Offset;
      DWORD OffsetHigh;
    };
    PVOID Pointer;
  };
  HANDLE hEvent;
};

/* 3963 */
typedef _OVERLAPPED OVERLAPPED;

/* 3964 */
typedef _OVERLAPPED *LPOVERLAPPED;

/* 3965 */
struct _OVERLAPPED_ENTRY
{
  ULONG_PTR lpCompletionKey;
  LPOVERLAPPED lpOverlapped;
  ULONG_PTR Internal;
  DWORD dwNumberOfBytesTransferred;
};

/* 3966 */
typedef _OVERLAPPED_ENTRY OVERLAPPED_ENTRY;

/* 3967 */
typedef _OVERLAPPED_ENTRY *LPOVERLAPPED_ENTRY;

/* 3968 */
struct _SYSTEMTIME
{
  WORD wYear;
  WORD wMonth;
  WORD wDayOfWeek;
  WORD wDay;
  WORD wHour;
  WORD wMinute;
  WORD wSecond;
  WORD wMilliseconds;
};

/* 3969 */
typedef _SYSTEMTIME SYSTEMTIME;

/* 3970 */
typedef _SYSTEMTIME *PSYSTEMTIME;

/* 3971 */
typedef _SYSTEMTIME *LPSYSTEMTIME;

/* 3972 */
struct _WIN32_FIND_DATAA
{
  DWORD dwFileAttributes;
  FILETIME ftCreationTime;
  FILETIME ftLastAccessTime;
  FILETIME ftLastWriteTime;
  DWORD nFileSizeHigh;
  DWORD nFileSizeLow;
  DWORD dwReserved0;
  DWORD dwReserved1;
  CHAR cFileName[260];
  CHAR cAlternateFileName[14];
};

/* 3973 */
typedef _WIN32_FIND_DATAA WIN32_FIND_DATAA;

/* 3974 */
typedef _WIN32_FIND_DATAA *PWIN32_FIND_DATAA;

/* 3975 */
typedef _WIN32_FIND_DATAA *LPWIN32_FIND_DATAA;

/* 3976 */
struct _WIN32_FIND_DATAW
{
  DWORD dwFileAttributes;
  FILETIME ftCreationTime;
  FILETIME ftLastAccessTime;
  FILETIME ftLastWriteTime;
  DWORD nFileSizeHigh;
  DWORD nFileSizeLow;
  DWORD dwReserved0;
  DWORD dwReserved1;
  WCHAR cFileName[260];
  WCHAR cAlternateFileName[14];
};

/* 3977 */
typedef _WIN32_FIND_DATAW WIN32_FIND_DATAW;

/* 3978 */
typedef _WIN32_FIND_DATAW *PWIN32_FIND_DATAW;

/* 3979 */
typedef _WIN32_FIND_DATAW *LPWIN32_FIND_DATAW;

/* 3980 */
typedef WIN32_FIND_DATAA WIN32_FIND_DATA;

/* 3981 */
typedef PWIN32_FIND_DATAA PWIN32_FIND_DATA;

/* 3982 */
typedef LPWIN32_FIND_DATAA LPWIN32_FIND_DATA;

/* 3983 */
enum _FINDEX_INFO_LEVELS : unsigned __int32
{
  FindExInfoStandard = 0x0,
  FindExInfoBasic = 0x1,
  FindExInfoMaxInfoLevel = 0x2,
};

/* 3984 */
typedef _FINDEX_INFO_LEVELS FINDEX_INFO_LEVELS;

/* 3985 */
enum _FINDEX_SEARCH_OPS : unsigned __int32
{
  FindExSearchNameMatch = 0x0,
  FindExSearchLimitToDirectories = 0x1,
  FindExSearchLimitToDevices = 0x2,
  FindExSearchMaxSearchOp = 0x3,
};

/* 3986 */
typedef _FINDEX_SEARCH_OPS FINDEX_SEARCH_OPS;

/* 3987 */
enum _READ_DIRECTORY_NOTIFY_INFORMATION_CLASS : unsigned __int32
{
  ReadDirectoryNotifyInformation = 0x1,
  ReadDirectoryNotifyExtendedInformation = 0x2,
};

/* 3988 */
typedef _READ_DIRECTORY_NOTIFY_INFORMATION_CLASS READ_DIRECTORY_NOTIFY_INFORMATION_CLASS;

/* 3989 */
typedef _READ_DIRECTORY_NOTIFY_INFORMATION_CLASS *PREAD_DIRECTORY_NOTIFY_INFORMATION_CLASS;

/* 3990 */
enum _GET_FILEEX_INFO_LEVELS : unsigned __int32
{
  GetFileExInfoStandard = 0x0,
  GetFileExMaxInfoLevel = 0x1,
};

/* 3991 */
typedef _GET_FILEEX_INFO_LEVELS GET_FILEEX_INFO_LEVELS;

/* 3992 */
enum _FILE_INFO_BY_HANDLE_CLASS : unsigned __int32
{
  FileBasicInfo = 0x0,
  FileStandardInfo = 0x1,
  FileNameInfo = 0x2,
  FileRenameInfo = 0x3,
  FileDispositionInfo = 0x4,
  FileAllocationInfo = 0x5,
  FileEndOfFileInfo = 0x6,
  FileStreamInfo = 0x7,
  FileCompressionInfo = 0x8,
  FileAttributeTagInfo = 0x9,
  FileIdBothDirectoryInfo = 0xA,
  FileIdBothDirectoryRestartInfo = 0xB,
  FileIoPriorityHintInfo = 0xC,
  FileRemoteProtocolInfo = 0xD,
  FileFullDirectoryInfo = 0xE,
  FileFullDirectoryRestartInfo = 0xF,
  FileStorageInfo = 0x10,
  FileAlignmentInfo = 0x11,
  FileIdInfo = 0x12,
  FileIdExtdDirectoryInfo = 0x13,
  FileIdExtdDirectoryRestartInfo = 0x14,
  FileDispositionInfoEx = 0x15,
  FileRenameInfoEx = 0x16,
  FileCaseSensitiveInfo = 0x17,
  FileNormalizedNameInfo = 0x18,
  MaximumFileInfoByHandleClass = 0x19,
};

/* 3993 */
typedef _FILE_INFO_BY_HANDLE_CLASS FILE_INFO_BY_HANDLE_CLASS;

/* 3994 */
typedef _FILE_INFO_BY_HANDLE_CLASS *PFILE_INFO_BY_HANDLE_CLASS;

/* 3995 */
typedef RTL_CRITICAL_SECTION CRITICAL_SECTION;

/* 3996 */
typedef PRTL_CRITICAL_SECTION PCRITICAL_SECTION;

/* 3997 */
typedef PRTL_CRITICAL_SECTION LPCRITICAL_SECTION;

/* 3998 */
typedef RTL_CRITICAL_SECTION_DEBUG CRITICAL_SECTION_DEBUG;

/* 3999 */
typedef PRTL_CRITICAL_SECTION_DEBUG PCRITICAL_SECTION_DEBUG;

/* 4000 */
typedef PRTL_CRITICAL_SECTION_DEBUG LPCRITICAL_SECTION_DEBUG;

/* 4001 */
typedef void (__cdecl *LPOVERLAPPED_COMPLETION_ROUTINE)(DWORD, DWORD, LPOVERLAPPED);

/* 4003 */
struct _B9BB00CEA97BDADE89FFFB3C7975CC01
{
  HANDLE hMem;
  DWORD dwReserved[3];
};

/* 4004 */
struct _691F71A9C2F82EA661D68B88C7ECA40D
{
  DWORD dwCommittedSize;
  DWORD dwUnCommittedSize;
  LPVOID lpFirstBlock;
  LPVOID lpLastBlock;
};

/* 4005 */
union _PROCESS_HEAP_ENTRY___FFEE264ECE09353B104F318C8E03795B
{
  _B9BB00CEA97BDADE89FFFB3C7975CC01 Block;
  _691F71A9C2F82EA661D68B88C7ECA40D Region;
};

/* 4002 */
struct _PROCESS_HEAP_ENTRY
{
  PVOID lpData;
  DWORD cbData;
  BYTE cbOverhead;
  BYTE iRegionIndex;
  WORD wFlags;
  union
  {
    _B9BB00CEA97BDADE89FFFB3C7975CC01 Block;
    _691F71A9C2F82EA661D68B88C7ECA40D Region;
  };
};

/* 4006 */
typedef _PROCESS_HEAP_ENTRY PROCESS_HEAP_ENTRY;

/* 4007 */
typedef _PROCESS_HEAP_ENTRY *LPPROCESS_HEAP_ENTRY;

/* 4008 */
typedef _PROCESS_HEAP_ENTRY *PPROCESS_HEAP_ENTRY;

/* 4010 */
struct _5CBA49B7A25A0EA2C39238CAAE52EFD4
{
  HMODULE LocalizedReasonModule;
  ULONG LocalizedReasonId;
  ULONG ReasonStringCount;
  LPWSTR *ReasonStrings;
};

/* 4011 */
union _REASON_CONTEXT___07FAF44D955D57A82DC73DBC6D1E4962
{
  _5CBA49B7A25A0EA2C39238CAAE52EFD4 Detailed;
  LPWSTR SimpleReasonString;
};

/* 4009 */
struct _REASON_CONTEXT
{
  ULONG Version;
  DWORD Flags;
  _REASON_CONTEXT___07FAF44D955D57A82DC73DBC6D1E4962 Reason;
};

/* 4012 */
typedef _REASON_CONTEXT REASON_CONTEXT;

/* 4013 */
typedef _REASON_CONTEXT *PREASON_CONTEXT;

/* 4014 */
typedef DWORD (__cdecl *PTHREAD_START_ROUTINE)(LPVOID);

/* 4015 */
typedef PTHREAD_START_ROUTINE LPTHREAD_START_ROUTINE;

/* 4016 */
typedef LPVOID (__cdecl *PENCLAVE_ROUTINE)(LPVOID);

/* 4017 */
typedef PENCLAVE_ROUTINE LPENCLAVE_ROUTINE;

/* 4018 */
struct _EXCEPTION_DEBUG_INFO
{
  EXCEPTION_RECORD ExceptionRecord;
  DWORD dwFirstChance;
};

/* 4019 */
typedef _EXCEPTION_DEBUG_INFO EXCEPTION_DEBUG_INFO;

/* 4020 */
typedef _EXCEPTION_DEBUG_INFO *LPEXCEPTION_DEBUG_INFO;

/* 4021 */
struct _CREATE_THREAD_DEBUG_INFO
{
  HANDLE hThread;
  LPVOID lpThreadLocalBase;
  LPTHREAD_START_ROUTINE lpStartAddress;
};

/* 4022 */
typedef _CREATE_THREAD_DEBUG_INFO CREATE_THREAD_DEBUG_INFO;

/* 4023 */
typedef _CREATE_THREAD_DEBUG_INFO *LPCREATE_THREAD_DEBUG_INFO;

/* 4024 */
struct _CREATE_PROCESS_DEBUG_INFO
{
  HANDLE hFile;
  HANDLE hProcess;
  HANDLE hThread;
  LPVOID lpBaseOfImage;
  DWORD dwDebugInfoFileOffset;
  DWORD nDebugInfoSize;
  LPVOID lpThreadLocalBase;
  LPTHREAD_START_ROUTINE lpStartAddress;
  LPVOID lpImageName;
  WORD fUnicode;
};

/* 4025 */
typedef _CREATE_PROCESS_DEBUG_INFO CREATE_PROCESS_DEBUG_INFO;

/* 4026 */
typedef _CREATE_PROCESS_DEBUG_INFO *LPCREATE_PROCESS_DEBUG_INFO;

/* 4027 */
struct _EXIT_THREAD_DEBUG_INFO
{
  DWORD dwExitCode;
};

/* 4028 */
typedef _EXIT_THREAD_DEBUG_INFO EXIT_THREAD_DEBUG_INFO;

/* 4029 */
typedef _EXIT_THREAD_DEBUG_INFO *LPEXIT_THREAD_DEBUG_INFO;

/* 4030 */
struct _EXIT_PROCESS_DEBUG_INFO
{
  DWORD dwExitCode;
};

/* 4031 */
typedef _EXIT_PROCESS_DEBUG_INFO EXIT_PROCESS_DEBUG_INFO;

/* 4032 */
typedef _EXIT_PROCESS_DEBUG_INFO *LPEXIT_PROCESS_DEBUG_INFO;

/* 4033 */
struct _LOAD_DLL_DEBUG_INFO
{
  HANDLE hFile;
  LPVOID lpBaseOfDll;
  DWORD dwDebugInfoFileOffset;
  DWORD nDebugInfoSize;
  LPVOID lpImageName;
  WORD fUnicode;
};

/* 4034 */
typedef _LOAD_DLL_DEBUG_INFO LOAD_DLL_DEBUG_INFO;

/* 4035 */
typedef _LOAD_DLL_DEBUG_INFO *LPLOAD_DLL_DEBUG_INFO;

/* 4036 */
struct _UNLOAD_DLL_DEBUG_INFO
{
  LPVOID lpBaseOfDll;
};

/* 4037 */
typedef _UNLOAD_DLL_DEBUG_INFO UNLOAD_DLL_DEBUG_INFO;

/* 4038 */
typedef _UNLOAD_DLL_DEBUG_INFO *LPUNLOAD_DLL_DEBUG_INFO;

/* 4039 */
struct _OUTPUT_DEBUG_STRING_INFO
{
  LPSTR lpDebugStringData;
  WORD fUnicode;
  WORD nDebugStringLength;
};

/* 4040 */
typedef _OUTPUT_DEBUG_STRING_INFO OUTPUT_DEBUG_STRING_INFO;

/* 4041 */
typedef _OUTPUT_DEBUG_STRING_INFO *LPOUTPUT_DEBUG_STRING_INFO;

/* 4042 */
struct _RIP_INFO
{
  DWORD dwError;
  DWORD dwType;
};

/* 4043 */
typedef _RIP_INFO RIP_INFO;

/* 4044 */
typedef _RIP_INFO *LPRIP_INFO;

/* 4046 */
union _DEBUG_EVENT___0BAA10E6C7131A6C8731CA0719364B74
{
  EXCEPTION_DEBUG_INFO Exception;
  CREATE_THREAD_DEBUG_INFO CreateThread;
  CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
  EXIT_THREAD_DEBUG_INFO ExitThread;
  EXIT_PROCESS_DEBUG_INFO ExitProcess;
  LOAD_DLL_DEBUG_INFO LoadDll;
  UNLOAD_DLL_DEBUG_INFO UnloadDll;
  OUTPUT_DEBUG_STRING_INFO DebugString;
  RIP_INFO RipInfo;
};

/* 4045 */
struct _DEBUG_EVENT
{
  DWORD dwDebugEventCode;
  DWORD dwProcessId;
  DWORD dwThreadId;
  _DEBUG_EVENT___0BAA10E6C7131A6C8731CA0719364B74 u;
};

/* 4047 */
typedef _DEBUG_EVENT DEBUG_EVENT;

/* 4048 */
typedef _DEBUG_EVENT *LPDEBUG_EVENT;

/* 4049 */
typedef PCONTEXT LPCONTEXT;

/* 4050 */
struct DISK_SPACE_INFORMATION
{
  ULONGLONG ActualTotalAllocationUnits;
  ULONGLONG ActualAvailableAllocationUnits;
  ULONGLONG ActualPoolUnavailableAllocationUnits;
  ULONGLONG CallerTotalAllocationUnits;
  ULONGLONG CallerAvailableAllocationUnits;
  ULONGLONG CallerPoolUnavailableAllocationUnits;
  ULONGLONG UsedAllocationUnits;
  ULONGLONG TotalReservedAllocationUnits;
  ULONGLONG VolumeStorageReserveAllocationUnits;
  ULONGLONG AvailableCommittedAllocationUnits;
  ULONGLONG PoolAvailableAllocationUnits;
  DWORD SectorsPerAllocationUnit;
  DWORD BytesPerSector;
};

/* 4051 */
struct _WIN32_FILE_ATTRIBUTE_DATA
{
  DWORD dwFileAttributes;
  FILETIME ftCreationTime;
  FILETIME ftLastAccessTime;
  FILETIME ftLastWriteTime;
  DWORD nFileSizeHigh;
  DWORD nFileSizeLow;
};

/* 4052 */
typedef _WIN32_FILE_ATTRIBUTE_DATA WIN32_FILE_ATTRIBUTE_DATA;

/* 4053 */
typedef _WIN32_FILE_ATTRIBUTE_DATA *LPWIN32_FILE_ATTRIBUTE_DATA;

/* 4054 */
struct _BY_HANDLE_FILE_INFORMATION
{
  DWORD dwFileAttributes;
  FILETIME ftCreationTime;
  FILETIME ftLastAccessTime;
  FILETIME ftLastWriteTime;
  DWORD dwVolumeSerialNumber;
  DWORD nFileSizeHigh;
  DWORD nFileSizeLow;
  DWORD nNumberOfLinks;
  DWORD nFileIndexHigh;
  DWORD nFileIndexLow;
};

/* 4055 */
typedef _BY_HANDLE_FILE_INFORMATION BY_HANDLE_FILE_INFORMATION;

/* 4056 */
typedef _BY_HANDLE_FILE_INFORMATION *PBY_HANDLE_FILE_INFORMATION;

/* 4057 */
typedef _BY_HANDLE_FILE_INFORMATION *LPBY_HANDLE_FILE_INFORMATION;

/* 4058 */
struct _CREATEFILE2_EXTENDED_PARAMETERS
{
  DWORD dwSize;
  DWORD dwFileAttributes;
  DWORD dwFileFlags;
  DWORD dwSecurityQosFlags;
  LPSECURITY_ATTRIBUTES lpSecurityAttributes;
  HANDLE hTemplateFile;
};

/* 4059 */
typedef _CREATEFILE2_EXTENDED_PARAMETERS CREATEFILE2_EXTENDED_PARAMETERS;

/* 4060 */
typedef _CREATEFILE2_EXTENDED_PARAMETERS *PCREATEFILE2_EXTENDED_PARAMETERS;

/* 4061 */
typedef _CREATEFILE2_EXTENDED_PARAMETERS *LPCREATEFILE2_EXTENDED_PARAMETERS;

/* 4062 */
enum _STREAM_INFO_LEVELS : unsigned __int32
{
  FindStreamInfoStandard = 0x0,
  FindStreamInfoMaxInfoLevel = 0x1,
};

/* 4063 */
typedef _STREAM_INFO_LEVELS STREAM_INFO_LEVELS;

/* 4064 */
struct _WIN32_FIND_STREAM_DATA
{
  LARGE_INTEGER StreamSize;
  WCHAR cStreamName[296];
};

/* 4065 */
typedef _WIN32_FIND_STREAM_DATA WIN32_FIND_STREAM_DATA;

/* 4066 */
typedef _WIN32_FIND_STREAM_DATA *PWIN32_FIND_STREAM_DATA;

/* 4067 */
typedef LONG (__cdecl *PTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 4068 */
typedef PTOP_LEVEL_EXCEPTION_FILTER LPTOP_LEVEL_EXCEPTION_FILTER;

/* 4069 */
struct _HEAP_SUMMARY
{
  DWORD cb;
  SIZE_T cbAllocated;
  SIZE_T cbCommitted;
  SIZE_T cbReserved;
  SIZE_T cbMaxReserve;
};

/* 4070 */
typedef _HEAP_SUMMARY HEAP_SUMMARY;

/* 4071 */
typedef _HEAP_SUMMARY *PHEAP_SUMMARY;

/* 4072 */
typedef PHEAP_SUMMARY LPHEAP_SUMMARY;

/* 4073 */
typedef RTL_SRWLOCK SRWLOCK;

/* 4074 */
typedef RTL_SRWLOCK *PSRWLOCK;

/* 4075 */
typedef RTL_RUN_ONCE INIT_ONCE;

/* 4076 */
typedef PRTL_RUN_ONCE PINIT_ONCE;

/* 4077 */
typedef PRTL_RUN_ONCE LPINIT_ONCE;

/* 4078 */
typedef BOOL (__cdecl *PINIT_ONCE_FN)(PINIT_ONCE, PVOID, PVOID *);

/* 4079 */
typedef RTL_CONDITION_VARIABLE CONDITION_VARIABLE;

/* 4080 */
typedef RTL_CONDITION_VARIABLE *PCONDITION_VARIABLE;

/* 4081 */
typedef void (__cdecl *PTIMERAPCROUTINE)(LPVOID, DWORD, DWORD);

/* 4082 */
typedef RTL_BARRIER SYNCHRONIZATION_BARRIER;

/* 4083 */
typedef PRTL_BARRIER PSYNCHRONIZATION_BARRIER;

/* 4084 */
typedef PRTL_BARRIER LPSYNCHRONIZATION_BARRIER;

/* 4085 */
struct _PROCESS_INFORMATION
{
  HANDLE hProcess;
  HANDLE hThread;
  DWORD dwProcessId;
  DWORD dwThreadId;
};

/* 4086 */
typedef _PROCESS_INFORMATION PROCESS_INFORMATION;

/* 4087 */
typedef _PROCESS_INFORMATION *PPROCESS_INFORMATION;

/* 4088 */
typedef _PROCESS_INFORMATION *LPPROCESS_INFORMATION;

/* 4089 */
struct _STARTUPINFOA
{
  DWORD cb;
  LPSTR lpReserved;
  LPSTR lpDesktop;
  LPSTR lpTitle;
  DWORD dwX;
  DWORD dwY;
  DWORD dwXSize;
  DWORD dwYSize;
  DWORD dwXCountChars;
  DWORD dwYCountChars;
  DWORD dwFillAttribute;
  DWORD dwFlags;
  WORD wShowWindow;
  WORD cbReserved2;
  LPBYTE lpReserved2;
  HANDLE hStdInput;
  HANDLE hStdOutput;
  HANDLE hStdError;
};

/* 4090 */
typedef _STARTUPINFOA STARTUPINFOA;

/* 4091 */
typedef _STARTUPINFOA *LPSTARTUPINFOA;

/* 4092 */
struct _STARTUPINFOW
{
  DWORD cb;
  LPWSTR lpReserved;
  LPWSTR lpDesktop;
  LPWSTR lpTitle;
  DWORD dwX;
  DWORD dwY;
  DWORD dwXSize;
  DWORD dwYSize;
  DWORD dwXCountChars;
  DWORD dwYCountChars;
  DWORD dwFillAttribute;
  DWORD dwFlags;
  WORD wShowWindow;
  WORD cbReserved2;
  LPBYTE lpReserved2;
  HANDLE hStdInput;
  HANDLE hStdOutput;
  HANDLE hStdError;
};

/* 4093 */
typedef _STARTUPINFOW STARTUPINFOW;

/* 4094 */
typedef _STARTUPINFOW *LPSTARTUPINFOW;

/* 4095 */
typedef STARTUPINFOA STARTUPINFO;

/* 4096 */
typedef LPSTARTUPINFOA LPSTARTUPINFO;

/* 4097 */
struct _PROC_THREAD_ATTRIBUTE_LIST;

/* 4098 */
typedef _PROC_THREAD_ATTRIBUTE_LIST *PPROC_THREAD_ATTRIBUTE_LIST;

/* 4099 */
typedef _PROC_THREAD_ATTRIBUTE_LIST *LPPROC_THREAD_ATTRIBUTE_LIST;

/* 4100 */
enum _THREAD_INFORMATION_CLASS : unsigned __int32
{
  ThreadMemoryPriority = 0x0,
  ThreadAbsoluteCpuPriority = 0x1,
  ThreadDynamicCodePolicy = 0x2,
  ThreadPowerThrottling = 0x3,
  ThreadInformationClassMax = 0x4,
};

/* 4101 */
typedef _THREAD_INFORMATION_CLASS THREAD_INFORMATION_CLASS;

/* 4102 */
struct _MEMORY_PRIORITY_INFORMATION
{
  ULONG MemoryPriority;
};

/* 4103 */
typedef _MEMORY_PRIORITY_INFORMATION MEMORY_PRIORITY_INFORMATION;

/* 4104 */
typedef _MEMORY_PRIORITY_INFORMATION *PMEMORY_PRIORITY_INFORMATION;

/* 4105 */
struct _THREAD_POWER_THROTTLING_STATE
{
  ULONG Version;
  ULONG ControlMask;
  ULONG StateMask;
};

/* 4106 */
typedef _THREAD_POWER_THROTTLING_STATE THREAD_POWER_THROTTLING_STATE;

/* 4107 */
enum _PROCESS_INFORMATION_CLASS : unsigned __int32
{
  ProcessMemoryPriority = 0x0,
  ProcessMemoryExhaustionInfo = 0x1,
  ProcessAppMemoryInfo = 0x2,
  ProcessInPrivateInfo = 0x3,
  ProcessPowerThrottling = 0x4,
  ProcessReservedValue1 = 0x5,
  ProcessTelemetryCoverageInfo = 0x6,
  ProcessProtectionLevelInfo = 0x7,
  ProcessLeapSecondInfo = 0x8,
  ProcessInformationClassMax = 0x9,
};

/* 4108 */
typedef _PROCESS_INFORMATION_CLASS PROCESS_INFORMATION_CLASS;

/* 4109 */
struct _APP_MEMORY_INFORMATION
{
  ULONG64 AvailableCommit;
  ULONG64 PrivateCommitUsage;
  ULONG64 PeakPrivateCommitUsage;
  ULONG64 TotalCommitUsage;
};

/* 4110 */
typedef _APP_MEMORY_INFORMATION APP_MEMORY_INFORMATION;

/* 4111 */
typedef _APP_MEMORY_INFORMATION *PAPP_MEMORY_INFORMATION;

/* 4112 */
enum _PROCESS_MEMORY_EXHAUSTION_TYPE : unsigned __int32
{
  PMETypeFailFastOnCommitFailure = 0x0,
  PMETypeMax = 0x1,
};

/* 4113 */
typedef _PROCESS_MEMORY_EXHAUSTION_TYPE PROCESS_MEMORY_EXHAUSTION_TYPE;

/* 4114 */
typedef _PROCESS_MEMORY_EXHAUSTION_TYPE *PPROCESS_MEMORY_EXHAUSTION_TYPE;

/* 4115 */
struct _PROCESS_MEMORY_EXHAUSTION_INFO
{
  USHORT Version;
  USHORT Reserved;
  PROCESS_MEMORY_EXHAUSTION_TYPE Type;
  ULONG_PTR Value;
};

/* 4116 */
typedef _PROCESS_MEMORY_EXHAUSTION_INFO PROCESS_MEMORY_EXHAUSTION_INFO;

/* 4117 */
typedef _PROCESS_MEMORY_EXHAUSTION_INFO *PPROCESS_MEMORY_EXHAUSTION_INFO;

/* 4118 */
struct _PROCESS_POWER_THROTTLING_STATE
{
  ULONG Version;
  ULONG ControlMask;
  ULONG StateMask;
};

/* 4119 */
typedef _PROCESS_POWER_THROTTLING_STATE PROCESS_POWER_THROTTLING_STATE;

/* 4120 */
typedef _PROCESS_POWER_THROTTLING_STATE *PPROCESS_POWER_THROTTLING_STATE;

/* 4121 */
struct PROCESS_PROTECTION_LEVEL_INFORMATION
{
  DWORD ProtectionLevel;
};

/* 4122 */
struct _PROCESS_LEAP_SECOND_INFO
{
  ULONG Flags;
  ULONG Reserved;
};

/* 4123 */
typedef _PROCESS_LEAP_SECOND_INFO PROCESS_LEAP_SECOND_INFO;

/* 4124 */
typedef _PROCESS_LEAP_SECOND_INFO *PPROCESS_LEAP_SECOND_INFO;

/* 4126 */
struct _304AECCFA8C31E57CAA9E04956196E4C
{
  WORD wProcessorArchitecture;
  WORD wReserved;
};

/* 4127 */
union _SYSTEM_INFO___5384D611651B5BF37083DC1389C27803
{
  DWORD dwOemId;
  struct
  {
    WORD wProcessorArchitecture;
    WORD wReserved;
  };
};

/* 4125 */
struct _SYSTEM_INFO
{
  union
  {
    DWORD dwOemId;
    struct
    {
      WORD wProcessorArchitecture;
      WORD wReserved;
    };
  };
  DWORD dwPageSize;
  LPVOID lpMinimumApplicationAddress;
  LPVOID lpMaximumApplicationAddress;
  DWORD_PTR dwActiveProcessorMask;
  DWORD dwNumberOfProcessors;
  DWORD dwProcessorType;
  DWORD dwAllocationGranularity;
  WORD wProcessorLevel;
  WORD wProcessorRevision;
};

/* 4128 */
typedef _SYSTEM_INFO SYSTEM_INFO;

/* 4129 */
typedef _SYSTEM_INFO *LPSYSTEM_INFO;

/* 4130 */
struct _MEMORYSTATUSEX
{
  DWORD dwLength;
  DWORD dwMemoryLoad;
  DWORDLONG ullTotalPhys;
  DWORDLONG ullAvailPhys;
  DWORDLONG ullTotalPageFile;
  DWORDLONG ullAvailPageFile;
  DWORDLONG ullTotalVirtual;
  DWORDLONG ullAvailVirtual;
  DWORDLONG ullAvailExtendedVirtual;
};

/* 4131 */
typedef _MEMORYSTATUSEX MEMORYSTATUSEX;

/* 4132 */
typedef _MEMORYSTATUSEX *LPMEMORYSTATUSEX;

/* 4133 */
enum _COMPUTER_NAME_FORMAT : unsigned __int32
{
  ComputerNameNetBIOS = 0x0,
  ComputerNameDnsHostname = 0x1,
  ComputerNameDnsDomain = 0x2,
  ComputerNameDnsFullyQualified = 0x3,
  ComputerNamePhysicalNetBIOS = 0x4,
  ComputerNamePhysicalDnsHostname = 0x5,
  ComputerNamePhysicalDnsDomain = 0x6,
  ComputerNamePhysicalDnsFullyQualified = 0x7,
  ComputerNameMax = 0x8,
};

/* 4134 */
typedef _COMPUTER_NAME_FORMAT COMPUTER_NAME_FORMAT;

/* 4135 */
enum _MEMORY_RESOURCE_NOTIFICATION_TYPE : unsigned __int32
{
  LowMemoryResourceNotification = 0x0,
  HighMemoryResourceNotification = 0x1,
};

/* 4136 */
typedef _MEMORY_RESOURCE_NOTIFICATION_TYPE MEMORY_RESOURCE_NOTIFICATION_TYPE;

/* 4137 */
struct _WIN32_MEMORY_RANGE_ENTRY
{
  PVOID VirtualAddress;
  SIZE_T NumberOfBytes;
};

/* 4138 */
typedef _WIN32_MEMORY_RANGE_ENTRY WIN32_MEMORY_RANGE_ENTRY;

/* 4139 */
typedef _WIN32_MEMORY_RANGE_ENTRY *PWIN32_MEMORY_RANGE_ENTRY;

/* 4140 */
typedef void _28F56E9CE247C373C820ED5BC94460F2(void);

/* 4141 */
typedef void (*PBAD_MEMORY_CALLBACK_ROUTINE)(void);

/* 4142 */
enum OFFER_PRIORITY : unsigned __int32
{
  VmOfferPriorityVeryLow = 0x1,
  VmOfferPriorityLow = 0x2,
  VmOfferPriorityBelowNormal = 0x3,
  VmOfferPriorityNormal = 0x4,
};

/* 4143 */
enum WIN32_MEMORY_INFORMATION_CLASS : unsigned __int32
{
  MemoryRegionInfo = 0x0,
};

/* 4145 */
struct _11D9C8BE61E6EE013C3CCB3B9B8E2958
{
  unsigned __int32 Private : 1;
  unsigned __int32 MappedDataFile : 1;
  unsigned __int32 MappedImage : 1;
  unsigned __int32 MappedPageFile : 1;
  unsigned __int32 MappedPhysical : 1;
  unsigned __int32 DirectMapped : 1;
  unsigned __int32 Reserved : 26;
};

/* 4146 */
union WIN32_MEMORY_REGION_INFORMATION___D9148D26D5024FAA6F599B7E87F7CC62
{
  ULONG Flags;
  struct
  {
    unsigned __int32 Private : 1;
    unsigned __int32 MappedDataFile : 1;
    unsigned __int32 MappedImage : 1;
    unsigned __int32 MappedPageFile : 1;
    unsigned __int32 MappedPhysical : 1;
    unsigned __int32 DirectMapped : 1;
    unsigned __int32 Reserved : 26;
  };
};

/* 4144 */
struct WIN32_MEMORY_REGION_INFORMATION
{
  PVOID AllocationBase;
  ULONG AllocationProtect;
  union
  {
    ULONG Flags;
    struct
    {
      unsigned __int32 Private : 1;
      unsigned __int32 MappedDataFile : 1;
      unsigned __int32 MappedImage : 1;
      unsigned __int32 MappedPageFile : 1;
      unsigned __int32 MappedPhysical : 1;
      unsigned __int32 DirectMapped : 1;
      unsigned __int32 Reserved : 26;
    };
  };
  SIZE_T RegionSize;
  SIZE_T CommitSize;
};

/* 4147 */
typedef void (__cdecl *PTP_WIN32_IO_CALLBACK)(PTP_CALLBACK_INSTANCE, PVOID, PVOID, ULONG, ULONG_PTR, PTP_IO);

/* 4148 */
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION
{
  LONG64 MaxIops;
  LONG64 MaxBandwidth;
  LONG64 ReservationIops;
  PCWSTR VolumeName;
  ULONG BaseIoSize;
  ULONG ControlFlags;
};

/* 4149 */
struct tagENUMUILANG
{
  ULONG NumOfEnumUILang;
  ULONG SizeOfEnumUIBuffer;
  LANGID *pEnumUIBuffer;
};

/* 4150 */
typedef tagENUMUILANG ENUMUILANG;

/* 4151 */
typedef tagENUMUILANG *PENUMUILANG;

/* 4152 */
typedef BOOL (__cdecl *ENUMRESLANGPROCA)(HMODULE, LPCSTR, LPCSTR, WORD, LONG_PTR);

/* 4153 */
typedef BOOL (__cdecl *ENUMRESLANGPROCW)(HMODULE, LPCWSTR, LPCWSTR, WORD, LONG_PTR);

/* 4154 */
typedef BOOL (__cdecl *ENUMRESNAMEPROCA)(HMODULE, LPCSTR, LPSTR, LONG_PTR);

/* 4155 */
typedef BOOL (__cdecl *ENUMRESNAMEPROCW)(HMODULE, LPCWSTR, LPWSTR, LONG_PTR);

/* 4156 */
typedef BOOL (__cdecl *ENUMRESTYPEPROCA)(HMODULE, LPSTR, LONG_PTR);

/* 4157 */
typedef BOOL (__cdecl *ENUMRESTYPEPROCW)(HMODULE, LPWSTR, LONG_PTR);

/* 4158 */
typedef BOOL (__cdecl *PGET_MODULE_HANDLE_EXA)(DWORD, LPCSTR, HMODULE *);

/* 4159 */
typedef BOOL (__cdecl *PGET_MODULE_HANDLE_EXW)(DWORD, LPCWSTR, HMODULE *);

/* 4160 */
struct _REDIRECTION_FUNCTION_DESCRIPTOR
{
  PCSTR DllName;
  PCSTR FunctionName;
  PVOID RedirectionTarget;
};

/* 4161 */
typedef _REDIRECTION_FUNCTION_DESCRIPTOR REDIRECTION_FUNCTION_DESCRIPTOR;

/* 4162 */
typedef _REDIRECTION_FUNCTION_DESCRIPTOR *PREDIRECTION_FUNCTION_DESCRIPTOR;

/* 4163 */
typedef const REDIRECTION_FUNCTION_DESCRIPTOR *PCREDIRECTION_FUNCTION_DESCRIPTOR;

/* 4164 */
struct _REDIRECTION_DESCRIPTOR
{
  ULONG Version;
  ULONG FunctionCount;
  PCREDIRECTION_FUNCTION_DESCRIPTOR Redirections;
};

/* 4165 */
typedef _REDIRECTION_DESCRIPTOR REDIRECTION_DESCRIPTOR;

/* 4166 */
typedef _REDIRECTION_DESCRIPTOR *PREDIRECTION_DESCRIPTOR;

/* 4167 */
typedef const REDIRECTION_DESCRIPTOR *PCREDIRECTION_DESCRIPTOR;

/* 4168 */
typedef PVOID DLL_DIRECTORY_COOKIE;

/* 4169 */
typedef PVOID *PDLL_DIRECTORY_COOKIE;

/* 4170 */
typedef void (__cdecl *PFIBER_START_ROUTINE)(LPVOID);

/* 4171 */
typedef PFIBER_START_ROUTINE LPFIBER_START_ROUTINE;

/* 4172 */
typedef LPVOID (__cdecl *PFIBER_CALLOUT_ROUTINE)(LPVOID);

/* 4173 */
typedef LPVOID LPLDT_ENTRY;

/* 4174 */
struct _COMMPROP
{
  WORD wPacketLength;
  WORD wPacketVersion;
  DWORD dwServiceMask;
  DWORD dwReserved1;
  DWORD dwMaxTxQueue;
  DWORD dwMaxRxQueue;
  DWORD dwMaxBaud;
  DWORD dwProvSubType;
  DWORD dwProvCapabilities;
  DWORD dwSettableParams;
  DWORD dwSettableBaud;
  WORD wSettableData;
  WORD wSettableStopParity;
  DWORD dwCurrentTxQueue;
  DWORD dwCurrentRxQueue;
  DWORD dwProvSpec1;
  DWORD dwProvSpec2;
  WCHAR wcProvChar[1];
};

/* 4175 */
typedef _COMMPROP COMMPROP;

/* 4176 */
typedef _COMMPROP *LPCOMMPROP;

/* 4177 */
struct _COMSTAT
{
  unsigned __int32 fCtsHold : 1;
  unsigned __int32 fDsrHold : 1;
  unsigned __int32 fRlsdHold : 1;
  unsigned __int32 fXoffHold : 1;
  unsigned __int32 fXoffSent : 1;
  unsigned __int32 fEof : 1;
  unsigned __int32 fTxim : 1;
  unsigned __int32 fReserved : 25;
  DWORD cbInQue;
  DWORD cbOutQue;
};

/* 4178 */
typedef _COMSTAT COMSTAT;

/* 4179 */
typedef _COMSTAT *LPCOMSTAT;

/* 4180 */
struct _DCB
{
  DWORD DCBlength;
  DWORD BaudRate;
  unsigned __int32 fBinary : 1;
  unsigned __int32 fParity : 1;
  unsigned __int32 fOutxCtsFlow : 1;
  unsigned __int32 fOutxDsrFlow : 1;
  unsigned __int32 fDtrControl : 2;
  unsigned __int32 fDsrSensitivity : 1;
  unsigned __int32 fTXContinueOnXoff : 1;
  unsigned __int32 fOutX : 1;
  unsigned __int32 fInX : 1;
  unsigned __int32 fErrorChar : 1;
  unsigned __int32 fNull : 1;
  unsigned __int32 fRtsControl : 2;
  unsigned __int32 fAbortOnError : 1;
  unsigned __int32 fDummy2 : 17;
  WORD wReserved;
  WORD XonLim;
  WORD XoffLim;
  BYTE ByteSize;
  BYTE Parity;
  BYTE StopBits;
  char XonChar;
  char XoffChar;
  char ErrorChar;
  char EofChar;
  char EvtChar;
  WORD wReserved1;
};

/* 4181 */
typedef _DCB DCB;

/* 4182 */
typedef _DCB *LPDCB;

/* 4183 */
struct _COMMTIMEOUTS
{
  DWORD ReadIntervalTimeout;
  DWORD ReadTotalTimeoutMultiplier;
  DWORD ReadTotalTimeoutConstant;
  DWORD WriteTotalTimeoutMultiplier;
  DWORD WriteTotalTimeoutConstant;
};

/* 4184 */
typedef _COMMTIMEOUTS COMMTIMEOUTS;

/* 4185 */
typedef _COMMTIMEOUTS *LPCOMMTIMEOUTS;

/* 4186 */
struct _COMMCONFIG
{
  DWORD dwSize;
  WORD wVersion;
  WORD wReserved;
  DCB dcb;
  DWORD dwProviderSubType;
  DWORD dwProviderOffset;
  DWORD dwProviderSize;
  WCHAR wcProviderData[1];
};

/* 4187 */
typedef _COMMCONFIG COMMCONFIG;

/* 4188 */
typedef _COMMCONFIG *LPCOMMCONFIG;

/* 4189 */
struct _MEMORYSTATUS
{
  DWORD dwLength;
  DWORD dwMemoryLoad;
  SIZE_T dwTotalPhys;
  SIZE_T dwAvailPhys;
  SIZE_T dwTotalPageFile;
  SIZE_T dwAvailPageFile;
  SIZE_T dwTotalVirtual;
  SIZE_T dwAvailVirtual;
};

/* 4190 */
typedef _MEMORYSTATUS MEMORYSTATUS;

/* 4191 */
typedef _MEMORYSTATUS *LPMEMORYSTATUS;

/* 4192 */
struct _JIT_DEBUG_INFO
{
  DWORD dwSize;
  DWORD dwProcessorArchitecture;
  DWORD dwThreadID;
  DWORD dwReserved0;
  ULONG64 lpExceptionAddress;
  ULONG64 lpExceptionRecord;
  ULONG64 lpContextRecord;
};

/* 4193 */
typedef _JIT_DEBUG_INFO JIT_DEBUG_INFO;

/* 4194 */
typedef _JIT_DEBUG_INFO *LPJIT_DEBUG_INFO;

/* 4195 */
typedef JIT_DEBUG_INFO JIT_DEBUG_INFO32;

/* 4196 */
typedef JIT_DEBUG_INFO *LPJIT_DEBUG_INFO32;

/* 4197 */
typedef JIT_DEBUG_INFO JIT_DEBUG_INFO64;

/* 4198 */
typedef JIT_DEBUG_INFO *LPJIT_DEBUG_INFO64;

/* 4199 */
typedef PEXCEPTION_RECORD LPEXCEPTION_RECORD;

/* 4200 */
typedef PEXCEPTION_POINTERS LPEXCEPTION_POINTERS;

/* 4201 */
struct _OFSTRUCT
{
  BYTE cBytes;
  BYTE fFixedDisk;
  WORD nErrCode;
  WORD Reserved1;
  WORD Reserved2;
  CHAR szPathName[128];
};

/* 4202 */
typedef _OFSTRUCT OFSTRUCT;

/* 4203 */
typedef _OFSTRUCT *LPOFSTRUCT;

/* 4204 */
typedef _OFSTRUCT *POFSTRUCT;

/* 4205 */
typedef void *PUMS_CONTEXT;

/* 4206 */
typedef void *PUMS_COMPLETION_LIST;

/* 4207 */
typedef _RTL_UMS_THREAD_INFO_CLASS UMS_THREAD_INFO_CLASS;

/* 4208 */
typedef _RTL_UMS_THREAD_INFO_CLASS *PUMS_THREAD_INFO_CLASS;

/* 4209 */
typedef _RTL_UMS_SCHEDULER_REASON UMS_SCHEDULER_REASON;

/* 4210 */
typedef PRTL_UMS_SCHEDULER_ENTRY_POINT PUMS_SCHEDULER_ENTRY_POINT;

/* 4211 */
struct _UMS_SCHEDULER_STARTUP_INFO
{
  ULONG UmsVersion;
  PUMS_COMPLETION_LIST CompletionList;
  PUMS_SCHEDULER_ENTRY_POINT SchedulerProc;
  PVOID SchedulerParam;
};

/* 4212 */
typedef _UMS_SCHEDULER_STARTUP_INFO UMS_SCHEDULER_STARTUP_INFO;

/* 4213 */
typedef _UMS_SCHEDULER_STARTUP_INFO *PUMS_SCHEDULER_STARTUP_INFO;

/* 4215 */
struct _D44EEF9BD0742DBE20D87C837DCD5E88
{
  unsigned __int32 IsUmsSchedulerThread : 1;
  unsigned __int32 IsUmsWorkerThread : 1;
};

/* 4216 */
union _UMS_SYSTEM_THREAD_INFORMATION___A39E9D10E6C6FC3307A25E827527C5A0
{
  struct
  {
    unsigned __int32 IsUmsSchedulerThread : 1;
    unsigned __int32 IsUmsWorkerThread : 1;
  };
  ULONG ThreadUmsFlags;
};

/* 4214 */
struct _UMS_SYSTEM_THREAD_INFORMATION
{
  ULONG UmsVersion;
  union
  {
    struct
    {
      unsigned __int32 IsUmsSchedulerThread : 1;
      unsigned __int32 IsUmsWorkerThread : 1;
    };
    ULONG ThreadUmsFlags;
  };
};

/* 4217 */
typedef _UMS_SYSTEM_THREAD_INFORMATION UMS_SYSTEM_THREAD_INFORMATION;

/* 4218 */
typedef _UMS_SYSTEM_THREAD_INFORMATION *PUMS_SYSTEM_THREAD_INFORMATION;

/* 4219 */
typedef REASON_CONTEXT POWER_REQUEST_CONTEXT;

/* 4220 */
typedef REASON_CONTEXT *PPOWER_REQUEST_CONTEXT;

/* 4221 */
typedef REASON_CONTEXT *LPPOWER_REQUEST_CONTEXT;

/* 4222 */
enum _DEP_SYSTEM_POLICY_TYPE : unsigned __int32
{
  DEPPolicyAlwaysOff = 0x0,
  DEPPolicyAlwaysOn = 0x1,
  DEPPolicyOptIn = 0x2,
  DEPPolicyOptOut = 0x3,
  DEPTotalPolicyCount = 0x4,
};

/* 4223 */
typedef _DEP_SYSTEM_POLICY_TYPE DEP_SYSTEM_POLICY_TYPE;

/* 4224 */
typedef DWORD (__cdecl *PFE_EXPORT_FUNC)(PBYTE, PVOID, ULONG);

/* 4225 */
typedef DWORD (__cdecl *PFE_IMPORT_FUNC)(PBYTE, PVOID, PULONG);

/* 4226 */
struct _WIN32_STREAM_ID
{
  DWORD dwStreamId;
  DWORD dwStreamAttributes;
  LARGE_INTEGER Size;
  DWORD dwStreamNameSize;
  WCHAR cStreamName[1];
};

/* 4227 */
typedef _WIN32_STREAM_ID WIN32_STREAM_ID;

/* 4228 */
typedef _WIN32_STREAM_ID *LPWIN32_STREAM_ID;

/* 4229 */
struct _STARTUPINFOEXA
{
  STARTUPINFOA StartupInfo;
  LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList;
};

/* 4230 */
typedef _STARTUPINFOEXA STARTUPINFOEXA;

/* 4231 */
typedef _STARTUPINFOEXA *LPSTARTUPINFOEXA;

/* 4232 */
struct _STARTUPINFOEXW
{
  STARTUPINFOW StartupInfo;
  LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList;
};

/* 4233 */
typedef _STARTUPINFOEXW STARTUPINFOEXW;

/* 4234 */
typedef _STARTUPINFOEXW *LPSTARTUPINFOEXW;

/* 4235 */
typedef STARTUPINFOEXA STARTUPINFOEX;

/* 4236 */
typedef LPSTARTUPINFOEXA LPSTARTUPINFOEX;

/* 4237 */
enum _PROC_THREAD_ATTRIBUTE_NUM : unsigned __int32
{
  ProcThreadAttributeParentProcess = 0x0,
  ProcThreadAttributeHandleList = 0x2,
  ProcThreadAttributeGroupAffinity = 0x3,
  ProcThreadAttributePreferredNode = 0x4,
  ProcThreadAttributeIdealProcessor = 0x5,
  ProcThreadAttributeUmsThread = 0x6,
  ProcThreadAttributeMitigationPolicy = 0x7,
  ProcThreadAttributeSecurityCapabilities = 0x9,
  ProcThreadAttributeProtectionLevel = 0xB,
  ProcThreadAttributeJobList = 0xD,
  ProcThreadAttributeChildProcessPolicy = 0xE,
  ProcThreadAttributeAllApplicationPackagesPolicy = 0xF,
  ProcThreadAttributeWin32kFilter = 0x10,
  ProcThreadAttributeSafeOpenPromptOriginClaim = 0x11,
  ProcThreadAttributeDesktopAppPolicy = 0x12,
  ProcThreadAttributePseudoConsole = 0x16,
  ProcThreadAttributeMitigationAuditPolicy = 0x18,
};

/* 4238 */
typedef _PROC_THREAD_ATTRIBUTE_NUM PROC_THREAD_ATTRIBUTE_NUM;

/* 4239 */
typedef UINT (__cdecl *PGET_SYSTEM_WOW64_DIRECTORY_A)(LPSTR, UINT);

/* 4240 */
typedef UINT (__cdecl *PGET_SYSTEM_WOW64_DIRECTORY_W)(LPWSTR, UINT);

/* 4241 */
typedef DWORD (__cdecl *LPPROGRESS_ROUTINE)(LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, DWORD, DWORD, HANDLE, HANDLE, LPVOID);

/* 4242 */
enum _COPYFILE2_MESSAGE_TYPE : unsigned __int32
{
  COPYFILE2_CALLBACK_NONE = 0x0,
  COPYFILE2_CALLBACK_CHUNK_STARTED = 0x1,
  COPYFILE2_CALLBACK_CHUNK_FINISHED = 0x2,
  COPYFILE2_CALLBACK_STREAM_STARTED = 0x3,
  COPYFILE2_CALLBACK_STREAM_FINISHED = 0x4,
  COPYFILE2_CALLBACK_POLL_CONTINUE = 0x5,
  COPYFILE2_CALLBACK_ERROR = 0x6,
  COPYFILE2_CALLBACK_MAX = 0x7,
};

/* 4243 */
typedef _COPYFILE2_MESSAGE_TYPE COPYFILE2_MESSAGE_TYPE;

/* 4244 */
enum _COPYFILE2_MESSAGE_ACTION : unsigned __int32
{
  COPYFILE2_PROGRESS_CONTINUE = 0x0,
  COPYFILE2_PROGRESS_CANCEL = 0x1,
  COPYFILE2_PROGRESS_STOP = 0x2,
  COPYFILE2_PROGRESS_QUIET = 0x3,
  COPYFILE2_PROGRESS_PAUSE = 0x4,
};

/* 4245 */
typedef _COPYFILE2_MESSAGE_ACTION COPYFILE2_MESSAGE_ACTION;

/* 4246 */
enum _COPYFILE2_COPY_PHASE : unsigned __int32
{
  COPYFILE2_PHASE_NONE = 0x0,
  COPYFILE2_PHASE_PREPARE_SOURCE = 0x1,
  COPYFILE2_PHASE_PREPARE_DEST = 0x2,
  COPYFILE2_PHASE_READ_SOURCE = 0x3,
  COPYFILE2_PHASE_WRITE_DESTINATION = 0x4,
  COPYFILE2_PHASE_SERVER_COPY = 0x5,
  COPYFILE2_PHASE_NAMEGRAFT_COPY = 0x6,
  COPYFILE2_PHASE_MAX = 0x7,
};

/* 4247 */
typedef _COPYFILE2_COPY_PHASE COPYFILE2_COPY_PHASE;

/* 4249 */
struct _5777CF876D10E8036D834038A6EF48F9
{
  DWORD dwStreamNumber;
  DWORD dwReserved;
  HANDLE hSourceFile;
  HANDLE hDestinationFile;
  ULARGE_INTEGER uliChunkNumber;
  ULARGE_INTEGER uliChunkSize;
  ULARGE_INTEGER uliStreamSize;
  ULARGE_INTEGER uliTotalFileSize;
};

/* 4250 */
struct _E992A59DE776EA4CB6EFF8EBB7345C5E
{
  DWORD dwStreamNumber;
  DWORD dwFlags;
  HANDLE hSourceFile;
  HANDLE hDestinationFile;
  ULARGE_INTEGER uliChunkNumber;
  ULARGE_INTEGER uliChunkSize;
  ULARGE_INTEGER uliStreamSize;
  ULARGE_INTEGER uliStreamBytesTransferred;
  ULARGE_INTEGER uliTotalFileSize;
  ULARGE_INTEGER uliTotalBytesTransferred;
};

/* 4251 */
struct _5BBFE38D397EB168C4922E80DFABA463
{
  DWORD dwStreamNumber;
  DWORD dwReserved;
  HANDLE hSourceFile;
  HANDLE hDestinationFile;
  ULARGE_INTEGER uliStreamSize;
  ULARGE_INTEGER uliTotalFileSize;
};

/* 4252 */
struct _D5D81F448FDBA1CEB8B2FBEA063976CD
{
  DWORD dwStreamNumber;
  DWORD dwReserved;
  HANDLE hSourceFile;
  HANDLE hDestinationFile;
  ULARGE_INTEGER uliStreamSize;
  ULARGE_INTEGER uliStreamBytesTransferred;
  ULARGE_INTEGER uliTotalFileSize;
  ULARGE_INTEGER uliTotalBytesTransferred;
};

/* 4253 */
struct _368C7D4AF4E90F16CD36F8E21C470A79
{
  DWORD dwReserved;
};

/* 4254 */
struct _0C5D68A923626F87375DD95B3AA1763F
{
  COPYFILE2_COPY_PHASE CopyPhase;
  DWORD dwStreamNumber;
  HRESULT hrFailure;
  DWORD dwReserved;
  ULARGE_INTEGER uliChunkNumber;
  ULARGE_INTEGER uliStreamSize;
  ULARGE_INTEGER uliStreamBytesTransferred;
  ULARGE_INTEGER uliTotalFileSize;
  ULARGE_INTEGER uliTotalBytesTransferred;
};

/* 4255 */
union COPYFILE2_MESSAGE___2BC58A2C9DBA44DF3EF418C4A17194B7
{
  _5777CF876D10E8036D834038A6EF48F9 ChunkStarted;
  _E992A59DE776EA4CB6EFF8EBB7345C5E ChunkFinished;
  _5BBFE38D397EB168C4922E80DFABA463 StreamStarted;
  _D5D81F448FDBA1CEB8B2FBEA063976CD StreamFinished;
  _368C7D4AF4E90F16CD36F8E21C470A79 PollContinue;
  _0C5D68A923626F87375DD95B3AA1763F Error;
};

/* 4248 */
struct COPYFILE2_MESSAGE
{
  COPYFILE2_MESSAGE_TYPE Type;
  DWORD dwPadding;
  COPYFILE2_MESSAGE___2BC58A2C9DBA44DF3EF418C4A17194B7 Info;
};

/* 4256 */
typedef COPYFILE2_MESSAGE_ACTION (__cdecl *PCOPYFILE2_PROGRESS_ROUTINE)(const COPYFILE2_MESSAGE *, PVOID);

/* 4257 */
struct COPYFILE2_EXTENDED_PARAMETERS
{
  DWORD dwSize;
  DWORD dwCopyFlags;
  BOOL *pfCancel;
  PCOPYFILE2_PROGRESS_ROUTINE pProgressRoutine;
  PVOID pvCallbackContext;
};

/* 4258 */
struct _EVENTLOG_FULL_INFORMATION
{
  DWORD dwFull;
};

/* 4259 */
typedef _EVENTLOG_FULL_INFORMATION EVENTLOG_FULL_INFORMATION;

/* 4260 */
typedef _EVENTLOG_FULL_INFORMATION *LPEVENTLOG_FULL_INFORMATION;

/* 4261 */
typedef ULONG OPERATION_ID;

/* 4262 */
struct _OPERATION_START_PARAMETERS
{
  ULONG Version;
  OPERATION_ID OperationId;
  ULONG Flags;
};

/* 4263 */
typedef _OPERATION_START_PARAMETERS OPERATION_START_PARAMETERS;

/* 4264 */
typedef _OPERATION_START_PARAMETERS *POPERATION_START_PARAMETERS;

/* 4265 */
struct _OPERATION_END_PARAMETERS
{
  ULONG Version;
  OPERATION_ID OperationId;
  ULONG Flags;
};

/* 4266 */
typedef _OPERATION_END_PARAMETERS OPERATION_END_PARAMETERS;

/* 4267 */
typedef _OPERATION_END_PARAMETERS *POPERATION_END_PARAMETERS;

/* 4268 */
struct tagHW_PROFILE_INFOA
{
  DWORD dwDockInfo;
  CHAR szHwProfileGuid[39];
  CHAR szHwProfileName[80];
};

/* 4269 */
typedef tagHW_PROFILE_INFOA HW_PROFILE_INFOA;

/* 4270 */
typedef tagHW_PROFILE_INFOA *LPHW_PROFILE_INFOA;

/* 4271 */
struct tagHW_PROFILE_INFOW
{
  DWORD dwDockInfo;
  WCHAR szHwProfileGuid[39];
  WCHAR szHwProfileName[80];
};

/* 4272 */
typedef tagHW_PROFILE_INFOW HW_PROFILE_INFOW;

/* 4273 */
typedef tagHW_PROFILE_INFOW *LPHW_PROFILE_INFOW;

/* 4274 */
typedef HW_PROFILE_INFOA HW_PROFILE_INFO;

/* 4275 */
typedef LPHW_PROFILE_INFOA LPHW_PROFILE_INFO;

/* 4276 */
struct _TIME_ZONE_INFORMATION
{
  LONG Bias;
  WCHAR StandardName[32];
  SYSTEMTIME StandardDate;
  LONG StandardBias;
  WCHAR DaylightName[32];
  SYSTEMTIME DaylightDate;
  LONG DaylightBias;
};

/* 4277 */
typedef _TIME_ZONE_INFORMATION TIME_ZONE_INFORMATION;

/* 4278 */
typedef _TIME_ZONE_INFORMATION *PTIME_ZONE_INFORMATION;

/* 4279 */
typedef _TIME_ZONE_INFORMATION *LPTIME_ZONE_INFORMATION;

/* 4280 */
struct _TIME_DYNAMIC_ZONE_INFORMATION
{
  LONG Bias;
  WCHAR StandardName[32];
  SYSTEMTIME StandardDate;
  LONG StandardBias;
  WCHAR DaylightName[32];
  SYSTEMTIME DaylightDate;
  LONG DaylightBias;
  WCHAR TimeZoneKeyName[128];
  BOOLEAN DynamicDaylightTimeDisabled;
};

/* 4281 */
typedef _TIME_DYNAMIC_ZONE_INFORMATION DYNAMIC_TIME_ZONE_INFORMATION;

/* 4282 */
typedef _TIME_DYNAMIC_ZONE_INFORMATION *PDYNAMIC_TIME_ZONE_INFORMATION;

/* 4283 */
struct _SYSTEM_POWER_STATUS
{
  BYTE ACLineStatus;
  BYTE BatteryFlag;
  BYTE BatteryLifePercent;
  BYTE SystemStatusFlag;
  DWORD BatteryLifeTime;
  DWORD BatteryFullLifeTime;
};

/* 4284 */
typedef _SYSTEM_POWER_STATUS SYSTEM_POWER_STATUS;

/* 4285 */
typedef _SYSTEM_POWER_STATUS *LPSYSTEM_POWER_STATUS;

/* 4286 */
struct tagACTCTXA
{
  ULONG cbSize;
  DWORD dwFlags;
  LPCSTR lpSource;
  USHORT wProcessorArchitecture;
  LANGID wLangId;
  LPCSTR lpAssemblyDirectory;
  LPCSTR lpResourceName;
  LPCSTR lpApplicationName;
  HMODULE hModule;
};

/* 4287 */
typedef tagACTCTXA ACTCTXA;

/* 4288 */
typedef tagACTCTXA *PACTCTXA;

/* 4289 */
struct tagACTCTXW
{
  ULONG cbSize;
  DWORD dwFlags;
  LPCWSTR lpSource;
  USHORT wProcessorArchitecture;
  LANGID wLangId;
  LPCWSTR lpAssemblyDirectory;
  LPCWSTR lpResourceName;
  LPCWSTR lpApplicationName;
  HMODULE hModule;
};

/* 4290 */
typedef tagACTCTXW ACTCTXW;

/* 4291 */
typedef tagACTCTXW *PACTCTXW;

/* 4292 */
typedef ACTCTXA ACTCTX;

/* 4293 */
typedef PACTCTXA PACTCTX;

/* 4294 */
typedef const ACTCTXA *PCACTCTXA;

/* 4295 */
typedef const ACTCTXW *PCACTCTXW;

/* 4296 */
typedef PCACTCTXA PCACTCTX;

/* 4297 */
struct tagACTCTX_SECTION_KEYED_DATA_2600
{
  ULONG cbSize;
  ULONG ulDataFormatVersion;
  PVOID lpData;
  ULONG ulLength;
  PVOID lpSectionGlobalData;
  ULONG ulSectionGlobalDataLength;
  PVOID lpSectionBase;
  ULONG ulSectionTotalLength;
  HANDLE hActCtx;
  ULONG ulAssemblyRosterIndex;
};

/* 4298 */
typedef tagACTCTX_SECTION_KEYED_DATA_2600 ACTCTX_SECTION_KEYED_DATA_2600;

/* 4299 */
typedef tagACTCTX_SECTION_KEYED_DATA_2600 *PACTCTX_SECTION_KEYED_DATA_2600;

/* 4300 */
typedef const ACTCTX_SECTION_KEYED_DATA_2600 *PCACTCTX_SECTION_KEYED_DATA_2600;

/* 4301 */
struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  PVOID lpInformation;
  PVOID lpSectionBase;
  ULONG ulSectionLength;
  PVOID lpSectionGlobalDataBase;
  ULONG ulSectionGlobalDataLength;
};

/* 4302 */
typedef tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;

/* 4303 */
typedef tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA *PACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;

/* 4304 */
typedef const ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA *PCACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;

/* 4305 */
struct tagACTCTX_SECTION_KEYED_DATA
{
  ULONG cbSize;
  ULONG ulDataFormatVersion;
  PVOID lpData;
  ULONG ulLength;
  PVOID lpSectionGlobalData;
  ULONG ulSectionGlobalDataLength;
  PVOID lpSectionBase;
  ULONG ulSectionTotalLength;
  HANDLE hActCtx;
  ULONG ulAssemblyRosterIndex;
  ULONG ulFlags;
  ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
};

/* 4306 */
typedef tagACTCTX_SECTION_KEYED_DATA ACTCTX_SECTION_KEYED_DATA;

/* 4307 */
typedef tagACTCTX_SECTION_KEYED_DATA *PACTCTX_SECTION_KEYED_DATA;

/* 4308 */
typedef const ACTCTX_SECTION_KEYED_DATA *PCACTCTX_SECTION_KEYED_DATA;

/* 4309 */
struct _ACTIVATION_CONTEXT_BASIC_INFORMATION
{
  HANDLE hActCtx;
  DWORD dwFlags;
};

/* 4310 */
typedef _ACTIVATION_CONTEXT_BASIC_INFORMATION ACTIVATION_CONTEXT_BASIC_INFORMATION;

/* 4311 */
typedef _ACTIVATION_CONTEXT_BASIC_INFORMATION *PACTIVATION_CONTEXT_BASIC_INFORMATION;

/* 4312 */
typedef const _ACTIVATION_CONTEXT_BASIC_INFORMATION *PCACTIVATION_CONTEXT_BASIC_INFORMATION;

/* 4313 */
typedef BOOL (__cdecl *PQUERYACTCTXW_FUNC)(DWORD, HANDLE, PVOID, ULONG, PVOID, SIZE_T, SIZE_T *);

/* 4314 */
typedef DWORD (__cdecl *APPLICATION_RECOVERY_CALLBACK)(PVOID);

/* 4315 */
struct _FILE_BASIC_INFO
{
  LARGE_INTEGER CreationTime;
  LARGE_INTEGER LastAccessTime;
  LARGE_INTEGER LastWriteTime;
  LARGE_INTEGER ChangeTime;
  DWORD FileAttributes;
};

/* 4316 */
typedef _FILE_BASIC_INFO FILE_BASIC_INFO;

/* 4317 */
typedef _FILE_BASIC_INFO *PFILE_BASIC_INFO;

/* 4318 */
struct _FILE_STANDARD_INFO
{
  LARGE_INTEGER AllocationSize;
  LARGE_INTEGER EndOfFile;
  DWORD NumberOfLinks;
  BOOLEAN DeletePending;
  BOOLEAN Directory;
};

/* 4319 */
typedef _FILE_STANDARD_INFO FILE_STANDARD_INFO;

/* 4320 */
typedef _FILE_STANDARD_INFO *PFILE_STANDARD_INFO;

/* 4321 */
struct _FILE_NAME_INFO
{
  DWORD FileNameLength;
  WCHAR FileName[1];
};

/* 4322 */
typedef _FILE_NAME_INFO FILE_NAME_INFO;

/* 4323 */
typedef _FILE_NAME_INFO *PFILE_NAME_INFO;

/* 4324 */
struct _FILE_CASE_SENSITIVE_INFO
{
  ULONG Flags;
};

/* 4325 */
typedef _FILE_CASE_SENSITIVE_INFO FILE_CASE_SENSITIVE_INFO;

/* 4326 */
typedef _FILE_CASE_SENSITIVE_INFO *PFILE_CASE_SENSITIVE_INFO;

/* 4328 */
union _FILE_RENAME_INFO___204296FCB7589B91A70F8DC5DCC63ECC
{
  BOOLEAN ReplaceIfExists;
  DWORD Flags;
};

/* 4327 */
struct _FILE_RENAME_INFO
{
  union
  {
    BOOLEAN ReplaceIfExists;
    DWORD Flags;
  };
  HANDLE RootDirectory;
  DWORD FileNameLength;
  WCHAR FileName[1];
};

/* 4329 */
typedef _FILE_RENAME_INFO FILE_RENAME_INFO;

/* 4330 */
typedef _FILE_RENAME_INFO *PFILE_RENAME_INFO;

/* 4331 */
struct _FILE_ALLOCATION_INFO
{
  LARGE_INTEGER AllocationSize;
};

/* 4332 */
typedef _FILE_ALLOCATION_INFO FILE_ALLOCATION_INFO;

/* 4333 */
typedef _FILE_ALLOCATION_INFO *PFILE_ALLOCATION_INFO;

/* 4334 */
struct _FILE_END_OF_FILE_INFO
{
  LARGE_INTEGER EndOfFile;
};

/* 4335 */
typedef _FILE_END_OF_FILE_INFO FILE_END_OF_FILE_INFO;

/* 4336 */
typedef _FILE_END_OF_FILE_INFO *PFILE_END_OF_FILE_INFO;

/* 4337 */
struct _FILE_STREAM_INFO
{
  DWORD NextEntryOffset;
  DWORD StreamNameLength;
  LARGE_INTEGER StreamSize;
  LARGE_INTEGER StreamAllocationSize;
  WCHAR StreamName[1];
};

/* 4338 */
typedef _FILE_STREAM_INFO FILE_STREAM_INFO;

/* 4339 */
typedef _FILE_STREAM_INFO *PFILE_STREAM_INFO;

/* 4340 */
struct _FILE_COMPRESSION_INFO
{
  LARGE_INTEGER CompressedFileSize;
  WORD CompressionFormat;
  UCHAR CompressionUnitShift;
  UCHAR ChunkShift;
  UCHAR ClusterShift;
  UCHAR Reserved[3];
};

/* 4341 */
typedef _FILE_COMPRESSION_INFO FILE_COMPRESSION_INFO;

/* 4342 */
typedef _FILE_COMPRESSION_INFO *PFILE_COMPRESSION_INFO;

/* 4343 */
struct _FILE_ATTRIBUTE_TAG_INFO
{
  DWORD FileAttributes;
  DWORD ReparseTag;
};

/* 4344 */
typedef _FILE_ATTRIBUTE_TAG_INFO FILE_ATTRIBUTE_TAG_INFO;

/* 4345 */
typedef _FILE_ATTRIBUTE_TAG_INFO *PFILE_ATTRIBUTE_TAG_INFO;

/* 4346 */
struct _FILE_DISPOSITION_INFO
{
  BOOLEAN DeleteFileA;
};

/* 4347 */
typedef _FILE_DISPOSITION_INFO FILE_DISPOSITION_INFO;

/* 4348 */
typedef _FILE_DISPOSITION_INFO *PFILE_DISPOSITION_INFO;

/* 4349 */
struct _FILE_DISPOSITION_INFO_EX
{
  DWORD Flags;
};

/* 4350 */
typedef _FILE_DISPOSITION_INFO_EX FILE_DISPOSITION_INFO_EX;

/* 4351 */
typedef _FILE_DISPOSITION_INFO_EX *PFILE_DISPOSITION_INFO_EX;

/* 4352 */
struct _FILE_ID_BOTH_DIR_INFO
{
  DWORD NextEntryOffset;
  DWORD FileIndex;
  LARGE_INTEGER CreationTime;
  LARGE_INTEGER LastAccessTime;
  LARGE_INTEGER LastWriteTime;
  LARGE_INTEGER ChangeTime;
  LARGE_INTEGER EndOfFile;
  LARGE_INTEGER AllocationSize;
  DWORD FileAttributes;
  DWORD FileNameLength;
  DWORD EaSize;
  CCHAR ShortNameLength;
  WCHAR ShortName[12];
  LARGE_INTEGER FileId;
  WCHAR FileName[1];
};

/* 4353 */
typedef _FILE_ID_BOTH_DIR_INFO FILE_ID_BOTH_DIR_INFO;

/* 4354 */
typedef _FILE_ID_BOTH_DIR_INFO *PFILE_ID_BOTH_DIR_INFO;

/* 4355 */
struct _FILE_FULL_DIR_INFO
{
  ULONG NextEntryOffset;
  ULONG FileIndex;
  LARGE_INTEGER CreationTime;
  LARGE_INTEGER LastAccessTime;
  LARGE_INTEGER LastWriteTime;
  LARGE_INTEGER ChangeTime;
  LARGE_INTEGER EndOfFile;
  LARGE_INTEGER AllocationSize;
  ULONG FileAttributes;
  ULONG FileNameLength;
  ULONG EaSize;
  WCHAR FileName[1];
};

/* 4356 */
typedef _FILE_FULL_DIR_INFO FILE_FULL_DIR_INFO;

/* 4357 */
typedef _FILE_FULL_DIR_INFO *PFILE_FULL_DIR_INFO;

/* 4358 */
enum _PRIORITY_HINT : unsigned __int32
{
  IoPriorityHintVeryLow = 0x0,
  IoPriorityHintLow = 0x1,
  IoPriorityHintNormal = 0x2,
  MaximumIoPriorityHintType = 0x3,
};

/* 4359 */
typedef _PRIORITY_HINT PRIORITY_HINT;

/* 4360 */
struct _FILE_IO_PRIORITY_HINT_INFO
{
  PRIORITY_HINT PriorityHint;
};

/* 4361 */
typedef _FILE_IO_PRIORITY_HINT_INFO FILE_IO_PRIORITY_HINT_INFO;

/* 4362 */
typedef _FILE_IO_PRIORITY_HINT_INFO *PFILE_IO_PRIORITY_HINT_INFO;

/* 4363 */
struct _FILE_ALIGNMENT_INFO
{
  ULONG AlignmentRequirement;
};

/* 4364 */
typedef _FILE_ALIGNMENT_INFO FILE_ALIGNMENT_INFO;

/* 4365 */
typedef _FILE_ALIGNMENT_INFO *PFILE_ALIGNMENT_INFO;

/* 4366 */
struct _FILE_STORAGE_INFO
{
  ULONG LogicalBytesPerSector;
  ULONG PhysicalBytesPerSectorForAtomicity;
  ULONG PhysicalBytesPerSectorForPerformance;
  ULONG FileSystemEffectivePhysicalBytesPerSectorForAtomicity;
  ULONG Flags;
  ULONG ByteOffsetForSectorAlignment;
  ULONG ByteOffsetForPartitionAlignment;
};

/* 4367 */
typedef _FILE_STORAGE_INFO FILE_STORAGE_INFO;

/* 4368 */
typedef _FILE_STORAGE_INFO *PFILE_STORAGE_INFO;

/* 4369 */
struct _FILE_ID_INFO
{
  ULONGLONG VolumeSerialNumber;
  FILE_ID_128 FileId;
};

/* 4370 */
typedef _FILE_ID_INFO FILE_ID_INFO;

/* 4371 */
typedef _FILE_ID_INFO *PFILE_ID_INFO;

/* 4372 */
struct _FILE_ID_EXTD_DIR_INFO
{
  ULONG NextEntryOffset;
  ULONG FileIndex;
  LARGE_INTEGER CreationTime;
  LARGE_INTEGER LastAccessTime;
  LARGE_INTEGER LastWriteTime;
  LARGE_INTEGER ChangeTime;
  LARGE_INTEGER EndOfFile;
  LARGE_INTEGER AllocationSize;
  ULONG FileAttributes;
  ULONG FileNameLength;
  ULONG EaSize;
  ULONG ReparsePointTag;
  FILE_ID_128 FileId;
  WCHAR FileName[1];
};

/* 4373 */
typedef _FILE_ID_EXTD_DIR_INFO FILE_ID_EXTD_DIR_INFO;

/* 4374 */
typedef _FILE_ID_EXTD_DIR_INFO *PFILE_ID_EXTD_DIR_INFO;

/* 4376 */
struct _FILE_REMOTE_PROTOCOL_INFO___37429236F9BFAE17F3D399B911E9C242
{
  ULONG Reserved[8];
};

/* 4377 */
struct _0129B05177E31069DD1C2B224CCB89A0
{
  ULONG Capabilities;
};

/* 4378 */
struct _3EACACF26E2CA95170F36F128BAC7767
{
  ULONG Capabilities;
  ULONG CachingFlags;
};

/* 4379 */
struct _FBCF7DE66C864CA9F22E8AAD63C2CD4B
{
  _0129B05177E31069DD1C2B224CCB89A0 Server;
  _3EACACF26E2CA95170F36F128BAC7767 Share;
};

/* 4380 */
union _FILE_REMOTE_PROTOCOL_INFO___EE68D4708CE0036909D2CBEE6610F96A
{
  _FBCF7DE66C864CA9F22E8AAD63C2CD4B Smb2;
  ULONG Reserved[16];
};

/* 4375 */
struct _FILE_REMOTE_PROTOCOL_INFO
{
  USHORT StructureVersion;
  USHORT StructureSize;
  ULONG Protocol;
  USHORT ProtocolMajorVersion;
  USHORT ProtocolMinorVersion;
  USHORT ProtocolRevision;
  USHORT Reserved;
  ULONG Flags;
  _FILE_REMOTE_PROTOCOL_INFO___37429236F9BFAE17F3D399B911E9C242 GenericReserved;
  _FILE_REMOTE_PROTOCOL_INFO___EE68D4708CE0036909D2CBEE6610F96A ProtocolSpecific;
};

/* 4381 */
typedef _FILE_REMOTE_PROTOCOL_INFO FILE_REMOTE_PROTOCOL_INFO;

/* 4382 */
typedef _FILE_REMOTE_PROTOCOL_INFO *PFILE_REMOTE_PROTOCOL_INFO;

/* 4383 */
enum _FILE_ID_TYPE : unsigned __int32
{
  FileIdType = 0x0,
  ObjectIdType = 0x1,
  ExtendedFileIdType = 0x2,
  MaximumFileIdType = 0x3,
};

/* 4384 */
typedef _FILE_ID_TYPE FILE_ID_TYPE;

/* 4385 */
typedef _FILE_ID_TYPE *PFILE_ID_TYPE;

/* 4387 */
union FILE_ID_DESCRIPTOR___8E49B83756FA870B89867F74A9FED542
{
  LARGE_INTEGER FileId;
  GUID ObjectId;
  FILE_ID_128 ExtendedFileId;
};

/* 4386 */
struct FILE_ID_DESCRIPTOR
{
  DWORD dwSize;
  FILE_ID_TYPE Type;
  union
  {
    LARGE_INTEGER FileId;
    GUID ObjectId;
    FILE_ID_128 ExtendedFileId;
  };
};

/* 4388 */
typedef FILE_ID_DESCRIPTOR *LPFILE_ID_DESCRIPTOR;

/* 4389 */
struct _DRAWPATRECT
{
  POINT ptPosition;
  POINT ptSize;
  WORD wStyle;
  WORD wPattern;
};

/* 4390 */
typedef _DRAWPATRECT DRAWPATRECT;

/* 4391 */
typedef _DRAWPATRECT *PDRAWPATRECT;

/* 4392 */
struct _PSINJECTDATA
{
  DWORD DataBytes;
  WORD InjectionPoint;
  WORD PageNumber;
};

/* 4393 */
typedef _PSINJECTDATA PSINJECTDATA;

/* 4394 */
typedef _PSINJECTDATA *PPSINJECTDATA;

/* 4395 */
struct _PSFEATURE_OUTPUT
{
  BOOL bPageIndependent;
  BOOL bSetPageDevice;
};

/* 4396 */
typedef _PSFEATURE_OUTPUT PSFEATURE_OUTPUT;

/* 4397 */
typedef _PSFEATURE_OUTPUT *PPSFEATURE_OUTPUT;

/* 4398 */
struct _PSFEATURE_CUSTPAPER
{
  LONG lOrientation;
  LONG lWidth;
  LONG lHeight;
  LONG lWidthOffset;
  LONG lHeightOffset;
};

/* 4399 */
typedef _PSFEATURE_CUSTPAPER PSFEATURE_CUSTPAPER;

/* 4400 */
typedef _PSFEATURE_CUSTPAPER *PPSFEATURE_CUSTPAPER;

/* 4401 */
struct tagXFORM
{
  FLOAT eM11;
  FLOAT eM12;
  FLOAT eM21;
  FLOAT eM22;
  FLOAT eDx;
  FLOAT eDy;
};

/* 4402 */
typedef tagXFORM XFORM;

/* 4403 */
typedef tagXFORM *PXFORM;

/* 4404 */
typedef tagXFORM *LPXFORM;

/* 4405 */
struct tagBITMAP
{
  LONG bmType;
  LONG bmWidth;
  LONG bmHeight;
  LONG bmWidthBytes;
  WORD bmPlanes;
  WORD bmBitsPixel;
  LPVOID bmBits;
};

/* 4406 */
typedef tagBITMAP BITMAP;

/* 4407 */
typedef tagBITMAP *PBITMAP;

/* 4408 */
typedef tagBITMAP *NPBITMAP;

/* 4409 */
typedef tagBITMAP *LPBITMAP;

/* 4410 */
#pragma pack(push, 1)
struct tagRGBTRIPLE
{
  BYTE rgbtBlue;
  BYTE rgbtGreen;
  BYTE rgbtRed;
};
#pragma pack(pop)

/* 4411 */
typedef tagRGBTRIPLE RGBTRIPLE;

/* 4412 */
typedef tagRGBTRIPLE *PRGBTRIPLE;

/* 4413 */
typedef tagRGBTRIPLE *NPRGBTRIPLE;

/* 4414 */
typedef tagRGBTRIPLE *LPRGBTRIPLE;

/* 4415 */
struct tagRGBQUAD
{
  BYTE rgbBlue;
  BYTE rgbGreen;
  BYTE rgbRed;
  BYTE rgbReserved;
};

/* 4416 */
typedef tagRGBQUAD RGBQUAD;

/* 4417 */
typedef RGBQUAD *LPRGBQUAD;

/* 4418 */
typedef LONG LCSCSTYPE;

/* 4419 */
typedef LONG LCSGAMUTMATCH;

/* 4420 */
typedef __int32 FXPT16DOT16;

/* 4421 */
typedef __int32 *LPFXPT16DOT16;

/* 4422 */
typedef __int32 FXPT2DOT30;

/* 4423 */
typedef __int32 *LPFXPT2DOT30;

/* 4424 */
struct tagCIEXYZ
{
  FXPT2DOT30 ciexyzX;
  FXPT2DOT30 ciexyzY;
  FXPT2DOT30 ciexyzZ;
};

/* 4425 */
typedef tagCIEXYZ CIEXYZ;

/* 4426 */
typedef CIEXYZ *LPCIEXYZ;

/* 4427 */
struct tagICEXYZTRIPLE
{
  CIEXYZ ciexyzRed;
  CIEXYZ ciexyzGreen;
  CIEXYZ ciexyzBlue;
};

/* 4428 */
typedef tagICEXYZTRIPLE CIEXYZTRIPLE;

/* 4429 */
typedef CIEXYZTRIPLE *LPCIEXYZTRIPLE;

/* 4430 */
struct tagLOGCOLORSPACEA
{
  DWORD lcsSignature;
  DWORD lcsVersion;
  DWORD lcsSize;
  LCSCSTYPE lcsCSType;
  LCSGAMUTMATCH lcsIntent;
  CIEXYZTRIPLE lcsEndpoints;
  DWORD lcsGammaRed;
  DWORD lcsGammaGreen;
  DWORD lcsGammaBlue;
  CHAR lcsFilename[260];
};

/* 4431 */
typedef tagLOGCOLORSPACEA LOGCOLORSPACEA;

/* 4432 */
typedef tagLOGCOLORSPACEA *LPLOGCOLORSPACEA;

/* 4433 */
struct tagLOGCOLORSPACEW
{
  DWORD lcsSignature;
  DWORD lcsVersion;
  DWORD lcsSize;
  LCSCSTYPE lcsCSType;
  LCSGAMUTMATCH lcsIntent;
  CIEXYZTRIPLE lcsEndpoints;
  DWORD lcsGammaRed;
  DWORD lcsGammaGreen;
  DWORD lcsGammaBlue;
  WCHAR lcsFilename[260];
};

/* 4434 */
typedef tagLOGCOLORSPACEW LOGCOLORSPACEW;

/* 4435 */
typedef tagLOGCOLORSPACEW *LPLOGCOLORSPACEW;

/* 4436 */
typedef LOGCOLORSPACEA LOGCOLORSPACE;

/* 4437 */
typedef LPLOGCOLORSPACEA LPLOGCOLORSPACE;

/* 4438 */
struct tagBITMAPCOREHEADER
{
  DWORD bcSize;
  WORD bcWidth;
  WORD bcHeight;
  WORD bcPlanes;
  WORD bcBitCount;
};

/* 4439 */
typedef tagBITMAPCOREHEADER BITMAPCOREHEADER;

/* 4440 */
typedef tagBITMAPCOREHEADER *LPBITMAPCOREHEADER;

/* 4441 */
typedef tagBITMAPCOREHEADER *PBITMAPCOREHEADER;

/* 4442 */
struct tagBITMAPINFOHEADER
{
  DWORD biSize;
  LONG biWidth;
  LONG biHeight;
  WORD biPlanes;
  WORD biBitCount;
  DWORD biCompression;
  DWORD biSizeImage;
  LONG biXPelsPerMeter;
  LONG biYPelsPerMeter;
  DWORD biClrUsed;
  DWORD biClrImportant;
};

/* 4443 */
typedef tagBITMAPINFOHEADER BITMAPINFOHEADER;

/* 4444 */
typedef tagBITMAPINFOHEADER *LPBITMAPINFOHEADER;

/* 4445 */
typedef tagBITMAPINFOHEADER *PBITMAPINFOHEADER;

/* 4446 */
struct BITMAPV4HEADER
{
  DWORD bV4Size;
  LONG bV4Width;
  LONG bV4Height;
  WORD bV4Planes;
  WORD bV4BitCount;
  DWORD bV4V4Compression;
  DWORD bV4SizeImage;
  LONG bV4XPelsPerMeter;
  LONG bV4YPelsPerMeter;
  DWORD bV4ClrUsed;
  DWORD bV4ClrImportant;
  DWORD bV4RedMask;
  DWORD bV4GreenMask;
  DWORD bV4BlueMask;
  DWORD bV4AlphaMask;
  DWORD bV4CSType;
  CIEXYZTRIPLE bV4Endpoints;
  DWORD bV4GammaRed;
  DWORD bV4GammaGreen;
  DWORD bV4GammaBlue;
};

/* 4447 */
typedef BITMAPV4HEADER *LPBITMAPV4HEADER;

/* 4448 */
typedef BITMAPV4HEADER *PBITMAPV4HEADER;

/* 4449 */
struct BITMAPV5HEADER
{
  DWORD bV5Size;
  LONG bV5Width;
  LONG bV5Height;
  WORD bV5Planes;
  WORD bV5BitCount;
  DWORD bV5Compression;
  DWORD bV5SizeImage;
  LONG bV5XPelsPerMeter;
  LONG bV5YPelsPerMeter;
  DWORD bV5ClrUsed;
  DWORD bV5ClrImportant;
  DWORD bV5RedMask;
  DWORD bV5GreenMask;
  DWORD bV5BlueMask;
  DWORD bV5AlphaMask;
  DWORD bV5CSType;
  CIEXYZTRIPLE bV5Endpoints;
  DWORD bV5GammaRed;
  DWORD bV5GammaGreen;
  DWORD bV5GammaBlue;
  DWORD bV5Intent;
  DWORD bV5ProfileData;
  DWORD bV5ProfileSize;
  DWORD bV5Reserved;
};

/* 4450 */
typedef BITMAPV5HEADER *LPBITMAPV5HEADER;

/* 4451 */
typedef BITMAPV5HEADER *PBITMAPV5HEADER;

/* 4452 */
struct tagBITMAPINFO
{
  BITMAPINFOHEADER bmiHeader;
  RGBQUAD bmiColors[1];
};

/* 4453 */
typedef tagBITMAPINFO BITMAPINFO;

/* 4454 */
typedef tagBITMAPINFO *LPBITMAPINFO;

/* 4455 */
typedef tagBITMAPINFO *PBITMAPINFO;

/* 4456 */
struct tagBITMAPCOREINFO
{
  BITMAPCOREHEADER bmciHeader;
  RGBTRIPLE bmciColors[1];
};

/* 4457 */
typedef tagBITMAPCOREINFO BITMAPCOREINFO;

/* 4458 */
typedef tagBITMAPCOREINFO *LPBITMAPCOREINFO;

/* 4459 */
typedef tagBITMAPCOREINFO *PBITMAPCOREINFO;

/* 4460 */
#pragma pack(push, 2)
struct tagBITMAPFILEHEADER
{
  WORD bfType;
  DWORD bfSize;
  WORD bfReserved1;
  WORD bfReserved2;
  DWORD bfOffBits;
};
#pragma pack(pop)

/* 4461 */
typedef tagBITMAPFILEHEADER BITMAPFILEHEADER;

/* 4462 */
typedef tagBITMAPFILEHEADER *LPBITMAPFILEHEADER;

/* 4463 */
typedef tagBITMAPFILEHEADER *PBITMAPFILEHEADER;

/* 4464 */
struct tagFONTSIGNATURE
{
  DWORD fsUsb[4];
  DWORD fsCsb[2];
};

/* 4465 */
typedef tagFONTSIGNATURE FONTSIGNATURE;

/* 4466 */
typedef tagFONTSIGNATURE *PFONTSIGNATURE;

/* 4467 */
typedef tagFONTSIGNATURE *LPFONTSIGNATURE;

/* 4468 */
struct tagCHARSETINFO
{
  UINT ciCharset;
  UINT ciACP;
  FONTSIGNATURE fs;
};

/* 4469 */
typedef tagCHARSETINFO CHARSETINFO;

/* 4470 */
typedef tagCHARSETINFO *PCHARSETINFO;

/* 4471 */
typedef tagCHARSETINFO *NPCHARSETINFO;

/* 4472 */
typedef tagCHARSETINFO *LPCHARSETINFO;

/* 4473 */
struct tagLOCALESIGNATURE
{
  DWORD lsUsb[4];
  DWORD lsCsbDefault[2];
  DWORD lsCsbSupported[2];
};

/* 4474 */
typedef tagLOCALESIGNATURE LOCALESIGNATURE;

/* 4475 */
typedef tagLOCALESIGNATURE *PLOCALESIGNATURE;

/* 4476 */
typedef tagLOCALESIGNATURE *LPLOCALESIGNATURE;

/* 4477 */
struct tagHANDLETABLE
{
  HGDIOBJ objectHandle[1];
};

/* 4478 */
typedef tagHANDLETABLE HANDLETABLE;

/* 4479 */
typedef tagHANDLETABLE *PHANDLETABLE;

/* 4480 */
typedef tagHANDLETABLE *LPHANDLETABLE;

/* 4481 */
struct tagMETARECORD
{
  DWORD rdSize;
  WORD rdFunction;
  WORD rdParm[1];
};

/* 4482 */
typedef tagMETARECORD METARECORD;

/* 4483 */
typedef tagMETARECORD *PMETARECORD;

/* 4484 */
typedef tagMETARECORD *LPMETARECORD;

/* 4485 */
struct tagMETAFILEPICT
{
  LONG mm;
  LONG xExt;
  LONG yExt;
  HMETAFILE hMF;
};

/* 4486 */
typedef tagMETAFILEPICT METAFILEPICT;

/* 4487 */
typedef tagMETAFILEPICT *LPMETAFILEPICT;

/* 4488 */
#pragma pack(push, 2)
struct tagMETAHEADER
{
  WORD mtType;
  WORD mtHeaderSize;
  WORD mtVersion;
  DWORD mtSize;
  WORD mtNoObjects;
  DWORD mtMaxRecord;
  WORD mtNoParameters;
};
#pragma pack(pop)

/* 4489 */
typedef tagMETAHEADER METAHEADER;

/* 4490 */
typedef tagMETAHEADER *PMETAHEADER;

/* 4491 */
typedef tagMETAHEADER *LPMETAHEADER;

/* 4492 */
struct tagENHMETARECORD
{
  DWORD iType;
  DWORD nSize;
  DWORD dParm[1];
};

/* 4493 */
typedef tagENHMETARECORD ENHMETARECORD;

/* 4494 */
typedef tagENHMETARECORD *PENHMETARECORD;

/* 4495 */
typedef tagENHMETARECORD *LPENHMETARECORD;

/* 4496 */
struct tagENHMETAHEADER
{
  DWORD iType;
  DWORD nSize;
  RECTL rclBounds;
  RECTL rclFrame;
  DWORD dSignature;
  DWORD nVersion;
  DWORD nBytes;
  DWORD nRecords;
  WORD nHandles;
  WORD sReserved;
  DWORD nDescription;
  DWORD offDescription;
  DWORD nPalEntries;
  SIZEL szlDevice;
  SIZEL szlMillimeters;
  DWORD cbPixelFormat;
  DWORD offPixelFormat;
  DWORD bOpenGL;
  SIZEL szlMicrometers;
};

/* 4497 */
typedef tagENHMETAHEADER ENHMETAHEADER;

/* 4498 */
typedef tagENHMETAHEADER *PENHMETAHEADER;

/* 4499 */
typedef tagENHMETAHEADER *LPENHMETAHEADER;

/* 4500 */
typedef BYTE BCHAR;

/* 4501 */
#pragma pack(push, 4)
struct tagTEXTMETRICA
{
  LONG tmHeight;
  LONG tmAscent;
  LONG tmDescent;
  LONG tmInternalLeading;
  LONG tmExternalLeading;
  LONG tmAveCharWidth;
  LONG tmMaxCharWidth;
  LONG tmWeight;
  LONG tmOverhang;
  LONG tmDigitizedAspectX;
  LONG tmDigitizedAspectY;
  BYTE tmFirstChar;
  BYTE tmLastChar;
  BYTE tmDefaultChar;
  BYTE tmBreakChar;
  BYTE tmItalic;
  BYTE tmUnderlined;
  BYTE tmStruckOut;
  BYTE tmPitchAndFamily;
  BYTE tmCharSet;
};
#pragma pack(pop)

/* 4502 */
typedef tagTEXTMETRICA TEXTMETRICA;

/* 4503 */
typedef tagTEXTMETRICA *PTEXTMETRICA;

/* 4504 */
typedef tagTEXTMETRICA *NPTEXTMETRICA;

/* 4505 */
typedef tagTEXTMETRICA *LPTEXTMETRICA;

/* 4506 */
#pragma pack(push, 4)
struct tagTEXTMETRICW
{
  LONG tmHeight;
  LONG tmAscent;
  LONG tmDescent;
  LONG tmInternalLeading;
  LONG tmExternalLeading;
  LONG tmAveCharWidth;
  LONG tmMaxCharWidth;
  LONG tmWeight;
  LONG tmOverhang;
  LONG tmDigitizedAspectX;
  LONG tmDigitizedAspectY;
  WCHAR tmFirstChar;
  WCHAR tmLastChar;
  WCHAR tmDefaultChar;
  WCHAR tmBreakChar;
  BYTE tmItalic;
  BYTE tmUnderlined;
  BYTE tmStruckOut;
  BYTE tmPitchAndFamily;
  BYTE tmCharSet;
};
#pragma pack(pop)

/* 4507 */
typedef tagTEXTMETRICW TEXTMETRICW;

/* 4508 */
typedef tagTEXTMETRICW *PTEXTMETRICW;

/* 4509 */
typedef tagTEXTMETRICW *NPTEXTMETRICW;

/* 4510 */
typedef tagTEXTMETRICW *LPTEXTMETRICW;

/* 4511 */
typedef TEXTMETRICA TEXTMETRIC;

/* 4512 */
typedef PTEXTMETRICA PTEXTMETRIC;

/* 4513 */
typedef NPTEXTMETRICA NPTEXTMETRIC;

/* 4514 */
typedef LPTEXTMETRICA LPTEXTMETRIC;

/* 4515 */
#pragma pack(push, 4)
struct tagNEWTEXTMETRICA
{
  LONG tmHeight;
  LONG tmAscent;
  LONG tmDescent;
  LONG tmInternalLeading;
  LONG tmExternalLeading;
  LONG tmAveCharWidth;
  LONG tmMaxCharWidth;
  LONG tmWeight;
  LONG tmOverhang;
  LONG tmDigitizedAspectX;
  LONG tmDigitizedAspectY;
  BYTE tmFirstChar;
  BYTE tmLastChar;
  BYTE tmDefaultChar;
  BYTE tmBreakChar;
  BYTE tmItalic;
  BYTE tmUnderlined;
  BYTE tmStruckOut;
  BYTE tmPitchAndFamily;
  BYTE tmCharSet;
  DWORD ntmFlags;
  UINT ntmSizeEM;
  UINT ntmCellHeight;
  UINT ntmAvgWidth;
};
#pragma pack(pop)

/* 4516 */
typedef tagNEWTEXTMETRICA NEWTEXTMETRICA;

/* 4517 */
typedef tagNEWTEXTMETRICA *PNEWTEXTMETRICA;

/* 4518 */
typedef tagNEWTEXTMETRICA *NPNEWTEXTMETRICA;

/* 4519 */
typedef tagNEWTEXTMETRICA *LPNEWTEXTMETRICA;

/* 4520 */
#pragma pack(push, 4)
struct tagNEWTEXTMETRICW
{
  LONG tmHeight;
  LONG tmAscent;
  LONG tmDescent;
  LONG tmInternalLeading;
  LONG tmExternalLeading;
  LONG tmAveCharWidth;
  LONG tmMaxCharWidth;
  LONG tmWeight;
  LONG tmOverhang;
  LONG tmDigitizedAspectX;
  LONG tmDigitizedAspectY;
  WCHAR tmFirstChar;
  WCHAR tmLastChar;
  WCHAR tmDefaultChar;
  WCHAR tmBreakChar;
  BYTE tmItalic;
  BYTE tmUnderlined;
  BYTE tmStruckOut;
  BYTE tmPitchAndFamily;
  BYTE tmCharSet;
  DWORD ntmFlags;
  UINT ntmSizeEM;
  UINT ntmCellHeight;
  UINT ntmAvgWidth;
};
#pragma pack(pop)

/* 4521 */
typedef tagNEWTEXTMETRICW NEWTEXTMETRICW;

/* 4522 */
typedef tagNEWTEXTMETRICW *PNEWTEXTMETRICW;

/* 4523 */
typedef tagNEWTEXTMETRICW *NPNEWTEXTMETRICW;

/* 4524 */
typedef tagNEWTEXTMETRICW *LPNEWTEXTMETRICW;

/* 4525 */
typedef NEWTEXTMETRICA NEWTEXTMETRIC;

/* 4526 */
typedef PNEWTEXTMETRICA PNEWTEXTMETRIC;

/* 4527 */
typedef NPNEWTEXTMETRICA NPNEWTEXTMETRIC;

/* 4528 */
typedef LPNEWTEXTMETRICA LPNEWTEXTMETRIC;

/* 4529 */
struct tagNEWTEXTMETRICEXA
{
  NEWTEXTMETRICA ntmTm;
  FONTSIGNATURE ntmFontSig;
};

/* 4530 */
typedef tagNEWTEXTMETRICEXA NEWTEXTMETRICEXA;

/* 4531 */
struct tagNEWTEXTMETRICEXW
{
  NEWTEXTMETRICW ntmTm;
  FONTSIGNATURE ntmFontSig;
};

/* 4532 */
typedef tagNEWTEXTMETRICEXW NEWTEXTMETRICEXW;

/* 4533 */
typedef NEWTEXTMETRICEXA NEWTEXTMETRICEX;

/* 4534 */
struct tagPELARRAY
{
  LONG paXCount;
  LONG paYCount;
  LONG paXExt;
  LONG paYExt;
  BYTE paRGBs;
};

/* 4535 */
typedef tagPELARRAY PELARRAY;

/* 4536 */
typedef tagPELARRAY *PPELARRAY;

/* 4537 */
typedef tagPELARRAY *NPPELARRAY;

/* 4538 */
typedef tagPELARRAY *LPPELARRAY;

/* 4539 */
struct tagLOGBRUSH
{
  UINT lbStyle;
  COLORREF lbColor;
  ULONG_PTR lbHatch;
};

/* 4540 */
typedef tagLOGBRUSH LOGBRUSH;

/* 4541 */
typedef tagLOGBRUSH *PLOGBRUSH;

/* 4542 */
typedef tagLOGBRUSH *NPLOGBRUSH;

/* 4543 */
typedef tagLOGBRUSH *LPLOGBRUSH;

/* 4544 */
struct tagLOGBRUSH32
{
  UINT lbStyle;
  COLORREF lbColor;
  ULONG lbHatch;
};

/* 4545 */
typedef tagLOGBRUSH32 LOGBRUSH32;

/* 4546 */
typedef tagLOGBRUSH32 *PLOGBRUSH32;

/* 4547 */
typedef tagLOGBRUSH32 *NPLOGBRUSH32;

/* 4548 */
typedef tagLOGBRUSH32 *LPLOGBRUSH32;

/* 4549 */
typedef LOGBRUSH PATTERN;

/* 4550 */
typedef PATTERN *PPATTERN;

/* 4551 */
typedef PATTERN *NPPATTERN;

/* 4552 */
typedef PATTERN *LPPATTERN;

/* 4553 */
struct tagLOGPEN
{
  UINT lopnStyle;
  POINT lopnWidth;
  COLORREF lopnColor;
};

/* 4554 */
typedef tagLOGPEN LOGPEN;

/* 4555 */
typedef tagLOGPEN *PLOGPEN;

/* 4556 */
typedef tagLOGPEN *NPLOGPEN;

/* 4557 */
typedef tagLOGPEN *LPLOGPEN;

/* 4558 */
struct tagEXTLOGPEN
{
  DWORD elpPenStyle;
  DWORD elpWidth;
  UINT elpBrushStyle;
  COLORREF elpColor;
  ULONG_PTR elpHatch;
  DWORD elpNumEntries;
  DWORD elpStyleEntry[1];
};

/* 4559 */
typedef tagEXTLOGPEN EXTLOGPEN;

/* 4560 */
typedef tagEXTLOGPEN *PEXTLOGPEN;

/* 4561 */
typedef tagEXTLOGPEN *NPEXTLOGPEN;

/* 4562 */
typedef tagEXTLOGPEN *LPEXTLOGPEN;

/* 4563 */
struct tagEXTLOGPEN32
{
  DWORD elpPenStyle;
  DWORD elpWidth;
  UINT elpBrushStyle;
  COLORREF elpColor;
  ULONG elpHatch;
  DWORD elpNumEntries;
  DWORD elpStyleEntry[1];
};

/* 4564 */
typedef tagEXTLOGPEN32 EXTLOGPEN32;

/* 4565 */
typedef tagEXTLOGPEN32 *PEXTLOGPEN32;

/* 4566 */
typedef tagEXTLOGPEN32 *NPEXTLOGPEN32;

/* 4567 */
typedef tagEXTLOGPEN32 *LPEXTLOGPEN32;

/* 4568 */
struct tagPALETTEENTRY
{
  BYTE peRed;
  BYTE peGreen;
  BYTE peBlue;
  BYTE peFlags;
};

/* 4569 */
typedef tagPALETTEENTRY PALETTEENTRY;

/* 4570 */
typedef tagPALETTEENTRY *PPALETTEENTRY;

/* 4571 */
typedef tagPALETTEENTRY *LPPALETTEENTRY;

/* 4572 */
struct tagLOGPALETTE
{
  WORD palVersion;
  WORD palNumEntries;
  PALETTEENTRY palPalEntry[1];
};

/* 4573 */
typedef tagLOGPALETTE LOGPALETTE;

/* 4574 */
typedef tagLOGPALETTE *PLOGPALETTE;

/* 4575 */
typedef tagLOGPALETTE *NPLOGPALETTE;

/* 4576 */
typedef tagLOGPALETTE *LPLOGPALETTE;

/* 4577 */
struct tagLOGFONTA
{
  LONG lfHeight;
  LONG lfWidth;
  LONG lfEscapement;
  LONG lfOrientation;
  LONG lfWeight;
  BYTE lfItalic;
  BYTE lfUnderline;
  BYTE lfStrikeOut;
  BYTE lfCharSet;
  BYTE lfOutPrecision;
  BYTE lfClipPrecision;
  BYTE lfQuality;
  BYTE lfPitchAndFamily;
  CHAR lfFaceName[32];
};

/* 4578 */
typedef tagLOGFONTA LOGFONTA;

/* 4579 */
typedef tagLOGFONTA *PLOGFONTA;

/* 4580 */
typedef tagLOGFONTA *NPLOGFONTA;

/* 4581 */
typedef tagLOGFONTA *LPLOGFONTA;

/* 4582 */
struct tagLOGFONTW
{
  LONG lfHeight;
  LONG lfWidth;
  LONG lfEscapement;
  LONG lfOrientation;
  LONG lfWeight;
  BYTE lfItalic;
  BYTE lfUnderline;
  BYTE lfStrikeOut;
  BYTE lfCharSet;
  BYTE lfOutPrecision;
  BYTE lfClipPrecision;
  BYTE lfQuality;
  BYTE lfPitchAndFamily;
  WCHAR lfFaceName[32];
};

/* 4583 */
typedef tagLOGFONTW LOGFONTW;

/* 4584 */
typedef tagLOGFONTW *PLOGFONTW;

/* 4585 */
typedef tagLOGFONTW *NPLOGFONTW;

/* 4586 */
typedef tagLOGFONTW *LPLOGFONTW;

/* 4587 */
typedef LOGFONTA LOGFONT;

/* 4588 */
typedef PLOGFONTA PLOGFONT;

/* 4589 */
typedef NPLOGFONTA NPLOGFONT;

/* 4590 */
typedef LPLOGFONTA LPLOGFONT;

/* 4591 */
struct tagENUMLOGFONTA
{
  LOGFONTA elfLogFont;
  BYTE elfFullName[64];
  BYTE elfStyle[32];
};

/* 4592 */
typedef tagENUMLOGFONTA ENUMLOGFONTA;

/* 4593 */
typedef tagENUMLOGFONTA *LPENUMLOGFONTA;

/* 4594 */
struct tagENUMLOGFONTW
{
  LOGFONTW elfLogFont;
  WCHAR elfFullName[64];
  WCHAR elfStyle[32];
};

/* 4595 */
typedef tagENUMLOGFONTW ENUMLOGFONTW;

/* 4596 */
typedef tagENUMLOGFONTW *LPENUMLOGFONTW;

/* 4597 */
typedef ENUMLOGFONTA ENUMLOGFONT;

/* 4598 */
typedef LPENUMLOGFONTA LPENUMLOGFONT;

/* 4599 */
struct tagENUMLOGFONTEXA
{
  LOGFONTA elfLogFont;
  BYTE elfFullName[64];
  BYTE elfStyle[32];
  BYTE elfScript[32];
};

/* 4600 */
typedef tagENUMLOGFONTEXA ENUMLOGFONTEXA;

/* 4601 */
typedef tagENUMLOGFONTEXA *LPENUMLOGFONTEXA;

/* 4602 */
struct tagENUMLOGFONTEXW
{
  LOGFONTW elfLogFont;
  WCHAR elfFullName[64];
  WCHAR elfStyle[32];
  WCHAR elfScript[32];
};

/* 4603 */
typedef tagENUMLOGFONTEXW ENUMLOGFONTEXW;

/* 4604 */
typedef tagENUMLOGFONTEXW *LPENUMLOGFONTEXW;

/* 4605 */
typedef ENUMLOGFONTEXA ENUMLOGFONTEX;

/* 4606 */
typedef LPENUMLOGFONTEXA LPENUMLOGFONTEX;

/* 4607 */
struct tagPANOSE
{
  BYTE bFamilyType;
  BYTE bSerifStyle;
  BYTE bWeight;
  BYTE bProportion;
  BYTE bContrast;
  BYTE bStrokeVariation;
  BYTE bArmStyle;
  BYTE bLetterform;
  BYTE bMidline;
  BYTE bXHeight;
};

/* 4608 */
typedef tagPANOSE PANOSE;

/* 4609 */
typedef tagPANOSE *LPPANOSE;

/* 4610 */
struct tagEXTLOGFONTA
{
  LOGFONTA elfLogFont;
  BYTE elfFullName[64];
  BYTE elfStyle[32];
  DWORD elfVersion;
  DWORD elfStyleSize;
  DWORD elfMatch;
  DWORD elfReserved;
  BYTE elfVendorId[4];
  DWORD elfCulture;
  PANOSE elfPanose;
};

/* 4611 */
typedef tagEXTLOGFONTA EXTLOGFONTA;

/* 4612 */
typedef tagEXTLOGFONTA *PEXTLOGFONTA;

/* 4613 */
typedef tagEXTLOGFONTA *NPEXTLOGFONTA;

/* 4614 */
typedef tagEXTLOGFONTA *LPEXTLOGFONTA;

/* 4615 */
struct tagEXTLOGFONTW
{
  LOGFONTW elfLogFont;
  WCHAR elfFullName[64];
  WCHAR elfStyle[32];
  DWORD elfVersion;
  DWORD elfStyleSize;
  DWORD elfMatch;
  DWORD elfReserved;
  BYTE elfVendorId[4];
  DWORD elfCulture;
  PANOSE elfPanose;
};

/* 4616 */
typedef tagEXTLOGFONTW EXTLOGFONTW;

/* 4617 */
typedef tagEXTLOGFONTW *PEXTLOGFONTW;

/* 4618 */
typedef tagEXTLOGFONTW *NPEXTLOGFONTW;

/* 4619 */
typedef tagEXTLOGFONTW *LPEXTLOGFONTW;

/* 4620 */
typedef EXTLOGFONTA EXTLOGFONT;

/* 4621 */
typedef PEXTLOGFONTA PEXTLOGFONT;

/* 4622 */
typedef NPEXTLOGFONTA NPEXTLOGFONT;

/* 4623 */
typedef LPEXTLOGFONTA LPEXTLOGFONT;

/* 4625 */
struct _A4EE175A7532F35C00DA5CAD042934DF
{
  __int16 dmOrientation;
  __int16 dmPaperSize;
  __int16 dmPaperLength;
  __int16 dmPaperWidth;
  __int16 dmScale;
  __int16 dmCopies;
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
};

/* 4626 */
struct _486F79855E687F113A063916C94BB5B8
{
  POINTL dmPosition;
  DWORD dmDisplayOrientation;
  DWORD dmDisplayFixedOutput;
};

/* 4627 */
union _devicemodeA___EE3F7634911691A91B39D1F433B0CE04
{
  struct
  {
    __int16 dmOrientation;
    __int16 dmPaperSize;
    __int16 dmPaperLength;
    __int16 dmPaperWidth;
    __int16 dmScale;
    __int16 dmCopies;
    __int16 dmDefaultSource;
    __int16 dmPrintQuality;
  };
  struct
  {
    POINTL dmPosition;
    DWORD dmDisplayOrientation;
    DWORD dmDisplayFixedOutput;
  };
};

/* 4628 */
union _devicemodeA___391FF029AC41787D2EB74613AC39F8F9
{
  DWORD dmDisplayFlags;
  DWORD dmNup;
};

/* 4624 */
struct _devicemodeA
{
  BYTE dmDeviceName[32];
  WORD dmSpecVersion;
  WORD dmDriverVersion;
  WORD dmSize;
  WORD dmDriverExtra;
  DWORD dmFields;
  union
  {
    struct
    {
      __int16 dmOrientation;
      __int16 dmPaperSize;
      __int16 dmPaperLength;
      __int16 dmPaperWidth;
      __int16 dmScale;
      __int16 dmCopies;
      __int16 dmDefaultSource;
      __int16 dmPrintQuality;
    };
    struct
    {
      POINTL dmPosition;
      DWORD dmDisplayOrientation;
      DWORD dmDisplayFixedOutput;
    };
  };
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  BYTE dmFormName[32];
  WORD dmLogPixels;
  DWORD dmBitsPerPel;
  DWORD dmPelsWidth;
  DWORD dmPelsHeight;
  union
  {
    DWORD dmDisplayFlags;
    DWORD dmNup;
  };
  DWORD dmDisplayFrequency;
  DWORD dmICMMethod;
  DWORD dmICMIntent;
  DWORD dmMediaType;
  DWORD dmDitherType;
  DWORD dmReserved1;
  DWORD dmReserved2;
  DWORD dmPanningWidth;
  DWORD dmPanningHeight;
};

/* 4629 */
typedef _devicemodeA DEVMODEA;

/* 4630 */
typedef _devicemodeA *PDEVMODEA;

/* 4631 */
typedef _devicemodeA *NPDEVMODEA;

/* 4632 */
typedef _devicemodeA *LPDEVMODEA;

/* 4634 */
union _devicemodeW___EE3F7634911691A91B39D1F433B0CE04
{
  struct
  {
    __int16 dmOrientation;
    __int16 dmPaperSize;
    __int16 dmPaperLength;
    __int16 dmPaperWidth;
    __int16 dmScale;
    __int16 dmCopies;
    __int16 dmDefaultSource;
    __int16 dmPrintQuality;
  };
  struct
  {
    POINTL dmPosition;
    DWORD dmDisplayOrientation;
    DWORD dmDisplayFixedOutput;
  };
};

/* 4635 */
union _devicemodeW___391FF029AC41787D2EB74613AC39F8F9
{
  DWORD dmDisplayFlags;
  DWORD dmNup;
};

/* 4633 */
struct _devicemodeW
{
  WCHAR dmDeviceName[32];
  WORD dmSpecVersion;
  WORD dmDriverVersion;
  WORD dmSize;
  WORD dmDriverExtra;
  DWORD dmFields;
  union
  {
    struct
    {
      __int16 dmOrientation;
      __int16 dmPaperSize;
      __int16 dmPaperLength;
      __int16 dmPaperWidth;
      __int16 dmScale;
      __int16 dmCopies;
      __int16 dmDefaultSource;
      __int16 dmPrintQuality;
    };
    struct
    {
      POINTL dmPosition;
      DWORD dmDisplayOrientation;
      DWORD dmDisplayFixedOutput;
    };
  };
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  WCHAR dmFormName[32];
  WORD dmLogPixels;
  DWORD dmBitsPerPel;
  DWORD dmPelsWidth;
  DWORD dmPelsHeight;
  union
  {
    DWORD dmDisplayFlags;
    DWORD dmNup;
  };
  DWORD dmDisplayFrequency;
  DWORD dmICMMethod;
  DWORD dmICMIntent;
  DWORD dmMediaType;
  DWORD dmDitherType;
  DWORD dmReserved1;
  DWORD dmReserved2;
  DWORD dmPanningWidth;
  DWORD dmPanningHeight;
};

/* 4636 */
typedef _devicemodeW DEVMODEW;

/* 4637 */
typedef _devicemodeW *PDEVMODEW;

/* 4638 */
typedef _devicemodeW *NPDEVMODEW;

/* 4639 */
typedef _devicemodeW *LPDEVMODEW;

/* 4640 */
typedef DEVMODEA DEVMODE;

/* 4641 */
typedef PDEVMODEA PDEVMODE;

/* 4642 */
typedef NPDEVMODEA NPDEVMODE;

/* 4643 */
typedef LPDEVMODEA LPDEVMODE;

/* 4644 */
struct _DISPLAY_DEVICEA
{
  DWORD cb;
  CHAR DeviceName[32];
  CHAR DeviceString[128];
  DWORD StateFlags;
  CHAR DeviceID[128];
  CHAR DeviceKey[128];
};

/* 4645 */
typedef _DISPLAY_DEVICEA DISPLAY_DEVICEA;

/* 4646 */
typedef _DISPLAY_DEVICEA *PDISPLAY_DEVICEA;

/* 4647 */
typedef _DISPLAY_DEVICEA *LPDISPLAY_DEVICEA;

/* 4648 */
struct _DISPLAY_DEVICEW
{
  DWORD cb;
  WCHAR DeviceName[32];
  WCHAR DeviceString[128];
  DWORD StateFlags;
  WCHAR DeviceID[128];
  WCHAR DeviceKey[128];
};

/* 4649 */
typedef _DISPLAY_DEVICEW DISPLAY_DEVICEW;

/* 4650 */
typedef _DISPLAY_DEVICEW *PDISPLAY_DEVICEW;

/* 4651 */
typedef _DISPLAY_DEVICEW *LPDISPLAY_DEVICEW;

/* 4652 */
typedef DISPLAY_DEVICEA DISPLAY_DEVICE;

/* 4653 */
typedef PDISPLAY_DEVICEA PDISPLAY_DEVICE;

/* 4654 */
typedef LPDISPLAY_DEVICEA LPDISPLAY_DEVICE;

/* 4655 */
struct DISPLAYCONFIG_RATIONAL
{
  UINT32 Numerator;
  UINT32 Denominator;
};

/* 4656 */
enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY : unsigned __int32
{
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER = 0xFFFFFFFF,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15 = 0x0,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO = 0x1,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO = 0x2,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO = 0x3,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI = 0x4,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI = 0x5,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS = 0x6,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN = 0x8,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI = 0x9,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL = 0xA,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED = 0xB,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL = 0xC,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED = 0xD,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE = 0xE,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_MIRACAST = 0xF,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_WIRED = 0x10,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_VIRTUAL = 0x11,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL = 0x80000000,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32 = 0xFFFFFFFF,
};

/* 4657 */
enum DISPLAYCONFIG_SCANLINE_ORDERING : unsigned __int32
{
  DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0x0,
  DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 0x1,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 0x2,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 0x2,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 0x3,
  DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = 0xFFFFFFFF,
};

/* 4658 */
struct DISPLAYCONFIG_2DREGION
{
  UINT32 cx;
  UINT32 cy;
};

/* 4660 */
struct _384A0D2752004B0844262A4FDB8DFA08
{
  unsigned __int32 videoStandard : 16;
  unsigned __int32 vSyncFreqDivider : 6;
  unsigned __int32 reserved : 10;
};

/* 4661 */
union DISPLAYCONFIG_VIDEO_SIGNAL_INFO___02DB0BCC62B9453EF0457B26FA75659A
{
  _384A0D2752004B0844262A4FDB8DFA08 AdditionalSignalInfo;
  UINT32 videoStandard;
};

/* 4659 */
struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO
{
  UINT64 pixelRate;
  DISPLAYCONFIG_RATIONAL hSyncFreq;
  DISPLAYCONFIG_RATIONAL vSyncFreq;
  DISPLAYCONFIG_2DREGION activeSize;
  DISPLAYCONFIG_2DREGION totalSize;
  union
  {
    _384A0D2752004B0844262A4FDB8DFA08 AdditionalSignalInfo;
    UINT32 videoStandard;
  };
  DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
};

/* 4662 */
enum DISPLAYCONFIG_SCALING : unsigned __int32
{
  DISPLAYCONFIG_SCALING_IDENTITY = 0x1,
  DISPLAYCONFIG_SCALING_CENTERED = 0x2,
  DISPLAYCONFIG_SCALING_STRETCHED = 0x3,
  DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX = 0x4,
  DISPLAYCONFIG_SCALING_CUSTOM = 0x5,
  DISPLAYCONFIG_SCALING_PREFERRED = 0x80,
  DISPLAYCONFIG_SCALING_FORCE_UINT32 = 0xFFFFFFFF,
};

/* 4663 */
enum DISPLAYCONFIG_ROTATION : unsigned __int32
{
  DISPLAYCONFIG_ROTATION_IDENTITY = 0x1,
  DISPLAYCONFIG_ROTATION_ROTATE90 = 0x2,
  DISPLAYCONFIG_ROTATION_ROTATE180 = 0x3,
  DISPLAYCONFIG_ROTATION_ROTATE270 = 0x4,
  DISPLAYCONFIG_ROTATION_FORCE_UINT32 = 0xFFFFFFFF,
};

/* 4664 */
enum DISPLAYCONFIG_MODE_INFO_TYPE : unsigned __int32
{
  DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE = 0x1,
  DISPLAYCONFIG_MODE_INFO_TYPE_TARGET = 0x2,
  DISPLAYCONFIG_MODE_INFO_TYPE_DESKTOP_IMAGE = 0x3,
  DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32 = 0xFFFFFFFF,
};

/* 4665 */
enum DISPLAYCONFIG_PIXELFORMAT : unsigned __int32
{
  DISPLAYCONFIG_PIXELFORMAT_8BPP = 0x1,
  DISPLAYCONFIG_PIXELFORMAT_16BPP = 0x2,
  DISPLAYCONFIG_PIXELFORMAT_24BPP = 0x3,
  DISPLAYCONFIG_PIXELFORMAT_32BPP = 0x4,
  DISPLAYCONFIG_PIXELFORMAT_NONGDI = 0x5,
  DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32 = 0xFFFFFFFF,
};

/* 4666 */
struct DISPLAYCONFIG_SOURCE_MODE
{
  UINT32 width;
  UINT32 height;
  DISPLAYCONFIG_PIXELFORMAT pixelFormat;
  POINTL position;
};

/* 4667 */
struct DISPLAYCONFIG_TARGET_MODE
{
  DISPLAYCONFIG_VIDEO_SIGNAL_INFO targetVideoSignalInfo;
};

/* 4668 */
struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO
{
  POINTL PathSourceSize;
  RECTL DesktopImageRegion;
  RECTL DesktopImageClip;
};

/* 4670 */
union DISPLAYCONFIG_MODE_INFO___C7CF589F1BDAE095827AC382B7F00856
{
  DISPLAYCONFIG_TARGET_MODE targetMode;
  DISPLAYCONFIG_SOURCE_MODE sourceMode;
  DISPLAYCONFIG_DESKTOP_IMAGE_INFO desktopImageInfo;
};

/* 4669 */
struct DISPLAYCONFIG_MODE_INFO
{
  DISPLAYCONFIG_MODE_INFO_TYPE infoType;
  UINT32 id;
  LUID adapterId;
  union
  {
    DISPLAYCONFIG_TARGET_MODE targetMode;
    DISPLAYCONFIG_SOURCE_MODE sourceMode;
    DISPLAYCONFIG_DESKTOP_IMAGE_INFO desktopImageInfo;
  };
};

/* 4672 */
struct _A030FD3B32E4F891E79E2284E8F158BA
{
  unsigned __int32 cloneGroupId : 16;
  unsigned __int32 sourceModeInfoIdx : 16;
};

/* 4673 */
union DISPLAYCONFIG_PATH_SOURCE_INFO___61AC9E76C5182660D462789AB8034D76
{
  UINT32 modeInfoIdx;
  struct
  {
    unsigned __int32 cloneGroupId : 16;
    unsigned __int32 sourceModeInfoIdx : 16;
  };
};

/* 4671 */
struct DISPLAYCONFIG_PATH_SOURCE_INFO
{
  LUID adapterId;
  UINT32 id;
  union
  {
    UINT32 modeInfoIdx;
    struct
    {
      unsigned __int32 cloneGroupId : 16;
      unsigned __int32 sourceModeInfoIdx : 16;
    };
  };
  UINT32 statusFlags;
};

/* 4675 */
struct _0444EE5E7824138600A60EA9ABBD0023
{
  unsigned __int32 desktopModeInfoIdx : 16;
  unsigned __int32 targetModeInfoIdx : 16;
};

/* 4676 */
union DISPLAYCONFIG_PATH_TARGET_INFO___B261276D3FD515915541A20464F2F9DB
{
  UINT32 modeInfoIdx;
  struct
  {
    unsigned __int32 desktopModeInfoIdx : 16;
    unsigned __int32 targetModeInfoIdx : 16;
  };
};

/* 4674 */
struct DISPLAYCONFIG_PATH_TARGET_INFO
{
  LUID adapterId;
  UINT32 id;
  union
  {
    UINT32 modeInfoIdx;
    struct
    {
      unsigned __int32 desktopModeInfoIdx : 16;
      unsigned __int32 targetModeInfoIdx : 16;
    };
  };
  DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
  DISPLAYCONFIG_ROTATION rotation;
  DISPLAYCONFIG_SCALING scaling;
  DISPLAYCONFIG_RATIONAL refreshRate;
  DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
  BOOL targetAvailable;
  UINT32 statusFlags;
};

/* 4677 */
struct DISPLAYCONFIG_PATH_INFO
{
  DISPLAYCONFIG_PATH_SOURCE_INFO sourceInfo;
  DISPLAYCONFIG_PATH_TARGET_INFO targetInfo;
  UINT32 flags;
};

/* 4678 */
enum DISPLAYCONFIG_TOPOLOGY_ID : unsigned __int32
{
  DISPLAYCONFIG_TOPOLOGY_INTERNAL = 0x1,
  DISPLAYCONFIG_TOPOLOGY_CLONE = 0x2,
  DISPLAYCONFIG_TOPOLOGY_EXTEND = 0x4,
  DISPLAYCONFIG_TOPOLOGY_EXTERNAL = 0x8,
  DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32 = 0xFFFFFFFF,
};

/* 4679 */
enum DISPLAYCONFIG_DEVICE_INFO_TYPE : unsigned __int32
{
  DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME = 0x1,
  DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME = 0x2,
  DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE = 0x3,
  DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME = 0x4,
  DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE = 0x5,
  DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_BASE_TYPE = 0x6,
  DISPLAYCONFIG_DEVICE_INFO_GET_SUPPORT_VIRTUAL_RESOLUTION = 0x7,
  DISPLAYCONFIG_DEVICE_INFO_SET_SUPPORT_VIRTUAL_RESOLUTION = 0x8,
  DISPLAYCONFIG_DEVICE_INFO_GET_ADVANCED_COLOR_INFO = 0x9,
  DISPLAYCONFIG_DEVICE_INFO_SET_ADVANCED_COLOR_STATE = 0xA,
  DISPLAYCONFIG_DEVICE_INFO_GET_SDR_WHITE_LEVEL = 0xB,
  DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32 = 0xFFFFFFFF,
};

/* 4680 */
struct DISPLAYCONFIG_DEVICE_INFO_HEADER
{
  DISPLAYCONFIG_DEVICE_INFO_TYPE type;
  UINT32 size;
  LUID adapterId;
  UINT32 id;
};

/* 4681 */
struct DISPLAYCONFIG_SOURCE_DEVICE_NAME
{
  DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  WCHAR viewGdiDeviceName[32];
};

/* 4683 */
struct _63D8AC276564BEA69DF63EBD86FDB811
{
  unsigned __int32 friendlyNameFromEdid : 1;
  unsigned __int32 friendlyNameForced : 1;
  unsigned __int32 edidIdsValid : 1;
  unsigned __int32 reserved : 29;
};

/* 4684 */
union DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS___3212247FCB36E76CDA904B8EF1794EF2
{
  struct
  {
    unsigned __int32 friendlyNameFromEdid : 1;
    unsigned __int32 friendlyNameForced : 1;
    unsigned __int32 edidIdsValid : 1;
    unsigned __int32 reserved : 29;
  };
  UINT32 value;
};

/* 4682 */
struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS
{
  union
  {
    struct
    {
      unsigned __int32 friendlyNameFromEdid : 1;
      unsigned __int32 friendlyNameForced : 1;
      unsigned __int32 edidIdsValid : 1;
      unsigned __int32 reserved : 29;
    };
    UINT32 value;
  };
};

/* 4685 */
struct DISPLAYCONFIG_TARGET_DEVICE_NAME
{
  DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS flags;
  DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
  UINT16 edidManufactureId;
  UINT16 edidProductCodeId;
  UINT32 connectorInstance;
  WCHAR monitorFriendlyDeviceName[64];
  WCHAR monitorDevicePath[128];
};

/* 4686 */
struct DISPLAYCONFIG_TARGET_PREFERRED_MODE
{
  DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  UINT32 width;
  UINT32 height;
  DISPLAYCONFIG_TARGET_MODE targetMode;
};

/* 4687 */
struct DISPLAYCONFIG_ADAPTER_NAME
{
  DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  WCHAR adapterDevicePath[128];
};

/* 4688 */
struct DISPLAYCONFIG_TARGET_BASE_TYPE
{
  DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY baseOutputTechnology;
};

/* 4690 */
struct _1570E6E652654060C308A778ED15CE16
{
  unsigned __int32 bootPersistenceOn : 1;
  unsigned __int32 reserved : 31;
};

/* 4691 */
union DISPLAYCONFIG_SET_TARGET_PERSISTENCE___355D109C8B4E4AEF84271C7784D7E191
{
  struct
  {
    unsigned __int32 bootPersistenceOn : 1;
    unsigned __int32 reserved : 31;
  };
  UINT32 value;
};

/* 4689 */
struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE
{
  DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct
    {
      unsigned __int32 bootPersistenceOn : 1;
      unsigned __int32 reserved : 31;
    };
    UINT32 value;
  };
};

/* 4693 */
struct _D47918EF7649E51E527D85F826FB453E
{
  unsigned __int32 disableMonitorVirtualResolution : 1;
  unsigned __int32 reserved : 31;
};

/* 4694 */
union DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION___F2BD161A31B09014C59BCA8CDC8BCA06
{
  struct
  {
    unsigned __int32 disableMonitorVirtualResolution : 1;
    unsigned __int32 reserved : 31;
  };
  UINT32 value;
};

/* 4692 */
struct DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION
{
  DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct
    {
      unsigned __int32 disableMonitorVirtualResolution : 1;
      unsigned __int32 reserved : 31;
    };
    UINT32 value;
  };
};

/* 4695 */
enum _DISPLAYCONFIG_COLOR_ENCODING : unsigned __int32
{
  DISPLAYCONFIG_COLOR_ENCODING_RGB = 0x0,
  DISPLAYCONFIG_COLOR_ENCODING_YCBCR444 = 0x1,
  DISPLAYCONFIG_COLOR_ENCODING_YCBCR422 = 0x2,
  DISPLAYCONFIG_COLOR_ENCODING_YCBCR420 = 0x3,
  DISPLAYCONFIG_COLOR_ENCODING_INTENSITY = 0x4,
  DISPLAYCONFIG_COLOR_ENCODING_FORCE_UINT32 = 0xFFFFFFFF,
};

/* 4696 */
typedef _DISPLAYCONFIG_COLOR_ENCODING DISPLAYCONFIG_COLOR_ENCODING;

/* 4698 */
struct _721AF010CD3505050C324F97F48C6CA8
{
  unsigned __int32 advancedColorSupported : 1;
  unsigned __int32 advancedColorEnabled : 1;
  unsigned __int32 wideColorEnforced : 1;
  unsigned __int32 advancedColorForceDisabled : 1;
  unsigned __int32 reserved : 28;
};

/* 4699 */
union _DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO___D1ED48533BBC5D15418F532CAE9A0A65
{
  struct
  {
    unsigned __int32 advancedColorSupported : 1;
    unsigned __int32 advancedColorEnabled : 1;
    unsigned __int32 wideColorEnforced : 1;
    unsigned __int32 advancedColorForceDisabled : 1;
    unsigned __int32 reserved : 28;
  };
  UINT32 value;
};

/* 4697 */
struct _DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO
{
  DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct
    {
      unsigned __int32 advancedColorSupported : 1;
      unsigned __int32 advancedColorEnabled : 1;
      unsigned __int32 wideColorEnforced : 1;
      unsigned __int32 advancedColorForceDisabled : 1;
      unsigned __int32 reserved : 28;
    };
    UINT32 value;
  };
  DISPLAYCONFIG_COLOR_ENCODING colorEncoding;
  UINT32 bitsPerColorChannel;
};

/* 4700 */
typedef _DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO;

/* 4702 */
struct _23D9D9C136A579E5510A962A603B8CB7
{
  unsigned __int32 enableAdvancedColor : 1;
  unsigned __int32 reserved : 31;
};

/* 4703 */
union _DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE___04E95D2921E0D60839C4D595B69CF99E
{
  struct
  {
    unsigned __int32 enableAdvancedColor : 1;
    unsigned __int32 reserved : 31;
  };
  UINT32 value;
};

/* 4701 */
struct _DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE
{
  DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct
    {
      unsigned __int32 enableAdvancedColor : 1;
      unsigned __int32 reserved : 31;
    };
    UINT32 value;
  };
};

/* 4704 */
typedef _DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE;

/* 4705 */
struct _DISPLAYCONFIG_SDR_WHITE_LEVEL
{
  DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  ULONG SDRWhiteLevel;
};

/* 4706 */
typedef _DISPLAYCONFIG_SDR_WHITE_LEVEL DISPLAYCONFIG_SDR_WHITE_LEVEL;

/* 4707 */
struct _RGNDATAHEADER
{
  DWORD dwSize;
  DWORD iType;
  DWORD nCount;
  DWORD nRgnSize;
  RECT rcBound;
};

/* 4708 */
typedef _RGNDATAHEADER RGNDATAHEADER;

/* 4709 */
typedef _RGNDATAHEADER *PRGNDATAHEADER;

/* 4710 */
struct _RGNDATA
{
  RGNDATAHEADER rdh;
  char Buffer[1];
};

/* 4711 */
typedef _RGNDATA RGNDATA;

/* 4712 */
typedef _RGNDATA *PRGNDATA;

/* 4713 */
typedef _RGNDATA *NPRGNDATA;

/* 4714 */
typedef _RGNDATA *LPRGNDATA;

/* 4715 */
struct _ABC
{
  int abcA;
  UINT abcB;
  int abcC;
};

/* 4716 */
typedef _ABC ABC;

/* 4717 */
typedef _ABC *PABC;

/* 4718 */
typedef _ABC *NPABC;

/* 4719 */
typedef _ABC *LPABC;

/* 4720 */
struct _ABCFLOAT
{
  FLOAT abcfA;
  FLOAT abcfB;
  FLOAT abcfC;
};

/* 4721 */
typedef _ABCFLOAT ABCFLOAT;

/* 4722 */
typedef _ABCFLOAT *PABCFLOAT;

/* 4723 */
typedef _ABCFLOAT *NPABCFLOAT;

/* 4724 */
typedef _ABCFLOAT *LPABCFLOAT;

/* 4725 */
struct _OUTLINETEXTMETRICA
{
  UINT otmSize;
  TEXTMETRICA otmTextMetrics;
  BYTE otmFiller;
  PANOSE otmPanoseNumber;
  UINT otmfsSelection;
  UINT otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  UINT otmEMSquare;
  int otmAscent;
  int otmDescent;
  UINT otmLineGap;
  UINT otmsCapEmHeight;
  UINT otmsXHeight;
  RECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  UINT otmMacLineGap;
  UINT otmusMinimumPPEM;
  POINT otmptSubscriptSize;
  POINT otmptSubscriptOffset;
  POINT otmptSuperscriptSize;
  POINT otmptSuperscriptOffset;
  UINT otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  PSTR otmpFamilyName;
  PSTR otmpFaceName;
  PSTR otmpStyleName;
  PSTR otmpFullName;
};

/* 4726 */
typedef _OUTLINETEXTMETRICA OUTLINETEXTMETRICA;

/* 4727 */
typedef _OUTLINETEXTMETRICA *POUTLINETEXTMETRICA;

/* 4728 */
typedef _OUTLINETEXTMETRICA *NPOUTLINETEXTMETRICA;

/* 4729 */
typedef _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRICA;

/* 4730 */
struct _OUTLINETEXTMETRICW
{
  UINT otmSize;
  TEXTMETRICW otmTextMetrics;
  BYTE otmFiller;
  PANOSE otmPanoseNumber;
  UINT otmfsSelection;
  UINT otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  UINT otmEMSquare;
  int otmAscent;
  int otmDescent;
  UINT otmLineGap;
  UINT otmsCapEmHeight;
  UINT otmsXHeight;
  RECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  UINT otmMacLineGap;
  UINT otmusMinimumPPEM;
  POINT otmptSubscriptSize;
  POINT otmptSubscriptOffset;
  POINT otmptSuperscriptSize;
  POINT otmptSuperscriptOffset;
  UINT otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  PSTR otmpFamilyName;
  PSTR otmpFaceName;
  PSTR otmpStyleName;
  PSTR otmpFullName;
};

/* 4731 */
typedef _OUTLINETEXTMETRICW OUTLINETEXTMETRICW;

/* 4732 */
typedef _OUTLINETEXTMETRICW *POUTLINETEXTMETRICW;

/* 4733 */
typedef _OUTLINETEXTMETRICW *NPOUTLINETEXTMETRICW;

/* 4734 */
typedef _OUTLINETEXTMETRICW *LPOUTLINETEXTMETRICW;

/* 4735 */
typedef OUTLINETEXTMETRICA OUTLINETEXTMETRIC;

/* 4736 */
typedef POUTLINETEXTMETRICA POUTLINETEXTMETRIC;

/* 4737 */
typedef NPOUTLINETEXTMETRICA NPOUTLINETEXTMETRIC;

/* 4738 */
typedef LPOUTLINETEXTMETRICA LPOUTLINETEXTMETRIC;

/* 4739 */
struct tagPOLYTEXTA
{
  int x;
  int y;
  UINT n;
  LPCSTR lpstr;
  UINT uiFlags;
  RECT rcl;
  int *pdx;
};

/* 4740 */
typedef tagPOLYTEXTA POLYTEXTA;

/* 4741 */
typedef tagPOLYTEXTA *PPOLYTEXTA;

/* 4742 */
typedef tagPOLYTEXTA *NPPOLYTEXTA;

/* 4743 */
typedef tagPOLYTEXTA *LPPOLYTEXTA;

/* 4744 */
struct tagPOLYTEXTW
{
  int x;
  int y;
  UINT n;
  LPCWSTR lpstr;
  UINT uiFlags;
  RECT rcl;
  int *pdx;
};

/* 4745 */
typedef tagPOLYTEXTW POLYTEXTW;

/* 4746 */
typedef tagPOLYTEXTW *PPOLYTEXTW;

/* 4747 */
typedef tagPOLYTEXTW *NPPOLYTEXTW;

/* 4748 */
typedef tagPOLYTEXTW *LPPOLYTEXTW;

/* 4749 */
typedef POLYTEXTA POLYTEXT;

/* 4750 */
typedef PPOLYTEXTA PPOLYTEXT;

/* 4751 */
typedef NPPOLYTEXTA NPPOLYTEXT;

/* 4752 */
typedef LPPOLYTEXTA LPPOLYTEXT;

/* 4753 */
struct _FIXED
{
  WORD fract;
  __int16 value;
};

/* 4754 */
typedef _FIXED FIXED;

/* 4755 */
struct _MAT2
{
  FIXED eM11;
  FIXED eM12;
  FIXED eM21;
  FIXED eM22;
};

/* 4756 */
typedef _MAT2 MAT2;

/* 4757 */
typedef _MAT2 *LPMAT2;

/* 4758 */
struct _GLYPHMETRICS
{
  UINT gmBlackBoxX;
  UINT gmBlackBoxY;
  POINT gmptGlyphOrigin;
  __int16 gmCellIncX;
  __int16 gmCellIncY;
};

/* 4759 */
typedef _GLYPHMETRICS GLYPHMETRICS;

/* 4760 */
typedef _GLYPHMETRICS *LPGLYPHMETRICS;

/* 4761 */
struct tagPOINTFX
{
  FIXED x;
  FIXED y;
};

/* 4762 */
typedef tagPOINTFX POINTFX;

/* 4763 */
typedef tagPOINTFX *LPPOINTFX;

/* 4764 */
struct tagTTPOLYCURVE
{
  WORD wType;
  WORD cpfx;
  POINTFX apfx[1];
};

/* 4765 */
typedef tagTTPOLYCURVE TTPOLYCURVE;

/* 4766 */
typedef tagTTPOLYCURVE *LPTTPOLYCURVE;

/* 4767 */
struct tagTTPOLYGONHEADER
{
  DWORD cb;
  DWORD dwType;
  POINTFX pfxStart;
};

/* 4768 */
typedef tagTTPOLYGONHEADER TTPOLYGONHEADER;

/* 4769 */
typedef tagTTPOLYGONHEADER *LPTTPOLYGONHEADER;

/* 4770 */
struct tagGCP_RESULTSA
{
  DWORD lStructSize;
  LPSTR lpOutString;
  UINT *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  LPSTR lpClass;
  LPWSTR lpGlyphs;
  UINT nGlyphs;
  int nMaxFit;
};

/* 4771 */
typedef tagGCP_RESULTSA GCP_RESULTSA;

/* 4772 */
typedef tagGCP_RESULTSA *LPGCP_RESULTSA;

/* 4773 */
struct tagGCP_RESULTSW
{
  DWORD lStructSize;
  LPWSTR lpOutString;
  UINT *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  LPSTR lpClass;
  LPWSTR lpGlyphs;
  UINT nGlyphs;
  int nMaxFit;
};

/* 4774 */
typedef tagGCP_RESULTSW GCP_RESULTSW;

/* 4775 */
typedef tagGCP_RESULTSW *LPGCP_RESULTSW;

/* 4776 */
typedef GCP_RESULTSA GCP_RESULTS;

/* 4777 */
typedef LPGCP_RESULTSA LPGCP_RESULTS;

/* 4778 */
struct _RASTERIZER_STATUS
{
  __int16 nSize;
  __int16 wFlags;
  __int16 nLanguageID;
};

/* 4779 */
typedef _RASTERIZER_STATUS RASTERIZER_STATUS;

/* 4780 */
typedef _RASTERIZER_STATUS *LPRASTERIZER_STATUS;

/* 4781 */
struct tagPIXELFORMATDESCRIPTOR
{
  WORD nSize;
  WORD nVersion;
  DWORD dwFlags;
  BYTE iPixelType;
  BYTE cColorBits;
  BYTE cRedBits;
  BYTE cRedShift;
  BYTE cGreenBits;
  BYTE cGreenShift;
  BYTE cBlueBits;
  BYTE cBlueShift;
  BYTE cAlphaBits;
  BYTE cAlphaShift;
  BYTE cAccumBits;
  BYTE cAccumRedBits;
  BYTE cAccumGreenBits;
  BYTE cAccumBlueBits;
  BYTE cAccumAlphaBits;
  BYTE cDepthBits;
  BYTE cStencilBits;
  BYTE cAuxBuffers;
  BYTE iLayerType;
  BYTE bReserved;
  DWORD dwLayerMask;
  DWORD dwVisibleMask;
  DWORD dwDamageMask;
};

/* 4782 */
typedef tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR;

/* 4783 */
typedef tagPIXELFORMATDESCRIPTOR *PPIXELFORMATDESCRIPTOR;

/* 4784 */
typedef tagPIXELFORMATDESCRIPTOR *LPPIXELFORMATDESCRIPTOR;

/* 4785 */
typedef int (__cdecl *OLDFONTENUMPROCA)(const LOGFONTA *, const TEXTMETRICA *, DWORD, LPARAM);

/* 4786 */
typedef int (__cdecl *OLDFONTENUMPROCW)(const LOGFONTW *, const TEXTMETRICW *, DWORD, LPARAM);

/* 4787 */
typedef OLDFONTENUMPROCA FONTENUMPROCA;

/* 4788 */
typedef OLDFONTENUMPROCW FONTENUMPROCW;

/* 4789 */
typedef FONTENUMPROCA FONTENUMPROC;

/* 4790 */
typedef int (__cdecl *GOBJENUMPROC)(LPVOID, LPARAM);

/* 4791 */
typedef void (__cdecl *LINEDDAPROC)(int, int, LPARAM);

/* 4792 */
typedef UINT (__cdecl *LPFNDEVMODE)(HWND, HMODULE, LPDEVMODE, LPSTR, LPSTR, LPDEVMODE, LPSTR, UINT);

/* 4793 */
typedef DWORD (__cdecl *LPFNDEVCAPS)(LPSTR, LPSTR, UINT, LPSTR, LPDEVMODE);

/* 4794 */
struct tagWCRANGE
{
  WCHAR wcLow;
  USHORT cGlyphs;
};

/* 4795 */
typedef tagWCRANGE WCRANGE;

/* 4796 */
typedef tagWCRANGE *PWCRANGE;

/* 4797 */
typedef tagWCRANGE *LPWCRANGE;

/* 4798 */
struct tagGLYPHSET
{
  DWORD cbThis;
  DWORD flAccel;
  DWORD cGlyphsSupported;
  DWORD cRanges;
  WCRANGE ranges[1];
};

/* 4799 */
typedef tagGLYPHSET GLYPHSET;

/* 4800 */
typedef tagGLYPHSET *PGLYPHSET;

/* 4801 */
typedef tagGLYPHSET *LPGLYPHSET;

/* 4802 */
struct tagDESIGNVECTOR
{
  DWORD dvReserved;
  DWORD dvNumAxes;
  LONG dvValues[16];
};

/* 4803 */
typedef tagDESIGNVECTOR DESIGNVECTOR;

/* 4804 */
typedef tagDESIGNVECTOR *PDESIGNVECTOR;

/* 4805 */
typedef tagDESIGNVECTOR *LPDESIGNVECTOR;

/* 4806 */
struct tagAXISINFOA
{
  LONG axMinValue;
  LONG axMaxValue;
  BYTE axAxisName[16];
};

/* 4807 */
typedef tagAXISINFOA AXISINFOA;

/* 4808 */
typedef tagAXISINFOA *PAXISINFOA;

/* 4809 */
typedef tagAXISINFOA *LPAXISINFOA;

/* 4810 */
struct tagAXISINFOW
{
  LONG axMinValue;
  LONG axMaxValue;
  WCHAR axAxisName[16];
};

/* 4811 */
typedef tagAXISINFOW AXISINFOW;

/* 4812 */
typedef tagAXISINFOW *PAXISINFOW;

/* 4813 */
typedef tagAXISINFOW *LPAXISINFOW;

/* 4814 */
typedef AXISINFOA AXISINFO;

/* 4815 */
typedef PAXISINFOA PAXISINFO;

/* 4816 */
typedef LPAXISINFOA LPAXISINFO;

/* 4817 */
struct tagAXESLISTA
{
  DWORD axlReserved;
  DWORD axlNumAxes;
  AXISINFOA axlAxisInfo[16];
};

/* 4818 */
typedef tagAXESLISTA AXESLISTA;

/* 4819 */
typedef tagAXESLISTA *PAXESLISTA;

/* 4820 */
typedef tagAXESLISTA *LPAXESLISTA;

/* 4821 */
struct tagAXESLISTW
{
  DWORD axlReserved;
  DWORD axlNumAxes;
  AXISINFOW axlAxisInfo[16];
};

/* 4822 */
typedef tagAXESLISTW AXESLISTW;

/* 4823 */
typedef tagAXESLISTW *PAXESLISTW;

/* 4824 */
typedef tagAXESLISTW *LPAXESLISTW;

/* 4825 */
typedef AXESLISTA AXESLIST;

/* 4826 */
typedef PAXESLISTA PAXESLIST;

/* 4827 */
typedef LPAXESLISTA LPAXESLIST;

/* 4828 */
struct tagENUMLOGFONTEXDVA
{
  ENUMLOGFONTEXA elfEnumLogfontEx;
  DESIGNVECTOR elfDesignVector;
};

/* 4829 */
typedef tagENUMLOGFONTEXDVA ENUMLOGFONTEXDVA;

/* 4830 */
typedef tagENUMLOGFONTEXDVA *PENUMLOGFONTEXDVA;

/* 4831 */
typedef tagENUMLOGFONTEXDVA *LPENUMLOGFONTEXDVA;

/* 4832 */
struct tagENUMLOGFONTEXDVW
{
  ENUMLOGFONTEXW elfEnumLogfontEx;
  DESIGNVECTOR elfDesignVector;
};

/* 4833 */
typedef tagENUMLOGFONTEXDVW ENUMLOGFONTEXDVW;

/* 4834 */
typedef tagENUMLOGFONTEXDVW *PENUMLOGFONTEXDVW;

/* 4835 */
typedef tagENUMLOGFONTEXDVW *LPENUMLOGFONTEXDVW;

/* 4836 */
typedef ENUMLOGFONTEXDVA ENUMLOGFONTEXDV;

/* 4837 */
typedef PENUMLOGFONTEXDVA PENUMLOGFONTEXDV;

/* 4838 */
typedef LPENUMLOGFONTEXDVA LPENUMLOGFONTEXDV;

/* 4839 */
struct tagENUMTEXTMETRICA
{
  NEWTEXTMETRICEXA etmNewTextMetricEx;
  AXESLISTA etmAxesList;
};

/* 4840 */
typedef tagENUMTEXTMETRICA ENUMTEXTMETRICA;

/* 4841 */
typedef tagENUMTEXTMETRICA *PENUMTEXTMETRICA;

/* 4842 */
typedef tagENUMTEXTMETRICA *LPENUMTEXTMETRICA;

/* 4843 */
struct tagENUMTEXTMETRICW
{
  NEWTEXTMETRICEXW etmNewTextMetricEx;
  AXESLISTW etmAxesList;
};

/* 4844 */
typedef tagENUMTEXTMETRICW ENUMTEXTMETRICW;

/* 4845 */
typedef tagENUMTEXTMETRICW *PENUMTEXTMETRICW;

/* 4846 */
typedef tagENUMTEXTMETRICW *LPENUMTEXTMETRICW;

/* 4847 */
typedef ENUMTEXTMETRICA ENUMTEXTMETRIC;

/* 4848 */
typedef PENUMTEXTMETRICA PENUMTEXTMETRIC;

/* 4849 */
typedef LPENUMTEXTMETRICA LPENUMTEXTMETRIC;

/* 4850 */
typedef USHORT COLOR16;

/* 4851 */
struct _TRIVERTEX
{
  LONG x;
  LONG y;
  COLOR16 Red;
  COLOR16 Green;
  COLOR16 Blue;
  COLOR16 Alpha;
};

/* 4852 */
typedef _TRIVERTEX TRIVERTEX;

/* 4853 */
typedef _TRIVERTEX *PTRIVERTEX;

/* 4854 */
typedef _TRIVERTEX *LPTRIVERTEX;

/* 4855 */
struct _GRADIENT_TRIANGLE
{
  ULONG Vertex1;
  ULONG Vertex2;
  ULONG Vertex3;
};

/* 4856 */
typedef _GRADIENT_TRIANGLE GRADIENT_TRIANGLE;

/* 4857 */
typedef _GRADIENT_TRIANGLE *PGRADIENT_TRIANGLE;

/* 4858 */
typedef _GRADIENT_TRIANGLE *LPGRADIENT_TRIANGLE;

/* 4859 */
struct _GRADIENT_RECT
{
  ULONG UpperLeft;
  ULONG LowerRight;
};

/* 4860 */
typedef _GRADIENT_RECT GRADIENT_RECT;

/* 4861 */
typedef _GRADIENT_RECT *PGRADIENT_RECT;

/* 4862 */
typedef _GRADIENT_RECT *LPGRADIENT_RECT;

/* 4863 */
struct _BLENDFUNCTION
{
  BYTE BlendOp;
  BYTE BlendFlags;
  BYTE SourceConstantAlpha;
  BYTE AlphaFormat;
};

/* 4864 */
typedef _BLENDFUNCTION BLENDFUNCTION;

/* 4865 */
typedef _BLENDFUNCTION *PBLENDFUNCTION;

/* 4866 */
typedef int (__cdecl *MFENUMPROC)(HDC, HANDLETABLE *, METARECORD *, int, LPARAM);

/* 4867 */
typedef int (__cdecl *ENHMFENUMPROC)(HDC, HANDLETABLE *, const ENHMETARECORD *, int, LPARAM);

/* 4868 */
struct tagDIBSECTION
{
  BITMAP dsBm;
  BITMAPINFOHEADER dsBmih;
  DWORD dsBitfields[3];
  HANDLE dshSection;
  DWORD dsOffset;
};

/* 4869 */
typedef tagDIBSECTION DIBSECTION;

/* 4870 */
typedef tagDIBSECTION *LPDIBSECTION;

/* 4871 */
typedef tagDIBSECTION *PDIBSECTION;

/* 4872 */
struct tagCOLORADJUSTMENT
{
  WORD caSize;
  WORD caFlags;
  WORD caIlluminantIndex;
  WORD caRedGamma;
  WORD caGreenGamma;
  WORD caBlueGamma;
  WORD caReferenceBlack;
  WORD caReferenceWhite;
  SHORT caContrast;
  SHORT caBrightness;
  SHORT caColorfulness;
  SHORT caRedGreenTint;
};

/* 4873 */
typedef tagCOLORADJUSTMENT COLORADJUSTMENT;

/* 4874 */
typedef tagCOLORADJUSTMENT *PCOLORADJUSTMENT;

/* 4875 */
typedef tagCOLORADJUSTMENT *LPCOLORADJUSTMENT;

/* 4876 */
typedef BOOL (__cdecl *ABORTPROC)(HDC, int);

/* 4877 */
struct _DOCINFOA
{
  int cbSize;
  LPCSTR lpszDocName;
  LPCSTR lpszOutput;
  LPCSTR lpszDatatype;
  DWORD fwType;
};

/* 4878 */
typedef _DOCINFOA DOCINFOA;

/* 4879 */
typedef _DOCINFOA *LPDOCINFOA;

/* 4880 */
struct _DOCINFOW
{
  int cbSize;
  LPCWSTR lpszDocName;
  LPCWSTR lpszOutput;
  LPCWSTR lpszDatatype;
  DWORD fwType;
};

/* 4881 */
typedef _DOCINFOW DOCINFOW;

/* 4882 */
typedef _DOCINFOW *LPDOCINFOW;

/* 4883 */
typedef DOCINFOA DOCINFO;

/* 4884 */
typedef LPDOCINFOA LPDOCINFO;

/* 4885 */
struct tagKERNINGPAIR
{
  WORD wFirst;
  WORD wSecond;
  int iKernAmount;
};

/* 4886 */
typedef tagKERNINGPAIR KERNINGPAIR;

/* 4887 */
typedef tagKERNINGPAIR *LPKERNINGPAIR;

/* 4888 */
typedef int (__cdecl *ICMENUMPROCA)(LPSTR, LPARAM);

/* 4889 */
typedef int (__cdecl *ICMENUMPROCW)(LPWSTR, LPARAM);

/* 4890 */
struct tagEMR
{
  DWORD iType;
  DWORD nSize;
};

/* 4891 */
typedef tagEMR EMR;

/* 4892 */
typedef tagEMR *PEMR;

/* 4893 */
struct tagEMRTEXT
{
  POINTL ptlReference;
  DWORD nChars;
  DWORD offString;
  DWORD fOptions;
  RECTL rcl;
  DWORD offDx;
};

/* 4894 */
typedef tagEMRTEXT EMRTEXT;

/* 4895 */
typedef tagEMRTEXT *PEMRTEXT;

/* 4896 */
struct tagABORTPATH
{
  EMR emr;
};

/* 4897 */
typedef tagABORTPATH EMRABORTPATH;

/* 4898 */
typedef tagABORTPATH *PEMRABORTPATH;

/* 4899 */
typedef tagABORTPATH EMRBEGINPATH;

/* 4900 */
typedef tagABORTPATH *PEMRBEGINPATH;

/* 4901 */
typedef tagABORTPATH EMRENDPATH;

/* 4902 */
typedef tagABORTPATH *PEMRENDPATH;

/* 4903 */
typedef tagABORTPATH EMRCLOSEFIGURE;

/* 4904 */
typedef tagABORTPATH *PEMRCLOSEFIGURE;

/* 4905 */
typedef tagABORTPATH EMRFLATTENPATH;

/* 4906 */
typedef tagABORTPATH *PEMRFLATTENPATH;

/* 4907 */
typedef tagABORTPATH EMRWIDENPATH;

/* 4908 */
typedef tagABORTPATH *PEMRWIDENPATH;

/* 4909 */
typedef tagABORTPATH EMRSETMETARGN;

/* 4910 */
typedef tagABORTPATH *PEMRSETMETARGN;

/* 4911 */
typedef tagABORTPATH EMRSAVEDC;

/* 4912 */
typedef tagABORTPATH *PEMRSAVEDC;

/* 4913 */
typedef tagABORTPATH EMRREALIZEPALETTE;

/* 4914 */
typedef tagABORTPATH *PEMRREALIZEPALETTE;

/* 4915 */
struct tagEMRSELECTCLIPPATH
{
  EMR emr;
  DWORD iMode;
};

/* 4916 */
typedef tagEMRSELECTCLIPPATH EMRSELECTCLIPPATH;

/* 4917 */
typedef tagEMRSELECTCLIPPATH *PEMRSELECTCLIPPATH;

/* 4918 */
typedef tagEMRSELECTCLIPPATH EMRSETBKMODE;

/* 4919 */
typedef tagEMRSELECTCLIPPATH *PEMRSETBKMODE;

/* 4920 */
typedef tagEMRSELECTCLIPPATH EMRSETMAPMODE;

/* 4921 */
typedef tagEMRSELECTCLIPPATH *PEMRSETMAPMODE;

/* 4922 */
typedef tagEMRSELECTCLIPPATH EMRSETLAYOUT;

/* 4923 */
typedef tagEMRSELECTCLIPPATH *PEMRSETLAYOUT;

/* 4924 */
typedef tagEMRSELECTCLIPPATH EMRSETPOLYFILLMODE;

/* 4925 */
typedef tagEMRSELECTCLIPPATH *PEMRSETPOLYFILLMODE;

/* 4926 */
typedef tagEMRSELECTCLIPPATH EMRSETROP2;

/* 4927 */
typedef tagEMRSELECTCLIPPATH *PEMRSETROP2;

/* 4928 */
typedef tagEMRSELECTCLIPPATH EMRSETSTRETCHBLTMODE;

/* 4929 */
typedef tagEMRSELECTCLIPPATH *PEMRSETSTRETCHBLTMODE;

/* 4930 */
typedef tagEMRSELECTCLIPPATH EMRSETICMMODE;

/* 4931 */
typedef tagEMRSELECTCLIPPATH *PEMRSETICMMODE;

/* 4932 */
typedef tagEMRSELECTCLIPPATH EMRSETTEXTALIGN;

/* 4933 */
typedef tagEMRSELECTCLIPPATH *PEMRSETTEXTALIGN;

/* 4934 */
struct tagEMRSETMITERLIMIT
{
  EMR emr;
  FLOAT eMiterLimit;
};

/* 4935 */
typedef tagEMRSETMITERLIMIT EMRSETMITERLIMIT;

/* 4936 */
typedef tagEMRSETMITERLIMIT *PEMRSETMITERLIMIT;

/* 4937 */
struct tagEMRRESTOREDC
{
  EMR emr;
  LONG iRelative;
};

/* 4938 */
typedef tagEMRRESTOREDC EMRRESTOREDC;

/* 4939 */
typedef tagEMRRESTOREDC *PEMRRESTOREDC;

/* 4940 */
struct tagEMRSETARCDIRECTION
{
  EMR emr;
  DWORD iArcDirection;
};

/* 4941 */
typedef tagEMRSETARCDIRECTION EMRSETARCDIRECTION;

/* 4942 */
typedef tagEMRSETARCDIRECTION *PEMRSETARCDIRECTION;

/* 4943 */
struct tagEMRSETMAPPERFLAGS
{
  EMR emr;
  DWORD dwFlags;
};

/* 4944 */
typedef tagEMRSETMAPPERFLAGS EMRSETMAPPERFLAGS;

/* 4945 */
typedef tagEMRSETMAPPERFLAGS *PEMRSETMAPPERFLAGS;

/* 4946 */
struct tagEMRSETTEXTCOLOR
{
  EMR emr;
  COLORREF crColor;
};

/* 4947 */
typedef tagEMRSETTEXTCOLOR EMRSETBKCOLOR;

/* 4948 */
typedef tagEMRSETTEXTCOLOR *PEMRSETBKCOLOR;

/* 4949 */
typedef tagEMRSETTEXTCOLOR EMRSETTEXTCOLOR;

/* 4950 */
typedef tagEMRSETTEXTCOLOR *PEMRSETTEXTCOLOR;

/* 4951 */
struct tagEMRSELECTOBJECT
{
  EMR emr;
  DWORD ihObject;
};

/* 4952 */
typedef tagEMRSELECTOBJECT EMRSELECTOBJECT;

/* 4953 */
typedef tagEMRSELECTOBJECT *PEMRSELECTOBJECT;

/* 4954 */
typedef tagEMRSELECTOBJECT EMRDELETEOBJECT;

/* 4955 */
typedef tagEMRSELECTOBJECT *PEMRDELETEOBJECT;

/* 4956 */
struct tagEMRSELECTPALETTE
{
  EMR emr;
  DWORD ihPal;
};

/* 4957 */
typedef tagEMRSELECTPALETTE EMRSELECTPALETTE;

/* 4958 */
typedef tagEMRSELECTPALETTE *PEMRSELECTPALETTE;

/* 4959 */
struct tagEMRRESIZEPALETTE
{
  EMR emr;
  DWORD ihPal;
  DWORD cEntries;
};

/* 4960 */
typedef tagEMRRESIZEPALETTE EMRRESIZEPALETTE;

/* 4961 */
typedef tagEMRRESIZEPALETTE *PEMRRESIZEPALETTE;

/* 4962 */
struct tagEMRSETPALETTEENTRIES
{
  EMR emr;
  DWORD ihPal;
  DWORD iStart;
  DWORD cEntries;
  PALETTEENTRY aPalEntries[1];
};

/* 4963 */
typedef tagEMRSETPALETTEENTRIES EMRSETPALETTEENTRIES;

/* 4964 */
typedef tagEMRSETPALETTEENTRIES *PEMRSETPALETTEENTRIES;

/* 4965 */
struct tagEMRSETCOLORADJUSTMENT
{
  EMR emr;
  COLORADJUSTMENT ColorAdjustment;
};

/* 4966 */
typedef tagEMRSETCOLORADJUSTMENT EMRSETCOLORADJUSTMENT;

/* 4967 */
typedef tagEMRSETCOLORADJUSTMENT *PEMRSETCOLORADJUSTMENT;

/* 4968 */
struct tagEMRGDICOMMENT
{
  EMR emr;
  DWORD cbData;
  BYTE Data[1];
};

/* 4969 */
typedef tagEMRGDICOMMENT EMRGDICOMMENT;

/* 4970 */
typedef tagEMRGDICOMMENT *PEMRGDICOMMENT;

/* 4971 */
struct tagEMREOF
{
  EMR emr;
  DWORD nPalEntries;
  DWORD offPalEntries;
  DWORD nSizeLast;
};

/* 4972 */
typedef tagEMREOF EMREOF;

/* 4973 */
typedef tagEMREOF *PEMREOF;

/* 4974 */
struct tagEMRLINETO
{
  EMR emr;
  POINTL ptl;
};

/* 4975 */
typedef tagEMRLINETO EMRLINETO;

/* 4976 */
typedef tagEMRLINETO *PEMRLINETO;

/* 4977 */
typedef tagEMRLINETO EMRMOVETOEX;

/* 4978 */
typedef tagEMRLINETO *PEMRMOVETOEX;

/* 4979 */
struct tagEMROFFSETCLIPRGN
{
  EMR emr;
  POINTL ptlOffset;
};

/* 4980 */
typedef tagEMROFFSETCLIPRGN EMROFFSETCLIPRGN;

/* 4981 */
typedef tagEMROFFSETCLIPRGN *PEMROFFSETCLIPRGN;

/* 4982 */
struct tagEMRFILLPATH
{
  EMR emr;
  RECTL rclBounds;
};

/* 4983 */
typedef tagEMRFILLPATH EMRFILLPATH;

/* 4984 */
typedef tagEMRFILLPATH *PEMRFILLPATH;

/* 4985 */
typedef tagEMRFILLPATH EMRSTROKEANDFILLPATH;

/* 4986 */
typedef tagEMRFILLPATH *PEMRSTROKEANDFILLPATH;

/* 4987 */
typedef tagEMRFILLPATH EMRSTROKEPATH;

/* 4988 */
typedef tagEMRFILLPATH *PEMRSTROKEPATH;

/* 4989 */
struct tagEMREXCLUDECLIPRECT
{
  EMR emr;
  RECTL rclClip;
};

/* 4990 */
typedef tagEMREXCLUDECLIPRECT EMREXCLUDECLIPRECT;

/* 4991 */
typedef tagEMREXCLUDECLIPRECT *PEMREXCLUDECLIPRECT;

/* 4992 */
typedef tagEMREXCLUDECLIPRECT EMRINTERSECTCLIPRECT;

/* 4993 */
typedef tagEMREXCLUDECLIPRECT *PEMRINTERSECTCLIPRECT;

/* 4994 */
struct tagEMRSETVIEWPORTORGEX
{
  EMR emr;
  POINTL ptlOrigin;
};

/* 4995 */
typedef tagEMRSETVIEWPORTORGEX EMRSETVIEWPORTORGEX;

/* 4996 */
typedef tagEMRSETVIEWPORTORGEX *PEMRSETVIEWPORTORGEX;

/* 4997 */
typedef tagEMRSETVIEWPORTORGEX EMRSETWINDOWORGEX;

/* 4998 */
typedef tagEMRSETVIEWPORTORGEX *PEMRSETWINDOWORGEX;

/* 4999 */
typedef tagEMRSETVIEWPORTORGEX EMRSETBRUSHORGEX;

/* 5000 */
typedef tagEMRSETVIEWPORTORGEX *PEMRSETBRUSHORGEX;

/* 5001 */
struct tagEMRSETVIEWPORTEXTEX
{
  EMR emr;
  SIZEL szlExtent;
};

/* 5002 */
typedef tagEMRSETVIEWPORTEXTEX EMRSETVIEWPORTEXTEX;

/* 5003 */
typedef tagEMRSETVIEWPORTEXTEX *PEMRSETVIEWPORTEXTEX;

/* 5004 */
typedef tagEMRSETVIEWPORTEXTEX EMRSETWINDOWEXTEX;

/* 5005 */
typedef tagEMRSETVIEWPORTEXTEX *PEMRSETWINDOWEXTEX;

/* 5006 */
struct tagEMRSCALEVIEWPORTEXTEX
{
  EMR emr;
  LONG xNum;
  LONG xDenom;
  LONG yNum;
  LONG yDenom;
};

/* 5007 */
typedef tagEMRSCALEVIEWPORTEXTEX EMRSCALEVIEWPORTEXTEX;

/* 5008 */
typedef tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEVIEWPORTEXTEX;

/* 5009 */
typedef tagEMRSCALEVIEWPORTEXTEX EMRSCALEWINDOWEXTEX;

/* 5010 */
typedef tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEWINDOWEXTEX;

/* 5011 */
struct tagEMRSETWORLDTRANSFORM
{
  EMR emr;
  XFORM xform;
};

/* 5012 */
typedef tagEMRSETWORLDTRANSFORM EMRSETWORLDTRANSFORM;

/* 5013 */
typedef tagEMRSETWORLDTRANSFORM *PEMRSETWORLDTRANSFORM;

/* 5014 */
struct tagEMRMODIFYWORLDTRANSFORM
{
  EMR emr;
  XFORM xform;
  DWORD iMode;
};

/* 5015 */
typedef tagEMRMODIFYWORLDTRANSFORM EMRMODIFYWORLDTRANSFORM;

/* 5016 */
typedef tagEMRMODIFYWORLDTRANSFORM *PEMRMODIFYWORLDTRANSFORM;

/* 5017 */
struct tagEMRSETPIXELV
{
  EMR emr;
  POINTL ptlPixel;
  COLORREF crColor;
};

/* 5018 */
typedef tagEMRSETPIXELV EMRSETPIXELV;

/* 5019 */
typedef tagEMRSETPIXELV *PEMRSETPIXELV;

/* 5020 */
struct tagEMREXTFLOODFILL
{
  EMR emr;
  POINTL ptlStart;
  COLORREF crColor;
  DWORD iMode;
};

/* 5021 */
typedef tagEMREXTFLOODFILL EMREXTFLOODFILL;

/* 5022 */
typedef tagEMREXTFLOODFILL *PEMREXTFLOODFILL;

/* 5023 */
struct tagEMRELLIPSE
{
  EMR emr;
  RECTL rclBox;
};

/* 5024 */
typedef tagEMRELLIPSE EMRELLIPSE;

/* 5025 */
typedef tagEMRELLIPSE *PEMRELLIPSE;

/* 5026 */
typedef tagEMRELLIPSE EMRRECTANGLE;

/* 5027 */
typedef tagEMRELLIPSE *PEMRRECTANGLE;

/* 5028 */
struct tagEMRROUNDRECT
{
  EMR emr;
  RECTL rclBox;
  SIZEL szlCorner;
};

/* 5029 */
typedef tagEMRROUNDRECT EMRROUNDRECT;

/* 5030 */
typedef tagEMRROUNDRECT *PEMRROUNDRECT;

/* 5031 */
struct tagEMRARC
{
  EMR emr;
  RECTL rclBox;
  POINTL ptlStart;
  POINTL ptlEnd;
};

/* 5032 */
typedef tagEMRARC EMRARC;

/* 5033 */
typedef tagEMRARC *PEMRARC;

/* 5034 */
typedef tagEMRARC EMRARCTO;

/* 5035 */
typedef tagEMRARC *PEMRARCTO;

/* 5036 */
typedef tagEMRARC EMRCHORD;

/* 5037 */
typedef tagEMRARC *PEMRCHORD;

/* 5038 */
typedef tagEMRARC EMRPIE;

/* 5039 */
typedef tagEMRARC *PEMRPIE;

/* 5040 */
struct tagEMRANGLEARC
{
  EMR emr;
  POINTL ptlCenter;
  DWORD nRadius;
  FLOAT eStartAngle;
  FLOAT eSweepAngle;
};

/* 5041 */
typedef tagEMRANGLEARC EMRANGLEARC;

/* 5042 */
typedef tagEMRANGLEARC *PEMRANGLEARC;

/* 5043 */
struct tagEMRPOLYLINE
{
  EMR emr;
  RECTL rclBounds;
  DWORD cptl;
  POINTL aptl[1];
};

/* 5044 */
typedef tagEMRPOLYLINE EMRPOLYLINE;

/* 5045 */
typedef tagEMRPOLYLINE *PEMRPOLYLINE;

/* 5046 */
typedef tagEMRPOLYLINE EMRPOLYBEZIER;

/* 5047 */
typedef tagEMRPOLYLINE *PEMRPOLYBEZIER;

/* 5048 */
typedef tagEMRPOLYLINE EMRPOLYGON;

/* 5049 */
typedef tagEMRPOLYLINE *PEMRPOLYGON;

/* 5050 */
typedef tagEMRPOLYLINE EMRPOLYBEZIERTO;

/* 5051 */
typedef tagEMRPOLYLINE *PEMRPOLYBEZIERTO;

/* 5052 */
typedef tagEMRPOLYLINE EMRPOLYLINETO;

/* 5053 */
typedef tagEMRPOLYLINE *PEMRPOLYLINETO;

/* 5054 */
struct tagEMRPOLYLINE16
{
  EMR emr;
  RECTL rclBounds;
  DWORD cpts;
  POINTS apts[1];
};

/* 5055 */
typedef tagEMRPOLYLINE16 EMRPOLYLINE16;

/* 5056 */
typedef tagEMRPOLYLINE16 *PEMRPOLYLINE16;

/* 5057 */
typedef tagEMRPOLYLINE16 EMRPOLYBEZIER16;

/* 5058 */
typedef tagEMRPOLYLINE16 *PEMRPOLYBEZIER16;

/* 5059 */
typedef tagEMRPOLYLINE16 EMRPOLYGON16;

/* 5060 */
typedef tagEMRPOLYLINE16 *PEMRPOLYGON16;

/* 5061 */
typedef tagEMRPOLYLINE16 EMRPOLYBEZIERTO16;

/* 5062 */
typedef tagEMRPOLYLINE16 *PEMRPOLYBEZIERTO16;

/* 5063 */
typedef tagEMRPOLYLINE16 EMRPOLYLINETO16;

/* 5064 */
typedef tagEMRPOLYLINE16 *PEMRPOLYLINETO16;

/* 5065 */
struct tagEMRPOLYDRAW
{
  EMR emr;
  RECTL rclBounds;
  DWORD cptl;
  POINTL aptl[1];
  BYTE abTypes[1];
};

/* 5066 */
typedef tagEMRPOLYDRAW EMRPOLYDRAW;

/* 5067 */
typedef tagEMRPOLYDRAW *PEMRPOLYDRAW;

/* 5068 */
struct tagEMRPOLYDRAW16
{
  EMR emr;
  RECTL rclBounds;
  DWORD cpts;
  POINTS apts[1];
  BYTE abTypes[1];
};

/* 5069 */
typedef tagEMRPOLYDRAW16 EMRPOLYDRAW16;

/* 5070 */
typedef tagEMRPOLYDRAW16 *PEMRPOLYDRAW16;

/* 5071 */
struct tagEMRPOLYPOLYLINE
{
  EMR emr;
  RECTL rclBounds;
  DWORD nPolys;
  DWORD cptl;
  DWORD aPolyCounts[1];
  POINTL aptl[1];
};

/* 5072 */
typedef tagEMRPOLYPOLYLINE EMRPOLYPOLYLINE;

/* 5073 */
typedef tagEMRPOLYPOLYLINE *PEMRPOLYPOLYLINE;

/* 5074 */
typedef tagEMRPOLYPOLYLINE EMRPOLYPOLYGON;

/* 5075 */
typedef tagEMRPOLYPOLYLINE *PEMRPOLYPOLYGON;

/* 5076 */
struct tagEMRPOLYPOLYLINE16
{
  EMR emr;
  RECTL rclBounds;
  DWORD nPolys;
  DWORD cpts;
  DWORD aPolyCounts[1];
  POINTS apts[1];
};

/* 5077 */
typedef tagEMRPOLYPOLYLINE16 EMRPOLYPOLYLINE16;

/* 5078 */
typedef tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYLINE16;

/* 5079 */
typedef tagEMRPOLYPOLYLINE16 EMRPOLYPOLYGON16;

/* 5080 */
typedef tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYGON16;

/* 5081 */
struct tagEMRINVERTRGN
{
  EMR emr;
  RECTL rclBounds;
  DWORD cbRgnData;
  BYTE RgnData[1];
};

/* 5082 */
typedef tagEMRINVERTRGN EMRINVERTRGN;

/* 5083 */
typedef tagEMRINVERTRGN *PEMRINVERTRGN;

/* 5084 */
typedef tagEMRINVERTRGN EMRPAINTRGN;

/* 5085 */
typedef tagEMRINVERTRGN *PEMRPAINTRGN;

/* 5086 */
struct tagEMRFILLRGN
{
  EMR emr;
  RECTL rclBounds;
  DWORD cbRgnData;
  DWORD ihBrush;
  BYTE RgnData[1];
};

/* 5087 */
typedef tagEMRFILLRGN EMRFILLRGN;

/* 5088 */
typedef tagEMRFILLRGN *PEMRFILLRGN;

/* 5089 */
struct tagEMRFRAMERGN
{
  EMR emr;
  RECTL rclBounds;
  DWORD cbRgnData;
  DWORD ihBrush;
  SIZEL szlStroke;
  BYTE RgnData[1];
};

/* 5090 */
typedef tagEMRFRAMERGN EMRFRAMERGN;

/* 5091 */
typedef tagEMRFRAMERGN *PEMRFRAMERGN;

/* 5092 */
struct tagEMREXTSELECTCLIPRGN
{
  EMR emr;
  DWORD cbRgnData;
  DWORD iMode;
  BYTE RgnData[1];
};

/* 5093 */
typedef tagEMREXTSELECTCLIPRGN EMREXTSELECTCLIPRGN;

/* 5094 */
typedef tagEMREXTSELECTCLIPRGN *PEMREXTSELECTCLIPRGN;

/* 5095 */
struct tagEMREXTTEXTOUTA
{
  EMR emr;
  RECTL rclBounds;
  DWORD iGraphicsMode;
  FLOAT exScale;
  FLOAT eyScale;
  EMRTEXT emrtext;
};

/* 5096 */
typedef tagEMREXTTEXTOUTA EMREXTTEXTOUTA;

/* 5097 */
typedef tagEMREXTTEXTOUTA *PEMREXTTEXTOUTA;

/* 5098 */
typedef tagEMREXTTEXTOUTA EMREXTTEXTOUTW;

/* 5099 */
typedef tagEMREXTTEXTOUTA *PEMREXTTEXTOUTW;

/* 5100 */
struct tagEMRPOLYTEXTOUTA
{
  EMR emr;
  RECTL rclBounds;
  DWORD iGraphicsMode;
  FLOAT exScale;
  FLOAT eyScale;
  LONG cStrings;
  EMRTEXT aemrtext[1];
};

/* 5101 */
typedef tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTA;

/* 5102 */
typedef tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTA;

/* 5103 */
typedef tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTW;

/* 5104 */
typedef tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTW;

/* 5105 */
struct tagEMRBITBLT
{
  EMR emr;
  RECTL rclBounds;
  LONG xDest;
  LONG yDest;
  LONG cxDest;
  LONG cyDest;
  DWORD dwRop;
  LONG xSrc;
  LONG ySrc;
  XFORM xformSrc;
  COLORREF crBkColorSrc;
  DWORD iUsageSrc;
  DWORD offBmiSrc;
  DWORD cbBmiSrc;
  DWORD offBitsSrc;
  DWORD cbBitsSrc;
};

/* 5106 */
typedef tagEMRBITBLT EMRBITBLT;

/* 5107 */
typedef tagEMRBITBLT *PEMRBITBLT;

/* 5108 */
struct tagEMRSTRETCHBLT
{
  EMR emr;
  RECTL rclBounds;
  LONG xDest;
  LONG yDest;
  LONG cxDest;
  LONG cyDest;
  DWORD dwRop;
  LONG xSrc;
  LONG ySrc;
  XFORM xformSrc;
  COLORREF crBkColorSrc;
  DWORD iUsageSrc;
  DWORD offBmiSrc;
  DWORD cbBmiSrc;
  DWORD offBitsSrc;
  DWORD cbBitsSrc;
  LONG cxSrc;
  LONG cySrc;
};

/* 5109 */
typedef tagEMRSTRETCHBLT EMRSTRETCHBLT;

/* 5110 */
typedef tagEMRSTRETCHBLT *PEMRSTRETCHBLT;

/* 5111 */
struct tagEMRMASKBLT
{
  EMR emr;
  RECTL rclBounds;
  LONG xDest;
  LONG yDest;
  LONG cxDest;
  LONG cyDest;
  DWORD dwRop;
  LONG xSrc;
  LONG ySrc;
  XFORM xformSrc;
  COLORREF crBkColorSrc;
  DWORD iUsageSrc;
  DWORD offBmiSrc;
  DWORD cbBmiSrc;
  DWORD offBitsSrc;
  DWORD cbBitsSrc;
  LONG xMask;
  LONG yMask;
  DWORD iUsageMask;
  DWORD offBmiMask;
  DWORD cbBmiMask;
  DWORD offBitsMask;
  DWORD cbBitsMask;
};

/* 5112 */
typedef tagEMRMASKBLT EMRMASKBLT;

/* 5113 */
typedef tagEMRMASKBLT *PEMRMASKBLT;

/* 5114 */
struct tagEMRPLGBLT
{
  EMR emr;
  RECTL rclBounds;
  POINTL aptlDest[3];
  LONG xSrc;
  LONG ySrc;
  LONG cxSrc;
  LONG cySrc;
  XFORM xformSrc;
  COLORREF crBkColorSrc;
  DWORD iUsageSrc;
  DWORD offBmiSrc;
  DWORD cbBmiSrc;
  DWORD offBitsSrc;
  DWORD cbBitsSrc;
  LONG xMask;
  LONG yMask;
  DWORD iUsageMask;
  DWORD offBmiMask;
  DWORD cbBmiMask;
  DWORD offBitsMask;
  DWORD cbBitsMask;
};

/* 5115 */
typedef tagEMRPLGBLT EMRPLGBLT;

/* 5116 */
typedef tagEMRPLGBLT *PEMRPLGBLT;

/* 5117 */
struct tagEMRSETDIBITSTODEVICE
{
  EMR emr;
  RECTL rclBounds;
  LONG xDest;
  LONG yDest;
  LONG xSrc;
  LONG ySrc;
  LONG cxSrc;
  LONG cySrc;
  DWORD offBmiSrc;
  DWORD cbBmiSrc;
  DWORD offBitsSrc;
  DWORD cbBitsSrc;
  DWORD iUsageSrc;
  DWORD iStartScan;
  DWORD cScans;
};

/* 5118 */
typedef tagEMRSETDIBITSTODEVICE EMRSETDIBITSTODEVICE;

/* 5119 */
typedef tagEMRSETDIBITSTODEVICE *PEMRSETDIBITSTODEVICE;

/* 5120 */
struct tagEMRSTRETCHDIBITS
{
  EMR emr;
  RECTL rclBounds;
  LONG xDest;
  LONG yDest;
  LONG xSrc;
  LONG ySrc;
  LONG cxSrc;
  LONG cySrc;
  DWORD offBmiSrc;
  DWORD cbBmiSrc;
  DWORD offBitsSrc;
  DWORD cbBitsSrc;
  DWORD iUsageSrc;
  DWORD dwRop;
  LONG cxDest;
  LONG cyDest;
};

/* 5121 */
typedef tagEMRSTRETCHDIBITS EMRSTRETCHDIBITS;

/* 5122 */
typedef tagEMRSTRETCHDIBITS *PEMRSTRETCHDIBITS;

/* 5123 */
struct tagEMREXTCREATEFONTINDIRECTW
{
  EMR emr;
  DWORD ihFont;
  EXTLOGFONTW elfw;
};

/* 5124 */
typedef tagEMREXTCREATEFONTINDIRECTW EMREXTCREATEFONTINDIRECTW;

/* 5125 */
typedef tagEMREXTCREATEFONTINDIRECTW *PEMREXTCREATEFONTINDIRECTW;

/* 5126 */
struct tagEMRCREATEPALETTE
{
  EMR emr;
  DWORD ihPal;
  LOGPALETTE lgpl;
};

/* 5127 */
typedef tagEMRCREATEPALETTE EMRCREATEPALETTE;

/* 5128 */
typedef tagEMRCREATEPALETTE *PEMRCREATEPALETTE;

/* 5129 */
struct tagEMRCREATEPEN
{
  EMR emr;
  DWORD ihPen;
  LOGPEN lopn;
};

/* 5130 */
typedef tagEMRCREATEPEN EMRCREATEPEN;

/* 5131 */
typedef tagEMRCREATEPEN *PEMRCREATEPEN;

/* 5132 */
struct tagEMREXTCREATEPEN
{
  EMR emr;
  DWORD ihPen;
  DWORD offBmi;
  DWORD cbBmi;
  DWORD offBits;
  DWORD cbBits;
  EXTLOGPEN32 elp;
};

/* 5133 */
typedef tagEMREXTCREATEPEN EMREXTCREATEPEN;

/* 5134 */
typedef tagEMREXTCREATEPEN *PEMREXTCREATEPEN;

/* 5135 */
struct tagEMRCREATEBRUSHINDIRECT
{
  EMR emr;
  DWORD ihBrush;
  LOGBRUSH32 lb;
};

/* 5136 */
typedef tagEMRCREATEBRUSHINDIRECT EMRCREATEBRUSHINDIRECT;

/* 5137 */
typedef tagEMRCREATEBRUSHINDIRECT *PEMRCREATEBRUSHINDIRECT;

/* 5138 */
struct tagEMRCREATEMONOBRUSH
{
  EMR emr;
  DWORD ihBrush;
  DWORD iUsage;
  DWORD offBmi;
  DWORD cbBmi;
  DWORD offBits;
  DWORD cbBits;
};

/* 5139 */
typedef tagEMRCREATEMONOBRUSH EMRCREATEMONOBRUSH;

/* 5140 */
typedef tagEMRCREATEMONOBRUSH *PEMRCREATEMONOBRUSH;

/* 5141 */
struct tagEMRCREATEDIBPATTERNBRUSHPT
{
  EMR emr;
  DWORD ihBrush;
  DWORD iUsage;
  DWORD offBmi;
  DWORD cbBmi;
  DWORD offBits;
  DWORD cbBits;
};

/* 5142 */
typedef tagEMRCREATEDIBPATTERNBRUSHPT EMRCREATEDIBPATTERNBRUSHPT;

/* 5143 */
typedef tagEMRCREATEDIBPATTERNBRUSHPT *PEMRCREATEDIBPATTERNBRUSHPT;

/* 5144 */
struct tagEMRFORMAT
{
  DWORD dSignature;
  DWORD nVersion;
  DWORD cbData;
  DWORD offData;
};

/* 5145 */
typedef tagEMRFORMAT EMRFORMAT;

/* 5146 */
typedef tagEMRFORMAT *PEMRFORMAT;

/* 5147 */
struct tagEMRGLSRECORD
{
  EMR emr;
  DWORD cbData;
  BYTE Data[1];
};

/* 5148 */
typedef tagEMRGLSRECORD EMRGLSRECORD;

/* 5149 */
typedef tagEMRGLSRECORD *PEMRGLSRECORD;

/* 5150 */
struct tagEMRGLSBOUNDEDRECORD
{
  EMR emr;
  RECTL rclBounds;
  DWORD cbData;
  BYTE Data[1];
};

/* 5151 */
typedef tagEMRGLSBOUNDEDRECORD EMRGLSBOUNDEDRECORD;

/* 5152 */
typedef tagEMRGLSBOUNDEDRECORD *PEMRGLSBOUNDEDRECORD;

/* 5153 */
struct tagEMRPIXELFORMAT
{
  EMR emr;
  PIXELFORMATDESCRIPTOR pfd;
};

/* 5154 */
typedef tagEMRPIXELFORMAT EMRPIXELFORMAT;

/* 5155 */
typedef tagEMRPIXELFORMAT *PEMRPIXELFORMAT;

/* 5156 */
struct tagEMRCREATECOLORSPACE
{
  EMR emr;
  DWORD ihCS;
  LOGCOLORSPACEA lcs;
};

/* 5157 */
typedef tagEMRCREATECOLORSPACE EMRCREATECOLORSPACE;

/* 5158 */
typedef tagEMRCREATECOLORSPACE *PEMRCREATECOLORSPACE;

/* 5159 */
struct tagEMRSETCOLORSPACE
{
  EMR emr;
  DWORD ihCS;
};

/* 5160 */
typedef tagEMRSETCOLORSPACE EMRSETCOLORSPACE;

/* 5161 */
typedef tagEMRSETCOLORSPACE *PEMRSETCOLORSPACE;

/* 5162 */
typedef tagEMRSETCOLORSPACE EMRSELECTCOLORSPACE;

/* 5163 */
typedef tagEMRSETCOLORSPACE *PEMRSELECTCOLORSPACE;

/* 5164 */
typedef tagEMRSETCOLORSPACE EMRDELETECOLORSPACE;

/* 5165 */
typedef tagEMRSETCOLORSPACE *PEMRDELETECOLORSPACE;

/* 5166 */
struct tagEMREXTESCAPE
{
  EMR emr;
  INT iEscape;
  INT cbEscData;
  BYTE EscData[1];
};

/* 5167 */
typedef tagEMREXTESCAPE EMREXTESCAPE;

/* 5168 */
typedef tagEMREXTESCAPE *PEMREXTESCAPE;

/* 5169 */
typedef tagEMREXTESCAPE EMRDRAWESCAPE;

/* 5170 */
typedef tagEMREXTESCAPE *PEMRDRAWESCAPE;

/* 5171 */
struct tagEMRNAMEDESCAPE
{
  EMR emr;
  INT iEscape;
  INT cbDriver;
  INT cbEscData;
  BYTE EscData[1];
};

/* 5172 */
typedef tagEMRNAMEDESCAPE EMRNAMEDESCAPE;

/* 5173 */
typedef tagEMRNAMEDESCAPE *PEMRNAMEDESCAPE;

/* 5174 */
struct tagEMRSETICMPROFILE
{
  EMR emr;
  DWORD dwFlags;
  DWORD cbName;
  DWORD cbData;
  BYTE Data[1];
};

/* 5175 */
typedef tagEMRSETICMPROFILE EMRSETICMPROFILE;

/* 5176 */
typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILE;

/* 5177 */
typedef tagEMRSETICMPROFILE EMRSETICMPROFILEA;

/* 5178 */
typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILEA;

/* 5179 */
typedef tagEMRSETICMPROFILE EMRSETICMPROFILEW;

/* 5180 */
typedef tagEMRSETICMPROFILE *PEMRSETICMPROFILEW;

/* 5181 */
struct tagEMRCREATECOLORSPACEW
{
  EMR emr;
  DWORD ihCS;
  LOGCOLORSPACEW lcs;
  DWORD dwFlags;
  DWORD cbData;
  BYTE Data[1];
};

/* 5182 */
typedef tagEMRCREATECOLORSPACEW EMRCREATECOLORSPACEW;

/* 5183 */
typedef tagEMRCREATECOLORSPACEW *PEMRCREATECOLORSPACEW;

/* 5184 */
struct tagCOLORMATCHTOTARGET
{
  EMR emr;
  DWORD dwAction;
  DWORD dwFlags;
  DWORD cbName;
  DWORD cbData;
  BYTE Data[1];
};

/* 5185 */
typedef tagCOLORMATCHTOTARGET EMRCOLORMATCHTOTARGET;

/* 5186 */
typedef tagCOLORMATCHTOTARGET *PEMRCOLORMATCHTOTARGET;

/* 5187 */
struct tagCOLORCORRECTPALETTE
{
  EMR emr;
  DWORD ihPalette;
  DWORD nFirstEntry;
  DWORD nPalEntries;
  DWORD nReserved;
};

/* 5188 */
typedef tagCOLORCORRECTPALETTE EMRCOLORCORRECTPALETTE;

/* 5189 */
typedef tagCOLORCORRECTPALETTE *PEMRCOLORCORRECTPALETTE;

/* 5190 */
struct tagEMRALPHABLEND
{
  EMR emr;
  RECTL rclBounds;
  LONG xDest;
  LONG yDest;
  LONG cxDest;
  LONG cyDest;
  DWORD dwRop;
  LONG xSrc;
  LONG ySrc;
  XFORM xformSrc;
  COLORREF crBkColorSrc;
  DWORD iUsageSrc;
  DWORD offBmiSrc;
  DWORD cbBmiSrc;
  DWORD offBitsSrc;
  DWORD cbBitsSrc;
  LONG cxSrc;
  LONG cySrc;
};

/* 5191 */
typedef tagEMRALPHABLEND EMRALPHABLEND;

/* 5192 */
typedef tagEMRALPHABLEND *PEMRALPHABLEND;

/* 5193 */
struct tagEMRGRADIENTFILL
{
  EMR emr;
  RECTL rclBounds;
  DWORD nVer;
  DWORD nTri;
  ULONG ulMode;
  TRIVERTEX Ver[1];
};

/* 5194 */
typedef tagEMRGRADIENTFILL EMRGRADIENTFILL;

/* 5195 */
typedef tagEMRGRADIENTFILL *PEMRGRADIENTFILL;

/* 5196 */
struct tagEMRTRANSPARENTBLT
{
  EMR emr;
  RECTL rclBounds;
  LONG xDest;
  LONG yDest;
  LONG cxDest;
  LONG cyDest;
  DWORD dwRop;
  LONG xSrc;
  LONG ySrc;
  XFORM xformSrc;
  COLORREF crBkColorSrc;
  DWORD iUsageSrc;
  DWORD offBmiSrc;
  DWORD cbBmiSrc;
  DWORD offBitsSrc;
  DWORD cbBitsSrc;
  LONG cxSrc;
  LONG cySrc;
};

/* 5197 */
typedef tagEMRTRANSPARENTBLT EMRTRANSPARENTBLT;

/* 5198 */
typedef tagEMRTRANSPARENTBLT *PEMRTRANSPARENTBLT;

/* 5199 */
struct _POINTFLOAT
{
  FLOAT x;
  FLOAT y;
};

/* 5200 */
typedef _POINTFLOAT POINTFLOAT;

/* 5201 */
typedef _POINTFLOAT *PPOINTFLOAT;

/* 5202 */
struct _GLYPHMETRICSFLOAT
{
  FLOAT gmfBlackBoxX;
  FLOAT gmfBlackBoxY;
  POINTFLOAT gmfptGlyphOrigin;
  FLOAT gmfCellIncX;
  FLOAT gmfCellIncY;
};

/* 5203 */
typedef _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT;

/* 5204 */
typedef _GLYPHMETRICSFLOAT *PGLYPHMETRICSFLOAT;

/* 5205 */
typedef _GLYPHMETRICSFLOAT *LPGLYPHMETRICSFLOAT;

/* 5206 */
struct tagLAYERPLANEDESCRIPTOR
{
  WORD nSize;
  WORD nVersion;
  DWORD dwFlags;
  BYTE iPixelType;
  BYTE cColorBits;
  BYTE cRedBits;
  BYTE cRedShift;
  BYTE cGreenBits;
  BYTE cGreenShift;
  BYTE cBlueBits;
  BYTE cBlueShift;
  BYTE cAlphaBits;
  BYTE cAlphaShift;
  BYTE cAccumBits;
  BYTE cAccumRedBits;
  BYTE cAccumGreenBits;
  BYTE cAccumBlueBits;
  BYTE cAccumAlphaBits;
  BYTE cDepthBits;
  BYTE cStencilBits;
  BYTE cAuxBuffers;
  BYTE iLayerPlane;
  BYTE bReserved;
  COLORREF crTransparent;
};

/* 5207 */
typedef tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR;

/* 5208 */
typedef tagLAYERPLANEDESCRIPTOR *PLAYERPLANEDESCRIPTOR;

/* 5209 */
typedef tagLAYERPLANEDESCRIPTOR *LPLAYERPLANEDESCRIPTOR;

/* 5210 */
struct _WGLSWAP
{
  HDC hdc;
  UINT uiFlags;
};

/* 5211 */
typedef _WGLSWAP WGLSWAP;

/* 5212 */
typedef _WGLSWAP *PWGLSWAP;

/* 5213 */
typedef _WGLSWAP *LPWGLSWAP;

/* 5214 */
typedef HANDLE HDWP;

/* 5215 */
typedef void MENUTEMPLATEA;

/* 5216 */
typedef void MENUTEMPLATEW;

/* 5217 */
typedef MENUTEMPLATEA MENUTEMPLATE;

/* 5218 */
typedef PVOID LPMENUTEMPLATEA;

/* 5219 */
typedef PVOID LPMENUTEMPLATEW;

/* 5220 */
typedef LPMENUTEMPLATEA LPMENUTEMPLATE;

/* 5221 */
typedef LRESULT (__cdecl *WNDPROC)(HWND, UINT, WPARAM, LPARAM);

/* 5222 */
typedef INT_PTR (__cdecl *DLGPROC)(HWND, UINT, WPARAM, LPARAM);

/* 5223 */
typedef void (__cdecl *TIMERPROC)(HWND, UINT, UINT_PTR, DWORD);

/* 5224 */
typedef BOOL (__cdecl *GRAYSTRINGPROC)(HDC, LPARAM, int);

/* 5225 */
typedef BOOL (__cdecl *WNDENUMPROC)(HWND, LPARAM);

/* 5226 */
typedef LRESULT (__cdecl *HOOKPROC)(int, WPARAM, LPARAM);

/* 5227 */
typedef void (__cdecl *SENDASYNCPROC)(HWND, UINT, ULONG_PTR, LRESULT);

/* 5228 */
typedef BOOL (__cdecl *PROPENUMPROCA)(HWND, LPCSTR, HANDLE);

/* 5229 */
typedef BOOL (__cdecl *PROPENUMPROCW)(HWND, LPCWSTR, HANDLE);

/* 5230 */
typedef BOOL (__cdecl *PROPENUMPROCEXA)(HWND, LPSTR, HANDLE, ULONG_PTR);

/* 5231 */
typedef BOOL (__cdecl *PROPENUMPROCEXW)(HWND, LPWSTR, HANDLE, ULONG_PTR);

/* 5232 */
typedef int (__cdecl *EDITWORDBREAKPROCA)(LPSTR, int, int, int);

/* 5233 */
typedef int (__cdecl *EDITWORDBREAKPROCW)(LPWSTR, int, int, int);

/* 5234 */
typedef BOOL (__cdecl *DRAWSTATEPROC)(HDC, LPARAM, WPARAM, int, int);

/* 5235 */
typedef PROPENUMPROCA PROPENUMPROC;

/* 5236 */
typedef PROPENUMPROCEXA PROPENUMPROCEX;

/* 5237 */
typedef EDITWORDBREAKPROCA EDITWORDBREAKPROC;

/* 5238 */
typedef BOOL (__cdecl *NAMEENUMPROCA)(LPSTR, LPARAM);

/* 5239 */
typedef BOOL (__cdecl *NAMEENUMPROCW)(LPWSTR, LPARAM);

/* 5240 */
typedef NAMEENUMPROCA WINSTAENUMPROCA;

/* 5241 */
typedef NAMEENUMPROCA DESKTOPENUMPROCA;

/* 5242 */
typedef NAMEENUMPROCW WINSTAENUMPROCW;

/* 5243 */
typedef NAMEENUMPROCW DESKTOPENUMPROCW;

/* 5244 */
typedef WINSTAENUMPROCA WINSTAENUMPROC;

/* 5245 */
typedef DESKTOPENUMPROCA DESKTOPENUMPROC;

/* 5246 */
struct tagCBT_CREATEWNDA
{
  tagCREATESTRUCTA *lpcs;
  HWND hwndInsertAfter;
};

/* 5247 */
struct tagCREATESTRUCTA
{
  LPVOID lpCreateParams;
  HINSTANCE hInstance;
  HMENU hMenu;
  HWND hwndParent;
  int cy;
  int cx;
  int y;
  int x;
  LONG style;
  LPCSTR lpszName;
  LPCSTR lpszClass;
  DWORD dwExStyle;
};

/* 5248 */
typedef tagCBT_CREATEWNDA CBT_CREATEWNDA;

/* 5249 */
typedef tagCBT_CREATEWNDA *LPCBT_CREATEWNDA;

/* 5250 */
struct tagCBT_CREATEWNDW
{
  tagCREATESTRUCTW *lpcs;
  HWND hwndInsertAfter;
};

/* 5251 */
struct tagCREATESTRUCTW
{
  LPVOID lpCreateParams;
  HINSTANCE hInstance;
  HMENU hMenu;
  HWND hwndParent;
  int cy;
  int cx;
  int y;
  int x;
  LONG style;
  LPCWSTR lpszName;
  LPCWSTR lpszClass;
  DWORD dwExStyle;
};

/* 5252 */
typedef tagCBT_CREATEWNDW CBT_CREATEWNDW;

/* 5253 */
typedef tagCBT_CREATEWNDW *LPCBT_CREATEWNDW;

/* 5254 */
typedef CBT_CREATEWNDA CBT_CREATEWND;

/* 5255 */
typedef LPCBT_CREATEWNDA LPCBT_CREATEWND;

/* 5256 */
struct tagCBTACTIVATESTRUCT
{
  BOOL fMouse;
  HWND hWndActive;
};

/* 5257 */
typedef tagCBTACTIVATESTRUCT CBTACTIVATESTRUCT;

/* 5258 */
typedef tagCBTACTIVATESTRUCT *LPCBTACTIVATESTRUCT;

/* 5259 */
struct tagWTSSESSION_NOTIFICATION
{
  DWORD cbSize;
  DWORD dwSessionId;
};

/* 5260 */
typedef tagWTSSESSION_NOTIFICATION WTSSESSION_NOTIFICATION;

/* 5261 */
typedef tagWTSSESSION_NOTIFICATION *PWTSSESSION_NOTIFICATION;

/* 5262 */
struct SHELLHOOKINFO
{
  HWND hwnd;
  RECT rc;
};

/* 5263 */
typedef SHELLHOOKINFO *LPSHELLHOOKINFO;

/* 5264 */
struct tagEVENTMSG
{
  UINT message;
  UINT paramL;
  UINT paramH;
  DWORD time;
  HWND hwnd;
};

/* 5265 */
typedef tagEVENTMSG EVENTMSG;

/* 5266 */
typedef tagEVENTMSG *PEVENTMSGMSG;

/* 5267 */
typedef tagEVENTMSG *NPEVENTMSGMSG;

/* 5268 */
typedef tagEVENTMSG *LPEVENTMSGMSG;

/* 5269 */
typedef tagEVENTMSG *PEVENTMSG;

/* 5270 */
typedef tagEVENTMSG *NPEVENTMSG;

/* 5271 */
typedef tagEVENTMSG *LPEVENTMSG;

/* 5272 */
struct tagCWPSTRUCT
{
  LPARAM lParam;
  WPARAM wParam;
  UINT message;
  HWND hwnd;
};

/* 5273 */
typedef tagCWPSTRUCT CWPSTRUCT;

/* 5274 */
typedef tagCWPSTRUCT *PCWPSTRUCT;

/* 5275 */
typedef tagCWPSTRUCT *NPCWPSTRUCT;

/* 5276 */
typedef tagCWPSTRUCT *LPCWPSTRUCT;

/* 5277 */
struct tagCWPRETSTRUCT
{
  LRESULT lResult;
  LPARAM lParam;
  WPARAM wParam;
  UINT message;
  HWND hwnd;
};

/* 5278 */
typedef tagCWPRETSTRUCT CWPRETSTRUCT;

/* 5279 */
typedef tagCWPRETSTRUCT *PCWPRETSTRUCT;

/* 5280 */
typedef tagCWPRETSTRUCT *NPCWPRETSTRUCT;

/* 5281 */
typedef tagCWPRETSTRUCT *LPCWPRETSTRUCT;

/* 5282 */
struct tagKBDLLHOOKSTRUCT
{
  DWORD vkCode;
  DWORD scanCode;
  DWORD flags;
  DWORD time;
  ULONG_PTR dwExtraInfo;
};

/* 5283 */
typedef tagKBDLLHOOKSTRUCT KBDLLHOOKSTRUCT;

/* 5284 */
typedef tagKBDLLHOOKSTRUCT *LPKBDLLHOOKSTRUCT;

/* 5285 */
typedef tagKBDLLHOOKSTRUCT *PKBDLLHOOKSTRUCT;

/* 5286 */
struct tagMSLLHOOKSTRUCT
{
  POINT pt;
  DWORD mouseData;
  DWORD flags;
  DWORD time;
  ULONG_PTR dwExtraInfo;
};

/* 5287 */
typedef tagMSLLHOOKSTRUCT MSLLHOOKSTRUCT;

/* 5288 */
typedef tagMSLLHOOKSTRUCT *LPMSLLHOOKSTRUCT;

/* 5289 */
typedef tagMSLLHOOKSTRUCT *PMSLLHOOKSTRUCT;

/* 5290 */
struct tagDEBUGHOOKINFO
{
  DWORD idThread;
  DWORD idThreadInstaller;
  LPARAM lParam;
  WPARAM wParam;
  int code;
};

/* 5291 */
typedef tagDEBUGHOOKINFO DEBUGHOOKINFO;

/* 5292 */
typedef tagDEBUGHOOKINFO *PDEBUGHOOKINFO;

/* 5293 */
typedef tagDEBUGHOOKINFO *NPDEBUGHOOKINFO;

/* 5294 */
typedef tagDEBUGHOOKINFO *LPDEBUGHOOKINFO;

/* 5295 */
struct tagMOUSEHOOKSTRUCT
{
  POINT pt;
  HWND hwnd;
  UINT wHitTestCode;
  ULONG_PTR dwExtraInfo;
};

/* 5296 */
typedef tagMOUSEHOOKSTRUCT MOUSEHOOKSTRUCT;

/* 5297 */
typedef tagMOUSEHOOKSTRUCT *LPMOUSEHOOKSTRUCT;

/* 5298 */
typedef tagMOUSEHOOKSTRUCT *PMOUSEHOOKSTRUCT;

/* 5299 */
struct __cppobj tagMOUSEHOOKSTRUCTEX : tagMOUSEHOOKSTRUCT
{
  DWORD mouseData;
};

/* 5300 */
typedef tagMOUSEHOOKSTRUCTEX MOUSEHOOKSTRUCTEX;

/* 5301 */
typedef tagMOUSEHOOKSTRUCTEX *LPMOUSEHOOKSTRUCTEX;

/* 5302 */
typedef tagMOUSEHOOKSTRUCTEX *PMOUSEHOOKSTRUCTEX;

/* 5303 */
struct tagHARDWAREHOOKSTRUCT
{
  HWND hwnd;
  UINT message;
  WPARAM wParam;
  LPARAM lParam;
};

/* 5304 */
typedef tagHARDWAREHOOKSTRUCT HARDWAREHOOKSTRUCT;

/* 5305 */
typedef tagHARDWAREHOOKSTRUCT *LPHARDWAREHOOKSTRUCT;

/* 5306 */
typedef tagHARDWAREHOOKSTRUCT *PHARDWAREHOOKSTRUCT;

/* 5307 */
struct tagMOUSEMOVEPOINT
{
  int x;
  int y;
  DWORD time;
  ULONG_PTR dwExtraInfo;
};

/* 5308 */
typedef tagMOUSEMOVEPOINT MOUSEMOVEPOINT;

/* 5309 */
typedef tagMOUSEMOVEPOINT *PMOUSEMOVEPOINT;

/* 5310 */
typedef tagMOUSEMOVEPOINT *LPMOUSEMOVEPOINT;

/* 5311 */
struct tagUSEROBJECTFLAGS
{
  BOOL fInherit;
  BOOL fReserved;
  DWORD dwFlags;
};

/* 5312 */
typedef tagUSEROBJECTFLAGS USEROBJECTFLAGS;

/* 5313 */
typedef tagUSEROBJECTFLAGS *PUSEROBJECTFLAGS;

/* 5314 */
struct tagWNDCLASSEXA
{
  UINT cbSize;
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCSTR lpszMenuName;
  LPCSTR lpszClassName;
  HICON hIconSm;
};

/* 5315 */
typedef tagWNDCLASSEXA WNDCLASSEXA;

/* 5316 */
typedef tagWNDCLASSEXA *PWNDCLASSEXA;

/* 5317 */
typedef tagWNDCLASSEXA *NPWNDCLASSEXA;

/* 5318 */
typedef tagWNDCLASSEXA *LPWNDCLASSEXA;

/* 5319 */
struct tagWNDCLASSEXW
{
  UINT cbSize;
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCWSTR lpszMenuName;
  LPCWSTR lpszClassName;
  HICON hIconSm;
};

/* 5320 */
typedef tagWNDCLASSEXW WNDCLASSEXW;

/* 5321 */
typedef tagWNDCLASSEXW *PWNDCLASSEXW;

/* 5322 */
typedef tagWNDCLASSEXW *NPWNDCLASSEXW;

/* 5323 */
typedef tagWNDCLASSEXW *LPWNDCLASSEXW;

/* 5324 */
typedef WNDCLASSEXA WNDCLASSEX;

/* 5325 */
typedef PWNDCLASSEXA PWNDCLASSEX;

/* 5326 */
typedef NPWNDCLASSEXA NPWNDCLASSEX;

/* 5327 */
typedef LPWNDCLASSEXA LPWNDCLASSEX;

/* 5328 */
struct tagWNDCLASSA
{
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCSTR lpszMenuName;
  LPCSTR lpszClassName;
};

/* 5329 */
typedef tagWNDCLASSA WNDCLASSA;

/* 5330 */
typedef tagWNDCLASSA *PWNDCLASSA;

/* 5331 */
typedef tagWNDCLASSA *NPWNDCLASSA;

/* 5332 */
typedef tagWNDCLASSA *LPWNDCLASSA;

/* 5333 */
struct tagWNDCLASSW
{
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCWSTR lpszMenuName;
  LPCWSTR lpszClassName;
};

/* 5334 */
typedef tagWNDCLASSW WNDCLASSW;

/* 5335 */
typedef tagWNDCLASSW *PWNDCLASSW;

/* 5336 */
typedef tagWNDCLASSW *NPWNDCLASSW;

/* 5337 */
typedef tagWNDCLASSW *LPWNDCLASSW;

/* 5338 */
typedef WNDCLASSA WNDCLASS;

/* 5339 */
typedef PWNDCLASSA PWNDCLASS;

/* 5340 */
typedef NPWNDCLASSA NPWNDCLASS;

/* 5341 */
typedef LPWNDCLASSA LPWNDCLASS;

/* 5342 */
struct tagMSG
{
  HWND hwnd;
  UINT message;
  WPARAM wParam;
  LPARAM lParam;
  DWORD time;
  POINT pt;
};

/* 5343 */
typedef tagMSG MSG;

/* 5344 */
typedef tagMSG *PMSG;

/* 5345 */
typedef tagMSG *NPMSG;

/* 5346 */
typedef tagMSG *LPMSG;

/* 5347 */
struct tagMINMAXINFO
{
  POINT ptReserved;
  POINT ptMaxSize;
  POINT ptMaxPosition;
  POINT ptMinTrackSize;
  POINT ptMaxTrackSize;
};

/* 5348 */
typedef tagMINMAXINFO MINMAXINFO;

/* 5349 */
typedef tagMINMAXINFO *PMINMAXINFO;

/* 5350 */
typedef tagMINMAXINFO *LPMINMAXINFO;

/* 5351 */
struct tagCOPYDATASTRUCT
{
  ULONG_PTR dwData;
  DWORD cbData;
  PVOID lpData;
};

/* 5352 */
typedef tagCOPYDATASTRUCT COPYDATASTRUCT;

/* 5353 */
typedef tagCOPYDATASTRUCT *PCOPYDATASTRUCT;

/* 5354 */
struct tagMDINEXTMENU
{
  HMENU hmenuIn;
  HMENU hmenuNext;
  HWND hwndNext;
};

/* 5355 */
typedef tagMDINEXTMENU MDINEXTMENU;

/* 5356 */
typedef tagMDINEXTMENU *PMDINEXTMENU;

/* 5357 */
typedef tagMDINEXTMENU *LPMDINEXTMENU;

/* 5358 */
struct POWERBROADCAST_SETTING
{
  GUID PowerSetting;
  DWORD DataLength;
  UCHAR Data[1];
};

/* 5359 */
typedef POWERBROADCAST_SETTING *PPOWERBROADCAST_SETTING;

/* 5360 */
struct tagWINDOWPOS
{
  HWND hwnd;
  HWND hwndInsertAfter;
  int x;
  int y;
  int cx;
  int cy;
  UINT flags;
};

/* 5361 */
typedef tagWINDOWPOS WINDOWPOS;

/* 5362 */
typedef tagWINDOWPOS *LPWINDOWPOS;

/* 5363 */
typedef tagWINDOWPOS *PWINDOWPOS;

/* 5364 */
struct tagNCCALCSIZE_PARAMS
{
  RECT rgrc[3];
  PWINDOWPOS lppos;
};

/* 5365 */
typedef tagNCCALCSIZE_PARAMS NCCALCSIZE_PARAMS;

/* 5366 */
typedef tagNCCALCSIZE_PARAMS *LPNCCALCSIZE_PARAMS;

/* 5367 */
struct tagTRACKMOUSEEVENT
{
  DWORD cbSize;
  DWORD dwFlags;
  HWND hwndTrack;
  DWORD dwHoverTime;
};

/* 5368 */
typedef tagTRACKMOUSEEVENT TRACKMOUSEEVENT;

/* 5369 */
typedef tagTRACKMOUSEEVENT *LPTRACKMOUSEEVENT;

/* 5370 */
struct tagACCEL
{
  BYTE fVirt;
  WORD key;
  WORD cmd;
};

/* 5371 */
typedef tagACCEL ACCEL;

/* 5372 */
typedef tagACCEL *LPACCEL;

/* 5373 */
struct tagPAINTSTRUCT
{
  HDC hdc;
  BOOL fErase;
  RECT rcPaint;
  BOOL fRestore;
  BOOL fIncUpdate;
  BYTE rgbReserved[32];
};

/* 5374 */
typedef tagPAINTSTRUCT PAINTSTRUCT;

/* 5375 */
typedef tagPAINTSTRUCT *PPAINTSTRUCT;

/* 5376 */
typedef tagPAINTSTRUCT *NPPAINTSTRUCT;

/* 5377 */
typedef tagPAINTSTRUCT *LPPAINTSTRUCT;

/* 5378 */
typedef tagCREATESTRUCTA CREATESTRUCTA;

/* 5379 */
typedef tagCREATESTRUCTA *LPCREATESTRUCTA;

/* 5380 */
typedef tagCREATESTRUCTW CREATESTRUCTW;

/* 5381 */
typedef tagCREATESTRUCTW *LPCREATESTRUCTW;

/* 5382 */
typedef CREATESTRUCTA CREATESTRUCT;

/* 5383 */
typedef LPCREATESTRUCTA LPCREATESTRUCT;

/* 5384 */
struct tagWINDOWPLACEMENT
{
  UINT length;
  UINT flags;
  UINT showCmd;
  POINT ptMinPosition;
  POINT ptMaxPosition;
  RECT rcNormalPosition;
};

/* 5385 */
typedef tagWINDOWPLACEMENT WINDOWPLACEMENT;

/* 5386 */
typedef WINDOWPLACEMENT *PWINDOWPLACEMENT;

/* 5387 */
typedef WINDOWPLACEMENT *LPWINDOWPLACEMENT;

/* 5388 */
struct tagNMHDR
{
  HWND hwndFrom;
  UINT_PTR idFrom;
  UINT code;
};

/* 5389 */
typedef tagNMHDR NMHDR;

/* 5390 */
typedef NMHDR *LPNMHDR;

/* 5391 */
struct tagSTYLESTRUCT
{
  DWORD styleOld;
  DWORD styleNew;
};

/* 5392 */
typedef tagSTYLESTRUCT STYLESTRUCT;

/* 5393 */
typedef tagSTYLESTRUCT *LPSTYLESTRUCT;

/* 5394 */
struct tagMEASUREITEMSTRUCT
{
  UINT CtlType;
  UINT CtlID;
  UINT itemID;
  UINT itemWidth;
  UINT itemHeight;
  ULONG_PTR itemData;
};

/* 5395 */
typedef tagMEASUREITEMSTRUCT MEASUREITEMSTRUCT;

/* 5396 */
typedef tagMEASUREITEMSTRUCT *PMEASUREITEMSTRUCT;

/* 5397 */
typedef tagMEASUREITEMSTRUCT *LPMEASUREITEMSTRUCT;

/* 5398 */
struct tagDRAWITEMSTRUCT
{
  UINT CtlType;
  UINT CtlID;
  UINT itemID;
  UINT itemAction;
  UINT itemState;
  HWND hwndItem;
  HDC hDC;
  RECT rcItem;
  ULONG_PTR itemData;
};

/* 5399 */
typedef tagDRAWITEMSTRUCT DRAWITEMSTRUCT;

/* 5400 */
typedef tagDRAWITEMSTRUCT *PDRAWITEMSTRUCT;

/* 5401 */
typedef tagDRAWITEMSTRUCT *LPDRAWITEMSTRUCT;

/* 5402 */
struct tagDELETEITEMSTRUCT
{
  UINT CtlType;
  UINT CtlID;
  UINT itemID;
  HWND hwndItem;
  ULONG_PTR itemData;
};

/* 5403 */
typedef tagDELETEITEMSTRUCT DELETEITEMSTRUCT;

/* 5404 */
typedef tagDELETEITEMSTRUCT *PDELETEITEMSTRUCT;

/* 5405 */
typedef tagDELETEITEMSTRUCT *LPDELETEITEMSTRUCT;

/* 5406 */
struct tagCOMPAREITEMSTRUCT
{
  UINT CtlType;
  UINT CtlID;
  HWND hwndItem;
  UINT itemID1;
  ULONG_PTR itemData1;
  UINT itemID2;
  ULONG_PTR itemData2;
  DWORD dwLocaleId;
};

/* 5407 */
typedef tagCOMPAREITEMSTRUCT COMPAREITEMSTRUCT;

/* 5408 */
typedef tagCOMPAREITEMSTRUCT *PCOMPAREITEMSTRUCT;

/* 5409 */
typedef tagCOMPAREITEMSTRUCT *LPCOMPAREITEMSTRUCT;

/* 5410 */
struct BSMINFO
{
  UINT cbSize;
  HDESK hdesk;
  HWND hwnd;
  LUID luid;
};

/* 5411 */
typedef BSMINFO *PBSMINFO;

/* 5412 */
typedef PVOID HDEVNOTIFY;

/* 5413 */
typedef HDEVNOTIFY *PHDEVNOTIFY;

/* 5414 */
typedef PVOID HPOWERNOTIFY;

/* 5415 */
typedef HPOWERNOTIFY *PHPOWERNOTIFY;

/* 5416 */
typedef BOOLEAN (__cdecl *PREGISTERCLASSNAMEW)(LPCWSTR);

/* 5417 */
struct tagUPDATELAYEREDWINDOWINFO
{
  DWORD cbSize;
  HDC hdcDst;
  const POINT *pptDst;
  const SIZE *psize;
  HDC hdcSrc;
  const POINT *pptSrc;
  COLORREF crKey;
  const BLENDFUNCTION *pblend;
  DWORD dwFlags;
  const RECT *prcDirty;
};

/* 5418 */
typedef tagUPDATELAYEREDWINDOWINFO UPDATELAYEREDWINDOWINFO;

/* 5419 */
typedef tagUPDATELAYEREDWINDOWINFO *PUPDATELAYEREDWINDOWINFO;

/* 5420 */
struct FLASHWINFO
{
  UINT cbSize;
  HWND hwnd;
  DWORD dwFlags;
  UINT uCount;
  DWORD dwTimeout;
};

/* 5421 */
typedef FLASHWINFO *PFLASHWINFO;

/* 5422 */
#pragma pack(push, 2)
struct DLGTEMPLATE
{
  DWORD style;
  DWORD dwExtendedStyle;
  WORD cdit;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
};
#pragma pack(pop)

/* 5423 */
typedef DLGTEMPLATE *LPDLGTEMPLATEA;

/* 5424 */
typedef DLGTEMPLATE *LPDLGTEMPLATEW;

/* 5425 */
typedef LPDLGTEMPLATEA LPDLGTEMPLATE;

/* 5426 */
typedef const DLGTEMPLATE *LPCDLGTEMPLATEA;

/* 5427 */
typedef const DLGTEMPLATE *LPCDLGTEMPLATEW;

/* 5428 */
typedef LPCDLGTEMPLATEA LPCDLGTEMPLATE;

/* 5429 */
#pragma pack(push, 2)
struct DLGITEMTEMPLATE
{
  DWORD style;
  DWORD dwExtendedStyle;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
  WORD id;
};
#pragma pack(pop)

/* 5430 */
typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEA;

/* 5431 */
typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEW;

/* 5432 */
typedef PDLGITEMTEMPLATEA PDLGITEMTEMPLATE;

/* 5433 */
typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEA;

/* 5434 */
typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEW;

/* 5435 */
typedef LPDLGITEMTEMPLATEA LPDLGITEMTEMPLATE;

/* 5436 */
enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS : unsigned __int32
{
  DCDC_DEFAULT = 0x0,
  DCDC_DISABLE_FONT_UPDATE = 0x1,
  DCDC_DISABLE_RELAYOUT = 0x2,
};

/* 5437 */
enum DIALOG_DPI_CHANGE_BEHAVIORS : unsigned __int32
{
  DDC_DEFAULT = 0x0,
  DDC_DISABLE_ALL = 0x1,
  DDC_DISABLE_RESIZE = 0x2,
  DDC_DISABLE_CONTROL_RELAYOUT = 0x4,
};

/* 5438 */
struct tagMOUSEINPUT
{
  LONG dx;
  LONG dy;
  DWORD mouseData;
  DWORD dwFlags;
  DWORD time;
  ULONG_PTR dwExtraInfo;
};

/* 5439 */
typedef tagMOUSEINPUT MOUSEINPUT;

/* 5440 */
typedef tagMOUSEINPUT *PMOUSEINPUT;

/* 5441 */
typedef tagMOUSEINPUT *LPMOUSEINPUT;

/* 5442 */
struct tagKEYBDINPUT
{
  WORD wVk;
  WORD wScan;
  DWORD dwFlags;
  DWORD time;
  ULONG_PTR dwExtraInfo;
};

/* 5443 */
typedef tagKEYBDINPUT KEYBDINPUT;

/* 5444 */
typedef tagKEYBDINPUT *PKEYBDINPUT;

/* 5445 */
typedef tagKEYBDINPUT *LPKEYBDINPUT;

/* 5446 */
struct tagHARDWAREINPUT
{
  DWORD uMsg;
  WORD wParamL;
  WORD wParamH;
};

/* 5447 */
typedef tagHARDWAREINPUT HARDWAREINPUT;

/* 5448 */
typedef tagHARDWAREINPUT *PHARDWAREINPUT;

/* 5449 */
typedef tagHARDWAREINPUT *LPHARDWAREINPUT;

/* 5451 */
union tagINPUT___F9B27FB5300028B0D7A4B79CCB2B2C87
{
  MOUSEINPUT mi;
  KEYBDINPUT ki;
  HARDWAREINPUT hi;
};

/* 5450 */
struct tagINPUT
{
  DWORD type;
  union
  {
    MOUSEINPUT mi;
    KEYBDINPUT ki;
    HARDWAREINPUT hi;
  };
};

/* 5452 */
typedef tagINPUT INPUT;

/* 5453 */
typedef tagINPUT *PINPUT;

/* 5454 */
typedef tagINPUT *LPINPUT;

/* 5455 */
struct HTOUCHINPUT__
{
  int unused;
};

/* 5456 */
typedef HTOUCHINPUT__ *HTOUCHINPUT;

/* 5457 */
struct tagTOUCHINPUT
{
  LONG x;
  LONG y;
  HANDLE hSource;
  DWORD dwID;
  DWORD dwFlags;
  DWORD dwMask;
  DWORD dwTime;
  ULONG_PTR dwExtraInfo;
  DWORD cxContact;
  DWORD cyContact;
};

/* 5458 */
typedef tagTOUCHINPUT TOUCHINPUT;

/* 5459 */
typedef tagTOUCHINPUT *PTOUCHINPUT;

/* 5460 */
typedef const TOUCHINPUT *PCTOUCHINPUT;

/* 5461 */
enum tagPOINTER_INPUT_TYPE : unsigned __int32
{
  PT_POINTER = 0x1,
  PT_TOUCH = 0x2,
  PT_PEN = 0x3,
  PT_MOUSE = 0x4,
  PT_TOUCHPAD = 0x5,
};

/* 5462 */
typedef DWORD POINTER_INPUT_TYPE;

/* 5463 */
typedef UINT32 POINTER_FLAGS;

/* 5464 */
enum tagPOINTER_BUTTON_CHANGE_TYPE : unsigned __int32
{
  POINTER_CHANGE_NONE = 0x0,
  POINTER_CHANGE_FIRSTBUTTON_DOWN = 0x1,
  POINTER_CHANGE_FIRSTBUTTON_UP = 0x2,
  POINTER_CHANGE_SECONDBUTTON_DOWN = 0x3,
  POINTER_CHANGE_SECONDBUTTON_UP = 0x4,
  POINTER_CHANGE_THIRDBUTTON_DOWN = 0x5,
  POINTER_CHANGE_THIRDBUTTON_UP = 0x6,
  POINTER_CHANGE_FOURTHBUTTON_DOWN = 0x7,
  POINTER_CHANGE_FOURTHBUTTON_UP = 0x8,
  POINTER_CHANGE_FIFTHBUTTON_DOWN = 0x9,
  POINTER_CHANGE_FIFTHBUTTON_UP = 0xA,
};

/* 5465 */
typedef tagPOINTER_BUTTON_CHANGE_TYPE POINTER_BUTTON_CHANGE_TYPE;

/* 5466 */
struct tagPOINTER_INFO
{
  POINTER_INPUT_TYPE pointerType;
  UINT32 pointerId;
  UINT32 frameId;
  POINTER_FLAGS pointerFlags;
  HANDLE sourceDevice;
  HWND hwndTarget;
  POINT ptPixelLocation;
  POINT ptHimetricLocation;
  POINT ptPixelLocationRaw;
  POINT ptHimetricLocationRaw;
  DWORD dwTime;
  UINT32 historyCount;
  INT32 InputData;
  DWORD dwKeyStates;
  UINT64 PerformanceCount;
  POINTER_BUTTON_CHANGE_TYPE ButtonChangeType;
};

/* 5467 */
typedef tagPOINTER_INFO POINTER_INFO;

/* 5468 */
typedef UINT32 TOUCH_FLAGS;

/* 5469 */
typedef UINT32 TOUCH_MASK;

/* 5470 */
struct tagPOINTER_TOUCH_INFO
{
  POINTER_INFO pointerInfo;
  TOUCH_FLAGS touchFlags;
  TOUCH_MASK touchMask;
  RECT rcContact;
  RECT rcContactRaw;
  UINT32 orientation;
  UINT32 pressure;
};

/* 5471 */
typedef tagPOINTER_TOUCH_INFO POINTER_TOUCH_INFO;

/* 5472 */
typedef UINT32 PEN_FLAGS;

/* 5473 */
typedef UINT32 PEN_MASK;

/* 5474 */
struct tagPOINTER_PEN_INFO
{
  POINTER_INFO pointerInfo;
  PEN_FLAGS penFlags;
  PEN_MASK penMask;
  UINT32 pressure;
  UINT32 rotation;
  INT32 tiltX;
  INT32 tiltY;
};

/* 5475 */
typedef tagPOINTER_PEN_INFO POINTER_PEN_INFO;

/* 5476 */
enum POINTER_FEEDBACK_MODE : unsigned __int32
{
  POINTER_FEEDBACK_DEFAULT = 0x1,
  POINTER_FEEDBACK_INDIRECT = 0x2,
  POINTER_FEEDBACK_NONE = 0x3,
};

/* 5477 */
struct tagUSAGE_PROPERTIES
{
  USHORT level;
  USHORT page;
  USHORT usage;
  INT32 logicalMinimum;
  INT32 logicalMaximum;
  USHORT unit;
  USHORT exponent;
  BYTE count;
  INT32 physicalMinimum;
  INT32 physicalMaximum;
};

/* 5478 */
typedef tagUSAGE_PROPERTIES USAGE_PROPERTIES;

/* 5479 */
typedef tagUSAGE_PROPERTIES *PUSAGE_PROPERTIES;

/* 5481 */
union tagPOINTER_TYPE_INFO___71AA05D2A51BF06CF0B3BE8EA1064FB3
{
  POINTER_TOUCH_INFO touchInfo;
  POINTER_PEN_INFO penInfo;
};

/* 5480 */
struct tagPOINTER_TYPE_INFO
{
  POINTER_INPUT_TYPE type;
  union
  {
    POINTER_TOUCH_INFO touchInfo;
    POINTER_PEN_INFO penInfo;
  };
};

/* 5482 */
typedef tagPOINTER_TYPE_INFO POINTER_TYPE_INFO;

/* 5483 */
typedef tagPOINTER_TYPE_INFO *PPOINTER_TYPE_INFO;

/* 5484 */
struct tagINPUT_INJECTION_VALUE
{
  USHORT page;
  USHORT usage;
  INT32 value;
  USHORT index;
};

/* 5485 */
typedef tagINPUT_INJECTION_VALUE INPUT_INJECTION_VALUE;

/* 5486 */
typedef tagINPUT_INJECTION_VALUE *PINPUT_INJECTION_VALUE;

/* 5487 */
struct HSYNTHETICPOINTERDEVICE__
{
  int unused;
};

/* 5488 */
typedef HSYNTHETICPOINTERDEVICE__ *HSYNTHETICPOINTERDEVICE;

/* 5489 */
struct tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION
{
  UINT16 score;
  POINT adjustedPoint;
};

/* 5490 */
typedef tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION TOUCH_HIT_TESTING_PROXIMITY_EVALUATION;

/* 5491 */
typedef tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION *PTOUCH_HIT_TESTING_PROXIMITY_EVALUATION;

/* 5492 */
struct tagTOUCH_HIT_TESTING_INPUT
{
  UINT32 pointerId;
  POINT point;
  RECT boundingBox;
  RECT nonOccludedBoundingBox;
  UINT32 orientation;
};

/* 5493 */
typedef tagTOUCH_HIT_TESTING_INPUT TOUCH_HIT_TESTING_INPUT;

/* 5494 */
typedef tagTOUCH_HIT_TESTING_INPUT *PTOUCH_HIT_TESTING_INPUT;

/* 5495 */
enum tagFEEDBACK_TYPE : unsigned __int32
{
  FEEDBACK_TOUCH_CONTACTVISUALIZATION = 0x1,
  FEEDBACK_PEN_BARRELVISUALIZATION = 0x2,
  FEEDBACK_PEN_TAP = 0x3,
  FEEDBACK_PEN_DOUBLETAP = 0x4,
  FEEDBACK_PEN_PRESSANDHOLD = 0x5,
  FEEDBACK_PEN_RIGHTTAP = 0x6,
  FEEDBACK_TOUCH_TAP = 0x7,
  FEEDBACK_TOUCH_DOUBLETAP = 0x8,
  FEEDBACK_TOUCH_PRESSANDHOLD = 0x9,
  FEEDBACK_TOUCH_RIGHTTAP = 0xA,
  FEEDBACK_GESTURE_PRESSANDTAP = 0xB,
  FEEDBACK_MAX = 0xFFFFFFFF,
};

/* 5496 */
typedef tagFEEDBACK_TYPE FEEDBACK_TYPE;

/* 5498 */
struct _40942CBCB8F0A1CDBC81269929B28324
{
  float _11;
  float _12;
  float _13;
  float _14;
  float _21;
  float _22;
  float _23;
  float _24;
  float _31;
  float _32;
  float _33;
  float _34;
  float _41;
  float _42;
  float _43;
  float _44;
};

/* 5499 */
union tagINPUT_TRANSFORM___BC9DE73C29EDB084DB192818DBB6F25B
{
  struct
  {
    float _11;
    float _12;
    float _13;
    float _14;
    float _21;
    float _22;
    float _23;
    float _24;
    float _31;
    float _32;
    float _33;
    float _34;
    float _41;
    float _42;
    float _43;
    float _44;
  };
  float m[4][4];
};

/* 5497 */
struct tagINPUT_TRANSFORM
{
  union
  {
    struct
    {
      float _11;
      float _12;
      float _13;
      float _14;
      float _21;
      float _22;
      float _23;
      float _24;
      float _31;
      float _32;
      float _33;
      float _34;
      float _41;
      float _42;
      float _43;
      float _44;
    };
    float m[4][4];
  };
};

/* 5500 */
typedef tagINPUT_TRANSFORM INPUT_TRANSFORM;

/* 5501 */
struct tagLASTINPUTINFO
{
  UINT cbSize;
  DWORD dwTime;
};

/* 5502 */
typedef tagLASTINPUTINFO LASTINPUTINFO;

/* 5503 */
typedef tagLASTINPUTINFO *PLASTINPUTINFO;

/* 5504 */
struct tagTPMPARAMS
{
  UINT cbSize;
  RECT rcExclude;
};

/* 5505 */
typedef tagTPMPARAMS TPMPARAMS;

/* 5506 */
typedef TPMPARAMS *LPTPMPARAMS;

/* 5507 */
struct tagMENUINFO
{
  DWORD cbSize;
  DWORD fMask;
  DWORD dwStyle;
  UINT cyMax;
  HBRUSH hbrBack;
  DWORD dwContextHelpID;
  ULONG_PTR dwMenuData;
};

/* 5508 */
typedef tagMENUINFO MENUINFO;

/* 5509 */
typedef tagMENUINFO *LPMENUINFO;

/* 5510 */
typedef const MENUINFO *LPCMENUINFO;

/* 5511 */
struct tagMENUGETOBJECTINFO
{
  DWORD dwFlags;
  UINT uPos;
  HMENU hmenu;
  PVOID riid;
  PVOID pvObj;
};

/* 5512 */
typedef tagMENUGETOBJECTINFO MENUGETOBJECTINFO;

/* 5513 */
typedef tagMENUGETOBJECTINFO *PMENUGETOBJECTINFO;

/* 5514 */
struct tagMENUITEMINFOA
{
  UINT cbSize;
  UINT fMask;
  UINT fType;
  UINT fState;
  UINT wID;
  HMENU hSubMenu;
  HBITMAP hbmpChecked;
  HBITMAP hbmpUnchecked;
  ULONG_PTR dwItemData;
  LPSTR dwTypeData;
  UINT cch;
  HBITMAP hbmpItem;
};

/* 5515 */
typedef tagMENUITEMINFOA MENUITEMINFOA;

/* 5516 */
typedef tagMENUITEMINFOA *LPMENUITEMINFOA;

/* 5517 */
struct tagMENUITEMINFOW
{
  UINT cbSize;
  UINT fMask;
  UINT fType;
  UINT fState;
  UINT wID;
  HMENU hSubMenu;
  HBITMAP hbmpChecked;
  HBITMAP hbmpUnchecked;
  ULONG_PTR dwItemData;
  LPWSTR dwTypeData;
  UINT cch;
  HBITMAP hbmpItem;
};

/* 5518 */
typedef tagMENUITEMINFOW MENUITEMINFOW;

/* 5519 */
typedef tagMENUITEMINFOW *LPMENUITEMINFOW;

/* 5520 */
typedef MENUITEMINFOA MENUITEMINFO;

/* 5521 */
typedef LPMENUITEMINFOA LPMENUITEMINFO;

/* 5522 */
typedef const MENUITEMINFOA *LPCMENUITEMINFOA;

/* 5523 */
typedef const MENUITEMINFOW *LPCMENUITEMINFOW;

/* 5524 */
typedef LPCMENUITEMINFOA LPCMENUITEMINFO;

/* 5525 */
struct tagDROPSTRUCT
{
  HWND hwndSource;
  HWND hwndSink;
  DWORD wFmt;
  ULONG_PTR dwData;
  POINT ptDrop;
  DWORD dwControlData;
};

/* 5526 */
typedef tagDROPSTRUCT DROPSTRUCT;

/* 5527 */
typedef tagDROPSTRUCT *PDROPSTRUCT;

/* 5528 */
typedef tagDROPSTRUCT *LPDROPSTRUCT;

/* 5529 */
struct tagDRAWTEXTPARAMS
{
  UINT cbSize;
  int iTabLength;
  int iLeftMargin;
  int iRightMargin;
  UINT uiLengthDrawn;
};

/* 5530 */
typedef tagDRAWTEXTPARAMS DRAWTEXTPARAMS;

/* 5531 */
typedef tagDRAWTEXTPARAMS *LPDRAWTEXTPARAMS;

/* 5532 */
struct tagHELPINFO
{
  UINT cbSize;
  int iContextType;
  int iCtrlId;
  HANDLE hItemHandle;
  DWORD_PTR dwContextId;
  POINT MousePos;
};

/* 5533 */
typedef tagHELPINFO HELPINFO;

/* 5534 */
typedef tagHELPINFO *LPHELPINFO;

/* 5535 */
typedef void (__cdecl *MSGBOXCALLBACK)(LPHELPINFO);

/* 5536 */
struct tagMSGBOXPARAMSA
{
  UINT cbSize;
  HWND hwndOwner;
  HINSTANCE hInstance;
  LPCSTR lpszText;
  LPCSTR lpszCaption;
  DWORD dwStyle;
  LPCSTR lpszIcon;
  DWORD_PTR dwContextHelpId;
  MSGBOXCALLBACK lpfnMsgBoxCallback;
  DWORD dwLanguageId;
};

/* 5537 */
typedef tagMSGBOXPARAMSA MSGBOXPARAMSA;

/* 5538 */
typedef tagMSGBOXPARAMSA *PMSGBOXPARAMSA;

/* 5539 */
typedef tagMSGBOXPARAMSA *LPMSGBOXPARAMSA;

/* 5540 */
struct tagMSGBOXPARAMSW
{
  UINT cbSize;
  HWND hwndOwner;
  HINSTANCE hInstance;
  LPCWSTR lpszText;
  LPCWSTR lpszCaption;
  DWORD dwStyle;
  LPCWSTR lpszIcon;
  DWORD_PTR dwContextHelpId;
  MSGBOXCALLBACK lpfnMsgBoxCallback;
  DWORD dwLanguageId;
};

/* 5541 */
typedef tagMSGBOXPARAMSW MSGBOXPARAMSW;

/* 5542 */
typedef tagMSGBOXPARAMSW *PMSGBOXPARAMSW;

/* 5543 */
typedef tagMSGBOXPARAMSW *LPMSGBOXPARAMSW;

/* 5544 */
typedef MSGBOXPARAMSA MSGBOXPARAMS;

/* 5545 */
typedef PMSGBOXPARAMSA PMSGBOXPARAMS;

/* 5546 */
typedef LPMSGBOXPARAMSA LPMSGBOXPARAMS;

/* 5547 */
struct MENUITEMTEMPLATEHEADER
{
  WORD versionNumber;
  WORD offset;
};

/* 5548 */
typedef MENUITEMTEMPLATEHEADER *PMENUITEMTEMPLATEHEADER;

/* 5549 */
struct MENUITEMTEMPLATE
{
  WORD mtOption;
  WORD mtID;
  WCHAR mtString[1];
};

/* 5550 */
typedef MENUITEMTEMPLATE *PMENUITEMTEMPLATE;

/* 5551 */
struct _ICONINFO
{
  BOOL fIcon;
  DWORD xHotspot;
  DWORD yHotspot;
  HBITMAP hbmMask;
  HBITMAP hbmColor;
};

/* 5552 */
typedef _ICONINFO ICONINFO;

/* 5553 */
typedef ICONINFO *PICONINFO;

/* 5554 */
struct tagCURSORSHAPE
{
  int xHotSpot;
  int yHotSpot;
  int cx;
  int cy;
  int cbWidth;
  BYTE Planes;
  BYTE BitsPixel;
};

/* 5555 */
typedef tagCURSORSHAPE CURSORSHAPE;

/* 5556 */
typedef tagCURSORSHAPE *LPCURSORSHAPE;

/* 5557 */
struct _ICONINFOEXA
{
  DWORD cbSize;
  BOOL fIcon;
  DWORD xHotspot;
  DWORD yHotspot;
  HBITMAP hbmMask;
  HBITMAP hbmColor;
  WORD wResID;
  CHAR szModName[260];
  CHAR szResName[260];
};

/* 5558 */
typedef _ICONINFOEXA ICONINFOEXA;

/* 5559 */
typedef _ICONINFOEXA *PICONINFOEXA;

/* 5560 */
struct _ICONINFOEXW
{
  DWORD cbSize;
  BOOL fIcon;
  DWORD xHotspot;
  DWORD yHotspot;
  HBITMAP hbmMask;
  HBITMAP hbmColor;
  WORD wResID;
  WCHAR szModName[260];
  WCHAR szResName[260];
};

/* 5561 */
typedef _ICONINFOEXW ICONINFOEXW;

/* 5562 */
typedef _ICONINFOEXW *PICONINFOEXW;

/* 5563 */
typedef ICONINFOEXA ICONINFOEX;

/* 5564 */
typedef PICONINFOEXA PICONINFOEX;

/* 5565 */
enum EDIT_CONTROL_FEATURE : unsigned __int32
{
  EDIT_CONTROL_FEATURE_ENTERPRISE_DATA_PROTECTION_PASTE_SUPPORT = 0x0,
  EDIT_CONTROL_FEATURE_PASTE_NOTIFICATIONS = 0x1,
};

/* 5566 */
struct tagSCROLLINFO
{
  UINT cbSize;
  UINT fMask;
  int nMin;
  int nMax;
  UINT nPage;
  int nPos;
  int nTrackPos;
};

/* 5567 */
typedef tagSCROLLINFO SCROLLINFO;

/* 5568 */
typedef tagSCROLLINFO *LPSCROLLINFO;

/* 5569 */
typedef const SCROLLINFO *LPCSCROLLINFO;

/* 5570 */
struct tagMDICREATESTRUCTA
{
  LPCSTR szClass;
  LPCSTR szTitle;
  HANDLE hOwner;
  int x;
  int y;
  int cx;
  int cy;
  DWORD style;
  LPARAM lParam;
};

/* 5571 */
typedef tagMDICREATESTRUCTA MDICREATESTRUCTA;

/* 5572 */
typedef tagMDICREATESTRUCTA *LPMDICREATESTRUCTA;

/* 5573 */
struct tagMDICREATESTRUCTW
{
  LPCWSTR szClass;
  LPCWSTR szTitle;
  HANDLE hOwner;
  int x;
  int y;
  int cx;
  int cy;
  DWORD style;
  LPARAM lParam;
};

/* 5574 */
typedef tagMDICREATESTRUCTW MDICREATESTRUCTW;

/* 5575 */
typedef tagMDICREATESTRUCTW *LPMDICREATESTRUCTW;

/* 5576 */
typedef MDICREATESTRUCTA MDICREATESTRUCT;

/* 5577 */
typedef LPMDICREATESTRUCTA LPMDICREATESTRUCT;

/* 5578 */
struct tagCLIENTCREATESTRUCT
{
  HANDLE hWindowMenu;
  UINT idFirstChild;
};

/* 5579 */
typedef tagCLIENTCREATESTRUCT CLIENTCREATESTRUCT;

/* 5580 */
typedef tagCLIENTCREATESTRUCT *LPCLIENTCREATESTRUCT;

/* 5581 */
typedef DWORD HELPPOLY;

/* 5582 */
struct tagMULTIKEYHELPA
{
  DWORD mkSize;
  CHAR mkKeylist;
  CHAR szKeyphrase[1];
};

/* 5583 */
typedef tagMULTIKEYHELPA MULTIKEYHELPA;

/* 5584 */
typedef tagMULTIKEYHELPA *PMULTIKEYHELPA;

/* 5585 */
typedef tagMULTIKEYHELPA *LPMULTIKEYHELPA;

/* 5586 */
struct tagMULTIKEYHELPW
{
  DWORD mkSize;
  WCHAR mkKeylist;
  WCHAR szKeyphrase[1];
};

/* 5587 */
typedef tagMULTIKEYHELPW MULTIKEYHELPW;

/* 5588 */
typedef tagMULTIKEYHELPW *PMULTIKEYHELPW;

/* 5589 */
typedef tagMULTIKEYHELPW *LPMULTIKEYHELPW;

/* 5590 */
typedef MULTIKEYHELPA MULTIKEYHELP;

/* 5591 */
typedef PMULTIKEYHELPA PMULTIKEYHELP;

/* 5592 */
typedef LPMULTIKEYHELPA LPMULTIKEYHELP;

/* 5593 */
struct tagHELPWININFOA
{
  int wStructSize;
  int x;
  int y;
  int dx;
  int dy;
  int wMax;
  CHAR rgchMember[2];
};

/* 5594 */
typedef tagHELPWININFOA HELPWININFOA;

/* 5595 */
typedef tagHELPWININFOA *PHELPWININFOA;

/* 5596 */
typedef tagHELPWININFOA *LPHELPWININFOA;

/* 5597 */
struct tagHELPWININFOW
{
  int wStructSize;
  int x;
  int y;
  int dx;
  int dy;
  int wMax;
  WCHAR rgchMember[2];
};

/* 5598 */
typedef tagHELPWININFOW HELPWININFOW;

/* 5599 */
typedef tagHELPWININFOW *PHELPWININFOW;

/* 5600 */
typedef tagHELPWININFOW *LPHELPWININFOW;

/* 5601 */
typedef HELPWININFOA HELPWININFO;

/* 5602 */
typedef PHELPWININFOA PHELPWININFO;

/* 5603 */
typedef LPHELPWININFOA LPHELPWININFO;

/* 5604 */
struct tagTouchPredictionParameters
{
  UINT cbSize;
  UINT dwLatency;
  UINT dwSampleTime;
  UINT bUseHWTimeStamp;
};

/* 5605 */
typedef tagTouchPredictionParameters TOUCHPREDICTIONPARAMETERS;

/* 5606 */
typedef tagTouchPredictionParameters *PTOUCHPREDICTIONPARAMETERS;

/* 5607 */
enum tagHANDEDNESS : unsigned __int32
{
  HANDEDNESS_LEFT = 0x0,
  HANDEDNESS_RIGHT = 0x1,
};

/* 5608 */
typedef tagHANDEDNESS HANDEDNESS;

/* 5609 */
typedef tagHANDEDNESS *PHANDEDNESS;

/* 5610 */
struct tagNONCLIENTMETRICSA
{
  UINT cbSize;
  int iBorderWidth;
  int iScrollWidth;
  int iScrollHeight;
  int iCaptionWidth;
  int iCaptionHeight;
  LOGFONTA lfCaptionFont;
  int iSmCaptionWidth;
  int iSmCaptionHeight;
  LOGFONTA lfSmCaptionFont;
  int iMenuWidth;
  int iMenuHeight;
  LOGFONTA lfMenuFont;
  LOGFONTA lfStatusFont;
  LOGFONTA lfMessageFont;
  int iPaddedBorderWidth;
};

/* 5611 */
typedef tagNONCLIENTMETRICSA NONCLIENTMETRICSA;

/* 5612 */
typedef tagNONCLIENTMETRICSA *PNONCLIENTMETRICSA;

/* 5613 */
typedef tagNONCLIENTMETRICSA *LPNONCLIENTMETRICSA;

/* 5614 */
struct tagNONCLIENTMETRICSW
{
  UINT cbSize;
  int iBorderWidth;
  int iScrollWidth;
  int iScrollHeight;
  int iCaptionWidth;
  int iCaptionHeight;
  LOGFONTW lfCaptionFont;
  int iSmCaptionWidth;
  int iSmCaptionHeight;
  LOGFONTW lfSmCaptionFont;
  int iMenuWidth;
  int iMenuHeight;
  LOGFONTW lfMenuFont;
  LOGFONTW lfStatusFont;
  LOGFONTW lfMessageFont;
  int iPaddedBorderWidth;
};

/* 5615 */
typedef tagNONCLIENTMETRICSW NONCLIENTMETRICSW;

/* 5616 */
typedef tagNONCLIENTMETRICSW *PNONCLIENTMETRICSW;

/* 5617 */
typedef tagNONCLIENTMETRICSW *LPNONCLIENTMETRICSW;

/* 5618 */
typedef NONCLIENTMETRICSA NONCLIENTMETRICS;

/* 5619 */
typedef PNONCLIENTMETRICSA PNONCLIENTMETRICS;

/* 5620 */
typedef LPNONCLIENTMETRICSA LPNONCLIENTMETRICS;

/* 5621 */
struct tagMINIMIZEDMETRICS
{
  UINT cbSize;
  int iWidth;
  int iHorzGap;
  int iVertGap;
  int iArrange;
};

/* 5622 */
typedef tagMINIMIZEDMETRICS MINIMIZEDMETRICS;

/* 5623 */
typedef tagMINIMIZEDMETRICS *PMINIMIZEDMETRICS;

/* 5624 */
typedef tagMINIMIZEDMETRICS *LPMINIMIZEDMETRICS;

/* 5625 */
struct tagICONMETRICSA
{
  UINT cbSize;
  int iHorzSpacing;
  int iVertSpacing;
  int iTitleWrap;
  LOGFONTA lfFont;
};

/* 5626 */
typedef tagICONMETRICSA ICONMETRICSA;

/* 5627 */
typedef tagICONMETRICSA *PICONMETRICSA;

/* 5628 */
typedef tagICONMETRICSA *LPICONMETRICSA;

/* 5629 */
struct tagICONMETRICSW
{
  UINT cbSize;
  int iHorzSpacing;
  int iVertSpacing;
  int iTitleWrap;
  LOGFONTW lfFont;
};

/* 5630 */
typedef tagICONMETRICSW ICONMETRICSW;

/* 5631 */
typedef tagICONMETRICSW *PICONMETRICSW;

/* 5632 */
typedef tagICONMETRICSW *LPICONMETRICSW;

/* 5633 */
typedef ICONMETRICSA ICONMETRICS;

/* 5634 */
typedef PICONMETRICSA PICONMETRICS;

/* 5635 */
typedef LPICONMETRICSA LPICONMETRICS;

/* 5636 */
struct tagANIMATIONINFO
{
  UINT cbSize;
  int iMinAnimate;
};

/* 5637 */
typedef tagANIMATIONINFO ANIMATIONINFO;

/* 5638 */
typedef tagANIMATIONINFO *LPANIMATIONINFO;

/* 5639 */
struct tagSERIALKEYSA
{
  UINT cbSize;
  DWORD dwFlags;
  LPSTR lpszActivePort;
  LPSTR lpszPort;
  UINT iBaudRate;
  UINT iPortState;
  UINT iActive;
};

/* 5640 */
typedef tagSERIALKEYSA SERIALKEYSA;

/* 5641 */
typedef tagSERIALKEYSA *LPSERIALKEYSA;

/* 5642 */
struct tagSERIALKEYSW
{
  UINT cbSize;
  DWORD dwFlags;
  LPWSTR lpszActivePort;
  LPWSTR lpszPort;
  UINT iBaudRate;
  UINT iPortState;
  UINT iActive;
};

/* 5643 */
typedef tagSERIALKEYSW SERIALKEYSW;

/* 5644 */
typedef tagSERIALKEYSW *LPSERIALKEYSW;

/* 5645 */
typedef SERIALKEYSA SERIALKEYS;

/* 5646 */
typedef LPSERIALKEYSA LPSERIALKEYS;

/* 5647 */
struct tagHIGHCONTRASTA
{
  UINT cbSize;
  DWORD dwFlags;
  LPSTR lpszDefaultScheme;
};

/* 5648 */
typedef tagHIGHCONTRASTA HIGHCONTRASTA;

/* 5649 */
typedef tagHIGHCONTRASTA *LPHIGHCONTRASTA;

/* 5650 */
struct tagHIGHCONTRASTW
{
  UINT cbSize;
  DWORD dwFlags;
  LPWSTR lpszDefaultScheme;
};

/* 5651 */
typedef tagHIGHCONTRASTW HIGHCONTRASTW;

/* 5652 */
typedef tagHIGHCONTRASTW *LPHIGHCONTRASTW;

/* 5653 */
typedef HIGHCONTRASTA HIGHCONTRAST;

/* 5654 */
typedef LPHIGHCONTRASTA LPHIGHCONTRAST;

/* 5655 */
struct _VIDEOPARAMETERS
{
  GUID Guid;
  ULONG dwOffset;
  ULONG dwCommand;
  ULONG dwFlags;
  ULONG dwMode;
  ULONG dwTVStandard;
  ULONG dwAvailableModes;
  ULONG dwAvailableTVStandard;
  ULONG dwFlickerFilter;
  ULONG dwOverScanX;
  ULONG dwOverScanY;
  ULONG dwMaxUnscaledX;
  ULONG dwMaxUnscaledY;
  ULONG dwPositionX;
  ULONG dwPositionY;
  ULONG dwBrightness;
  ULONG dwContrast;
  ULONG dwCPType;
  ULONG dwCPCommand;
  ULONG dwCPStandard;
  ULONG dwCPKey;
  ULONG bCP_APSTriggerBits;
  UCHAR bOEMCopyProtection[256];
};

/* 5656 */
typedef _VIDEOPARAMETERS VIDEOPARAMETERS;

/* 5657 */
typedef _VIDEOPARAMETERS *PVIDEOPARAMETERS;

/* 5658 */
typedef _VIDEOPARAMETERS *LPVIDEOPARAMETERS;

/* 5659 */
struct tagFILTERKEYS
{
  UINT cbSize;
  DWORD dwFlags;
  DWORD iWaitMSec;
  DWORD iDelayMSec;
  DWORD iRepeatMSec;
  DWORD iBounceMSec;
};

/* 5660 */
typedef tagFILTERKEYS FILTERKEYS;

/* 5661 */
typedef tagFILTERKEYS *LPFILTERKEYS;

/* 5662 */
struct tagSTICKYKEYS
{
  UINT cbSize;
  DWORD dwFlags;
};

/* 5663 */
typedef tagSTICKYKEYS STICKYKEYS;

/* 5664 */
typedef tagSTICKYKEYS *LPSTICKYKEYS;

/* 5665 */
struct tagMOUSEKEYS
{
  UINT cbSize;
  DWORD dwFlags;
  DWORD iMaxSpeed;
  DWORD iTimeToMaxSpeed;
  DWORD iCtrlSpeed;
  DWORD dwReserved1;
  DWORD dwReserved2;
};

/* 5666 */
typedef tagMOUSEKEYS MOUSEKEYS;

/* 5667 */
typedef tagMOUSEKEYS *LPMOUSEKEYS;

/* 5668 */
struct tagACCESSTIMEOUT
{
  UINT cbSize;
  DWORD dwFlags;
  DWORD iTimeOutMSec;
};

/* 5669 */
typedef tagACCESSTIMEOUT ACCESSTIMEOUT;

/* 5670 */
typedef tagACCESSTIMEOUT *LPACCESSTIMEOUT;

/* 5671 */
struct tagSOUNDSENTRYA
{
  UINT cbSize;
  DWORD dwFlags;
  DWORD iFSTextEffect;
  DWORD iFSTextEffectMSec;
  DWORD iFSTextEffectColorBits;
  DWORD iFSGrafEffect;
  DWORD iFSGrafEffectMSec;
  DWORD iFSGrafEffectColor;
  DWORD iWindowsEffect;
  DWORD iWindowsEffectMSec;
  LPSTR lpszWindowsEffectDLL;
  DWORD iWindowsEffectOrdinal;
};

/* 5672 */
typedef tagSOUNDSENTRYA SOUNDSENTRYA;

/* 5673 */
typedef tagSOUNDSENTRYA *LPSOUNDSENTRYA;

/* 5674 */
struct tagSOUNDSENTRYW
{
  UINT cbSize;
  DWORD dwFlags;
  DWORD iFSTextEffect;
  DWORD iFSTextEffectMSec;
  DWORD iFSTextEffectColorBits;
  DWORD iFSGrafEffect;
  DWORD iFSGrafEffectMSec;
  DWORD iFSGrafEffectColor;
  DWORD iWindowsEffect;
  DWORD iWindowsEffectMSec;
  LPWSTR lpszWindowsEffectDLL;
  DWORD iWindowsEffectOrdinal;
};

/* 5675 */
typedef tagSOUNDSENTRYW SOUNDSENTRYW;

/* 5676 */
typedef tagSOUNDSENTRYW *LPSOUNDSENTRYW;

/* 5677 */
typedef SOUNDSENTRYA SOUNDSENTRY;

/* 5678 */
typedef LPSOUNDSENTRYA LPSOUNDSENTRY;

/* 5679 */
struct tagTOGGLEKEYS
{
  UINT cbSize;
  DWORD dwFlags;
};

/* 5680 */
typedef tagTOGGLEKEYS TOGGLEKEYS;

/* 5681 */
typedef tagTOGGLEKEYS *LPTOGGLEKEYS;

/* 5682 */
struct tagAUDIODESCRIPTION
{
  UINT cbSize;
  BOOL Enabled;
  LCID Locale;
};

/* 5683 */
typedef tagAUDIODESCRIPTION AUDIODESCRIPTION;

/* 5684 */
typedef tagAUDIODESCRIPTION *LPAUDIODESCRIPTION;

/* 5685 */
struct tagMONITORINFO
{
  DWORD cbSize;
  RECT rcMonitor;
  RECT rcWork;
  DWORD dwFlags;
};

/* 5686 */
typedef tagMONITORINFO MONITORINFO;

/* 5687 */
typedef tagMONITORINFO *LPMONITORINFO;

/* 5688 */
struct __cppobj tagMONITORINFOEXA : tagMONITORINFO
{
  CHAR szDevice[32];
};

/* 5689 */
typedef tagMONITORINFOEXA MONITORINFOEXA;

/* 5690 */
typedef tagMONITORINFOEXA *LPMONITORINFOEXA;

/* 5691 */
struct __cppobj tagMONITORINFOEXW : tagMONITORINFO
{
  WCHAR szDevice[32];
};

/* 5692 */
typedef tagMONITORINFOEXW MONITORINFOEXW;

/* 5693 */
typedef tagMONITORINFOEXW *LPMONITORINFOEXW;

/* 5694 */
typedef MONITORINFOEXA MONITORINFOEX;

/* 5695 */
typedef LPMONITORINFOEXA LPMONITORINFOEX;

/* 5696 */
typedef BOOL (__cdecl *MONITORENUMPROC)(HMONITOR, HDC, LPRECT, LPARAM);

/* 5697 */
typedef void (__cdecl *WINEVENTPROC)(HWINEVENTHOOK, DWORD, HWND, LONG, LONG, DWORD, DWORD);

/* 5698 */
struct tagGUITHREADINFO
{
  DWORD cbSize;
  DWORD flags;
  HWND hwndActive;
  HWND hwndFocus;
  HWND hwndCapture;
  HWND hwndMenuOwner;
  HWND hwndMoveSize;
  HWND hwndCaret;
  RECT rcCaret;
};

/* 5699 */
typedef tagGUITHREADINFO GUITHREADINFO;

/* 5700 */
typedef tagGUITHREADINFO *PGUITHREADINFO;

/* 5701 */
typedef tagGUITHREADINFO *LPGUITHREADINFO;

/* 5702 */
struct tagCURSORINFO
{
  DWORD cbSize;
  DWORD flags;
  HCURSOR hCursor;
  POINT ptScreenPos;
};

/* 5703 */
typedef tagCURSORINFO CURSORINFO;

/* 5704 */
typedef tagCURSORINFO *PCURSORINFO;

/* 5705 */
typedef tagCURSORINFO *LPCURSORINFO;

/* 5706 */
struct tagWINDOWINFO
{
  DWORD cbSize;
  RECT rcWindow;
  RECT rcClient;
  DWORD dwStyle;
  DWORD dwExStyle;
  DWORD dwWindowStatus;
  UINT cxWindowBorders;
  UINT cyWindowBorders;
  ATOM atomWindowType;
  WORD wCreatorVersion;
};

/* 5707 */
typedef tagWINDOWINFO WINDOWINFO;

/* 5708 */
typedef tagWINDOWINFO *PWINDOWINFO;

/* 5709 */
typedef tagWINDOWINFO *LPWINDOWINFO;

/* 5710 */
struct tagTITLEBARINFO
{
  DWORD cbSize;
  RECT rcTitleBar;
  DWORD rgstate[6];
};

/* 5711 */
typedef tagTITLEBARINFO TITLEBARINFO;

/* 5712 */
typedef tagTITLEBARINFO *PTITLEBARINFO;

/* 5713 */
typedef tagTITLEBARINFO *LPTITLEBARINFO;

/* 5714 */
struct tagTITLEBARINFOEX
{
  DWORD cbSize;
  RECT rcTitleBar;
  DWORD rgstate[6];
  RECT rgrect[6];
};

/* 5715 */
typedef tagTITLEBARINFOEX TITLEBARINFOEX;

/* 5716 */
typedef tagTITLEBARINFOEX *PTITLEBARINFOEX;

/* 5717 */
typedef tagTITLEBARINFOEX *LPTITLEBARINFOEX;

/* 5718 */
struct tagMENUBARINFO
{
  DWORD cbSize;
  RECT rcBar;
  HMENU hMenu;
  HWND hwndMenu;
  __int32 fBarFocused : 1;
  __int32 fFocused : 1;
  __int32 fUnused : 30;
};

/* 5719 */
typedef tagMENUBARINFO MENUBARINFO;

/* 5720 */
typedef tagMENUBARINFO *PMENUBARINFO;

/* 5721 */
typedef tagMENUBARINFO *LPMENUBARINFO;

/* 5722 */
struct tagSCROLLBARINFO
{
  DWORD cbSize;
  RECT rcScrollBar;
  int dxyLineButton;
  int xyThumbTop;
  int xyThumbBottom;
  int reserved;
  DWORD rgstate[6];
};

/* 5723 */
typedef tagSCROLLBARINFO SCROLLBARINFO;

/* 5724 */
typedef tagSCROLLBARINFO *PSCROLLBARINFO;

/* 5725 */
typedef tagSCROLLBARINFO *LPSCROLLBARINFO;

/* 5726 */
struct tagCOMBOBOXINFO
{
  DWORD cbSize;
  RECT rcItem;
  RECT rcButton;
  DWORD stateButton;
  HWND hwndCombo;
  HWND hwndItem;
  HWND hwndList;
};

/* 5727 */
typedef tagCOMBOBOXINFO COMBOBOXINFO;

/* 5728 */
typedef tagCOMBOBOXINFO *PCOMBOBOXINFO;

/* 5729 */
typedef tagCOMBOBOXINFO *LPCOMBOBOXINFO;

/* 5730 */
struct tagALTTABINFO
{
  DWORD cbSize;
  int cItems;
  int cColumns;
  int cRows;
  int iColFocus;
  int iRowFocus;
  int cxItem;
  int cyItem;
  POINT ptStart;
};

/* 5731 */
typedef tagALTTABINFO ALTTABINFO;

/* 5732 */
typedef tagALTTABINFO *PALTTABINFO;

/* 5733 */
typedef tagALTTABINFO *LPALTTABINFO;

/* 5734 */
struct HRAWINPUT__
{
  int unused;
};

/* 5735 */
typedef HRAWINPUT__ *HRAWINPUT;

/* 5736 */
struct tagRAWINPUTHEADER
{
  DWORD dwType;
  DWORD dwSize;
  HANDLE hDevice;
  WPARAM wParam;
};

/* 5737 */
typedef tagRAWINPUTHEADER RAWINPUTHEADER;

/* 5738 */
typedef tagRAWINPUTHEADER *PRAWINPUTHEADER;

/* 5739 */
typedef tagRAWINPUTHEADER *LPRAWINPUTHEADER;

/* 5741 */
struct _677A661E4BC7DB67CECA33B4385749C5
{
  USHORT usButtonFlags;
  USHORT usButtonData;
};

/* 5742 */
union tagRAWMOUSE___D16F4B76036832D8B5309DC026E37BC4
{
  ULONG ulButtons;
  struct
  {
    USHORT usButtonFlags;
    USHORT usButtonData;
  };
};

/* 5740 */
struct tagRAWMOUSE
{
  USHORT usFlags;
  union
  {
    ULONG ulButtons;
    struct
    {
      USHORT usButtonFlags;
      USHORT usButtonData;
    };
  };
  ULONG ulRawButtons;
  LONG lLastX;
  LONG lLastY;
  ULONG ulExtraInformation;
};

/* 5743 */
typedef tagRAWMOUSE RAWMOUSE;

/* 5744 */
typedef tagRAWMOUSE *PRAWMOUSE;

/* 5745 */
typedef tagRAWMOUSE *LPRAWMOUSE;

/* 5746 */
struct tagRAWKEYBOARD
{
  USHORT MakeCode;
  USHORT Flags;
  USHORT Reserved;
  USHORT VKey;
  UINT Message;
  ULONG ExtraInformation;
};

/* 5747 */
typedef tagRAWKEYBOARD RAWKEYBOARD;

/* 5748 */
typedef tagRAWKEYBOARD *PRAWKEYBOARD;

/* 5749 */
typedef tagRAWKEYBOARD *LPRAWKEYBOARD;

/* 5750 */
struct tagRAWHID
{
  DWORD dwSizeHid;
  DWORD dwCount;
  BYTE bRawData[1];
};

/* 5751 */
typedef tagRAWHID RAWHID;

/* 5752 */
typedef tagRAWHID *PRAWHID;

/* 5753 */
typedef tagRAWHID *LPRAWHID;

/* 5755 */
union tagRAWINPUT___052B64A875BF00260122F2612F072C5D
{
  RAWMOUSE mouse;
  RAWKEYBOARD keyboard;
  RAWHID hid;
};

/* 5754 */
struct tagRAWINPUT
{
  RAWINPUTHEADER header;
  tagRAWINPUT___052B64A875BF00260122F2612F072C5D data;
};

/* 5756 */
typedef tagRAWINPUT RAWINPUT;

/* 5757 */
typedef tagRAWINPUT *PRAWINPUT;

/* 5758 */
typedef tagRAWINPUT *LPRAWINPUT;

/* 5759 */
struct tagRID_DEVICE_INFO_MOUSE
{
  DWORD dwId;
  DWORD dwNumberOfButtons;
  DWORD dwSampleRate;
  BOOL fHasHorizontalWheel;
};

/* 5760 */
typedef tagRID_DEVICE_INFO_MOUSE RID_DEVICE_INFO_MOUSE;

/* 5761 */
typedef tagRID_DEVICE_INFO_MOUSE *PRID_DEVICE_INFO_MOUSE;

/* 5762 */
struct tagRID_DEVICE_INFO_KEYBOARD
{
  DWORD dwType;
  DWORD dwSubType;
  DWORD dwKeyboardMode;
  DWORD dwNumberOfFunctionKeys;
  DWORD dwNumberOfIndicators;
  DWORD dwNumberOfKeysTotal;
};

/* 5763 */
typedef tagRID_DEVICE_INFO_KEYBOARD RID_DEVICE_INFO_KEYBOARD;

/* 5764 */
typedef tagRID_DEVICE_INFO_KEYBOARD *PRID_DEVICE_INFO_KEYBOARD;

/* 5765 */
struct tagRID_DEVICE_INFO_HID
{
  DWORD dwVendorId;
  DWORD dwProductId;
  DWORD dwVersionNumber;
  USHORT usUsagePage;
  USHORT usUsage;
};

/* 5766 */
typedef tagRID_DEVICE_INFO_HID RID_DEVICE_INFO_HID;

/* 5767 */
typedef tagRID_DEVICE_INFO_HID *PRID_DEVICE_INFO_HID;

/* 5769 */
union tagRID_DEVICE_INFO___AE6C69A71CAB30230B16287457ACEE02
{
  RID_DEVICE_INFO_MOUSE mouse;
  RID_DEVICE_INFO_KEYBOARD keyboard;
  RID_DEVICE_INFO_HID hid;
};

/* 5768 */
struct tagRID_DEVICE_INFO
{
  DWORD cbSize;
  DWORD dwType;
  union
  {
    RID_DEVICE_INFO_MOUSE mouse;
    RID_DEVICE_INFO_KEYBOARD keyboard;
    RID_DEVICE_INFO_HID hid;
  };
};

/* 5770 */
typedef tagRID_DEVICE_INFO RID_DEVICE_INFO;

/* 5771 */
typedef tagRID_DEVICE_INFO *PRID_DEVICE_INFO;

/* 5772 */
typedef tagRID_DEVICE_INFO *LPRID_DEVICE_INFO;

/* 5773 */
struct tagRAWINPUTDEVICE
{
  USHORT usUsagePage;
  USHORT usUsage;
  DWORD dwFlags;
  HWND hwndTarget;
};

/* 5774 */
typedef tagRAWINPUTDEVICE RAWINPUTDEVICE;

/* 5775 */
typedef tagRAWINPUTDEVICE *PRAWINPUTDEVICE;

/* 5776 */
typedef tagRAWINPUTDEVICE *LPRAWINPUTDEVICE;

/* 5777 */
typedef const RAWINPUTDEVICE *PCRAWINPUTDEVICE;

/* 5778 */
struct tagRAWINPUTDEVICELIST
{
  HANDLE hDevice;
  DWORD dwType;
};

/* 5779 */
typedef tagRAWINPUTDEVICELIST RAWINPUTDEVICELIST;

/* 5780 */
typedef tagRAWINPUTDEVICELIST *PRAWINPUTDEVICELIST;

/* 5781 */
enum tagPOINTER_DEVICE_TYPE : unsigned __int32
{
  POINTER_DEVICE_TYPE_INTEGRATED_PEN = 0x1,
  POINTER_DEVICE_TYPE_EXTERNAL_PEN = 0x2,
  POINTER_DEVICE_TYPE_TOUCH = 0x3,
  POINTER_DEVICE_TYPE_TOUCH_PAD = 0x4,
  POINTER_DEVICE_TYPE_MAX = 0xFFFFFFFF,
};

/* 5782 */
typedef tagPOINTER_DEVICE_TYPE POINTER_DEVICE_TYPE;

/* 5783 */
struct tagPOINTER_DEVICE_INFO
{
  DWORD displayOrientation;
  HANDLE device;
  POINTER_DEVICE_TYPE pointerDeviceType;
  HMONITOR monitor;
  ULONG startingCursorId;
  USHORT maxActiveContacts;
  WCHAR productString[520];
};

/* 5784 */
typedef tagPOINTER_DEVICE_INFO POINTER_DEVICE_INFO;

/* 5785 */
struct tagPOINTER_DEVICE_PROPERTY
{
  INT32 logicalMin;
  INT32 logicalMax;
  INT32 physicalMin;
  INT32 physicalMax;
  UINT32 unit;
  UINT32 unitExponent;
  USHORT usagePageId;
  USHORT usageId;
};

/* 5786 */
typedef tagPOINTER_DEVICE_PROPERTY POINTER_DEVICE_PROPERTY;

/* 5787 */
enum tagPOINTER_DEVICE_CURSOR_TYPE : unsigned __int32
{
  POINTER_DEVICE_CURSOR_TYPE_UNKNOWN = 0x0,
  POINTER_DEVICE_CURSOR_TYPE_TIP = 0x1,
  POINTER_DEVICE_CURSOR_TYPE_ERASER = 0x2,
  POINTER_DEVICE_CURSOR_TYPE_MAX = 0xFFFFFFFF,
};

/* 5788 */
typedef tagPOINTER_DEVICE_CURSOR_TYPE POINTER_DEVICE_CURSOR_TYPE;

/* 5789 */
struct tagPOINTER_DEVICE_CURSOR_INFO
{
  UINT32 cursorId;
  POINTER_DEVICE_CURSOR_TYPE cursor;
};

/* 5790 */
typedef tagPOINTER_DEVICE_CURSOR_INFO POINTER_DEVICE_CURSOR_INFO;

/* 5791 */
struct tagCHANGEFILTERSTRUCT
{
  DWORD cbSize;
  DWORD ExtStatus;
};

/* 5792 */
typedef tagCHANGEFILTERSTRUCT CHANGEFILTERSTRUCT;

/* 5793 */
typedef tagCHANGEFILTERSTRUCT *PCHANGEFILTERSTRUCT;

/* 5794 */
struct HGESTUREINFO__
{
  int unused;
};

/* 5795 */
typedef HGESTUREINFO__ *HGESTUREINFO;

/* 5796 */
struct tagGESTUREINFO
{
  UINT cbSize;
  DWORD dwFlags;
  DWORD dwID;
  HWND hwndTarget;
  POINTS ptsLocation;
  DWORD dwInstanceID;
  DWORD dwSequenceID;
  ULONGLONG ullArguments;
  UINT cbExtraArgs;
};

/* 5797 */
typedef tagGESTUREINFO GESTUREINFO;

/* 5798 */
typedef tagGESTUREINFO *PGESTUREINFO;

/* 5799 */
typedef const GESTUREINFO *PCGESTUREINFO;

/* 5800 */
struct tagGESTURENOTIFYSTRUCT
{
  UINT cbSize;
  DWORD dwFlags;
  HWND hwndTarget;
  POINTS ptsLocation;
  DWORD dwInstanceID;
};

/* 5801 */
typedef tagGESTURENOTIFYSTRUCT GESTURENOTIFYSTRUCT;

/* 5802 */
typedef tagGESTURENOTIFYSTRUCT *PGESTURENOTIFYSTRUCT;

/* 5803 */
struct tagGESTURECONFIG
{
  DWORD dwID;
  DWORD dwWant;
  DWORD dwBlock;
};

/* 5804 */
typedef tagGESTURECONFIG GESTURECONFIG;

/* 5805 */
typedef tagGESTURECONFIG *PGESTURECONFIG;

/* 5806 */
enum tagINPUT_MESSAGE_DEVICE_TYPE : unsigned __int32
{
  IMDT_UNAVAILABLE = 0x0,
  IMDT_KEYBOARD = 0x1,
  IMDT_MOUSE = 0x2,
  IMDT_TOUCH = 0x4,
  IMDT_PEN = 0x8,
  IMDT_TOUCHPAD = 0x10,
};

/* 5807 */
typedef tagINPUT_MESSAGE_DEVICE_TYPE INPUT_MESSAGE_DEVICE_TYPE;

/* 5808 */
enum tagINPUT_MESSAGE_ORIGIN_ID : unsigned __int32
{
  IMO_UNAVAILABLE = 0x0,
  IMO_HARDWARE = 0x1,
  IMO_INJECTED = 0x2,
  IMO_SYSTEM = 0x4,
};

/* 5809 */
typedef tagINPUT_MESSAGE_ORIGIN_ID INPUT_MESSAGE_ORIGIN_ID;

/* 5810 */
struct tagINPUT_MESSAGE_SOURCE
{
  INPUT_MESSAGE_DEVICE_TYPE deviceType;
  INPUT_MESSAGE_ORIGIN_ID originId;
};

/* 5811 */
typedef tagINPUT_MESSAGE_SOURCE INPUT_MESSAGE_SOURCE;

/* 5812 */
enum tagAR_STATE : unsigned __int32
{
  AR_ENABLED = 0x0,
  AR_DISABLED = 0x1,
  AR_SUPPRESSED = 0x2,
  AR_REMOTESESSION = 0x4,
  AR_MULTIMON = 0x8,
  AR_NOSENSOR = 0x10,
  AR_NOT_SUPPORTED = 0x20,
  AR_DOCKED = 0x40,
  AR_LAPTOP = 0x80,
};

/* 5813 */
typedef tagAR_STATE AR_STATE;

/* 5814 */
typedef tagAR_STATE *PAR_STATE;

/* 5815 */
enum ORIENTATION_PREFERENCE : unsigned __int32
{
  ORIENTATION_PREFERENCE_NONE = 0x0,
  ORIENTATION_PREFERENCE_LANDSCAPE = 0x1,
  ORIENTATION_PREFERENCE_PORTRAIT = 0x2,
  ORIENTATION_PREFERENCE_LANDSCAPE_FLIPPED = 0x4,
  ORIENTATION_PREFERENCE_PORTRAIT_FLIPPED = 0x8,
};

/* 5816 */
typedef DWORD LGRPID;

/* 5817 */
typedef DWORD LCTYPE;

/* 5818 */
typedef DWORD CALTYPE;

/* 5819 */
typedef DWORD CALID;

/* 5820 */
struct _cpinfo
{
  UINT MaxCharSize;
  BYTE DefaultChar[2];
  BYTE LeadByte[12];
};

/* 5821 */
typedef _cpinfo CPINFO;

/* 5822 */
typedef _cpinfo *LPCPINFO;

/* 5823 */
typedef DWORD GEOTYPE;

/* 5824 */
typedef DWORD GEOCLASS;

/* 5825 */
typedef LONG GEOID;

/* 5826 */
struct _cpinfoexA
{
  UINT MaxCharSize;
  BYTE DefaultChar[2];
  BYTE LeadByte[12];
  WCHAR UnicodeDefaultChar;
  UINT CodePage;
  CHAR CodePageName[260];
};

/* 5827 */
typedef _cpinfoexA CPINFOEXA;

/* 5828 */
typedef _cpinfoexA *LPCPINFOEXA;

/* 5829 */
struct _cpinfoexW
{
  UINT MaxCharSize;
  BYTE DefaultChar[2];
  BYTE LeadByte[12];
  WCHAR UnicodeDefaultChar;
  UINT CodePage;
  WCHAR CodePageName[260];
};

/* 5830 */
typedef _cpinfoexW CPINFOEXW;

/* 5831 */
typedef _cpinfoexW *LPCPINFOEXW;

/* 5832 */
typedef CPINFOEXA CPINFOEX;

/* 5833 */
typedef LPCPINFOEXA LPCPINFOEX;

/* 5834 */
struct _numberfmtA
{
  UINT NumDigits;
  UINT LeadingZero;
  UINT Grouping;
  LPSTR lpDecimalSep;
  LPSTR lpThousandSep;
  UINT NegativeOrder;
};

/* 5835 */
typedef _numberfmtA NUMBERFMTA;

/* 5836 */
typedef _numberfmtA *LPNUMBERFMTA;

/* 5837 */
struct _numberfmtW
{
  UINT NumDigits;
  UINT LeadingZero;
  UINT Grouping;
  LPWSTR lpDecimalSep;
  LPWSTR lpThousandSep;
  UINT NegativeOrder;
};

/* 5838 */
typedef _numberfmtW NUMBERFMTW;

/* 5839 */
typedef _numberfmtW *LPNUMBERFMTW;

/* 5840 */
typedef NUMBERFMTA NUMBERFMT;

/* 5841 */
typedef LPNUMBERFMTA LPNUMBERFMT;

/* 5842 */
struct _currencyfmtA
{
  UINT NumDigits;
  UINT LeadingZero;
  UINT Grouping;
  LPSTR lpDecimalSep;
  LPSTR lpThousandSep;
  UINT NegativeOrder;
  UINT PositiveOrder;
  LPSTR lpCurrencySymbol;
};

/* 5843 */
typedef _currencyfmtA CURRENCYFMTA;

/* 5844 */
typedef _currencyfmtA *LPCURRENCYFMTA;

/* 5845 */
struct _currencyfmtW
{
  UINT NumDigits;
  UINT LeadingZero;
  UINT Grouping;
  LPWSTR lpDecimalSep;
  LPWSTR lpThousandSep;
  UINT NegativeOrder;
  UINT PositiveOrder;
  LPWSTR lpCurrencySymbol;
};

/* 5846 */
typedef _currencyfmtW CURRENCYFMTW;

/* 5847 */
typedef _currencyfmtW *LPCURRENCYFMTW;

/* 5848 */
typedef CURRENCYFMTA CURRENCYFMT;

/* 5849 */
typedef LPCURRENCYFMTA LPCURRENCYFMT;

/* 5850 */
enum SYSNLS_FUNCTION : unsigned __int32
{
  COMPARE_STRING = 0x1,
};

/* 5851 */
typedef DWORD NLS_FUNCTION;

/* 5852 */
struct _nlsversioninfo
{
  DWORD dwNLSVersionInfoSize;
  DWORD dwNLSVersion;
  DWORD dwDefinedVersion;
  DWORD dwEffectiveId;
  GUID guidCustomVersion;
};

/* 5853 */
typedef _nlsversioninfo NLSVERSIONINFO;

/* 5854 */
typedef _nlsversioninfo *LPNLSVERSIONINFO;

/* 5855 */
struct _nlsversioninfoex
{
  DWORD dwNLSVersionInfoSize;
  DWORD dwNLSVersion;
  DWORD dwDefinedVersion;
  DWORD dwEffectiveId;
  GUID guidCustomVersion;
};

/* 5856 */
typedef _nlsversioninfoex NLSVERSIONINFOEX;

/* 5857 */
typedef _nlsversioninfoex *LPNLSVERSIONINFOEX;

/* 5858 */
enum SYSGEOTYPE : unsigned __int32
{
  GEO_NATION = 0x1,
  GEO_LATITUDE = 0x2,
  GEO_LONGITUDE = 0x3,
  GEO_ISO2 = 0x4,
  GEO_ISO3 = 0x5,
  GEO_RFC1766 = 0x6,
  GEO_LCID = 0x7,
  GEO_FRIENDLYNAME = 0x8,
  GEO_OFFICIALNAME = 0x9,
  GEO_TIMEZONES = 0xA,
  GEO_OFFICIALLANGUAGES = 0xB,
  GEO_ISO_UN_NUMBER = 0xC,
  GEO_PARENT = 0xD,
  GEO_DIALINGCODE = 0xE,
  GEO_CURRENCYCODE = 0xF,
  GEO_CURRENCYSYMBOL = 0x10,
  GEO_NAME = 0x11,
  GEO_ID = 0x12,
};

/* 5859 */
enum SYSGEOCLASS : unsigned __int32
{
  GEOCLASS_NATION = 0x10,
  GEOCLASS_REGION = 0xE,
  GEOCLASS_ALL = 0x0,
};

/* 5860 */
typedef BOOL (__cdecl *LOCALE_ENUMPROCA)(LPSTR);

/* 5861 */
typedef BOOL (__cdecl *LOCALE_ENUMPROCW)(LPWSTR);

/* 5862 */
enum _NORM_FORM : unsigned __int32
{
  NormalizationOther = 0x0,
  NormalizationC = 0x1,
  NormalizationD = 0x2,
  NormalizationKC = 0x5,
  NormalizationKD = 0x6,
};

/* 5863 */
typedef _NORM_FORM NORM_FORM;

/* 5864 */
typedef BOOL (__cdecl *LANGUAGEGROUP_ENUMPROCA)(LGRPID, LPSTR, LPSTR, DWORD, LONG_PTR);

/* 5865 */
typedef BOOL (__cdecl *LANGGROUPLOCALE_ENUMPROCA)(LGRPID, LCID, LPSTR, LONG_PTR);

/* 5866 */
typedef BOOL (__cdecl *UILANGUAGE_ENUMPROCA)(LPSTR, LONG_PTR);

/* 5867 */
typedef BOOL (__cdecl *CODEPAGE_ENUMPROCA)(LPSTR);

/* 5868 */
typedef BOOL (__cdecl *DATEFMT_ENUMPROCA)(LPSTR);

/* 5869 */
typedef BOOL (__cdecl *DATEFMT_ENUMPROCEXA)(LPSTR, CALID);

/* 5870 */
typedef BOOL (__cdecl *TIMEFMT_ENUMPROCA)(LPSTR);

/* 5871 */
typedef BOOL (__cdecl *CALINFO_ENUMPROCA)(LPSTR);

/* 5872 */
typedef BOOL (__cdecl *CALINFO_ENUMPROCEXA)(LPSTR, CALID);

/* 5873 */
typedef BOOL (__cdecl *LANGUAGEGROUP_ENUMPROCW)(LGRPID, LPWSTR, LPWSTR, DWORD, LONG_PTR);

/* 5874 */
typedef BOOL (__cdecl *LANGGROUPLOCALE_ENUMPROCW)(LGRPID, LCID, LPWSTR, LONG_PTR);

/* 5875 */
typedef BOOL (__cdecl *UILANGUAGE_ENUMPROCW)(LPWSTR, LONG_PTR);

/* 5876 */
typedef BOOL (__cdecl *CODEPAGE_ENUMPROCW)(LPWSTR);

/* 5877 */
typedef BOOL (__cdecl *DATEFMT_ENUMPROCW)(LPWSTR);

/* 5878 */
typedef BOOL (__cdecl *DATEFMT_ENUMPROCEXW)(LPWSTR, CALID);

/* 5879 */
typedef BOOL (__cdecl *TIMEFMT_ENUMPROCW)(LPWSTR);

/* 5880 */
typedef BOOL (__cdecl *CALINFO_ENUMPROCW)(LPWSTR);

/* 5881 */
typedef BOOL (__cdecl *CALINFO_ENUMPROCEXW)(LPWSTR, CALID);

/* 5882 */
typedef BOOL (__cdecl *GEO_ENUMPROC)(GEOID);

/* 5883 */
typedef BOOL (__cdecl *GEO_ENUMNAMEPROC)(PWSTR, LPARAM);

/* 5884 */
struct _FILEMUIINFO
{
  DWORD dwSize;
  DWORD dwVersion;
  DWORD dwFileType;
  BYTE pChecksum[16];
  BYTE pServiceChecksum[16];
  DWORD dwLanguageNameOffset;
  DWORD dwTypeIDMainSize;
  DWORD dwTypeIDMainOffset;
  DWORD dwTypeNameMainOffset;
  DWORD dwTypeIDMUISize;
  DWORD dwTypeIDMUIOffset;
  DWORD dwTypeNameMUIOffset;
  BYTE abBuffer[8];
};

/* 5885 */
typedef _FILEMUIINFO FILEMUIINFO;

/* 5886 */
typedef _FILEMUIINFO *PFILEMUIINFO;

/* 5887 */
struct HSAVEDUILANGUAGES__
{
  int unused;
};

/* 5888 */
typedef HSAVEDUILANGUAGES__ *HSAVEDUILANGUAGES;

/* 5889 */
typedef BOOL (__cdecl *CALINFO_ENUMPROCEXEX)(LPWSTR, CALID, LPWSTR, LPARAM);

/* 5890 */
typedef BOOL (__cdecl *DATEFMT_ENUMPROCEXEX)(LPWSTR, CALID, LPARAM);

/* 5891 */
typedef BOOL (__cdecl *TIMEFMT_ENUMPROCEX)(LPWSTR, LPARAM);

/* 5892 */
typedef BOOL (__cdecl *LOCALE_ENUMPROCEX)(LPWSTR, DWORD, LPARAM);

/* 5893 */
struct _COORD
{
  SHORT X;
  SHORT Y;
};

/* 5894 */
typedef _COORD COORD;

/* 5895 */
typedef _COORD *PCOORD;

/* 5896 */
struct _SMALL_RECT
{
  SHORT Left;
  SHORT Top;
  SHORT Right;
  SHORT Bottom;
};

/* 5897 */
typedef _SMALL_RECT SMALL_RECT;

/* 5898 */
typedef _SMALL_RECT *PSMALL_RECT;

/* 5900 */
union _KEY_EVENT_RECORD___6865AF651A3BEAEC02D0CF34CD163F4C
{
  WCHAR UnicodeChar;
  CHAR AsciiChar;
};

/* 5899 */
struct _KEY_EVENT_RECORD
{
  BOOL bKeyDown;
  WORD wRepeatCount;
  WORD wVirtualKeyCode;
  WORD wVirtualScanCode;
  _KEY_EVENT_RECORD___6865AF651A3BEAEC02D0CF34CD163F4C uChar;
  DWORD dwControlKeyState;
};

/* 5901 */
typedef _KEY_EVENT_RECORD KEY_EVENT_RECORD;

/* 5902 */
typedef _KEY_EVENT_RECORD *PKEY_EVENT_RECORD;

/* 5903 */
struct _MOUSE_EVENT_RECORD
{
  COORD dwMousePosition;
  DWORD dwButtonState;
  DWORD dwControlKeyState;
  DWORD dwEventFlags;
};

/* 5904 */
typedef _MOUSE_EVENT_RECORD MOUSE_EVENT_RECORD;

/* 5905 */
typedef _MOUSE_EVENT_RECORD *PMOUSE_EVENT_RECORD;

/* 5906 */
struct _WINDOW_BUFFER_SIZE_RECORD
{
  COORD dwSize;
};

/* 5907 */
typedef _WINDOW_BUFFER_SIZE_RECORD WINDOW_BUFFER_SIZE_RECORD;

/* 5908 */
typedef _WINDOW_BUFFER_SIZE_RECORD *PWINDOW_BUFFER_SIZE_RECORD;

/* 5909 */
struct _MENU_EVENT_RECORD
{
  UINT dwCommandId;
};

/* 5910 */
typedef _MENU_EVENT_RECORD MENU_EVENT_RECORD;

/* 5911 */
typedef _MENU_EVENT_RECORD *PMENU_EVENT_RECORD;

/* 5912 */
struct _FOCUS_EVENT_RECORD
{
  BOOL bSetFocus;
};

/* 5913 */
typedef _FOCUS_EVENT_RECORD FOCUS_EVENT_RECORD;

/* 5914 */
typedef _FOCUS_EVENT_RECORD *PFOCUS_EVENT_RECORD;

/* 5916 */
union _INPUT_RECORD___BC370DB86BCA335F1D16EEE9563B3E68
{
  KEY_EVENT_RECORD KeyEvent;
  MOUSE_EVENT_RECORD MouseEvent;
  WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
  MENU_EVENT_RECORD MenuEvent;
  FOCUS_EVENT_RECORD FocusEvent;
};

/* 5915 */
struct _INPUT_RECORD
{
  WORD EventType;
  _INPUT_RECORD___BC370DB86BCA335F1D16EEE9563B3E68 Event;
};

/* 5917 */
typedef _INPUT_RECORD INPUT_RECORD;

/* 5918 */
typedef _INPUT_RECORD *PINPUT_RECORD;

/* 5920 */
union _CHAR_INFO___6865AF651A3BEAEC02D0CF34CD163F4C
{
  WCHAR UnicodeChar;
  CHAR AsciiChar;
};

/* 5919 */
struct _CHAR_INFO
{
  _CHAR_INFO___6865AF651A3BEAEC02D0CF34CD163F4C Char;
  WORD Attributes;
};

/* 5921 */
typedef _CHAR_INFO CHAR_INFO;

/* 5922 */
typedef _CHAR_INFO *PCHAR_INFO;

/* 5923 */
struct _CONSOLE_FONT_INFO
{
  DWORD nFont;
  COORD dwFontSize;
};

/* 5924 */
typedef _CONSOLE_FONT_INFO CONSOLE_FONT_INFO;

/* 5925 */
typedef _CONSOLE_FONT_INFO *PCONSOLE_FONT_INFO;

/* 5926 */
typedef void *HPCON;

/* 5927 */
struct _CONSOLE_READCONSOLE_CONTROL
{
  ULONG nLength;
  ULONG nInitialChars;
  ULONG dwCtrlWakeupMask;
  ULONG dwControlKeyState;
};

/* 5928 */
typedef _CONSOLE_READCONSOLE_CONTROL CONSOLE_READCONSOLE_CONTROL;

/* 5929 */
typedef _CONSOLE_READCONSOLE_CONTROL *PCONSOLE_READCONSOLE_CONTROL;

/* 5930 */
typedef BOOL (__cdecl *PHANDLER_ROUTINE)(DWORD);

/* 5931 */
struct _CONSOLE_CURSOR_INFO
{
  DWORD dwSize;
  BOOL bVisible;
};

/* 5932 */
typedef _CONSOLE_CURSOR_INFO CONSOLE_CURSOR_INFO;

/* 5933 */
typedef _CONSOLE_CURSOR_INFO *PCONSOLE_CURSOR_INFO;

/* 5934 */
struct _CONSOLE_SCREEN_BUFFER_INFO
{
  COORD dwSize;
  COORD dwCursorPosition;
  WORD wAttributes;
  SMALL_RECT srWindow;
  COORD dwMaximumWindowSize;
};

/* 5935 */
typedef _CONSOLE_SCREEN_BUFFER_INFO CONSOLE_SCREEN_BUFFER_INFO;

/* 5936 */
typedef _CONSOLE_SCREEN_BUFFER_INFO *PCONSOLE_SCREEN_BUFFER_INFO;

/* 5937 */
struct _CONSOLE_SCREEN_BUFFER_INFOEX
{
  ULONG cbSize;
  COORD dwSize;
  COORD dwCursorPosition;
  WORD wAttributes;
  SMALL_RECT srWindow;
  COORD dwMaximumWindowSize;
  WORD wPopupAttributes;
  BOOL bFullscreenSupported;
  COLORREF ColorTable[16];
};

/* 5938 */
typedef _CONSOLE_SCREEN_BUFFER_INFOEX CONSOLE_SCREEN_BUFFER_INFOEX;

/* 5939 */
typedef _CONSOLE_SCREEN_BUFFER_INFOEX *PCONSOLE_SCREEN_BUFFER_INFOEX;

/* 5940 */
struct _CONSOLE_FONT_INFOEX
{
  ULONG cbSize;
  DWORD nFont;
  COORD dwFontSize;
  UINT FontFamily;
  UINT FontWeight;
  WCHAR FaceName[32];
};

/* 5941 */
typedef _CONSOLE_FONT_INFOEX CONSOLE_FONT_INFOEX;

/* 5942 */
typedef _CONSOLE_FONT_INFOEX *PCONSOLE_FONT_INFOEX;

/* 5943 */
struct _CONSOLE_SELECTION_INFO
{
  DWORD dwFlags;
  COORD dwSelectionAnchor;
  SMALL_RECT srSelection;
};

/* 5944 */
typedef _CONSOLE_SELECTION_INFO CONSOLE_SELECTION_INFO;

/* 5945 */
typedef _CONSOLE_SELECTION_INFO *PCONSOLE_SELECTION_INFO;

/* 5946 */
struct _CONSOLE_HISTORY_INFO
{
  UINT cbSize;
  UINT HistoryBufferSize;
  UINT NumberOfHistoryBuffers;
  DWORD dwFlags;
};

/* 5947 */
typedef _CONSOLE_HISTORY_INFO CONSOLE_HISTORY_INFO;

/* 5948 */
typedef _CONSOLE_HISTORY_INFO *PCONSOLE_HISTORY_INFO;

/* 5949 */
struct tagVS_FIXEDFILEINFO
{
  DWORD dwSignature;
  DWORD dwStrucVersion;
  DWORD dwFileVersionMS;
  DWORD dwFileVersionLS;
  DWORD dwProductVersionMS;
  DWORD dwProductVersionLS;
  DWORD dwFileFlagsMask;
  DWORD dwFileFlags;
  DWORD dwFileOS;
  DWORD dwFileType;
  DWORD dwFileSubtype;
  DWORD dwFileDateMS;
  DWORD dwFileDateLS;
};

/* 5950 */
typedef tagVS_FIXEDFILEINFO VS_FIXEDFILEINFO;

/* 5951 */
typedef LONG LSTATUS;

/* 5952 */
typedef ACCESS_MASK REGSAM;

/* 5953 */
struct val_context
{
  int valuelen;
  LPVOID value_context;
  LPVOID val_buff_ptr;
};

/* 5954 */
typedef val_context *PVALCONTEXT;

/* 5955 */
struct pvalueA
{
  LPSTR pv_valuename;
  int pv_valuelen;
  LPVOID pv_value_context;
  DWORD pv_type;
};

/* 5956 */
typedef pvalueA PVALUEA;

/* 5957 */
typedef pvalueA *PPVALUEA;

/* 5958 */
struct pvalueW
{
  LPWSTR pv_valuename;
  int pv_valuelen;
  LPVOID pv_value_context;
  DWORD pv_type;
};

/* 5959 */
typedef pvalueW PVALUEW;

/* 5960 */
typedef pvalueW *PPVALUEW;

/* 5961 */
typedef PVALUEA PVALUE;

/* 5962 */
typedef PPVALUEA PPVALUE;

/* 5963 */
typedef DWORD __cdecl _E97FFAC4D53CD96D3B8FD35DF59ADA29(LPVOID, PVALCONTEXT, DWORD, LPVOID, DWORD *, DWORD);

/* 5964 */
typedef DWORD (__cdecl *PQUERYHANDLER)(LPVOID, PVALCONTEXT, DWORD, LPVOID, DWORD *, DWORD);

/* 5965 */
struct provider_info
{
  PQUERYHANDLER pi_R0_1val;
  PQUERYHANDLER pi_R0_allvals;
  PQUERYHANDLER pi_R3_1val;
  PQUERYHANDLER pi_R3_allvals;
  DWORD pi_flags;
  LPVOID pi_key_context;
};

/* 5966 */
typedef provider_info REG_PROVIDER;

/* 5967 */
typedef provider_info *PPROVIDER;

/* 5968 */
struct value_entA
{
  LPSTR ve_valuename;
  DWORD ve_valuelen;
  DWORD_PTR ve_valueptr;
  DWORD ve_type;
};

/* 5969 */
typedef value_entA VALENTA;

/* 5970 */
typedef value_entA *PVALENTA;

/* 5971 */
struct value_entW
{
  LPWSTR ve_valuename;
  DWORD ve_valuelen;
  DWORD_PTR ve_valueptr;
  DWORD ve_type;
};

/* 5972 */
typedef value_entW VALENTW;

/* 5973 */
typedef value_entW *PVALENTW;

/* 5974 */
typedef VALENTA VALENT;

/* 5975 */
typedef PVALENTA PVALENT;

/* 5976 */
struct _NETRESOURCEA
{
  DWORD dwScope;
  DWORD dwType;
  DWORD dwDisplayType;
  DWORD dwUsage;
  LPSTR lpLocalName;
  LPSTR lpRemoteName;
  LPSTR lpComment;
  LPSTR lpProvider;
};

/* 5977 */
typedef _NETRESOURCEA NETRESOURCEA;

/* 5978 */
typedef _NETRESOURCEA *LPNETRESOURCEA;

/* 5979 */
struct _NETRESOURCEW
{
  DWORD dwScope;
  DWORD dwType;
  DWORD dwDisplayType;
  DWORD dwUsage;
  LPWSTR lpLocalName;
  LPWSTR lpRemoteName;
  LPWSTR lpComment;
  LPWSTR lpProvider;
};

/* 5980 */
typedef _NETRESOURCEW NETRESOURCEW;

/* 5981 */
typedef _NETRESOURCEW *LPNETRESOURCEW;

/* 5982 */
typedef NETRESOURCEA NETRESOURCE;

/* 5983 */
typedef LPNETRESOURCEA LPNETRESOURCE;

/* 5984 */
struct _CONNECTDLGSTRUCTA
{
  DWORD cbStructure;
  HWND hwndOwner;
  LPNETRESOURCEA lpConnRes;
  DWORD dwFlags;
  DWORD dwDevNum;
};

/* 5985 */
typedef _CONNECTDLGSTRUCTA CONNECTDLGSTRUCTA;

/* 5986 */
typedef _CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCTA;

/* 5987 */
struct _CONNECTDLGSTRUCTW
{
  DWORD cbStructure;
  HWND hwndOwner;
  LPNETRESOURCEW lpConnRes;
  DWORD dwFlags;
  DWORD dwDevNum;
};

/* 5988 */
typedef _CONNECTDLGSTRUCTW CONNECTDLGSTRUCTW;

/* 5989 */
typedef _CONNECTDLGSTRUCTW *LPCONNECTDLGSTRUCTW;

/* 5990 */
typedef CONNECTDLGSTRUCTA CONNECTDLGSTRUCT;

/* 5991 */
typedef LPCONNECTDLGSTRUCTA LPCONNECTDLGSTRUCT;

/* 5992 */
struct _DISCDLGSTRUCTA
{
  DWORD cbStructure;
  HWND hwndOwner;
  LPSTR lpLocalName;
  LPSTR lpRemoteName;
  DWORD dwFlags;
};

/* 5993 */
typedef _DISCDLGSTRUCTA DISCDLGSTRUCTA;

/* 5994 */
typedef _DISCDLGSTRUCTA *LPDISCDLGSTRUCTA;

/* 5995 */
struct _DISCDLGSTRUCTW
{
  DWORD cbStructure;
  HWND hwndOwner;
  LPWSTR lpLocalName;
  LPWSTR lpRemoteName;
  DWORD dwFlags;
};

/* 5996 */
typedef _DISCDLGSTRUCTW DISCDLGSTRUCTW;

/* 5997 */
typedef _DISCDLGSTRUCTW *LPDISCDLGSTRUCTW;

/* 5998 */
typedef DISCDLGSTRUCTA DISCDLGSTRUCT;

/* 5999 */
typedef LPDISCDLGSTRUCTA LPDISCDLGSTRUCT;

/* 6000 */
struct _UNIVERSAL_NAME_INFOA
{
  LPSTR lpUniversalName;
};

/* 6001 */
typedef _UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFOA;

/* 6002 */
typedef _UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFOA;

/* 6003 */
struct _UNIVERSAL_NAME_INFOW
{
  LPWSTR lpUniversalName;
};

/* 6004 */
typedef _UNIVERSAL_NAME_INFOW UNIVERSAL_NAME_INFOW;

/* 6005 */
typedef _UNIVERSAL_NAME_INFOW *LPUNIVERSAL_NAME_INFOW;

/* 6006 */
typedef UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFO;

/* 6007 */
typedef LPUNIVERSAL_NAME_INFOA LPUNIVERSAL_NAME_INFO;

/* 6008 */
struct _REMOTE_NAME_INFOA
{
  LPSTR lpUniversalName;
  LPSTR lpConnectionName;
  LPSTR lpRemainingPath;
};

/* 6009 */
typedef _REMOTE_NAME_INFOA REMOTE_NAME_INFOA;

/* 6010 */
typedef _REMOTE_NAME_INFOA *LPREMOTE_NAME_INFOA;

/* 6011 */
struct _REMOTE_NAME_INFOW
{
  LPWSTR lpUniversalName;
  LPWSTR lpConnectionName;
  LPWSTR lpRemainingPath;
};

/* 6012 */
typedef _REMOTE_NAME_INFOW REMOTE_NAME_INFOW;

/* 6013 */
typedef _REMOTE_NAME_INFOW *LPREMOTE_NAME_INFOW;

/* 6014 */
typedef REMOTE_NAME_INFOA REMOTE_NAME_INFO;

/* 6015 */
typedef LPREMOTE_NAME_INFOA LPREMOTE_NAME_INFO;

/* 6016 */
struct _NETINFOSTRUCT
{
  DWORD cbStructure;
  DWORD dwProviderVersion;
  DWORD dwStatus;
  DWORD dwCharacteristics;
  ULONG_PTR dwHandle;
  WORD wNetType;
  DWORD dwPrinters;
  DWORD dwDrives;
};

/* 6017 */
typedef _NETINFOSTRUCT NETINFOSTRUCT;

/* 6018 */
typedef _NETINFOSTRUCT *LPNETINFOSTRUCT;

/* 6019 */
struct _NETCONNECTINFOSTRUCT
{
  DWORD cbStructure;
  DWORD dwFlags;
  DWORD dwSpeed;
  DWORD dwDelay;
  DWORD dwOptDataSize;
};

/* 6020 */
typedef _NETCONNECTINFOSTRUCT NETCONNECTINFOSTRUCT;

/* 6021 */
typedef _NETCONNECTINFOSTRUCT *LPNETCONNECTINFOSTRUCT;

/* 6022 */
typedef const WCHAR *PUWSTR_C;

/* 6023 */
struct SERVICE_TRIGGER_CUSTOM_STATE_ID
{
  DWORD Data[2];
};

/* 6025 */
struct _E99838163ECB7E7B1035AEA9B1267B46
{
  DWORD DataOffset;
  BYTE Data[1];
};

/* 6026 */
union _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM___79768E4F68CBD00179EF5BE8FD6925FD
{
  SERVICE_TRIGGER_CUSTOM_STATE_ID CustomStateId;
  _E99838163ECB7E7B1035AEA9B1267B46 s;
};

/* 6024 */
struct _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM
{
  _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM___79768E4F68CBD00179EF5BE8FD6925FD u;
};

/* 6027 */
typedef _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM;

/* 6028 */
typedef _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM *LPSERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM;

/* 6029 */
struct _SERVICE_DESCRIPTIONA
{
  LPSTR lpDescription;
};

/* 6030 */
typedef _SERVICE_DESCRIPTIONA SERVICE_DESCRIPTIONA;

/* 6031 */
typedef _SERVICE_DESCRIPTIONA *LPSERVICE_DESCRIPTIONA;

/* 6032 */
struct _SERVICE_DESCRIPTIONW
{
  LPWSTR lpDescription;
};

/* 6033 */
typedef _SERVICE_DESCRIPTIONW SERVICE_DESCRIPTIONW;

/* 6034 */
typedef _SERVICE_DESCRIPTIONW *LPSERVICE_DESCRIPTIONW;

/* 6035 */
typedef SERVICE_DESCRIPTIONA SERVICE_DESCRIPTION;

/* 6036 */
typedef LPSERVICE_DESCRIPTIONA LPSERVICE_DESCRIPTION;

/* 6037 */
enum _SC_ACTION_TYPE : unsigned __int32
{
  SC_ACTION_NONE = 0x0,
  SC_ACTION_RESTART = 0x1,
  SC_ACTION_REBOOT = 0x2,
  SC_ACTION_RUN_COMMAND = 0x3,
  SC_ACTION_OWN_RESTART = 0x4,
};

/* 6038 */
typedef _SC_ACTION_TYPE SC_ACTION_TYPE;

/* 6039 */
struct _SC_ACTION
{
  SC_ACTION_TYPE Type;
  DWORD Delay;
};

/* 6040 */
typedef _SC_ACTION SC_ACTION;

/* 6041 */
typedef _SC_ACTION *LPSC_ACTION;

/* 6042 */
struct _SERVICE_FAILURE_ACTIONSA
{
  DWORD dwResetPeriod;
  LPSTR lpRebootMsg;
  LPSTR lpCommand;
  DWORD cActions;
  SC_ACTION *lpsaActions;
};

/* 6043 */
typedef _SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONSA;

/* 6044 */
typedef _SERVICE_FAILURE_ACTIONSA *LPSERVICE_FAILURE_ACTIONSA;

/* 6045 */
struct _SERVICE_FAILURE_ACTIONSW
{
  DWORD dwResetPeriod;
  LPWSTR lpRebootMsg;
  LPWSTR lpCommand;
  DWORD cActions;
  SC_ACTION *lpsaActions;
};

/* 6046 */
typedef _SERVICE_FAILURE_ACTIONSW SERVICE_FAILURE_ACTIONSW;

/* 6047 */
typedef _SERVICE_FAILURE_ACTIONSW *LPSERVICE_FAILURE_ACTIONSW;

/* 6048 */
typedef SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONS;

/* 6049 */
typedef LPSERVICE_FAILURE_ACTIONSA LPSERVICE_FAILURE_ACTIONS;

/* 6050 */
struct _SERVICE_DELAYED_AUTO_START_INFO
{
  BOOL fDelayedAutostart;
};

/* 6051 */
typedef _SERVICE_DELAYED_AUTO_START_INFO SERVICE_DELAYED_AUTO_START_INFO;

/* 6052 */
typedef _SERVICE_DELAYED_AUTO_START_INFO *LPSERVICE_DELAYED_AUTO_START_INFO;

/* 6053 */
struct _SERVICE_FAILURE_ACTIONS_FLAG
{
  BOOL fFailureActionsOnNonCrashFailures;
};

/* 6054 */
typedef _SERVICE_FAILURE_ACTIONS_FLAG SERVICE_FAILURE_ACTIONS_FLAG;

/* 6055 */
typedef _SERVICE_FAILURE_ACTIONS_FLAG *LPSERVICE_FAILURE_ACTIONS_FLAG;

/* 6056 */
struct _SERVICE_SID_INFO
{
  DWORD dwServiceSidType;
};

/* 6057 */
typedef _SERVICE_SID_INFO SERVICE_SID_INFO;

/* 6058 */
typedef _SERVICE_SID_INFO *LPSERVICE_SID_INFO;

/* 6059 */
struct _SERVICE_REQUIRED_PRIVILEGES_INFOA
{
  LPSTR pmszRequiredPrivileges;
};

/* 6060 */
typedef _SERVICE_REQUIRED_PRIVILEGES_INFOA SERVICE_REQUIRED_PRIVILEGES_INFOA;

/* 6061 */
typedef _SERVICE_REQUIRED_PRIVILEGES_INFOA *LPSERVICE_REQUIRED_PRIVILEGES_INFOA;

/* 6062 */
struct _SERVICE_REQUIRED_PRIVILEGES_INFOW
{
  LPWSTR pmszRequiredPrivileges;
};

/* 6063 */
typedef _SERVICE_REQUIRED_PRIVILEGES_INFOW SERVICE_REQUIRED_PRIVILEGES_INFOW;

/* 6064 */
typedef _SERVICE_REQUIRED_PRIVILEGES_INFOW *LPSERVICE_REQUIRED_PRIVILEGES_INFOW;

/* 6065 */
typedef SERVICE_REQUIRED_PRIVILEGES_INFOA SERVICE_REQUIRED_PRIVILEGES_INFO;

/* 6066 */
typedef LPSERVICE_REQUIRED_PRIVILEGES_INFOA LPSERVICE_REQUIRED_PRIVILEGES_INFO;

/* 6067 */
struct _SERVICE_PRESHUTDOWN_INFO
{
  DWORD dwPreshutdownTimeout;
};

/* 6068 */
typedef _SERVICE_PRESHUTDOWN_INFO SERVICE_PRESHUTDOWN_INFO;

/* 6069 */
typedef _SERVICE_PRESHUTDOWN_INFO *LPSERVICE_PRESHUTDOWN_INFO;

/* 6070 */
struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM
{
  DWORD dwDataType;
  DWORD cbData;
  PBYTE pData;
};

/* 6071 */
typedef _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM SERVICE_TRIGGER_SPECIFIC_DATA_ITEM;

/* 6072 */
typedef _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM *PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM;

/* 6073 */
struct _SERVICE_TRIGGER
{
  DWORD dwTriggerType;
  DWORD dwAction;
  GUID *pTriggerSubtype;
  DWORD cDataItems;
  PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM pDataItems;
};

/* 6074 */
typedef _SERVICE_TRIGGER SERVICE_TRIGGER;

/* 6075 */
typedef _SERVICE_TRIGGER *PSERVICE_TRIGGER;

/* 6076 */
struct _SERVICE_TRIGGER_INFO
{
  DWORD cTriggers;
  PSERVICE_TRIGGER pTriggers;
  PBYTE pReserved;
};

/* 6077 */
typedef _SERVICE_TRIGGER_INFO SERVICE_TRIGGER_INFO;

/* 6078 */
typedef _SERVICE_TRIGGER_INFO *PSERVICE_TRIGGER_INFO;

/* 6079 */
struct _SERVICE_PREFERRED_NODE_INFO
{
  USHORT usPreferredNode;
  BOOLEAN fDelete;
};

/* 6080 */
typedef _SERVICE_PREFERRED_NODE_INFO SERVICE_PREFERRED_NODE_INFO;

/* 6081 */
typedef _SERVICE_PREFERRED_NODE_INFO *LPSERVICE_PREFERRED_NODE_INFO;

/* 6082 */
struct _SERVICE_TIMECHANGE_INFO
{
  LARGE_INTEGER liNewTime;
  LARGE_INTEGER liOldTime;
};

/* 6083 */
typedef _SERVICE_TIMECHANGE_INFO SERVICE_TIMECHANGE_INFO;

/* 6084 */
typedef _SERVICE_TIMECHANGE_INFO *PSERVICE_TIMECHANGE_INFO;

/* 6085 */
struct _SERVICE_LAUNCH_PROTECTED_INFO
{
  DWORD dwLaunchProtected;
};

/* 6086 */
typedef _SERVICE_LAUNCH_PROTECTED_INFO SERVICE_LAUNCH_PROTECTED_INFO;

/* 6087 */
typedef _SERVICE_LAUNCH_PROTECTED_INFO *PSERVICE_LAUNCH_PROTECTED_INFO;

/* 6088 */
struct SC_HANDLE__
{
  int unused;
};

/* 6089 */
typedef SC_HANDLE__ *SC_HANDLE;

/* 6090 */
typedef SC_HANDLE *LPSC_HANDLE;

/* 6091 */
struct SERVICE_STATUS_HANDLE__
{
  int unused;
};

/* 6092 */
typedef SERVICE_STATUS_HANDLE__ *SERVICE_STATUS_HANDLE;

/* 6093 */
enum _SC_STATUS_TYPE : unsigned __int32
{
  SC_STATUS_PROCESS_INFO = 0x0,
};

/* 6094 */
typedef _SC_STATUS_TYPE SC_STATUS_TYPE;

/* 6095 */
enum _SC_ENUM_TYPE : unsigned __int32
{
  SC_ENUM_PROCESS_INFO = 0x0,
};

/* 6096 */
typedef _SC_ENUM_TYPE SC_ENUM_TYPE;

/* 6097 */
struct _SERVICE_STATUS
{
  DWORD dwServiceType;
  DWORD dwCurrentState;
  DWORD dwControlsAccepted;
  DWORD dwWin32ExitCode;
  DWORD dwServiceSpecificExitCode;
  DWORD dwCheckPoint;
  DWORD dwWaitHint;
};

/* 6098 */
typedef _SERVICE_STATUS SERVICE_STATUS;

/* 6099 */
typedef _SERVICE_STATUS *LPSERVICE_STATUS;

/* 6100 */
struct _SERVICE_STATUS_PROCESS
{
  DWORD dwServiceType;
  DWORD dwCurrentState;
  DWORD dwControlsAccepted;
  DWORD dwWin32ExitCode;
  DWORD dwServiceSpecificExitCode;
  DWORD dwCheckPoint;
  DWORD dwWaitHint;
  DWORD dwProcessId;
  DWORD dwServiceFlags;
};

/* 6101 */
typedef _SERVICE_STATUS_PROCESS SERVICE_STATUS_PROCESS;

/* 6102 */
typedef _SERVICE_STATUS_PROCESS *LPSERVICE_STATUS_PROCESS;

/* 6103 */
struct _ENUM_SERVICE_STATUSA
{
  LPSTR lpServiceName;
  LPSTR lpDisplayName;
  SERVICE_STATUS ServiceStatus;
};

/* 6104 */
typedef _ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUSA;

/* 6105 */
typedef _ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUSA;

/* 6106 */
struct _ENUM_SERVICE_STATUSW
{
  LPWSTR lpServiceName;
  LPWSTR lpDisplayName;
  SERVICE_STATUS ServiceStatus;
};

/* 6107 */
typedef _ENUM_SERVICE_STATUSW ENUM_SERVICE_STATUSW;

/* 6108 */
typedef _ENUM_SERVICE_STATUSW *LPENUM_SERVICE_STATUSW;

/* 6109 */
typedef ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUS;

/* 6110 */
typedef LPENUM_SERVICE_STATUSA LPENUM_SERVICE_STATUS;

/* 6111 */
struct _ENUM_SERVICE_STATUS_PROCESSA
{
  LPSTR lpServiceName;
  LPSTR lpDisplayName;
  SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

/* 6112 */
typedef _ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESSA;

/* 6113 */
typedef _ENUM_SERVICE_STATUS_PROCESSA *LPENUM_SERVICE_STATUS_PROCESSA;

/* 6114 */
struct _ENUM_SERVICE_STATUS_PROCESSW
{
  LPWSTR lpServiceName;
  LPWSTR lpDisplayName;
  SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

/* 6115 */
typedef _ENUM_SERVICE_STATUS_PROCESSW ENUM_SERVICE_STATUS_PROCESSW;

/* 6116 */
typedef _ENUM_SERVICE_STATUS_PROCESSW *LPENUM_SERVICE_STATUS_PROCESSW;

/* 6117 */
typedef ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESS;

/* 6118 */
typedef LPENUM_SERVICE_STATUS_PROCESSA LPENUM_SERVICE_STATUS_PROCESS;

/* 6119 */
typedef LPVOID SC_LOCK;

/* 6120 */
struct _QUERY_SERVICE_LOCK_STATUSA
{
  DWORD fIsLocked;
  LPSTR lpLockOwner;
  DWORD dwLockDuration;
};

/* 6121 */
typedef _QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUSA;

/* 6122 */
typedef _QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUSA;

/* 6123 */
struct _QUERY_SERVICE_LOCK_STATUSW
{
  DWORD fIsLocked;
  LPWSTR lpLockOwner;
  DWORD dwLockDuration;
};

/* 6124 */
typedef _QUERY_SERVICE_LOCK_STATUSW QUERY_SERVICE_LOCK_STATUSW;

/* 6125 */
typedef _QUERY_SERVICE_LOCK_STATUSW *LPQUERY_SERVICE_LOCK_STATUSW;

/* 6126 */
typedef QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUS;

/* 6127 */
typedef LPQUERY_SERVICE_LOCK_STATUSA LPQUERY_SERVICE_LOCK_STATUS;

/* 6128 */
struct _QUERY_SERVICE_CONFIGA
{
  DWORD dwServiceType;
  DWORD dwStartType;
  DWORD dwErrorControl;
  LPSTR lpBinaryPathName;
  LPSTR lpLoadOrderGroup;
  DWORD dwTagId;
  LPSTR lpDependencies;
  LPSTR lpServiceStartName;
  LPSTR lpDisplayName;
};

/* 6129 */
typedef _QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIGA;

/* 6130 */
typedef _QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIGA;

/* 6131 */
struct _QUERY_SERVICE_CONFIGW
{
  DWORD dwServiceType;
  DWORD dwStartType;
  DWORD dwErrorControl;
  LPWSTR lpBinaryPathName;
  LPWSTR lpLoadOrderGroup;
  DWORD dwTagId;
  LPWSTR lpDependencies;
  LPWSTR lpServiceStartName;
  LPWSTR lpDisplayName;
};

/* 6132 */
typedef _QUERY_SERVICE_CONFIGW QUERY_SERVICE_CONFIGW;

/* 6133 */
typedef _QUERY_SERVICE_CONFIGW *LPQUERY_SERVICE_CONFIGW;

/* 6134 */
typedef QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIG;

/* 6135 */
typedef LPQUERY_SERVICE_CONFIGA LPQUERY_SERVICE_CONFIG;

/* 6136 */
typedef void __cdecl _5F65BF975D82F63B4958868192FF52AB(DWORD, LPWSTR *);

/* 6137 */
typedef void __cdecl _74CFF1AF804620B8170C44E80113F2BA(DWORD, LPTSTR *);

/* 6138 */
typedef void (__cdecl *LPSERVICE_MAIN_FUNCTIONW)(DWORD, LPWSTR *);

/* 6139 */
typedef void (__cdecl *LPSERVICE_MAIN_FUNCTIONA)(DWORD, LPSTR *);

/* 6140 */
struct _SERVICE_TABLE_ENTRYA
{
  LPSTR lpServiceName;
  LPSERVICE_MAIN_FUNCTIONA lpServiceProc;
};

/* 6141 */
typedef _SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRYA;

/* 6142 */
typedef _SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRYA;

/* 6143 */
struct _SERVICE_TABLE_ENTRYW
{
  LPWSTR lpServiceName;
  LPSERVICE_MAIN_FUNCTIONW lpServiceProc;
};

/* 6144 */
typedef _SERVICE_TABLE_ENTRYW SERVICE_TABLE_ENTRYW;

/* 6145 */
typedef _SERVICE_TABLE_ENTRYW *LPSERVICE_TABLE_ENTRYW;

/* 6146 */
typedef SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRY;

/* 6147 */
typedef LPSERVICE_TABLE_ENTRYA LPSERVICE_TABLE_ENTRY;

/* 6148 */
typedef void __cdecl _05A6FE89FC294D987691F3CCEA570D81(DWORD);

/* 6149 */
typedef DWORD __cdecl _92EA8805FA07D2A0B477D6A4D4C889CA(DWORD, DWORD, LPVOID, LPVOID);

/* 6150 */
typedef void (__cdecl *LPHANDLER_FUNCTION)(DWORD);

/* 6151 */
typedef DWORD (__cdecl *LPHANDLER_FUNCTION_EX)(DWORD, DWORD, LPVOID, LPVOID);

/* 6152 */
typedef void (__cdecl *PFN_SC_NOTIFY_CALLBACK)(PVOID);

/* 6153 */
struct _SERVICE_NOTIFY_1
{
  DWORD dwVersion;
  PFN_SC_NOTIFY_CALLBACK pfnNotifyCallback;
  PVOID pContext;
  DWORD dwNotificationStatus;
  SERVICE_STATUS_PROCESS ServiceStatus;
};

/* 6154 */
typedef _SERVICE_NOTIFY_1 SERVICE_NOTIFY_1;

/* 6155 */
typedef _SERVICE_NOTIFY_1 *PSERVICE_NOTIFY_1;

/* 6156 */
struct _SERVICE_NOTIFY_2A
{
  DWORD dwVersion;
  PFN_SC_NOTIFY_CALLBACK pfnNotifyCallback;
  PVOID pContext;
  DWORD dwNotificationStatus;
  SERVICE_STATUS_PROCESS ServiceStatus;
  DWORD dwNotificationTriggered;
  LPSTR pszServiceNames;
};

/* 6157 */
typedef _SERVICE_NOTIFY_2A SERVICE_NOTIFY_2A;

/* 6158 */
typedef _SERVICE_NOTIFY_2A *PSERVICE_NOTIFY_2A;

/* 6159 */
struct _SERVICE_NOTIFY_2W
{
  DWORD dwVersion;
  PFN_SC_NOTIFY_CALLBACK pfnNotifyCallback;
  PVOID pContext;
  DWORD dwNotificationStatus;
  SERVICE_STATUS_PROCESS ServiceStatus;
  DWORD dwNotificationTriggered;
  LPWSTR pszServiceNames;
};

/* 6160 */
typedef _SERVICE_NOTIFY_2W SERVICE_NOTIFY_2W;

/* 6161 */
typedef _SERVICE_NOTIFY_2W *PSERVICE_NOTIFY_2W;

/* 6162 */
typedef SERVICE_NOTIFY_2A SERVICE_NOTIFY_2;

/* 6163 */
typedef PSERVICE_NOTIFY_2A PSERVICE_NOTIFY_2;

/* 6164 */
typedef SERVICE_NOTIFY_2A SERVICE_NOTIFYA;

/* 6165 */
typedef SERVICE_NOTIFY_2A *PSERVICE_NOTIFYA;

/* 6166 */
typedef SERVICE_NOTIFY_2W SERVICE_NOTIFYW;

/* 6167 */
typedef SERVICE_NOTIFY_2W *PSERVICE_NOTIFYW;

/* 6168 */
typedef SERVICE_NOTIFYA SERVICE_NOTIFY;

/* 6169 */
typedef PSERVICE_NOTIFYA PSERVICE_NOTIFY;

/* 6170 */
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA
{
  DWORD dwReason;
  LPSTR pszComment;
  SERVICE_STATUS_PROCESS ServiceStatus;
};

/* 6171 */
typedef _SERVICE_CONTROL_STATUS_REASON_PARAMSA SERVICE_CONTROL_STATUS_REASON_PARAMSA;

/* 6172 */
typedef _SERVICE_CONTROL_STATUS_REASON_PARAMSA *PSERVICE_CONTROL_STATUS_REASON_PARAMSA;

/* 6173 */
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW
{
  DWORD dwReason;
  LPWSTR pszComment;
  SERVICE_STATUS_PROCESS ServiceStatus;
};

/* 6174 */
typedef _SERVICE_CONTROL_STATUS_REASON_PARAMSW SERVICE_CONTROL_STATUS_REASON_PARAMSW;

/* 6175 */
typedef _SERVICE_CONTROL_STATUS_REASON_PARAMSW *PSERVICE_CONTROL_STATUS_REASON_PARAMSW;

/* 6176 */
typedef SERVICE_CONTROL_STATUS_REASON_PARAMSA SERVICE_CONTROL_STATUS_REASON_PARAMS;

/* 6177 */
typedef PSERVICE_CONTROL_STATUS_REASON_PARAMSA PSERVICE_CONTROL_STATUS_REASON_PARAMS;

/* 6178 */
struct _SERVICE_START_REASON
{
  DWORD dwReason;
};

/* 6179 */
typedef _SERVICE_START_REASON SERVICE_START_REASON;

/* 6180 */
typedef _SERVICE_START_REASON *PSERVICE_START_REASON;

/* 6181 */
enum _SC_EVENT_TYPE : unsigned __int32
{
  SC_EVENT_DATABASE_CHANGE = 0x0,
  SC_EVENT_PROPERTY_CHANGE = 0x1,
  SC_EVENT_STATUS_CHANGE = 0x2,
};

/* 6182 */
typedef _SC_EVENT_TYPE SC_EVENT_TYPE;

/* 6183 */
typedef _SC_EVENT_TYPE *PSC_EVENT_TYPE;

/* 6184 */
typedef void __cdecl _148E8382801E6E2B1DBEAAD1500679EF(DWORD, PVOID);

/* 6185 */
typedef void (__cdecl *PSC_NOTIFICATION_CALLBACK)(DWORD, PVOID);

/* 6186 */
struct _SC_NOTIFICATION_REGISTRATION;

/* 6187 */
typedef _SC_NOTIFICATION_REGISTRATION *PSC_NOTIFICATION_REGISTRATION;

/* 6188 */
enum SERVICE_REGISTRY_STATE_TYPE : unsigned __int32
{
  ServiceRegistryStateParameters = 0x0,
  ServiceRegistryStatePersistent = 0x1,
  MaxServiceRegistryStateType = 0x2,
};

/* 6189 */
enum SERVICE_DIRECTORY_TYPE : unsigned __int32
{
  ServiceDirectoryPersistentState = 0x0,
  ServiceDirectoryTypeMax = 0x1,
};

/* 6190 */
struct _MODEMDEVCAPS
{
  DWORD dwActualSize;
  DWORD dwRequiredSize;
  DWORD dwDevSpecificOffset;
  DWORD dwDevSpecificSize;
  DWORD dwModemProviderVersion;
  DWORD dwModemManufacturerOffset;
  DWORD dwModemManufacturerSize;
  DWORD dwModemModelOffset;
  DWORD dwModemModelSize;
  DWORD dwModemVersionOffset;
  DWORD dwModemVersionSize;
  DWORD dwDialOptions;
  DWORD dwCallSetupFailTimer;
  DWORD dwInactivityTimeout;
  DWORD dwSpeakerVolume;
  DWORD dwSpeakerMode;
  DWORD dwModemOptions;
  DWORD dwMaxDTERate;
  DWORD dwMaxDCERate;
  BYTE abVariablePortion[1];
};

/* 6191 */
typedef _MODEMDEVCAPS MODEMDEVCAPS;

/* 6192 */
typedef _MODEMDEVCAPS *PMODEMDEVCAPS;

/* 6193 */
typedef _MODEMDEVCAPS *LPMODEMDEVCAPS;

/* 6194 */
struct _MODEMSETTINGS
{
  DWORD dwActualSize;
  DWORD dwRequiredSize;
  DWORD dwDevSpecificOffset;
  DWORD dwDevSpecificSize;
  DWORD dwCallSetupFailTimer;
  DWORD dwInactivityTimeout;
  DWORD dwSpeakerVolume;
  DWORD dwSpeakerMode;
  DWORD dwPreferredModemOptions;
  DWORD dwNegotiatedModemOptions;
  DWORD dwNegotiatedDCERate;
  BYTE abVariablePortion[1];
};

/* 6195 */
typedef _MODEMSETTINGS MODEMSETTINGS;

/* 6196 */
typedef _MODEMSETTINGS *PMODEMSETTINGS;

/* 6197 */
typedef _MODEMSETTINGS *LPMODEMSETTINGS;

/* 6198 */
struct HIMC__
{
  int unused;
};

/* 6199 */
typedef HIMC__ *HIMC;

/* 6200 */
struct HIMCC__
{
  int unused;
};

/* 6201 */
typedef HIMCC__ *HIMCC;

/* 6202 */
typedef HKL *LPHKL;

/* 6203 */
typedef UINT *LPUINT;

/* 6204 */
struct tagCOMPOSITIONFORM
{
  DWORD dwStyle;
  POINT ptCurrentPos;
  RECT rcArea;
};

/* 6205 */
typedef tagCOMPOSITIONFORM COMPOSITIONFORM;

/* 6206 */
typedef tagCOMPOSITIONFORM *PCOMPOSITIONFORM;

/* 6207 */
typedef tagCOMPOSITIONFORM *NPCOMPOSITIONFORM;

/* 6208 */
typedef tagCOMPOSITIONFORM *LPCOMPOSITIONFORM;

/* 6209 */
struct tagCANDIDATEFORM
{
  DWORD dwIndex;
  DWORD dwStyle;
  POINT ptCurrentPos;
  RECT rcArea;
};

/* 6210 */
typedef tagCANDIDATEFORM CANDIDATEFORM;

/* 6211 */
typedef tagCANDIDATEFORM *PCANDIDATEFORM;

/* 6212 */
typedef tagCANDIDATEFORM *NPCANDIDATEFORM;

/* 6213 */
typedef tagCANDIDATEFORM *LPCANDIDATEFORM;

/* 6214 */
struct tagCANDIDATELIST
{
  DWORD dwSize;
  DWORD dwStyle;
  DWORD dwCount;
  DWORD dwSelection;
  DWORD dwPageStart;
  DWORD dwPageSize;
  DWORD dwOffset[1];
};

/* 6215 */
typedef tagCANDIDATELIST CANDIDATELIST;

/* 6216 */
typedef tagCANDIDATELIST *PCANDIDATELIST;

/* 6217 */
typedef tagCANDIDATELIST *NPCANDIDATELIST;

/* 6218 */
typedef tagCANDIDATELIST *LPCANDIDATELIST;

/* 6219 */
struct tagREGISTERWORDA
{
  LPSTR lpReading;
  LPSTR lpWord;
};

/* 6220 */
typedef tagREGISTERWORDA REGISTERWORDA;

/* 6221 */
typedef tagREGISTERWORDA *PREGISTERWORDA;

/* 6222 */
typedef tagREGISTERWORDA *NPREGISTERWORDA;

/* 6223 */
typedef tagREGISTERWORDA *LPREGISTERWORDA;

/* 6224 */
struct tagREGISTERWORDW
{
  LPWSTR lpReading;
  LPWSTR lpWord;
};

/* 6225 */
typedef tagREGISTERWORDW REGISTERWORDW;

/* 6226 */
typedef tagREGISTERWORDW *PREGISTERWORDW;

/* 6227 */
typedef tagREGISTERWORDW *NPREGISTERWORDW;

/* 6228 */
typedef tagREGISTERWORDW *LPREGISTERWORDW;

/* 6229 */
typedef REGISTERWORDA REGISTERWORD;

/* 6230 */
typedef PREGISTERWORDA PREGISTERWORD;

/* 6231 */
typedef NPREGISTERWORDA NPREGISTERWORD;

/* 6232 */
typedef LPREGISTERWORDA LPREGISTERWORD;

/* 6233 */
struct tagRECONVERTSTRING
{
  DWORD dwSize;
  DWORD dwVersion;
  DWORD dwStrLen;
  DWORD dwStrOffset;
  DWORD dwCompStrLen;
  DWORD dwCompStrOffset;
  DWORD dwTargetStrLen;
  DWORD dwTargetStrOffset;
};

/* 6234 */
typedef tagRECONVERTSTRING RECONVERTSTRING;

/* 6235 */
typedef tagRECONVERTSTRING *PRECONVERTSTRING;

/* 6236 */
typedef tagRECONVERTSTRING *NPRECONVERTSTRING;

/* 6237 */
typedef tagRECONVERTSTRING *LPRECONVERTSTRING;

/* 6238 */
struct tagSTYLEBUFA
{
  DWORD dwStyle;
  CHAR szDescription[32];
};

/* 6239 */
typedef tagSTYLEBUFA STYLEBUFA;

/* 6240 */
typedef tagSTYLEBUFA *PSTYLEBUFA;

/* 6241 */
typedef tagSTYLEBUFA *NPSTYLEBUFA;

/* 6242 */
typedef tagSTYLEBUFA *LPSTYLEBUFA;

/* 6243 */
struct tagSTYLEBUFW
{
  DWORD dwStyle;
  WCHAR szDescription[32];
};

/* 6244 */
typedef tagSTYLEBUFW STYLEBUFW;

/* 6245 */
typedef tagSTYLEBUFW *PSTYLEBUFW;

/* 6246 */
typedef tagSTYLEBUFW *NPSTYLEBUFW;

/* 6247 */
typedef tagSTYLEBUFW *LPSTYLEBUFW;

/* 6248 */
typedef STYLEBUFA STYLEBUF;

/* 6249 */
typedef PSTYLEBUFA PSTYLEBUF;

/* 6250 */
typedef NPSTYLEBUFA NPSTYLEBUF;

/* 6251 */
typedef LPSTYLEBUFA LPSTYLEBUF;

/* 6252 */
struct tagIMEMENUITEMINFOA
{
  UINT cbSize;
  UINT fType;
  UINT fState;
  UINT wID;
  HBITMAP hbmpChecked;
  HBITMAP hbmpUnchecked;
  DWORD dwItemData;
  CHAR szString[80];
  HBITMAP hbmpItem;
};

/* 6253 */
typedef tagIMEMENUITEMINFOA IMEMENUITEMINFOA;

/* 6254 */
typedef tagIMEMENUITEMINFOA *PIMEMENUITEMINFOA;

/* 6255 */
typedef tagIMEMENUITEMINFOA *NPIMEMENUITEMINFOA;

/* 6256 */
typedef tagIMEMENUITEMINFOA *LPIMEMENUITEMINFOA;

/* 6257 */
struct tagIMEMENUITEMINFOW
{
  UINT cbSize;
  UINT fType;
  UINT fState;
  UINT wID;
  HBITMAP hbmpChecked;
  HBITMAP hbmpUnchecked;
  DWORD dwItemData;
  WCHAR szString[80];
  HBITMAP hbmpItem;
};

/* 6258 */
typedef tagIMEMENUITEMINFOW IMEMENUITEMINFOW;

/* 6259 */
typedef tagIMEMENUITEMINFOW *PIMEMENUITEMINFOW;

/* 6260 */
typedef tagIMEMENUITEMINFOW *NPIMEMENUITEMINFOW;

/* 6261 */
typedef tagIMEMENUITEMINFOW *LPIMEMENUITEMINFOW;

/* 6262 */
typedef IMEMENUITEMINFOA IMEMENUITEMINFO;

/* 6263 */
typedef PIMEMENUITEMINFOA PIMEMENUITEMINFO;

/* 6264 */
typedef NPIMEMENUITEMINFOA NPIMEMENUITEMINFO;

/* 6265 */
typedef LPIMEMENUITEMINFOA LPIMEMENUITEMINFO;

/* 6266 */
struct tagIMECHARPOSITION
{
  DWORD dwSize;
  DWORD dwCharPos;
  POINT pt;
  UINT cLineHeight;
  RECT rcDocument;
};

/* 6267 */
typedef tagIMECHARPOSITION IMECHARPOSITION;

/* 6268 */
typedef tagIMECHARPOSITION *PIMECHARPOSITION;

/* 6269 */
typedef tagIMECHARPOSITION *NPIMECHARPOSITION;

/* 6270 */
typedef tagIMECHARPOSITION *LPIMECHARPOSITION;

/* 6271 */
typedef BOOL (__cdecl *IMCENUMPROC)(HIMC, LPARAM);

/* 6272 */
typedef int (__cdecl *REGISTERWORDENUMPROCA)(LPCSTR, DWORD, LPCSTR, LPVOID);

/* 6273 */
typedef int (__cdecl *REGISTERWORDENUMPROCW)(LPCWSTR, DWORD, LPCWSTR, LPVOID);

/* 6274 */
typedef unsigned __int8 u_char;

/* 6275 */
typedef unsigned __int16 u_short;

/* 6276 */
typedef unsigned int u_int;

/* 6277 */
typedef unsigned __int32 u_long;

/* 6278 */
typedef unsigned __int64 u_int64;

/* 6280 */
struct _D1D01E6CE24DAA474FC2F2D5140A147B
{
  UCHAR s_b1;
  UCHAR s_b2;
  UCHAR s_b3;
  UCHAR s_b4;
};

/* 6281 */
struct _482BE40EA206D58F779C6B11E6CEDF6F
{
  USHORT s_w1;
  USHORT s_w2;
};

/* 6282 */
union in_addr___2B6035E3436C90F2F7E43C06385B7488
{
  _D1D01E6CE24DAA474FC2F2D5140A147B S_un_b;
  _482BE40EA206D58F779C6B11E6CEDF6F S_un_w;
  ULONG S_addr;
};

/* 6279 */
struct in_addr
{
  in_addr___2B6035E3436C90F2F7E43C06385B7488 S_un;
};

/* 6283 */
typedef in_addr IN_ADDR;

/* 6284 */
typedef in_addr *PIN_ADDR;

/* 6285 */
typedef in_addr *LPIN_ADDR;

/* 6286 */
typedef USHORT ADDRESS_FAMILY;

/* 6287 */
struct sockaddr
{
  ADDRESS_FAMILY sa_family;
  CHAR sa_data[14];
};

/* 6288 */
typedef sockaddr SOCKADDR;

/* 6289 */
typedef sockaddr *PSOCKADDR;

/* 6290 */
typedef sockaddr *LPSOCKADDR;

/* 6291 */
struct _SOCKET_ADDRESS
{
  LPSOCKADDR lpSockaddr;
  INT iSockaddrLength;
};

/* 6292 */
typedef _SOCKET_ADDRESS SOCKET_ADDRESS;

/* 6293 */
typedef _SOCKET_ADDRESS *PSOCKET_ADDRESS;

/* 6294 */
typedef _SOCKET_ADDRESS *LPSOCKET_ADDRESS;

/* 6295 */
struct _SOCKET_ADDRESS_LIST
{
  INT iAddressCount;
  SOCKET_ADDRESS Address[1];
};

/* 6296 */
typedef _SOCKET_ADDRESS_LIST SOCKET_ADDRESS_LIST;

/* 6297 */
typedef _SOCKET_ADDRESS_LIST *PSOCKET_ADDRESS_LIST;

/* 6298 */
typedef _SOCKET_ADDRESS_LIST *LPSOCKET_ADDRESS_LIST;

/* 6299 */
struct _CSADDR_INFO
{
  SOCKET_ADDRESS LocalAddr;
  SOCKET_ADDRESS RemoteAddr;
  INT iSocketType;
  INT iProtocol;
};

/* 6300 */
typedef _CSADDR_INFO CSADDR_INFO;

/* 6301 */
typedef _CSADDR_INFO *PCSADDR_INFO;

/* 6302 */
typedef _CSADDR_INFO *LPCSADDR_INFO;

/* 6303 */
struct sockaddr_storage
{
  ADDRESS_FAMILY ss_family;
  CHAR __ss_pad1[6];
  __int64 __ss_align;
  CHAR __ss_pad2[112];
};

/* 6304 */
typedef sockaddr_storage SOCKADDR_STORAGE_LH;

/* 6305 */
typedef sockaddr_storage *PSOCKADDR_STORAGE_LH;

/* 6306 */
typedef sockaddr_storage *LPSOCKADDR_STORAGE_LH;

/* 6307 */
struct sockaddr_storage_xp
{
  __int16 ss_family;
  CHAR __ss_pad1[6];
  __int64 __ss_align;
  CHAR __ss_pad2[112];
};

/* 6308 */
typedef sockaddr_storage_xp SOCKADDR_STORAGE_XP;

/* 6309 */
typedef sockaddr_storage_xp *PSOCKADDR_STORAGE_XP;

/* 6310 */
typedef sockaddr_storage_xp *LPSOCKADDR_STORAGE_XP;

/* 6311 */
typedef SOCKADDR_STORAGE_LH SOCKADDR_STORAGE;

/* 6312 */
typedef SOCKADDR_STORAGE *PSOCKADDR_STORAGE;

/* 6313 */
typedef SOCKADDR_STORAGE *LPSOCKADDR_STORAGE;

/* 6314 */
struct _SOCKET_PROCESSOR_AFFINITY
{
  PROCESSOR_NUMBER Processor;
  USHORT NumaNodeId;
  USHORT Reserved;
};

/* 6315 */
typedef _SOCKET_PROCESSOR_AFFINITY SOCKET_PROCESSOR_AFFINITY;

/* 6316 */
typedef _SOCKET_PROCESSOR_AFFINITY *PSOCKET_PROCESSOR_AFFINITY;

/* 6317 */
enum IPPROTO : unsigned __int32
{
  IPPROTO_HOPOPTS = 0x0,
  IPPROTO_ICMP = 0x1,
  IPPROTO_IGMP = 0x2,
  IPPROTO_GGP = 0x3,
  IPPROTO_IPV4 = 0x4,
  IPPROTO_ST = 0x5,
  IPPROTO_TCP = 0x6,
  IPPROTO_CBT = 0x7,
  IPPROTO_EGP = 0x8,
  IPPROTO_IGP = 0x9,
  IPPROTO_PUP = 0xC,
  IPPROTO_UDP = 0x11,
  IPPROTO_IDP = 0x16,
  IPPROTO_RDP = 0x1B,
  IPPROTO_IPV6 = 0x29,
  IPPROTO_ROUTING = 0x2B,
  IPPROTO_FRAGMENT = 0x2C,
  IPPROTO_ESP = 0x32,
  IPPROTO_AH = 0x33,
  IPPROTO_ICMPV6 = 0x3A,
  IPPROTO_NONE = 0x3B,
  IPPROTO_DSTOPTS = 0x3C,
  IPPROTO_ND = 0x4D,
  IPPROTO_ICLFXBM = 0x4E,
  IPPROTO_PIM = 0x67,
  IPPROTO_PGM = 0x71,
  IPPROTO_L2TP = 0x73,
  IPPROTO_SCTP = 0x84,
  IPPROTO_RAW = 0xFF,
  IPPROTO_MAX = 0x100,
  IPPROTO_RESERVED_RAW = 0x101,
  IPPROTO_RESERVED_IPSEC = 0x102,
  IPPROTO_RESERVED_IPSECOFFLOAD = 0x103,
  IPPROTO_RESERVED_WNV = 0x104,
  IPPROTO_RESERVED_MAX = 0x105,
};

/* 6318 */
typedef IPPROTO *PIPROTO;

/* 6319 */
enum SCOPE_LEVEL : unsigned __int32
{
  ScopeLevelInterface = 0x1,
  ScopeLevelLink = 0x2,
  ScopeLevelSubnet = 0x3,
  ScopeLevelAdmin = 0x4,
  ScopeLevelSite = 0x5,
  ScopeLevelOrganization = 0x8,
  ScopeLevelGlobal = 0xE,
  ScopeLevelCount = 0x10,
};

/* 6321 */
struct _013671E5920392F7B68C675C97F9F7D8
{
  unsigned __int32 Zone : 28;
  unsigned __int32 Level : 4;
};

/* 6322 */
union SCOPE_ID___0B63E1DABDB20D0A7182B70FFF1E8AB8
{
  struct
  {
    unsigned __int32 Zone : 28;
    unsigned __int32 Level : 4;
  };
  ULONG Value;
};

/* 6320 */
struct SCOPE_ID
{
  union
  {
    struct
    {
      unsigned __int32 Zone : 28;
      unsigned __int32 Level : 4;
    };
    ULONG Value;
  };
};

/* 6323 */
typedef SCOPE_ID *PSCOPE_ID;

/* 6324 */
struct sockaddr_in
{
  ADDRESS_FAMILY sin_family;
  USHORT sin_port;
  IN_ADDR sin_addr;
  CHAR sin_zero[8];
};

/* 6325 */
typedef sockaddr_in SOCKADDR_IN;

/* 6326 */
typedef sockaddr_in *PSOCKADDR_IN;

/* 6327 */
struct sockaddr_dl
{
  ADDRESS_FAMILY sdl_family;
  UCHAR sdl_data[8];
  UCHAR sdl_zero[4];
};

/* 6328 */
typedef sockaddr_dl SOCKADDR_DL;

/* 6329 */
typedef sockaddr_dl *PSOCKADDR_DL;

/* 6330 */
struct _WSABUF
{
  ULONG len;
  CHAR *buf;
};

/* 6331 */
typedef _WSABUF WSABUF;

/* 6332 */
typedef _WSABUF *LPWSABUF;

/* 6333 */
struct _WSAMSG
{
  LPSOCKADDR name;
  INT namelen;
  LPWSABUF lpBuffers;
  ULONG dwBufferCount;
  WSABUF Control;
  ULONG dwFlags;
};

/* 6334 */
typedef _WSAMSG WSAMSG;

/* 6335 */
typedef _WSAMSG *PWSAMSG;

/* 6336 */
typedef _WSAMSG *LPWSAMSG;

/* 6337 */
struct cmsghdr
{
  SIZE_T cmsg_len;
  INT cmsg_level;
  INT cmsg_type;
};

/* 6338 */
typedef cmsghdr WSACMSGHDR;

/* 6339 */
typedef cmsghdr *PWSACMSGHDR;

/* 6340 */
typedef cmsghdr *LPWSACMSGHDR;

/* 6341 */
typedef WSACMSGHDR CMSGHDR;

/* 6342 */
typedef WSACMSGHDR *PCMSGHDR;

/* 6343 */
struct addrinfo
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  size_t ai_addrlen;
  char *ai_canonname;
  sockaddr *ai_addr;
  addrinfo *ai_next;
};

/* 6344 */
typedef addrinfo ADDRINFOA;

/* 6345 */
typedef addrinfo *PADDRINFOA;

/* 6346 */
struct addrinfoW
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  size_t ai_addrlen;
  PWSTR ai_canonname;
  sockaddr *ai_addr;
  addrinfoW *ai_next;
};

/* 6347 */
typedef addrinfoW ADDRINFOW;

/* 6348 */
typedef addrinfoW *PADDRINFOW;

/* 6349 */
struct addrinfoexA
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  size_t ai_addrlen;
  char *ai_canonname;
  sockaddr *ai_addr;
  void *ai_blob;
  size_t ai_bloblen;
  LPGUID ai_provider;
  addrinfoexA *ai_next;
};

/* 6350 */
typedef addrinfoexA ADDRINFOEXA;

/* 6351 */
typedef addrinfoexA *PADDRINFOEXA;

/* 6352 */
typedef addrinfoexA *LPADDRINFOEXA;

/* 6353 */
struct addrinfoexW
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  size_t ai_addrlen;
  PWSTR ai_canonname;
  sockaddr *ai_addr;
  void *ai_blob;
  size_t ai_bloblen;
  LPGUID ai_provider;
  addrinfoexW *ai_next;
};

/* 6354 */
typedef addrinfoexW ADDRINFOEXW;

/* 6355 */
typedef addrinfoexW *PADDRINFOEXW;

/* 6356 */
typedef addrinfoexW *LPADDRINFOEXW;

/* 6357 */
struct addrinfoex2A
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  size_t ai_addrlen;
  char *ai_canonname;
  sockaddr *ai_addr;
  void *ai_blob;
  size_t ai_bloblen;
  LPGUID ai_provider;
  addrinfoex2A *ai_next;
  int ai_version;
  char *ai_fqdn;
};

/* 6358 */
typedef addrinfoex2A ADDRINFOEX2A;

/* 6359 */
typedef addrinfoex2A *PADDRINFOEX2A;

/* 6360 */
typedef addrinfoex2A *LPADDRINFOEX2A;

/* 6361 */
struct addrinfoex2W
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  size_t ai_addrlen;
  PWSTR ai_canonname;
  sockaddr *ai_addr;
  void *ai_blob;
  size_t ai_bloblen;
  LPGUID ai_provider;
  addrinfoex2W *ai_next;
  int ai_version;
  PWSTR ai_fqdn;
};

/* 6362 */
typedef addrinfoex2W ADDRINFOEX2W;

/* 6363 */
typedef addrinfoex2W *PADDRINFOEX2W;

/* 6364 */
typedef addrinfoex2W *LPADDRINFOEX2W;

/* 6365 */
struct addrinfoex3
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  size_t ai_addrlen;
  PWSTR ai_canonname;
  sockaddr *ai_addr;
  void *ai_blob;
  size_t ai_bloblen;
  LPGUID ai_provider;
  addrinfoex3 *ai_next;
  int ai_version;
  PWSTR ai_fqdn;
  int ai_interfaceindex;
};

/* 6366 */
typedef addrinfoex3 ADDRINFOEX3;

/* 6367 */
typedef addrinfoex3 *PADDRINFOEX3;

/* 6368 */
typedef addrinfoex3 *LPADDRINFOEX3;

/* 6369 */
struct addrinfoex4
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  size_t ai_addrlen;
  PWSTR ai_canonname;
  sockaddr *ai_addr;
  void *ai_blob;
  size_t ai_bloblen;
  GUID *ai_provider;
  addrinfoex4 *ai_next;
  int ai_version;
  PWSTR ai_fqdn;
  int ai_interfaceindex;
  HANDLE ai_resolutionhandle;
};

/* 6370 */
typedef addrinfoex4 ADDRINFOEX4;

/* 6371 */
typedef addrinfoex4 *PADDRINFOEX4;

/* 6372 */
typedef addrinfoex4 *LPADDRINFOEX4;

/* 6373 */
typedef UINT_PTR SOCKET;

/* 6374 */
struct fd_set
{
  u_int fd_count;
  SOCKET fd_array[64];
};

/* 6375 */
struct timeval
{
  __int32 tv_sec;
  __int32 tv_usec;
};

/* 6376 */
struct hostent
{
  char *h_name;
  char **h_aliases;
  __int16 h_addrtype;
  __int16 h_length;
  char **h_addr_list;
};

/* 6377 */
struct netent
{
  char *n_name;
  char **n_aliases;
  __int16 n_addrtype;
  u_long n_net;
};

/* 6378 */
struct servent
{
  char *s_name;
  char **s_aliases;
  char *s_proto;
  __int16 s_port;
};

/* 6379 */
struct protoent
{
  char *p_name;
  char **p_aliases;
  __int16 p_proto;
};

/* 6380 */
struct WSAData
{
  WORD wVersion;
  WORD wHighVersion;
  unsigned __int16 iMaxSockets;
  unsigned __int16 iMaxUdpDg;
  char *lpVendorInfo;
  char szDescription[257];
  char szSystemStatus[129];
};

/* 6381 */
typedef WSAData WSADATA;

/* 6382 */
typedef WSAData *LPWSADATA;

/* 6383 */
struct sockproto
{
  u_short sp_family;
  u_short sp_protocol;
};

/* 6384 */
struct linger
{
  u_short l_onoff;
  u_short l_linger;
};

/* 6385 */
typedef _OVERLAPPED *LPWSAOVERLAPPED;

/* 6386 */
typedef ULONG SERVICETYPE;

/* 6387 */
struct _flowspec
{
  ULONG TokenRate;
  ULONG TokenBucketSize;
  ULONG PeakBandwidth;
  ULONG Latency;
  ULONG DelayVariation;
  SERVICETYPE ServiceType;
  ULONG MaxSduSize;
  ULONG MinimumPolicedSize;
};

/* 6388 */
typedef _flowspec FLOWSPEC;

/* 6389 */
typedef _flowspec *PFLOWSPEC;

/* 6390 */
typedef _flowspec *LPFLOWSPEC;

/* 6391 */
struct QOS_OBJECT_HDR
{
  ULONG ObjectType;
  ULONG ObjectLength;
};

/* 6392 */
typedef QOS_OBJECT_HDR *LPQOS_OBJECT_HDR;

/* 6393 */
struct _QOS_SD_MODE
{
  QOS_OBJECT_HDR ObjectHdr;
  ULONG ShapeDiscardMode;
};

/* 6394 */
typedef _QOS_SD_MODE QOS_SD_MODE;

/* 6395 */
typedef _QOS_SD_MODE *LPQOS_SD_MODE;

/* 6396 */
struct _QOS_SHAPING_RATE
{
  QOS_OBJECT_HDR ObjectHdr;
  ULONG ShapingRate;
};

/* 6397 */
typedef _QOS_SHAPING_RATE QOS_SHAPING_RATE;

/* 6398 */
typedef _QOS_SHAPING_RATE *LPQOS_SHAPING_RATE;

/* 6399 */
struct _QualityOfService
{
  FLOWSPEC SendingFlowspec;
  FLOWSPEC ReceivingFlowspec;
  WSABUF ProviderSpecific;
};

/* 6400 */
typedef _QualityOfService QOS;

/* 6401 */
typedef _QualityOfService *LPQOS;

/* 6402 */
typedef unsigned int GROUP;

/* 6403 */
struct _WSANETWORKEVENTS
{
  __int32 lNetworkEvents;
  int iErrorCode[10];
};

/* 6404 */
typedef _WSANETWORKEVENTS WSANETWORKEVENTS;

/* 6405 */
typedef _WSANETWORKEVENTS *LPWSANETWORKEVENTS;

/* 6406 */
struct _WSAPROTOCOLCHAIN
{
  int ChainLen;
  DWORD ChainEntries[7];
};

/* 6407 */
typedef _WSAPROTOCOLCHAIN WSAPROTOCOLCHAIN;

/* 6408 */
typedef _WSAPROTOCOLCHAIN *LPWSAPROTOCOLCHAIN;

/* 6409 */
struct _WSAPROTOCOL_INFOA
{
  DWORD dwServiceFlags1;
  DWORD dwServiceFlags2;
  DWORD dwServiceFlags3;
  DWORD dwServiceFlags4;
  DWORD dwProviderFlags;
  GUID ProviderId;
  DWORD dwCatalogEntryId;
  WSAPROTOCOLCHAIN ProtocolChain;
  int iVersion;
  int iAddressFamily;
  int iMaxSockAddr;
  int iMinSockAddr;
  int iSocketType;
  int iProtocol;
  int iProtocolMaxOffset;
  int iNetworkByteOrder;
  int iSecurityScheme;
  DWORD dwMessageSize;
  DWORD dwProviderReserved;
  CHAR szProtocol[256];
};

/* 6410 */
typedef _WSAPROTOCOL_INFOA WSAPROTOCOL_INFOA;

/* 6411 */
typedef _WSAPROTOCOL_INFOA *LPWSAPROTOCOL_INFOA;

/* 6412 */
struct _WSAPROTOCOL_INFOW
{
  DWORD dwServiceFlags1;
  DWORD dwServiceFlags2;
  DWORD dwServiceFlags3;
  DWORD dwServiceFlags4;
  DWORD dwProviderFlags;
  GUID ProviderId;
  DWORD dwCatalogEntryId;
  WSAPROTOCOLCHAIN ProtocolChain;
  int iVersion;
  int iAddressFamily;
  int iMaxSockAddr;
  int iMinSockAddr;
  int iSocketType;
  int iProtocol;
  int iProtocolMaxOffset;
  int iNetworkByteOrder;
  int iSecurityScheme;
  DWORD dwMessageSize;
  DWORD dwProviderReserved;
  WCHAR szProtocol[256];
};

/* 6413 */
typedef _WSAPROTOCOL_INFOW WSAPROTOCOL_INFOW;

/* 6414 */
typedef _WSAPROTOCOL_INFOW *LPWSAPROTOCOL_INFOW;

/* 6415 */
typedef WSAPROTOCOL_INFOA WSAPROTOCOL_INFO;

/* 6416 */
typedef LPWSAPROTOCOL_INFOA LPWSAPROTOCOL_INFO;

/* 6417 */
typedef int (__cdecl *LPCONDITIONPROC)(LPWSABUF, LPWSABUF, LPQOS, LPQOS, LPWSABUF, LPWSABUF, GROUP *, DWORD_PTR);

/* 6418 */
typedef void (__cdecl *LPWSAOVERLAPPED_COMPLETION_ROUTINE)(DWORD, DWORD, LPWSAOVERLAPPED, DWORD);

/* 6419 */
enum _WSACOMPLETIONTYPE : unsigned __int32
{
  NSP_NOTIFY_IMMEDIATELY = 0x0,
  NSP_NOTIFY_HWND = 0x1,
  NSP_NOTIFY_EVENT = 0x2,
  NSP_NOTIFY_PORT = 0x3,
  NSP_NOTIFY_APC = 0x4,
};

/* 6420 */
typedef _WSACOMPLETIONTYPE WSACOMPLETIONTYPE;

/* 6421 */
typedef _WSACOMPLETIONTYPE *PWSACOMPLETIONTYPE;

/* 6422 */
typedef _WSACOMPLETIONTYPE *LPWSACOMPLETIONTYPE;

/* 6424 */
struct _E8DA42DBA6D72E9D4A6938C7E4FE721A
{
  HWND hWnd;
  UINT uMsg;
  WPARAM context;
};

/* 6425 */
struct _B037A36172D96AA8797FFDAF6A0B62DF
{
  LPWSAOVERLAPPED lpOverlapped;
};

/* 6426 */
struct _E5ED4763ACBEF02B6DD4A1054B18F50D
{
  LPWSAOVERLAPPED lpOverlapped;
  LPWSAOVERLAPPED_COMPLETION_ROUTINE lpfnCompletionProc;
};

/* 6427 */
struct _449D258AA18C723FE7BC5A7EA8EED39F
{
  LPWSAOVERLAPPED lpOverlapped;
  HANDLE hPort;
  ULONG_PTR Key;
};

/* 6428 */
union _WSACOMPLETION___6ECDC46EB850293233999C04EE6F6DBB
{
  _E8DA42DBA6D72E9D4A6938C7E4FE721A WindowMessage;
  _B037A36172D96AA8797FFDAF6A0B62DF Event;
  _E5ED4763ACBEF02B6DD4A1054B18F50D Apc;
  _449D258AA18C723FE7BC5A7EA8EED39F Port;
};

/* 6423 */
struct _WSACOMPLETION
{
  WSACOMPLETIONTYPE Type;
  _WSACOMPLETION___6ECDC46EB850293233999C04EE6F6DBB Parameters;
};

/* 6429 */
typedef _WSACOMPLETION WSACOMPLETION;

/* 6430 */
typedef _WSACOMPLETION *PWSACOMPLETION;

/* 6431 */
typedef _WSACOMPLETION *LPWSACOMPLETION;

/* 6432 */
struct _BLOB
{
  ULONG cbSize;
  BYTE *pBlobData;
};

/* 6433 */
typedef _BLOB BLOB;

/* 6434 */
typedef _BLOB *LPBLOB;

/* 6435 */
struct _AFPROTOCOLS
{
  INT iAddressFamily;
  INT iProtocol;
};

/* 6436 */
typedef _AFPROTOCOLS AFPROTOCOLS;

/* 6437 */
typedef _AFPROTOCOLS *PAFPROTOCOLS;

/* 6438 */
typedef _AFPROTOCOLS *LPAFPROTOCOLS;

/* 6439 */
enum _WSAEcomparator : unsigned __int32
{
  COMP_EQUAL = 0x0,
  COMP_NOTLESS = 0x1,
};

/* 6440 */
typedef _WSAEcomparator WSAECOMPARATOR;

/* 6441 */
typedef _WSAEcomparator *PWSAECOMPARATOR;

/* 6442 */
typedef _WSAEcomparator *LPWSAECOMPARATOR;

/* 6443 */
struct _WSAVersion
{
  DWORD dwVersion;
  WSAECOMPARATOR ecHow;
};

/* 6444 */
typedef _WSAVersion WSAVERSION;

/* 6445 */
typedef _WSAVersion *PWSAVERSION;

/* 6446 */
typedef _WSAVersion *LPWSAVERSION;

/* 6447 */
struct _WSAQuerySetA
{
  DWORD dwSize;
  LPSTR lpszServiceInstanceName;
  LPGUID lpServiceClassId;
  LPWSAVERSION lpVersion;
  LPSTR lpszComment;
  DWORD dwNameSpace;
  LPGUID lpNSProviderId;
  LPSTR lpszContext;
  DWORD dwNumberOfProtocols;
  LPAFPROTOCOLS lpafpProtocols;
  LPSTR lpszQueryString;
  DWORD dwNumberOfCsAddrs;
  LPCSADDR_INFO lpcsaBuffer;
  DWORD dwOutputFlags;
  LPBLOB lpBlob;
};

/* 6448 */
typedef _WSAQuerySetA WSAQUERYSETA;

/* 6449 */
typedef _WSAQuerySetA *PWSAQUERYSETA;

/* 6450 */
typedef _WSAQuerySetA *LPWSAQUERYSETA;

/* 6451 */
struct _WSAQuerySetW
{
  DWORD dwSize;
  LPWSTR lpszServiceInstanceName;
  LPGUID lpServiceClassId;
  LPWSAVERSION lpVersion;
  LPWSTR lpszComment;
  DWORD dwNameSpace;
  LPGUID lpNSProviderId;
  LPWSTR lpszContext;
  DWORD dwNumberOfProtocols;
  LPAFPROTOCOLS lpafpProtocols;
  LPWSTR lpszQueryString;
  DWORD dwNumberOfCsAddrs;
  LPCSADDR_INFO lpcsaBuffer;
  DWORD dwOutputFlags;
  LPBLOB lpBlob;
};

/* 6452 */
typedef _WSAQuerySetW WSAQUERYSETW;

/* 6453 */
typedef _WSAQuerySetW *PWSAQUERYSETW;

/* 6454 */
typedef _WSAQuerySetW *LPWSAQUERYSETW;

/* 6455 */
struct _WSAQuerySet2A
{
  DWORD dwSize;
  LPSTR lpszServiceInstanceName;
  LPWSAVERSION lpVersion;
  LPSTR lpszComment;
  DWORD dwNameSpace;
  LPGUID lpNSProviderId;
  LPSTR lpszContext;
  DWORD dwNumberOfProtocols;
  LPAFPROTOCOLS lpafpProtocols;
  LPSTR lpszQueryString;
  DWORD dwNumberOfCsAddrs;
  LPCSADDR_INFO lpcsaBuffer;
  DWORD dwOutputFlags;
  LPBLOB lpBlob;
};

/* 6456 */
typedef _WSAQuerySet2A WSAQUERYSET2A;

/* 6457 */
typedef _WSAQuerySet2A *PWSAQUERYSET2A;

/* 6458 */
typedef _WSAQuerySet2A *LPWSAQUERYSET2A;

/* 6459 */
struct _WSAQuerySet2W
{
  DWORD dwSize;
  LPWSTR lpszServiceInstanceName;
  LPWSAVERSION lpVersion;
  LPWSTR lpszComment;
  DWORD dwNameSpace;
  LPGUID lpNSProviderId;
  LPWSTR lpszContext;
  DWORD dwNumberOfProtocols;
  LPAFPROTOCOLS lpafpProtocols;
  LPWSTR lpszQueryString;
  DWORD dwNumberOfCsAddrs;
  LPCSADDR_INFO lpcsaBuffer;
  DWORD dwOutputFlags;
  LPBLOB lpBlob;
};

/* 6460 */
typedef _WSAQuerySet2W WSAQUERYSET2W;

/* 6461 */
typedef _WSAQuerySet2W *PWSAQUERYSET2W;

/* 6462 */
typedef _WSAQuerySet2W *LPWSAQUERYSET2W;

/* 6463 */
typedef WSAQUERYSETA WSAQUERYSET;

/* 6464 */
typedef PWSAQUERYSETA PWSAQUERYSET;

/* 6465 */
typedef LPWSAQUERYSETA LPWSAQUERYSET;

/* 6466 */
typedef WSAQUERYSET2A WSAQUERYSET2;

/* 6467 */
typedef PWSAQUERYSET2A PWSAQUERYSET2;

/* 6468 */
typedef LPWSAQUERYSET2A LPWSAQUERYSET2;

/* 6469 */
enum _WSAESETSERVICEOP : unsigned __int32
{
  RNRSERVICE_REGISTER = 0x0,
  RNRSERVICE_DEREGISTER = 0x1,
  RNRSERVICE_DELETE = 0x2,
};

/* 6470 */
typedef _WSAESETSERVICEOP WSAESETSERVICEOP;

/* 6471 */
typedef _WSAESETSERVICEOP *PWSAESETSERVICEOP;

/* 6472 */
typedef _WSAESETSERVICEOP *LPWSAESETSERVICEOP;

/* 6473 */
struct _WSANSClassInfoA
{
  LPSTR lpszName;
  DWORD dwNameSpace;
  DWORD dwValueType;
  DWORD dwValueSize;
  LPVOID lpValue;
};

/* 6474 */
typedef _WSANSClassInfoA WSANSCLASSINFOA;

/* 6475 */
typedef _WSANSClassInfoA *PWSANSCLASSINFOA;

/* 6476 */
typedef _WSANSClassInfoA *LPWSANSCLASSINFOA;

/* 6477 */
struct _WSANSClassInfoW
{
  LPWSTR lpszName;
  DWORD dwNameSpace;
  DWORD dwValueType;
  DWORD dwValueSize;
  LPVOID lpValue;
};

/* 6478 */
typedef _WSANSClassInfoW WSANSCLASSINFOW;

/* 6479 */
typedef _WSANSClassInfoW *PWSANSCLASSINFOW;

/* 6480 */
typedef _WSANSClassInfoW *LPWSANSCLASSINFOW;

/* 6481 */
typedef WSANSCLASSINFOA WSANSCLASSINFO;

/* 6482 */
typedef PWSANSCLASSINFOA PWSANSCLASSINFO;

/* 6483 */
typedef LPWSANSCLASSINFOA LPWSANSCLASSINFO;

/* 6484 */
struct _WSAServiceClassInfoA
{
  LPGUID lpServiceClassId;
  LPSTR lpszServiceClassName;
  DWORD dwCount;
  LPWSANSCLASSINFOA lpClassInfos;
};

/* 6485 */
typedef _WSAServiceClassInfoA WSASERVICECLASSINFOA;

/* 6486 */
typedef _WSAServiceClassInfoA *PWSASERVICECLASSINFOA;

/* 6487 */
typedef _WSAServiceClassInfoA *LPWSASERVICECLASSINFOA;

/* 6488 */
struct _WSAServiceClassInfoW
{
  LPGUID lpServiceClassId;
  LPWSTR lpszServiceClassName;
  DWORD dwCount;
  LPWSANSCLASSINFOW lpClassInfos;
};

/* 6489 */
typedef _WSAServiceClassInfoW WSASERVICECLASSINFOW;

/* 6490 */
typedef _WSAServiceClassInfoW *PWSASERVICECLASSINFOW;

/* 6491 */
typedef _WSAServiceClassInfoW *LPWSASERVICECLASSINFOW;

/* 6492 */
typedef WSASERVICECLASSINFOA WSASERVICECLASSINFO;

/* 6493 */
typedef PWSASERVICECLASSINFOA PWSASERVICECLASSINFO;

/* 6494 */
typedef LPWSASERVICECLASSINFOA LPWSASERVICECLASSINFO;

/* 6495 */
struct _WSANAMESPACE_INFOA
{
  GUID NSProviderId;
  DWORD dwNameSpace;
  BOOL fActive;
  DWORD dwVersion;
  LPSTR lpszIdentifier;
};

/* 6496 */
typedef _WSANAMESPACE_INFOA WSANAMESPACE_INFOA;

/* 6497 */
typedef _WSANAMESPACE_INFOA *PWSANAMESPACE_INFOA;

/* 6498 */
typedef _WSANAMESPACE_INFOA *LPWSANAMESPACE_INFOA;

/* 6499 */
struct _WSANAMESPACE_INFOW
{
  GUID NSProviderId;
  DWORD dwNameSpace;
  BOOL fActive;
  DWORD dwVersion;
  LPWSTR lpszIdentifier;
};

/* 6500 */
typedef _WSANAMESPACE_INFOW WSANAMESPACE_INFOW;

/* 6501 */
typedef _WSANAMESPACE_INFOW *PWSANAMESPACE_INFOW;

/* 6502 */
typedef _WSANAMESPACE_INFOW *LPWSANAMESPACE_INFOW;

/* 6503 */
struct _WSANAMESPACE_INFOEXA
{
  GUID NSProviderId;
  DWORD dwNameSpace;
  BOOL fActive;
  DWORD dwVersion;
  LPSTR lpszIdentifier;
  BLOB ProviderSpecific;
};

/* 6504 */
typedef _WSANAMESPACE_INFOEXA WSANAMESPACE_INFOEXA;

/* 6505 */
typedef _WSANAMESPACE_INFOEXA *PWSANAMESPACE_INFOEXA;

/* 6506 */
typedef _WSANAMESPACE_INFOEXA *LPWSANAMESPACE_INFOEXA;

/* 6507 */
struct _WSANAMESPACE_INFOEXW
{
  GUID NSProviderId;
  DWORD dwNameSpace;
  BOOL fActive;
  DWORD dwVersion;
  LPWSTR lpszIdentifier;
  BLOB ProviderSpecific;
};

/* 6508 */
typedef _WSANAMESPACE_INFOEXW WSANAMESPACE_INFOEXW;

/* 6509 */
typedef _WSANAMESPACE_INFOEXW *PWSANAMESPACE_INFOEXW;

/* 6510 */
typedef _WSANAMESPACE_INFOEXW *LPWSANAMESPACE_INFOEXW;

/* 6511 */
typedef WSANAMESPACE_INFOA WSANAMESPACE_INFO;

/* 6512 */
typedef PWSANAMESPACE_INFOA PWSANAMESPACE_INFO;

/* 6513 */
typedef LPWSANAMESPACE_INFOA LPWSANAMESPACE_INFO;

/* 6514 */
typedef WSANAMESPACE_INFOEXA WSANAMESPACE_INFOEX;

/* 6515 */
typedef PWSANAMESPACE_INFOEXA PWSANAMESPACE_INFOEX;

/* 6516 */
typedef LPWSANAMESPACE_INFOEXA LPWSANAMESPACE_INFOEX;

/* 6517 */
struct pollfd
{
  SOCKET fd;
  SHORT events;
  SHORT revents;
};

/* 6518 */
typedef pollfd WSAPOLLFD;

/* 6519 */
typedef pollfd *PWSAPOLLFD;

/* 6520 */
typedef pollfd *LPWSAPOLLFD;

/* 6521 */
typedef sockaddr_in *LPSOCKADDR_IN;

/* 6522 */
typedef linger LINGER;

/* 6523 */
typedef linger *PLINGER;

/* 6524 */
typedef linger *LPLINGER;

/* 6525 */
typedef fd_set FD_SET;

/* 6526 */
typedef fd_set *PFD_SET;

/* 6527 */
typedef fd_set *LPFD_SET;

/* 6528 */
typedef hostent HOSTENT;

/* 6529 */
typedef hostent *PHOSTENT;

/* 6530 */
typedef hostent *LPHOSTENT;

/* 6531 */
typedef servent SERVENT;

/* 6532 */
typedef servent *PSERVENT;

/* 6533 */
typedef servent *LPSERVENT;

/* 6534 */
typedef protoent PROTOENT;

/* 6535 */
typedef protoent *PPROTOENT;

/* 6536 */
typedef protoent *LPPROTOENT;

/* 6537 */
typedef timeval TIMEVAL;

/* 6538 */
typedef timeval *PTIMEVAL;

/* 6539 */
typedef timeval *LPTIMEVAL;

/* 6541 */
union in6_addr___46CCC274F7B290215A66EE70CB5F323B
{
  UCHAR Byte[16];
  USHORT Word[8];
};

/* 6540 */
struct in6_addr
{
  in6_addr___46CCC274F7B290215A66EE70CB5F323B u;
};

/* 6542 */
typedef in6_addr IN6_ADDR;

/* 6543 */
typedef in6_addr *PIN6_ADDR;

/* 6544 */
typedef in6_addr *LPIN6_ADDR;

/* 6545 */
struct sockaddr_in6_old
{
  SHORT sin6_family;
  USHORT sin6_port;
  ULONG sin6_flowinfo;
  IN6_ADDR sin6_addr;
};

/* 6546 */
union sockaddr_gen
{
  sockaddr Address;
  sockaddr_in AddressIn;
  sockaddr_in6_old AddressIn6;
};

/* 6547 */
struct _INTERFACE_INFO
{
  ULONG iiFlags;
  sockaddr_gen iiAddress;
  sockaddr_gen iiBroadcastAddress;
  sockaddr_gen iiNetmask;
};

/* 6548 */
typedef _INTERFACE_INFO INTERFACE_INFO;

/* 6549 */
typedef _INTERFACE_INFO *LPINTERFACE_INFO;

/* 6550 */
struct _INTERFACE_INFO_EX
{
  ULONG iiFlags;
  SOCKET_ADDRESS iiAddress;
  SOCKET_ADDRESS iiBroadcastAddress;
  SOCKET_ADDRESS iiNetmask;
};

/* 6551 */
typedef _INTERFACE_INFO_EX INTERFACE_INFO_EX;

/* 6552 */
typedef _INTERFACE_INFO_EX *LPINTERFACE_INFO_EX;

/* 6553 */
enum _PMTUD_STATE : unsigned __int32
{
  IP_PMTUDISC_NOT_SET = 0x0,
  IP_PMTUDISC_DO = 0x1,
  IP_PMTUDISC_DONT = 0x2,
  IP_PMTUDISC_PROBE = 0x3,
  IP_PMTUDISC_MAX = 0x4,
};

/* 6554 */
typedef _PMTUD_STATE PMTUD_STATE;

/* 6555 */
typedef _PMTUD_STATE *PPMTUD_STATE;

/* 6557 */
union sockaddr_in6___21D370470BAAB911774FB64E0374D268
{
  ULONG sin6_scope_id;
  SCOPE_ID sin6_scope_struct;
};

/* 6556 */
struct sockaddr_in6
{
  ADDRESS_FAMILY sin6_family;
  USHORT sin6_port;
  ULONG sin6_flowinfo;
  IN6_ADDR sin6_addr;
  union
  {
    ULONG sin6_scope_id;
    SCOPE_ID sin6_scope_struct;
  };
};

/* 6558 */
typedef sockaddr_in6 SOCKADDR_IN6_LH;

/* 6559 */
typedef sockaddr_in6 *PSOCKADDR_IN6_LH;

/* 6560 */
typedef sockaddr_in6 *LPSOCKADDR_IN6_LH;

/* 6561 */
struct sockaddr_in6_w2ksp1
{
  __int16 sin6_family;
  USHORT sin6_port;
  ULONG sin6_flowinfo;
  in6_addr sin6_addr;
  ULONG sin6_scope_id;
};

/* 6562 */
typedef sockaddr_in6_w2ksp1 SOCKADDR_IN6_W2KSP1;

/* 6563 */
typedef sockaddr_in6_w2ksp1 *PSOCKADDR_IN6_W2KSP1;

/* 6564 */
typedef sockaddr_in6_w2ksp1 *LPSOCKADDR_IN6_W2KSP1;

/* 6565 */
typedef SOCKADDR_IN6_LH SOCKADDR_IN6;

/* 6566 */
typedef SOCKADDR_IN6_LH *PSOCKADDR_IN6;

/* 6567 */
typedef SOCKADDR_IN6_LH *LPSOCKADDR_IN6;

/* 6568 */
union _SOCKADDR_INET
{
  SOCKADDR_IN Ipv4;
  SOCKADDR_IN6 Ipv6;
  ADDRESS_FAMILY si_family;
};

/* 6569 */
typedef _SOCKADDR_INET SOCKADDR_INET;

/* 6570 */
typedef _SOCKADDR_INET *PSOCKADDR_INET;

/* 6571 */
struct _sockaddr_in6_pair
{
  PSOCKADDR_IN6 SourceAddress;
  PSOCKADDR_IN6 DestinationAddress;
};

/* 6572 */
typedef _sockaddr_in6_pair SOCKADDR_IN6_PAIR;

/* 6573 */
typedef _sockaddr_in6_pair *PSOCKADDR_IN6_PAIR;

/* 6574 */
enum MULTICAST_MODE_TYPE : unsigned __int32
{
  MCAST_INCLUDE = 0x0,
  MCAST_EXCLUDE = 0x1,
};

/* 6575 */
struct ip_mreq
{
  IN_ADDR imr_multiaddr;
  IN_ADDR imr_interface;
};

/* 6576 */
typedef ip_mreq IP_MREQ;

/* 6577 */
typedef ip_mreq *PIP_MREQ;

/* 6578 */
struct ip_mreq_source
{
  IN_ADDR imr_multiaddr;
  IN_ADDR imr_sourceaddr;
  IN_ADDR imr_interface;
};

/* 6579 */
typedef ip_mreq_source IP_MREQ_SOURCE;

/* 6580 */
typedef ip_mreq_source *PIP_MREQ_SOURCE;

/* 6581 */
struct ip_msfilter
{
  IN_ADDR imsf_multiaddr;
  IN_ADDR imsf_interface;
  MULTICAST_MODE_TYPE imsf_fmode;
  ULONG imsf_numsrc;
  IN_ADDR imsf_slist[1];
};

/* 6582 */
typedef ip_msfilter IP_MSFILTER;

/* 6583 */
typedef ip_msfilter *PIP_MSFILTER;

/* 6584 */
struct ipv6_mreq
{
  IN6_ADDR ipv6mr_multiaddr;
  ULONG ipv6mr_interface;
};

/* 6585 */
typedef ipv6_mreq IPV6_MREQ;

/* 6586 */
typedef ipv6_mreq *PIPV6_MREQ;

/* 6587 */
struct group_req
{
  ULONG gr_interface;
  SOCKADDR_STORAGE gr_group;
};

/* 6588 */
typedef group_req GROUP_REQ;

/* 6589 */
typedef group_req *PGROUP_REQ;

/* 6590 */
struct group_source_req
{
  ULONG gsr_interface;
  SOCKADDR_STORAGE gsr_group;
  SOCKADDR_STORAGE gsr_source;
};

/* 6591 */
typedef group_source_req GROUP_SOURCE_REQ;

/* 6592 */
typedef group_source_req *PGROUP_SOURCE_REQ;

/* 6593 */
struct group_filter
{
  ULONG gf_interface;
  SOCKADDR_STORAGE gf_group;
  MULTICAST_MODE_TYPE gf_fmode;
  ULONG gf_numsrc;
  SOCKADDR_STORAGE gf_slist[1];
};

/* 6594 */
typedef group_filter GROUP_FILTER;

/* 6595 */
typedef group_filter *PGROUP_FILTER;

/* 6596 */
struct in_pktinfo
{
  IN_ADDR ipi_addr;
  ULONG ipi_ifindex;
};

/* 6597 */
typedef in_pktinfo IN_PKTINFO;

/* 6598 */
typedef in_pktinfo *PIN_PKTINFO;

/* 6599 */
struct in6_pktinfo
{
  IN6_ADDR ipi6_addr;
  ULONG ipi6_ifindex;
};

/* 6600 */
typedef in6_pktinfo IN6_PKTINFO;

/* 6601 */
typedef in6_pktinfo *PIN6_PKTINFO;

/* 6602 */
struct in_pktinfo_ex
{
  IN_PKTINFO pkt_info;
  SCOPE_ID scope_id;
};

/* 6603 */
typedef in_pktinfo_ex IN_PKTINFO_EX;

/* 6604 */
typedef in_pktinfo_ex *PIN_PKTINFO_EX;

/* 6605 */
struct in6_pktinfo_ex
{
  IN6_PKTINFO pkt_info;
  SCOPE_ID scope_id;
};

/* 6606 */
typedef in6_pktinfo_ex IN6_PKTINFO_EX;

/* 6607 */
typedef in6_pktinfo_ex *PIN6_PKTINFO_EX;

/* 6608 */
struct in_recverr
{
  IPPROTO protocol;
  ULONG info;
  UINT8 type;
  UINT8 code;
};

/* 6609 */
typedef in_recverr IN_RECVERR;

/* 6610 */
typedef in_recverr *PIN_RECVERR;

/* 6611 */
struct icmp_error_info
{
  SOCKADDR_INET srcaddress;
  IPPROTO protocol;
  UINT8 type;
  UINT8 code;
};

/* 6612 */
typedef icmp_error_info ICMP_ERROR_INFO;

/* 6613 */
typedef icmp_error_info *PICMP_ERROR_INFO;

/* 6614 */
typedef ADDRINFOA ADDRINFOT;

/* 6615 */
typedef ADDRINFOA *PADDRINFOT;

/* 6616 */
typedef ADDRINFOA ADDRINFO;

/* 6617 */
typedef ADDRINFOA *LPADDRINFO;

/* 6618 */
typedef ADDRINFOEXA ADDRINFOEX;

/* 6619 */
typedef ADDRINFOEXA *PADDRINFOEX;

/* 6620 */
typedef void (__cdecl *LPLOOKUPSERVICE_COMPLETION_ROUTINE)(DWORD, DWORD, LPWSAOVERLAPPED);

/* 6621 */
typedef int socklen_t;

/* 6622 */
enum base_packet_id_t : unsigned __int32
{
  RPC_OK = 0x0,
  RPC_UNK = 0x1,
  RPC_MEM = 0x2,
  base_packet_id_last = 0x3,
};

/* 6623 */
#pragma pack(push, 1)
struct rpc_packet_t
{
  uint32 length;
  uchar code;
};
#pragma pack(pop)

/* 6624 */
enum rpc_notification_type_t : unsigned __int32
{
  rnt_unknown = 0x0,
  rnt_msg = 0x1,
  rnt_warning = 0x2,
  rnt_error = 0x3,
};

/* 6732 */
typedef int __cdecl ioctl_handler_t(rpc_engine_t *, int, const void *, size_t, void **, ssize_t *);

/* 6736 */
struct __cppobj qvector_rpc_packet_type_desc_t_
{
  rpc_packet_type_desc_t *array;
  size_t n;
  size_t alloc;
};

/* 6739 */
typedef qvector_rpc_packet_type_desc_t_ rpc_packet_type_desc_vec_t;

/* 6625 */
struct __cppobj rpc_engine_t
{
  rpc_engine_t_vtbl *__vftable /*VFT*/;
  bool network_error;
  ioctl_handler_t *ioctl_handler;
  int recv_timeout;
  bool is_client;
  bool logged_in;
  rpc_packet_type_desc_vec_t ptypes;
};

/* 6626 */
struct idarpc_stream_t;

/* 6627 */
enum progress_loop_ctrl_t : unsigned __int32
{
  plc_proceed = 0x0,
  plc_skip_iter = 0x1,
  plc_cancel = 0x2,
};

/* 6628 */
typedef progress_loop_ctrl_t __cdecl irs_progress_cb_t(bool, size_t, size_t, void *);

/* 6629 */
struct __cppobj irs_cancellable_op_t
{
  idarpc_stream_t *irs;
};

/* 6630 */
typedef qtime64_t utc_timestamp_t;

/* 6631 */
typedef uint64 lofi_timestamp_t;

/* 6632 */
struct __cppobj network_client_handler_t
{
  network_client_handler_t_vtbl *__vftable /*VFT*/;
  FILE *channels[16];
  idarpc_stream_t *irs;
  qstring peer_name;
  uint32 session_id;
  utc_timestamp_t session_start;
  bool verbose;
};

/* 6633 */
/*struct network_client_handler_t_vtbl
{
  void (__fastcall *_del_network_client_handler_t)(network_client_handler_t *__hidden this);
  bool (__fastcall *handle)(network_client_handler_t *__hidden this);
  void (__fastcall *shutdown_gracefully)(network_client_handler_t *__hidden this, int signum);
};
*/

/* 6638 */
#pragma pack(push, 8)
struct __cppobj std__less_network_client_handler_t__P_
{
};
#pragma pack(pop)

/* 6715 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P__
{
};
#pragma pack(pop)

/* 6652 */
typedef std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P_ std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____Node;

/* 6653 */
typedef std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____Node *std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____Nodeptr;

/* 6654 */
typedef std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____Nodeptr std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______Nodeptr;

/* 6659 */
typedef size_t std___Simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____size_type;

/* 6660 */
typedef std___Simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____size_type std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____size_type;

/* 6656 */
#pragma pack(push, 8)
struct __cppobj std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P___ : std___Container_base
{
  std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______Nodeptr _Myhead;
  std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____size_type _Mysize;
};
#pragma pack(pop)

/* 6719 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P____std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____true_ : std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P__
{
  std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P___ _Myval2;
};
#pragma pack(pop)

/* 6718 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__less_network_client_handler_t__P___std___Compressed_pair_std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P____std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____true___true_ : std__less_network_client_handler_t__P_
{
  std___Compressed_pair_std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P____std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____true_ _Myval2;
};
#pragma pack(pop)

/* 6637 */
#pragma pack(push, 8)
struct __cppobj std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false__
{
  std___Compressed_pair_std__less_network_client_handler_t__P___std___Compressed_pair_std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P____std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____true___true_ _Mypair;
};
#pragma pack(pop)

/* 6636 */
#pragma pack(push, 8)
struct __cppobj std__map_network_client_handler_t__P____qthread_t__P_ : std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false__
{
};
#pragma pack(pop)

/* 6724 */
typedef std__map_network_client_handler_t__P____qthread_t__P_ client_handlers_list_t__storage_t;

/* 6634 */
struct __cppobj client_handlers_list_t
{
  client_handlers_list_t_vtbl *__vftable /*VFT*/;
  client_handlers_list_t__storage_t storage;
};

/* 6635 */
/*struct client_handlers_list_t_vtbl
{
  void (__fastcall *_del_client_handlers_list_t)(client_handlers_list_t *__hidden this);
  void (__fastcall *lock)(client_handlers_list_t *__hidden this);
  void (__fastcall *unlock)(client_handlers_list_t *__hidden this);
  bool (__fastcall *is_multi_threaded)(const client_handlers_list_t *__hidden this);
};
*/

/* 6639 */
typedef std__less_network_client_handler_t__P_ std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false___key_compare;

/* 6640 */
typedef std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false___key_compare std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____key_compare;

/* 6641 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P__
{
};
#pragma pack(pop)

/* 6642 */
#pragma pack(push, 8)
struct __cppobj std__pair_network_client_handler_t__Pconst____qthread_t__P_
{
  network_client_handler_t *const first;
  __qthread_t *second;
};
#pragma pack(pop)

/* 6643 */
typedef std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P__ std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false___allocator_type;

/* 6644 */
typedef std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false___allocator_type std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____allocator_type;

/* 6655 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______Nodeptr std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______Nodeptr;

/* 6647 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ : std___Iterator_base0
{
  std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______Nodeptr _Ptr;
};
#pragma pack(pop)

/* 6646 */
#pragma pack(push, 8)
struct __cppobj std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____
{
};
#pragma pack(pop)

/* 6645 */
#pragma pack(push, 8)
struct __cppobj std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ : std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____
{
};
#pragma pack(pop)

/* 6649 */
typedef std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P_ *std___Rebind_pointer_t_void__P__std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P__;

/* 6650 */
typedef std___Rebind_pointer_t_void__P__std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P__ std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P____Nodeptr;

/* 6651 */
typedef std__pair_network_client_handler_t__Pconst____qthread_t__P_ std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P___value_type;

/* 6648 */
#pragma pack(push, 8)
struct __cppobj std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P_
{
  std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P____Nodeptr _Left;
  std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P____Nodeptr _Parent;
  std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P____Nodeptr _Right;
  char _Color;
  char _Isnil;
  std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P___value_type _Myval;
};
#pragma pack(pop)

/* 6657 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______Unchecked_const_iterator;

/* 6658 */
#pragma pack(push, 8)
struct std___Tree_id_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P___P_
{
  std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P_ *_Parent;
  std___Tree_child _Child;
};
#pragma pack(pop)

/* 6661 */
typedef std__pair_network_client_handler_t__Pconst____qthread_t__P_ std___Simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____value_type;

/* 6662 */
typedef std___Simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____value_type std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____value_type;

/* 6663 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____value_type std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______value_type;

/* 6664 */
typedef const std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______value_type *std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______reference;

/* 6665 */
typedef const std___Simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____value_type *std___Simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____const_pointer;

/* 6666 */
typedef std___Simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____const_pointer std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____const_pointer;

/* 6667 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____const_pointer std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______pointer;

/* 6668 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____value_type std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______value_type;

/* 6669 */
typedef const std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______value_type *std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______reference;

/* 6670 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____const_pointer std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______pointer;

/* 6671 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____value_type std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______value_type;

/* 6672 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______value_type *std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______reference;

/* 6673 */
typedef std___Simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____value_type *std___Simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____pointer;

/* 6674 */
typedef std___Simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____pointer std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____pointer;

/* 6675 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____pointer std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______pointer;

/* 6676 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____
{
};
#pragma pack(pop)

/* 6677 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____value_type std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______value_type;

/* 6678 */
typedef std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______value_type *std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______reference;

/* 6679 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____pointer std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______pointer;

/* 6680 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____iterator;

/* 6681 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____const_iterator;

/* 6682 */
typedef std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false_____Unchecked_iterator;

/* 6683 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false_____Unchecked_const_iterator;

/* 6684 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____
{
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ current;
};
#pragma pack(pop)

/* 6685 */
typedef std__pair_network_client_handler_t__Pconst____qthread_t__P_ *std___Iter_ref_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____;

/* 6686 */
typedef std___Iter_ref_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____ std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______reference;

/* 6687 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______pointer std___Iterator_traits_base_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______pointer;

/* 6688 */
typedef std___Iterator_traits_base_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______pointer std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______pointer;

/* 6689 */
typedef __int64 std___Iter_diff_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____;

/* 6690 */
typedef std___Iter_diff_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____ std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______difference_type;

/* 6691 */
typedef std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____ std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____reverse_iterator;

/* 6692 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ current;
};
#pragma pack(pop)

/* 6693 */
typedef const std__pair_network_client_handler_t__Pconst____qthread_t__P_ *std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____;

/* 6694 */
typedef std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______reference;

/* 6695 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______pointer std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______pointer;

/* 6696 */
typedef std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______pointer std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______pointer;

/* 6697 */
typedef __int64 std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____;

/* 6698 */
typedef std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_______difference_type;

/* 6699 */
typedef std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____ std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____const_reverse_iterator;

/* 6700 */
typedef size_t std___Default_allocator_traits_std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P_____size_type;

/* 6701 */
typedef std___Default_allocator_traits_std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P_____size_type std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____size_type;

/* 6702 */
struct std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false___value_compare;

/* 6703 */
typedef struct std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false___value_compare std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____value_compare;

/* 6704 */
typedef std__pair_network_client_handler_t__Pconst____qthread_t__P_ std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false___value_type;

/* 6705 */
typedef std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false___value_type std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____value_type;

/* 6706 */
#pragma pack(push, 8)
struct __cppobj std__initializer_list_std__pair_network_client_handler_t__Pconst____qthread_t__P__
{
  std__pair_network_client_handler_t__Pconst____qthread_t__P_ *_First;
  std__pair_network_client_handler_t__Pconst____qthread_t__P_ *_Last;
};
#pragma pack(pop)

/* 6707 */
typedef std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P_ std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P____value_type;

/* 6708 */
typedef std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P____value_type std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P_____value_type;

/* 6709 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P_____value_type *std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P_____pointer;

/* 6710 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P_____pointer std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false_____Nodeptr;

/* 6711 */
typedef network_client_handler_t *std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false___key_type;

/* 6712 */
typedef std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false___key_type std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____key_type;

/* 6713 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____
{
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ first;
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ second;
};
#pragma pack(pop)

/* 6714 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P______std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P_____
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ first;
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P____ second;
};
#pragma pack(pop)

/* 6716 */
typedef std__allocator_std___Tree_node_std__pair_network_client_handler_t__Pconst____qthread_t__P___void__P__ std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false_____Alnode;

/* 6717 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_network_client_handler_t__Pconst____qthread_t__P___ std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false_____Scary_val;

/* 6720 */
typedef std___Tree_std___Tmap_traits_network_client_handler_t__P____qthread_t__P__std__less_network_client_handler_t__P___std__allocator_std__pair_network_client_handler_t__Pconst____qthread_t__P____false____allocator_type std__map_network_client_handler_t__P____qthread_t__P___allocator_type;

/* 6721 */
typedef std__less_network_client_handler_t__P_ std__map_network_client_handler_t__P____qthread_t__P___key_compare;

/* 6722 */
typedef __qthread_t *std__map_network_client_handler_t__P____qthread_t__P___mapped_type;

/* 6723 */
typedef network_client_handler_t *std__map_network_client_handler_t__P____qthread_t__P___key_type;

/* 6725 */
struct __cppobj mt_client_handlers_list_t : client_handlers_list_t
{
  qmutex_t mutex;
};

/* 6726 */
/*struct mt_client_handlers_list_t_vtbl
{
  void (__fastcall *_del_mt_client_handlers_list_t)(mt_client_handlers_list_t *__hidden this);
  void (__fastcall *lock)(mt_client_handlers_list_t *__hidden this);
  void (__fastcall *unlock)(mt_client_handlers_list_t *__hidden this);
  bool (__fastcall *is_multi_threaded)(const mt_client_handlers_list_t *__hidden this);
};
*/

/* 6727 */
struct __cppobj base_dispatcher_t
{
  base_dispatcher_t_vtbl *__vftable /*VFT*/;
  qstring ipv4_address;
  qstring certchain;
  qstring privkey;
  idarpc_stream_t *irs;
  client_handlers_list_t *clients_list;
  ushort port_number;
  bool use_tls;
  bool verbose;
};

/* 6728 */
/*struct base_dispatcher_t_vtbl
{
  void (__fastcall *_del_base_dispatcher_t)(base_dispatcher_t *__hidden this);
  void (__fastcall *collect_cliopts)(base_dispatcher_t *__hidden this, cliopts_t *out);
  network_client_handler_t *(__fastcall *new_client_handler)(base_dispatcher_t *__hidden this, idarpc_stream_t *_irs);
  void (__fastcall *shutdown_gracefully)(base_dispatcher_t *__hidden this, int signum);
};
*/

/* 6729 */
struct __cppobj rpc_connection_params_t
{
  size_t cb;
  qstring host;
  ushort port;
  bool tls;
};

/* 6730 */
struct __cppobj rpc_packet_data_t
{
  rpc_packet_data_t_vtbl *__vftable /*VFT*/;
  uchar code;
};

/* 6731 */
/*struct rpc_packet_data_t_vtbl
{
  void (__fastcall *_del_rpc_packet_data_t)(rpc_packet_data_t *__hidden this);
  void (__fastcall *serialize)(const rpc_packet_data_t *__hidden this, bytevec_t *out, int version);
  bool (__fastcall *deserialize)(rpc_packet_data_t *__hidden this, const uchar **ptr, size_t len, int version);
};
*/

/* 6733 */
typedef rpc_packet_data_t *__cdecl rpc_packet_instantiator_t(const uchar *, size_t, int);

/* 6734 */
struct rpc_packet_type_desc_t
{
  uchar code;
  const char *name;
  rpc_packet_instantiator_t *instantiate;
};

/* 6735 */
struct ida_movable_type_rpc_packet_type_desc_t_
{
};

/* 6737 */
typedef rpc_packet_type_desc_t *qvector_rpc_packet_type_desc_t___iterator;

/* 6738 */
typedef rpc_packet_type_desc_t *qvector_rpc_packet_type_desc_t___const_iterator;

/* 6740 */
/*struct rpc_engine_t_vtbl
{
  void (__fastcall *_del_rpc_engine_t)(rpc_engine_t *__hidden this);
  rpc_packet_t *(__fastcall *send_request_and_receive_reply)(rpc_engine_t *__hidden this, bytevec_t *pkt);
  idarpc_stream_t *(__fastcall *get_irs)(const rpc_engine_t *__hidden this);
  ssize_t (__fastcall *send_notif)(rpc_engine_t *__hidden this, int code, const char *format, va_list va);
  bool (__fastcall *get_broken_connection)(rpc_engine_t *__hidden this);
  void (__fastcall *set_broken_connection)(rpc_engine_t *__hidden this);
};
*/

/* 6741 */
struct __cppobj recording_rpc_engine_t : rpc_engine_t
{
  idarpc_stream_t *rpc_irs;
  bool our_irs;
  FILE *conv;
};

/* 6742 */
/*struct recording_rpc_engine_t_vtbl
{
  void (__fastcall *_del_recording_rpc_engine_t)(recording_rpc_engine_t *__hidden this);
  rpc_packet_t *(__fastcall *send_request_and_receive_reply)(recording_rpc_engine_t *__hidden this, bytevec_t *pkt);
  idarpc_stream_t *(__fastcall *get_irs)(const recording_rpc_engine_t *__hidden this);
  ssize_t (__fastcall *send_notif)(rpc_engine_t *__hidden this, int code, const char *format, va_list va);
  bool (__fastcall *get_broken_connection)(rpc_engine_t *__hidden this);
  void (__fastcall *set_broken_connection)(rpc_engine_t *__hidden this);
  bool (__fastcall *get_conversation_path)(const recording_rpc_engine_t *__hidden this, qstring *);
  void (__fastcall *format_packet_data)(const recording_rpc_engine_t *__hidden this, qstring *out, const rpc_packet_data_t *data, const char *line_prefix);
};
*/

/* 6745 */
typedef recording_rpc_engine_t *__cdecl generic_client_t__rpc_engine_creator_t(struct idarpc_stream_t *);

/* 6743 */
struct __cppobj generic_client_t
{
  generic_client_t_vtbl *__vftable /*VFT*/;
  generic_client_t__rpc_engine_creator_t *create_rpc_engine;
  recording_rpc_engine_t *rpc_engine;
  qstring wait_dialog_contents;
  const char *const server_name;
  const int protocol_version;
  bool started_receiving_response;
  bool was_user_cancelled;
};

/* 6744 */
/*struct generic_client_t_vtbl
{
  void (__fastcall *init)(generic_client_t *__hidden this, idarpc_stream_t *_irs);
  void (__fastcall *_del_generic_client_t)(generic_client_t *__hidden this);
  bool (__fastcall *try_reconnect)(generic_client_t *__hidden this, qstring *errbuf);
  rpc_packet_data_t *(__fastcall *create_failure_packet)(generic_client_t *__hidden this, const char *errmsg);
  bool (__fastcall *is_handshake_packet)(generic_client_t *__hidden this, const rpc_packet_data_t *);
};
*/

/* 6746 */
enum jtype_t : unsigned __int32
{
  JT_UNKNOWN = 0x0,
  JT_NUM = 0x1,
  JT_STR = 0x2,
  JT_OBJ = 0x3,
  JT_ARR = 0x4,
  JT_BOOL = 0x5,
};

/* 6758 */
struct __cppobj qvector_kvp_t_
{
  kvp_t *array;
  size_t n;
  size_t alloc;
};

/* 6747 */
struct __cppobj jobj_t : qvector_kvp_t_
{
};

/* 6752 */
struct __cppobj qvector_jvalue_t_
{
  jvalue_t *array;
  size_t n;
  size_t alloc;
};

/* 6755 */
typedef qvector_jvalue_t_ jvalues_t;

/* 6748 */
struct __cppobj jarr_t
{
  jvalues_t values;
};

/* 6750 */
union jvalue_t___E3629753B7679DAEDC4DC0D611766B23
{
  int64 _num;
  qstring *_str;
  jobj_t *_obj;
  jarr_t *_arr;
  bool _bool;
};

/* 6749 */
struct __cppobj jvalue_t
{
  jtype_t _type;
  union
  {
    int64 _num;
    qstring *_str;
    jobj_t *_obj;
    jarr_t *_arr;
    bool _bool;
  };
};

/* 6751 */
struct ida_movable_type_jvalue_t_
{
};

/* 6753 */
typedef jvalue_t *qvector_jvalue_t___iterator;

/* 6754 */
typedef jvalue_t *qvector_jvalue_t___const_iterator;

/* 6756 */
struct kvp_t
{
  qstring key;
  jvalue_t value;
};

/* 6757 */
struct ida_movable_type_kvp_t_
{
};

/* 6759 */
typedef kvp_t *qvector_kvp_t___iterator;

/* 6760 */
typedef kvp_t *qvector_kvp_t___const_iterator;

/* 6761 */
struct ida_movable_type_jobj_t_
{
};

/* 6762 */
struct ida_movable_type_jarr_t_
{
};

/* 6763 */
typedef uchar problist_id_t;

/* 6764 */
struct __cppobj qffblk_t
{
  unsigned int attrib;
  __time64_t time_create;
  __time64_t time_access;
  __time64_t time_write;
  __int64 size;
  char name[260];
  intptr_t handle;
  int attr;
  unsigned __int16 ff_ftime;
  unsigned __int16 ff_fdate;
};

/* 6765 */
struct __cppobj qffblk64_t
{
  int attrib;
  char name[260];
  uint64 size;
  uint16 ff_fdate;
  uint16 ff_ftime;
  qffblk_t base;
};

/* 6766 */
typedef off_t regoff_t;

/* 6767 */
struct regex_t
{
  int re_magic;
  size_t re_nsub;
  const char *re_endp;
  void *re_g;
};

/* 6768 */
struct regmatch_t
{
  regoff_t rm_so;
  regoff_t rm_eo;
};

/* 6769 */
enum _C7C212E52085C0E483DB7F2B4EDAB218 : unsigned __int32
{
  REG_ASSERT = 0x1,
  REG_BADBR = 0x2,
  REG_BADPAT = 0x3,
  REG_BADRPT = 0x4,
  REG_EBRACE = 0x5,
  REG_EBRACK = 0x6,
  REG_ECOLLATE = 0x7,
  REG_ECTYPE = 0x8,
  REG_EESCAPE = 0x9,
  REG_EMPTY = 0xA,
  REG_EPAREN = 0xB,
  REG_ERANGE = 0xC,
  REG_ESIZE = 0xD,
  REG_ESPACE = 0xE,
  REG_ESUBREG = 0xF,
  REG_INVARG = 0x10,
  REG_NOMATCH = 0x11,
};

/* 6770 */
struct __cppobj refcnted_regex_t : qrefcnt_obj_t
{
  regex_t regex;
};

/* 6771 */
/*struct refcnted_regex_t_vtbl
{
  void (__fastcall *release)(refcnted_regex_t *__hidden this);
  void (__fastcall *_del_refcnted_regex_t)(refcnted_regex_t *__hidden this);
};
*/

/* 6772 */
struct __cppobj qrefcnt_t_refcnted_regex_t_
{
  refcnted_regex_t *ptr;
};

/* 6773 */
typedef qrefcnt_t_refcnted_regex_t_ regex_ptr_t;

/* 6777 */
#pragma pack(push, 8)
struct __cppobj std__less__qstring_char__
{
};
#pragma pack(pop)

/* 6854 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P__
{
};
#pragma pack(pop)

/* 6791 */
typedef std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P_ std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______Node;

/* 6792 */
typedef std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______Node *std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______Nodeptr;

/* 6793 */
typedef std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______Nodeptr std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______Nodeptr;

/* 6798 */
typedef size_t std___Simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____size_type;

/* 6799 */
typedef std___Simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____size_type std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______size_type;

/* 6795 */
#pragma pack(push, 8)
struct __cppobj std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____ : std___Container_base
{
  std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______Nodeptr _Myhead;
  std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______size_type _Mysize;
};
#pragma pack(pop)

/* 6858 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P____std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______true_ : std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P__
{
  std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____ _Myval2;
};
#pragma pack(pop)

/* 6857 */
#pragma pack(push, 8)
struct __cppobj std___Compressed_pair_std__less__qstring_char____std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P____std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______true___true_ : std__less__qstring_char__
{
  std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P____std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______true_ _Myval2;
};
#pragma pack(pop)

/* 6776 */
#pragma pack(push, 8)
struct __cppobj std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false__
{
  std___Compressed_pair_std__less__qstring_char____std___Compressed_pair_std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P____std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______true___true_ _Mypair;
};
#pragma pack(pop)

/* 6775 */
#pragma pack(push, 8)
struct __cppobj std__map__qstring_char___qrefcnt_t_refcnted_regex_t__ : std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false__
{
};
#pragma pack(pop)

/* 6863 */
typedef std__map__qstring_char___qrefcnt_t_refcnted_regex_t__ regex_cache_t__regex_cache_map_t;

/* 6774 */
struct __cppobj regex_cache_t
{
  regex_cache_t__regex_cache_map_t cache;
};

/* 6778 */
typedef std__less__qstring_char__ std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false___key_compare;

/* 6779 */
typedef std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false___key_compare std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____key_compare;

/* 6780 */
#pragma pack(push, 8)
struct __cppobj std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t___
{
};
#pragma pack(pop)

/* 6781 */
#pragma pack(push, 8)
struct __cppobj std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t__
{
  const _qstring_char_ first;
  qrefcnt_t_refcnted_regex_t_ second;
};
#pragma pack(pop)

/* 6782 */
typedef std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t___ std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false___allocator_type;

/* 6783 */
typedef std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false___allocator_type std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____allocator_type;

/* 6794 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______Nodeptr std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________Nodeptr;

/* 6786 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ : std___Iterator_base0
{
  std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________Nodeptr _Ptr;
};
#pragma pack(pop)

/* 6785 */
#pragma pack(push, 8)
struct __cppobj std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____
{
};
#pragma pack(pop)

/* 6784 */
#pragma pack(push, 8)
struct __cppobj std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ : std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____
{
};
#pragma pack(pop)

/* 6788 */
typedef std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P_ *std___Rebind_pointer_t_void__P__std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P__;

/* 6789 */
typedef std___Rebind_pointer_t_void__P__std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P__ std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P____Nodeptr;

/* 6790 */
typedef std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t__ std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P___value_type;

/* 6787 */
#pragma pack(push, 8)
struct __cppobj std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P_
{
  std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P____Nodeptr _Left;
  std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P____Nodeptr _Parent;
  std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P____Nodeptr _Right;
  char _Color;
  char _Isnil;
  std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P___value_type _Myval;
};
#pragma pack(pop)

/* 6796 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______Unchecked_const_iterator;

/* 6797 */
#pragma pack(push, 8)
struct std___Tree_id_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P___P_
{
  std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P_ *_Parent;
  std___Tree_child _Child;
};
#pragma pack(pop)

/* 6800 */
typedef std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t__ std___Simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____value_type;

/* 6801 */
typedef std___Simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____value_type std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______value_type;

/* 6802 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______value_type std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______value_type;

/* 6803 */
typedef const std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______value_type *std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______reference;

/* 6804 */
typedef const std___Simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____value_type *std___Simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____const_pointer;

/* 6805 */
typedef std___Simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____const_pointer std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______const_pointer;

/* 6806 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______const_pointer std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______pointer;

/* 6807 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______value_type std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______value_type;

/* 6808 */
typedef const std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______value_type *std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______reference;

/* 6809 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______const_pointer std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______pointer;

/* 6810 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______value_type std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______value_type;

/* 6811 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______value_type *std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______reference;

/* 6812 */
typedef std___Simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____value_type *std___Simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____pointer;

/* 6813 */
typedef std___Simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____pointer std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______pointer;

/* 6814 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______pointer std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______pointer;

/* 6815 */
#pragma pack(push, 8)
struct __cppobj std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ : std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____
{
};
#pragma pack(pop)

/* 6816 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______value_type std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______value_type;

/* 6817 */
typedef std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______value_type *std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______reference;

/* 6818 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______pointer std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______pointer;

/* 6819 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____iterator;

/* 6820 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____const_iterator;

/* 6821 */
typedef std___Tree_unchecked_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false_____Unchecked_iterator;

/* 6822 */
typedef std___Tree_unchecked_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false_____Unchecked_const_iterator;

/* 6823 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______
{
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ current;
};
#pragma pack(pop)

/* 6824 */
typedef std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t__ *std___Iter_ref_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______;

/* 6825 */
typedef std___Iter_ref_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______ std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________reference;

/* 6826 */
typedef std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______pointer std___Iterator_traits_base_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________pointer;

/* 6827 */
typedef std___Iterator_traits_base_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________pointer std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________pointer;

/* 6828 */
typedef __int64 std___Iter_diff_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______;

/* 6829 */
typedef std___Iter_diff_t_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______ std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________difference_type;

/* 6830 */
typedef std__reverse_iterator_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______ std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____reverse_iterator;

/* 6831 */
#pragma pack(push, 8)
struct __cppobj std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ current;
};
#pragma pack(pop)

/* 6832 */
typedef const std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t__ *std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______;

/* 6833 */
typedef std___Iter_ref_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________reference;

/* 6834 */
typedef std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______pointer std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________pointer;

/* 6835 */
typedef std___Iterator_traits_base_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________pointer std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________pointer;

/* 6836 */
typedef __int64 std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______;

/* 6837 */
typedef std___Iter_diff_t_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______ std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t________difference_type;

/* 6838 */
typedef std__reverse_iterator_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______ std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____const_reverse_iterator;

/* 6839 */
typedef size_t std___Default_allocator_traits_std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______size_type;

/* 6840 */
typedef std___Default_allocator_traits_std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______size_type std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____size_type;

/* 6841 */
struct std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false___value_compare;

/* 6842 */
typedef struct std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false___value_compare std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____value_compare;

/* 6843 */
typedef std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t__ std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false___value_type;

/* 6844 */
typedef std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false___value_type std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____value_type;

/* 6845 */
#pragma pack(push, 8)
struct __cppobj std__initializer_list_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t___
{
  std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t__ *_First;
  std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t__ *_Last;
};
#pragma pack(pop)

/* 6846 */
typedef std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P_ std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P____value_type;

/* 6847 */
typedef std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P____value_type std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P_____value_type;

/* 6848 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P_____value_type *std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P_____pointer;

/* 6849 */
typedef std___Default_allocator_traits_std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P_____pointer std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false_____Nodeptr;

/* 6850 */
typedef _qstring_char_ std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false___key_type;

/* 6851 */
typedef std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false___key_type std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____key_type;

/* 6852 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______
{
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ first;
  std___Tree_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ second;
};
#pragma pack(pop)

/* 6853 */
#pragma pack(push, 8)
struct __cppobj std__pair_std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_______std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t______
{
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ first;
  std___Tree_const_iterator_std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____ second;
};
#pragma pack(pop)

/* 6855 */
typedef std__allocator_std___Tree_node_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____void__P__ std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false_____Alnode;

/* 6856 */
typedef std___Tree_val_std___Tree_simple_types_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t____ std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false_____Scary_val;

/* 6859 */
typedef std___Tree_std___Tmap_traits__qstring_char___qrefcnt_t_refcnted_regex_t___std__less__qstring_char____std__allocator_std__pair_const__qstring_char___qrefcnt_t_refcnted_regex_t_____false____allocator_type std__map__qstring_char___qrefcnt_t_refcnted_regex_t____allocator_type;

/* 6860 */
typedef std__less__qstring_char__ std__map__qstring_char___qrefcnt_t_refcnted_regex_t____key_compare;

/* 6861 */
typedef qrefcnt_t_refcnted_regex_t_ std__map__qstring_char___qrefcnt_t_refcnted_regex_t____mapped_type;

/* 6862 */
typedef _qstring_char_ std__map__qstring_char___qrefcnt_t_refcnted_regex_t____key_type;

/* 6864 */
enum regval_type_t : unsigned __int32
{
  reg_unknown = 0x0,
  reg_sz = 0x1,
  reg_binary = 0x3,
  reg_dword = 0x4,
};

/* 6865 */
struct ida_movable_type_sreg_range_t_
{
};

/* 6866 */
struct __cppobj string_info_t
{
  ea_t ea;
  int length;
  int type;
};

/* 6867 */
struct ida_movable_type_string_info_t_
{
};

/* 6868 */
enum struc_error_t : unsigned __int32
{
  STRUC_ERROR_MEMBER_OK = 0x0,
  STRUC_ERROR_MEMBER_NAME = 0xFFFFFFFF,
  STRUC_ERROR_MEMBER_OFFSET = 0xFFFFFFFE,
  STRUC_ERROR_MEMBER_SIZE = 0xFFFFFFFD,
  STRUC_ERROR_MEMBER_TINFO = 0xFFFFFFFC,
  STRUC_ERROR_MEMBER_STRUCT = 0xFFFFFFFB,
  STRUC_ERROR_MEMBER_UNIVAR = 0xFFFFFFFA,
  STRUC_ERROR_MEMBER_VARLAST = 0xFFFFFFF9,
  STRUC_ERROR_MEMBER_NESTED = 0xFFFFFFF8,
};

/* 6869 */
enum smt_code_t : unsigned __int32
{
  SMT_BADARG = 0xFFFFFFFA,
  SMT_NOCOMPAT = 0xFFFFFFFB,
  SMT_WORSE = 0xFFFFFFFC,
  SMT_SIZE = 0xFFFFFFFD,
  SMT_ARRAY = 0xFFFFFFFE,
  SMT_OVERLAP = 0xFFFFFFFF,
  SMT_FAILED = 0x0,
  SMT_OK = 0x1,
  SMT_KEEP = 0x2,
};

/* 6870 */
struct __cppobj struct_field_visitor_t
{
  struct_field_visitor_t_vtbl *__vftable /*VFT*/;
};

/* 6871 */
/*struct struct_field_visitor_t_vtbl
{
  int (__fastcall *visit_field)(struct_field_visitor_t *__hidden this, struc_t *sptr, member_t *mptr);
};
*/

/* 6872 */
struct __cppobj try_handler_t : rangevec_t
{
  sval_t disp;
  int fpreg;
};

/* 6873 */
struct ida_movable_type_try_handler_t_
{
};

/* 6874 */
struct __cppobj seh_t : try_handler_t
{
  rangevec_t filter;
  ea_t seh_code;
};

/* 6875 */
struct ida_movable_type_seh_t_
{
};

/* 6876 */
struct __cppobj catch_t : try_handler_t
{
  sval_t obj;
  sval_t type_id;
};

/* 6877 */
struct ida_movable_type_catch_t_
{
};

/* 6878 */
struct __cppobj qvector_catch_t_
{
  catch_t *array;
  size_t n;
  size_t alloc;
};

/* 6879 */
typedef catch_t *qvector_catch_t___iterator;

/* 6880 */
typedef catch_t *qvector_catch_t___const_iterator;

/* 6881 */
typedef qvector_catch_t_ catchvec_t;

/* 6882 */
struct __cppobj tryblk_t : rangevec_t
{
  char reserve[72];
  uchar cb;
  uchar kind;
  uchar level;
};

/* 6883 */
struct ida_movable_type_tryblk_t_
{
};

/* 6884 */
struct __cppobj qvector_tryblk_t_
{
  tryblk_t *array;
  size_t n;
  size_t alloc;
};

/* 6885 */
typedef tryblk_t *qvector_tryblk_t___iterator;

/* 6886 */
typedef tryblk_t *qvector_tryblk_t___const_iterator;

/* 6887 */
typedef qvector_tryblk_t_ tryblks_t;

